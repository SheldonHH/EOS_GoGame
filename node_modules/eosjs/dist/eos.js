(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Eos = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":2,"./asn1/base":4,"./asn1/constants":8,"./asn1/decoders":10,"./asn1/encoders":13,"bn.js":23}],2:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":1,"inherits":146,"vm":211}],3:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":4,"buffer":55,"inherits":146}],4:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":3,"./node":5,"./reporter":6}],5:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be ommited only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":4,"minimalistic-assert":155}],6:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":146}],7:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":8}],8:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":7}],9:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":1,"inherits":146}],10:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":9,"./pem":11}],11:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":9,"buffer":55,"inherits":146}],12:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":1,"buffer":55,"inherits":146}],13:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":12,"./pem":14}],14:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":12,"inherits":146}],15:[function(require,module,exports){
(function (global){
'use strict';

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"util/":210}],16:[function(require,module,exports){
// base-x encoding
// Forked from https://github.com/cryptocoinjs/bs58
// Originally written by Mike Hearn for BitcoinJ
// Copyright (c) 2011 Google Inc
// Ported to JavaScript by Stefan Thomas
// Merged Buffer refactorings from base58-native by Stephen Pair
// Copyright (c) 2013 BitPay Inc

var Buffer = require('safe-buffer').Buffer

module.exports = function base (ALPHABET) {
  var ALPHABET_MAP = {}
  var BASE = ALPHABET.length
  var LEADER = ALPHABET.charAt(0)

  // pre-compute lookup table
  for (var z = 0; z < ALPHABET.length; z++) {
    var x = ALPHABET.charAt(z)

    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
    ALPHABET_MAP[x] = z
  }

  function encode (source) {
    if (source.length === 0) return ''

    var digits = [0]
    for (var i = 0; i < source.length; ++i) {
      for (var j = 0, carry = source[i]; j < digits.length; ++j) {
        carry += digits[j] << 8
        digits[j] = carry % BASE
        carry = (carry / BASE) | 0
      }

      while (carry > 0) {
        digits.push(carry % BASE)
        carry = (carry / BASE) | 0
      }
    }

    var string = ''

    // deal with leading zeros
    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]
    // convert digits to a string
    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]

    return string
  }

  function decodeUnsafe (string) {
    if (string.length === 0) return Buffer.allocUnsafe(0)

    var bytes = [0]
    for (var i = 0; i < string.length; i++) {
      var value = ALPHABET_MAP[string[i]]
      if (value === undefined) return

      for (var j = 0, carry = value; j < bytes.length; ++j) {
        carry += bytes[j] * BASE
        bytes[j] = carry & 0xff
        carry >>= 8
      }

      while (carry > 0) {
        bytes.push(carry & 0xff)
        carry >>= 8
      }
    }

    // deal with leading zeros
    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {
      bytes.push(0)
    }

    return Buffer.from(bytes.reverse())
  }

  function decode (string) {
    var buffer = decodeUnsafe(string)
    if (buffer) return buffer

    throw new Error('Non-base' + BASE + ' character')
  }

  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  }
}

},{"safe-buffer":195}],17:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],18:[function(require,module,exports){
// (public) Constructor
function BigInteger(a, b, c) {
  if (!(this instanceof BigInteger))
    return new BigInteger(a, b, c)

  if (a != null) {
    if ("number" == typeof a) this.fromNumber(a, b, c)
    else if (b == null && "string" != typeof a) this.fromString(a, 256)
    else this.fromString(a, b)
  }
}

var proto = BigInteger.prototype

// duck-typed isBigInteger
proto.__bigi = require('../package.json').version
BigInteger.isBigInteger = function (obj, check_ver) {
  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi)
}

// Bits per digit
var dbits

// am: Compute w_j += (x*this_i), propagate carries,
// c is initial carry, returns final carry.
// c < 3*dvalue, x < 2*dvalue, this_i < dvalue
// We need to select the fastest one that works in this environment.

// am1: use a single mult and divide to get the high bits,
// max digit bits should be 26 because
// max internal value = 2*dvalue^2-2*dvalue (< 2^53)
function am1(i, x, w, j, c, n) {
  while (--n >= 0) {
    var v = x * this[i++] + w[j] + c
    c = Math.floor(v / 0x4000000)
    w[j++] = v & 0x3ffffff
  }
  return c
}
// am2 avoids a big mult-and-extract completely.
// Max digit bits should be <= 30 because we do bitwise ops
// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
function am2(i, x, w, j, c, n) {
  var xl = x & 0x7fff,
    xh = x >> 15
  while (--n >= 0) {
    var l = this[i] & 0x7fff
    var h = this[i++] >> 15
    var m = xh * l + h * xl
    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff)
    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30)
    w[j++] = l & 0x3fffffff
  }
  return c
}
// Alternately, set max digit bits to 28 since some
// browsers slow down when dealing with 32-bit numbers.
function am3(i, x, w, j, c, n) {
  var xl = x & 0x3fff,
    xh = x >> 14
  while (--n >= 0) {
    var l = this[i] & 0x3fff
    var h = this[i++] >> 14
    var m = xh * l + h * xl
    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c
    c = (l >> 28) + (m >> 14) + xh * h
    w[j++] = l & 0xfffffff
  }
  return c
}

// wtf?
BigInteger.prototype.am = am1
dbits = 26

BigInteger.prototype.DB = dbits
BigInteger.prototype.DM = ((1 << dbits) - 1)
var DV = BigInteger.prototype.DV = (1 << dbits)

var BI_FP = 52
BigInteger.prototype.FV = Math.pow(2, BI_FP)
BigInteger.prototype.F1 = BI_FP - dbits
BigInteger.prototype.F2 = 2 * dbits - BI_FP

// Digit conversions
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz"
var BI_RC = new Array()
var rr, vv
rr = "0".charCodeAt(0)
for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv
rr = "a".charCodeAt(0)
for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv
rr = "A".charCodeAt(0)
for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv

function int2char(n) {
  return BI_RM.charAt(n)
}

function intAt(s, i) {
  var c = BI_RC[s.charCodeAt(i)]
  return (c == null) ? -1 : c
}

// (protected) copy this to r
function bnpCopyTo(r) {
  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i]
  r.t = this.t
  r.s = this.s
}

// (protected) set from integer value x, -DV <= x < DV
function bnpFromInt(x) {
  this.t = 1
  this.s = (x < 0) ? -1 : 0
  if (x > 0) this[0] = x
  else if (x < -1) this[0] = x + DV
  else this.t = 0
}

// return bigint initialized to value
function nbv(i) {
  var r = new BigInteger()
  r.fromInt(i)
  return r
}

// (protected) set from string and radix
function bnpFromString(s, b) {
  var self = this

  var k
  if (b == 16) k = 4
  else if (b == 8) k = 3
  else if (b == 256) k = 8; // byte array
  else if (b == 2) k = 1
  else if (b == 32) k = 5
  else if (b == 4) k = 2
  else {
    self.fromRadix(s, b)
    return
  }
  self.t = 0
  self.s = 0
  var i = s.length,
    mi = false,
    sh = 0
  while (--i >= 0) {
    var x = (k == 8) ? s[i] & 0xff : intAt(s, i)
    if (x < 0) {
      if (s.charAt(i) == "-") mi = true
      continue
    }
    mi = false
    if (sh == 0)
      self[self.t++] = x
    else if (sh + k > self.DB) {
      self[self.t - 1] |= (x & ((1 << (self.DB - sh)) - 1)) << sh
      self[self.t++] = (x >> (self.DB - sh))
    } else
      self[self.t - 1] |= x << sh
    sh += k
    if (sh >= self.DB) sh -= self.DB
  }
  if (k == 8 && (s[0] & 0x80) != 0) {
    self.s = -1
    if (sh > 0) self[self.t - 1] |= ((1 << (self.DB - sh)) - 1) << sh
  }
  self.clamp()
  if (mi) BigInteger.ZERO.subTo(self, self)
}

// (protected) clamp off excess high words
function bnpClamp() {
  var c = this.s & this.DM
  while (this.t > 0 && this[this.t - 1] == c)--this.t
}

// (public) return string representation in given radix
function bnToString(b) {
  var self = this
  if (self.s < 0) return "-" + self.negate()
    .toString(b)
  var k
  if (b == 16) k = 4
  else if (b == 8) k = 3
  else if (b == 2) k = 1
  else if (b == 32) k = 5
  else if (b == 4) k = 2
  else return self.toRadix(b)
  var km = (1 << k) - 1,
    d, m = false,
    r = "",
    i = self.t
  var p = self.DB - (i * self.DB) % k
  if (i-- > 0) {
    if (p < self.DB && (d = self[i] >> p) > 0) {
      m = true
      r = int2char(d)
    }
    while (i >= 0) {
      if (p < k) {
        d = (self[i] & ((1 << p) - 1)) << (k - p)
        d |= self[--i] >> (p += self.DB - k)
      } else {
        d = (self[i] >> (p -= k)) & km
        if (p <= 0) {
          p += self.DB
          --i
        }
      }
      if (d > 0) m = true
      if (m) r += int2char(d)
    }
  }
  return m ? r : "0"
}

// (public) -this
function bnNegate() {
  var r = new BigInteger()
  BigInteger.ZERO.subTo(this, r)
  return r
}

// (public) |this|
function bnAbs() {
  return (this.s < 0) ? this.negate() : this
}

// (public) return + if this > a, - if this < a, 0 if equal
function bnCompareTo(a) {
  var r = this.s - a.s
  if (r != 0) return r
  var i = this.t
  r = i - a.t
  if (r != 0) return (this.s < 0) ? -r : r
  while (--i >= 0)
    if ((r = this[i] - a[i]) != 0) return r
  return 0
}

// returns bit length of the integer x
function nbits(x) {
  var r = 1,
    t
  if ((t = x >>> 16) != 0) {
    x = t
    r += 16
  }
  if ((t = x >> 8) != 0) {
    x = t
    r += 8
  }
  if ((t = x >> 4) != 0) {
    x = t
    r += 4
  }
  if ((t = x >> 2) != 0) {
    x = t
    r += 2
  }
  if ((t = x >> 1) != 0) {
    x = t
    r += 1
  }
  return r
}

// (public) return the number of bits in "this"
function bnBitLength() {
  if (this.t <= 0) return 0
  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM))
}

// (public) return the number of bytes in "this"
function bnByteLength() {
  return this.bitLength() >> 3
}

// (protected) r = this << n*DB
function bnpDLShiftTo(n, r) {
  var i
  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i]
  for (i = n - 1; i >= 0; --i) r[i] = 0
  r.t = this.t + n
  r.s = this.s
}

// (protected) r = this >> n*DB
function bnpDRShiftTo(n, r) {
  for (var i = n; i < this.t; ++i) r[i - n] = this[i]
  r.t = Math.max(this.t - n, 0)
  r.s = this.s
}

// (protected) r = this << n
function bnpLShiftTo(n, r) {
  var self = this
  var bs = n % self.DB
  var cbs = self.DB - bs
  var bm = (1 << cbs) - 1
  var ds = Math.floor(n / self.DB),
    c = (self.s << bs) & self.DM,
    i
  for (i = self.t - 1; i >= 0; --i) {
    r[i + ds + 1] = (self[i] >> cbs) | c
    c = (self[i] & bm) << bs
  }
  for (i = ds - 1; i >= 0; --i) r[i] = 0
  r[ds] = c
  r.t = self.t + ds + 1
  r.s = self.s
  r.clamp()
}

// (protected) r = this >> n
function bnpRShiftTo(n, r) {
  var self = this
  r.s = self.s
  var ds = Math.floor(n / self.DB)
  if (ds >= self.t) {
    r.t = 0
    return
  }
  var bs = n % self.DB
  var cbs = self.DB - bs
  var bm = (1 << bs) - 1
  r[0] = self[ds] >> bs
  for (var i = ds + 1; i < self.t; ++i) {
    r[i - ds - 1] |= (self[i] & bm) << cbs
    r[i - ds] = self[i] >> bs
  }
  if (bs > 0) r[self.t - ds - 1] |= (self.s & bm) << cbs
  r.t = self.t - ds
  r.clamp()
}

// (protected) r = this - a
function bnpSubTo(a, r) {
  var self = this
  var i = 0,
    c = 0,
    m = Math.min(a.t, self.t)
  while (i < m) {
    c += self[i] - a[i]
    r[i++] = c & self.DM
    c >>= self.DB
  }
  if (a.t < self.t) {
    c -= a.s
    while (i < self.t) {
      c += self[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += self.s
  } else {
    c += self.s
    while (i < a.t) {
      c -= a[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c -= a.s
  }
  r.s = (c < 0) ? -1 : 0
  if (c < -1) r[i++] = self.DV + c
  else if (c > 0) r[i++] = c
  r.t = i
  r.clamp()
}

// (protected) r = this * a, r != this,a (HAC 14.12)
// "this" should be the larger one if appropriate.
function bnpMultiplyTo(a, r) {
  var x = this.abs(),
    y = a.abs()
  var i = x.t
  r.t = i + y.t
  while (--i >= 0) r[i] = 0
  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t)
  r.s = 0
  r.clamp()
  if (this.s != a.s) BigInteger.ZERO.subTo(r, r)
}

// (protected) r = this^2, r != this (HAC 14.16)
function bnpSquareTo(r) {
  var x = this.abs()
  var i = r.t = 2 * x.t
  while (--i >= 0) r[i] = 0
  for (i = 0; i < x.t - 1; ++i) {
    var c = x.am(i, x[i], r, 2 * i, 0, 1)
    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
      r[i + x.t] -= x.DV
      r[i + x.t + 1] = 1
    }
  }
  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1)
  r.s = 0
  r.clamp()
}

// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
// r != q, this != m.  q or r may be null.
function bnpDivRemTo(m, q, r) {
  var self = this
  var pm = m.abs()
  if (pm.t <= 0) return
  var pt = self.abs()
  if (pt.t < pm.t) {
    if (q != null) q.fromInt(0)
    if (r != null) self.copyTo(r)
    return
  }
  if (r == null) r = new BigInteger()
  var y = new BigInteger(),
    ts = self.s,
    ms = m.s
  var nsh = self.DB - nbits(pm[pm.t - 1]); // normalize modulus
  if (nsh > 0) {
    pm.lShiftTo(nsh, y)
    pt.lShiftTo(nsh, r)
  } else {
    pm.copyTo(y)
    pt.copyTo(r)
  }
  var ys = y.t
  var y0 = y[ys - 1]
  if (y0 == 0) return
  var yt = y0 * (1 << self.F1) + ((ys > 1) ? y[ys - 2] >> self.F2 : 0)
  var d1 = self.FV / yt,
    d2 = (1 << self.F1) / yt,
    e = 1 << self.F2
  var i = r.t,
    j = i - ys,
    t = (q == null) ? new BigInteger() : q
  y.dlShiftTo(j, t)
  if (r.compareTo(t) >= 0) {
    r[r.t++] = 1
    r.subTo(t, r)
  }
  BigInteger.ONE.dlShiftTo(ys, t)
  t.subTo(y, y); // "negative" y so we can replace sub with am later
  while (y.t < ys) y[y.t++] = 0
  while (--j >= 0) {
    // Estimate quotient digit
    var qd = (r[--i] == y0) ? self.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2)
    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out
      y.dlShiftTo(j, t)
      r.subTo(t, r)
      while (r[i] < --qd) r.subTo(t, r)
    }
  }
  if (q != null) {
    r.drShiftTo(ys, q)
    if (ts != ms) BigInteger.ZERO.subTo(q, q)
  }
  r.t = ys
  r.clamp()
  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder
  if (ts < 0) BigInteger.ZERO.subTo(r, r)
}

// (public) this mod a
function bnMod(a) {
  var r = new BigInteger()
  this.abs()
    .divRemTo(a, null, r)
  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r)
  return r
}

// Modular reduction using "classic" algorithm
function Classic(m) {
  this.m = m
}

function cConvert(x) {
  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m)
  else return x
}

function cRevert(x) {
  return x
}

function cReduce(x) {
  x.divRemTo(this.m, null, x)
}

function cMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

function cSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

Classic.prototype.convert = cConvert
Classic.prototype.revert = cRevert
Classic.prototype.reduce = cReduce
Classic.prototype.mulTo = cMulTo
Classic.prototype.sqrTo = cSqrTo

// (protected) return "-1/this % 2^DB"; useful for Mont. reduction
// justification:
//         xy == 1 (mod m)
//         xy =  1+km
//   xy(2-xy) = (1+km)(1-km)
// x[y(2-xy)] = 1-k^2m^2
// x[y(2-xy)] == 1 (mod m^2)
// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
// JS multiply "overflows" differently from C/C++, so care is needed here.
function bnpInvDigit() {
  if (this.t < 1) return 0
  var x = this[0]
  if ((x & 1) == 0) return 0
  var y = x & 3; // y == 1/x mod 2^2
  y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4
  y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8
  y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16
  // last step - calculate inverse mod DV directly
  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
  y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits
  // we really want the negative inverse, and -DV < y < DV
  return (y > 0) ? this.DV - y : -y
}

// Montgomery reduction
function Montgomery(m) {
  this.m = m
  this.mp = m.invDigit()
  this.mpl = this.mp & 0x7fff
  this.mph = this.mp >> 15
  this.um = (1 << (m.DB - 15)) - 1
  this.mt2 = 2 * m.t
}

// xR mod m
function montConvert(x) {
  var r = new BigInteger()
  x.abs()
    .dlShiftTo(this.m.t, r)
  r.divRemTo(this.m, null, r)
  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)
  return r
}

// x/R mod m
function montRevert(x) {
  var r = new BigInteger()
  x.copyTo(r)
  this.reduce(r)
  return r
}

// x = x/R mod m (HAC 14.32)
function montReduce(x) {
  while (x.t <= this.mt2) // pad x so am has enough room later
    x[x.t++] = 0
  for (var i = 0; i < this.m.t; ++i) {
    // faster way of calculating u0 = x[i]*mp mod DV
    var j = x[i] & 0x7fff
    var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM
    // use am to combine the multiply-shift-add into one call
    j = i + this.m.t
    x[j] += this.m.am(0, u0, x, i, 0, this.m.t)
    // propagate carry
    while (x[j] >= x.DV) {
      x[j] -= x.DV
      x[++j]++
    }
  }
  x.clamp()
  x.drShiftTo(this.m.t, x)
  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x)
}

// r = "x^2/R mod m"; x != r
function montSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

// r = "xy/R mod m"; x,y != r
function montMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

Montgomery.prototype.convert = montConvert
Montgomery.prototype.revert = montRevert
Montgomery.prototype.reduce = montReduce
Montgomery.prototype.mulTo = montMulTo
Montgomery.prototype.sqrTo = montSqrTo

// (protected) true iff this is even
function bnpIsEven() {
  return ((this.t > 0) ? (this[0] & 1) : this.s) == 0
}

// (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
function bnpExp(e, z) {
  if (e > 0xffffffff || e < 1) return BigInteger.ONE
  var r = new BigInteger(),
    r2 = new BigInteger(),
    g = z.convert(this),
    i = nbits(e) - 1
  g.copyTo(r)
  while (--i >= 0) {
    z.sqrTo(r, r2)
    if ((e & (1 << i)) > 0) z.mulTo(r2, g, r)
    else {
      var t = r
      r = r2
      r2 = t
    }
  }
  return z.revert(r)
}

// (public) this^e % m, 0 <= e < 2^32
function bnModPowInt(e, m) {
  var z
  if (e < 256 || m.isEven()) z = new Classic(m)
  else z = new Montgomery(m)
  return this.exp(e, z)
}

// protected
proto.copyTo = bnpCopyTo
proto.fromInt = bnpFromInt
proto.fromString = bnpFromString
proto.clamp = bnpClamp
proto.dlShiftTo = bnpDLShiftTo
proto.drShiftTo = bnpDRShiftTo
proto.lShiftTo = bnpLShiftTo
proto.rShiftTo = bnpRShiftTo
proto.subTo = bnpSubTo
proto.multiplyTo = bnpMultiplyTo
proto.squareTo = bnpSquareTo
proto.divRemTo = bnpDivRemTo
proto.invDigit = bnpInvDigit
proto.isEven = bnpIsEven
proto.exp = bnpExp

// public
proto.toString = bnToString
proto.negate = bnNegate
proto.abs = bnAbs
proto.compareTo = bnCompareTo
proto.bitLength = bnBitLength
proto.byteLength = bnByteLength
proto.mod = bnMod
proto.modPowInt = bnModPowInt

// (public)
function bnClone() {
  var r = new BigInteger()
  this.copyTo(r)
  return r
}

// (public) return value as integer
function bnIntValue() {
  if (this.s < 0) {
    if (this.t == 1) return this[0] - this.DV
    else if (this.t == 0) return -1
  } else if (this.t == 1) return this[0]
  else if (this.t == 0) return 0
  // assumes 16 < DB < 32
  return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0]
}

// (public) return value as byte
function bnByteValue() {
  return (this.t == 0) ? this.s : (this[0] << 24) >> 24
}

// (public) return value as short (assumes DB>=16)
function bnShortValue() {
  return (this.t == 0) ? this.s : (this[0] << 16) >> 16
}

// (protected) return x s.t. r^x < DV
function bnpChunkSize(r) {
  return Math.floor(Math.LN2 * this.DB / Math.log(r))
}

// (public) 0 if this == 0, 1 if this > 0
function bnSigNum() {
  if (this.s < 0) return -1
  else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0
  else return 1
}

// (protected) convert to radix string
function bnpToRadix(b) {
  if (b == null) b = 10
  if (this.signum() == 0 || b < 2 || b > 36) return "0"
  var cs = this.chunkSize(b)
  var a = Math.pow(b, cs)
  var d = nbv(a),
    y = new BigInteger(),
    z = new BigInteger(),
    r = ""
  this.divRemTo(d, y, z)
  while (y.signum() > 0) {
    r = (a + z.intValue())
      .toString(b)
      .substr(1) + r
    y.divRemTo(d, y, z)
  }
  return z.intValue()
    .toString(b) + r
}

// (protected) convert from radix string
function bnpFromRadix(s, b) {
  var self = this
  self.fromInt(0)
  if (b == null) b = 10
  var cs = self.chunkSize(b)
  var d = Math.pow(b, cs),
    mi = false,
    j = 0,
    w = 0
  for (var i = 0; i < s.length; ++i) {
    var x = intAt(s, i)
    if (x < 0) {
      if (s.charAt(i) == "-" && self.signum() == 0) mi = true
      continue
    }
    w = b * w + x
    if (++j >= cs) {
      self.dMultiply(d)
      self.dAddOffset(w, 0)
      j = 0
      w = 0
    }
  }
  if (j > 0) {
    self.dMultiply(Math.pow(b, j))
    self.dAddOffset(w, 0)
  }
  if (mi) BigInteger.ZERO.subTo(self, self)
}

// (protected) alternate constructor
function bnpFromNumber(a, b, c) {
  var self = this
  if ("number" == typeof b) {
    // new BigInteger(int,int,RNG)
    if (a < 2) self.fromInt(1)
    else {
      self.fromNumber(a, c)
      if (!self.testBit(a - 1)) // force MSB set
        self.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, self)
      if (self.isEven()) self.dAddOffset(1, 0); // force odd
      while (!self.isProbablePrime(b)) {
        self.dAddOffset(2, 0)
        if (self.bitLength() > a) self.subTo(BigInteger.ONE.shiftLeft(a - 1), self)
      }
    }
  } else {
    // new BigInteger(int,RNG)
    var x = new Array(),
      t = a & 7
    x.length = (a >> 3) + 1
    b.nextBytes(x)
    if (t > 0) x[0] &= ((1 << t) - 1)
    else x[0] = 0
    self.fromString(x, 256)
  }
}

// (public) convert to bigendian byte array
function bnToByteArray() {
  var self = this
  var i = self.t,
    r = new Array()
  r[0] = self.s
  var p = self.DB - (i * self.DB) % 8,
    d, k = 0
  if (i-- > 0) {
    if (p < self.DB && (d = self[i] >> p) != (self.s & self.DM) >> p)
      r[k++] = d | (self.s << (self.DB - p))
    while (i >= 0) {
      if (p < 8) {
        d = (self[i] & ((1 << p) - 1)) << (8 - p)
        d |= self[--i] >> (p += self.DB - 8)
      } else {
        d = (self[i] >> (p -= 8)) & 0xff
        if (p <= 0) {
          p += self.DB
          --i
        }
      }
      if ((d & 0x80) != 0) d |= -256
      if (k === 0 && (self.s & 0x80) != (d & 0x80))++k
      if (k > 0 || d != self.s) r[k++] = d
    }
  }
  return r
}

function bnEquals(a) {
  return (this.compareTo(a) == 0)
}

function bnMin(a) {
  return (this.compareTo(a) < 0) ? this : a
}

function bnMax(a) {
  return (this.compareTo(a) > 0) ? this : a
}

// (protected) r = this op a (bitwise)
function bnpBitwiseTo(a, op, r) {
  var self = this
  var i, f, m = Math.min(a.t, self.t)
  for (i = 0; i < m; ++i) r[i] = op(self[i], a[i])
  if (a.t < self.t) {
    f = a.s & self.DM
    for (i = m; i < self.t; ++i) r[i] = op(self[i], f)
    r.t = self.t
  } else {
    f = self.s & self.DM
    for (i = m; i < a.t; ++i) r[i] = op(f, a[i])
    r.t = a.t
  }
  r.s = op(self.s, a.s)
  r.clamp()
}

// (public) this & a
function op_and(x, y) {
  return x & y
}

function bnAnd(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_and, r)
  return r
}

// (public) this | a
function op_or(x, y) {
  return x | y
}

function bnOr(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_or, r)
  return r
}

// (public) this ^ a
function op_xor(x, y) {
  return x ^ y
}

function bnXor(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_xor, r)
  return r
}

// (public) this & ~a
function op_andnot(x, y) {
  return x & ~y
}

function bnAndNot(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_andnot, r)
  return r
}

// (public) ~this
function bnNot() {
  var r = new BigInteger()
  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i]
  r.t = this.t
  r.s = ~this.s
  return r
}

// (public) this << n
function bnShiftLeft(n) {
  var r = new BigInteger()
  if (n < 0) this.rShiftTo(-n, r)
  else this.lShiftTo(n, r)
  return r
}

// (public) this >> n
function bnShiftRight(n) {
  var r = new BigInteger()
  if (n < 0) this.lShiftTo(-n, r)
  else this.rShiftTo(n, r)
  return r
}

// return index of lowest 1-bit in x, x < 2^31
function lbit(x) {
  if (x == 0) return -1
  var r = 0
  if ((x & 0xffff) == 0) {
    x >>= 16
    r += 16
  }
  if ((x & 0xff) == 0) {
    x >>= 8
    r += 8
  }
  if ((x & 0xf) == 0) {
    x >>= 4
    r += 4
  }
  if ((x & 3) == 0) {
    x >>= 2
    r += 2
  }
  if ((x & 1) == 0)++r
  return r
}

// (public) returns index of lowest 1-bit (or -1 if none)
function bnGetLowestSetBit() {
  for (var i = 0; i < this.t; ++i)
    if (this[i] != 0) return i * this.DB + lbit(this[i])
  if (this.s < 0) return this.t * this.DB
  return -1
}

// return number of 1 bits in x
function cbit(x) {
  var r = 0
  while (x != 0) {
    x &= x - 1
    ++r
  }
  return r
}

// (public) return number of set bits
function bnBitCount() {
  var r = 0,
    x = this.s & this.DM
  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x)
  return r
}

// (public) true iff nth bit is set
function bnTestBit(n) {
  var j = Math.floor(n / this.DB)
  if (j >= this.t) return (this.s != 0)
  return ((this[j] & (1 << (n % this.DB))) != 0)
}

// (protected) this op (1<<n)
function bnpChangeBit(n, op) {
  var r = BigInteger.ONE.shiftLeft(n)
  this.bitwiseTo(r, op, r)
  return r
}

// (public) this | (1<<n)
function bnSetBit(n) {
  return this.changeBit(n, op_or)
}

// (public) this & ~(1<<n)
function bnClearBit(n) {
  return this.changeBit(n, op_andnot)
}

// (public) this ^ (1<<n)
function bnFlipBit(n) {
  return this.changeBit(n, op_xor)
}

// (protected) r = this + a
function bnpAddTo(a, r) {
  var self = this

  var i = 0,
    c = 0,
    m = Math.min(a.t, self.t)
  while (i < m) {
    c += self[i] + a[i]
    r[i++] = c & self.DM
    c >>= self.DB
  }
  if (a.t < self.t) {
    c += a.s
    while (i < self.t) {
      c += self[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += self.s
  } else {
    c += self.s
    while (i < a.t) {
      c += a[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += a.s
  }
  r.s = (c < 0) ? -1 : 0
  if (c > 0) r[i++] = c
  else if (c < -1) r[i++] = self.DV + c
  r.t = i
  r.clamp()
}

// (public) this + a
function bnAdd(a) {
  var r = new BigInteger()
  this.addTo(a, r)
  return r
}

// (public) this - a
function bnSubtract(a) {
  var r = new BigInteger()
  this.subTo(a, r)
  return r
}

// (public) this * a
function bnMultiply(a) {
  var r = new BigInteger()
  this.multiplyTo(a, r)
  return r
}

// (public) this^2
function bnSquare() {
  var r = new BigInteger()
  this.squareTo(r)
  return r
}

// (public) this / a
function bnDivide(a) {
  var r = new BigInteger()
  this.divRemTo(a, r, null)
  return r
}

// (public) this % a
function bnRemainder(a) {
  var r = new BigInteger()
  this.divRemTo(a, null, r)
  return r
}

// (public) [this/a,this%a]
function bnDivideAndRemainder(a) {
  var q = new BigInteger(),
    r = new BigInteger()
  this.divRemTo(a, q, r)
  return new Array(q, r)
}

// (protected) this *= n, this >= 0, 1 < n < DV
function bnpDMultiply(n) {
  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t)
  ++this.t
  this.clamp()
}

// (protected) this += n << w words, this >= 0
function bnpDAddOffset(n, w) {
  if (n == 0) return
  while (this.t <= w) this[this.t++] = 0
  this[w] += n
  while (this[w] >= this.DV) {
    this[w] -= this.DV
    if (++w >= this.t) this[this.t++] = 0
    ++this[w]
  }
}

// A "null" reducer
function NullExp() {}

function nNop(x) {
  return x
}

function nMulTo(x, y, r) {
  x.multiplyTo(y, r)
}

function nSqrTo(x, r) {
  x.squareTo(r)
}

NullExp.prototype.convert = nNop
NullExp.prototype.revert = nNop
NullExp.prototype.mulTo = nMulTo
NullExp.prototype.sqrTo = nSqrTo

// (public) this^e
function bnPow(e) {
  return this.exp(e, new NullExp())
}

// (protected) r = lower n words of "this * a", a.t <= n
// "this" should be the larger one if appropriate.
function bnpMultiplyLowerTo(a, n, r) {
  var i = Math.min(this.t + a.t, n)
  r.s = 0; // assumes a,this >= 0
  r.t = i
  while (i > 0) r[--i] = 0
  var j
  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t)
  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i)
  r.clamp()
}

// (protected) r = "this * a" without lower n words, n > 0
// "this" should be the larger one if appropriate.
function bnpMultiplyUpperTo(a, n, r) {
  --n
  var i = r.t = this.t + a.t - n
  r.s = 0; // assumes a,this >= 0
  while (--i >= 0) r[i] = 0
  for (i = Math.max(n - this.t, 0); i < a.t; ++i)
    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n)
  r.clamp()
  r.drShiftTo(1, r)
}

// Barrett modular reduction
function Barrett(m) {
  // setup Barrett
  this.r2 = new BigInteger()
  this.q3 = new BigInteger()
  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2)
  this.mu = this.r2.divide(m)
  this.m = m
}

function barrettConvert(x) {
  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m)
  else if (x.compareTo(this.m) < 0) return x
  else {
    var r = new BigInteger()
    x.copyTo(r)
    this.reduce(r)
    return r
  }
}

function barrettRevert(x) {
  return x
}

// x = x mod m (HAC 14.42)
function barrettReduce(x) {
  var self = this
  x.drShiftTo(self.m.t - 1, self.r2)
  if (x.t > self.m.t + 1) {
    x.t = self.m.t + 1
    x.clamp()
  }
  self.mu.multiplyUpperTo(self.r2, self.m.t + 1, self.q3)
  self.m.multiplyLowerTo(self.q3, self.m.t + 1, self.r2)
  while (x.compareTo(self.r2) < 0) x.dAddOffset(1, self.m.t + 1)
  x.subTo(self.r2, x)
  while (x.compareTo(self.m) >= 0) x.subTo(self.m, x)
}

// r = x^2 mod m; x != r
function barrettSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

// r = x*y mod m; x,y != r
function barrettMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

Barrett.prototype.convert = barrettConvert
Barrett.prototype.revert = barrettRevert
Barrett.prototype.reduce = barrettReduce
Barrett.prototype.mulTo = barrettMulTo
Barrett.prototype.sqrTo = barrettSqrTo

// (public) this^e % m (HAC 14.85)
function bnModPow(e, m) {
  var i = e.bitLength(),
    k, r = nbv(1),
    z
  if (i <= 0) return r
  else if (i < 18) k = 1
  else if (i < 48) k = 3
  else if (i < 144) k = 4
  else if (i < 768) k = 5
  else k = 6
  if (i < 8)
    z = new Classic(m)
  else if (m.isEven())
    z = new Barrett(m)
  else
    z = new Montgomery(m)

  // precomputation
  var g = new Array(),
    n = 3,
    k1 = k - 1,
    km = (1 << k) - 1
  g[1] = z.convert(this)
  if (k > 1) {
    var g2 = new BigInteger()
    z.sqrTo(g[1], g2)
    while (n <= km) {
      g[n] = new BigInteger()
      z.mulTo(g2, g[n - 2], g[n])
      n += 2
    }
  }

  var j = e.t - 1,
    w, is1 = true,
    r2 = new BigInteger(),
    t
  i = nbits(e[j]) - 1
  while (j >= 0) {
    if (i >= k1) w = (e[j] >> (i - k1)) & km
    else {
      w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i)
      if (j > 0) w |= e[j - 1] >> (this.DB + i - k1)
    }

    n = k
    while ((w & 1) == 0) {
      w >>= 1
      --n
    }
    if ((i -= n) < 0) {
      i += this.DB
      --j
    }
    if (is1) { // ret == 1, don't bother squaring or multiplying it
      g[w].copyTo(r)
      is1 = false
    } else {
      while (n > 1) {
        z.sqrTo(r, r2)
        z.sqrTo(r2, r)
        n -= 2
      }
      if (n > 0) z.sqrTo(r, r2)
      else {
        t = r
        r = r2
        r2 = t
      }
      z.mulTo(r2, g[w], r)
    }

    while (j >= 0 && (e[j] & (1 << i)) == 0) {
      z.sqrTo(r, r2)
      t = r
      r = r2
      r2 = t
      if (--i < 0) {
        i = this.DB - 1
        --j
      }
    }
  }
  return z.revert(r)
}

// (public) gcd(this,a) (HAC 14.54)
function bnGCD(a) {
  var x = (this.s < 0) ? this.negate() : this.clone()
  var y = (a.s < 0) ? a.negate() : a.clone()
  if (x.compareTo(y) < 0) {
    var t = x
    x = y
    y = t
  }
  var i = x.getLowestSetBit(),
    g = y.getLowestSetBit()
  if (g < 0) return x
  if (i < g) g = i
  if (g > 0) {
    x.rShiftTo(g, x)
    y.rShiftTo(g, y)
  }
  while (x.signum() > 0) {
    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x)
    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y)
    if (x.compareTo(y) >= 0) {
      x.subTo(y, x)
      x.rShiftTo(1, x)
    } else {
      y.subTo(x, y)
      y.rShiftTo(1, y)
    }
  }
  if (g > 0) y.lShiftTo(g, y)
  return y
}

// (protected) this % n, n < 2^26
function bnpModInt(n) {
  if (n <= 0) return 0
  var d = this.DV % n,
    r = (this.s < 0) ? n - 1 : 0
  if (this.t > 0)
    if (d == 0) r = this[0] % n
    else
      for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n
  return r
}

// (public) 1/this % m (HAC 14.61)
function bnModInverse(m) {
  var ac = m.isEven()
  if (this.signum() === 0) throw new Error('division by zero')
  if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO
  var u = m.clone(),
    v = this.clone()
  var a = nbv(1),
    b = nbv(0),
    c = nbv(0),
    d = nbv(1)
  while (u.signum() != 0) {
    while (u.isEven()) {
      u.rShiftTo(1, u)
      if (ac) {
        if (!a.isEven() || !b.isEven()) {
          a.addTo(this, a)
          b.subTo(m, b)
        }
        a.rShiftTo(1, a)
      } else if (!b.isEven()) b.subTo(m, b)
      b.rShiftTo(1, b)
    }
    while (v.isEven()) {
      v.rShiftTo(1, v)
      if (ac) {
        if (!c.isEven() || !d.isEven()) {
          c.addTo(this, c)
          d.subTo(m, d)
        }
        c.rShiftTo(1, c)
      } else if (!d.isEven()) d.subTo(m, d)
      d.rShiftTo(1, d)
    }
    if (u.compareTo(v) >= 0) {
      u.subTo(v, u)
      if (ac) a.subTo(c, a)
      b.subTo(d, b)
    } else {
      v.subTo(u, v)
      if (ac) c.subTo(a, c)
      d.subTo(b, d)
    }
  }
  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO
  while (d.compareTo(m) >= 0) d.subTo(m, d)
  while (d.signum() < 0) d.addTo(m, d)
  return d
}

var lowprimes = [
  2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
  73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,
  157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,
  239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,
  331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,
  421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,
  509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,
  613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,
  709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,
  821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,
  919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997
]

var lplim = (1 << 26) / lowprimes[lowprimes.length - 1]

// (public) test primality with certainty >= 1-.5^t
function bnIsProbablePrime(t) {
  var i, x = this.abs()
  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
    for (i = 0; i < lowprimes.length; ++i)
      if (x[0] == lowprimes[i]) return true
    return false
  }
  if (x.isEven()) return false
  i = 1
  while (i < lowprimes.length) {
    var m = lowprimes[i],
      j = i + 1
    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++]
    m = x.modInt(m)
    while (i < j) if (m % lowprimes[i++] == 0) return false
  }
  return x.millerRabin(t)
}

// (protected) true if probably prime (HAC 4.24, Miller-Rabin)
function bnpMillerRabin(t) {
  var n1 = this.subtract(BigInteger.ONE)
  var k = n1.getLowestSetBit()
  if (k <= 0) return false
  var r = n1.shiftRight(k)
  t = (t + 1) >> 1
  if (t > lowprimes.length) t = lowprimes.length
  var a = new BigInteger(null)
  var j, bases = []
  for (var i = 0; i < t; ++i) {
    for (;;) {
      j = lowprimes[Math.floor(Math.random() * lowprimes.length)]
      if (bases.indexOf(j) == -1) break
    }
    bases.push(j)
    a.fromInt(j)
    var y = a.modPow(r, this)
    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
      var j = 1
      while (j++ < k && y.compareTo(n1) != 0) {
        y = y.modPowInt(2, this)
        if (y.compareTo(BigInteger.ONE) == 0) return false
      }
      if (y.compareTo(n1) != 0) return false
    }
  }
  return true
}

// protected
proto.chunkSize = bnpChunkSize
proto.toRadix = bnpToRadix
proto.fromRadix = bnpFromRadix
proto.fromNumber = bnpFromNumber
proto.bitwiseTo = bnpBitwiseTo
proto.changeBit = bnpChangeBit
proto.addTo = bnpAddTo
proto.dMultiply = bnpDMultiply
proto.dAddOffset = bnpDAddOffset
proto.multiplyLowerTo = bnpMultiplyLowerTo
proto.multiplyUpperTo = bnpMultiplyUpperTo
proto.modInt = bnpModInt
proto.millerRabin = bnpMillerRabin

// public
proto.clone = bnClone
proto.intValue = bnIntValue
proto.byteValue = bnByteValue
proto.shortValue = bnShortValue
proto.signum = bnSigNum
proto.toByteArray = bnToByteArray
proto.equals = bnEquals
proto.min = bnMin
proto.max = bnMax
proto.and = bnAnd
proto.or = bnOr
proto.xor = bnXor
proto.andNot = bnAndNot
proto.not = bnNot
proto.shiftLeft = bnShiftLeft
proto.shiftRight = bnShiftRight
proto.getLowestSetBit = bnGetLowestSetBit
proto.bitCount = bnBitCount
proto.testBit = bnTestBit
proto.setBit = bnSetBit
proto.clearBit = bnClearBit
proto.flipBit = bnFlipBit
proto.add = bnAdd
proto.subtract = bnSubtract
proto.multiply = bnMultiply
proto.divide = bnDivide
proto.remainder = bnRemainder
proto.divideAndRemainder = bnDivideAndRemainder
proto.modPow = bnModPow
proto.modInverse = bnModInverse
proto.pow = bnPow
proto.gcd = bnGCD
proto.isProbablePrime = bnIsProbablePrime

// JSBN-specific extension
proto.square = bnSquare

// constants
BigInteger.ZERO = nbv(0)
BigInteger.ONE = nbv(1)
BigInteger.valueOf = nbv

module.exports = BigInteger

},{"../package.json":21}],19:[function(require,module,exports){
(function (Buffer){
// FIXME: Kind of a weird way to throw exceptions, consider removing
var assert = require('assert')
var BigInteger = require('./bigi')

/**
 * Turns a byte array into a big integer.
 *
 * This function will interpret a byte array as a big integer in big
 * endian notation.
 */
BigInteger.fromByteArrayUnsigned = function(byteArray) {
  // BigInteger expects a DER integer conformant byte array
  if (byteArray[0] & 0x80) {
    return new BigInteger([0].concat(byteArray))
  }

  return new BigInteger(byteArray)
}

/**
 * Returns a byte array representation of the big integer.
 *
 * This returns the absolute of the contained value in big endian
 * form. A value of zero results in an empty array.
 */
BigInteger.prototype.toByteArrayUnsigned = function() {
  var byteArray = this.toByteArray()
  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray
}

BigInteger.fromDERInteger = function(byteArray) {
  return new BigInteger(byteArray)
}

/*
 * Converts BigInteger to a DER integer representation.
 *
 * The format for this value uses the most significant bit as a sign
 * bit.  If the most significant bit is already set and the integer is
 * positive, a 0x00 is prepended.
 *
 * Examples:
 *
 *      0 =>     0x00
 *      1 =>     0x01
 *     -1 =>     0xff
 *    127 =>     0x7f
 *   -127 =>     0x81
 *    128 =>   0x0080
 *   -128 =>     0x80
 *    255 =>   0x00ff
 *   -255 =>   0xff01
 *  16300 =>   0x3fac
 * -16300 =>   0xc054
 *  62300 => 0x00f35c
 * -62300 => 0xff0ca4
*/
BigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray

BigInteger.fromBuffer = function(buffer) {
  // BigInteger expects a DER integer conformant byte array
  if (buffer[0] & 0x80) {
    var byteArray = Array.prototype.slice.call(buffer)

    return new BigInteger([0].concat(byteArray))
  }

  return new BigInteger(buffer)
}

BigInteger.fromHex = function(hex) {
  if (hex === '') return BigInteger.ZERO

  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')
  assert.equal(hex.length % 2, 0, 'Incomplete hex')
  return new BigInteger(hex, 16)
}

BigInteger.prototype.toBuffer = function(size) {
  var byteArray = this.toByteArrayUnsigned()
  var zeros = []

  var padding = size - byteArray.length
  while (zeros.length < padding) zeros.push(0)

  return new Buffer(zeros.concat(byteArray))
}

BigInteger.prototype.toHex = function(size) {
  return this.toBuffer(size).toString('hex')
}

}).call(this,require("buffer").Buffer)
},{"./bigi":18,"assert":15,"buffer":55}],20:[function(require,module,exports){
var BigInteger = require('./bigi')

//addons
require('./convert')

module.exports = BigInteger
},{"./bigi":18,"./convert":19}],21:[function(require,module,exports){
module.exports={
  "_from": "bigi@^1.4.2",
  "_id": "bigi@1.4.2",
  "_inBundle": false,
  "_integrity": "sha1-nGZalfiLiwj8Bc/XMfVhhZ1yWCU=",
  "_location": "/bigi",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "bigi@^1.4.2",
    "name": "bigi",
    "escapedName": "bigi",
    "rawSpec": "^1.4.2",
    "saveSpec": null,
    "fetchSpec": "^1.4.2"
  },
  "_requiredBy": [
    "/ecurve",
    "/eosjs-ecc"
  ],
  "_resolved": "https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz",
  "_shasum": "9c665a95f88b8b08fc05cfd731f561859d725825",
  "_spec": "bigi@^1.4.2",
  "_where": "/home/jcalfee/eosjs/eosjs/node_modules/eosjs-ecc",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/bigi/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Big integers.",
  "devDependencies": {
    "coveralls": "^2.11.2",
    "istanbul": "^0.3.5",
    "jshint": "^2.5.1",
    "mocha": "^2.1.0",
    "mochify": "^2.1.0"
  },
  "homepage": "https://github.com/cryptocoinjs/bigi#readme",
  "keywords": [
    "cryptography",
    "math",
    "bitcoin",
    "arbitrary",
    "precision",
    "arithmetic",
    "big",
    "integer",
    "int",
    "number",
    "biginteger",
    "bigint",
    "bignumber",
    "decimal",
    "float"
  ],
  "main": "./lib/index.js",
  "name": "bigi",
  "repository": {
    "url": "git+https://github.com/cryptocoinjs/bigi.git",
    "type": "git"
  },
  "scripts": {
    "browser-test": "mochify --wd -R spec",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",
    "coveralls": "npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info",
    "jshint": "jshint --config jshint.json lib/*.js ; true",
    "test": "_mocha -- test/*.js",
    "unit": "mocha"
  },
  "testling": {
    "files": "test/*.js",
    "harness": "mocha",
    "browsers": [
      "ie/9..latest",
      "firefox/latest",
      "chrome/latest",
      "safari/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "version": "1.4.2"
}

},{}],22:[function(require,module,exports){
(function (process,global,Buffer){
(function(){function Ua(e){eval.call(null,e)}function v(e,a){e||G("Assertion failed: "+a)}function Va(e){var c=a["_"+e];if(!c)try{c=eval("_"+e)}catch(b){}v(c,"Cannot call unknown function "+e+" (perhaps LLVM optimizations or closure removed it?)");return c}function Wa(e,a,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":D[e>>0]=a;break;case "i8":D[e>>0]=a;break;case "i16":ca[e>>1]=a;break;case "i32":n[e>>2]=a;break;case "i64":tempI64=[a>>>0,(tempDouble=a,1<=+ub(tempDouble)?0<
tempDouble?(vb(+wb(tempDouble/4294967296),4294967295)|0)>>>0:~~+xb((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)];n[e>>2]=tempI64[0];n[e+4>>2]=tempI64[1];break;case "float":ta[e>>2]=a;break;case "double":ua[e>>3]=a;break;default:G("invalid type for setValue: "+b)}}function Xa(e,a){a=a||"i8";"*"===a.charAt(a.length-1)&&(a="i32");switch(a){case "i1":return D[e>>0];case "i8":return D[e>>0];case "i16":return ca[e>>1];case "i32":return n[e>>2];case "i64":return n[e>>2];case "float":return ta[e>>
2];case "double":return ua[e>>3];default:G("invalid type for setValue: "+a)}return null}function A(e,a,b,f){var h,l;"number"===typeof e?(h=!0,l=e):(h=!1,l=e.length);var d="string"===typeof a?a:null,g;4==b?g=f:g=["function"===typeof L?L:m.vb,m.Aa,m.vb,m.Mb][void 0===b?2:b](Math.max(l,d?1:a.length));if(h){f=g;v(0==(g&3));for(e=g+(l&-4);f<e;f+=4)n[f>>2]=0;for(e=g+l;f<e;)D[f++>>0]=0;return g}if("i8"===d)return e.subarray||e.slice?J.set(e,g):J.set(new Uint8Array(e),g),g;f=0;for(var k,H;f<l;)h=e[f],"function"===
typeof h&&(h=m.Vf(h)),b=d||a[f],0===b?f++:("i64"==b&&(b="i32"),Wa(g+f,h,b),H!==b&&(k=m.Sb(b),H=b),f+=k);return g}function M(e,c){if(0===c||!e)return"";for(var b=0,f,h=0;;){f=J[e+h>>0];b|=f;if(0==f&&!c)break;h++;if(c&&h==c)break}c||(c=h);f="";if(128>b){for(;0<c;)b=String.fromCharCode.apply(String,J.subarray(e,e+Math.min(c,1024))),f=f?f+b:b,e+=1024,c-=1024;return f}return a.UTF8ToString(e)}function Y(e,a){for(var b=a;e[b];)++b;if(16<b-a&&e.subarray&&Ya)return Ya.decode(e.subarray(a,b));for(var f,h,
l,d,g,k,b="";;){f=e[a++];if(!f)return b;f&128?(h=e[a++]&63,192==(f&224)?b+=String.fromCharCode((f&31)<<6|h):(l=e[a++]&63,224==(f&240)?f=(f&15)<<12|h<<6|l:(d=e[a++]&63,240==(f&248)?f=(f&7)<<18|h<<12|l<<6|d:(g=e[a++]&63,248==(f&252)?f=(f&3)<<24|h<<18|l<<12|d<<6|g:(k=e[a++]&63,f=(f&1)<<30|h<<24|l<<18|d<<12|g<<6|k))),65536>f?b+=String.fromCharCode(f):(f-=65536,b+=String.fromCharCode(55296|f>>10,56320|f&1023)))):b+=String.fromCharCode(f)}}function va(e,a,b,f){if(!(0<f))return 0;var h=b;f=b+f-1;for(var l=
0;l<e.length;++l){var d=e.charCodeAt(l);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|e.charCodeAt(++l)&1023);if(127>=d){if(b>=f)break;a[b++]=d}else{if(2047>=d){if(b+1>=f)break;a[b++]=192|d>>6}else{if(65535>=d){if(b+2>=f)break;a[b++]=224|d>>12}else{if(2097151>=d){if(b+3>=f)break;a[b++]=240|d>>18}else{if(67108863>=d){if(b+4>=f)break;a[b++]=248|d>>24}else{if(b+5>=f)break;a[b++]=252|d>>30;a[b++]=128|d>>24&63}a[b++]=128|d>>18&63}a[b++]=128|d>>12&63}a[b++]=128|d>>6&63}a[b++]=128|d&63}}a[b]=0;return b-h}
function ka(e,a,b){return va(e,J,a,b)}function da(e){for(var a=0,b=0;b<e.length;++b){var f=e.charCodeAt(b);55296<=f&&57343>=f&&(f=65536+((f&1023)<<10)|e.charCodeAt(++b)&1023);127>=f?++a:a=2047>=f?a+2:65535>=f?a+3:2097151>=f?a+4:67108863>=f?a+5:a+6}return a}function yb(e){return e.replace(/__Z[\w\d_]+/g,function(e){var b;a:{var f=a.___cxa_demangle||a.__cxa_demangle;if(f)try{var h=e.substr(1),d=da(h)+1,g=L(d);ka(h,g,d);var t=L(4),k=f(g,0,0,t);if(0===Xa(t,"i32")&&k){b=M(k);break a}}catch(H){}finally{g&&
U(g),t&&U(t),k&&U(k)}else m.la("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");b=e}return e===b?e:e+" ["+b+"]"})}function wa(){var e;a:{e=Error();if(!e.stack){try{throw Error(0);}catch(c){e=c}if(!e.stack){e="(no stack trace available)";break a}}e=e.stack.toString()}a.extraStackTrace&&(e+="\n"+a.extraStackTrace());return yb(e)}function Za(e,a){0<e%a&&(e+=a-e%a);return e}function $a(){a.HEAP8=D=new Int8Array(I);a.HEAP16=ca=new Int16Array(I);a.HEAP32=n=new Int32Array(I);
a.HEAPU8=J=new Uint8Array(I);a.HEAPU16=ab=new Uint16Array(I);a.HEAPU32=bb=new Uint32Array(I);a.HEAPF32=ta=new Float32Array(I);a.HEAPF64=ua=new Float64Array(I)}function cb(){var e=a.usingWasm?zb:Ab,c=2147483648-e;if(n[S>>2]>c)return!1;var b=E;for(E=Math.max(E,Bb);E<n[S>>2];)536870912>=E?E=Za(2*E,e):E=Math.min(Za((3*E+2147483648)/4,e),c);e=a.reallocBuffer(E);if(!e||e.byteLength!=E)return E=b,!1;a.buffer=I=e;$a();return!0}function ea(e){for(;0<e.length;){var c=e.shift();if("function"==typeof c)c();else{var b=
c.l;"number"===typeof b?void 0===c.Ha?a.dynCall_v(b):a.dynCall_vi(b,c.Ha):b(void 0===c.Ha?null:c.Ha)}}}function db(e){eb.unshift(e)}function fb(e){gb.unshift(e)}function T(e,a,b){b=Array(0<b?b:da(e)+1);e=va(e,b,0,b.length);a&&(b.length=e);return b}function Fa(e,a){D.set(e,a)}function xa(e,a,b){for(var f=0;f<e.length;++f)D[a++>>0]=e.charCodeAt(f);b||(D[a>>0]=0)}function hb(){Z++;a.monitorRunDependencies&&a.monitorRunDependencies(Z)}function Ga(){Z--;a.monitorRunDependencies&&a.monitorRunDependencies(Z);
if(0==Z&&(null!==Ha&&(clearInterval(Ha),Ha=null),la)){var e=la;la=null;e()}}function Ia(e,a){ma.unshift({l:e,Ha:a})}function fa(){return!!fa.n}function V(){var e=w.ga;if(!e)return(m.za(0),0)|0;var c=w.B[e],b=c.type;if(!b)return(m.za(0),e)|0;var f=Array.prototype.slice.call(arguments);a.___cxa_is_pointer_type(b);V.buffer||(V.buffer=L(4));n[V.buffer>>2]=e;for(var e=V.buffer,h=0;h<f.length;h++)if(f[h]&&a.___cxa_can_catch(f[h],b,e))return e=n[e>>2],c.Cb=e,(m.za(f[h]),e)|0;e=n[e>>2];return(m.za(b),e)|
0}function ib(e){try{return U(e)}catch(a){}}function aa(e){a.___errno_location&&(n[a.___errno_location()>>2]=e);return e}function ya(e){var c,b;ya.ra?(b=n[jb>>2],c=n[b>>2]):(ya.ra=!0,Q.USER=Q.LOGNAME="web_user",Q.PATH="/",Q.PWD="/",Q.HOME="/home/web_user",Q.LANG="C",Q._=a.thisProgram,c=A(1024,"i8",2),b=A(256,"i8*",2),n[b>>2]=c,n[jb>>2]=b);var f=[],h=0,d;for(d in e)if("string"===typeof e[d]){var g=d+"="+e[d];f.push(g);h+=g.length}if(1024<h)throw Error("Environment size exceeded TOTAL_ENV_SIZE!");for(e=
0;e<f.length;e++)g=f[e],xa(g,c),n[b+4*e>>2]=c,c+=g.length+1;n[b+4*f.length>>2]=0}function na(e){if(0===e)return 0;e=M(e);if(!Q.hasOwnProperty(e))return 0;na.ra&&U(na.ra);na.ra=A(T(Q[e]),"i8",0);return na.ra}function oa(e){return 0===e%4&&(0!==e%100||0===e%400)}function za(e,a){for(var b=0,f=0;f<=a;b+=e[f++]);return b}function pa(e,a){for(var b=new Date(e.getTime());0<a;){var f=b.getMonth(),h=(oa(b.getFullYear())?Aa:Ba)[f];if(a>h-b.getDate())a-=h-b.getDate()+1,b.setDate(1),11>f?b.setMonth(f+1):(b.setMonth(0),
b.setFullYear(b.getFullYear()+1));else{b.setDate(b.getDate()+a);break}}return b}function kb(e,a,b,f){function h(e,a,c){for(e="number"===typeof e?e.toString():e||"";e.length<a;)e=c[0]+e;return e}function d(e,a){return h(e,a,"0")}function g(e,a){function c(e){return 0>e?-1:0<e?1:0}var b;0===(b=c(e.getFullYear()-a.getFullYear()))&&0===(b=c(e.getMonth()-a.getMonth()))&&(b=c(e.getDate()-a.getDate()));return b}function t(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;
case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function k(e){e=pa(new Date(e.s+1900,0,1),e.Va);var a=t(new Date(e.getFullYear()+1,0,4));return 0>=g(t(new Date(e.getFullYear(),0,4)),e)?0>=g(a,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var H=n[f+40>>2];f={vd:n[f>>2],ud:n[f+4>>2],Ua:n[f+8>>2],aa:n[f+12>>2],U:n[f+
16>>2],s:n[f+20>>2],bc:n[f+24>>2],Va:n[f+28>>2],rg:n[f+32>>2],td:n[f+36>>2],wd:H?M(H):""};b=M(b);var H={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"},N;for(N in H)b=b.replace(new RegExp(N,"g"),H[N]);var m="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" "),H={"%a":function(e){return m[e.bc].substring(0,
3)},"%A":function(e){return m[e.bc]},"%b":function(e){return p[e.U].substring(0,3)},"%B":function(e){return p[e.U]},"%C":function(e){return d((e.s+1900)/100|0,2)},"%d":function(e){return d(e.aa,2)},"%e":function(e){return h(e.aa,2," ")},"%g":function(e){return k(e).toString().substring(2)},"%G":function(e){return k(e)},"%H":function(e){return d(e.Ua,2)},"%I":function(e){e=e.Ua;0==e?e=12:12<e&&(e-=12);return d(e,2)},"%j":function(e){return d(e.aa+za(oa(e.s+1900)?Aa:Ba,e.U-1),3)},"%m":function(e){return d(e.U+
1,2)},"%M":function(e){return d(e.ud,2)},"%n":function(){return"\n"},"%p":function(e){return 0<=e.Ua&&12>e.Ua?"AM":"PM"},"%S":function(e){return d(e.vd,2)},"%t":function(){return"\t"},"%u":function(e){return(new Date(e.s+1900,e.U+1,e.aa,0,0,0,0)).getDay()||7},"%U":function(e){var a=new Date(e.s+1900,0,1),c=0===a.getDay()?a:pa(a,7-a.getDay());e=new Date(e.s+1900,e.U,e.aa);return 0>g(c,e)?d(Math.ceil((31-c.getDate()+(za(oa(e.getFullYear())?Aa:Ba,e.getMonth()-1)-31)+e.getDate())/7),2):0===g(c,a)?"01":
"00"},"%V":function(e){var a=t(new Date(e.s+1900,0,4)),c=t(new Date(e.s+1901,0,4)),b=pa(new Date(e.s+1900,0,1),e.Va);return 0>g(b,a)?"53":0>=g(c,b)?"01":d(Math.ceil((a.getFullYear()<e.s+1900?e.Va+32-a.getDate():e.Va+1-a.getDate())/7),2)},"%w":function(e){return(new Date(e.s+1900,e.U+1,e.aa,0,0,0,0)).getDay()},"%W":function(e){var a=new Date(e.s,0,1),c=1===a.getDay()?a:pa(a,0===a.getDay()?1:7-a.getDay()+1);e=new Date(e.s+1900,e.U,e.aa);return 0>g(c,e)?d(Math.ceil((31-c.getDate()+(za(oa(e.getFullYear())?
Aa:Ba,e.getMonth()-1)-31)+e.getDate())/7),2):0===g(c,a)?"01":"00"},"%y":function(e){return(e.s+1900).toString().substring(2)},"%Y":function(e){return e.s+1900},"%z":function(e){e=e.td;var a=0<=e;e=Math.abs(e)/60;return(a?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":function(e){return e.wd},"%%":function(){return"%"}};for(N in H)0<=b.indexOf(N)&&(b=b.replace(new RegExp(N,"g"),H[N](f)));N=T(b,!1);if(N.length>a)return 0;Fa(N,e);return N.length-1}function ba(){G()}function lb(){return O||"undefined"!==
typeof dateNow||(ga||R)&&self.performance&&self.performance.now}function qa(e,c){qa.n||(qa.n={});e in qa.n||(a.dynCall_v(c),qa.n[e]=1)}function mb(e){a.exit(e)}function ha(e){this.name="ExitStatus";this.message="Program terminated with exit("+e+")"}function Ja(e){function c(){if(!a.calledRun&&(a.calledRun=!0,!ia)){ra||(ra=!0,ea(ja));ea(Ka);if(a.onRuntimeInitialized)a.onRuntimeInitialized();a._main&&nb&&a.callMain(e);if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)fb(a.postRun.shift());
ea(gb)}}e=e||a.arguments;null===ob&&(ob=Date.now());if(!(0<Z)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)db(a.preRun.shift());ea(eb);0<Z||a.calledRun||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1);c()},1)):c())}}function pb(e,c){if(!c||!a.noExitRuntime){if(!a.noExitRuntime&&(ia=!0,P=Db,ea(ma),a.onExit))a.onExit(e);O&&process.exit(e);a.quit(e,new ha(e))}}function G(e){if(a.onAbort)a.onAbort(e);void 0!==
e?(a.print(e),a.Ra(e),e=JSON.stringify(e)):e="";ia=!0;var c="abort("+e+") at "+wa()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";qb&&qb.forEach(function(a){c=a(c,e)});throw c;}function F(e){try{var a=m.Ta();return e()}finally{m.Ba(a)}}function y(e){return e?A(T(e),"i8",1):0}function K(e){for(var a=m.Aa(e.length<<2),b=0;b<e.length;b++)n[a+(b<<2)>>2]=e[b];return a}var a;a||(a=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));
var sa={},W;for(W in a)a.hasOwnProperty(W)&&(sa[W]=a[W]);var ga=!1,R=!1,O=!1,La=!1;if(a.ENVIRONMENT)if("WEB"===a.ENVIRONMENT)ga=!0;else if("WORKER"===a.ENVIRONMENT)R=!0;else if("NODE"===a.ENVIRONMENT)O=!0;else if("SHELL"===a.ENVIRONMENT)La=!0;else throw Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");else ga="object"===typeof window,R="function"===typeof importScripts,O="object"===typeof process&&"function"===typeof require&&!ga&&!R,La=!ga&&
!O&&!R;if(O){a.print||(a.print=console.log);a.printErr||(a.printErr=console.warn);var Ma,Na;a.read=function(e,a){Ma||(Ma=require("fs"));Na||(Na=require("path"));e=Na.normalize(e);var b=Ma.readFileSync(e);return a?b:b.toString()};a.readBinary=function(e){e=a.read(e,!0);e.buffer||(e=new Uint8Array(e));v(e.buffer);return e};a.load=function(e){Ua(read(e))};a.thisProgram||(a.thisProgram=1<process.argv.length?process.argv[1].replace(/\\/g,"/"):"unknown-program");a.arguments=process.argv.slice(2);"undefined"!==
typeof module&&(module.exports=a);process.on("uncaughtException",function(e){if(!(e instanceof ha))throw e;});a.inspect=function(){return"[Emscripten Module object]"}}else if(La)a.print||(a.print=print),"undefined"!=typeof printErr&&(a.printErr=printErr),a.read="undefined"!=typeof read?read:function(){throw"no read() available";},a.readBinary=function(e){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(e));e=read(e,"binary");v("object"===typeof e);return e},"undefined"!=typeof scriptArgs?
a.arguments=scriptArgs:"undefined"!=typeof arguments&&(a.arguments=arguments),"function"===typeof quit&&(a.quit=function(e){quit(e)}),eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined");else if(ga||R)a.read=function(e){var a=new XMLHttpRequest;a.open("GET",e,!1);a.send(null);return a.responseText},R&&(a.readBinary=function(e){var a=new XMLHttpRequest;a.open("GET",e,!1);a.responseType="arraybuffer";a.send(null);return new Uint8Array(a.response)}),
a.readAsync=function(e,a,b){var f=new XMLHttpRequest;f.open("GET",e,!0);f.responseType="arraybuffer";f.onload=function(){200==f.status||0==f.status&&f.response?a(f.response):b()};f.onerror=b;f.send(null)},"undefined"!=typeof arguments&&(a.arguments=arguments),"undefined"!==typeof console?(a.print||(a.print=function(e){console.log(e)}),a.printErr||(a.printErr=function(e){console.warn(e)})):a.print||(a.print=function(){}),R&&(a.load=importScripts),"undefined"===typeof a.setWindowTitle&&(a.setWindowTitle=
function(e){document.title=e});else throw"Unknown runtime environment. Where are we?";!a.load&&a.read&&(a.load=function(e){Ua(a.read(e))});a.print||(a.print=function(){});a.printErr||(a.printErr=a.print);a.arguments||(a.arguments=[]);a.thisProgram||(a.thisProgram="./this.program");a.quit||(a.quit=function(e,a){throw a;});a.print=a.print;a.Ra=a.printErr;a.preRun=[];a.postRun=[];for(W in sa)sa.hasOwnProperty(W)&&(a[W]=sa[W]);var sa=void 0,m={za:function(e){return tempRet0=e},Vc:function(){return tempRet0},
Ta:function(){return P},Ba:function(e){P=e},Sb:function(e){switch(e){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===e[e.length-1]?m.$a:"i"===e[0]?(e=parseInt(e.substr(1)),v(0===e%8),e/8):0}},Sc:function(e){return Math.max(m.Sb(e),m.$a)},yf:16,ng:function(e,a){"double"===a||"i64"===a?e&7&&(v(4===(e&7)),e+=4):v(0===(e&3));return e},Sf:function(e,a,b){return b||"i64"!=e&&"double"!=e?e?Math.min(a||
(e?m.Sc(e):0),m.$a):Math.min(a,8):8},eb:function(e,c,b){return b&&b.length?a["dynCall_"+e].apply(null,[c].concat(b)):a["dynCall_"+e].call(null,c)},Ka:[],nc:function(e){for(var a=0;a<m.Ka.length;a++)if(!m.Ka[a])return m.Ka[a]=e,2*(1+a);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";},ld:function(e){m.Ka[(e-2)/2]=null},la:function(e){m.la.n||(m.la.n={});m.la.n[e]||(m.la.n[e]=1,a.Ra(e))},gb:{},Uf:function(e,a){v(a);m.gb[a]||(m.gb[a]={});var b=m.gb[a];
b[e]||(b[e]=1===a.length?function(){return m.eb(a,e)}:2===a.length?function(b){return m.eb(a,e,[b])}:function(){return m.eb(a,e,Array.prototype.slice.call(arguments))});return b[e]},Tf:function(){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";},Aa:function(e){var a=P;P=P+e|0;P=P+15&-16;return a},vb:function(e){var a=x;x=x+e|0;x=x+15&-16;return a},Mb:function(e){var a=n[S>>2];e=(a+e+15|0)&-16;n[S>>2]=e;return e>=E&&
!cb()?(n[S>>2]=a,0):a},Db:function(e,a){return Math.ceil(e/(a?a:16))*(a?a:16)},ig:function(e,a,b){return b?+(e>>>0)+4294967296*+(a>>>0):+(e>>>0)+4294967296*+(a|0)},M:8,$a:4,zf:0};a.Runtime=m;m.addFunction=m.nc;m.removeFunction=m.ld;var ia=0,rb,sb;(function(){function e(e){e=e.toString().match(h).slice(1);return{arguments:e[0],body:e[1],returnValue:e[2]}}function a(){if(!d){d={};for(var c in b)b.hasOwnProperty(c)&&(d[c]=e(b[c]))}}var b={stackSave:function(){m.Ta()},stackRestore:function(){m.Ba()},
arrayToC:function(e){var a=m.Aa(e.length);Fa(e,a);return a},stringToC:function(e){var a=0;if(null!==e&&void 0!==e&&0!==e){var c=(e.length<<2)+1,a=m.Aa(c);ka(e,a,c)}return a}},f={string:b.stringToC,array:b.arrayToC};sb=function(e,a,c,b,h){e=Va(e);var d=[],l=0;if(b)for(var g=0;g<b.length;g++){var k=f[c[g]];k?(0===l&&(l=m.Ta()),d[g]=k(b[g])):d[g]=b[g]}c=e.apply(null,d);"string"===a&&(c=M(c));if(0!==l){if(h&&h.async){EmterpreterAsync.Bf.push(function(){m.Ba(l)});return}m.Ba(l)}return c};var h=/^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,
d=null;rb=function(b,h,f){f=f||[];var g=Va(b);b=f.every(function(e){return"number"===e});var k="string"!==h;if(k&&b)return g;var m=f.map(function(e,a){return"$"+a});h="(function("+m.join(",")+") {";var n=f.length;if(!b){a();h+="var stack = "+d.stackSave.body+";";for(var p=0;p<n;p++){var r=m[p],q=f[p];"number"!==q&&(q=d[q+"ToC"],h+="var "+q.arguments+" = "+r+";",h+=q.body+";",h+=r+"=("+q.returnValue+");")}}f=e(function(){return g}).returnValue;h+="var ret = "+f+"("+m.join(",")+");";k||(f=e(function(){return M}).returnValue,
h+="ret = "+f+"(ret);");b||(a(),h+=d.stackRestore.body.replace("()","(stack)")+";");return eval(h+"return ret})")}})();a.ccall=sb;a.cwrap=rb;a.setValue=Wa;a.getValue=Xa;a.ALLOC_NORMAL=0;a.ALLOC_STACK=1;a.ALLOC_STATIC=2;a.ALLOC_DYNAMIC=3;a.ALLOC_NONE=4;a.allocate=A;a.getMemory=function(e){return Oa?ra?L(e):m.Mb(e):m.vb(e)};a.Pointer_stringify=M;a.AsciiToString=function(e){for(var a="";;){var b=D[e++>>0];if(!b)return a;a+=String.fromCharCode(b)}};a.stringToAscii=function(e,a){return xa(e,a,!1)};var Ya=
"undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;a.UTF8ArrayToString=Y;a.UTF8ToString=function(e){return Y(J,e)};a.stringToUTF8Array=va;a.stringToUTF8=ka;a.lengthBytesUTF8=da;"undefined"!==typeof TextDecoder&&new TextDecoder("utf-16le");a.stackTrace=wa;var zb=65536,Ab=16777216,Bb=16777216,I,D,J,ca,ab,n,bb,ta,ua,Pa,x,Oa,Qa,P,Ca,Ra,S;Pa=x=Qa=P=Ca=Ra=S=0;Oa=!1;a.reallocBuffer||(a.reallocBuffer=function(e){var a;try{if(ArrayBuffer.n)a=ArrayBuffer.n(I,e);else{var b=D;a=new ArrayBuffer(e);
(new Int8Array(a)).set(b)}}catch(f){return!1}return Eb(a)?a:!1});var Da;try{Da=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get),Da(new ArrayBuffer(4))}catch(bc){Da=function(e){return e.byteLength}}var Sa=a.TOTAL_STACK||5242880,E=a.TOTAL_MEMORY||16777216;E<Sa&&a.Ra("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+E+"! (TOTAL_STACK="+Sa+")");a.buffer?I=a.buffer:I=new ArrayBuffer(E);$a();n[0]=1668509029;ca[1]=25459;if(115!==J[2]||99!==J[3])throw"Runtime error: expected the system to be little-endian!";
a.HEAP=void 0;a.buffer=I;a.HEAP8=D;a.HEAP16=ca;a.HEAP32=n;a.HEAPU8=J;a.HEAPU16=ab;a.HEAPU32=bb;a.HEAPF32=ta;a.HEAPF64=ua;var eb=[],ja=[],Ka=[],ma=[],gb=[],ra=!1;a.addOnPreRun=db;a.addOnInit=function(e){ja.unshift(e)};a.addOnPreMain=function(e){Ka.unshift(e)};a.addOnExit=function(e){ma.unshift(e)};a.addOnPostRun=fb;a.intArrayFromString=T;a.intArrayToString=function(e){for(var a=[],b=0;b<e.length;b++){var f=e[b];255<f&&(f&=255);a.push(String.fromCharCode(f))}return a.join("")};a.writeStringToMemory=
function(e,a,b){m.la("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var f,h;b&&(h=a+da(e),f=D[h]);ka(e,a,Infinity);b&&(D[h]=f)};a.writeArrayToMemory=Fa;a.writeAsciiToMemory=xa;Math.imul&&-5===Math.imul(4294967295,5)||(Math.imul=function(e,a){var b=e&65535,f=a&65535;return b*f+((e>>>16)*f+b*(a>>>16)<<16)|0});Math.ag=Math.imul;Math.clz32||(Math.clz32=function(e){e=e>>>0;for(var a=0;32>a;a++)if(e&1<<31-a)return a;return 32});Math.Gf=Math.clz32;Math.trunc||
(Math.trunc=function(e){return 0>e?Math.ceil(e):Math.floor(e)});Math.trunc=Math.trunc;var ub=Math.abs,xb=Math.ceil,wb=Math.floor,vb=Math.min,Z=0,Ha=null,la=null;a.addRunDependency=hb;a.removeRunDependency=Ga;a.preloadedImages={};a.preloadedAudios={};Pa=m.M;x=Pa+83568;ja.push({l:function(){Fb()}},{l:function(){Gb()}},{l:function(){Hb()}},{l:function(){Ib()}},{l:function(){Jb()}},{l:function(){Kb()}},{l:function(){Lb()}},{l:function(){Mb()}},{l:function(){Nb()}},{l:function(){Ob()}},{l:function(){Pb()}},
{l:function(){Qb()}},{l:function(){Rb()}},{l:function(){Sb()}},{l:function(){Tb()}},{l:function(){Ub()}},{l:function(){Vb()}},{l:function(){Wb()}},{l:function(){Xb()}});A([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,192,16,0,0,208,0,0,0,209,0,0,0,252,255,255,255,252,255,255,255,192,16,0,0,210,0,0,0,211,0,0,0,0,0,0,0,0,0,0,0,136,70,0,0,239,85,0,0,64,0,0,0,0,0,0,0,144,16,0,0,7,0,0,0,8,0,0,0,192,255,255,255,192,255,255,255,144,16,0,0,9,0,0,0,10,0,0,0,176,70,0,0,39,94,0,0,240,16,0,0,0,0,0,0,176,70,0,0,108,94,0,0,
128,16,0,0,0,0,0,0,136,70,0,0,91,95,0,0,136,70,0,0,218,96,0,0,176,70,0,0,186,96,0,0,152,0,0,0,0,0,0,0,136,70,0,0,29,99,0,0,176,70,0,0,139,98,0,0,176,0,0,0,0,0,0,0,176,70,0,0,17,98,0,0,184,0,0,0,0,0,0,0,136,70,0,0,182,99,0,0,136,70,0,0,84,103,0,0,176,70,0,0,100,102,0,0,224,0,0,0,0,0,0,0,176,70,0,0,140,101,0,0,232,0,0,0,0,0,0,0,136,70,0,0,10,105,0,0,136,70,0,0,50,106,0,0,176,70,0,0,2,106,0,0,16,1,0,0,0,0,0,0,176,70,0,0,205,105,0,0,24,1,0,0,0,0,0,0,176,70,0,0,141,105,0,0,40,1,0,0,0,0,0,0,204,71,0,0,
59,105,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,56,1,0,0,2,16,0,0,176,70,0,0,42,105,0,0,72,1,0,0,0,0,0,0,136,70,0,0,121,107,0,0,176,70,0,0,70,107,0,0,120,1,0,0,0,0,0,0,176,70,0,0,14,107,0,0,128,1,0,0,0,0,0,0,204,71,0,0,196,106,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,144,1,0,0,2,16,0,0,176,70,0,0,176,106,0,0,160,1,0,0,0,0,0,0,176,70,0,0,0,111,0,0,56,22,0,0,0,0,0,0,176,70,0,0,55,124,0,0,240,1,0,0,0,0,0,0,204,71,0,0,70,124,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,16,2,0,0,2,16,0,0,176,70,0,0,139,124,0,0,32,
2,0,0,0,0,0,0,176,70,0,0,190,124,0,0,48,2,0,0,0,0,0,0,136,70,0,0,236,124,0,0,176,70,0,0,10,125,0,0,72,2,0,0,0,0,0,0,204,71,0,0,24,125,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,104,2,0,0,2,16,0,0,176,70,0,0,92,125,0,0,120,2,0,0,0,0,0,0,176,70,0,0,142,125,0,0,136,2,0,0,0,0,0,0,136,70,0,0,187,125,0,0,176,70,0,0,78,126,0,0,160,2,0,0,0,0,0,0,204,71,0,0,93,126,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,192,2,0,0,2,16,0,0,176,70,0,0,162,126,0,0,208,2,0,0,0,0,0,0,176,70,0,0,213,126,0,0,224,2,0,0,0,0,0,0,136,70,0,
0,3,127,0,0,176,70,0,0,155,128,0,0,248,2,0,0,0,0,0,0,204,71,0,0,179,128,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,24,3,0,0,2,16,0,0,176,70,0,0,12,129,0,0,40,3,0,0,0,0,0,0,176,70,0,0,83,129,0,0,56,3,0,0,0,0,0,0,176,70,0,0,143,129,0,0,72,3,0,0,0,0,0,0,136,70,0,0,198,129,0,0,176,70,0,0,116,134,0,0,144,0,0,0,0,0,0,0,176,70,0,0,211,130,0,0,112,3,0,0,0,0,0,0,136,70,0,0,233,130,0,0,176,70,0,0,39,131,0,0,112,3,0,0,0,0,0,0,176,70,0,0,251,131,0,0,112,3,0,0,0,0,0,0,176,70,0,0,70,132,0,0,216,21,0,0,0,0,0,0,176,70,
0,0,87,134,0,0,216,3,0,0,0,0,0,0,176,70,0,0,37,133,0,0,216,21,0,0,0,0,0,0,176,70,0,0,117,133,0,0,216,3,0,0,0,0,0,0,136,70,0,0,141,133,0,0,176,70,0,0,163,133,0,0,216,21,0,0,0,0,0,0,176,70,0,0,238,133,0,0,216,3,0,0,0,0,0,0,176,70,0,0,9,134,0,0,216,21,0,0,0,0,0,0,176,70,0,0,196,134,0,0,32,4,0,0,0,0,0,0,204,71,0,0,219,134,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,64,4,0,0,2,16,0,0,176,70,0,0,40,135,0,0,80,4,0,0,0,0,0,0,176,70,0,0,99,135,0,0,96,4,0,0,0,0,0,0,136,70,0,0,153,135,0,0,176,70,0,0,191,135,0,0,120,
4,0,0,0,0,0,0,204,71,0,0,217,135,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,152,4,0,0,2,16,0,0,176,70,0,0,41,136,0,0,168,4,0,0,0,0,0,0,176,70,0,0,103,136,0,0,184,4,0,0,0,0,0,0,136,70,0,0,160,136,0,0,176,70,0,0,255,136,0,0,208,4,0,0,0,0,0,0,204,71,0,0,26,137,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,240,4,0,0,2,16,0,0,176,70,0,0,107,137,0,0,0,5,0,0,0,0,0,0,176,70,0,0,170,137,0,0,16,5,0,0,0,0,0,0,136,70,0,0,228,137,0,0,176,70,0,0,77,138,0,0,144,0,0,0,0,0,0,0,176,70,0,0,80,139,0,0,56,5,0,0,0,0,0,0,204,71,0,0,
105,139,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,88,5,0,0,2,16,0,0,176,70,0,0,184,139,0,0,104,5,0,0,0,0,0,0,176,70,0,0,245,139,0,0,120,5,0,0,0,0,0,0,136,70,0,0,45,140,0,0,176,70,0,0,85,140,0,0,144,0,0,0,0,0,0,0,176,70,0,0,140,140,0,0,160,5,0,0,0,0,0,0,204,71,0,0,163,140,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,192,5,0,0,2,16,0,0,176,70,0,0,240,140,0,0,208,5,0,0,0,0,0,0,176,70,0,0,43,141,0,0,224,5,0,0,0,0,0,0,136,70,0,0,97,141,0,0,176,70,0,0,128,142,0,0,248,5,0,0,0,0,0,0,204,71,0,0,159,142,0,0,0,0,0,0,2,
0,0,0,144,0,0,0,2,0,0,0,24,6,0,0,2,16,0,0,176,70,0,0,255,142,0,0,40,6,0,0,0,0,0,0,176,70,0,0,77,143,0,0,56,6,0,0,0,0,0,0,176,70,0,0,144,143,0,0,72,6,0,0,0,0,0,0,136,70,0,0,206,143,0,0,176,70,0,0,181,146,0,0,144,0,0,0,0,0,0,0,176,70,0,0,9,154,0,0,112,6,0,0,0,0,0,0,176,70,0,0,30,154,0,0,144,0,0,0,0,0,0,0,176,70,0,0,46,154,0,0,112,6,0,0,0,0,0,0,176,70,0,0,18,158,0,0,208,6,0,0,0,0,0,0,136,70,0,0,71,154,0,0,176,70,0,0,119,157,0,0,184,6,0,0,0,0,0,0,176,70,0,0,155,157,0,0,200,6,0,0,0,0,0,0,136,70,0,0,215,
157,0,0,204,71,0,0,38,158,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,240,6,0,0,2,16,0,0,176,70,0,0,130,158,0,0,0,7,0,0,0,0,0,0,176,70,0,0,204,158,0,0,16,7,0,0,0,0,0,0,176,70,0,0,17,159,0,0,32,7,0,0,0,0,0,0,136,70,0,0,70,159,0,0,176,70,0,0,105,159,0,0,56,7,0,0,0,0,0,0,204,71,0,0,129,159,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,88,7,0,0,2,16,0,0,176,70,0,0,207,159,0,0,104,7,0,0,0,0,0,0,176,70,0,0,11,160,0,0,120,7,0,0,0,0,0,0,136,70,0,0,66,160,0,0,176,70,0,0,105,160,0,0,144,7,0,0,0,0,0,0,204,71,0,0,128,160,
0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,176,7,0,0,2,16,0,0,176,70,0,0,216,160,0,0,192,7,0,0,0,0,0,0,176,70,0,0,30,161,0,0,208,7,0,0,0,0,0,0,176,70,0,0,89,161,0,0,224,7,0,0,0,0,0,0,136,70,0,0,143,161,0,0,176,70,0,0,168,164,0,0,56,8,0,0,0,0,0,0,176,70,0,0,50,162,0,0,16,8,0,0,0,0,0,0,136,70,0,0,240,161,0,0,136,70,0,0,174,162,0,0,176,70,0,0,223,163,0,0,48,8,0,0,0,0,0,0,136,70,0,0,133,163,0,0,136,70,0,0,114,164,0,0,204,71,0,0,198,164,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,88,8,0,0,2,16,0,0,176,70,0,0,44,
165,0,0,104,8,0,0,0,0,0,0,176,70,0,0,128,165,0,0,120,8,0,0,0,0,0,0,176,70,0,0,207,165,0,0,136,8,0,0,0,0,0,0,136,70,0,0,14,166,0,0,176,70,0,0,64,166,0,0,144,0,0,0,0,0,0,0,176,70,0,0,12,167,0,0,176,8,0,0,0,0,0,0,204,71,0,0,28,167,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,208,8,0,0,2,16,0,0,176,70,0,0,116,167,0,0,224,8,0,0,0,0,0,0,176,70,0,0,186,167,0,0,240,8,0,0,0,0,0,0,176,70,0,0,251,167,0,0,0,9,0,0,0,0,0,0,136,70,0,0,44,168,0,0,176,70,0,0,166,168,0,0,24,9,0,0,0,0,0,0,204,71,0,0,187,168,0,0,0,0,0,0,2,
0,0,0,144,0,0,0,2,0,0,0,56,9,0,0,2,16,0,0,176,70,0,0,6,169,0,0,72,9,0,0,0,0,0,0,176,70,0,0,63,169,0,0,88,9,0,0,0,0,0,0,136,70,0,0,115,169,0,0,176,70,0,0,151,169,0,0,144,0,0,0,0,0,0,0,176,70,0,0,83,170,0,0,128,9,0,0,0,0,0,0,204,71,0,0,109,170,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,160,9,0,0,2,16,0,0,176,70,0,0,189,170,0,0,176,9,0,0,0,0,0,0,176,70,0,0,251,170,0,0,192,9,0,0,0,0,0,0,136,70,0,0,52,171,0,0,176,70,0,0,113,171,0,0,216,9,0,0,0,0,0,0,204,71,0,0,139,171,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,
248,9,0,0,2,16,0,0,176,70,0,0,219,171,0,0,8,10,0,0,0,0,0,0,176,70,0,0,25,172,0,0,24,10,0,0,0,0,0,0,136,70,0,0,82,172,0,0,176,70,0,0,126,172,0,0,48,10,0,0,0,0,0,0,204,71,0,0,148,172,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,80,10,0,0,2,16,0,0,176,70,0,0,224,172,0,0,96,10,0,0,0,0,0,0,176,70,0,0,26,173,0,0,112,10,0,0,0,0,0,0,136,70,0,0,79,173,0,0,176,70,0,0,116,173,0,0,136,10,0,0,0,0,0,0,204,71,0,0,133,173,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,168,10,0,0,2,16,0,0,176,70,0,0,215,173,0,0,184,10,0,0,0,0,0,
0,176,70,0,0,23,174,0,0,200,10,0,0,0,0,0,0,176,70,0,0,76,174,0,0,216,10,0,0,0,0,0,0,136,70,0,0,124,174,0,0,176,70,0,0,69,180,0,0,144,0,0,0,0,0,0,0,176,70,0,0,139,176,0,0,8,11,0,0,0,0,0,0,136,70,0,0,95,176,0,0,136,70,0,0,0,177,0,0,176,70,0,0,153,177,0,0,32,11,0,0,0,0,0,0,204,71,0,0,229,177,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,64,11,0,0,2,16,0,0,176,70,0,0,103,178,0,0,80,11,0,0,0,0,0,0,176,70,0,0,215,178,0,0,96,11,0,0,0,0,0,0,136,70,0,0,66,179,0,0,176,70,0,0,93,185,0,0,144,0,0,0,0,0,0,0,176,70,0,0,
79,182,0,0,144,11,0,0,0,0,0,0,136,70,0,0,5,182,0,0,136,70,0,0,211,182,0,0,176,70,0,0,77,183,0,0,168,11,0,0,0,0,0,0,204,71,0,0,93,183,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,200,11,0,0,2,16,0,0,176,70,0,0,163,183,0,0,216,11,0,0,0,0,0,0,176,70,0,0,215,183,0,0,232,11,0,0,0,0,0,0,136,70,0,0,6,184,0,0,176,70,0,0,68,184,0,0,0,12,0,0,0,0,0,0,204,71,0,0,97,184,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,32,12,0,0,2,16,0,0,176,70,0,0,180,184,0,0,48,12,0,0,0,0,0,0,176,70,0,0,245,184,0,0,64,12,0,0,0,0,0,0,136,70,0,
0,49,185,0,0,176,70,0,0,103,186,0,0,88,12,0,0,0,0,0,0,204,71,0,0,131,186,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,120,12,0,0,2,16,0,0,176,70,0,0,213,186,0,0,136,12,0,0,0,0,0,0,176,70,0,0,21,187,0,0,152,12,0,0,0,0,0,0,136,70,0,0,80,187,0,0,176,70,0,0,175,187,0,0,144,0,0,0,0,0,0,0,176,70,0,0,34,190,0,0,144,0,0,0,0,0,0,0,176,70,0,0,200,187,0,0,208,12,0,0,0,0,0,0,204,71,0,0,226,187,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,240,12,0,0,2,16,0,0,176,70,0,0,50,188,0,0,0,13,0,0,0,0,0,0,176,70,0,0,112,188,0,0,16,
13,0,0,0,0,0,0,136,70,0,0,169,188,0,0,176,70,0,0,34,189,0,0,40,13,0,0,0,0,0,0,204,71,0,0,58,189,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,72,13,0,0,2,16,0,0,176,70,0,0,136,189,0,0,88,13,0,0,0,0,0,0,176,70,0,0,196,189,0,0,104,13,0,0,0,0,0,0,136,70,0,0,251,189,0,0,176,70,0,0,197,190,0,0,128,13,0,0,0,0,0,0,204,71,0,0,226,190,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,160,13,0,0,2,16,0,0,176,70,0,0,53,191,0,0,176,13,0,0,0,0,0,0,176,70,0,0,118,191,0,0,192,13,0,0,0,0,0,0,136,70,0,0,178,191,0,0,176,70,0,0,152,192,
0,0,216,13,0,0,0,0,0,0,204,71,0,0,173,192,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,248,13,0,0,2,16,0,0,176,70,0,0,255,192,0,0,8,14,0,0,0,0,0,0,176,70,0,0,63,193,0,0,24,14,0,0,0,0,0,0,176,70,0,0,120,193,0,0,40,14,0,0,0,0,0,0,136,70,0,0,172,193,0,0,176,70,0,0,97,194,0,0,64,14,0,0,0,0,0,0,204,71,0,0,118,194,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,96,14,0,0,2,16,0,0,176,70,0,0,193,194,0,0,112,14,0,0,0,0,0,0,176,70,0,0,250,194,0,0,128,14,0,0,0,0,0,0,136,70,0,0,46,195,0,0,176,70,0,0,232,198,0,0,152,14,0,0,0,
0,0,0,176,70,0,0,83,197,0,0,168,14,0,0,0,0,0,0,204,71,0,0,107,197,0,0,0,0,0,0,2,0,0,0,144,0,0,0,2,0,0,0,200,14,0,0,2,16,0,0,176,70,0,0,196,197,0,0,216,14,0,0,0,0,0,0,176,70,0,0,11,198,0,0,232,14,0,0,0,0,0,0,176,70,0,0,78,198,0,0,248,14,0,0,0,0,0,0,176,70,0,0,138,198,0,0,8,15,0,0,0,0,0,0,136,70,0,0,193,198,0,0,176,70,0,0,100,199,0,0,56,15,0,0,0,0,0,0,148,71,0,0,65,199,0,0,0,0,0,0,48,15,0,0,176,71,0,0,83,199,0,0,136,70,0,0,169,199,0,0,60,0,0,0,0,0,0,0,144,16,0,0,7,0,0,0,8,0,0,0,196,255,255,255,196,
255,255,255,144,16,0,0,9,0,0,0,10,0,0,0,176,70,0,0,2,208,0,0,144,16,0,0,0,0,0,0,176,70,0,0,7,215,0,0,144,15,0,0,0,0,0,0,136,70,0,0,219,214,0,0,136,70,0,0,103,215,0,0,176,70,0,0,225,218,0,0,144,15,0,0,0,0,0,0,136,70,0,0,181,218,0,0,136,70,0,0,70,223,0,0,176,70,0,0,81,227,0,0,208,15,0,0,0,0,0,0,136,70,0,0,37,227,0,0,136,70,0,0,177,227,0,0,104,0,0,0,0,0,0,0,192,16,0,0,208,0,0,0,209,0,0,0,152,255,255,255,152,255,255,255,192,16,0,0,210,0,0,0,211,0,0,0,176,70,0,0,172,229,0,0,128,16,0,0,0,0,0,0,176,70,0,
0,221,229,0,0,192,16,0,0,0,0,0,0,56,0,0,0,0,0,0,0,192,16,0,0,208,0,0,0,209,0,0,0,200,255,255,255,200,255,255,255,192,16,0,0,210,0,0,0,211,0,0,0,176,70,0,0,227,236,0,0,192,16,0,0,0,0,0,0,176,70,0,0,252,7,1,0,104,16,0,0,0,0,0,0,136,70,0,0,234,7,1,0,176,70,0,0,38,8,1,0,104,16,0,0,0,0,0,0,136,70,0,0,80,8,1,0,136,70,0,0,129,8,1,0,204,71,0,0,178,8,1,0,0,0,0,0,1,0,0,0,88,16,0,0,3,244,255,255,204,71,0,0,225,8,1,0,0,0,0,0,1,0,0,0,112,16,0,0,3,244,255,255,204,71,0,0,16,9,1,0,0,0,0,0,1,0,0,0,88,16,0,0,3,244,
255,255,204,71,0,0,63,9,1,0,0,0,0,0,1,0,0,0,112,16,0,0,3,244,255,255,204,71,0,0,110,9,1,0,3,0,0,0,2,0,0,0,144,16,0,0,2,0,0,0,192,16,0,0,2,8,0,0,176,70,0,0,203,9,1,0,0,22,0,0,0,0,0,0,176,70,0,0,233,9,1,0,40,22,0,0,0,0,0,0,176,70,0,0,19,10,1,0,136,16,0,0,0,0,0,0,176,70,0,0,44,10,1,0,128,16,0,0,0,0,0,0,176,70,0,0,107,10,1,0,136,16,0,0,0,0,0,0,176,70,0,0,131,10,1,0,128,16,0,0,0,0,0,0,176,70,0,0,155,10,1,0,128,17,0,0,0,0,0,0,176,70,0,0,175,10,1,0,208,21,0,0,0,0,0,0,176,70,0,0,197,10,1,0,128,17,0,0,0,0,
0,0,204,71,0,0,255,10,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,192,17,0,0,0,0,0,0,204,71,0,0,67,11,1,0,0,0,0,0,1,0,0,0,216,17,0,0,0,0,0,0,136,70,0,0,89,11,1,0,204,71,0,0,114,11,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,0,18,0,0,0,0,0,0,204,71,0,0,182,11,1,0,0,0,0,0,1,0,0,0,216,17,0,0,0,0,0,0,204,71,0,0,218,11,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,56,18,0,0,0,0,0,0,204,71,0,0,30,12,1,0,0,0,0,0,1,0,0,0,80,18,0,0,0,0,0,0,136,70,0,0,52,12,1,0,204,71,0,0,77,12,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,120,18,
0,0,0,0,0,0,204,71,0,0,145,12,1,0,0,0,0,0,1,0,0,0,80,18,0,0,0,0,0,0,204,71,0,0,231,13,1,0,0,0,0,0,3,0,0,0,128,17,0,0,2,0,0,0,184,18,0,0,2,0,0,0,192,18,0,0,0,8,0,0,136,70,0,0,78,14,1,0,136,70,0,0,44,14,1,0,204,71,0,0,97,14,1,0,0,0,0,0,3,0,0,0,128,17,0,0,2,0,0,0,184,18,0,0,2,0,0,0,240,18,0,0,0,8,0,0,136,70,0,0,166,14,1,0,204,71,0,0,200,14,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,24,19,0,0,0,8,0,0,136,70,0,0,13,15,1,0,204,71,0,0,55,15,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,24,19,0,0,0,8,0,0,204,71,0,0,
124,15,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,96,19,0,0,2,0,0,0,136,70,0,0,152,15,1,0,204,71,0,0,173,15,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,96,19,0,0,2,0,0,0,204,71,0,0,201,15,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,96,19,0,0,2,0,0,0,204,71,0,0,229,15,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,96,19,0,0,2,0,0,0,204,71,0,0,32,16,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,232,19,0,0,0,0,0,0,136,70,0,0,102,16,1,0,204,71,0,0,138,16,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,16,20,0,0,0,0,0,0,136,70,0,0,208,16,
1,0,204,71,0,0,239,16,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,56,20,0,0,0,0,0,0,136,70,0,0,53,17,1,0,204,71,0,0,78,17,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,96,20,0,0,0,0,0,0,136,70,0,0,148,17,1,0,204,71,0,0,173,17,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,136,20,0,0,2,0,0,0,136,70,0,0,194,17,1,0,204,71,0,0,89,18,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,136,20,0,0,2,0,0,0,176,70,0,0,218,17,1,0,192,20,0,0,0,0,0,0,204,71,0,0,253,17,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,224,20,0,0,2,0,0,0,136,70,0,0,32,18,
1,0,176,70,0,0,55,18,1,0,192,20,0,0,0,0,0,0,204,71,0,0,110,18,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,224,20,0,0,2,0,0,0,204,71,0,0,144,18,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,224,20,0,0,2,0,0,0,204,71,0,0,178,18,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,224,20,0,0,2,0,0,0,176,70,0,0,213,18,1,0,128,17,0,0,0,0,0,0,204,71,0,0,235,18,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,136,21,0,0,2,0,0,0,136,70,0,0,253,18,1,0,204,71,0,0,18,19,1,0,0,0,0,0,2,0,0,0,128,17,0,0,2,0,0,0,136,21,0,0,2,0,0,0,176,70,0,0,36,19,
1,0,128,17,0,0,0,0,0,0,176,70,0,0,57,19,1,0,128,17,0,0,0,0,0,0,136,70,0,0,85,19,1,0,204,71,0,0,110,19,1,0,0,0,0,0,1,0,0,0,208,21,0,0,0,0,0,0,176,70,0,0,30,21,1,0,0,22,0,0,0,0,0,0,176,70,0,0,65,21,1,0,16,22,0,0,0,0,0,0,136,70,0,0,88,21,1,0,176,70,0,0,154,21,1,0,0,22,0,0,0,0,0,0,176,70,0,0,188,21,1,0,152,22,0,0,0,0,0,0,136,70,0,0,123,22,1,0,176,70,0,0,219,22,1,0,80,22,0,0,0,0,0,0,176,70,0,0,136,22,1,0,96,22,0,0,0,0,0,0,136,70,0,0,169,22,1,0,176,70,0,0,182,22,1,0,64,22,0,0,0,0,0,0,176,70,0,0,254,23,
1,0,56,22,0,0,0,0,0,0,176,70,0,0,26,24,1,0,56,22,0,0,0,0,0,0,176,70,0,0,42,24,1,0,56,22,0,0,0,0,0,0,176,70,0,0,60,24,1,0,136,22,0,0,0,0,0,0,176,70,0,0,81,24,1,0,136,22,0,0,0,0,0,0,176,70,0,0,98,24,1,0,136,22,0,0,0,0,0,0,176,70,0,0,115,24,1,0,152,22,0,0,0,0,0,0,176,70,0,0,148,24,1,0,56,22,0,0,0,0,0,0,176,70,0,0,196,24,1,0,80,22,0,0,0,0,0,0,176,70,0,0,160,24,1,0,248,22,0,0,0,0,0,0,176,70,0,0,230,24,1,0,80,22,0,0,0,0,0,0,120,71,0,0,14,25,1,0,120,71,0,0,16,25,1,0,176,70,0,0,19,25,1,0,80,22,0,0,0,0,0,
0,176,70,0,0,56,25,1,0,64,22,0,0,0,0,0,0,36,0,0,0,11,0,0,0,35,0,0,0,10,0,0,0,64,0,0,0,0,0,0,0,112,0,0,0,1,0,0,0,2,0,0,0,56,0,0,0,248,255,255,255,112,0,0,0,3,0,0,0,4,0,0,0,192,255,255,255,192,255,255,255,112,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,144,0,0,0,13,0,0,0,14,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,5,0,0,0,2,0,0,
0,4,0,0,0,5,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,6,0,0,0,0,0,0,0,152,0,0,0,9,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,7,0,0,0,0,0,0,0,200,0,0,0,3,0,0,0,0,0,0,0,184,0,0,0,3,0,0,0,0,0,0,0,248,0,0,0,4,0,0,0,0,0,0,0,232,0,0,0,5,0,0,0,0,0,0,0,104,1,0,0,15,0,0,0,16,0,0,0,1,0,0,0,13,0,0,0,8,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,72,1,0,0,
15,0,0,0,17,0,0,0,1,0,0,0,13,0,0,0,8,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,192,1,0,0,18,0,0,0,19,0,0,0,1,0,0,0,14,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,160,1,0,0,20,0,0,0,21,0,0,0,1,0,0,0,14,0,0,0,9,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,208,1,0,0,22,0,0,0,23,0,0,0,11,0,0,0,0,0,0,0,224,1,0,0,24,0,0,0,25,0,0,0,1,0,0,0,15,0,0,0,10,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,240,1,0,0,26,0,0,0,27,0,0,0,1,0,0,0,15,0,0,0,10,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,56,2,0,0,28,0,0,0,29,0,0,0,1,0,0,0,16,0,0,0,11,0,0,0,14,0,0,0,15,0,0,0,0,0,0,
0,72,2,0,0,28,0,0,0,30,0,0,0,1,0,0,0,16,0,0,0,11,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,2,0,0,31,0,0,0,32,0,0,0,1,0,0,0,17,0,0,0,12,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,160,2,0,0,33,0,0,0,34,0,0,0,1,0,0,0,17,0,0,0,12,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,232,2,0,0,35,0,0,0,36,0,0,0,1,0,0,0,18,0,0,0,13,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,248,2,0,0,37,0,0,0,38,0,0,0,1,0,0,0,18,0,0,0,13,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,80,3,0,0,39,0,0,0,40,0,0,0,1,0,0,0,2,0,0,0,14,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,96,3,0,0,41,0,0,0,42,0,0,0,4,
0,0,0,0,0,0,0,112,3,0,0,43,0,0,0,44,0,0,0,1,0,0,0,0,0,0,0,120,3,0,0,45,0,0,0,46,0,0,0,5,0,0,0,0,0,0,0,136,3,0,0,43,0,0,0,47,0,0,0,6,0,0,0,0,0,0,0,152,3,0,0,48,0,0,0,49,0,0,0,50,0,0,0,19,0,0,0,51,0,0,0,0,0,0,0,168,3,0,0,52,0,0,0,0,0,0,0,184,3,0,0,48,0,0,0,53,0,0,0,54,0,0,0,20,0,0,0,55,0,0,0,0,0,0,0,224,3,0,0,48,0,0,0,56,0,0,0,57,0,0,0,20,0,0,0,58,0,0,0,0,0,0,0,200,3,0,0,59,0,0,0,0,0,0,0,0,4,0,0,48,0,0,0,60,0,0,0,61,0,0,0,20,0,0,0,62,0,0,0,0,0,0,0,240,3,0,0,63,0,0,0,0,0,0,0,216,3,0,0,64,0,0,0,0,0,0,
0,16,4,0,0,65,0,0,0,66,0,0,0,1,0,0,0,19,0,0,0,15,0,0,0,22,0,0,0,23,0,0,0,0,0,0,0,32,4,0,0,67,0,0,0,68,0,0,0,1,0,0,0,19,0,0,0,15,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,104,4,0,0,69,0,0,0,70,0,0,0,1,0,0,0,20,0,0,0,16,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,4,0,0,71,0,0,0,72,0,0,0,1,0,0,0,20,0,0,0,16,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,192,4,0,0,73,0,0,0,74,0,0,0,1,0,0,0,21,0,0,0,17,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,208,4,0,0,75,0,0,0,76,0,0,0,1,0,0,0,21,0,0,0,17,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,24,5,0,0,13,0,0,0,77,0,0,0,1,
0,0,0,22,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,40,5,0,0,78,0,0,0,79,0,0,0,1,0,0,0,23,0,0,0,18,0,0,0,26,0,0,0,27,0,0,0,0,0,0,0,56,5,0,0,80,0,0,0,81,0,0,0,1,0,0,0,23,0,0,0,18,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,5,0,0,13,0,0,0,82,0,0,0,1,0,0,0,24,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,5,0,0,83,0,0,0,84,0,0,0,1,0,0,0,25,0,0,0,19,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,5,0,0,83,0,0,0,85,0,0,0,1,0,0,0,25,0,0,0,19,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,232,5,0,0,86,0,0,0,87,0,0,0,1,0,0,0,26,0,0,0,20,0,0,0,28,0,0,0,29,
0,0,0,0,0,0,0,248,5,0,0,88,0,0,0,89,0,0,0,1,0,0,0,26,0,0,0,20,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,80,6,0,0,13,0,0,0,90,0,0,0,1,0,0,0,27,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,96,6,0,0,13,0,0,0,91,0,0,0,1,0,0,0,28,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,112,6,0,0,13,0,0,0,92,0,0,0,1,0,0,0,29,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,6,0,0,13,0,0,0,93,0,0,0,1,0,0,0,30,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,6,0,0,94,0,0,0,95,0,0,0,1,0,0,0,31,0,0,0,21,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,168,6,0,0,6,0,0,0,0,0,0,
0,184,6,0,0,7,0,0,0,0,0,0,0,208,6,0,0,94,0,0,0,96,0,0,0,1,0,0,0,31,0,0,0,21,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,40,7,0,0,97,0,0,0,98,0,0,0,1,0,0,0,32,0,0,0,22,0,0,0,32,0,0,0,33,0,0,0,0,0,0,0,56,7,0,0,97,0,0,0,99,0,0,0,1,0,0,0,32,0,0,0,22,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,7,0,0,100,0,0,0,101,0,0,0,1,0,0,0,33,0,0,0,23,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,144,7,0,0,102,0,0,0,103,0,0,0,1,0,0,0,33,0,0,0,23,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,232,7,0,0,104,0,0,0,105,0,0,0,34,0,0,0,35,0,0,0,24,0,0,0,36,0,0,0,37,0,0,0,0,
0,0,0,248,7,0,0,106,0,0,0,107,0,0,0,38,0,0,0,8,0,0,0,108,0,0,0,109,0,0,0,7,0,0,0,21,0,0,0,39,0,0,0,0,0,0,0,24,8,0,0,110,0,0,0,111,0,0,0,40,0,0,0,9,0,0,0,112,0,0,0,113,0,0,0,36,0,0,0,22,0,0,0,41,0,0,0,0,0,0,0,56,8,0,0,114,0,0,0,115,0,0,0,1,0,0,0,35,0,0,0,24,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,8,0,0,13,0,0,0,116,0,0,0,1,0,0,0,37,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,8,0,0,117,0,0,0,118,0,0,0,1,0,0,0,38,0,0,0,25,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,176,8,0,0,119,0,0,0,120,0,0,0,1,0,0,0,38,0,0,0,25,0,0,0,
5,0,0,0,6,0,0,0,0,0,0,0,8,9,0,0,121,0,0,0,122,0,0,0,1,0,0,0,39,0,0,0,26,0,0,0,42,0,0,0,43,0,0,0,0,0,0,0,24,9,0,0,121,0,0,0,123,0,0,0,1,0,0,0,39,0,0,0,26,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,96,9,0,0,13,0,0,0,124,0,0,0,1,0,0,0,40,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,112,9,0,0,125,0,0,0,126,0,0,0,1,0,0,0,41,0,0,0,27,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,9,0,0,125,0,0,0,127,0,0,0,1,0,0,0,41,0,0,0,27,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,200,9,0,0,128,0,0,0,129,0,0,0,1,0,0,0,42,0,0,0,28,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,216,
9,0,0,128,0,0,0,130,0,0,0,1,0,0,0,42,0,0,0,28,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,32,10,0,0,131,0,0,0,132,0,0,0,1,0,0,0,43,0,0,0,29,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,48,10,0,0,131,0,0,0,133,0,0,0,1,0,0,0,43,0,0,0,29,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,10,0,0,134,0,0,0,135,0,0,0,1,0,0,0,44,0,0,0,30,0,0,0,44,0,0,0,45,0,0,0,0,0,0,0,136,10,0,0,136,0,0,0,137,0,0,0,1,0,0,0,44,0,0,0,30,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,224,10,0,0,138,0,0,0,139,0,0,0,1,0,0,0,45,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,240,10,0,0,140,0,0,0,
141,0,0,0,46,0,0,0,10,0,0,0,142,0,0,0,143,0,0,0,47,0,0,0,23,0,0,0,48,0,0,0,0,0,0,0,16,11,0,0,144,0,0,0,145,0,0,0,1,0,0,0,46,0,0,0,31,0,0,0,49,0,0,0,50,0,0,0,0,0,0,0,32,11,0,0,144,0,0,0,146,0,0,0,1,0,0,0,46,0,0,0,31,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,104,11,0,0,147,0,0,0,148,0,0,0,1,0,0,0,47,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,11,0,0,149,0,0,0,150,0,0,0,51,0,0,0,11,0,0,0,151,0,0,0,152,0,0,0,24,0,0,0,25,0,0,0,52,0,0,0,0,0,0,0,152,11,0,0,153,0,0,0,154,0,0,0,1,0,0,0,48,0,0,0,32,0,0,0,53,0,0,0,54,0,0,
0,0,0,0,0,168,11,0,0,153,0,0,0,155,0,0,0,1,0,0,0,48,0,0,0,32,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,240,11,0,0,156,0,0,0,157,0,0,0,1,0,0,0,49,0,0,0,33,0,0,0,55,0,0,0,56,0,0,0,0,0,0,0,0,12,0,0,156,0,0,0,158,0,0,0,1,0,0,0,49,0,0,0,33,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,72,12,0,0,159,0,0,0,160,0,0,0,1,0,0,0,50,0,0,0,34,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,88,12,0,0,161,0,0,0,162,0,0,0,1,0,0,0,50,0,0,0,34,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,12,0,0,13,0,0,0,163,0,0,0,1,0,0,0,51,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,176,12,
0,0,164,0,0,0,165,0,0,0,1,0,0,0,52,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,192,12,0,0,166,0,0,0,167,0,0,0,1,0,0,0,53,0,0,0,35,0,0,0,59,0,0,0,60,0,0,0,0,0,0,0,208,12,0,0,166,0,0,0,168,0,0,0,1,0,0,0,53,0,0,0,35,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,24,13,0,0,169,0,0,0,170,0,0,0,1,0,0,0,54,0,0,0,36,0,0,0,61,0,0,0,62,0,0,0,0,0,0,0,40,13,0,0,169,0,0,0,171,0,0,0,1,0,0,0,54,0,0,0,36,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,112,13,0,0,172,0,0,0,173,0,0,0,1,0,0,0,55,0,0,0,37,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,128,13,0,0,174,0,0,
0,175,0,0,0,1,0,0,0,55,0,0,0,37,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,200,13,0,0,176,0,0,0,177,0,0,0,1,0,0,0,56,0,0,0,38,0,0,0,65,0,0,0,66,0,0,0,0,0,0,0,216,13,0,0,178,0,0,0,179,0,0,0,1,0,0,0,56,0,0,0,38,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,48,14,0,0,180,0,0,0,181,0,0,0,1,0,0,0,57,0,0,0,39,0,0,0,67,0,0,0,68,0,0,0,0,0,0,0,64,14,0,0,182,0,0,0,183,0,0,0,1,0,0,0,57,0,0,0,39,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,136,14,0,0,184,0,0,0,185,0,0,0,1,0,0,0,58,0,0,0,40,0,0,0,69,0,0,0,70,0,0,0,12,0,0,0,0,0,0,0,152,14,0,0,184,0,0,0,
186,0,0,0,1,0,0,0,58,0,0,0,40,0,0,0,69,0,0,0,71,0,0,0,13,0,0,0,0,0,0,0,168,14,0,0,187,0,0,0,188,0,0,0,1,0,0,0,58,0,0,0,40,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,16,15,0,0,189,0,0,0,190,0,0,0,72,0,0,0,14,0,0,0,191,0,0,0,192,0,0,0,73,0,0,0,26,0,0,0,74,0,0,0,60,0,0,0,0,0,0,0,104,15,0,0,193,0,0,0,194,0,0,0,196,255,255,255,196,255,255,255,104,15,0,0,195,0,0,0,196,0,0,0,0,0,0,0,120,15,0,0,197,0,0,0,198,0,0,0,75,0,0,0,15,0,0,0,199,0,0,0,200,0,0,0,76,0,0,0,27,0,0,0,77,0,0,0,0,0,0,0,152,15,0,0,197,0,0,0,201,0,0,0,
78,0,0,0,16,0,0,0,202,0,0,0,203,0,0,0,79,0,0,0,28,0,0,0,80,0,0,0,0,0,0,0,184,15,0,0,204,0,0,0,205,0,0,0,81,0,0,0,17,0,0,0,206,0,0,0,207,0,0,0,82,0,0,0,29,0,0,0,83,0,0,0,104,0,0,0,0,0,0,0,16,16,0,0,212,0,0,0,213,0,0,0,152,255,255,255,152,255,255,255,16,16,0,0,214,0,0,0,215,0,0,0,0,0,0,0,0,16,0,0,216,0,0,0,217,0,0,0,18,0,0,0,8,0,0,0,3,0,0,0,41,0,0,0,84,0,0,0,2,0,0,0,2,0,0,0,85,0,0,0,4,0,0,0,30,0,0,0,3,0,0,0,31,0,0,0,56,0,0,0,0,0,0,0,72,16,0,0,218,0,0,0,219,0,0,0,200,255,255,255,200,255,255,255,72,16,
0,0,220,0,0,0,221,0,0,0,56,39,0,0,20,0,0,0,67,46,85,84,70,45,56,0,0,0,0,0,0,0,0,0,0,0,0,0,222,18,4,149,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,28,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,
0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195],"i8",4,m.M);A([11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,5,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,90,62,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,42,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,10,0,0,0,98,62,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,10,0,0,0,106,66,1,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,
0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,
0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,
0,0,0,127],"i8",4,m.M+10240);A([1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,
0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,
78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,95,112,137,0,255,9,47,15,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,
0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,
0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,0,0,0,0,104,16,0,0,222,0,0,0,223,0,0,0,0,0,0,0,128,16,0,0,224,0,0,0,225,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,42,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,87,0,0,0,4,0,0,0,32,0,0,0,3,0,0,0,33,0,0,0,0,0,0,0,136,16,0,0,226,0,0,0,227,0,0,0,19,0,0,0,14,0,0,0,5,0,0,0,43,0,0,0,88,0,0,0,89,0,0,0,15,0,0,0,90,0,0,0,91,0,0,0,
34,0,0,0,16,0,0,0,35,0,0,0,8,0,0,0,0,0,0,0,144,16,0,0,7,0,0,0,8,0,0,0,248,255,255,255,248,255,255,255,144,16,0,0,9,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,168,16,0,0,228,0,0,0,229,0,0,0,248,255,255,255,248,255,255,255,168,16,0,0,230,0,0,0,231,0,0,0,4,0,0,0,0,0,0,0,216,16,0,0,232,0,0,0,233,0,0,0,252,255,255,255,252,255,255,255,216,16,0,0,234,0,0,0,235,0,0,0,0,0,0,0,16,17,0,0,236,0,0,0,237,0,0,0,92,0,0,0,59,0,0,0,17,0,0,0,18,0,0,0,60,0,0,0,0,0,0,0,32,17,0,0,238,0,0,0,239,0,0,0,93,0,0,0,208,57,0,0,0,0,0,0,48,
17,0,0,240,0,0,0,241,0,0,0,20,0,0,0,14,0,0,0,5,0,0,0,43,0,0,0,94,0,0,0,89,0,0,0,15,0,0,0,90,0,0,0,91,0,0,0,34,0,0,0,19,0,0,0,36,0,0,0,0,0,0,0,64,17,0,0,242,0,0,0,243,0,0,0,21,0,0,0,1,0,0,0,4,0,0,0,42,0,0,0,95,0,0,0,2,0,0,0,2,0,0,0,87,0,0,0,4,0,0,0,32,0,0,0,20,0,0,0,37,0,0,0,0,0,0,0,80,17,0,0,244,0,0,0,245,0,0,0,22,0,0,0,14,0,0,0,5,0,0,0,43,0,0,0,88,0,0,0,89,0,0,0,15,0,0,0,96,0,0,0,97,0,0,0,38,0,0,0,16,0,0,0,35,0,0,0,0,0,0,0,96,17,0,0,246,0,0,0,247,0,0,0,23,0,0,0,1,0,0,0,4,0,0,0,42,0,0,0,1,0,0,0,2,
0,0,0,2,0,0,0,98,0,0,0,99,0,0,0,39,0,0,0,3,0,0,0,33,0,0,0,0,0,0,0,112,17,0,0,248,0,0,0,249,0,0,0,250,0,0,0,1,0,0,0,44,0,0,0,21,0,0,0,0,0,0,0,144,17,0,0,251,0,0,0,252,0,0,0,250,0,0,0,2,0,0,0,45,0,0,0,22,0,0,0,0,0,0,0,160,17,0,0,253,0,0,0,254,0,0,0,250,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,224,17,0,0,255,0,0,0,0,1,0,0,250,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,
24,18,0,0,1,1,0,0,2,1,0,0,250,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,88,18,0,0,3,1,0,0,4,1,0,0,250,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,144,18,0,0,5,1,0,0,6,1,0,0,250,0,0,0,100,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,144,18,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,0,0,0,0,200,18,0,0,7,1,0,0,8,1,0,0,250,0,0,0,108,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,
0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,200,18,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,
0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,74,0,0,0,117,0,0,
0,108,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,
0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,
115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,
0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,
0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,248,18,0,0,9,1,0,0,10,1,0,0,250,0,0,0,1,0,0,0,0,0,0,0,32,19,0,0,11,1,0,0,12,1,0,0,250,0,0,0,2,0,0,0,0,0,0,0,64,19,0,0,13,1,0,0,14,1,0,0,250,0,0,0,116,0,0,0,117,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,118,0,0,0,28,0,0,0,29,0,0,0,0,0,0,0,104,19,0,0,15,1,0,0,16,1,0,0,250,0,0,0,119,0,0,0,120,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,121,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,136,19,0,0,17,1,0,0,18,1,0,0,250,0,0,0,122,0,0,0,123,0,
0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,124,0,0,0,40,0,0,0,41,0,0,0,0,0,0,0,168,19,0,0,19,1,0,0,20,1,0,0,250,0,0,0,125,0,0,0,126,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,127,0,0,0,46,0,0,0,47,0,0,0,0,0,0,0,200,19,0,0,21,1,0,0,22,1,0,0,250,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,240,19,0,0,23,1,0,0,24,1,0,0,250,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,24,20,0,0,25,1,0,0,26,1,0,0,250,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,64,20,0,0,27,1,0,0,28,1,0,0,250,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,104,20,0,0,29,1,0,0,30,1,0,0,250,0,0,0,23,
0,0,0,6,0,0,0,48,0,0,0,0,0,0,0,144,20,0,0,31,1,0,0,32,1,0,0,250,0,0,0,24,0,0,0,7,0,0,0,49,0,0,0,0,0,0,0,232,20,0,0,33,1,0,0,34,1,0,0,250,0,0,0,3,0,0,0,4,0,0,0,11,0,0,0,128,0,0,0,129,0,0,0,12,0,0,0,130,0,0,0,0,0,0,0,176,20,0,0,33,1,0,0,35,1,0,0,250,0,0,0,3,0,0,0,4,0,0,0,11,0,0,0,128,0,0,0,129,0,0,0,12,0,0,0,130,0,0,0,0,0,0,0,24,21,0,0,36,1,0,0,37,1,0,0,250,0,0,0,5,0,0,0,6,0,0,0,13,0,0,0,131,0,0,0,132,0,0,0,14,0,0,0,133,0,0,0,0,0,0,0,88,21,0,0,38,1,0,0,39,1,0,0,250,0,0,0,0,0,0,0,104,21,0,0,40,1,0,0,
41,1,0,0,250,0,0,0,40,0,0,0,25,0,0,0,41,0,0,0,26,0,0,0,42,0,0,0,1,0,0,0,27,0,0,0,15,0,0,0,0,0,0,0,176,21,0,0,42,1,0,0,43,1,0,0,250,0,0,0,134,0,0,0,135,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,0,0,0,0,192,21,0,0,44,1,0,0,45,1,0,0,250,0,0,0,136,0,0,0,137,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,128,17,0,0,33,1,0,0,46,1,0,0,250,0,0,0,0,0,0,0,144,21,0,0,33,1,0,0,47,1,0,0,250,0,0,0,28,0,0,0,2,0,0,0,3,0,0,0,
4,0,0,0,43,0,0,0,29,0,0,0,44,0,0,0,30,0,0,0,45,0,0,0,5,0,0,0,31,0,0,0,16,0,0,0,0,0,0,0,248,20,0,0,33,1,0,0,48,1,0,0,250,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,138,0,0,0,139,0,0,0,18,0,0,0,140,0,0,0,0,0,0,0,56,21,0,0,33,1,0,0,49,1,0,0,250,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,141,0,0,0,142,0,0,0,20,0,0,0,143,0,0,0,0,0,0,0,192,20,0,0,33,1,0,0,50,1,0,0,250,0,0,0,3,0,0,0,4,0,0,0,11,0,0,0,128,0,0,0,129,0,0,0,12,0,0,0,130,0,0,0,0,0,0,0,192,18,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,
0,0,0,0,240,18,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,0,0,0,0,240,21,0,0,236,0,0,0,51,1,0,0,144,0,0,0,59,0,0,0,17,0,0,0,18,0,0,0,61,0,0,0,0,0,0,0,24,22,0,0,236,0,0,0,52,1,0,0,145,0,0,0,62,0,0,0,17,0,0,0,18,0,0,0,63,0,0,0,32,70,0,0,68,70,0,0,0,0,0,0,40,22,0,0,53,1,0,0,54,1,0,0,93,0,0,0,2,0,0,0,0,0,0,0,64,22,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,32,0,0,0,8,0,0,0,1,0,0,0,46,0,0,0,0,0,0,0,104,22,0,0,55,1,0,0,59,1,0,0,57,1,0,0,58,1,0,0,32,0,0,0,9,0,0,0,2,0,0,0,47,0,
0,0,0,0,0,0,120,22,0,0,60,1,0,0,61,1,0,0,146,0,0,0,0,0,0,0,136,22,0,0,62,1,0,0,63,1,0,0,147,0,0,0,0,0,0,0,152,22,0,0,64,1,0,0,65,1,0,0,93,0,0,0,0,0,0,0,168,22,0,0,62,1,0,0,66,1,0,0,147,0,0,0,0,0,0,0,184,22,0,0,62,1,0,0,67,1,0,0,147,0,0,0,0,0,0,0,200,22,0,0,62,1,0,0,68,1,0,0,147,0,0,0,0,0,0,0,216,22,0,0,64,1,0,0,69,1,0,0,93,0,0,0,0,0,0,0,232,22,0,0,70,1,0,0,71,1,0,0,148,0,0,0,0,0,0,0,24,23,0,0,55,1,0,0,72,1,0,0,57,1,0,0,58,1,0,0,33,0,0,0,0,0,0,0,8,23,0,0,55,1,0,0,73,1,0,0,57,1,0,0,58,1,0,0,34,0,0,
0,0,0,0,0,56,23,0,0,55,1,0,0,74,1,0,0,57,1,0,0,58,1,0,0,35,0,0,0,0,0,0,0,72,23,0,0,55,1,0,0,75,1,0,0,57,1,0,0,58,1,0,0,32,0,0,0,10,0,0,0,3,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,3,32,2,32,2,32,2,32,2,32,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,96,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,213,8,

0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,115,109,70,117,110,99,0,97,98,111,114,116,0,70,85,78,67,84,73,79,78,95,84,65,66,76,69,0,119,97,115,109,50,97,115,109,36,
110,111,114,101,115,117,108,116,0,119,97,115,109,50,97,115,109,36,101,120,112,114,101,115,117,108,116,0,111,112,32,61,61,32,82,111,116,76,73,110,116,51,50,32,124,124,32,111,112,32,61,61,32,82,111,116,82,73,110,116,51,50,32,124,124,32,111,112,32,61,61,32,82,111,116,76,73,110,116,54,52,32,124,124,32,111,112,32,61,61,32,82,111,116,82,73,110,116,54,52,0,115,114,99,47,119,97,115,109,50,97,115,109,46,104,0,109,97,107,101,82,111,116,70,117,110,99,0,120,0,107,0,70,85,78,67,84,73,79,78,95,84,65,66,76,69,95,
0,32,32,112,114,111,99,101,115,115,70,117,110,99,116,105,111,110,32,0,102,114,101,101,115,91,105,51,50,93,46,115,105,122,101,40,41,32,61,61,32,116,101,109,112,115,91,105,51,50,93,0,112,114,111,99,101,115,115,70,117,110,99,116,105,111,110,0,102,114,101,101,115,91,102,51,50,93,46,115,105,122,101,40,41,32,61,61,32,116,101,109,112,115,91,102,51,50,93,0,102,114,101,101,115,91,102,54,52,93,46,115,105,122,101,40,41,32,61,61,32,116,101,109,112,115,91,102,54,52,93,0,78,85,76,76,0,101,120,112,114,101,115,115,
105,111,110,115,46,102,105,110,100,40,101,120,112,114,101,115,115,105,111,110,41,32,61,61,32,101,120,112,114,101,115,115,105,111,110,115,46,101,110,100,40,41,0,115,114,99,47,98,105,110,97,114,121,101,110,45,99,46,99,112,112,0,110,111,116,101,69,120,112,114,101,115,115,105,111,110,0,32,32,116,104,101,95,109,111,100,117,108,101,32,61,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,67,114,101,97,116,101,40,41,59,10,0,32,32,101,120,112,114,101,115,115,105,111,110,115,91,115,105,122,101,95,116,
40,78,85,76,76,41,93,32,61,32,66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,82,101,102,40,78,85,76,76,41,59,10,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,68,105,115,112,111,115,101,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,102,117,110,99,116,105,111,110,84,121,112,101,115,46,99,108,101,97,114,40,41,59,10,0,32,32,101,120,112,114,101,115,115,105,111,110,115,46,99,108,101,97,114,40,41,59,10,0,32,32,102,117,110,99,116,105,111,110,115,46,99,108,
101,97,114,40,41,59,10,0,32,32,114,101,108,111,111,112,101,114,66,108,111,99,107,115,46,99,108,101,97,114,40,41,59,10,0,32,32,123,10,0,32,32,32,32,66,105,110,97,114,121,101,110,84,121,112,101,32,112,97,114,97,109,84,121,112,101,115,91,93,32,61,32,123,32,0,32,125,59,10,0,32,32,32,32,102,117,110,99,116,105,111,110,84,121,112,101,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,65,100,100,70,117,110,99,116,105,111,110,84,121,112,101,40,116,104,101,95,109,111,100,117,108,101,44,32,0,44,32,112,97,114,
97,109,84,121,112,101,115,44,32,0,41,59,10,0,32,32,125,10,0,32,32,32,32,66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,82,101,102,32,99,104,105,108,100,114,101,110,91,93,32,61,32,123,32,0,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,32,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,66,108,111,99,107,40,116,104,101,95,109,111,100,117,108,101,44,32,0,44,32,99,104,105,108,100,114,101,110,44,32,0,66,105,110,97,114,121,101,
110,85,110,100,101,102,105,110,101,100,40,41,0,93,32,61,32,66,105,110,97,114,121,101,110,73,102,40,116,104,101,95,109,111,100,117,108,101,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,41,59,10,0,93,32,61,32,66,105,110,97,114,121,101,110,76,111,111,112,40,116,104,101,95,109,111,100,117,108,101,44,32,0,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,66,114,101,97,107,40,116,104,101,
95,109,111,100,117,108,101,44,32,34,0,34,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,32,32,99,111,110,115,116,32,99,104,97,114,42,32,110,97,109,101,115,91,93,32,61,32,123,32,0,93,32,61,32,66,105,110,97,114,121,101,110,83,119,105,116,99,104,40,116,104,101,95,109,111,100,117,108,101,44,32,110,97,109,101,115,44,32,0,44,32,34,0,32,32,32,32,66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,82,101,102,32,111,112,101,114,97,110,100,115,91,93,32,61,32,123,32,0,93,32,61,
32,66,105,110,97,114,121,101,110,67,97,108,108,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,34,44,32,111,112,101,114,97,110,100,115,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,67,97,108,108,73,109,112,111,114,116,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,93,32,61,32,66,105,110,97,114,121,101,110,67,97,108,108,73,110,100,105,114,101,99,116,40,116,104,101,95,109,111,100,117,108,101,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,44,32,111,112,101,114,97,110,100,115,
44,32,0,34,41,59,10,0,32,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,71,101,116,76,111,99,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,83,101,116,76,111,99,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,84,101,101,76,111,99,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,71,101,116,71,108,111,
98,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,34,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,83,101,116,71,108,111,98,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,93,32,61,32,66,105,110,97,114,121,101,110,76,111,97,100,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,83,116,111,114,101,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,67,111,110,115,116,40,116,104,
101,95,109,111,100,117,108,101,44,32,66,105,110,97,114,121,101,110,76,105,116,101,114,97,108,73,110,116,51,50,40,0,41,41,59,10,0,93,32,61,32,66,105,110,97,114,121,101,110,67,111,110,115,116,40,116,104,101,95,109,111,100,117,108,101,44,32,66,105,110,97,114,121,101,110,76,105,116,101,114,97,108,73,110,116,54,52,40,0,93,32,61,32,66,105,110,97,114,121,101,110,67,111,110,115,116,40,116,104,101,95,109,111,100,117,108,101,44,32,66,105,110,97,114,121,101,110,76,105,116,101,114,97,108,70,108,111,97,116,51,
50,40,0,93,32,61,32,66,105,110,97,114,121,101,110,67,111,110,115,116,40,116,104,101,95,109,111,100,117,108,101,44,32,66,105,110,97,114,121,101,110,76,105,116,101,114,97,108,70,108,111,97,116,54,52,40,0,93,32,61,32,66,105,110,97,114,121,101,110,85,110,97,114,121,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,66,105,110,97,114,121,40,116,104,101,95,109,111,100,117,108,101,44,32,0,93,32,61,32,66,105,110,97,114,121,101,110,83,101,108,101,99,116,40,116,104,
101,95,109,111,100,117,108,101,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,68,114,111,112,40,116,104,101,95,109,111,100,117,108,101,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,93,32,61,32,66,105,110,97,114,121,101,110,82,101,116,117,114,110,40,116,104,101,95,109,111,100,117,108,101,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,84,79,68,79,58,32,104,111,115,116,46,46,46,10,0,93,32,61,32,66,105,110,97,114,121,101,110,78,
111,112,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,93,32,61,32,66,105,110,97,114,121,101,110,85,110,114,101,97,99,104,97,98,108,101,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,80,114,105,110,116,40,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,32,32,66,105,110,97,114,121,101,110,84,121,112,101,32,118,97,114,84,121,112,101,115,91,93,32,61,32,123,32,0,32,32,32,32,102,117,110,99,116,105,111,110,115,
91,0,93,32,61,32,66,105,110,97,114,121,101,110,65,100,100,70,117,110,99,116,105,111,110,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,34,44,32,102,117,110,99,116,105,111,110,84,121,112,101,115,91,0,93,44,32,118,97,114,84,121,112,101,115,44,32,0,32,32,66,105,110,97,114,121,101,110,65,100,100,71,108,111,98,97,108,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,34,44,32,116,121,112,101,115,91,0,32,32,66,105,110,97,114,121,101,110,65,100,100,73,109,112,111,114,116,40,116,104,101,95,109,111,
100,117,108,101,44,32,34,0,34,44,32,34,0,32,32,66,105,110,97,114,121,101,110,82,101,109,111,118,101,73,109,112,111,114,116,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,32,32,66,105,110,97,114,121,101,110,65,100,100,69,120,112,111,114,116,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,32,32,66,105,110,97,114,121,101,110,82,101,109,111,118,101,69,120,112,111,114,116,40,116,104,101,95,109,111,100,117,108,101,44,32,34,0,32,32,32,32,66,105,110,97,114,121,101,110,70,117,110,99,116,105,111,
110,82,101,102,32,102,117,110,99,115,91,93,32,61,32,123,32,0,102,117,110,99,116,105,111,110,115,91,0,32,32,32,32,66,105,110,97,114,121,101,110,83,101,116,70,117,110,99,116,105,111,110,84,97,98,108,101,40,116,104,101,95,109,111,100,117,108,101,44,32,102,117,110,99,115,44,32,0,32,32,32,32,99,111,110,115,116,32,99,104,97,114,32,115,101,103,109,101,110,116,0,91,93,32,61,32,123,32,0,32,32,32,32,99,111,110,115,116,32,99,104,97,114,42,32,115,101,103,109,101,110,116,115,91,93,32,61,32,123,32,0,32,32,32,32,
66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,82,101,102,32,115,101,103,109,101,110,116,79,102,102,115,101,116,115,91,93,32,61,32,123,32,0,32,32,32,32,66,105,110,97,114,121,101,110,73,110,100,101,120,32,115,101,103,109,101,110,116,83,105,122,101,115,91,93,32,61,32,123,32,0,32,32,32,32,66,105,110,97,114,121,101,110,83,101,116,77,101,109,111,114,121,40,116,104,101,95,109,111,100,117,108,101,44,32,0,44,32,115,101,103,109,101,110,116,115,44,32,115,101,103,109,101,110,116,79,102,
102,115,101,116,115,44,32,115,101,103,109,101,110,116,83,105,122,101,115,44,32,0,32,32,66,105,110,97,114,121,101,110,83,101,116,83,116,97,114,116,40,116,104,101,95,109,111,100,117,108,101,44,32,102,117,110,99,116,105,111,110,115,91,0,32,32,47,47,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,82,101,97,100,10,0,78,52,119,97,115,109,49,52,80,97,114,115,101,69,120,99,101,112,116,105,111,110,69,0,101,114,114,111,114,32,105,110,32,112,97,114,115,105,110,103,32,119,97,115,109,32,116,101,120,116,
0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,80,114,105,110,116,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,80,114,105,110,116,65,115,109,106,115,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,86,97,108,105,100,97,116,101,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,79,112,116,105,109,
105,122,101,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,65,117,116,111,68,114,111,112,40,116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,47,47,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,87,114,105,116,101,10,0,101,114,114,111,114,32,105,110,32,112,97,114,115,105,110,103,32,119,97,115,109,32,98,105,110,97,114,121,0,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,73,110,116,101,114,112,114,101,116,40,
116,104,101,95,109,111,100,117,108,101,41,59,10,0,32,32,116,104,101,95,114,101,108,111,111,112,101,114,32,61,32,82,101,108,111,111,112,101,114,67,114,101,97,116,101,40,41,59,10,0,32,32,114,101,108,111,111,112,101,114,66,108,111,99,107,115,91,0,93,32,61,32,82,101,108,111,111,112,101,114,65,100,100,66,108,111,99,107,40,116,104,101,95,114,101,108,111,111,112,101,114,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,82,101,108,111,111,112,101,114,65,100,100,66,114,97,110,99,104,40,114,101,
108,111,111,112,101,114,66,108,111,99,107,115,91,0,93,44,32,114,101,108,111,111,112,101,114,66,108,111,99,107,115,91,0,93,32,61,32,82,101,108,111,111,112,101,114,65,100,100,66,108,111,99,107,87,105,116,104,83,119,105,116,99,104,40,116,104,101,95,114,101,108,111,111,112,101,114,44,32,101,120,112,114,101,115,115,105,111,110,115,91,0,32,32,32,32,66,105,110,97,114,121,101,110,73,110,100,101,120,32,105,110,100,101,120,101,115,91,93,32,61,32,123,32,0,32,32,32,32,82,101,108,111,111,112,101,114,65,100,100,
66,114,97,110,99,104,70,111,114,83,119,105,116,99,104,40,114,101,108,111,111,112,101,114,66,108,111,99,107,115,91,0,93,44,32,105,110,100,101,120,101,115,44,32,0,93,32,61,32,82,101,108,111,111,112,101,114,82,101,110,100,101,114,65,110,100,68,105,115,112,111,115,101,40,116,104,101,95,114,101,108,111,111,112,101,114,44,32,114,101,108,111,111,112,101,114,66,108,111,99,107,115,91,0,44,32,116,104,101,95,109,111,100,117,108,101,41,59,10,0,47,47,32,98,101,103,105,110,110,105,110,103,32,97,32,66,105,110,97,
114,121,101,110,32,65,80,73,32,116,114,97,99,101,10,35,105,110,99,108,117,100,101,32,60,109,97,116,104,46,104,62,10,35,105,110,99,108,117,100,101,32,60,109,97,112,62,10,35,105,110,99,108,117,100,101,32,34,115,114,99,47,98,105,110,97,114,121,101,110,45,99,46,104,34,10,105,110,116,32,109,97,105,110,40,41,32,123,10,32,32,115,116,100,58,58,109,97,112,60,115,105,122,101,95,116,44,32,66,105,110,97,114,121,101,110,70,117,110,99,116,105,111,110,84,121,112,101,82,101,102,62,32,102,117,110,99,116,105,111,110,
84,121,112,101,115,59,10,32,32,115,116,100,58,58,109,97,112,60,115,105,122,101,95,116,44,32,66,105,110,97,114,121,101,110,69,120,112,114,101,115,115,105,111,110,82,101,102,62,32,101,120,112,114,101,115,115,105,111,110,115,59,10,32,32,115,116,100,58,58,109,97,112,60,115,105,122,101,95,116,44,32,66,105,110,97,114,121,101,110,70,117,110,99,116,105,111,110,82,101,102,62,32,102,117,110,99,116,105,111,110,115,59,10,32,32,115,116,100,58,58,109,97,112,60,115,105,122,101,95,116,44,32,82,101,108,111,111,112,
101,114,66,108,111,99,107,82,101,102,62,32,114,101,108,111,111,112,101,114,66,108,111,99,107,115,59,10,32,32,66,105,110,97,114,121,101,110,77,111,100,117,108,101,82,101,102,32,116,104,101,95,109,111,100,117,108,101,32,61,32,78,85,76,76,59,10,32,32,82,101,108,111,111,112,101,114,82,101,102,32,116,104,101,95,114,101,108,111,111,112,101,114,32,61,32,78,85,76,76,59,10,0,32,32,114,101,116,117,114,110,32,48,59,10,0,32,32,47,47,32,66,105,110,97,114,121,101,110,71,101,116,70,117,110,99,116,105,111,110,84,
121,112,101,66,121,83,105,103,110,97,116,117,114,101,10,0,115,0,115,114,99,47,101,109,115,99,114,105,112,116,101,110,45,111,112,116,105,109,105,122,101,114,47,105,115,116,114,105,110,103,46,104,0,73,83,116,114,105,110,103,0,115,105,122,101,0,112,117,115,104,95,98,97,99,107,0,98,0,99,111,117,110,116,0,102,117,110,99,91,48,93,32,61,61,32,68,69,70,85,78,0,97,112,112,101,110,100,65,114,103,117,109,101,110,116,84,111,70,117,110,99,116,105,111,110,0,118,97,114,91,48,93,32,61,61,32,86,65,82,0,97,112,112,
101,110,100,84,111,86,97,114,0,36,36,0,97,114,114,97,121,91,48,93],"i8",4,m.M+13076);A([32,61,61,32,65,82,82,65,89,0,97,112,112,101,110,100,84,111,65,114,114,97,121,0,97,114,114,97,121,91,48,93,32,61,61,32,79,66,74,69,67,84,0,97,112,112,101,110,100,84,111,79,98,106,101,99,116,0,110,97,109,101,46,115,116,114,0,115,114,99,47,115,117,112,112,111,114,116,47,110,97,109,101,46,104,0,105,115,83,116,114,105,110,103,40,41,0,103,101,116,73,83,116,114,105,110,103,0,119,97,115,109,50,97,115,109,95,0,36,0,102,
117,110,99,45,62,108,111,99,97,108,73,110,100,105,99,101,115,46,115,105,122,101,40,41,32,61,61,32,102,117,110,99,45,62,112,97,114,97,109,115,46,115,105,122,101,40,41,32,43,32,102,117,110,99,45,62,118,97,114,115,46,115,105,122,101,40,41,0,97,100,100,86,97,114,0,115,112,108,105,99,101,0,115,116,97,114,116,95,105,116,46,112,97,114,101,110,116,32,61,61,32,101,110,100,95,105,116,46,112,97,114,101,110,116,32,38,38,32,115,116,97,114,116,95,105,116,46,112,97,114,101,110,116,32,61,61,32,116,104,105,115,0,
101,114,97,115,101,0,115,116,97,114,116,95,105,116,46,105,110,100,101,120,32,60,61,32,101,110,100,95,105,116,46,105,110,100,101,120,32,38,38,32,101,110,100,95,105,116,46,105,110,100,101,120,32,60,61,32,117,115,101,100,69,108,101,109,101,110,116,115,0,112,111,115,115,105,98,108,101,32,33,61,32,69,88,80,82,69,83,83,73,79,78,95,82,69,83,85,76,84,0,83,99,111,112,101,100,84,101,109,112,0,33,99,117,114,114,45,62,118,97,108,117,101,0,118,105,115,105,116,83,119,105,116,99,104,0,115,119,105,116,99,104,95,
91,48,93,32,61,61,32,83,87,73,84,67,72,0,97,112,112,101,110,100,67,97,115,101,84,111,83,119,105,116,99,104,0,97,112,112,101,110,100,67,111,100,101,84,111,83,119,105,116,99,104,0,99,111,100,101,91,48,93,32,61,61,32,66,76,79,67,75,0,97,112,112,101,110,100,68,101,102,97,117,108,116,84,111,83,119,105,116,99,104,0,118,105,115,105,116,67,97,108,108,73,109,112,111,114,116,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,0,85,110,104,97,110,100,108,101,100,32,116,121,112,101,32,
105,110,32,108,111,97,100,58,32,0,85,110,104,97,110,100,108,101,100,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,32,105,110,32,105,51,50,32,108,111,97,100,58,32,0,85,110,104,97,110,100,108,101,100,32,116,121,112,101,32,105,110,32,115,116,111,114,101,58,32,0,115,114,99,47,108,105,116,101,114,97,108,46,104,0,103,101,116,102,51,50,0,103,101,116,102,54,52,0,85,110,104,97,110,100,108,101,100,32,117,110,97,114,121,32,105,51,50,32,111,112,101,114,97,116,111,114,58,32,0,85,110,104,97,110,100,
108,101,100,32,117,110,97,114,121,32,102,108,111,97,116,32,111,112,101,114,97,116,111,114,58,32,0,85,110,104,97,110,100,108,101,100,32,116,121,112,101,58,32,0,85,110,104,97,110,100,108,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,33,105,115,83,116,97,116,101,109,101,110,116,40,99,117,114,114,41,0,78,83,116,51,95,95,50,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,
95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,78,83,116,51,95,95,50,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,103,101,116,105,51,50,0,103,101,116,105,54,52,0,114,101,105,110,116,101,114,112,114,101,116,105,51,50,0,114,101,105,110,116,101,114,112,114,101,116,105,54,52,0,97,32,60,61,32,115,116,100,58,58,110,117,109,101,114,105,99,95,
108,105,109,105,116,115,60,97,100,100,114,101,115,115,95,116,62,58,58,109,97,120,40,41,0,115,114,99,47,119,97,115,109,46,104,0,65,100,100,114,101,115,115,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,118,97,108,117,101,46,116,121,112,101,41,0,109,97,107,101,67,111,110,115,116,0,112,97,114,115,101,32,101,120,99,101,112,116,105,111,110,58,32,0,70,97,116,97,108,58,32,0,78,52,119,97,115,109,52,80,97,115,115,69,0,99,97,110,110,111,116,32,121,101,116,32,112,114,105,110,116,32,
37,115,10,10,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,110,103,32,37,122,100,32,98,121,116,101,115,32,102,111,114,32,111,117,116,112,117,116,32,98,117,102,102,101,114,33,10,0,103,101,116,67,83,116,114,105,110,103,0,37,108,102,0,100,32,62,61,32,48,0,110,117,109,84,111,83,116,114,105,110,103,0,48,120,37,108,108,120,0,37,108,108,117,0,37,108,108,120,0,37,101,0,37,46,48,102,0,110,117,109,32,60,32,49,48,48,48,0,105,115,78,117,109,98,101,114,40,41,0,103,101,116,
78,117,109,98,101,114,0,99,104,105,108,100,91,48,93,32,61,61,32,85,78,65,82,89,95,80,82,69,70,73,88,0,110,101,101,100,80,97,114,101,110,115,0,123,125,0,102,117,110,99,116,105,111,110,32,0,110,111,100,101,45,62,105,115,65,114,114,97,121,40,41,32,38,38,32,110,111,100,101,91,48,93,32,61,61,32,73,70,0,105,102,72,97,115,69,108,115,101,0,110,101,119,32,0,100,101,102,97,117,108,116,58,0,99,97,115,101,32,0,116,114,121,32,0,32,99,97,116,99,104,32,40,0,46,48,0,118,97,114,32,0,105,110,116,40,95,105,100,41,32,
61,61,32,105,110,116,40,84,58,58,83,112,101,99,105,102,105,99,73,100,41,0,99,97,115,116,0,78,52,119,97,115,109,50,50,83,104,101,108,108,69,120,116,101,114,110,97,108,73,110,116,101,114,102,97,99,101,69,0,78,52,119,97,115,109,49,56,77,111,100,117,108,101,73,110,115,116,97,110,99,101,66,97,115,101,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,69,78,83,49,95,52,108,101,115,115,73,83,51,95,69,69,78,83,49,95,57,97,108,108,111,99,97,116,111,
114,73,78,83,49,95,52,112,97,105,114,73,75,83,51,95,83,52,95,69,69,69,69,69,69,78,83,95,49,52,77,111,100,117,108,101,73,110,115,116,97,110,99,101,69,69,49,55,69,120,116,101,114,110,97,108,73,110,116,101,114,102,97,99,101,69,0,111,102,102,115,101,116,32,43,32,115,101,103,109,101,110,116,46,100,97,116,97,46,115,105,122,101,40,41,32,60,61,32,119,97,115,109,46,109,101,109,111,114,121,46,105,110,105,116,105,97,108,32,42,32,119,97,115,109,58,58,77,101,109,111,114,121,58,58,107,80,97,103,101,83,105,122,
101,0,115,114,99,47,115,104,101,108,108,45,105,110,116,101,114,102,97,99,101,46,104,0,105,110,105,116,0,111,102,102,115,101,116,32,43,32,115,101,103,109,101,110,116,46,100,97,116,97,46,115,105,122,101,40,41,32,60,61,32,119,97,115,109,46,116,97,98,108,101,46,105,110,105,116,105,97,108,0,78,52,119,97,115,109,50,52,67,111,110,115,116,97,110,116,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,
114,97,108,69,78,83,49,95,52,108,101,115,115,73,83,51,95,69,69,78,83,49,95,57,97,108,108,111,99,97,116,111,114,73,78,83,49,95,52,112,97,105,114,73,75,83,51,95,83,52,95,69,69,69,69,69,69,69,69,0,78,52,119,97,115,109,49,54,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,78,83,95,50,52,67,111,110,115,116,97,110,116,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,
69,78,83,50,95,52,108,101,115,115,73,83,52,95,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,78,83,50,95,52,112,97,105,114,73,75,83,52,95,83,53,95,69,69,69,69,69,69,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,50,52,67,111,110,115,116,97,110,116,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,69,78,83,50,95,52,108,101,115,115,73,83,52,
95,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,78,83,50,95,52,112,97,105,114,73,75,83,52,95,83,53,95,69,69,69,69,69,69,69,69,78,83,95,52,70,108,111,119,69,69,69,0,101,120,105,116,40,41,10,0,78,52,119,97,115,109,49,51,69,120,105,116,69,120,99,101,112,116,105,111,110,69,0,99,97,108,108,73,109,112,111,114,116,58,32,117,110,107,110,111,119,110,32,105,109,112,111,114,116,58,32,0,99,97,108,108,84,97,98,108,101,32,111,118,101,114,102,108,111,119,0,117,110,105,110,105,116,105,97,108,105,122,
101,100,32,116,97,98,108,101,32,101,108,101,109,101,110,116,0,99,97,108,108,73,110,100,105,114,101,99,116,58,32,98,97,100,32,35,32,111,102,32,97,114,103,117,109,101,110,116,115,0,99,97,108,108,73,110,100,105,114,101,99,116,58,32,98,97,100,32,97,114,103,117,109,101,110,116,32,116,121,112,101,0,99,97,108,108,73,110,100,105,114,101,99,116,58,32,98,97,100,32,114,101,115,117,108,116,32,116,121,112,101,0,115,116,97,99,107,32,108,105,109,105,116,0,99,97,108,108,70,117,110,99,116,105,111,110,73,110,116,101,
114,110,97,108,0,33,102,108,111,119,46,98,114,101,97,107,105,110,103,40,41,32,124,124,32,102,108,111,119,46,98,114,101,97,107,84,111,32,61,61,32,82,69,84,85,82,78,95,70,76,79,87,0,99,97,108,108,105,110,103,32,0,32,114,101,115,117,108,116,101,100,32,105,110,32,0,32,98,117,116,32,116,104,101,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,105,115,32,0,70,117,110,99,116,105,111,110,32,96,0,96,32,101,120,112,101,99,116,115,32,0,32,112,97,114,97,109,101,116,101,114,115,44,32,103,111,116,32,0,32,
97,114,103,117,109,101,110,116,115,46,0,102,117,110,99,116,105,111,110,45,62,105,115,80,97,114,97,109,40,105,41,0,70,117,110,99,116,105,111,110,83,99,111,112,101,0,96,32,101,120,112,101,99,116,115,32,116,121,112,101,32,0,32,102,111,114,32,112,97,114,97,109,101,116,101,114,32,0,44,32,103,111,116,32,0,102,117,110,99,116,105,111,110,45,62,105,115,86,97,114,40,105,41,0,90,78,52,119,97,115,109,49,56,77,111,100,117,108,101,73,110,115,116,97,110,99,101,66,97,115,101,73,78,83,116,51,95,95,50,51,109,97,112,
73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,69,78,83,49,95,52,108,101,115,115,73,83,51,95,69,69,78,83,49,95,57,97,108,108,111,99,97,116,111,114,73,78,83,49,95,52,112,97,105,114,73,75,83,51,95,83,52,95,69,69,69,69,69,69,78,83,95,49,52,77,111,100,117,108,101,73,110,115,116,97,110,99,101,69,69,50,48,99,97,108,108,70,117,110,99,116,105,111,110,73,110,116,101,114,110,97,108,69,83,51,95,82,78,83,49,95,54,118,101,99,116,111,114,73,83,52,95,78,83,55,95,73,83,52,95,69,69,69,69,69,
50,51,82,117,110,116,105,109,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,0,78,52,119,97,115,109,49,54,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,90,78,83,95,49,56,77,111,100,117,108,101,73,110,115,116,97,110,99,101,66,97,115,101,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,69,78,83,50,95,52,108,101,115,115,73,83,52,95,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,78,83,50,95,52,112,
97,105,114,73,75,83,52,95,83,53,95,69,69,69,69,69,69,78,83,95,49,52,77,111,100,117,108,101,73,110,115,116,97,110,99,101,69,69,50,48,99,97,108,108,70,117,110,99,116,105,111,110,73,110,116,101,114,110,97,108,69,83,52,95,82,78,83,50,95,54,118,101,99,116,111,114,73,83,53,95,78,83,56,95,73,83,53,95,69,69,69,69,69,50,51,82,117,110,116,105,109,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,90,78,83,95,49,56,77,111,100,117,108,
101,73,110,115,116,97,110,99,101,66,97,115,101,73,78,83,116,51,95,95,50,51,109,97,112,73,78,83,95,52,78,97,109,101,69,78,83,95,55,76,105,116,101,114,97,108,69,78,83,50,95,52,108,101,115,115,73,83,52,95,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,78,83,50,95,52,112,97,105,114,73,75,83,52,95,83,53,95,69,69,69,69,69,69,78,83,95,49,52,77,111,100,117,108,101,73,110,115,116,97,110,99,101,69,69,50,48,99,97,108,108,70,117,110,99,116,105,111,110,73,110,116,101,114,110,97,108,69,83,52,95,82,78,
83,50,95,54,118,101,99,116,111,114,73,83,53,95,78,83,56,95,73,83,53,95,69,69,69,69,69,50,51,82,117,110,116,105,109,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,78,83,95,52,70,108,111,119,69,69,69,0,99,117,114,114,45,62,105,115,84,101,101,40,41,32,63,32,102,108,111,119,46,118,97,108,117,101,46,116,121,112,101,32,61,61,32,99,117,114,114,45,62,116,121,112,101,32,58,32,116,114,117,101,0,105,110,115,116,97,110,99,101,46,103,108,111,98,97,108,115,46,102,105,110,100,40,110,97,109,101,
41,32,33,61,32,105,110,115,116,97,110,99,101,46,103,108,111,98,97,108,115,46,101,110,100,40,41,0,118,105,115,105,116,71,101,116,71,108,111,98,97,108,0,111,102,102,115,101,116,32,62,32,109,101,109,111,114,121,0,102,105,110,97,108,32,62,32,109,101,109,111,114,121,0,98,121,116,101,115,32,62,32,109,101,109,111,114,121,0,104,105,103,104,101,115,116,32,62,32,109,101,109,111,114,121,0,32,62,32,0,91,116,114,97,112,32,0,93,10,0,78,52,119,97,115,109,49,51,84,114,97,112,69,120,99,101,112,116,105,111,110,69,
0,97,117,116,111,100,114,111,112,0,78,52,119,97,115,109,56,65,117,116,111,68,114,111,112,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,56,65,117,116,111,68,114,111,112,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,56,65,117,
116,111,68,114,111,112,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,56,65,117,116,111,68,114,111,112,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,56,65,117,116,111,68,114,111,112,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,
56,65,117,116,111,68,114,111,112,69,118,69,69,0,99,117,114,114,45,62,116,121,112,101,32,61,61,32,110,111,110,101,32,124,124,32,99,117,114,114,45,62,116,121,112,101,32,61,61,32,117,110,114,101,97,99,104,97,98,108,101,0,115,114,99,47,97,115,116,95,117,116,105,108,115,46,104,0,99,117,114,114,45,62,116,121,112,101,32,61,61,32,110,111,110,101,0,114,101,102,105,110,97,108,105,122,101,0,78,52,119,97,115,109,49,48,82,101,70,105,110,97,108,105,122,101,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,
80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,48,82,101,70,105,110,97,108,105,122,101,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,48,82,101,70,105,110,97,108,105,122,101,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,48,82,101,70,105,110,97,108,105,122,101,69,78,83,
95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,48,82,101,70,105,110,97,108,105,122,101,69,118,69,69,0,98,105,110,97,114,121,101,110,124,98,114,101,97,107,45,116,111,45,114,101,116,117,114,110,0,101,120,105,116,0,115,112,101,99,116,101,115,116,0,109,117,116,0,102,97,107,101,95,114,101,116,117,114,110,95,119,97,107,97,49,50,51,0,97,110,121,102,117,110,99,0,98,114,0,45,110,97,110,0,45,105,110,102,105,110,105,116,121,0,
116,104,101,110,0,98,114,95,105,102,0,99,97,108,108,95,105,110,100,105,114,101,99,116,0,99,97,108,108,95,105,109,112,111,114,116,0,108,111,99,97,108,0,101,108,101,109,0,105,109,112,111,114,116,0,101,120,112,111,114,116,0,115,101,103,109,101,110,116,0,100,97,116,97,0,114,101,115,117,108,116,0,110,101,119,83,105,122,101,0,116,97,98,108,101,66,97,115,101,0,109,101,109,111,114,121,66,97,115,101,0,95,95,103,114,111,119,87,97,115,109,77,101,109,111,114,121,0,42,114,101,116,117,114,110,58,41,42,0,119,97,
115,109,0,95,95,119,97,115,109,95,114,111,116,114,95,105,54,52,0,95,95,119,97,115,109,95,114,111,116,114,95,105,51,50,0,95,95,119,97,115,109,95,114,111,116,108,95,105,54,52,0,95,95,119,97,115,109,95,114,111,116,108,95,105,51,50,0,95,95,119,97,115,109,95,112,111,112,99,110,116,95,105,54,52,0,95,95,119,97,115,109,95,112,111,112,99,110,116,95,105,51,50,0,95,95,119,97,115,109,95,99,116,122,95,105,54,52,0,95,95,119,97,115,109,95,99,116,122,95,105,51,50,0,77,97,116,104,95,109,97,120,0,77,97,116,104,95,
109,105,110,0,77,97,116,104,95,115,113,114,116,0,77,97,116,104,95,78,69,65,82,69,83,84,0,77,97,116,104,95,116,114,117,110,99,0,77,97,116,104,95,102,108,111,111,114,0,77,97,116,104,95,99,101,105,108,0,77,97,116,104,95,97,98,115,0,77,97,116,104,95,105,109,117,108,0,105,110,115,116,114,117,109,101,110,116,0,101,110,118,0,98,117,102,102,101,114,0,117,115,101,32,97,115,109,0,100,101,98,117,103,103,101,114,0,97,115,109,50,119,97,115,109,95,105,51,50,95,116,101,109,112,0,112,111,119,0,115,113,114,116,0,
99,101,105,108,0,102,108,111,111,114,0,97,98,115,0,103,108,111,98,97,108,46,77,97,116,104,0,105,51,50,117,45,114,101,109,0,105,51,50,115,45,114,101,109,0,105,51,50,117,45,100,105,118,0,105,51,50,115,45,100,105,118,0,102,54,52,45,116,111,45,105,110,116,54,52,0,102,54,52,45,116,111,45,105,110,116,0,102,54,52,45,114,101,109,0,97,115,109,50,119,97,115,109,0,102,114,111,117,110,100,0,99,108,122,51,50,0,105,109,117,108,0,77,97,116,104,0,105,109,112,111,115,115,105,98,108,101,45,99,111,110,116,105,110,117,
101,0,97,115,109,77,111,100,117,108,101,0,65,114,114,97,121,66,117,102,102,101,114,0,70,108,111,97,116,54,52,65,114,114,97,121,0,70,108,111,97,116,51,50,65,114,114,97,121,0,85,105,110,116,51,50,65,114,114,97,121,0,85,105,110,116,49,54,65,114,114,97,121,0,85,105,110,116,56,65,114,114,97,121,0,73,110,116,51,50,65,114,114,97,121,0,73,110,116,49,54,65,114,114,97,121,0,73,110,116,56,65,114,114,97,121,0,116,111,112,109,111,115,116,0,73,110,102,105,110,105,116,121,0,78,97,78,0,33,84,104,114,101,97,100,80,
111,111,108,58,58,103,101,116,40,41,45,62,105,115,82,117,110,110,105,110,103,40,41,0,115,114,99,47,115,117,112,112,111,114,116,47,116,104,114,101,97,100,115,46,99,112,112,0,126,84,104,114,101,97,100,0,78,83,116,51,95,95,50,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,0,111,108,100,32,61,61,32,116,104,114,101,97,100,115,46,115,105,122,101,40,41,0,114,101,115,101,116,84,104,114,101,97,100,115,65,114,101,82,101,97,100,121,0,101,109,115,99,114,105,112,116,101,110,95,97,115,109,
95,99,111,110,115,116,0,83,73,77,68,95,70,108,111,97,116,54,52,120,50,95,99,104,101,99,107,0,83,73,77,68,95,70,108,111,97,116,51,50,120,52,95,99,104,101,99,107,0,83,73,77,68,95,73,110,116,51,50,120,52,95,99,104,101,99,107,0,83,73,77,68,95,73,110,116,49,54,120,56,95,99,104,101,99,107,0,83,73,77,68,95,73,110,116,56,120,49,54,95,99,104,101,99,107,0,33,32,126,32,43,32,45,0,42,32,47,32,37,0,43,32,45,0,60,60,32,62,62,32,62,62,62,0,60,32,60,61,32,62,32,62,61,0,61,61,32,33,61,0,63,32,58,0,118,97,114,32,99,
111,110,115,116,32,102,117,110,99,116,105,111,110,32,105,102,32,101,108,115,101,32,100,111,32,119,104,105,108,101,32,102,111,114,32,98,114,101,97,107,32,99,111,110,116,105,110,117,101,32,114,101,116,117,114,110,32,115,119,105,116,99,104,32,99,97,115,101,32,100,101,102,97,117,108,116,32,116,104,114,111,119,32,116,114,121,32,99,97,116,99,104,32,102,105,110,97,108,108,121,32,116,114,117,101,32,102,97,108,115,101,32,110,117,108,108,32,110,101,119,0,111,98,106,101,99,116,0,97,114,114,97,121,0,110,101,
119,0,100,111,116,0,100,101,102,97,117,108,116,0,99,97,115,101,0,125,0,123,0,102,117,110,99,116,105,111,110,0,102,48,0,72,69,65,80,70,54,52,0,72,69,65,80,85,51,50,0,72,69,65,80,85,49,54,0,72,69,65,80,85,56,0,72,69,65,80,70,51,50,0,72,69,65,80,51,50,0,72,69,65,80,49,54,0,72,69,65,80,56,0,116,101,109,112,68,111,117,98,108,101,80,116,114,0,62,62,62,0,83,73,77,68,95,73,110,116,51,50,120,52,0,83,73,77,68,95,73,110,116,49,54,120,56,0,83,73,77,68,95,73,110,116,56,120,49,54,0,83,73,77,68,95,70,108,111,97,
116,54,52,120,50,0,83,73,77,68,95,70,108,111,97,116,51,50,120,52,0,105,54,52,95,99,111,110,115,116,0,77,97,116,104,95,99,108,122,51,50,0,77,97,116,104,95,102,114,111,117,110,100,0,117,110,97,114,121,45,112,111,115,116,102,105,120,0,117,110,97,114,121,45,112,114,101,102,105,120,0,95,95,95,117,100,105,118,109,111,100,100,105,52,0,95,108,108,118,109,95,99,116,116,122,95,105,51,50,0,103,101,116,84,101,109,112,82,101,116,48,0,116,114,121,0,115,116,114,105,110,103,0,99,111,110,116,105,110,117,101,0,99,
97,108,108,0,115,101,113,0,102,111,114,0,100,111,0,119,104,105,108,101,0,101,108,115,101,0,99,111,110,100,105,116,105,111,110,97,108,0,118,97,114,0,100,101,102,117,110,0,116,111,112,108,101,118,101,108,0,108,97,98,101,108,0,66,105,110,97,114,121,101,110,124,110,111,110,115,116,97,110,100,97,108,111,110,101,0,97,110,121,46,101,120,112,114,0,102,54,52,46,101,120,112,114,0,102,51,50,46,101,120,112,114,0,105,54,52,46,101,120,112,114,0,105,51,50,46,101,120,112,114,0,108,111,103,95,101,120,101,99,117,116,
105,111,110,0,116,101,109,112,82,101,116,48,0,115,101,116,95,102,54,52,0,115,101,116,95,102,51,50,0,115,101,116,95,105,54,52,0,115,101,116,95,105,51,50,0,103,101,116,95,102,54,52,0,103,101,116,95,102,51,50,0,103,101,116,95,105,54,52,0,103,101,116,95,105,51,50,0,114,101,100,117,99,101,32,35,32,111,102,32,108,111,99,97,108,115,32,98,121,32,99,111,97,108,101,115,99,105,110,103,0,99,111,97,108,101,115,99,101,45,108,111,99,97,108,115,45,108,101,97,114,110,105,110,103,0,114,101,100,117,99,101,32,35,32,
111,102,32,108,111,99,97,108,115,32,98,121,32,99,111,97,108,101,115,99,105,110,103,32,97,110,100,32,108,101,97,114,110,105,110,103,0,99,111,100,101,45,112,117,115,104,105,110,103,0,112,117,115,104,32,99,111,100,101,32,102,111,114,119,97,114,100,44,32,112,111,116,101,110,116,105,97,108,108,121,32,109,97,107,105,110,103,32,105,116,32,110,111,116,32,97,108,119,97,121,115,32,101,120,101,99,117,116,101,0,99,111,100,101,45,102,111,108,100,105,110,103,0,102,111,108,100,32,99,111,100,101,44,32,109,101,114,
103,105,110,103,32,100,117,112,108,105,99,97,116,101,115,0,100,99,101,0,114,101,109,111,118,101,115,32,117,110,114,101,97,99,104,97,98,108,101,32,99,111,100,101,0,100,117,112,108,105,99,97,116,101,45,102,117,110,99,116,105,111,110,45,101,108,105,109,105,110,97,116,105,111,110,0,114,101,109,111,118,101,115,32,100,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,115,0,101,120,116,114,97,99,116,45,102,117,110,99,116,105,111,110,0,108,101,97,118,101,115,32,106,117,115,116,32,111,110,101,
32,102,117,110,99,116,105,111,110,32,40,117,115,101,102,117,108,32,102,111,114,32,100,101,98,117,103,103,105,110,103,41,0,102,108,97,116,116,101,110,45,99,111,110,116,114,111,108,45,102,108,111,119,0,102,108,97,116,116,101,110,115,32,111,117,116,32,99,111,110,116,114,111,108,32,102,108,111,119,32,116,111,32,98,101,32,111,110,108,121,32,111,110,32,98,108,111,99,107,115,44,32,110,111,116,32,110,101,115,116,101,100,32,97,115,32,101,120,112,114,101,115,115,105,111,110,115,0,105,110,108,105,110,105,110,
103,0,105,110,108,105,110,101,115,32,102,117,110,99,116,105,111,110,115,0,105,110,108,105,110,105,110,103,45,111,112,116,105,109,105,122,105,110,103,0,105,110,108,105,110,101,115,32,102,117,110,99,116,105,111,110,115,32,97,110,100,32,111,112,116,105,109,105,122,101,115,32,119,104,101,114,101,32,119,101,32,105,110,108,105,110,101,100,0,108,101,103,97,108,105,122,101,45,106,115,45,105,110,116,101,114,102,97,99,101,0,108,101,103,97,108,105,122,101,115,32,105,54,52,32,116,121,112,101,115,32,111,110,32,
116,104,101,32,105,109,112,111,114,116,47,101,120,112,111,114,116,32,98,111,117,110,100,97,114,121,0,108,111,99,97,108,45,99,115,101,0,99,111,109,109,111,110,32,115,117,98,101,120,112,114,101,115,115,105,111,110,32,101,108,105,109,105,110,97,116,105,111,110,32,105,110,115,105,100,101,32,98,97,115,105,99,32,98,108,111,99,107,115,0,108,111,103,45,101,120,101,99,117,116,105,111,110,0,105,110,115,116,114,117,109,101,110,116,32,116,104,101,32,98,117,105,108,100,32,119,105,116,104,32,108,111,103,103,105,
110,103,32,111,102,32,119,104,101,114,101,32,101,120,101,99,117,116,105,111,110,32,103,111,101,115,0,105,110,115,116,114,117,109,101,110,116,45,108,111,99,97,108,115,0,105,110,115,116,114,117,109,101,110,116,32,116,104,101,32,98,117,105,108,100,32,119,105,116,104,32,99,111,100,101,32,116,111,32,105,110,116,101,114,99,101,112,116,32,97,108,108,32,108,111,97,100,115,32,97,110,100,32,115,116,111,114,101,115,0,105,110,115,116,114,117,109,101,110,116,45,109,101,109,111,114,121,0,109,101,109,111,114,121,
45,112,97,99,107,105,110,103,0,112,97,99,107,115,32,109,101,109,111,114,121,32,105,110,116,111,32,115,101,112,97,114,97,116,101,32,115,101,103,109,101,110,116,115,44,32,115,107,105,112,112,105,110,103,32,122,101,114,111,115,0,109,101,114,103,101,115,32,98,108,111,99,107,115,32,116,111,32,116,104,101,105,114,32,112,97,114,101,110,116,115,0,109,101,116,114,105,99,115,0,114,101,112,111,114,116,115,32,109,101,116,114,105,99,115,0,110,109,0,110,97,109,101,32,108,105,115,116,0,111,112,116,105,109,105,122,
101,45,105,110,115,116,114,117,99,116,105,111,110,115,0,111,112,116,105,109,105,122,101,115,32,105,110,115,116,114,117,99,116,105,111,110,32,99,111,109,98,105,110,97,116,105,111,110,115,0,112,105,99,107,45,108,111,97,100,45,115,105,103,110,115,0,112,105,99,107,32,108,111,97,100,32,115,105,103,110,115,32,98,97,115,101,100,32,111,110,32,116,104,101,105,114,32,117,115,101,115,0,112,111,115,116,45,101,109,115,99,114,105,112,116,101,110,0,109,105,115,99,101,108,108,97,110,101,111,117,115,32,111,112,116,
105,109,105,122,97,116,105,111,110,115,32,102,111,114,32,69,109,115,99,114,105,112,116,101,110,45,103,101,110,101,114,97,116,101,100,32,99,111,100,101,0,112,114,101,99,111,109,112,117,116,101,0,99,111,109,112,117,116,101,115,32,99,111,109,112,105,108,101,45,116,105,109,101,32,101,118,97,108,117,97,116,97,98,108,101,32,101,120,112,114,101,115,115,105,111,110,115,0,112,114,105,110,116,0,112,114,105,110,116,32,105,110,32,115,45,101,120,112,114,101,115,115,105,111,110,32,102,111,114,109,97,116,0,112,
114,105,110,116,45,109,105,110,105,102,105,101,100,0,112,114,105,110,116,32,105,110,32,109,105,110,105,102,105,101,100,32,115,45,101,120,112,114,101,115,115,105,111,110,32,102,111,114,109,97,116,0,112,114,105,110,116,45,102,117,108,108,0,112,114,105,110,116,32,105,110,32,102,117,108,108,32,115,45,101,120,112,114,101,115,115,105,111,110,32,102,111,114,109,97,116,0,112,114,105,110,116,45,99,97,108,108,45,103,114,97,112,104,0,112,114,105,110,116,32,99,97,108,108,32,103,114,97,112,104,0,114,101,108,111,
111,112,101,114,45,106,117,109,112,45,116,104,114,101,97,100,105,110,103,0,116,104,114,101,97,100,32,114,101,108,111,111,112,101,114,32,106,117,109,112,115,32,40,102,97,115,116,99,111,109,112,32,111,117,116,112,117,116,32,111,110,108,121,41,0,114,101,109,111,118,101,45,105,109,112,111,114,116,115,0,114,101,109,111,118,101,115,32,105,109,112,111,114,116,115,32,97,110,100,32,114,101,112,108,97,99,101,115,32,116,104,101,109,32,119,105,116,104,32,110,111,112,115,0,114,101,109,111,118,101,45,109,101,109,
111,114,121,0,114,101,109,111,118,101,115,32,109,101,109,111,114,121,32,115,101,103,109,101,110,116,115,0,114,101,109,111,118,101,115,32,98,114,101,97,107,115,32,102,114,111,109,32,108,111,99,97,116,105,111,110,115,32,116,104,97,116,32,97,114,101,32,110,111,116,32,110,101,101,100,101,100,0,114,101,109,111,118,101,45,117,110,117,115,101,100,45,109,111,100,117,108,101,45,101,108,101,109,101,110,116,115,0,114,101,109,111,118,101,115,32,117,110,117,115,101,100,32,109,111,100,117,108,101,32,101,108,101,
109,101,110,116,115,0,114,101,109,111,118,101,115,32,110,97,109,101,115,32,102,114,111,109,32,108,111,99,97,116,105,111,110,115,32,116,104,97,116,32,97,114,101,32,110,101,118,101,114,32,98,114,97,110,99,104,101,100,32,116,111,0,114,101,111,114,100,101,114,45,102,117,110,99,116,105,111,110,115,0,115,111,114,116,115,32,102,117,110,99,116,105,111,110,115,32,98,121,32,97,99,99,101,115,115,32,102,114,101,113,117,101,110,99,121,0,115,111,114,116,115,32,108,111,99,97,108,115,32,98,121,32,97,99,99,101,115,
115,32,102,114,101,113,117,101,110,99,121,0,114,101,114,101,108,111,111,112,0,114,101,45,111,112,116,105,109,105,122,101,32,99,111,110,116,114,111,108,32,102,108,111,119,32,117,115,105,110,103,32,116,104,101,32,114,101,108,111,111,112,101,114,32,97,108,103,111,114,105,116,104,109,0,109,105,115,99,101,108,108,97,110,101,111,117,115,32,108,111,99,97,108,115,45,114,101,108,97,116,101,100,32,111,112,116,105,109,105,122,97,116,105,111,110,115,0,115,97,102,101,45,104,101,97,112,0,105,110,115,116,114,117,
109,101,110,116,32,108,111,97,100,115,32,97,110,100,32,115,116,111,114,101,115,32,116,111,32,99,104,101,99,107,32,102,111,114,32,105,110,118,97,108,105,100,32,98,101,104,97,118,105,111,114,0,115,105,109,112,108,105,102,121,45,108,111,99,97,108,115,45,110,111,116,101,101,0,115,105,109,112,108,105,102,121,45,108,111,99,97,108,115,45,110,111,115,116,114,117,99,116,117,114,101,0,115,105,109,112,108,105,102,121,45,108,111,99,97,108,115,45,110,111,116,101,101,45,110,111,115,116,114,117,99,116,117,114,101,
0,115,115,97,0,115,115,97,45,105,102,121,32,118,97,114,105,97,98,108,101,115,32,115,111,32,116,104,97,116,32,116,104,101,121,32,104,97,118,101,32,97,32,115,105,110,103,108,101,32,97,115,115,105,103,110,109,101,110,116,0,117,110,116,101,101,0,114,101,109,111,118,101,115,32,116,101,101,95,108,111,99,97,108,115,44,32,114,101,112,108,97,99,105,110,103,32,116,104,101,109,32,119,105,116,104,32,115,101,116,115,32,97,110,100,32,103,101,116,115,0,114,101,109,111,118,101,115,32,111,98,118,105,111,117,115,108,
121,32,117,110,110,101,101,100,101,100,32,99,111,100,101,0,115,114,99,47,112,97,115,115,101,115,47,86,97,99,117,117,109,46,99,112,112,0,112,97,114,101,110,116,115,46,102,105,110,100,40,99,117,114,114,41,32,61,61,32,112,97,114,101,110,116,115,46,101,110,100,40,41,0,115,114,99,47,97,115,116,47,116,121,112,101,45,117,112,100,97,116,105,110,103,46,104,0,110,111,116,101,65,100,100,105,116,105,111,110,0,105,110,102,111,46,110,117,109,66,114,101,97,107,115,32,62,61,32,48,0,110,111,116,101,66,114,101,97,
107,67,104,97,110,103,101,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,98,108,111,99,107,45,62,116,121,112,101,41,32,38,38,32,115,105,110,103,108,101,116,111,110,45,62,116,121,112,101,32,61,61,32,117,110,114,101,97,99,104,97,98,108,101,0,115,114,99,47,97,115,116,47,98,108,111,99,107,45,117,116,105,108,115,46,104,0,115,105,109,112,108,105,102,121,84,111,67,111,110,116,101,110,116,115,0,78,52,119,97,115,109,54,86,97,99,117,117,109,69,0,78,52,119,97,115,109,49,48,87,97,108,
107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,54,86,97,99,117,117,109,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,54,86,97,99,117,117,109,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,54,86,97,99,117,117,109,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,
118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,54,86,97,99,117,117,109,69,118,69,69,0,78,52,119,97,115,109,53,85,110,116,101,101,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,53,85,110,116,101,101,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,53,85,110,116,101,101,69,78,
83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,53,85,110,116,101,101,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,53,85,110,116,101,101,69,118,69,69,0,99,117,114,114,77,97,112,112,105,110,103,46,115,105,122,101,40,41,32,61,61,32,110,117,109,76,111,99,97,108,115,0,115,114,99,47,112,97,115,115,101,115,47,83,83,65,105,102,121,46,99,112,
112,0,118,105,115,105,116,83,101,116,76,111,99,97,108,0,99,117,114,114,45,62,105,110,100,101,120,32,60,32,110,117,109,76,111,99,97,108,115,0,109,97,112,112,105,110,103,115,46,115,105,122,101,40,41,32,62,32,48,0,109,101,114,103,101,0,78,52,119,97,115,109,54,83,83,65,105,102,121,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,54,83,83,65,105,102,121,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,
69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,54,83,83,65,105,102,121,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,54,83,83,65,105,102,121,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,54,83,83,65,105,102,121,69,118,69,69,0,115,101,116,45,62,105,115,84,101,101,40,41,0,115,114,99,47,
112,97,115,115,101,115,47,83,105,109,112,108,105,102,121,76,111,99,97,108,115,46,99,112,112,0,118,105,115,105,116,68,114,111,112,0,33,115,101,116,45,62,105,115,84,101,101,40,41,0,118,105,115,105,116,71,101,116,76,111,99,97,108,0,33,99,117,114,114,45,62,99,97,115,116,60,73,102,62,40,41,45,62,105,102,70,97,108,115,101,0,100,111,78,111,116,101,78,111,110,76,105,110,101,97,114,0,33,40,42,98,114,101,97,107,115,91,48,93,46,98,114,112,41,45,62,99,97,115,116,60,66,114,101,97,107,62,40,41,45,62,118,97,108,
117,101,0,111,112,116,105,109,105,122,101,66,108,111,99,107,82,101,116,117,114,110,0,100,111,78,111,116,101,73,102,69,108,115,101,67,111,110,100,105,116,105,111,110,0,100,111,78,111,116,101,73,102,69,108,115,101,84,114,117,101,0,105,102,102,45,62,105,102,70,97,108,115,101,0,100,111,78,111,116,101,73,102,69,108,115,101,70,97,108,115,101,0,111,112,116,105,109,105,122,101,73,102,82,101,116,117,114,110,0,105,102,84,114,117,101,66,108,111,99,107,45,62,116,121,112,101,32,33,61,32,110,111,110,101,0,105,
102,102,45,62,116,121,112,101,32,33,61,32,110,111,110,101,0,33,112,114,101,118,105,111,117,115,45,62,105,115,84,101,101,40,41,0,118,105,115,105,116,80,111,115,116,0,115,101,108,102,45,62,115,105,110,107,97,98,108,101,115,46,99,111,117,110,116,40,105,110,100,101,120,41,32,61,61,32,48,0,78,52,119,97,115,109,49,52,83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,50,49,76,105,110,101,97,114,69,120,101,99,117,116,105,111,
110,87,97,108,107,101,114,73,78,83,95,49,52,83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,50,49,76,105,110,101,97,114,69,120,101,99,117,116,105,111,110,87,97,108,107,101,114,73,78,83,95,49,52,83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,
83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,52,83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,52,83,105,109,112,108,105,102,121,76,111,99,97,108,115,69,118,69,69,0,82,111,111,116,0,115,114,99,47,99,102,103,47,82,101,108,
111,111,112,101,114,46,99,112,112,0,82,101,110,100,101,114,0,98,97,100,32,108,97,98,101,108,32,105,110,32,115,111,117,114,99,101,84,111,85,110,105,113,117,101,0,117,115,101,32,111,102,32,112,111,112,112,101,100,32,108,97,98,101,108,32,105,110,32,115,111,117,114,99,101,84,111,85,110,105,113,117,101,0,108,97,98,101,108,83,116,97,99,107,46,98,97,99,107,40,41,32,61,61,32,110,97,109,101,0,115,114,99,47,112,97,114,115,105,110,103,46,104,0,112,111,112,76,97,98,101,108,78,97,109,101,0,67,97,108,99,117,108,
97,116,101,0,76,111,111,112,0,72,97,110,100,108,101,70,111,108,108,111,119,117,112,77,117,108,116,105,112,108,101,115,0,76,111,111,112,45,62,69,110,116,114,105,101,115,46,115,105,122,101,40,41,32,62,32,48,0,98,108,111,99,107,36,0,36,98,114,101,97,107,0,78,51,67,70,71,49,51,77,117,108,116,105,112,108,101,83,104,97,112,101,69,0,78,51,67,70,71,53,83,104,97,112,101,69,0,73,110,110,101,114,66,108,111,99,107,115,46,115,105,122,101,40,41,32,62,32,48,0,77,97,107,101,76,111,111,112,0,115,104,97,112,101,36],
"i8",4,m.M+23316);A([0,36,99,111,110,116,105,110,117,101,0,78,51,67,70,71,57,76,111,111,112,83,104,97,112,101,69,0,33,68,101,102,97,117,108,116,84,97,114,103,101,116,32,38,38,32,34,98,108,111,99,107,32,104,97,115,32,98,114,97,110,99,104,101,115,32,119,105,116,104,111,117,116,32,97,32,100,101,102,97,117,108,116,32,40,110,117,108,108,112,116,114,32,102,111,114,32,116,104,101,32,99,111,110,100,105,116,105,111,110,41,34,0,68,101,102,97,117,108,116,84,97,114,103,101,116,0,68,101,116,97,105,108,115,45,
62,67,111,110,100,105,116,105,111,110,0,68,101,116,97,105,108,115,45,62,84,121,112,101,32,61,61,32,66,114,97,110,99,104,58,58,66,114,101,97,107,0,33,82,111,111,116,0,115,119,105,116,99,104,36,0,36,100,101,102,97,117,108,116,0,36,108,101,97,118,101,0,36,99,97,115,101,36,0,65,110,99,101,115,116,111,114,0,78,51,67,70,71,49,49,83,105,109,112,108,101,83,104,97,112,101,69,0,78,83,116,51,95,95,50,49,52,100,101,102,97,117,108,116,95,100,101,108,101,116,101,73,78,52,119,97,115,109,56,82,101,82,101,108,111,
111,112,49,48,84,114,105,97,103,101,84,97,115,107,69,69,69,0,78,83,116,51,95,95,50,50,48,95,95,115,104,97,114,101,100,95,112,116,114,95,112,111,105,110,116,101,114,73,80,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,49,48,84,114,105,97,103,101,84,97,115,107,69,78,83,95,49,52,100,101,102,97,117,108,116,95,100,101,108,101,116,101,73,83,51,95,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,69,69,0,33,98,101,102,111,114,101,45,62,83,119,105,116,99,104,67,111,110,100,105,116,
105,111,110,0,115,114,99,47,112,97,115,115,101,115,47,82,101,82,101,108,111,111,112,46,99,112,112,0,104,97,110,100,108,101,0,33,99,111,110,116,97,105,110,115,40,66,114,97,110,99,104,101,115,79,117,116,44,32,84,97,114,103,101,116,41,0,65,100,100,66,114,97,110,99,104,84,111,0,65,100,100,83,119,105,116,99,104,66,114,97,110,99,104,84,111,0,78,83,116,51,95,95,50,50,48,95,95,115,104,97,114,101,100,95,112,116,114,95,101,109,112,108,97,99,101,73,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,49,48,
84,114,105,97,103,101,84,97,115,107,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,69,69,0,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,54,73,102,84,97,115,107,69,0,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,52,84,97,115,107,69,0,78,83,116,51,95,95,50,50,48,95,95,115,104,97,114,101,100,95,112,116,114,95,101,109,112,108,97,99,101,73,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,54,73,102,84,97,115,107,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,
83,51,95,69,69,69,69,0,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,57,66,108,111,99,107,84,97,115,107,69,0,78,83,116,51,95,95,50,50,48,95,95,115,104,97,114,101,100,95,112,116,114,95,101,109,112,108,97,99,101,73,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,57,66,108,111,99,107,84,97,115,107,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,69,69,0,78,52,119,97,115,109,56,82,101,82,101,108,111,111,112,49,48,84,114,105,97,103,101,84,97,115,107,69,0,78,52,119,97,115,
109,56,82,101,82,101,108,111,111,112,69,0,110,101,119,84,111,79,108,100,91,105,93,32,60,32,99,117,114,114,45,62,112,97,114,97,109,115,46,115,105,122,101,40,41,0,115,114,99,47,112,97,115,115,101,115,47,82,101,111,114,100,101,114,76,111,99,97,108,115,46,99,112,112,0,78,52,119,97,115,109,49,51,82,101,111,114,100,101,114,76,111,99,97,108,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,51,82,101,111,114,100,101,
114,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,51,82,101,111,114,100,101,114,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,51,82,101,111,114,100,101,114,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,
115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,51,82,101,111,114,100,101,114,76,111,99,97,108,115,69,118,69,69,0,78,52,119,97,115,109,49,54,82,101,111,114,100,101,114,70,117,110,99,116,105,111,110,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,82,101,111,114,100,101,114,70,117,110,99,116,105,111,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,
109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,82,101,111,114,100,101,114,70,117,110,99,116,105,111,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,54,82,101,111,114,100,101,114,70,117,110,99,116,105,111,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,54,82,101,111,114,100,101,114,70,117,110,
99,116,105,111,110,115,69,118,69,69,0,98,114,97,110,99,104,101,115,83,101,101,110,46,101,109,112,116,121,40,41,0,115,114,99,47,112,97,115,115,101,115,47,82,101,109,111,118,101,85,110,117,115,101,100,78,97,109,101,115,46,99,112,112,0,78,52,119,97,115,109,49,55,82,101,109,111,118,101,85,110,117,115,101,100,78,97,109,101,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,55,82,101,109,111,118,101,85,110,117,115,
101,100,78,97,109,101,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,55,82,101,109,111,118,101,85,110,117,115,101,100,78,97,109,101,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,55,82,101,109,111,118,101,85,110,117,115,101,100,78,97,109,101,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,
95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,55,82,101,109,111,118,101,85,110,117,115,101,100,78,97,109,101,115,69,118,69,69,0,102,117,110,99,116,105,111,110,84,121,112,101,115,77,97,112,46,99,111,117,110,116,40,110,97,109,101,41,0,115,114,99,47,119,97,115,109,47,119,97,115,109,46,99,112,112,0,103,101,116,70,117,110,99,116,105,111,110,84,121,112,101,0,78,52,119,97,115,109,50,54,82,101,109,111,118,101,85,110,117,115,101,100,77,111,100,117,108,101,69,108,101,
109,101,110,116,115,69,0,105,102,83,116,97,99,107,46,101,109,112,116,121,40,41,0,115,114,99,47,112,97,115,115,101,115,47,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,46,99,112,112,0,105,102,84,114,117,101,32,38,38,32,105,102,70,97,108,115,101,0,102,105,110,97,108,105,122,101,0,33,98,114,49,45,62,118,97,108,117,101,32,38,38,32,33,98,114,50,45,62,118,97,108,117,101,0,33,98,114,45,62,118,97,108,117,101,0,33,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,105,102,102,
45,62,116,121,112,101,41,0,111,112,116,105,109,105,122,101,76,111,111,112,0,33,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,98,108,111,99,107,45,62,116,121,112,101,41,0,115,101,108,102,45,62,105,102,83,116,97,99,107,46,115,105,122,101,40,41,32,62,32,48,0,118,105,115,105,116,65,110,121,0,78,52,119,97,115,109,49,53,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,
97,108,107,101,114,73,78,83,95,49,53,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,53,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,53,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,
69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,53,82,101,109,111,118,101,85,110,117,115,101,100,66,114,115,69,118,69,69,0,78,52,119,97,115,109,49,50,82,101,109,111,118,101,77,101,109,111,114,121,69,0,105,109,112,111,114,116,115,77,97,112,46,99,111,117,110,116,40,110,97,109,101,41,0,103,101,116,73,109,112,111,114,116,0,78,52,119,97,115,109,49,51,82,101,109,111,118,101,73,109,112,111,114,116,115,69,0,78,52,119,
97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,51,82,101,109,111,118,101,73,109,112,111,114,116,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,51,82,101,109,111,118,101,73,109,112,111,114,116,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,
73,78,83,95,49,51,82,101,109,111,118,101,73,109,112,111,114,116,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,51,82,101,109,111,118,101,73,109,112,111,114,116,115,69,118,69,69,0,104,111,108,100,101,114,45,62,108,105,115,116,46,115,105,122,101,40,41,32,61,61,32,49,0,115,114,99,47,112,97,115,115,101,115,47,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,101,97,100,105,110,103,46,99,112,112,0,118,
105,115,105,116,66,108,111,99,107,0,95,95,114,106,116,111,36,0,95,95,114,106,116,105,36,0,108,97,98,101,108,67,104,101,99,107,115,91,110,117,109,93,32,62,32,48,0,104,97,115,73,114,114,101,100,117,99,105,98,108,101,67,111,110,116,114,111,108,70,108,111,119,0,108,97,98,101,108,67,104,101,99,107,115,73,110,79,114,105,103,105,110,91,110,117,109,93,32,61,61,32,48,0,108,97,98,101,108,83,101,116,115,73,110,79,114,105,103,105,110,91,110,117,109,93,32,60,32,108,97,98,101,108,83,101,116,115,91,110,117,109,
93,0,108,111,99,97,108,73,110,100,105,99,101,115,46,99,111,117,110,116,40,110,97,109,101,41,32,62,32,48,0,103,101,116,76,111,99,97,108,73,110,100,101,120,0,78,52,119,97,115,109,50,49,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,101,97,100,105,110,103,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,50,49,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,
101,97,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,50,49,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,101,97,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,50,49,82,101,108,111,111,112,101,114,74,117,109,112,
84,104,114,101,97,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,50,49,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,101,97,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,50,49,82,101,108,111,111,112,101,114,74,117,109,112,84,104,114,101,97,100,105,110,103,69,118,69,69,0,100,105,103,114,
97,112,104,32,99,97,108,108,32,123,10,32,32,114,97,110,107,100,105,114,32,61,32,76,82,59,10,32,32,115,117,98,103,114,97,112,104,32,99,108,117,115,116,101,114,95,107,101,121,32,123,10,32,32,32,32,110,111,100,101,32,91,115,104,97,112,101,61,98,111,120,44,32,102,111,110,116,110,97,109,101,61,99,111,117,114,105,101,114,44,32,102,111,110,116,115,105,122,101,61,49,48,93,59,10,32,32,32,32,101,100,103,101,32,91,102,111,110,116,110,97,109,101,61,99,111,117,114,105,101,114,44,32,102,111,110,116,115,105,122,
101,61,49,48,93,59,10,32,32,32,32,108,97,98,101,108,32,61,32,34,75,101,121,34,59,10,32,32,32,32,34,73,109,112,111,114,116,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,34,44,32,102,105,108,108,99,111,108,111,114,61,34,116,117,114,113,117,111,105,115,101,34,93,59,10,32,32,32,32,34,69,120,112,111,114,116,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,34,44,32,102,105,108,108,99,111,108,111,114,61,34,103,114,97,121,34,93,59,10,32,32,32,32,34,73,110,100,105,114,101,99,116,32,
84,97,114,103,101,116,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,44,32,114,111,117,110,100,101,100,34,44,32,102,105,108,108,99,111,108,111,114,61,34,119,104,105,116,101,34,93,59,10,32,32,32,32,34,65,34,32,45,62,32,34,66,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,44,32,114,111,117,110,100,101,100,34,44,32,108,97,98,101,108,32,61,32,34,68,105,114,101,99,116,32,67,97,108,108,34,93,59,10,32,32,125,10,10,32,32,110,111,100,101,32,91,115,104,97,112,101,61,98,111,120,44,32,
102,111,110,116,110,97,109,101,61,99,111,117,114,105,101,114,44,32,102,111,110,116,115,105,122,101,61,49,48,93,59,10,0,32,32,34,0,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,34,44,32,102,105,108,108,99,111,108,111,114,61,34,119,104,105,116,101,34,93,59,10,0,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,34,44,32,102,105,108,108,99,111,108,111,114,61,34,116,117,114,113,117,111,105,115,101,34,93,59,10,0,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,34,44,32,102,
105,108,108,99,111,108,111,114,61,34,103,114,97,121,34,93,59,10,0,125,10,0,34,32,91,115,116,121,108,101,61,34,102,105,108,108,101,100,44,32,114,111,117,110,100,101,100,34,93,59,10,0,102,117,110,99,116,105,111,110,115,77,97,112,46,99,111,117,110,116,40,110,97,109,101,41,0,103,101,116,70,117,110,99,116,105,111,110,0,34,32,45,62,32,34,0,34,59,32,47,47,32,99,97,108,108,73,109,112,111,114,116,10,0,34,59,32,47,47,32,99,97,108,108,10,0,78,52,119,97,115,109,49,52,80,114,105,110,116,67,97,108,108,71,114,97,
112,104,69,0,109,111,100,117,108,101,0,115,116,97,114,116,0,59,59,32,99,117,115,116,111,109,32,115,101,99,116,105,111,110,32,34,0,34,44,32,115,105,122,101,32,0,102,117,110,99,32,0,40,116,121,112,101,32,0,112,97,114,97,109,32,0,114,101,115,117,108,116,32,0,108,111,99,97,108,32,0,91,0,59,59,64,32,0,112,97,103,101,115,105,122,101,0,99,117,114,114,101,110,116,95,109,101,109,111,114,121,0,103,114,111,119,95,109,101,109,111,114,121,0,104,97,115,102,101,97,116,117,114,101,32,0,105,51,50,46,97,100,100,0,
105,51,50,46,115,117,98,0,105,51,50,46,109,117,108,0,105,51,50,46,100,105,118,95,115,0,105,51,50,46,100,105,118,95,117,0,105,51,50,46,114,101,109,95,115,0,105,51,50,46,114,101,109,95,117,0,105,51,50,46,97,110,100,0,105,51,50,46,111,114,0,105,51,50,46,120,111,114,0,105,51,50,46,115,104,108,0,105,51,50,46,115,104,114,95,117,0,105,51,50,46,115,104,114,95,115,0,105,51,50,46,114,111,116,108,0,105,51,50,46,114,111,116,114,0,105,51,50,46,101,113,0,105,51,50,46,110,101,0,105,51,50,46,108,116,95,115,0,105,
51,50,46,108,116,95,117,0,105,51,50,46,108,101,95,115,0,105,51,50,46,108,101,95,117,0,105,51,50,46,103,116,95,115,0,105,51,50,46,103,116,95,117,0,105,51,50,46,103,101,95,115,0,105,51,50,46,103,101,95,117,0,105,54,52,46,97,100,100,0,105,54,52,46,115,117,98,0,105,54,52,46,109,117,108,0,105,54,52,46,100,105,118,95,115,0,105,54,52,46,100,105,118,95,117,0,105,54,52,46,114,101,109,95,115,0,105,54,52,46,114,101,109,95,117,0,105,54,52,46,97,110,100,0,105,54,52,46,111,114,0,105,54,52,46,120,111,114,0,105,
54,52,46,115,104,108,0,105,54,52,46,115,104,114,95,117,0,105,54,52,46,115,104,114,95,115,0,105,54,52,46,114,111,116,108,0,105,54,52,46,114,111,116,114,0,105,54,52,46,101,113,0,105,54,52,46,110,101,0,105,54,52,46,108,116,95,115,0,105,54,52,46,108,116,95,117,0,105,54,52,46,108,101,95,115,0,105,54,52,46,108,101,95,117,0,105,54,52,46,103,116,95,115,0,105,54,52,46,103,116,95,117,0,105,54,52,46,103,101,95,115,0,105,54,52,46,103,101,95,117,0,102,51,50,46,97,100,100,0,102,51,50,46,115,117,98,0,102,51,50,
46,109,117,108,0,102,51,50,46,100,105,118,0,102,51,50,46,99,111,112,121,115,105,103,110,0,102,51,50,46,109,105,110,0,102,51,50,46,109,97,120,0,102,51,50,46,101,113,0,102,51,50,46,110,101,0,102,51,50,46,108,116,0,102,51,50,46,108,101,0,102,51,50,46,103,116,0,102,51,50,46,103,101,0,102,54,52,46,97,100,100,0,102,54,52,46,115,117,98,0,102,54,52,46,109,117,108,0,102,54,52,46,100,105,118,0,102,54,52,46,99,111,112,121,115,105,103,110,0,102,54,52,46,109,105,110,0,102,54,52,46,109,97,120,0,102,54,52,46,101,
113,0,102,54,52,46,110,101,0,102,54,52,46,108,116,0,102,54,52,46,108,101,0,102,54,52,46,103,116,0,102,54,52,46,103,101,0,105,51,50,46,99,108,122,0,105,51,50,46,99,116,122,0,105,51,50,46,112,111,112,99,110,116,0,105,51,50,46,101,113,122,0,105,54,52,46,99,108,122,0,105,54,52,46,99,116,122,0,105,54,52,46,112,111,112,99,110,116,0,105,54,52,46,101,113,122,0,102,51,50,46,110,101,103,0,102,51,50,46,97,98,115,0,102,51,50,46,99,101,105,108,0,102,51,50,46,102,108,111,111,114,0,102,51,50,46,116,114,117,110,
99,0,102,51,50,46,110,101,97,114,101,115,116,0,102,51,50,46,115,113,114,116,0,102,54,52,46,110,101,103,0,102,54,52,46,97,98,115,0,102,54,52,46,99,101,105,108,0,102,54,52,46,102,108,111,111,114,0,102,54,52,46,116,114,117,110,99,0,102,54,52,46,110,101,97,114,101,115,116,0,102,54,52,46,115,113,114,116,0,105,54,52,46,101,120,116,101,110,100,95,115,47,105,51,50,0,105,54,52,46,101,120,116,101,110,100,95,117,47,105,51,50,0,105,51,50,46,119,114,97,112,47,105,54,52,0,105,51,50,46,116,114,117,110,99,95,115,
47,102,51,50,0,105,54,52,46,116,114,117,110,99,95,115,47,102,51,50,0,105,51,50,46,116,114,117,110,99,95,117,47,102,51,50,0,105,54,52,46,116,114,117,110,99,95,117,47,102,51,50,0,105,51,50,46,116,114,117,110,99,95,115,47,102,54,52,0,105,54,52,46,116,114,117,110,99,95,115,47,102,54,52,0,105,51,50,46,116,114,117,110,99,95,117,47,102,54,52,0,105,54,52,46,116,114,117,110,99,95,117,47,102,54,52,0,105,51,50,46,114,101,105,110,116,101,114,112,114,101,116,47,102,51,50,0,105,54,52,46,114,101,105,110,116,101,
114,112,114,101,116,47,102,54,52,0,102,51,50,46,99,111,110,118,101,114,116,95,117,47,105,51,50,0,102,54,52,46,99,111,110,118,101,114,116,95,117,47,105,51,50,0,102,51,50,46,99,111,110,118,101,114,116,95,115,47,105,51,50,0,102,54,52,46,99,111,110,118,101,114,116,95,115,47,105,51,50,0,102,51,50,46,99,111,110,118,101,114,116,95,117,47,105,54,52,0,102,54,52,46,99,111,110,118,101,114,116,95,117,47,105,54,52,0,102,51,50,46,99,111,110,118,101,114,116,95,115,47,105,54,52,0,102,54,52,46,99,111,110,118,101,
114,116,95,115,47,105,54,52,0,102,54,52,46,112,114,111,109,111,116,101,47,102,51,50,0,102,51,50,46,100,101,109,111,116,101,47,102,54,52,0,102,51,50,46,114,101,105,110,116,101,114,112,114,101,116,47,105,51,50,0,102,54,52,46,114,101,105,110,116,101,114,112,114,101,116,47,105,54,52,0,46,99,111,110,115,116,32,0,63,0,45,48,0,58,48,120,0,45,105,110,102,0,115,116,100,58,58,105,115,110,97,110,40,102,41,32,38,38,32,34,101,120,112,101,99,116,101,100,32,97,32,78,97,78,34,0,115,114,99,47,119,97,115,109,47,108,
105,116,101,114,97,108,46,99,112,112,0,78,97,78,80,97,121,108,111,97,100,0,46,119,97,105,116,0,32,111,102,102,115,101,116,61,0,46,97,116,111,109,105,99,46,114,109,119,0,49,54,0,51,50,0,95,117,0,46,97,116,111,109,105,99,0,46,115,116,111,114,101,0,32,97,108,105,103,110,61,0,46,108,111,97,100,0,95,115,0,115,101,116,95,103,108,111,98,97,108,32,0,103,101,116,95,103,108,111,98,97,108,32,0,116,101,101,95,108,111,99,97,108,32,0,115,101,116,95,108,111,99,97,108,32,0,103,101,116,95,108,111,99,97,108,32,0,99,
97,108,108,95,105,110,100,105,114,101,99,116,32,0,99,97,108,108,32,0,98,114,95,116,97,98,108,101,0,98,114,95,105,102,32,0,98,114,32,0,32,40,114,101,115,117,108,116,32,0,102,54,52,0,102,51,50,0,105,54,52,0,105,51,50,0,110,111,110,101,0,101,120,112,111,114,116,32,0,102,117,110,99,0,116,97,98,108,101,0,103,108,111,98,97,108,0,41,41,0,100,97,116,97,32,0,32,34,0,34,41,10,0,92,110,0,92,48,100,0,92,116,0,92,48,99,0,92,48,56,0,92,92,0,92,34,0,92,39,0,32,115,104,97,114,101,100,0,101,108,101,109,32,0,32,97,
110,121,102,117,110,99,41,0,103,108,111,98,97,108,32,0,40,109,117,116,32,0,105,109,112,111,114,116,32,0,40,103,108,111,98,97,108,32,0,40,102,117,110,99,0,112,97,114,97,109,0,40,41,0,66,73,78,65,82,89,69,78,95,80,82,73,78,84,95,70,85,76,76,0,78,52,119,97,115,109,49,49,70,117,108,108,80,114,105,110,116,101,114,69,0,78,52,119,97,115,109,55,80,114,105,110,116,101,114,69,0,78,52,119,97,115,109,49,53,77,105,110,105,102,105,101,100,80,114,105,110,116,101,114,69,0,78,52,119,97,115,109,50,54,83,116,97,110,
100,97,108,111,110,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,50,50,78,111,110,115,116,97,110,100,97,108,111,110,101,69,120,99,101,112,116,105,111,110,69,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,99,117,114,114,45,62,108,101,102,116,45,62,116,121,112,101,41,32,63,32,108,101,102,116,46,116,121,112,101,32,61,61,32,99,117,114,114,45,62,108,101,102,116,45,62,116,121,112,101,32,58,32,116,114,117,101,0,115,114,99,47,119,97,115,109,45,105,110,116,101,
114,112,114,101,116,101,114,46,104,0,118,105,115,105,116,66,105,110,97,114,121,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,99,117,114,114,45,62,114,105,103,104,116,45,62,116,121,112,101,41,32,63,32,114,105,103,104,116,46,116,121,112,101,32,61,61,32,99,117,114,114,45,62,114,105,103,104,116,45,62,116,121,112,101,32,58,32,116,114,117,101,0,105,51,50,46,100,105,118,95,115,32,98,121,32,48,0,105,51,50,46,100,105,118,95,115,32,111,118,101,114,102,108,111,119,0,105,51,50,46,100,
105,118,95,117,32,98,121,32,48,0,105,51,50,46,114,101,109,95,115,32,98,121,32,48,0,105,51,50,46,114,101,109,95,117,32,98,121,32,48,0,105,54,52,46,100,105,118,95,115,32,98,121,32,48,0,105,54,52,46,100,105,118,95,115,32,111,118,101,114,102,108,111,119,0,105,54,52,46,100,105,118,95,117,32,98,121,32,48,0,105,54,52,46,114,101,109,95,115,32,98,121,32,48,0,105,54,52,46,114,101,109,95,117,32,98,121,32,48,0,116,121,112,101,32,61,61,32,87,97,115,109,84,121,112,101,58,58,102,54,52,0,99,97,115,116,84,111,73,
54,52,0,116,121,112,101,32,61,61,32,87,97,115,109,84,121,112,101,58,58,105,54,52,0,99,97,115,116,84,111,70,54,52,0,116,121,112,101,32,61,61,32,87,97,115,109,84,121,112,101,58,58,102,51,50,0,99,97,115,116,84,111,73,51,50,0,116,121,112,101,32,61,61,32,87,97,115,109,84,121,112,101,58,58,105,51,50,0,99,97,115,116,84,111,70,51,50,0,115,101,116,81,117,105,101,116,78,97,78,0,116,114,117,110,99,97,116,101,84,111,70,51,50,0,101,120,116,101,110,100,84,111,70,54,52,0,116,114,117,110,99,85,70,108,111,97,116,
32,111,102,32,110,97,110,0,105,51,50,46,116,114,117,110,99,85,70,108,111,97,116,32,111,118,101,114,102,108,111,119,0,105,54,52,46,116,114,117,110,99,85,70,108,111,97,116,32,111,118,101,114,102,108,111,119,0,116,114,117,110,99,83,70,108,111,97,116,32,111,102,32,110,97,110,0,105,51,50,46,116,114,117,110,99,83,70,108,111,97,116,32,111,118,101,114,102,108,111,119,0,105,54,52,46,116,114,117,110,99,83,70,108,111,97,116,32,111,118,101,114,102,108,111,119,0,116,114,117,110,99,97,116,101,84,111,73,51,50,0,
101,120,116,101,110,100,84,111,85,73,54,52,0,101,120,116,101,110,100,84,111,83,73,54,52,0,0,1,28,2,29,14,24,3,30,22,20,15,25,17,4,8,31,27,13,23,21,19,16,7,26,12,18,6,11,5,10,9,31,22,30,21,18,10,29,2,20,17,15,13,9,6,28,1,23,19,11,3,16,14,7,24,12,4,8,25,5,26,27,0,78,52,119,97,115,109,50,54,83,116,97,110,100,97,108,111,110,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,69,0,78,52,119,97,115,109,49,54,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,73,78,83,95,50,54,83,
116,97,110,100,97,108,111,110,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,50,54,83,116,97,110,100,97,108,111,110,101,69,120,112,114,101,115,115,105,111,110,82,117,110,110,101,114,69,78,83,95,52,70,108,111,119,69,69,69,0,78,52,119,97,115,109,49,48,80,114,101,99,111,109,112,117,116,101,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,
73,78,83,95,49,48,80,114,101,99,111,109,112,117,116,101,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,48,80,114,101,99,111,109,112,117,116,101,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,
101,114,73,78,83,95,49,48,80,114,101,99,111,109,112,117,116,101,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,78,83,95,49,48,80,114,101,99,111,109,112,117,116,101,69,118,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,48,80,114,101,99,111,109,112,117,116,101,
69,118,69,69,0,78,52,119,97,115,109,49,52,80,111,115,116,69,109,115,99,114,105,112,116,101,110,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,80,111,115,116,69,109,115,99,114,105,112,116,101,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,80,111,115,116,69,109,115,99,114,105,112,116,101,110,
69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,52,80,111,115,116,69,109,115,99,114,105,112,116,101,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,52,80,111,115,116,69,109,115,99,114,105,112,116,101,110,69,118,69,69,0,78,52,119,97,115,109,49,51,80,105,99,107,76,111,97,100,83,105,103,110,115,69,0,78,52,119,97,115,109,49,
48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,49,51,80,105,99,107,76,111,97,100,83,105,103,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,50,49,69,120,112,114,101,115,115,105,111,110,83,116,97,99,107,87,97,108,107,101,114,73,78,83,95,49,51,80,105,99,107,76,111,97,100,83,105,103,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,
118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,51,80,105,99,107,76,111,97,100,83,105,103,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,51,80,105,99,107,76,111,97,100,83,105,103,110,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,51,80,105,99,107,76,111,97,100,83,
105,103,110,115,69,118,69,69,0,98,105,116,115,32,60,32,51,50,0,115,114,99,47,112,97,115,115,101,115,47,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,46,99,112,112,0,104,97,110,100,79,112,116,105,109,105,122,101,0,90,78,52,119,97,115,109,49,56,69,120,112,114,101,115,115,105,111,110,65,110,97,108,121,122,101,114,53,101,113,117,97,108,69,80,78,83,95,49,48,69,120,112,114,101,115,115,105,111,110,69,83,50,95,69,85,108,83,50,95,83,50,95,69,95,0,78,83,116,51,95,95,50,49,48,
95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,119,97,115,109,49,56,69,120,112,114,101,115,115,105,111,110,65,110,97,108,121,122,101,114,53,101,113,117,97,108,69,80,78,83,50,95,49,48,69,120,112,114,101,115,115,105,111,110,69,83,53,95,69,85,108,83,53,95,83,53,95,69,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,54,95,69,69,70,98,83,53,95,83,53,95,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,98,80,78,52,119,
97,115,109,49,48,69,120,112,114,101,115,115,105,111,110,69,83,52,95,69,69,69,0,98,105,110,97,114,121,45,62,111,112,32,61,61,32,65,110,100,73,110,116,51,50,32,124,124,32,98,105,110,97,114,121,45,62,111,112,32,61,61,32,79,114,73,110,116,51,50,0,99,111,110,100,105,116,105,111,110,97,108,105,122,101,69,120,112,101,110,115,105,118,101,79,110,66,105,116,119,105,115,101,0,97,115,116,0,115,114,99,47,97,115,116,47,99,111,115,116,46,104,0,67,111,115,116,65,110,97,108,121,122,101,114,0,99,45,62,118,97,108,117,
101,46,103,101,116,105,51,50,40,41,32,61,61,32,48,0,111,112,116,105,109,105,122,101,65,100,100,101,100,67,111,110,115,116,97,110,116,115,0,90,78,52,119,97,115,109,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,50,50,111,112,116,105,109,105,122,101,65,100,100,101,100,67,111,110,115,116,97,110,116,115,69,80,78,83,95,54,66,105,110,97,114,121,69,69,85,108,80,78,83,95,49,48,69,120,112,114,101,115,115,105,111,110,69,105,69,95,0,78,83,116,51,95,95,50,49,48,95,95,102,117,
110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,119,97,115,109,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,50,50,111,112,116,105,109,105,122,101,65,100,100,101,100,67,111,110,115,116,97,110,116,115,69,80,78,83,50,95,54,66,105,110,97,114,121,69,69,85,108,80,78,83,50,95,49,48,69,120,112,114,101,115,115,105,111,110,69,105,69,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,56,95,69,69,70,118,83,55,95,105,69,69,69,0,78,83,116,51,95,95,50,49,48,95,
95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,118,80,78,52,119,97,115,109,49,48,69,120,112,114,101,115,115,105,111,110,69,105,69,69,69,0,78,52,119,97,115,109,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,78,83,95,50,52,85,110,
105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,50,48,79,112,116,105,
109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,78,83,95,50,48,79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,118,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,50,48,
79,112,116,105,109,105,122,101,73,110,115,116,114,117,99,116,105,111,110,115,69,118,69,69,0,32,32,32,32,0,78,52,119,97,115,109,56,78,97,109,101,76,105,115,116,69,0,117,110,114,101,97,99,104,97,98,108,101,0,110,111,112,0,104,111,115,116,0,114,101,116,117,114,110,0,100,114,111,112,0,115,101,108,101,99,116,0,98,105,110,97,114,121,0,117,110,97,114,121,0,99,111,110,115,116,0,115,116,111,114,101,0,108,111,97,100,0,115,101,116,95,103,108,111,98,97,108,0,103,101,116,95,103,108,111,98,97,108,0,115,101,116,
95,108,111,99,97,108,0,103,101,116,95,108,111,99,97,108,0,115,119,105,116,99,104,0,98,114,101,97,107,0,108,111,111,112,0,67,111,117,110,116,115,0,91,116,111,116,97,108,93,0,91,118,97,114,115,93,0,91,102,117,110,99,115,93,0,91,109,101,109,111,114,121,45,100,97,116,97,93,0,91,116,97,98,108,101,45,100,97,116,97,93,0,78,52,119,97,115,109,55,77,101,116,114,105,99,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,55,
77,101,116,114,105,99,115,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,55,77,101,116,114,105,99,115,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,55,77,101,116,114,105,99,
115,69,78,83,95,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,50,52,85,110,105,102,105,101,100,69,120,112,114,101,115,115,105,111,110,86,105,115,105,116,111,114,73,78,83,95,55,77,101,116,114,105,99,115,69,118,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,55,77,101,116,114,105,99,115,69,118,69,69,0,111,117,116,101,114,45,62,108,105,115,116,46,98,97,99,107,40,41,32,61,61,
32,99,117,114,114,0,115,114,99,47,112,97,115,115,101,115,47,77,101,114,103,101,66,108,111,99,107,115,46,99,112,112,0,111,112,116,105,109,105,122,101,0,98,114,73,102,115,32,62,61,32,100,114,111,112,112,101,100,66,114,73,102,115,0,102,111,117,110,100,0,78,52,119,97,115,109,49,49,77,101,114,103,101,66,108,111,99,107,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,49,77,101,114,103,101,66,108,111,99,107,115,
69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,49,77,101,114,103,101,66,108,111,99,107,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,49,77,101,114,103,101,66,108,111,99,107,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,
73,78,83,95,49,49,77,101,114,103,101,66,108,111,99,107,115,69,118,69,69,0,78,52,119,97,115,109,49,51,77,101,109,111,114,121,80,97,99,107,105,110,103,69,0,105,105,105,105,105,0,99,117,114,114,45,62,110,97,109,101,46,105,115,40,41,0,97,100,100,73,109,112,111,114,116,0,105,109,112,111,114,116,115,77,97,112,46,102,105,110,100,40,99,117,114,114,45,62,110,97,109,101,41,32,61,61,32,105,109,112,111,114,116,115,77,97,112,46,101,110,100,40,41,0,70,85,78,67,83,73,71,36,0,97,100,100,70,117,110,99,116,105,111,
110,84,121,112,101,0,102,117,110,99,116,105,111,110,84,121,112,101,115,77,97,112,46,102,105,110,100,40,99,117,114,114,45,62,110,97,109,101,41,32,61,61,32,102,117,110,99,116,105,111,110,84,121,112,101,115,77,97,112,46,101,110,100,40,41,0,78,52,119,97,115,109,49,54,73,110,115,116,114,117,109,101,110,116,77,101,109,111,114,121,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,
116,77,101,109,111,114,121,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,77,101,109,111,114,121,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,77,101,109,111],"i8",4,m.M+33556);A([114,121,69,78,83,95,55,86,105,115,105,116,
111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,77,101,109,111,114,121,69,118,69,69,0,105,105,105,105,0,106,105,105,106,0,102,105,105,102,0,100,105,105,100,0,78,52,119,97,115,109,49,54,73,110,115,116,114,117,109,101,110,116,76,111,99,97,108,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,
117,109,101,110,116,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,
83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,54,73,110,115,116,114,117,109,101,110,116,76,111,99,97,108,115,69,118,69,69,0,118,105,0,78,52,119,97,115,109,49,50,76,111,103,69,120,101,99,117,116,105,111,110,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,50,76,111,103,69,120,101,99,117,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,
69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,50,76,111,103,69,120,101,99,117,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,50,76,111,103,69,120,101,99,117,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,50,76,111,103,69,120,101,99,117,116,105,111,
110,69,118,69,69,0,78,52,119,97,115,109,56,76,111,99,97,108,67,83,69,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,50,49,76,105,110,101,97,114,69,120,101,99,117,116,105,111,110,87,97,108,107,101,114,73,78,83,95,56,76,111,99,97,108,67,83,69,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,50,49,76,105,110,101,97,114,69,120,101,99,117,116,105,111,110,87,97,108,107,101,114,73,78,83,95,56,76,111,99,97,108,67,83,69,69,
78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,56,76,111,99,97,108,67,83,69,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,56,76,111,99,97,108,67,83,69,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,56,76,111,99,97,108,67,83,69,69,118,
69,69,0,91,80,97,115,115,82,117,110,110,101,114,93,32,114,117,110,110,105,110,103,32,112,97,115,115,101,115,46,46,46,0,98,101,102,111,114,101,0,91,80,97,115,115,82,117,110,110,101,114,93,32,112,97,115,115,101,115,32,116,111,111,107,32,0,32,115,101,99,111,110,100,115,46,0,91,80,97,115,115,82,117,110,110,101,114,93,32,40,102,105,110,97,108,32,118,97,108,105,100,97,116,105,111,110,41,10,0,91,80,97,115,115,82,117,110,110,101,114,93,32,32,32,114,117,110,110,105,110,103,32,112,97,115,115,58,32,0,46,46,
46,32,0,91,80,97,115,115,82,117,110,110,101,114,93,32,32,32,40,118,97,108,105,100,97,116,105,110,103,41,10,0,76,97,115,116,32,112,97,115,115,32,40,0,41,32,98,114,111,107,101,32,118,97,108,105,100,97,116,105,111,110,46,32,72,101,114,101,32,105,115,32,116,104,101,32,109,111,100,117,108,101,32,98,101,102,111,114,101,58,32,10,0,41,32,98,114,111,107,101,32,118,97,108,105,100,97,116,105,111,110,46,32,82,117,110,32,119,105,116,104,32,66,73,78,65,82,89,69,78,95,80,65,83,83,95,68,69,66,85,71,61,50,32,105,
110,32,116,104,101,32,101,110,118,32,116,111,32,115,101,101,32,116,104,101,32,101,97,114,108,105,101,114,32,115,116,97,116,101,44,32,111,114,32,51,32,116,111,32,100,117,109,112,32,98,121,110,45,42,32,102,105,108,101,115,32,102,111,114,32,101,97,99,104,32,112,97,115,115,10,0,102,105,110,97,108,32,109,111,100,117,108,101,32,100,111,101,115,32,110,111,116,32,118,97,108,105,100,97,116,101,10,0,100,111,87,111,114,107,101,114,115,46,115,105,122,101,40,41,32,62,32,48,0,119,111,114,107,0,100,111,87,111,114,
107,101,114,115,46,115,105,122,101,40,41,32,61,61,32,110,117,109,0,33,114,117,110,110,105,110,103,0,90,90,78,52,119,97,115,109,49,48,80,97,115,115,82,117,110,110,101,114,51,114,117,110,69,118,69,78,75,51,36,95,48,99,108,69,118,69,85,108,118,69,95,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,90,78,52,119,97,115,109,49,48,80,97,115,115,82,117,110,110,101,114,51,114,117,110,69,118,69,78,75,51,36,95,48,99,108,69,118,69,85,108,118,69,95,78,83,95,57,97,
108,108,111,99,97,116,111,114,73,83,53,95,69,69,70,78,83,50,95,49,53,84,104,114,101,97,100,87,111,114,107,83,116,97,116,101,69,118,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,78,52,119,97,115,109,49,53,84,104,114,101,97,100,87,111,114,107,83,116,97,116,101,69,118,69,69,69,0,112,97,115,115,45,62,105,115,70,117,110,99,116,105,111,110,80,97,114,97,108,108,101,108,40,41,0,115,114,99,47,112,97,115,115,101,115,47,112,97,115,115,46,99,112,112,
0,114,117,110,80,97,115,115,79,110,70,117,110,99,116,105,111,110,0,98,121,110,45,0,46,119,97,115,116,0,66,73,78,65,82,89,69,78,95,80,65,83,83,95,68,69,66,85,71,0,90,78,52,119,97,115,109,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,101,114,102,97,99,101,51,114,117,110,69,80,78,83,95,49,48,80,97,115,115,82,117,110,110,101,114,69,80,78,83,95,54,77,111,100,117,108,101,69,69,49,48,70,105,120,73,109,112,111,114,116,115,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,
49,48,80,111,115,116,87,97,108,107,101,114,73,90,78,83,95,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,101,114,102,97,99,101,51,114,117,110,69,80,78,83,95,49,48,80,97,115,115,82,117,110,110,101,114,69,80,78,83,95,54,77,111,100,117,108,101,69,69,49,48,70,105,120,73,109,112,111,114,116,115,78,83,95,55,86,105,115,105,116,111,114,73,83,55,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,90,78,83,95,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,
101,114,102,97,99,101,51,114,117,110,69,80,78,83,95,49,48,80,97,115,115,82,117,110,110,101,114,69,80,78,83,95,54,77,111,100,117,108,101,69,69,49,48,70,105,120,73,109,112,111,114,116,115,78,83,95,55,86,105,115,105,116,111,114,73,83,54,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,90,78,83,95,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,101,114,102,97,99,101,51,114,117,110,69,80,78,83,95,49,48,80,97,115,115,82,117,110,110,101,114,69,80,78,83,95,54,77,111,100,117,108,
101,69,69,49,48,70,105,120,73,109,112,111,114,116,115,78,83,95,55,86,105,115,105,116,111,114,73,83,54,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,90,78,83,95,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,101,114,102,97,99,101,51,114,117,110,69,80,78,83,95,49,48,80,97,115,115,82,117,110,110,101,114,69,80,78,83,95,54,77,111,100,117,108,101,69,69,49,48,70,105,120,73,109,112,111,114,116,115,118,69,69,0,108,101,103,97,108,116,121,112,101,36,0,108,101,103,97,108,105,
109,112,111,114,116,36,0,108,101,103,97,108,102,117,110,99,36,0,97,100,100,70,117,110,99,116,105,111,110,0,102,117,110,99,116,105,111,110,115,77,97,112,46,102,105,110,100,40,99,117,114,114,45,62,110,97,109,101,41,32,61,61,32,102,117,110,99,116,105,111,110,115,77,97,112,46,101,110,100,40,41,0,97,100,100,71,108,111,98,97,108,0,103,108,111,98,97,108,115,77,97,112,46,102,105,110,100,40,99,117,114,114,45,62,110,97,109,101,41,32,61,61,32,103,108,111,98,97,108,115,77,97,112,46,101,110,100,40,41,0,108,101,
103,97,108,115,116,117,98,36,0,78,52,119,97,115,109,49,57,76,101,103,97,108,105,122,101,74,83,73,110,116,101,114,102,97,99,101,69,0,105,110,108,105,110,101,100,85,115,101,115,91,105,110,108,105,110,101,100,78,97,109,101,93,32,60,61,32,105,110,102,111,115,91,105,110,108,105,110,101,100,78,97,109,101,93,46,99,97,108,108,115,0,115,114,99,47,112,97,115,115,101,115,47,73,110,108,105,110,105,110,103,46,99,112,112,0,105,116,101,114,97,116,105,111,110,0,114,101,109,111,118,101,45,117,110,117,115,101,100,
45,98,114,115,0,114,101,109,111,118,101,45,117,110,117,115,101,100,45,110,97,109,101,115,0,99,111,97,108,101,115,99,101,45,108,111,99,97,108,115,0,115,105,109,112,108,105,102,121,45,108,111,99,97,108,115,0,118,97,99,117,117,109,0,114,101,111,114,100,101,114,45,108,111,99,97,108,115,0,109,101,114,103,101,45,98,108,111,99,107,115,0,67,111,117,108,100,32,110,111,116,32,102,105,110,100,32,112,97,115,115,58,32,0,95,95,105,110,108,105,110,101,100,95,102,117,110,99,36,0,99,117,114,114,45,62,111,112,101,
114,97,110,100,115,46,115,105,122,101,40,41,32,61,61,32,48,0,115,114,99,47,97,115,116,47,69,120,112,114,101,115,115,105,111,110,77,97,110,105,112,117,108,97,116,111,114,46,99,112,112,0,118,105,115,105,116,72,111,115,116,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,114,101,116,45,62,118,97,108,117,101,45,62,116,121,112,101,41,32,63,32,114,101,116,45,62,118,97,108,117,101,45,62,116,121,112,101,32,61,61,32,116,121,112,101,32,58,32,116,114,117,101,0,115,114,99,47,119,97,115,
109,45,98,117,105,108,100,101,114,46,104,0,109,97,107,101,83,116,111,114,101,0,118,97,108,117,101,84,121,112,101,32,33,61,32,110,111,110,101,0,90,78,52,119,97,115,109,50,49,69,120,112,114,101,115,115,105,111,110,77,97,110,105,112,117,108,97,116,111,114,52,99,111,112,121,69,80,78,83,95,49,48,69,120,112,114,101,115,115,105,111,110,69,82,78,83,95,54,77,111,100,117,108,101,69,69,85,108,83,50,95,69,95,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,
119,97,115,109,50,49,69,120,112,114,101,115,115,105,111,110,77,97,110,105,112,117,108,97,116,111,114,52,99,111,112,121,69,80,78,83,50,95,49,48,69,120,112,114,101,115,115,105,111,110,69,82,78,83,50,95,54,77,111,100,117,108,101,69,69,85,108,83,53,95,69,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,56,95,69,69,70,83,53,95,83,53,95,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,80,78,52,119,97,115,109,49,48,69,120,112,114,101,115,115,105,
111,110,69,83,52,95,69,69,69,0,115,116,97,116,101,45,62,97,99,116,105,111,110,115,70,111,114,70,117,110,99,116,105,111,110,46,99,111,117,110,116,40,103,101,116,70,117,110,99,116,105,111,110,40,41,45,62,110,97,109,101,41,32,62,32,48,0,118,105,115,105,116,67,97,108,108,0,78,52,119,97,115,109,55,80,108,97,110,110,101,114,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,55,80,108,97,110,110,101,114,69,78,83,95,55,86,
105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,55,80,108,97,110,110,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,55,80,108,97,110,110,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,55,80,108,97,110,110,101,114,69,118,69,69,
0,105,110,102,111,115,45,62,99,111,117,110,116,40,99,117,114,114,45,62,116,97,114,103,101,116,41,32,62,32,48,0,78,52,119,97,115,109,49,57,70,117,110,99,116,105,111,110,73,110,102,111,83,99,97,110,110,101,114,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,57,70,117,110,99,116,105,111,110,73,110,102,111,83,99,97,110,110,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,
119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,57,70,117,110,99,116,105,111,110,73,110,102,111,83,99,97,110,110,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,57,70,117,110,99,116,105,111,110,73,110,102,111,83,99,97,110,110,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,57,70,117,110,
99,116,105,111,110,73,110,102,111,83,99,97,110,110,101,114,69,118,69,69,0,78,52,119,97,115,109,56,73,110,108,105,110,105,110,103,69,0,33,104,97,115,85,110,114,101,97,99,104,97,98,108,101,67,104,105,108,100,0,115,114,99,47,112,97,115,115,101,115,47,70,108,97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,46,99,112,112,0,102,105,110,105,115,104,0,112,97,114,101,110,116,46,98,114,101,97,107,69,120,112,114,73,110,100,101,120,101,115,46,99,111,117,110,116,40,99,104,105,108,100,41,32,62,32,48,
0,33,67,111,110,116,114,111,108,70,108,111,119,67,104,101,99,107,101,114,58,58,105,115,40,99,104,105,108,100,41,0,103,101,116,70,97,108,108,116,104,114,111,117,103,104,82,101,112,108,97,99,101,109,101,110,116,0,105,115,67,111,110,99,114,101,116,101,87,97,115,109,84,121,112,101,40,116,121,112,101,41,0,103,101,116,66,114,101,97,107,84,97,114,103,101,116,73,110,100,101,120,0,101,120,112,114,0,99,104,105,108,100,45,62,116,121,112,101,32,33,61,32,110,111,110,101,0,103,101,116,70,97,108,108,116,104,114,
111,117,103,104,84,121,112,101,0,78,52,119,97,115,109,49,56,70,108,97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,56,70,108,97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,56,70,108,
97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,56,70,108,97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,56,70,108,97,116,116,101,110,67,111,110,116,114,111,108,70,108,111,119,69,118,69,69,0,66,89,78,95,
76,69,65,86,69,0,117,115,97,103,101,58,32,115,101,116,32,66,89,78,95,76,69,65,86,69,32,105,110,32,116,104,101,32,101,110,118,10,0,107,101,101,112,105,110,103,32,0,78,52,119,97,115,109,49,53,69,120,116,114,97,99,116,70,117,110,99,116,105,111,110,69,0,78,52,119,97,115,109,49,54,70,117,110,99,116,105,111,110,82,101,112,108,97,99,101,114,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,70,117,110,99,116,105,111,
110,82,101,112,108,97,99,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,54,70,117,110,99,116,105,111,110,82,101,112,108,97,99,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,54,70,117,110,99,116,105,111,110,82,101,112,108,97,99,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,
118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,54,70,117,110,99,116,105,111,110,82,101,112,108,97,99,101,114,69,118,69,69,0,100,105,103,101,115,116,32,61,61,32,48,0,115,114,99,47,112,97,115,115,101,115,47,68,117,112,108,105,99,97,116,101,70,117,110,99,116,105,111,110,69,108,105,109,105,110,97,116,105,111,110,46,99,112,112,0,109,97,112,58,58,97,116,58,32,32,107,101,121,32,110,111,116,32,102,111,117,110,100,0,78,52,119,97,115,109,49,52,70,117,110,99,116,105,111,
110,72,97,115,104,101,114,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,70,117,110,99,116,105,111,110,72,97,115,104,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,70,117,110,99,116,105,111,110,72,97,115,104,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,
0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,52,70,117,110,99,116,105,111,110,72,97,115,104,101,114,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,52,70,117,110,99,116,105,111,110,72,97,115,104,101,114,69,118,69,69,0,78,52,119,97,115,109,50,56,68,117,112,108,105,99,97,116,101,70,117,110,99,116,105,111,110,69,108,105,109,105,110,97,116,105,111,110,69,0,114,101,97,99,104,97,98,108,101,66,114,
101,97,107,115,46,115,105,122,101,40,41,32,61,61,32,48,0,115,114,99,47,112,97,115,115,101,115,47,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,46,99,112,112,0,118,105,115,105,116,70,117,110,99,116,105,111,110,0,40,42,99,117,114,114,112,41,45,62,99,97,115,116,60,73,102,62,40,41,45,62,105,102,70,97,108,115,101,0,100,111,65,102,116,101,114,73,102,69,108,115,101,84,114,117,101,0,78,52,119,97,115,109,49,57,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,
69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,57,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,57,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,
69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,57,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,57,68,101,97,100,67,111,100,101,69,108,105,109,105,110,97,116,105,111,110,69,118,69,69,0,105,116,101,109,115,46,115,105,122,101,40,41,32,62,32,48,0,115,114,99,47,112,97,115,115,101,115,47,67,111,100,101,70,111,108,
100,105,110,103,46,99,112,112,0,111,112,116,105,109,105,122,101,84,101,114,109,105,110,97,116,105,110,103,84,97,105,108,115,0,102,111,108,100,105,110,103,45,105,110,110,101,114,0,98,108,111,99,107,45,62,108,105,115,116,46,98,97,99,107,40,41,32,61,61,32,101,120,112,114,0,118,97,108,105,100,97,116,101,0,116,97,105,108,46,98,108,111,99,107,0,111,112,116,105,109,105,122,101,69,120,112,114,101,115,115,105,111,110,84,97,105,108,115,0,99,117,114,114,32,61,61,32,99,111,110,116,114,111,108,70,108,111,119,
83,116,97,99,107,46,98,97,99,107,40,41,0,78,52,119,97,115,109,49,49,67,111,100,101,70,111,108,100,105,110,103,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,55,67,111,110,116,114,111,108,70,108,111,119,87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,70,111,108,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,55,67,111,110,116,114,111,108,70,108,111,119,87,97,108,107,101,114,73,78,83,95,
49,49,67,111,100,101,70,111,108,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,70,111,108,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,70,111,108,100,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,
97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,49,67,111,100,101,70,111,108,100,105,110,103,69,118,69,69,0,102,105,114,115,116,80,117,115,104,97,98,108,101,32,33,61,32,73,110,100,101,120,40,45,49,41,32,38,38,32,112,117,115,104,80,111,105,110,116,32,33,61,32,73,110,100,101,120,40,45,49,41,32,38,38,32,102,105,114,115,116,80,117,115,104,97,98,108,101,32,60,32,112,117,115,104,80,111,105,110,116,0,115,114,99,47,112,97,115,115,101,115,47,67,111,100,101,80,117,115,104,105,110,103,46,99,112,112,
0,111,112,116,105,109,105,122,101,83,101,103,109,101,110,116,0,105,32,62,32,48,0,115,107,105,112,32,61,61,32,116,111,116,97,108,0,78,52,119,97,115,109,49,49,67,111,100,101,80,117,115,104,105,110,103,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,80,117,115,104,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,
87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,80,117,115,104,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,49,67,111,100,101,80,117,115,104,105,110,103,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,49,67,111,100,101,80,117,115,104,105,110,103,69,118,69,69,0,111,114,100,101,114,91,105,93,32,61,61,32,105,
0,115,114,99,47,112,97,115,115,101,115,47,67,111,97,108,101,115,99,101,76,111,99,97,108,115,46,99,112,112,0,112,105,99,107,73,110,100,105,99,101,115,70,114,111,109,79,114,100,101,114,0,109,97,120,73,110,100,101,120,32,60,61,32,112,97,114,101,110,116,45,62,110,117,109,76,111,99,97,108,115,0,99,97,108,99,117,108,97,116,101,70,105,116,110,101,115,115,0,115,105,122,101,32,62,61,32,49,0,109,97,107,101,77,105,120,116,117,114,101,0,110,117,109,32,62,32,48,0,115,114,99,47,115,117,112,112,111,114,116,47,112,
101,114,109,117,116,97,116,105,111,110,115,46,104,0,115,101,116,73,100,101,110,116,105,116,121,0,105,110,100,105,99,101,115,46,115,105,122,101,40,41,32,61,61,32,110,117,109,76,111,99,97,108,115,0,97,112,112,108,121,73,110,100,105,99,101,115,0,108,111,119,32,60,32,104,105,103,104,0,105,110,116,101,114,102,101,114,101,76,111,119,72,105,103,104,0,99,117,114,114,45,62,99,111,110,116,101,110,116,115,46,101,110,100,46,115,105,122,101,40,41,32,60,32,108,105,118,101,46,115,105,122,101,40,41,0,102,108,111,
119,76,105,118,101,110,101,115,115,0,99,117,114,114,45,62,99,111,110,116,101,110,116,115,46,115,116,97,114,116,46,115,105,122,101,40,41,32,60,32,108,105,118,101,46,115,105,122,101,40,41,0,98,114,97,110,99,104,101,115,46,115,105,122,101,40,41,32,61,61,32,48,0,115,114,99,47,99,102,103,47,99,102,103,45,116,114,97,118,101,114,115,97,108,46,104,0,100,111,87,97,108,107,70,117,110,99,116,105,111,110,0,105,102,83,116,97,99,107,46,115,105,122,101,40,41,32,61,61,32,48,0,108,111,111,112,83,116,97,99,107,46,
115,105,122,101,40,41,32,61,61,32,48,0,33,99,111,110,116,114,111,108,70,108,111,119,83,116,97,99,107,46,101,109,112,116,121,40,41,0,102,105,110,100,66,114,101,97,107,84,97,114,103,101,116,0,99,117,114,114,45,62,116,101,109,112,108,97,116,101,32,105,115,60,73,102,62,40,41,0,78,52,119,97,115,109,49,52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,0,78,52,119,97,115,109,49,48,87,97,108,107,101,114,80,97,115,115,73,78,83,95,57,67,70,71,87,97,108,107,101,114,73,78,83,95,49,52,67,111,97,108,101,
115,99,101,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,50,95,118,69,69,78,83,95,56,76,105,118,101,110,101,115,115,69,69,69,69,69,0,78,52,119,97,115,109,57,67,70,71,87,97,108,107,101,114,73,78,83,95,49,52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,78,83,95,56,76,105,118,101,110,101,115,115,69,69,69,0,78,52,119,97,115,109,49,55,67,111,110,116,114,111,108,70,108,111,119,87,97,108,107,101,114,73,78,83,95,49,
52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,49,48,80,111,115,116,87,97,108,107,101,114,73,78,83,95,49,52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,69,69,69,69,0,78,52,119,97,115,109,54,87,97,108,107,101,114,73,78,83,95,49,52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,78,83,95,55,86,105,115,105,116,111,114,73,83,49,95,118,
69,69,69,69,0,78,52,119,97,115,109,55,86,105,115,105,116,111,114,73,78,83,95,49,52,67,111,97,108,101,115,99,101,76,111,99,97,108,115,69,118,69,69,0,78,52,119,97,115,109,50,54,67,111,97,108,101,115,99,101,76,111,99,97,108,115,87,105,116,104,76,101,97,114,110,105,110,103,69,0,112,97,115,115,73,110,102,111,115,46,102,105,110,100,40,110,97,109,101,41,32,61,61,32,112,97,115,115,73,110,102,111,115,46,101,110,100,40,41,0,114,101,103,105,115,116,101,114,80,97,115,115,0,80,70,80,78,52,119,97,115,109,52,80,
97,115,115,69,118,69,0,70,80,78,52,119,97,115,109,52,80,97,115,115,69,118,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,80,70,80,78,52,119,97,115,109,52,80,97,115,115,69,118,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,54,95,69,69,83,53,95,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,80,78,52,119,97,115,109,52,80,97,115,115,69,118,69,69,69,0,110,97,109,101,0,115,111,117,114,99,101,
77,97,112,112,105,110,103,85,82,76,0,98,108,111,99,107,45,62,108,105,115,116,46,98,97,99,107,40,41,32,61,61,32,97,98,111,118,101,0,115,114,99,47,97,115,116,47,69,120,112,114,101,115,115,105,111,110,65,110,97,108,121,122,101,114,46,99,112,112,0,105,115,82,101,115,117,108,116,85,115,101,100,0,97,98,111,118,101,32,61,61,32,105,102,102,45,62,105,102,84,114,117,101,32,124,124,32,97,98,111,118,101,32,61,61,32,105,102,102,45,62,105,102,70,97,108,115,101,0,105,115,82,101,115,117,108,116,68,114,111,112,112,
101,100,0,40,110,117,108,108,32,101,120,112,114,101,115,115,105,111,110,41,0,105,115,65,114,114,97,121,40,41,0,115,114,99,47,101,109,115,99,114,105,112,116,101,110,45,111,112,116,105,109,105,122,101,114,47,115,105,109,112,108,101,95,97,115,116,46,104,0,105,115,65,115,115,105,103,110,40,41,0,115,114,99,47,101,109,115,99,114,105,112,116,101,110,45,111,112,116,105,109,105,122,101,114,47,115,105,109,112,108,101,95,97,115,116,46,99,112,112,0,97,115,65,115,115,105,103,110,0,105,115,65,115,115,105,103,110,
78,97,109,101,40,41,0,97,115,65,115,115,105,103,110,78,97,109,101,0,115,114,99,47,101,109,115,99,114,105,112,116,101,110,45,111,112,116,105,109,105,122,101,114,47,111,112,116,105,109,105,122,101,114,45,115,104,97,114,101,100,46,99,112,112,0,109,97,107,101,65,115,109,67,111,101,114,99,101,100,90,101,114,111,0,115,105,103,110,32,61,61,32,65,83,77,95,83,73,71,78,69,68,32,124,124,32,115,105,103,110,32,61,61,32,65,83,77,95,85,78,83,73,71,78,69,68,0,109,97,107,101,83,105,103,110,105,110,103,0,97,100,100,
69,120,112,111,114,116,0,101,120,112,111,114,116,115,77,97,112,46,102,105,110,100,40,99,117,114,114,45,62,110,97,109,101,41,32,61,61,32,101,120,112,111,114,116,115,77,97,112,46,101,110,100,40,41,0,119,97,107,97,32,0,108,101,102,116,32,38,38,32,114,105,103,104,116,0,103,108,111,98,97,108,115,77,97,112,46,99,111,117,110,116,40,110,97,109,101,41,0,103,101,116,71,108,111,98,97,108,0,101,120,112,101,99,116,101,100,32,108,105,115,116,0,101,120,112,101,99,116,101,100,32,109,111,114,101,32,101,108,101,109,
101,110,116,115,32,105,110,32,108,105,115,116,0,105,110,100,101,120,32,60,32,117,115,101,100,69,108,101,109,101,110,116,115,0,115,114,99,47,109,105,120,101,100,95,97,114,101,110,97,46,104,0,101,120,112,101,99,116,101,100,32,115,116,114,105,110,103,0,115,116,97,99,107,46,115,105,122,101,40,41,32,61,61,32,115,116,97,99,107,76,111,99,115,46,115,105,122,101,40,41,0,115,114,99,47,119,97,115,109,47,119,97,115,109,45,115,45,112,97,114,115,101,114,46,99,112,112,0,112,97,114,115,101,0,115,45,101,120,112,114,
32,115,116,97,99,107,32,101,109,112,116,121,0,115,116,97,99,107,32,105,115,32,110,111,116,32,101,109,112,116,121,0,117,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,0,117,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,32,101,115,99,97,112,101,0,101,109,112,116,121,32,116,111,112,108,101,118,101,108,44,32,101,120,112,101,99,116,101,100,32,109,111,100,117,108,101,0,116,111,112,108,101,118,101,108,32,100,111,101,115,32,110,111,116,32,115,116,97,114,116,
32,119,105,116,104,32,109,111,100,117,108,101,0,98,97,100,32,109,111,100,117,108,101,32,101,108,101,109,101,110,116,32,0,117,110,107,110,111,119,110,32,109,111,100,117,108,101,32,101,108,101,109,101,110,116,0,101,108,101,109,32,119,105,116,104,111,117,116,32,116,97,98,108,101,0,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,105,110,32,103,101,116,70,117,110,99,116,105,111,110,78,97,109,101,0,109,111,114,101,32,116,104,97,110,32,111,110,101,32,116,97,98,108,101,0,100,117,112,108,
105,99,97,116,101,32,101,120,112,111,114,116,0,33,112,114,101,80,97,114,115,101,73,109,112,111,114,116,32,105,110,32,116,97,98,108,101,0,100,117,112,108,105,99,97,116,101,32,105,109,112,111,114,116,0,105,110,118,97,108,105,100,32,116,97,98,108,101,0,99,97,110,110,111,116,32,101,120,112,111,114,116,32,97,32,109,117,116,97,98,108,101,32,103,108,111,98,97,108,0,33,112,114,101,80,97,114,115,101,73,109,112,111,114,116,32,105,110,32,103,108,111,98,97,108,0,99,97,110,110,111,116,32,105,109,112,111,114,116,
32,97,32,109,117,116,97,98,108,101,32,103,108,111,98,97,108,0,112,114,101,80,97,114,115,101,73,109,112,111,114,116,32,105,110,32,103,108,111,98,97,108,0,103,108,111,98,97,108,32,119,105,116,104,111,117,116,32,105,110,105,116,0,101,120,116,114,97,32,105,109,112,111,114,116,32,101,108,101,109,101,110,116,115,0,105,110,118,97,108,105,100,32,119,97,115,109,32,116,121,112,101,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,0,109,101,109,111,114,121,32,101,120,112,111,114,116,101,100,32,98,117,
116,32,110,111,32,109,101,109,111,114,121,0,105,110,118,97,108,105,100,32,101,120,116,32,101,120,112,111,114,116,0,100,97,116,97,32,98,117,116,32,110,111,32,109,101,109,111,114,121,0,116,111,111,32,109,97,110,121,32,109,101,109,111,114,105,101,115,0,98,97,100,32,105,109,112,111,114,116,32,101,110,100,105,110,103,0,101,120,99,101,115,115,105,118,101,32,109,101,109,111,114,121,32,111,102,102,115,101,116,0,101,120,99,101,115,115,105,118,101,32,109,101,109,111,114,121,32,105,110,105,116,0,115,104,97,
114,101,100,0,110,111,116,115,104,97,114,101,100,0,116,111,116,97,108,32,109,101,109,111,114,121,32,109,117,115,116,32,98,101,32,60,61,32,52,71,66,0,105,110,118,97,108,105,100,32,114,101,115,117,108,116,32,97,114,105,116,121,0,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,116,121,112,101,0,110,111,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,91,105,110,116,101,114,110,97,108,32,101,114,114,111,114,63,93,0,33,112,114,101,80,97,114,115,101,73,109,112,111,114,116,32,105,
110,32,102,117,110,99,0,105,109,112,111,114,116,32,109,111,100,117,108,101,32,105,110,115,105,100,101,32,102,117,110,99,116,105,111,110,32,100,101,99,0,112,114,101,80,97,114,115,101,73,109,112,111,114,116,32,105,110,32,102,117,110,99,0,98,97,100,32,102,117,110,99,32,100,101,99,108,97,114,97,116,105,111,110,0,100,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,0,97,116,111,109,105,99,46,0,97,98,111,114,116,95,111,110,32,0,119,97,105,116,0,119,97,107,101,0,108,111,99,97,108,32,97,99,
99,101,115,115,32,105,110,32,110,111,110,45,102,117,110,99,116,105,111,110,32,115,99,111,112,101,0,98,97,100,32,108,111,99,97,108,32,110,97,109,101,0,98,97,100,32,108,111,99,97,108,32,105,110,100,101,120,0,115,101,116,95,103,108,111,98,97,108,32,111,102,32,105,109,109,117,116,97,98,108,101,0,117,110,107,110,111,119,110,32,103,108,111,98,97,108,32,105,110,32,103,101,116,71,108,111,98,97,108,78,97,109,101,0,108,111,111,112,45,105,110,0,105,102,0,98,97,100,32,103,101,116,95,103,108,111,98,97,108,32,
110,97,109,101,0,103,114,111,119,95,109,101,109,111,114,121,32,110,101,101,100,115,32,111,110,101,32,111,112,101,114,97,110,100,0,104,111,115,116,32,110,101,101,100,115,32,122,101,114,111,32,111,112,101,114,97,110,100,115,0,110,111,32,116,97,98,108,101,0,105,110,118,97,108,105,100,32,99,97,108,108,95,105,110,100,105,114,101,99,116,32,116,121,112,101,0,105,110,118,97,108,105,100,32,98,114,101,97,107,32,111,102,102,115,101,116,0,111,117,116,32,111,102,32,114,97,110,103,101,32,98,114,101,97,107,32,111,
102,102,115,101,116,0,105,110,118,97,108,105,100,32,108,97,98,101,108,0,115,119,105,116,99,104,32,119,105,116,104,32,110,111,32,116,97,114,103,101,116,115,0,117,115,101,100,69,108,101,109,101,110,116,115,32,62,32,48,0,112,111,112,95,98,97,99,107,0,98,97,99,107,0,98,108,111,99,107,0,98,97,100,32,99,111,110,115,116,0,98,97,100,32,110,97,110,32,105,110,112,117,116,0,112,97,114,115,101,100,32,116,121,112,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,101,120,112,101,99,116,101,100,32,116,
121,112,101,0,78,83,116,51,95,95,50,49,57,98,97,115,105,99,95,105,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,109,97,108,102,111,114,109,101,100,32,97,116,111,109,105,99,32,114,109,119,32,105,110,115,116,114,117,99,116,105,111,110,0,99,109,112,120,99,104,103,0,97,100,100,0,97,110,100,0,111,114,0,115,117,98,0,120,111,114,0,120,99,104,103,0,98,97,100,32,97,116,
111,109,105,99,32,114,109,119,32,111,112,101,114,97,116,111,114,0,65,108,105,103,110,32,111,102,32,65,116,111,109,105,99,32,82,77,87,32,109,117,115,116,32,109,97,116,99,104,32,115,105,122,101,0,109,105,115,115,105,110,103,32,61,32,105,110,32,109,101,109,111,114,121,32,97,116,116,114,105,98,117,116,101,0,98,97,100,32,97,108,105,103,110,0,98,97,100,32,111,102,102,115,101,116,0,98,97,100,32,109,101,109,111,114,121,32,97,116,116,114,105,98,117,116,101,0,65,108,105,103,110,32,111,102,32,65,116,111,109,
105,99,32,67,109,112,120,99,104,103,32,109,117,115,116,32,109,97,116,99,104,32,115,105,122,101,0,101,120,112,101,99,116,101,100,32,49,54,32,102,111,114,32,109,101,109,111,112,32,115,105,122,101,0,101,120,112,101,99,116,101,100,32,51,50,32,102,111,114,32,109,101,109,111,112,32,115,105,122,101,0,98,97,100,32,116,121,112,101,32,102,111,114,32,0,32,118,115,32,118,97,108,117,101,32,116,121,112,101,32,0,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,105,110,32,103,101,
116,70,117,110,99,116,105,111,110,84,121,112,101,78,97,109,101,0,102,97,110,99,121,32,105,109,112,111,114,116,32,119,101,32,100,111,110,39,116,32,115,117,112,112,111,114,116,32,121,101,116,0,109,111,114,101,32,116,104,97,110,32,111,110,101,32,109,101,109,111,114,121,0,105,109,112,111,114,116,36,102,117,110,99,116,105,111,110,36,0,105,109,112,111,114,116,36,103,108,111,98,97,108,0,105,109,112,111,114,116,36,109,101,109,111,114,121,36,0,105,109,112,111,114,116,36,116,97,98,108,101,36,0,105,110,118,
97,108,105,100,32,105,109,112,111,114,116,0,105,110,118,97,108,105,100,32,101,120,116,32,105,109,112,111,114,116,0,110,111,32,110,97,109,101,32,102,111,114,32,105,109,112,111,114,116,0,98,97,100,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,102,111,114,32,105,109,112,111,114,116,0,98,97,100,32,105,109,112,111,114,116,32,101,108,101,109,101,110,116,0,101,120,112,101,99,116,101,100,32,114,101,115,117,108,116,0,101,120,112,101,99,116,101,100,32,109,117,116,0,101,120,99,101,115,115,105,118,
101,32,116,97,98,108,101,32,105,110,105,116,32,115,105,122,101,0,101,120,99,101,115,115,105,118,101,32,116,97,98,108,101,32,109,97,120,32,115,105,122,101,0,100,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,116,121,112,101,0,83,101,99,116,105,111,110,32,101,120,116,101,110,100,115,32,98,101,121,111,110,100,32,101,110,100,32,111,102,32,105,110,112,117,116,0,115,101],"i8",4,m.M+43796);A([99,116,105,111,110,32,115,101,101,110,32,109,111,114,101,32,116,104,97,110,32,111,110,99,101,
58,32,0,98,97,100,32,117,115,101,114,32,115,101,99,116,105,111,110,32,115,105,122,101,44,32,115,116,97,114,116,101,100,32,97,116,32,0,32,112,108,117,115,32,112,97,121,108,111,97,100,32,0,32,110,111,116,32,98,101,105,110,103,32,101,113,117,97,108,32,116,111,32,110,101,119,32,112,111,115,105,116,105,111,110,32,0,98,97,100,32,115,101,99,116,105,111,110,32,115,105,122,101,44,32,115,116,97,114,116,101,100,32,97,116,32,0,100,105,100,32,110,111,116,32,115,101,101,32,116,104,101,32,114,105,103,104,116,32,
110,117,109,98,101,114,32,111,102,32,102,117,110,99,116,105,111,110,115,0,98,97,100,32,101,120,112,111,114,116,32,107,105,110,100,0,105,109,112,111,114,116,45,62,107,105,110,100,32,61,61,32,69,120,116,101,114,110,97,108,75,105,110,100,58,58,70,117,110,99,116,105,111,110,0,115,114,99,47,119,97,115,109,47,119,97,115,109,45,98,105,110,97,114,121,46,99,112,112,0,103,101,116,70,117,110,99,116,105,111,110,73,110,100,101,120,78,97,109,101,0,98,97,100,32,102,117,110,99,116,105,111,110,32,105,110,100,101,
120,0,117,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,105,110,112,117,116,0,103,101,116,73,110,116,56,58,32,0,32,40,97,116,32,0,61,61,32,114,101,97,100,78,97,109,101,115,0,117,110,107,110,111,119,110,32,110,97,109,101,32,115,117,98,115,101,99,116,105,111,110,32,97,116,32,0,100,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,110,97,109,101,58,32,0,98,97,100,32,110,97,109,101,115,32,115,117,98,115,101,99,116,105,111,110,32,112,111,115,105,116,105,111,110,32,99,
104,97,110,103,101,0,98,97,100,32,110,97,109,101,115,32,115,101,99,116,105,111,110,32,112,111,115,105,116,105,111,110,32,99,104,97,110,103,101,0,60,61,61,0,105,110,108,105,110,101,32,115,116,114,105,110,103,32,99,111,110,116,97,105,110,115,32,78,85,76,76,32,40,48,41,46,32,116,104,97,116,32,105,115,32,116,101,99,104,110,105,99,97,108,108,121,32,118,97,108,105,100,32,105,110,32,119,97,115,109,44,32,98,117,116,32,121,111,117,32,115,104,111,117,108,100,110,39,116,32,100,111,32,105,116,44,32,97,110,100,
32,105,116,39,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,98,105,110,97,114,121,101,110,0,103,101,116,73,110,108,105,110,101,83,116,114,105,110,103,58,32,0,32,61,61,62,0,61,61,32,114,101,97,100,70,117,110,99,116,105,111,110,84,97,98,108,101,68,101,99,108,97,114,97,116,105,111,110,0,79,110,108,121,32,49,32,116,97,98,108,101,32,100,101,102,105,110,105,116,105,111,110,32,97,108,108,111,119,101,100,32,105,110,32,77,86,80,0,84,97,98,108,101,32,99,97,110,110,111,116,32,98,101,
32,98,111,116,104,32,105,109,112,111,114,116,101,100,32,97,110,100,32,100,101,102,105,110,101,100,0,69,108,101,109,101,110,116,84,121,112,101,32,109,117,115,116,32,98,101,32,65,110,121,70,117,110,99,32,105,110,32,77,86,80,0,84,97,98,108,101,115,32,109,97,121,32,110,111,116,32,98,101,32,115,104,97,114,101,100,0,115,104,97,114,101,100,32,109,101,109,111,114,121,32,109,117,115,116,32,104,97,118,101,32,109,97,120,32,115,105,122,101,0,103,101,116,83,51,50,76,69,66,58,32,0,76,69,66,32,100,114,111,112,112,
101,100,32,98,105,116,115,32,111,110,108,121,32,118,97,108,105,100,32,102,111,114,32,115,105,103,110,101,100,32,76,69,66,0,76,69,66,32,111,118,101,114,102,108,111,119,0,32,76,69,66,115,105,103,110,45,101,120,116,101,110,100,32,115,104,111,117,108,100,32,112,114,111,100,117,99,101,32,97,32,110,101,103,97,116,105,118,101,32,118,97,108,117,101,0,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,83,51,50,76,69,66,69,118,69,51,36,95,50,0,78,83,
116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,83,51,50,76,69,66,69,118,69,51,36,95,50,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,52,95,69,69,70,97,118,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,97,118,69,69,69,0,61,61,32,114,101,97,100,68,97,116,97,83,101,103,109,101,110,116,115,0,98,
97,100,32,109,101,109,111,114,121,32,105,110,100,101,120,44,32,109,117,115,116,32,98,101,32,48,0,100,101,112,116,104,32,61,61,32,48,0,114,101,97,100,69,120,112,114,101,115,115,105,111,110,0,101,120,112,101,99,116,101,100,32,116,111,32,114,101,97,100,32,97,32,115,105,110,103,108,101,32,101,120,112,114,101,115,115,105,111,110,0,61,61,32,112,111,112,69,120,112,114,101,115,115,105,111,110,0,61,61,32,112,111,112,112,105,110,103,32,117,110,114,101,97,99,104,97,98,108,101,32,102,114,111,109,32,112,111,108,
121,109,111,114,112,104,105,99,32,115,116,97,99,107,0,97,116,116,101,109,112,116,101,100,32,112,111,112,32,102,114,111,109,32,101,109,112,116,121,32,115,116,97,99,107,32,47,32,98,101,121,111,110,100,32,98,108,111,99,107,32,115,116,97,114,116,32,98,111,117,110,100,97,114,121,32,97,116,32,0,61,61,32,112,114,111,99,101,115,115,69,120,112,114,101,115,115,105,111,110,115,0,61,61,32,112,114,111,99,101,115,115,69,120,112,114,101,115,115,105,111,110,115,32,102,105,110,105,115,104,101,100,0,82,101,97,99,104,
101,100,32,102,117,110,99,116,105,111,110,32,101,110,100,32,119,105,116,104,111,117,116,32,115,101,101,105,110,103,32,69,110,100,32,111,112,99,111,100,101,0,61,61,32,112,114,111,99,101,115,115,69,120,112,114,101,115,115,105,111,110,115,32,102,105,110,105,115,104,101,100,32,119,105,116,104,32,117,110,114,101,97,99,104,97,98,108,101,0,61,61,32,115,107,105,112,85,110,114,101,97,99,104,97,98,108,101,67,111,100,101,0,61,61,32,115,107,105,112,85,110,114,101,97,99,104,97,98,108,101,67,111,100,101,32,102,
105,110,105,115,104,101,100,0,122,122,32,114,101,99,117,114,115,101,32,105,110,116,111,32,0,32,97,116,32,0,115,107,105,112,112,105,110,103,32,100,101,98,117,103,32,108,111,99,97,116,105,111,110,32,105,110,102,111,32,102,111,114,32,0,114,101,97,100,69,120,112,114,101,115,115,105,111,110,32,115,101,101,105,110,103,32,0,105,110,118,97,108,105,100,32,99,111,100,101,32,97,102,116,101,114,32,97,116,111,109,105,99,32,112,114,101,102,105,120,58,32,0,98,97,100,32,110,111,100,101,32,99,111,100,101,32,0,122,
122,32,114,101,99,117,114,115,101,32,102,114,111,109,32,0,122,122,32,110,111,100,101,58,32,72,111,115,116,0,73,110,118,97,108,105,100,32,114,101,115,101,114,118,101,100,32,102,105,101,108,100,32,111,110,32,103,114,111,119,95,109,101,109,111,114,121,47,99,117,114,114,101,110,116,95,109,101,109,111,114,121,0,112,111,112,112,105,110,103,32,118,111,105,100,32,111,117,116,115,105,100,101,32,111,102,32,102,117,110,99,116,105,111,110,44,32,119,104,101,114,101,32,119,101,32,110,101,101,100,32,97,32,110,101,
119,32,108,111,99,97,108,0,122,122,32,110,111,100,101,58,32,67,111,110,115,116,44,32,99,111,100,101,32,0,103,101,116,70,108,111,97,116,54,52,58,32,0,103,101,116,73,110,116,54,52,58,32,0,47,48,120,0,103,101,116,73,110,116,51,50,58,32,0,103,101,116,73,110,116,49,54,58,32,0,103,101,116,70,108,111,97,116,51,50,58,32,0,103,101,116,83,54,52,76,69,66,58,32,0,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,83,54,52,76,69,66,69,118,69,51,36,95,51,
0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,83,54,52,76,69,66,69,118,69,51,36,95,51,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,52,95,69,69,70,97,118,69,69,69,0,122,122,32,110,111,100,101,58,32,85,110,97,114,121,0,122,122,32,110,111,100,101,58,32,66,105,110,97,114,121,0,122,122,32,110,111,100,101,58,32,65,116,111,109,105,99,87,97,107,
101,0,122,122,32,110,111,100,101,58,32,65,116,111,109,105,99,87,97,105,116,0,122,122,32,110,111,100,101,58,32,65,116,111,109,105,99,67,109,112,120,99,104,103,0,65,108,105,103,110,32,111,102,32,65,116,111,109,105,99,67,112,120,99,104,103,32,109,117,115,116,32,109,97,116,99,104,32,115,105,122,101,0,122,122,32,110,111,100,101,58,32,65,116,111,109,105,99,82,77,87,0,65,108,105,103,110,32,111,102,32,65,116,111,109,105,99,82,77,87,32,109,117,115,116,32,109,97,116,99,104,32,115,105,122,101,0,122,122,32,110,
111,100,101,58,32,83,116,111,114,101,0,122,122,32,110,111,100,101,58,32,76,111,97,100,0,122,122,32,110,111,100,101,58,32,65,116,111,109,105,99,76,111,97,100,0,122,122,32,110,111,100,101,58,32,68,114,111,112,0,122,122,32,110,111,100,101,58,32,85,110,114,101,97,99,104,97,98,108,101,0,122,122,32,110,111,100,101,58,32,78,111,112,0,122,122,32,110,111,100,101,58,32,82,101,116,117,114,110,0,114,101,116,117,114,110,32,111,117,116,115,105,100,101,32,111,102,32,102,117,110,99,116,105,111,110,0,122,122,32,110,
111,100,101,58,32,83,101,108,101,99,116,0,122,122,32,110,111,100,101,58,32,83,101,116,71,108,111,98,97,108,0,122,122,32,110,111,100,101,58,32,71,101,116,71,108,111,98,97,108,32,0,98,97,100,32,103,101,116,95,103,108,111,98,97,108,0,122,122,32,110,111,100,101,58,32,83,101,116,124,84,101,101,76,111,99,97,108,0,115,101,116,95,108,111,99,97,108,32,111,117,116,115,105,100,101,32,111,102,32,102,117,110,99,116,105,111,110,0,98,97,100,32,115,101,116,95,108,111,99,97,108,32,105,110,100,101,120,0,122,122,32,
110,111,100,101,58,32,71,101,116,76,111,99,97,108,32,0,103,101,116,95,108,111,99,97,108,32,111,117,116,115,105,100,101,32,111,102,32,102,117,110,99,116,105,111,110,0,98,97,100,32,103,101,116,95,108,111,99,97,108,32,105,110,100,101,120,0,122,122,32,110,111,100,101,58,32,67,97,108,108,73,110,100,105,114,101,99,116,0,98,97,100,32,99,97,108,108,95,105,110,100,105,114,101,99,116,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,73,110,118,97,108,105,100,32,102,108,97,103,115,32,102,105,101,108,
100,32,105,110,32,99,97,108,108,95,105,110,100,105,114,101,99,116,0,122,122,32,110,111,100,101,58,32,67,97,108,108,0,98,97,100,32,99,97,108,108,32,105,110,100,101,120,0,116,121,112,101,0,115,114,99,47,119,97,115,109,45,98,105,110,97,114,121,46,104,0,102,105,108,108,67,97,108,108,0,122,122,32,110,111,100,101,58,32,83,119,105,116,99,104,0,116,97,114,103,101,116,115,58,32,0,100,101,102,97,117,108,116,58,32,0,103,101,116,66,114,101,97,107,84,97,114,103,101,116,32,0,98,97,100,32,98,114,101,97,107,105,
110,100,101,120,0,98,114,101,97,107,116,97,114,103,101,116,32,0,32,97,114,105,116,121,32,0,122,122,32,110,111,100,101,58,32,66,114,101,97,107,44,32,99,111,100,101,32,0,122,122,32,110,111,100,101,58,32,76,111,111,112,0,98,108,111,99,107,32,99,97,110,110,111,116,32,112,111,112,32,102,114,111,109,32,111,117,116,115,105,100,101,0,108,97,98,101,108,36,0,105,110,118,97,108,105,100,32,119,97,115,109,32,116,121,112,101,58,32,0,122,122,32,110,111,100,101,58,32,73,102,0,105,102,32,115,104,111,117,108,100,32,
101,110,100,32,119,105,116,104,32,69,110,100,0,122,122,32,110,111,100,101,58,32,66,108,111,99,107,0,112,111,115,32,62,32,48,0,117,110,103,101,116,73,110,116,56,0,117,110,103,101,116,73,110,116,56,32,40,97,116,32,0,85,110,101,120,112,101,99,116,101,100,32,100,101,108,105,109,105,116,101,114,0,117,110,101,120,112,101,99,116,101,100,32,69,79,70,32,105,110,32,116,104,101,32,109,105,100,100,108,101,32,111,102,32,86,76,81,0,105,110,118,97,108,105,100,32,86,76,81,32,100,105,103,105,116,0,78,52,119,97,115,
109,49,55,77,97,112,80,97,114,115,101,69,120,99,101,112,116,105,111,110,69,0,110,117,108,108,0,98,97,100,32,103,108,111,98,97,108,32,105,110,100,101,120,0,61,61,32,114,101,97,100,71,108,111,98,97,108,115,0,110,117,109,58,32,0,114,101,97,100,32,111,110,101,0,71,108,111,98,97,108,32,109,117,116,97,98,105,108,105,116,121,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,0,103,108,111,98,97,108,36,0,61,61,32,114,101,97,100,84,97,98,108,101,69,108,101,109,101,110,116,115,0,84,111,111,32,109,97,110,121,
32,115,101,103,109,101,110,116,115,0,84,97,98,108,101,32,101,108,101,109,101,110,116,115,32,109,117,115,116,32,114,101,102,101,114,32,116,111,32,116,97,98,108,101,32,48,32,105,110,32,77,86,80,0,61,61,32,114,101,97,100,69,120,112,111,114,116,115,0,100,117,112,108,105,99,97,116,101,32,101,120,112,111,114,116,32,110,97,109,101,0,61,61,32,114,101,97,100,70,117,110,99,116,105,111,110,115,0,105,110,118,97,108,105,100,32,102,117,110,99,116,105,111,110,32,115,101,99,116,105,111,110,32,115,105,122,101,44,
32,109,117,115,116,32,101,113,117,97,108,32,116,121,112,101,115,0,114,101,97,100,32,111,110,101,32,97,116,32,0,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,115,105,122,101,0,114,101,97,100,105,110,103,32,0,112,114,111,99,101,115,115,105,110,103,32,102,117,110,99,116,105,111,110,58,32,0,98,114,101,97,107,83,116,97,99,107,46,101,109,112,116,121,40,41,0,114,101,97,100,70,117,110,99,116,105,111,110,115,0,101,120,112,114,101,115,115,105,111,110,83,116,97,99,107,46,101,109,112,116,121,40,41,
0,98,114,101,97,107,83,116,97,99,107,46,115,105,122,101,40,41,32,61,61,32,49,0,115,116,97,99,107,32,110,111,116,32,101,109,112,116,121,32,111,110,32,102,117,110,99,116,105,111,110,32,101,120,105,116,0,98,105,110,97,114,121,32,111,102,102,115,101,116,32,97,116,32,102,117,110,99,116,105,111,110,32,101,120,105,116,32,110,111,116,32,97,116,32,101,120,112,101,99,116,101,100,32,108,111,99,97,116,105,111,110,0,32,101,110,100,32,102,117,110,99,116,105,111,110,32,98,111,100,105,101,115,0,118,97,114,36,0,61,
61,32,114,101,97,100,70,117,110,99,116,105,111,110,83,105,103,110,97,116,117,114,101,115,0,105,110,118,97,108,105,100,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,105,110,100,101,120,32,102,111,114,32,102,117,110,99,116,105,111,110,0,61,61,32,114,101,97,100,73,109,112,111,114,116,115,0,105,109,112,111,114,116,36,0,105,110,118,97,108,105,100,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,32,0,32,47,32,0,99,117,114,114,45,62,102,117,110,99,116,105,111,110,84,121,112,101,46,105,
115,40,41,0,114,101,97,100,73,109,112,111,114,116,115,0,73,109,112,111,114,116,101,100,32,116,97,98,108,101,32,116,121,112,101,32,105,115,32,110,111,116,32,65,110,121,70,117,110,99,0,105,109,112,111,114,116,101,100,32,103,108,111,98,97,108,115,32,99,97,110,110,111,116,32,98,101,32,109,117,116,97,98,108,101,0,98,97,100,32,105,109,112,111,114,116,32,107,105,110,100,0,61,61,32,114,101,97,100,83,105,103,110,97,116,117,114,101,115,0,98,97,100,32,115,105,103,110,97,116,117,114,101,32,102,111,114,109,32,
0,110,117,109,32,112,97,114,97,109,115,58,32,0,115,105,103,110,97,116,117,114,101,32,109,117,115,116,32,104,97,118,101,32,49,32,114,101,115,117,108,116,0,61,61,32,114,101,97,100,77,101,109,111,114,121,0,77,117,115,116,32,98,101,32,101,120,97,99,116,108,121,32,49,32,109,101,109,111,114,121,0,77,101,109,111,114,121,32,99,97,110,110,111,116,32,98,101,32,98,111,116,104,32,105,109,112,111,114,116,101,100,32,97,110,100,32,100,101,102,105,110,101,100,0,61,61,32,114,101,97,100,83,116,97,114,116,0,103,101,
116,85,51,50,76,69,66,58,32,0,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,85,51,50,76,69,66,69,118,69,51,36,95,48,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,52,119,97,115,109,49,55,87,97,115,109,66,105,110,97,114,121,66,117,105,108,100,101,114,57,103,101,116,85,51,50,76,69,66,69,118,69,51,36,95,48,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,52,95,69,69,70,104,118,69,69,69,
0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,104,118,69,69,69,0,115,111,117,114,99,101,115,0,99,97,110,110,111,116,32,102,105,110,100,32,116,104,101,32,115,111,117,114,99,101,115,32,102,105,101,108,100,32,105,110,32,109,97,112,0,109,97,112,112,105,110,103,115,0,99,97,110,110,111,116,32,102,105,110,100,32,116,104,101,32,109,97,112,112,105,110,103,115,32,102,105,101,108,100,32,105,110,32,109,97,112,0,117,110,101,120,112,101,99,116,101,100,32,69,79,
70,32,105,110,32,116,104,101,32,109,105,100,100,108,101,32,111,102,32,115,116,114,105,110,103,0,85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,0,61,61,32,114,101,97,100,72,101,97,100,101,114,0,115,117,114,112,114,105,115,105,110,103,32,118,97,108,117,101,0,119,114,105,116,101,32,62,61,32,100,97,116,97,46,100,97,116,97,40,41,0,115,116,114,105,110,103,84,111,66,105,110,97,114,121,0,97,99,116,117,97,108,32,60,61,32,100,97,116,97,46,115,105,122,101,40,41,0,105,110,118,97,108,105,100,32,104,101,
120,97,100,101,99,105,109,97,108,0,102,105,110,105,115,104,85,112,0,119,114,105,116,105,110,103,32,98,117,102,102,101,114,0,32,97,110,100,32,112,111,105,110,116,101,114,32,105,115,32,97,116,32,0,119,114,105,116,101,73,110,116,56,58,32,0,98,97,99,107,112,97,116,99,104,73,110,116,51,50,58,32,0,34,125,0,58,0,109,97,112,112,101,100,70,117,110,99,116,105,111,110,115,46,99,111,117,110,116,40,105,109,112,111,114,116,45,62,110,97,109,101,41,32,61,61,32,48,0,103,101,116,70,117,110,99,116,105,111,110,73,110,
100,101,120,0,109,97,112,112,101,100,70,117,110,99,116,105,111,110,115,46,99,111,117,110,116,40,119,97,115,109,45,62,102,117,110,99,116,105,111,110,115,91,105,93,45,62,110,97,109,101,41,32,61,61,32,48,0,109,97,112,112,101,100,70,117,110,99,116,105,111,110,115,46,99,111,117,110,116,40,110,97,109,101,41,0,78,83,116,51,95,95,50,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,119,0,78,83,116,51,95,95,50,49,52,98,97,
115,105,99,95,111,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,61,61,32,119,114,105,116,101,83,111,117,114,99,101,77,97,112,85,114,108,0,115,105,122,101,70,105,101,108,100,83,105,122,101,32,60,32,77,97,120,76,69,66,51,50,66,121,116,101,115,0,102,105,110,105,115,104,83,101,99,116,105,111,110,0,119,114,105,116,101,65,116,85,51,50,76,69,66,58,32,0,119,114,105,116,101,85,51,50,76,69,66,58,32,0,32,32,0,119,114,105,116,101,73,110,116,51,50,
58,32,0,61,61,32,119,114,105,116,101,78,97,109,101,115,0,101,109,105,116,116,101,100,32,61,61,32,109,97,112,112,101,100,70,117,110,99,116,105,111,110,115,46,115,105,122,101,40,41,0,119,114,105,116,101,78,97,109,101,115,0,119,114,105,116,101,69,120,112,114,101,115,115,105,111,110,0,99,117,114,114,0,118,105,115,105,116,0,122,122,32,110,111,100,101,58,32,67,111,110,115,116,0,32,58,32,0,122,122,32,99,111,110,115,116,32,110,111,100,101,32,100,111,110,101,46,10,0,119,114,105,116,101,73,110,116,54,52,58,
32,0,119,114,105,116,101,83,54,52,76,69,66,58,32,0,119,114,105,116,101,83,51,50,76,69,66,58,32,0,109,97,112,112,101,100,71,108,111,98,97,108,115,46,99,111,117,110,116,40,105,109,112,111,114,116,45,62,110,97,109,101,41,32,61,61,32,48,0,103,101,116,71,108,111,98,97,108,73,110,100,101,120,0,109,97,112,112,101,100,71,108,111,98,97,108,115,46,99,111,117,110,116,40,119,97,115,109,45,62,103,108,111,98,97,108,115,91,105,93,45,62,110,97,109,101,41,32,61,61,32,48,0,109,97,112,112,101,100,71,108,111,98,97,108,
115,46,99,111,117,110,116,40,110,97,109,101,41,0,122,122,32,110,111,100,101,58,32,67,97,108,108,73,109,112,111,114,116,0,98,97,100,32,98,114,101,97,107,58,32,0,32,105,110,32,0,122,122,32,110,111,100,101,58,32,66,114,101,97,107,0,99,117,114,114,45,62,105,102,70,97,108,115,101,0,118,105,115,105,116,73,102,0,10,32,122,122,32,66,108,111,99,107,32,101,108,101,109,101,110,116,32,0,61,61,32,119,114,105,116,101,70,117,110,99,116,105,111,110,115,0,119,114,105,116,101,32,111,110,101,32,97,116,0,119,114,105,
116,105,110,103,0,98,111,100,121,32,115,105,122,101,58,32,0,44,32,119,114,105,116,105,110,103,32,97,116,32,0,44,32,110,101,120,116,32,115,116,97,114,116,115,32,97,116,32,0,119,114,105,116,101,70,117,110,99,116,105,111,110,115,0,61,61,32,119,114,105,116,101,84,97,98,108,101,69,108,101,109,101,110,116,115,0,61,61,32,119,114,105,116,101,83,116,97,114,116,0,61,61,32,119,114,105,116,101,101,120,112,111,114,116,115,0,119,114,105,116,101,32,111,110,101,0,61,61,32,119,114,105,116,101,103,108,111,98,97,108,
115,0,61,61,32,119,114,105,116,101,77,101,109,111,114,121,0,61,61,32,119,114,105,116,101,70,117,110,99,116,105,111,110,84,97,98,108,101,68,101,99,108,97,114,97,116,105,111,110,0,61,61,32,119,114,105,116,101,70,117,110,99,116,105,111,110,83,105,103,110,97,116,117,114,101,115,0,61,61,32,119,114,105,116,101,73,109,112,111,114,116,115,0,61,61,32,119,114,105,116,101,84,121,112,101,115,0,123,34,118,101,114,115,105,111,110,34,58,51,44,34,115,111,117,114,99,101,115,34,58,91,0,93,44,34,110,97,109,101,115,
34,58,91,93,44,34,109,97,112,112,105,110,103,115,34,58,34,0,34,0,61,61,32,119,114,105,116,101,72,101,97,100,101,114,0,110,97,109,101,115,32,105,110,32,66,105,110,97,114,121,101,110,32,73,82,32,109,117,115,116,32,98,101,32,117,110,105,113,117,101,32,45,32,73,82,32,103,101,110,101,114,97,116,111,114,115,32,109,117,115,116,32,101,110,115,117,114,101,32,116,104,97,116,0,117,110,101,120,112,101,99,116,101,100,32,102,97,108,115,101,58,32,0,44,32,111,110,32,10,0,91,119,97,115,109,45,118,97,108,105,100,97,
116,111,114,32,101,114,114,111,114,32,105,110,32,102,117,110,99,116,105,111,110,32,0,93,32,0,91,119,97,115,109,45,118,97,108,105,100,97,116,111,114,32,101,114,114,111,114,32,105,110,32,109,111,100,117,108,101,93,32,0,98,114,101,97,107,32,97,114,105,116,105,101,115,32,109,117,115,116,32,98,101,32,62,32,48,32,105,102,32,98,108,111,99,107,32,104,97,115,32,97,32,118,97,108,117,101,0,98,114,101,97,107,32,97,114,105,116,105,101,115,32,109,117,115,116,32,98,101,32,48,32,105,102,32,98,108,111,99,107,32,104,
97,115,32,110,111,32,118,97,108,117,101,0,98,108,111,99,107,43,98,114,101,97,107,115,32,109,117,115,116,32,104,97,118,101,32,114,105,103,104,116,32,116,121,112,101,32,105,102,32,98,114,101,97,107,115,32,114,101,116,117,114,110,32,97,32,118,97,108,117,101,0,98,108,111,99,107,43,98,114,101,97,107,115,32,109,117,115,116,32,104,97,118,101,32,114,105,103,104,116,32,116,121,112,101,32,105,102,32,98,114,101,97,107,115,32,104,97,118,101,32,97,114,105,116,121,0,98,114,101,97,107,32,97,114,105,116,105,101,
115,32,109,117,115,116,32,109,97,116,99,104,0,98,108,111,99,107,43,98,114,101,97,107,115,32,109,117,115,116,32,104,97,118,101,32,114,105,103,104,116,32,116,121,112,101,32,105,102,32,98,108,111,99,107,32,101,110,100,115,32,119,105,116,104,32,97,32,114,101,97,99,104,97,98,108,101,32,118,97,108,117,101,0,105,102,32,98,108,111,99,107,32,101,110,100,115,32,119,105,116,104,32,97,32,110,111,110,101,44,32,98,114,101,97,107,115,32,99,97,110,110,111,116,32,115,101,110,100,32,97,32,118,97,108,117,101,32,111,
102,32,97,110,121,32,116,121,112,101,0,110,111,110,45,102,105,110,97,108,32,98,108,111,99,107,32,101,108,101,109,101,110,116,115,32,114,101,116,117,114,110,105,110,103,32,97,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,100,114,111,112,40,41,101,100,32,40,98,105,110,97,114,121,101,110,39,115,32,97,117,116,111,100,114,111,112,32,111,112,116,105,111,110,32,109,105,103,104,116,32,104,101,108,112,32,121,111,117,41,0,40,111,110,32,105,110,100,101,120,32,0,58,10,0,10,41,44,32,116,121,112,101,58,
32,0,10,0,98,108,111,99,107,32,119,105,116,104,32,110,111,32,118,97,108,117,101,32,97,110,100,32,97,32,108,97,115,116,32,101,108,101,109,101,110,116,32,119,105,116,104,32,97,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,117,110,114,101,97,99,104,97,98,108,101,0,98,108,111,99,107,32,119,105,116,104,32,118,97,108,117,101,32,97,110,100,32,108,97,115,116,32,101,108,101,109,101,110,116,32,119,105,116,104,32,118,97,108,117,101,32,109,117,115,116,32,109,97,116,99,104,32,116,121,112,101,115,0,98,
108,111,99,107,32,119,105,116,104,32,118,97,108,117,101,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,108,97,115,116,32,101,108,101,109,101,110,116,32,116,104,97,116,32,105,115,32,110,111,110,101,0,98,108,111,99,107,32,119,105,116,104,32,97,32,118,97,108,117,101,32,109,117,115,116,32,110,111,116,32,98,101,32,101,109,112,116,121,0,32,61,61,32,0,78,83,116,51,95,95,50,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,
105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,32,33,61,32,0,98,114,101,97,107,115,32,116,111,32,97,32,108,111,111,112,32,99,97,110,110,111,116,32,112,97,115,115,32,97,32,118,97,108,117,101,0,98,97,100,32,98,111,100,121,32,102,111,114,32,97,32,108,111,111,112,32,116,104,97,116,32,104,97,115,32,110,111,32,118,97,108,117,101,0,117,110,101,120,112,101,99,116,101,100,32,116,114,117,101,58,32,0,105,102,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,
98,101,32,118,97,108,105,100,0,105,102,32,119,105,116,104,111,117,116,32,101,108,115,101,32,109,117,115,116,32,110,111,116,32,114,101,116,117,114,110,32,97,32,118,97,108,117,101,32,105,110,32,98,111,100,121,0,105,102,32,119,105,116,104,111,117,116,32,101,108,115,101,32,97,110,100,32,114,101,97,99,104,97,98,108,101,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,110,111,110,101,0,114,101,116,117,114,110,105,110,103,32,105,102,45,101,108,115,101,39,115,32,116,114,117,101,32,109,
117,115,116,32,104,97,118,101,32,114,105,103,104,116,32,116,121,112,101,0,114,101,116,117,114,110,105,110,103,32,105,102,45,101,108,115,101,39,115,32,102,97,108,115,101,32,109,117,115,116,32,104,97,118,101,32,114,105,103,104,116,32,116,121,112,101,0,117,110,114,101,97,99,104,97,98,108,101,32,105,102,45,101,108,115,101,32,109,117,115,116,32,104,97,118,101,32,117,110,114,101,97,99,104,97,98,108,101,32,116,114,117,101,0,117,110,114,101,97,99,104,97,98,108,101,32,105,102,45,101,108,115,101,32,109,117,
115,116,32,104,97,118,101,32,117,110,114,101,97,99,104,97,98,108,101,32,102,97,108,115,101,0,98,114,101,97,107,115,32,109,117,115,116,32,104,97,118,101,32,97,32,118,97,108,105,100,32,118,97,108,117,101,0,97,108,108,32,98,114,101,97,107,32,116,97,114,103,101,116,115,32,109,117,115,116,32,98,101,32,118,97,108,105,100,0,98,114,101,97,107,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,105,51,50,0,98,114,95,116,97,98,108,101,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,
32,98,101,32,105,51,50,0,99,97,108,108,32,116,97,114,103,101,116,32,109,117,115,116,32,101,120,105,115,116,0,40,112,101,114,104,97,112,115,32,105,116,32,115,104,111,117,108,100,32,98,101,32,97,32,67,97,108,108,73,109,112,111,114,116,32,105,110,115,116,101,97,100,32,111,102,32,67,97,108,108,63,41,10,0,99,97,108,108,32,112,97,114,97,109,32,110,117,109,98,101,114,32,109,117,115,116,32,109,97,116,99,104,0,99,97,108,108,32,112,97,114,97,109,32,116,121,112,101,115,32,109,117,115,116,32,109,97,116,99,104,
0,40,111,110,32,97,114,103,117,109,101,110,116,32,0,41,10,0,99,97,108,108,95,105,109,112,111,114,116,32,116,97,114,103,101,116,32,109,117,115,116,32,101,120,105,115,116,0,99,97,108,108,101,100,32,105,109,112,111,114,116,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,0,99,97,108,108,95,105,110,100,105,114,101,99,116,32,116,121,112,101,32,109,117,115,116,32,101,120,105,115,116,0,105,110,100,105,114,101,99,116,32,99,97,108,108,32,116,97,114,103,101,116,32,109,117,115,116,32,98,101,32,
97,110,32,105,51,50,0,103,101,116,95,108,111,99,97,108,32,109,117,115,116,32,104,97,118,101,32,97,32,118,97,108,105,100,32,116,121,112,101,32,45,32,99,104,101,99,107,32,119,104,97,116,32,121,111,117,32,112,114,111,118,105,100,101,100,32,119,104,101,110,32,121,111,117,32,99,111,110,115,116,114,117,99,116,101,100,32,116,104,101,32,110,111,100,101,0,115,101,116,95,108,111,99,97,108,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,115,109,97,108,108,32,101,110,111,117,103,104,0,115,101,116,95,108,
111,99,97,108,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,115,101,116,95,108,111,99,97,108,32,116,121,112,101,32,109,117,115,116,32,109,97,116,99,104,32,102,117,110,99,116,105,111,110,0,65,116,111,109,105,99,32,111,112,101,114,97,116,105,111,110,32,119,105,116,104,32,110,111,110,45,115,104,97,114,101,100,32,109,101,109,111,114,121,0,108,111,97,100,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,97,116,111,109,105,99,
32,97,99,99,101,115,115,101,115,32,109,117,115,116,32,104,97,118,101,32,110,97,116,117,114,97,108,32,97,108,105,103,110,109,101,110,116,0,98,97,100,32,97,108,105,103,110,109,101,110,116,58,32,0,97,108,105,103,110,109,101,110,116,32,109,117,115,116,32,110,111,116,32,101,120,99,101,101,100,32,110,97,116,117,114,97,108,0,56,45,98,121,116,101,32,109,101,109,32,111,112,101,114,97,116,105,111,110,115,32,97,114,101,32,111,110,108,121,32,97,108,108,111,119,101,100,32,119,105,116,104,32,56,45,98,121,116,101,
32,119,97,115,109,32,116,121,112,101,115,0,77,101,109,111,114,121,32,111,112,101,114,97,116,105,111,110,115,32,109,117,115,116,32,98,101,32,49,44,50,44,52,44,32,111,114,32,56,32,98,121,116,101,115,0,115,116,111,114,101,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,115,116,111,114,101,32,118,97,108,117,101,32,116,121,112,101,32,109,117,115,116,32,110,111,116,32,98,101,32,110,111,110,101,0,115,116,111,114,101,32,118,97,108,117,101,32,116,121,112,101,32,
109,117,115,116,32,109,97,116,99,104,0,65,116,111,109,105,99,82,77,87,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,65,116,111,109,105,99,82,77,87,32,114,101,115,117,108,116,32,116,121,112,101,32,109,117,115,116,32,109,97,116,99,104,32,111,112,101,114,97,110,100,0,65,116,111,109,105,99,32,111,112,101,114,97,116,105,111,110,115,32,97,114,101,32,111,110,108,121,32,118,97,108,105,100,32,111,110,32,105,110,116,32,116,121,112,101,115,0,99,109,112,120,99,
104,103,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,99,109,112,120,99,104,103,32,111,112,101,114,97,110,100,32,116,121,112,101,115,32,109,117,115,116,32,109,97,116,99,104,0,67,109,112,120,99,104,103,32,114,101,115,117,108,116,32,116,121,112,101,32,109,117,115,116,32,109,97,116,99,104,32,101,120,112,101,99,116,101,100,0,67,109,112,120,99,104,103,32,114,101,115,117,108,116,32,116,121,112,101,32,109,117,115,116,32,109,97,116,99,104,32,114,101,112,108,
97,99,101,109,101,110,116,0,65,116,111,109,105,99,87,97,105,116,32,109,117,115,116,32,104,97,118,101,32,116,121,112,101,32,105,51,50,0,65,116,111,109,105,99,87,97,105,116,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,65,116,111,109,105,99,87,97,105,116,32,101,120,112,101,99,116,101,100,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,110,116,0,65,116,111,109,105,99,87,97,105,116,32,101,120,112,101,99,116,101,100,32,116,121,112,101,32,109,117,115,
116,32,109,97,116,99,104,32,111,112,101,114,97,110,100,0,65,116,111,109,105,99,87,97,105,116,32,116,105,109,101,111,117,116,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,54,52,0,65,116,111,109,105,99,87,97,107,101,32,109,117,115,116,32,104,97,118,101,32,116,121,112,101,32,105,51,50,0,65,116,111,109,105,99,87,97,107,101,32,112,111,105,110,116,101,114,32,116,121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,65,116,111,109,105,99,87,97,107,101,32,119,97,107,101,67,111,117,110,116,32,116,
121,112,101,32,109,117,115,116,32,98,101,32,105,51,50,0,98,105,110,97,114,121,32,99,104,105,108,100,32,116,121,112,101,115,32,109,117,115,116,32,98,101,32,101,113,117,97,108,0,105,51,50,32,111,112,0,105,54,52,32,111,112,0,102,51,50,32,111,112,0,102,54,52,32,111,112,0,117,110,97,114,105,101,115,32,109,117,115,116,32,110,111,116,32,114,101,99,101,105,118,101,32,97,32,110,111,110,101,32,97,115,32,116,104,101,105,114,32,105,110,112,117,116,0,105,51,50,32,117,110,97,114,121,32,118,97,108,117,101,32,116,
121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,105,54,52,32,117,110,97,114,121,32,118,97,108,117,101,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,102,51,50,32,117,110,97,114,121,32,118,97,108,117,101,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,102,54,52,32,117,110,97,114,121,32,118,97,108,117,101,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,105,51,50,46,101,113,122,32,105,
110,112,117,116,32,109,117,115,116,32,98,101,32,105,51,50,0,105,54,52,46,101,113,122,32,105,110,112,117,116,32,109,117,115,116,32,98,101,32,105,54,52,0,101,120,116,101,110,100,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,119,114,97,112,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,116,114,117,110,99,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,114,101,105,110,116,101,114,112,114,101,116,47,102,51,
50,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,114,101,105,110,116,101,114,112,114,101,116,47,102,54,52,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,99,111,110,118,101,114,116,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,112,114,111,109,111,116,101,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,100,101,109,111,116,101,32,116,121,112,101,32,109,117,115,116,32,98,101,
32,99,111,114,114,101,99,116,0,114,101,105,110,116,101,114,112,114,101,116,47,105,51,50,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,114,101,105,110,116,101,114,112,114,101,116,47,105,54,52,32,116,121,112,101,32,109,117,115,116,32,98,101,32,99,111,114,114,101,99,116,0,115,101,108,101,99,116,32,108,101,102,116,32,109,117,115,116,32,98,101,32,118,97,108,105,100,0,115,101,108,101,99,116,32,114,105,103,104,116,32,109,117,115,116,32,98,101,32,118,97,108,105,100,0,115,
101,108,101,99,116,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,118,97,108,105,100,0,115,101,108,101,99,116,32,115,105,100,101,115,32,109,117,115,116,32,98,101,32,101,113,117,97,108,0,99,97,110,32,111,110,108,121,32,100,114,111,112,32,97,32,118,97,108,105,100,32,118,97,108,117,101,0,102,117,110,99,116,105,111,110,32,114,101,115,117,108,116,115,32,109,117,115,116,32,109,97,116,99,104,0,103,114,111,119,95,109,101,109,111,114,121,32,109,117,115,116,32,104,97,118,101,32,49,32,
111,112,101,114,97,110,100,0,103,114,111,119,95,109,101,109,111,114,121,32,109,117,115,116,32,104,97,118,101,32,105,51,50,32,111,112,101,114,97,110,100,0,73,109,112,111,114,116,101,100,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,105,54,52,32,114,101,116,117,114,110,32,116,121,112,101,0,73,109,112,111,114,116,101,100,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,105,54,52,32,112,97,114,97,109,101,116,101,114,115,
0,84,97,98,108,101,32,105,109,112,111,114,116,32,114,101,99,111,114,100,32,101,120,105,115,116,115,32,98,117,116,32,116,97,98,108,101,32,105,115,32,110,111,116,32,109,97,114,107,101,100,32,97,115,32,105,109,112,111,114,116,101,100,0,77,101,109,111,114,121,32,105,109,112,111,114,116,32,114,101,99,111,114,100,32,101,120,105,115,116,115,32,98,117,116,32,109,101,109,111,114,121,32,105,115,32,110,111,116,32,109,97,114,107,101,100,32,97,115,32,105,109,112,111,114,116,101,100,0,69,120,112,111,114,116,101,
100,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,105,54,52,32,114,101,116,117,114,110,32,116,121,112,101,0,69,120,112,111,114,116,101,100,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,105,54,52,32,112,97,114,97,109,101,116,101,114,115,0,103,108,111,98,97,108,32,105,110,105,116,32,109,117,115,116,32,98,101,32,110,111,110,45,110,117,108,108,0,103,108,111,98,97,108,32,105,110,105,116,32,109,117,115,116,32,98,101,32,
118,97,108,105,100,0,103,108,111,98,97,108,32,105,110,105,116,32,109,117,115,116,32,104,97,118,101,32,99,111,114,114,101,99,116,32,116,121,112,101,0,40,111,110,32,103,108,111,98,97,108,32,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,116,121,112,101,32,109,117,115,116,32,109,97,116,99,104,44,32,105,102,32,102,117,110,99,116,105,111,110,32,114,101,116,117,114,110,115,0,102,117,110,99,116,105,111,110,32,114,101,115,117,108,116,32,109,117,115,116,32,109,97,116,99,104,44,32,105,102,32,102,117,
110,99,116,105,111,110,32,104,97,115,32,114,101,116,117,114,110,115,0,97,108,108,32,110,97,109,101,100,32,98,114,101,97,107,32,116,97,114,103,101,116,115,32,109,117,115,116,32,101,120,105,115,116,32,40,101,118,101,110,32,105,102,32,110,111,116,32,116,97,107,101,110,41,0,40,111,110,32,108,97,98,101,108,32,0,109,101,109,111,114,121,0,109,101,109,111,114,121,32,109,97,120,32,62,61,32,105,110,105,116,105,97,108,0,109,97,120,32,109,101,109,111,114,121,32,109,117,115,116,32,98,101,32,60,61,32,52,71,66,
0,115,101,103,109,101,110,116,32,111,102,102,115,101,116,32,115,104,111,117,108,100,32,98,101,32,105,51,50,0,115,101,103,109,101,110,116,32,111,102,102,115,101,116,32,115,104,111,117,108,100,32,98,101,32,114,101,97,115,111,110,97,98,108,101,0,115,101,103,109,101,110,116,32,115,105,122,101,32,115,104,111,117,108,100,32,102,105,116,32,105,110,32,109,101,109,111,114,121,0,109,111,100,117,108,101,32,102,117,110,99,116,105,111,110,32,101,120,112,111,114,116,115,32,109,117,115,116,32,98,101,32,102,111,
117,110,100,0,109,111,100,117,108,101,32],"i8",4,m.M+54036);A([103,108,111,98,97,108,32,101,120,112,111,114,116,115,32,109,117,115,116,32,98,101,32,102,111,117,110,100,0,48,0,109,111,100,117,108,101,32,116,97,98,108,101,32,101,120,112,111,114,116,115,32,109,117,115,116,32,98,101,32,102,111,117,110,100,0,109,111,100,117,108,101,32,109,101,109,111,114,121,32,101,120,112,111,114,116,115,32,109,117,115,116,32,98,101,32,102,111,117,110,100,0,109,111,100,117,108,101,32,101,120,112,111,114,116,115,32,109,
117,115,116,32,98,101,32,117,110,105,113,117,101,0,115,116,97,114,116,32,109,117,115,116,32,98,101,32,102,111,117,110,100,0,115,116,97,114,116,32,109,117,115,116,32,104,97,118,101,32,48,32,112,97,114,97,109,115,0,115,116,97,114,116,32,109,117,115,116,32,110,111,116,32,114,101,116,117,114,110,32,97,32,118,97,108,117,101,0,115,116,97,99,107,46,115,105,122,101,40,41,32,61,61,32,48,0,115,114,99,47,119,97,115,109,45,116,114,97,118,101,114,115,97,108,46,104,0,119,97,108,107,0,42,116,97,115,107,46,99,117,
114,114,112,0,115,116,97,108,101,32,116,121,112,101,32,102,111,117,110,100,32,105,110,32,0,40,103,108,111,98,97,108,32,115,99,111,112,101,41,0,32,111,110,32,0,10,40,109,97,114,107,101,100,32,97,115,32,0,44,32,115,104,111,117,108,100,32,98,101,32,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,
13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,
21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,
100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,
102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,
99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,
112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,
73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,
0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,
101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,
114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,
101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,
100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,
101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,
32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,
32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,110,97,110,0,76,67,95,65,76,76,0,76,67,95,67,84,89,80,69,0,0,0,0,76,67,95,78,85,77,69,82,73,67,0,0,76,67,95,84,73,77,69,0,0,0,0,0,76,67,95,67,79,76,76,65,84,69,0,0,76,67,95,77,79,78,69,84,65,82,89,0,76,67,95,77,69,83,83,65,71,
69,83,0,76,65,78,71,0,67,46,85,84,70,45,56,0,80,79,83,73,88,0,77,85,83,76,95,76,79,67,80,65,84,72,0,114,119,97,0,99,108,111,99,107,95,103,101,116,116,105,109,101,40,67,76,79,67,75,95,77,79,78,79,84,79,78,73,67,41,32,102,97,105,108,101,100,0,99,111,110,100,105,116,105,111,110,95,118,97,114,105,97,98,108,101,58,58,119,97,105,116,58,32,109,117,116,101,120,32,110,111,116,32,108,111,99,107,101,100,0,99,111,110,100,105,116,105,111,110,95,118,97,114,105,97,98,108,101,32,119,97,105,116,32,102,97,105,108,
101,100,0,95,95,110,101,120,116,95,112,114,105,109,101,32,111,118,101,114,102,108,111,119,0,78,83,116,51,95,95,50,56,105,111,115,95,98,97,115,101,69,0,78,83,116,51,95,95,50,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,50,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,
117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,50,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,50,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,
49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,50,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,
114,97,105,116,115,73,99,69,69,69,69,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,105,111,115,116,114,101,97,109,0,78,83,116,51,95,95,50,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,50,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,50,49,49,95,95,115,116,100,111,
117,116,98,117,102,73,119,69,69,0,78,83,116,51,95,95,50,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,78,83,116,51,95,95,50,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,50,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,83,116,51,95,95,50,55,99,111,108,108,97,116,101,73,99,69,69,0,78,83,116,51,95,95,
50,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,78,83,116,51,95,95,50,55,99,111,108,108,97,116,101,73,119,69,69,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,37,112,0,67,0,78,83,116,51,95,95,50,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,57,95,95,
110,117,109,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,50,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,78,83,116,51,95,95,50,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,37,112,0,0,0,0,76,0,37,0,0,0,0,0,78,83,116,51,95,95,50,55,110,117,109,
95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,50,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,78,83,116,51,95,95,50,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,
78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,37,72,58,37,77,58,37,83,0,37,109,47,37,100,47,37,121,0,37,73,58,37,77,58,37,83,32,37,112,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,65,77,0,80,77,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,
112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,
100,0,84,104,117,0,70,114,105,0,83,97,116,0,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,37,72,58,37,77,37,72,58,37,77,58,37,83,37,72,58,37,77,58,37,83,78,83,116,51,95,95,50,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,50,48,95,95,116,105,109,101,95,103,101,116,95,99,
95,115,116,111,114,97,103,101,73,99,69,69,0,78,83,116,51,95,95,50,57,116,105,109,101,95,98,97,115,101,69,0,78,83,116,51,95,95,50,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,78,83,116,51,95,95,50,56,116,105,109,101,
95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,116,105,109,101,95,112,117,116,69,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,83,116,51,95,95,50,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,
83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,78,83,116,51,95,95,50,49,48,109,111,110,101,121,95,98,97,115,101,69,0,78,83,116,51,95,95,50,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,78,83,116,51,95,95,50,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,78,83,116,51,95,95,50,49,48,109,111,110,101,121,112,117,110,99,116,73,119,
76,98,49,69,69,69,0,48,49,50,51,52,53,54,55,56,57,0,37,76,102,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,78,83,116,51,95,95,50,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,48,49,50,51,52,53,54,55,56,57,0,78,83,116,51,95,95,50,
57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,37,46,48,76,102,0,78,83,116,51,95,95,50,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,
97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,50,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,50,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,50,56,109,101,
115,115,97,103,101,115,73,99,69,69,0,78,83,116,51,95,95,50,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,50,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,50,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,50,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,78,83,116,51,95,95,50,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,
116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,50,56,109,101,115,115,97,103,101,115,73,119,69,69,0,78,83,116,51,95,95,50,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,50,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,50,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,50,54,108,111,99,97,108,101,53,
95,95,105,109,112,69,0,78,83,116,51,95,95,50,53,99,116,121,112,101,73,99,69,69,0,78,83,116,51,95,95,50,49,48,99,116,121,112,101,95,98,97,115,101,69,0,78,83,116,51,95,95,50,53,99,116,121,112,101,73,119,69,69,0,78,83,116,51,95,95,50,56,110,117,109,112,117,110,99,116,73,99,69,69,0,78,83,116,51,95,95,50,56,110,117,109,112,117,110,99,116,73,119,69,69,0,118,101,99,116,111,114,0,78,83,116,51,95,95,50,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,78,83,116,51,95,95,50,49,57,95,95,115,104,
97,114,101,100,95,119,101,97,107,95,99,111,117,110,116,69,0,109,117,116,101,120,32,108,111,99,107,32,102,97,105,108,101,100,0,101,99,32,61,61,32,48,0,47,104,111,109,101,47,116,114,97,118,105,115,47,101,109,115,100,107,45,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,105,110,99,111,109,105,110,103,47,115,121,115,116,101,109,47,108,105,98,47,108,105,98,99,120,120,47,109,117,116,101,120,46,99,112,112,0,117,110,108,111,99,107,0,97,108,108,111,99,97,116,111,114,60,84,62,58,
58,97,108,108,111,99,97,116,101,40,115,105,122,101,95,116,32,110,41,32,39,110,39,32,101,120,99,101,101,100,115,32,109,97,120,105,109,117,109,32,115,117,112,112,111,114,116,101,100,32,115,105,122,101,0,115,116,111,105,0,58,32,110,111,32,99,111,110,118,101,114,115,105,111,110,0,58,32,111,117,116,32,111,102,32,114,97,110,103,101,0,115,116,111,108,108,0,37,100,0,37,117,0,117,110,115,112,101,99,105,102,105,101,100,32,103,101,110,101,114,105,99,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,
85,110,107,110,111,119,110,32,101,114,114,111,114,32,37,100,0,110,101,119,95,101,114,114,110,111,32,61,61,32,69,82,65,78,71,69,0,47,104,111,109,101,47,116,114,97,118,105,115,47,101,109,115,100,107,45,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,105,110,99,111,109,105,110,103,47,115,121,115,116,101,109,47,108,105,98,47,108,105,98,99,120,120,47,115,121,115,116,101,109,95,101,114,114,111,114,46,99,112,112,0,100,111,95,115,116,114,101,114,114,111,114,95,114,0,103,101,110,
101,114,105,99,0,78,83,116,51,95,95,50,50,52,95,95,103,101,110,101,114,105,99,95,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,50,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,78,83,116,51,95,95,50,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,117,110,115,112,101,99,105,102,105,101,100,32,115,121,115,116,101,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,115,121,115,116,101,109,0,78,83,116,51,95,95,50,50,51,95,95,115,121,115,
116,101,109,95,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,50,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,58,32,0,116,104,114,101,97,100,58,58,106,111,105,110,32,102,97,105,108,101,100,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,
111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,83,116,57,101,120,99,101,112,116,105,111,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,
97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,
95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,
99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,83,116,57,98,97,100,95,97,108,108,111,99,0,115,116,100,58,58,101,120,99,101,112,116,105,111,110,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,83,116,49,54,105,110,118,97,108,105,100,95,97,114,103,117,109,101,110,116,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,
0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,83,116,49,52,111,118,101,114,102,108,111,119,95,101,114,114,111,114,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,83,116,56,98,97,100,95,99,97,115,116,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,
50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,118,0,68,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,102,117,110,99,116,105,111,110,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,32,99,111,110,115,116,0,32,118,111,108,97,116,105,108,101,0,32,114,101,115,116,114,105,99,116,0,32,99,111,109,112,108,101,120,0,32,
105,109,97,103,105,110,97,114,121,0,32,91,0,32,40,0,41,0,40,0,38,38,0,111,98,106,99,95,111,98,106,101,99,116,60,0,42,0,38,0,111,98,106,99,112,114,111,116,111,0,32,0,60,0,62,0,32,118,101,99,116,111,114,91,0,93,0,112,105,120,101,108,32,118,101,99,116,111,114,91,0,38,61,0,61,0,44,0,126,0,58,58,0,100,101,108,101,116,101,91,93,32,0,100,101,108,101,116,101,32,0,47,0,47,61,0,94,0,94,61,0,61,61,0,62,61,0,41,91,0,60,61,0,60,60,0,60,60,61,0,45,0,45,61,0,42,61,0,45,45,0,41,45,45,0,33,61,0,33,0,124,124,0,124,
0,124,61,0,45,62,42,0,43,0,43,61,0,43,43,0,41,43,43,0,41,32,63,32,40,0,41,32,58,32,40,0,37,0,37,61,0,62,62,0,62,62,61,0,116,104,114,111,119,0,116,104,114,111,119,32,0,116,121,112,101,105,100,40,0,115,105,122,101,111,102,46,46,46,40,0,44,32,0,115,105,122,101,111,102,32,40,0,115,116,97,116,105,99,95,99,97,115,116,60,0,62,40,0,114,101,105,110,116,101,114,112,114,101,116,95,99,97,115,116,60,0,45,62,0,110,111,101,120,99,101,112,116,32,40,0,91,93,32,0,41,32,0,46,0,46,42,0,115,116,100,58,58,0,111,112,101,
114,97,116,111,114,38,38,0,111,112,101,114,97,116,111,114,38,0,111,112,101,114,97,116,111,114,38,61,0,111,112,101,114,97,116,111,114,61,0,111,112,101,114,97,116,111,114,40,41,0,111,112,101,114,97,116,111,114,44,0,111,112,101,114,97,116,111,114,126,0,111,112,101,114,97,116,111,114,32,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0,111,112,101,114,97,116,111,114,42,0,111,112,101,114,97,116,111,114,47,0,111,112,101,114,97,116,111,114,47,61,0,111,112,101,114,97,116,111,114,94,0,111,
112,101,114,97,116,111,114,94,61,0,111,112,101,114,97,116,111,114,61,61,0,111,112,101,114,97,116,111,114,62,61,0,111,112,101,114,97,116,111,114,62,0,111,112,101,114,97,116,111,114,91,93,0,111,112,101,114,97,116,111,114,60,61,0,111,112,101,114,97,116,111,114,34,34,32,0,111,112,101,114,97,116,111,114,60,60,0,111,112,101,114,97,116,111,114,60,60,61,0,111,112,101,114,97,116,111,114,60,0,111,112,101,114,97,116,111,114,45,0,111,112,101,114,97,116,111,114,45,61,0,111,112,101,114,97,116,111,114,42,61,0,111,
112,101,114,97,116,111,114,45,45,0,111,112,101,114,97,116,111,114,32,110,101,119,91,93,0,111,112,101,114,97,116,111,114,33,61,0,111,112,101,114,97,116,111,114,33,0,111,112,101,114,97,116,111,114,32,110,101,119,0,111,112,101,114,97,116,111,114,124,124,0,111,112,101,114,97,116,111,114,124,0,111,112,101,114,97,116,111,114,124,61,0,111,112,101,114,97,116,111,114,45,62,42,0,111,112,101,114,97,116,111,114,43,0,111,112,101,114,97,116,111,114,43,61,0,111,112,101,114,97,116,111,114,43,43,0,111,112,101,114,
97,116,111,114,45,62,0,111,112,101,114,97,116,111,114,63,0,111,112,101,114,97,116,111,114,37,0,111,112,101,114,97,116,111,114,37,61,0,111,112,101,114,97,116,111,114,62,62,0,111,112,101,114,97,116,111,114,62,62,61,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0,39,117,110,110,97,109,101,100,0,39,108,97,109,98,100,97,39,40,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,
116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,105,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,115,116,114,101,97,109,0,115,116,100,58,58,111,115,116,114,101,97,109,0,115,116,100,
58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,111,115,116,114,101,97,109,0,115,116,100,58,58,105,111,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,111,115,116,114,101,97,109,0,100,121,
110,97,109,105,99,95,99,97,115,116,60,0,41,40,0,99,111,110,115,116,95,99,97,115,116,60,0,97,108,105,103,110,111,102,32,40,0,102,112,0,119,99,104,97,114,95,116,0,102,97,108,115,101,0,116,114,117,101,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,117,0,108,0,117,108,0,108,108,0,117,108,108,0,95,95,105,110,116,49,50,56,0,117,110,115,105,103,110,101,100,32,95,
95,105,110,116,49,50,56,0,37,76,97,76,0,37,97,0,37,97,102,0,100,101,99,108,116,121,112,101,40,0,115,116,100,58,58,97,108,108,111,99,97,116,111,114,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0,58,58,115,116,114,105,110,103,32,108,105,116,101,114,97,108,0,115,116,100,0,95,71,76,79,66,65,76,95,95,78,0,40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0,32,62,0,84,95,0,105,100,0,58,58,42,0,32,38,0,32,38,38,0,32,91,93,0,118,111,105,100,0,98,111,111,108,0,
105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,108,111,110,103,32,108,111,110,103,0,102,108,111,97,116,0,108,111,110,103,32,100,111,117,98,108,101,0,95,95,102,108,111,97,116,49,50,56,0,46,46,46,0,100,101,99,105,109,97,108,54,52,0,100,101,99,105,109,97,108,49,50,56,0,100,101,99,105,109,97,108,51,50,0,100,101,99,105,109,97,108,49,54,0,99,104,97,114,51,50,95,116,0,99,104,97,114,49,54,95,116,0,97,117,116,111,0,115,
116,100,58,58,110,117,108,108,112,116,114,95,116,0,100,111,117,98,108,101,0,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0,95,98,108,111,99,107,95,105,110,118,111,107,101,0,105,110,118,111,99,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,102,111,114,32,98,108,111,99,107,32,105,110,32,0,118,116,97,98,108,101,32,102,111,114,32,0,86,84,84,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,
111,114,32,0,99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0,99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0,45,105,110,45,0,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0,114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,
114,121,32,102,111,114,32,0],"i8",4,m.M+64276);var Yb=x;x+=16;var w={ga:0,W:[],B:{},Jb:function(e){if(!e||w.B[e])return e;for(var a in w.B)if(w.B[a].Cb===e)return a;return e},oc:function(e){e&&w.B[e].ya++},Fc:function(e){if(e){var c=w.B[e];v(0<c.ya);c.ya--;0!==c.ya||c.Sa||(c.Kb&&a.dynCall_vi(c.Kb,e),delete w.B[e],ib(e))}},Ff:function(e){e&&(w.B[e].ya=0)}},Ea={},Ta=1,k={m:1,v:2,mf:3,he:4,P:5,Ab:6,Ad:7,He:8,I:9,Od:10,zb:11,wf:11,fc:12,ma:13,$d:14,Te:15,V:16,Xa:17,hc:18,oa:19,ba:20,na:21,g:22,Ce:23,
ec:24,da:25,tf:26,ae:27,Pe:28,Ea:29,jf:30,ve:31,bf:32,Xd:33,ff:34,Le:42,de:43,Pd:44,ke:45,me:46,oe:47,ue:48,uf:49,Fe:50,je:51,Ud:35,Ie:37,Gd:52,Jd:53,xf:54,De:55,Kd:56,Ld:57,Vd:35,Md:59,Re:60,Ge:61,qf:62,Qe:63,Me:64,Ne:65,hf:66,Je:67,Dd:68,nf:69,Qd:70,cf:71,xe:72,Yd:73,Id:74,Ye:76,Hd:77,gf:78,pe:79,qe:80,te:81,se:82,re:83,Se:38,Za:39,ye:36,Ya:40,gc:95,af:96,Td:104,Ee:105,Ed:97,ef:91,We:88,Oe:92,kf:108,Sd:111,Bd:98,Rd:103,Be:101,ze:100,rf:110,be:112,ce:113,fe:115,Fd:114,Wd:89,we:90,df:93,lf:94,Cd:99,
Ae:102,ie:106,Ue:107,sf:109,vf:87,Zd:122,of:116,Xe:95,Ke:123,ee:84,Ze:75,Nd:125,Ve:131,$e:130,pf:86},Zb={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",
19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",
39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",
61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",
78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",
95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",
111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"},p={ac:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},pb:function(e,a){for(var b=0,f=e.length-1;0<=f;f--){var h=e[f];"."===h?e.splice(f,1):".."===h?(e.splice(f,
1),b++):b&&(e.splice(f,1),b--)}if(a)for(;b;b--)e.unshift("..");return e},normalize:function(e){var a="/"===e.charAt(0),b="/"===e.substr(-1);(e=p.pb(e.split("/").filter(function(e){return!!e}),!a).join("/"))||a||(e=".");e&&b&&(e+="/");return(a?"/":"")+e},dirname:function(e){var a=p.ac(e);e=a[0];a=a[1];if(!e&&!a)return".";a&&(a=a.substr(0,a.length-1));return e+a},basename:function(e){if("/"===e)return"/";var a=e.lastIndexOf("/");return-1===a?e:e.substr(a+1)},extname:function(e){return p.ac(e)[3]},join:function(){var e=
Array.prototype.slice.call(arguments,0);return p.normalize(e.join("/"))},q:function(e,a){return p.normalize(e+"/"+a)},resolve:function(){for(var e="",a=!1,b=arguments.length-1;-1<=b&&!a;b--){a=0<=b?arguments[b]:d.cwd();if("string"!==typeof a)throw new TypeError("Arguments to path.resolve must be strings");if(!a)return"";e=a+"/"+e;a="/"===a.charAt(0)}e=p.pb(e.split("/").filter(function(e){return!!e}),!a).join("/");return(a?"/":"")+e||"."},relative:function(e,a){function b(e){for(var a=0;a<e.length&&
""===e[a];a++);for(var c=e.length-1;0<=c&&""===e[c];c--);return a>c?[]:e.slice(a,c-a+1)}e=p.resolve(e).substr(1);a=p.resolve(a).substr(1);for(var f=b(e.split("/")),h=b(a.split("/")),d=Math.min(f.length,h.length),g=d,k=0;k<d;k++)if(f[k]!==h[k]){g=k;break}d=[];for(k=g;k<f.length;k++)d.push("..");d=d.concat(h.slice(g));return d.join("/")}},X={dc:[],S:function(){},pg:function(){},register:function(e,a){X.dc[e]={input:[],output:[],ia:a};d.ub(e,X.f)},f:{open:function(e){var a=X.dc[e.d.rdev];if(!a)throw new d.b(k.oa);
e.tty=a;e.seekable=!1},close:function(e){e.tty.ia.flush(e.tty)},flush:function(e){e.tty.ia.flush(e.tty)},read:function(e,a,b,f){if(!e.tty||!e.tty.ia.Tb)throw new d.b(k.Ab);for(var h=0,l=0;l<f;l++){var g;try{g=e.tty.ia.Tb(e.tty)}catch(t){throw new d.b(k.P);}if(void 0===g&&0===h)throw new d.b(k.zb);if(null===g||void 0===g)break;h++;a[b+l]=g}h&&(e.d.timestamp=Date.now());return h},write:function(e,a,b,f){if(!e.tty||!e.tty.ia.qb)throw new d.b(k.Ab);for(var h=0;h<f;h++)try{e.tty.ia.qb(e.tty,a[b+h])}catch(l){throw new d.b(k.P);
}f&&(e.d.timestamp=Date.now());return h}},Hc:{Tb:function(e){if(!e.input.length){var a=null;if(O){var b=new Buffer(256),d=0,h=process.stdin.fd;if("win32"!=process.platform){var l=!1;try{h=B.openSync("/dev/stdin","r"),l=!0}catch(g){}}try{d=B.readSync(h,b,0,256,null)}catch(k){if(-1!=k.toString().indexOf("EOF"))d=0;else throw k;}l&&B.closeSync(h);0<d?a=b.slice(0,d).toString("utf-8"):a=null}else"undefined"!=typeof window&&"function"==typeof window.prompt?(a=window.prompt("Input: "),null!==a&&(a+="\n")):
"function"==typeof readline&&(a=readline(),null!==a&&(a+="\n"));if(!a)return null;e.input=T(a,!0)}return e.input.shift()},qb:function(e,c){null===c||10===c?(a.print(Y(e.output,0)),e.output=[]):0!=c&&e.output.push(c)},flush:function(e){e.output&&0<e.output.length&&(a.print(Y(e.output,0)),e.output=[])}},Gc:{qb:function(e,c){null===c||10===c?(a.printErr(Y(e.output,0)),e.output=[]):0!=c&&e.output.push(c)},flush:function(e){e.output&&0<e.output.length&&(a.printErr(Y(e.output,0)),e.output=[])}}},q={L:null,
i:function(){return q.createNode(null,"/",16895,0)},createNode:function(e,a,b,f){if(d.Wc(b)||d.isFIFO(b))throw new d.b(k.m);q.L||(q.L={dir:{d:{A:q.e.A,o:q.e.o,lookup:q.e.lookup,D:q.e.D,rename:q.e.rename,unlink:q.e.unlink,rmdir:q.e.rmdir,readdir:q.e.readdir,symlink:q.e.symlink},stream:{C:q.f.C}},file:{d:{A:q.e.A,o:q.e.o},stream:{C:q.f.C,read:q.f.read,write:q.f.write,qa:q.f.qa,sa:q.f.sa,ha:q.f.ha}},link:{d:{A:q.e.A,o:q.e.o,readlink:q.e.readlink},stream:{}},Gb:{d:{A:q.e.A,o:q.e.o},stream:d.sc}});b=d.createNode(e,
a,b,f);d.k(b.mode)?(b.e=q.L.dir.d,b.f=q.L.dir.stream,b.c={}):d.isFile(b.mode)?(b.e=q.L.file.d,b.f=q.L.file.stream,b.j=0,b.c=null):d.fa(b.mode)?(b.e=q.L.link.d,b.f=q.L.link.stream):d.Ma(b.mode)&&(b.e=q.L.Gb.d,b.f=q.L.Gb.stream);b.timestamp=Date.now();e&&(e.c[a]=b);return b},Pc:function(e){if(e.c&&e.c.subarray){for(var a=[],b=0;b<e.j;++b)a.push(e.c[b]);return a}return e.c},Qc:function(e){return e.c?e.c.subarray?e.c.subarray(0,e.j):new Uint8Array(e.c):new Uint8Array},Ob:function(e,a){e.c&&e.c.subarray&&
a>e.c.length&&(e.c=q.Pc(e),e.j=e.c.length);if(!e.c||e.c.subarray){var b=e.c?e.c.length:0;b>=a||(a=Math.max(a,b*(1048576>b?2:1.125)|0),0!=b&&(a=Math.max(a,256)),b=e.c,e.c=new Uint8Array(a),0<e.j&&e.c.set(b.subarray(0,e.j),0))}else for(!e.c&&0<a&&(e.c=[]);e.c.length<a;)e.c.push(0)},od:function(e,a){if(e.j!=a)if(0==a)e.c=null,e.j=0;else{if(!e.c||e.c.subarray){var b=e.c;e.c=new Uint8Array(new ArrayBuffer(a));b&&e.c.set(b.subarray(0,Math.min(a,e.j)))}else if(e.c||(e.c=[]),e.c.length>a)e.c.length=a;else for(;e.c.length<
a;)e.c.push(0);e.j=a}},e:{A:function(e){var a={};a.dev=d.Ma(e.mode)?e.id:1;a.ino=e.id;a.mode=e.mode;a.nlink=1;a.uid=0;a.gid=0;a.rdev=e.rdev;d.k(e.mode)?a.size=4096:d.isFile(e.mode)?a.size=e.j:d.fa(e.mode)?a.size=e.link.length:a.size=0;a.atime=new Date(e.timestamp);a.mtime=new Date(e.timestamp);a.ctime=new Date(e.timestamp);a.Q=4096;a.blocks=Math.ceil(a.size/a.Q);return a},o:function(a,c){void 0!==c.mode&&(a.mode=c.mode);void 0!==c.timestamp&&(a.timestamp=c.timestamp);void 0!==c.size&&q.od(a,c.size)},
lookup:function(){throw d.hb[k.v];},D:function(a,c,b,d){return q.createNode(a,c,b,d)},rename:function(a,c,b){if(d.k(a.mode)){var f;try{f=d.O(c,b)}catch(h){}if(f)for(var l in f.c)throw new d.b(k.Za);}delete a.parent.c[a.name];a.name=b;c.c[b]=a;a.parent=c},unlink:function(a,c){delete a.c[c]},rmdir:function(a,c){var b=d.O(a,c),f;for(f in b.c)throw new d.b(k.Za);delete a.c[c]},readdir:function(a){var c=[".",".."],b;for(b in a.c)a.c.hasOwnProperty(b)&&c.push(b);return c},symlink:function(a,c,b){a=q.createNode(a,
c,41471,0);a.link=b;return a},readlink:function(a){if(!d.fa(a.mode))throw new d.b(k.g);return a.link}},f:{read:function(a,c,b,d,h){var l=a.d.c;if(h>=a.d.j)return 0;a=Math.min(a.d.j-h,d);v(0<=a);if(8<a&&l.subarray)c.set(l.subarray(h,h+a),b);else for(d=0;d<a;d++)c[b+d]=l[h+d];return a},write:function(a,c,b,d,h,l){if(!d)return 0;a=a.d;a.timestamp=Date.now();if(c.subarray&&(!a.c||a.c.subarray)){if(l)return a.c=c.subarray(b,b+d),a.j=d;if(0===a.j&&0===h)return a.c=new Uint8Array(c.subarray(b,b+d)),a.j=
d;if(h+d<=a.j)return a.c.set(c.subarray(b,b+d),h),d}q.Ob(a,h+d);if(a.c.subarray&&c.subarray)a.c.set(c.subarray(b,b+d),h);else for(l=0;l<d;l++)a.c[h+l]=c[b+l];a.j=Math.max(a.j,h+d);return d},C:function(a,c,b){1===b?c+=a.position:2===b&&d.isFile(a.d.mode)&&(c+=a.d.j);if(0>c)throw new d.b(k.g);return c},qa:function(a,c,b){q.Ob(a.d,c+b);a.d.j=Math.max(a.d.j,c+b)},sa:function(a,c,b,f,h,l,g){if(!d.isFile(a.d.mode))throw new d.b(k.oa);b=a.d.c;if(g&2||b.buffer!==c&&b.buffer!==c.buffer){if(0<h||h+f<a.d.j)b.subarray?
b=b.subarray(h,h+f):b=Array.prototype.slice.call(b,h,h+f);a=!0;f=L(f);if(!f)throw new d.b(k.fc);c.set(b,f)}else a=!1,f=b.byteOffset;return{$b:f,pc:a}},ha:function(a,c,b,f,h){if(!d.isFile(a.d.mode))throw new d.b(k.oa);if(h&2)return 0;q.f.write(a,c,0,f,b,!1);return 0}}},z={Ib:{},indexedDB:function(){if("undefined"!==typeof indexedDB)return indexedDB;var a=null;"object"===typeof window&&(a=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB);v(a,"IDBFS used, but indexedDB not supported");
return a},Da:21,u:"FILE_DATA",i:function(a){return q.i.apply(null,arguments)},xb:function(a,c,b){z.Rc(a,function(d,h){if(d)return b(d);z.Tc(a,function(a,e){if(a)return b(a);z.kd(c?e:h,c?h:e,b)})})},Nc:function(a,c){var b=z.Ib[a];if(b)return c(null,b);var d;try{d=z.indexedDB().open(a,z.Da)}catch(h){return c(h)}if(!d)return c("Unable to connect to IndexedDB");d.onupgradeneeded=function(a){var e=a.target.result;a=a.target.transaction;e=e.objectStoreNames.contains(z.u)?a.objectStore(z.u):e.createObjectStore(z.u);
e.indexNames.contains("timestamp")||e.createIndex("timestamp","timestamp",{unique:!1})};d.onsuccess=function(){b=d.result;z.Ib[a]=b;c(null,b)};d.onerror=function(a){c(this.error);a.preventDefault()}},Rc:function(a,c){function b(a){return"."!==a&&".."!==a}function f(a){return function(e){return p.q(a,e)}}for(var h={},l=d.readdir(a.ua).filter(b).map(f(a.ua));l.length;){var g=l.pop(),k;try{k=d.stat(g)}catch(m){return c(m)}d.k(k.mode)&&l.push.apply(l,d.readdir(g).filter(b).map(f(g)));h[g]={timestamp:k.mtime}}return c(null,
{type:"local",entries:h})},Tc:function(a,c){var b={};z.Nc(a.ua,function(a,e){if(a)return c(a);var d=e.transaction([z.u],"readonly");d.onerror=function(a){c(this.error);a.preventDefault()};d.objectStore(z.u).index("timestamp").openKeyCursor().onsuccess=function(a){a=a.target.result;if(!a)return c(null,{type:"remote",db:e,entries:b});b[a.primaryKey]={timestamp:a.key};a.continue()}})},Yc:function(a,c){var b,f;try{f=d.h(a).d,b=d.stat(a)}catch(h){return c(h)}return d.k(b.mode)?c(null,{timestamp:b.mtime,
mode:b.mode}):d.isFile(b.mode)?(f.c=q.Qc(f),c(null,{timestamp:b.mtime,mode:b.mode,c:f.c})):c(Error("node type not supported"))},rd:function(a,c,b){try{if(d.k(c.mode))d.mkdir(a,c.mode);else if(d.isFile(c.mode))d.writeFile(a,c.c,{encoding:"binary",Fb:!0});else return b(Error("node type not supported"));d.chmod(a,c.mode);d.yd(a,c.timestamp,c.timestamp)}catch(f){return b(f)}b(null)},md:function(a,c){try{d.h(a);var b=d.stat(a);d.k(b.mode)?d.rmdir(a):d.isFile(b.mode)&&d.unlink(a)}catch(f){return c(f)}c(null)},
Zc:function(a,c,b){a=a.get(c);a.onsuccess=function(a){b(null,a.target.result)};a.onerror=function(a){b(this.error);a.preventDefault()}},sd:function(a,c,b,d){a=a.put(b,c);a.onsuccess=function(){d(null)};a.onerror=function(a){d(this.error);a.preventDefault()}},nd:function(a,c,b){a=a.delete(c);a.onsuccess=function(){b(null)};a.onerror=function(a){b(this.error);a.preventDefault()}},kd:function(a,c,b){function d(a){if(a){if(!d.n)return d.n=!0,b(a)}else if(++k>=h)return b(null)}var h=0,l=[];Object.keys(a.entries).forEach(function(b){var d=
a.entries[b],f=c.entries[b];if(!f||d.timestamp>f.timestamp)l.push(b),h++});var g=[];Object.keys(c.entries).forEach(function(c){a.entries[c]||(g.push(c),h++)});if(!h)return b(null);var k=0,m=("remote"===a.type?a.db:c.db).transaction([z.u],"readwrite"),H=m.objectStore(z.u);m.onerror=function(a){d(this.error);a.preventDefault()};l.sort().forEach(function(a){"local"===c.type?z.Zc(H,a,function(e,c){if(e)return d(e);z.rd(a,c,d)}):z.Yc(a,function(e,c){if(e)return d(e);z.sd(H,a,c,d)})});g.sort().reverse().forEach(function(a){"local"===
c.type?z.md(a,d):z.nd(H,a,d)})}},u={Oa:!1,wb:function(){u.Oa=!!process.platform.match(/^win/)},i:function(a){v(O);return u.createNode(null,"/",u.X(a.ja.root),0)},createNode:function(a,c,b){if(!d.k(b)&&!d.isFile(b)&&!d.fa(b))throw new d.b(k.g);a=d.createNode(a,c,b);a.e=u.e;a.f=u.f;return a},X:function(a){var c;try{c=B.lstatSync(a),u.Oa&&(c.mode=c.mode|(c.mode&146)>>1)}catch(b){if(!b.code)throw b;throw new d.b(k[b.code]);}return c.mode},F:function(a){for(var c=[];a.parent!==a;)c.push(a.name),a=a.parent;
c.push(a.i.ja.root);c.reverse();return p.join.apply(null,c)},Pb:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},Ja:function(a){a&=-2099201;a&=-32769;a&=-524289;if(a in u.Pb)return u.Pb[a];throw new d.b(k.g);},e:{A:function(a){a=u.F(a);var c;try{c=B.lstatSync(a)}catch(b){if(!b.code)throw b;throw new d.b(k[b.code]);}u.Oa&&!c.Q&&(c.Q=
4096);u.Oa&&!c.blocks&&(c.blocks=(c.size+c.Q-1)/c.Q|0);return{dev:c.dev,ino:c.ino,mode:c.mode,nlink:c.nlink,uid:c.uid,gid:c.gid,rdev:c.rdev,size:c.size,atime:c.atime,mtime:c.mtime,ctime:c.ctime,Q:c.Q,blocks:c.blocks}},o:function(a,c){var b=u.F(a);try{void 0!==c.mode&&(B.chmodSync(b,c.mode),a.mode=c.mode),void 0!==c.size&&B.truncateSync(b,c.size)}catch(f){if(!f.code)throw f;throw new d.b(k[f.code]);}},lookup:function(a,c){var b=p.q(u.F(a),c),b=u.X(b);return u.createNode(a,c,b)},D:function(a,c,b,f){a=
u.createNode(a,c,b,f);c=u.F(a);try{d.k(a.mode)?B.mkdirSync(c,a.mode):B.writeFileSync(c,"",{mode:a.mode})}catch(h){if(!h.code)throw h;throw new d.b(k[h.code]);}return a},rename:function(a,c,b){a=u.F(a);c=p.q(u.F(c),b);try{B.renameSync(a,c)}catch(f){if(!f.code)throw f;throw new d.b(k[f.code]);}},unlink:function(a,c){var b=p.q(u.F(a),c);try{B.unlinkSync(b)}catch(f){if(!f.code)throw f;throw new d.b(k[f.code]);}},rmdir:function(a,c){var b=p.q(u.F(a),c);try{B.rmdirSync(b)}catch(f){if(!f.code)throw f;throw new d.b(k[f.code]);
}},readdir:function(a){a=u.F(a);try{return B.readdirSync(a)}catch(c){if(!c.code)throw c;throw new d.b(k[c.code]);}},symlink:function(a,c,b){a=p.q(u.F(a),c);try{B.symlinkSync(b,a)}catch(f){if(!f.code)throw f;throw new d.b(k[f.code]);}},readlink:function(a){var c=u.F(a);try{return c=B.readlinkSync(c),c=tb.relative(tb.resolve(a.i.ja.root),c)}catch(b){if(!b.code)throw b;throw new d.b(k[b.code]);}}},f:{open:function(a){var c=u.F(a.d);try{d.isFile(a.d.mode)&&(a.wa=B.openSync(c,u.Ja(a.flags)))}catch(b){if(!b.code)throw b;
throw new d.b(k[b.code]);}},close:function(a){try{d.isFile(a.d.mode)&&a.wa&&B.closeSync(a.wa)}catch(c){if(!c.code)throw c;throw new d.b(k[c.code]);}},read:function(a,c,b,f,h){if(0===f)return 0;var l=new Buffer(f),g;try{g=B.readSync(a.wa,l,0,f,h)}catch(t){throw new d.b(k[t.code]);}if(0<g)for(a=0;a<g;a++)c[b+a]=l[a];return g},write:function(a,c,b,f,h){c=new Buffer(c.subarray(b,b+f));var l;try{l=B.writeSync(a.wa,c,0,f,h)}catch(g){throw new d.b(k[g.code]);}return l},C:function(a,c,b){if(1===b)c+=a.position;
else if(2===b&&d.isFile(a.d.mode))try{c+=B.fstatSync(a.wa).size}catch(f){throw new d.b(k[f.code]);}if(0>c)throw new d.b(k.g);return c}}},C={Wa:16895,pa:33279,sb:null,i:function(a){function c(a){a=a.split("/");for(var e=d,c=0;c<a.length-1;c++){var b=a.slice(0,c+1).join("/");h[b]||(h[b]=C.createNode(e,a[c],C.Wa,0));e=h[b]}return e}function b(a){a=a.split("/");return a[a.length-1]}v(R);C.sb||(C.sb=new FileReaderSync);var d=C.createNode(null,"/",C.Wa,0),h={};Array.prototype.forEach.call(a.ja.files||[],
function(a){C.createNode(c(a.name),b(a.name),C.pa,0,a,a.lastModifiedDate)});(a.ja.blobs||[]).forEach(function(a){C.createNode(c(a.name),b(a.name),C.pa,0,a.data)});(a.ja.packages||[]).forEach(function(a){a.metadata.files.forEach(function(e){var h=e.filename.substr(1);C.createNode(c(h),b(h),C.pa,0,a.blob.slice(e.start,e.end))})});return d},createNode:function(a,c,b,f,h,l){f=d.createNode(a,c,b);f.mode=b;f.e=C.e;f.f=C.f;f.timestamp=(l||new Date).getTime();v(C.pa!==C.Wa);b===C.pa?(f.size=h.size,f.c=h):
(f.size=4096,f.c={});a&&(a.c[c]=f);return f},e:{A:function(a){return{dev:1,ino:void 0,mode:a.mode,nlink:1,uid:0,gid:0,rdev:void 0,size:a.size,atime:new Date(a.timestamp),mtime:new Date(a.timestamp),ctime:new Date(a.timestamp),Q:4096,blocks:Math.ceil(a.size/4096)}},o:function(a,c){void 0!==c.mode&&(a.mode=c.mode);void 0!==c.timestamp&&(a.timestamp=c.timestamp)},lookup:function(){throw new d.b(k.v);},D:function(){throw new d.b(k.m);},rename:function(){throw new d.b(k.m);},unlink:function(){throw new d.b(k.m);
},rmdir:function(){throw new d.b(k.m);},readdir:function(a){var c=[".",".."],b;for(b in a.c)a.c.hasOwnProperty(b)&&c.push(b);return c},symlink:function(){throw new d.b(k.m);},readlink:function(){throw new d.b(k.m);}},f:{read:function(a,c,b,d,h){if(h>=a.d.size)return 0;a=a.d.c.slice(h,h+d);d=C.sb.readAsArrayBuffer(a);c.set(new Uint8Array(d),b);return a.size},write:function(){throw new d.b(k.P);},C:function(a,c,b){1===b?c+=a.position:2===b&&d.isFile(a.d.mode)&&(c+=a.d.size);if(0>c)throw new d.b(k.g);
return c}}};x+=16;x+=16;x+=16;var d={root:null,va:[],Lb:[null],ka:[],cd:1,K:null,Hb:"/",La:!1,Xb:!0,p:{},cc:{Zb:{jc:1,kc:2}},b:null,hb:{},Lc:null,Ca:0,$f:function(a){if(!(a instanceof d.b))throw a+" : "+wa();return aa(a.t)},h:function(a,c){a=p.resolve(d.cwd(),a);c=c||{};if(!a)return{path:"",d:null};var b={fb:!0,tb:0},f;for(f in b)void 0===c[f]&&(c[f]=b[f]);if(8<c.tb)throw new d.b(k.Ya);var b=p.pb(a.split("/").filter(function(a){return!!a}),!1),h=d.root;f="/";for(var l=0;l<b.length;l++){var g=l===
b.length-1;if(g&&c.parent)break;h=d.O(h,b[l]);f=p.q(f,b[l]);d.Y(h)&&(!g||g&&c.fb)&&(h=h.ta.root);if(!g||c.G)for(g=0;d.fa(h.mode);)if(h=d.readlink(f),f=p.resolve(p.dirname(f),h),h=d.h(f,{tb:c.tb}).d,40<g++)throw new d.b(k.Ya);}return{path:f,d:h}},J:function(a){for(var c;;){if(d.Na(a))return a=a.i.ua,c?"/"!==a[a.length-1]?a+"/"+c:a+c:a;c=c?a.name+"/"+c:a.name;a=a.parent}},jb:function(a,c){for(var b=0,f=0;f<c.length;f++)b=(b<<5)-b+c.charCodeAt(f)|0;return(a+b>>>0)%d.K.length},Vb:function(a){var c=d.jb(a.parent.id,
a.name);a.$=d.K[c];d.K[c]=a},Wb:function(a){var c=d.jb(a.parent.id,a.name);if(d.K[c]===a)d.K[c]=a.$;else for(c=d.K[c];c;){if(c.$===a){c.$=a.$;break}c=c.$}},O:function(a,c){var b=d.$c(a);if(b)throw new d.b(b,a);for(b=d.K[d.jb(a.id,c)];b;b=b.$){var f=b.name;if(b.parent.id===a.id&&f===c)return b}return d.lookup(a,c)},createNode:function(a,c,b,f){d.Fa||(d.Fa=function(a,e,c,b){a||(a=this);this.parent=a;this.i=a.i;this.ta=null;this.id=d.cd++;this.name=e;this.mode=c;this.e={};this.f={};this.rdev=b},d.Fa.prototype=
{},Object.defineProperties(d.Fa.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}},Xc:{get:function(){return d.k(this.mode)}},lb:{get:function(){return d.Ma(this.mode)}}}));a=new d.Fa(a,c,b,f);d.Vb(a);return a},cb:function(a){d.Wb(a)},Na:function(a){return a===a.parent},Y:function(a){return!!a.ta},isFile:function(a){return 32768===(a&
61440)},k:function(a){return 16384===(a&61440)},fa:function(a){return 40960===(a&61440)},Ma:function(a){return 8192===(a&61440)},Wc:function(a){return 24576===(a&61440)},isFIFO:function(a){return 4096===(a&61440)},isSocket:function(a){return 49152===(a&49152)},Mc:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},bd:function(a){var c=d.Mc[a];if("undefined"===typeof c)throw Error("Unknown file open mode: "+a);return c},Ja:function(a){var c=
["r","w","rw"][a&3];a&512&&(c+="w");return c},T:function(a,c){if(d.Xb)return 0;if(-1===c.indexOf("r")||a.mode&292){if(-1!==c.indexOf("w")&&!(a.mode&146)||-1!==c.indexOf("x")&&!(a.mode&73))return k.ma}else return k.ma;return 0},$c:function(a){var c=d.T(a,"x");return c?c:a.e.lookup?0:k.ma},ob:function(a,c){try{return d.O(a,c),k.Xa}catch(b){}return d.T(a,"wx")},Pa:function(a,c,b){var f;try{f=d.O(a,c)}catch(h){return h.t}if(a=d.T(a,"wx"))return a;if(b){if(!d.k(f.mode))return k.ba;if(d.Na(f)||d.J(f)===
d.cwd())return k.V}else if(d.k(f.mode))return k.na;return 0},ad:function(a,c){return a?d.fa(a.mode)?k.Ya:d.k(a.mode)&&("r"!==d.Ja(c)||c&512)?k.na:d.T(a,d.Ja(c)):k.v},ic:4096,dd:function(a,c){c=c||d.ic;for(var b=a||0;b<=c;b++)if(!d.ka[b])return b;throw new d.b(k.ec);},R:function(a){return d.ka[a]},Ec:function(a,c,b){d.Ga||(d.Ga=function(){},d.Ga.prototype={},Object.defineProperties(d.Ga.prototype,{object:{get:function(){return this.d},set:function(a){this.d=a}},cg:{get:function(){return 1!==(this.flags&
2097155)}},dg:{get:function(){return 0!==(this.flags&2097155)}},bg:{get:function(){return this.flags&1024}}}));var f=new d.Ga,h;for(h in a)f[h]=a[h];a=f;c=d.dd(c,b);a.fd=c;return d.ka[c]=a},tc:function(a){d.ka[a]=null},sc:{open:function(a){a.f=d.Oc(a.d.rdev).f;a.f.open&&a.f.open(a)},C:function(){throw new d.b(k.Ea);}},nb:function(a){return a>>8},kg:function(a){return a&255},Z:function(a,c){return a<<8|c},ub:function(a,c){d.Lb[a]={f:c}},Oc:function(a){return d.Lb[a]},Rb:function(a){var c=[];for(a=
[a];a.length;){var b=a.pop();c.push(b);a.push.apply(a,b.va)}return c},xb:function(a,c){function b(a){v(0<d.Ca);d.Ca--;return c(a)}function f(a){if(a){if(!f.n)return f.n=!0,b(a)}else++l>=h.length&&b(null)}"function"===typeof a&&(c=a,a=!1);d.Ca++;1<d.Ca&&console.log("warning: "+d.Ca+" FS.syncfs operations in flight at once, probably just doing extra work");var h=d.Rb(d.root.i),l=0;h.forEach(function(c){if(!c.type.xb)return f(null);c.type.xb(c,a,f)})},i:function(a,c,b){var f="/"===b,h=!b,l;if(f&&d.root)throw new d.b(k.V);
if(!f&&!h){l=d.h(b,{fb:!1});b=l.path;l=l.d;if(d.Y(l))throw new d.b(k.V);if(!d.k(l.mode))throw new d.b(k.ba);}c={type:a,ja:c,ua:b,va:[]};a=a.i(c);a.i=c;c.root=a;f?d.root=a:l&&(l.ta=c,l.i&&l.i.va.push(c));return a},sg:function(a){a=d.h(a,{fb:!1});if(!d.Y(a.d))throw new d.b(k.g);a=a.d;var c=a.ta,b=d.Rb(c);Object.keys(d.K).forEach(function(a){for(a=d.K[a];a;){var e=a.$;-1!==b.indexOf(a.i)&&d.cb(a);a=e}});a.ta=null;c=a.i.va.indexOf(c);v(-1!==c);a.i.va.splice(c,1)},lookup:function(a,c){return a.e.lookup(a,
c)},D:function(a,c,b){var f=d.h(a,{parent:!0}).d;a=p.basename(a);if(!a||"."===a||".."===a)throw new d.b(k.g);var h=d.ob(f,a);if(h)throw new d.b(h);if(!f.e.D)throw new d.b(k.m);return f.e.D(f,a,c,b)},create:function(a,c){c=(void 0!==c?c:438)&4095;c|=32768;return d.D(a,c,0)},mkdir:function(a,c){c=(void 0!==c?c:511)&1023;c|=16384;return d.D(a,c,0)},lg:function(a,c){for(var b=a.split("/"),f="",h=0;h<b.length;++h)if(b[h]){f+="/"+b[h];try{d.mkdir(f,c)}catch(l){if(l.t!=k.Xa)throw l;}}},Qa:function(a,c,b){"undefined"===
typeof b&&(b=c,c=438);return d.D(a,c|8192,b)},symlink:function(a,c){if(!p.resolve(a))throw new d.b(k.v);var b=d.h(c,{parent:!0}).d;if(!b)throw new d.b(k.v);var f=p.basename(c),h=d.ob(b,f);if(h)throw new d.b(h);if(!b.e.symlink)throw new d.b(k.m);return b.e.symlink(b,f,a)},rename:function(a,c){var b=p.dirname(a),f=p.dirname(c),h=p.basename(a),l=p.basename(c),g,t,m;try{g=d.h(a,{parent:!0}),t=g.d,g=d.h(c,{parent:!0}),m=g.d}catch(H){throw new d.b(k.V);}if(!t||!m)throw new d.b(k.v);if(t.i!==m.i)throw new d.b(k.hc);
g=d.O(t,h);f=p.relative(a,f);if("."!==f.charAt(0))throw new d.b(k.g);f=p.relative(c,b);if("."!==f.charAt(0))throw new d.b(k.Za);var n;try{n=d.O(m,l)}catch(r){}if(g!==n){b=d.k(g.mode);if(h=d.Pa(t,h,b))throw new d.b(h);if(h=n?d.Pa(m,l,b):d.ob(m,l))throw new d.b(h);if(!t.e.rename)throw new d.b(k.m);if(d.Y(g)||n&&d.Y(n))throw new d.b(k.V);if(m!==t&&(h=d.T(t,"w")))throw new d.b(h);try{d.p.willMovePath&&d.p.willMovePath(a,c)}catch(q){console.log("FS.trackingDelegate['willMovePath']('"+a+"', '"+c+"') threw an exception: "+
q.message)}d.Wb(g);try{t.e.rename(g,m,l)}catch(u){throw u;}finally{d.Vb(g)}try{if(d.p.onMovePath)d.p.onMovePath(a,c)}catch(Cb){console.log("FS.trackingDelegate['onMovePath']('"+a+"', '"+c+"') threw an exception: "+Cb.message)}}},rmdir:function(a){var c=d.h(a,{parent:!0}).d,b=p.basename(a),f=d.O(c,b),h=d.Pa(c,b,!0);if(h)throw new d.b(h);if(!c.e.rmdir)throw new d.b(k.m);if(d.Y(f))throw new d.b(k.V);try{d.p.willDeletePath&&d.p.willDeletePath(a)}catch(l){console.log("FS.trackingDelegate['willDeletePath']('"+
a+"') threw an exception: "+l.message)}c.e.rmdir(c,b);d.cb(f);try{if(d.p.onDeletePath)d.p.onDeletePath(a)}catch(g){console.log("FS.trackingDelegate['onDeletePath']('"+a+"') threw an exception: "+g.message)}},readdir:function(a){a=d.h(a,{G:!0}).d;if(!a.e.readdir)throw new d.b(k.ba);return a.e.readdir(a)},unlink:function(a){var c=d.h(a,{parent:!0}).d,b=p.basename(a),f=d.O(c,b),h=d.Pa(c,b,!1);if(h)throw new d.b(h);if(!c.e.unlink)throw new d.b(k.m);if(d.Y(f))throw new d.b(k.V);try{d.p.willDeletePath&&
d.p.willDeletePath(a)}catch(l){console.log("FS.trackingDelegate['willDeletePath']('"+a+"') threw an exception: "+l.message)}c.e.unlink(c,b);d.cb(f);try{if(d.p.onDeletePath)d.p.onDeletePath(a)}catch(g){console.log("FS.trackingDelegate['onDeletePath']('"+a+"') threw an exception: "+g.message)}},readlink:function(a){a=d.h(a).d;if(!a)throw new d.b(k.v);if(!a.e.readlink)throw new d.b(k.g);return p.resolve(d.J(a.parent),a.e.readlink(a))},stat:function(a,c){var b=d.h(a,{G:!c}).d;if(!b)throw new d.b(k.v);
if(!b.e.A)throw new d.b(k.m);return b.e.A(b)},lstat:function(a){return d.stat(a,!0)},chmod:function(a,c,b){var f;"string"===typeof a?f=d.h(a,{G:!b}).d:f=a;if(!f.e.o)throw new d.b(k.m);f.e.o(f,{mode:c&4095|f.mode&-4096,timestamp:Date.now()})},lchmod:function(a,c){d.chmod(a,c,!0)},fchmod:function(a,c){var b=d.R(a);if(!b)throw new d.b(k.I);d.chmod(b.d,c)},chown:function(a,c,b,f){var h;"string"===typeof a?h=d.h(a,{G:!f}).d:h=a;if(!h.e.o)throw new d.b(k.m);h.e.o(h,{timestamp:Date.now()})},lchown:function(a,
c,b){d.chown(a,c,b,!0)},fchown:function(a,c,b){a=d.R(a);if(!a)throw new d.b(k.I);d.chown(a.d,c,b)},truncate:function(a,c){if(0>c)throw new d.b(k.g);var b;"string"===typeof a?b=d.h(a,{G:!0}).d:b=a;if(!b.e.o)throw new d.b(k.m);if(d.k(b.mode))throw new d.b(k.na);if(!d.isFile(b.mode))throw new d.b(k.g);var f=d.T(b,"w");if(f)throw new d.b(f);b.e.o(b,{size:c,timestamp:Date.now()})},Qf:function(a,c){var b=d.R(a);if(!b)throw new d.b(k.I);if(0===(b.flags&2097155))throw new d.b(k.g);d.truncate(b.d,c)},yd:function(a,
c,b){a=d.h(a,{G:!0}).d;a.e.o(a,{timestamp:Math.max(c,b)})},open:function(e,c,b,f,h){if(""===e)throw new d.b(k.v);c="string"===typeof c?d.bd(c):c;b=c&64?("undefined"===typeof b?438:b)&4095|32768:0;var l;if("object"===typeof e)l=e;else{e=p.normalize(e);try{l=d.h(e,{G:!(c&131072)}).d}catch(g){}}var t=!1;if(c&64)if(l){if(c&128)throw new d.b(k.Xa);}else l=d.D(e,b,0),t=!0;if(!l)throw new d.b(k.v);d.Ma(l.mode)&&(c&=-513);if(c&65536&&!d.k(l.mode))throw new d.b(k.ba);if(!t&&(b=d.ad(l,c)))throw new d.b(b);
c&512&&d.truncate(l,0);c&=-641;f=d.Ec({d:l,path:d.J(l),flags:c,seekable:!0,position:0,f:l.f,xd:[],error:!1},f,h);f.f.open&&f.f.open(f);!a.logReadFiles||c&1||(d.rb||(d.rb={}),e in d.rb||(d.rb[e]=1,a.printErr("read file: "+e)));try{d.p.onOpenFile&&(h=0,1!==(c&2097155)&&(h|=d.cc.Zb.jc),0!==(c&2097155)&&(h|=d.cc.Zb.kc),d.p.onOpenFile(e,h))}catch(m){console.log("FS.trackingDelegate['onOpenFile']('"+e+"', flags) threw an exception: "+m.message)}return f},close:function(a){a.ib&&(a.ib=null);try{a.f.close&&
a.f.close(a)}catch(c){throw c;}finally{d.tc(a.fd)}},C:function(a,c,b){if(!a.seekable||!a.f.C)throw new d.b(k.Ea);a.position=a.f.C(a,c,b);a.xd=[];return a.position},read:function(a,c,b,f,h){if(0>f||0>h)throw new d.b(k.g);if(1===(a.flags&2097155))throw new d.b(k.I);if(d.k(a.d.mode))throw new d.b(k.na);if(!a.f.read)throw new d.b(k.g);var l=!0;if("undefined"===typeof h)h=a.position,l=!1;else if(!a.seekable)throw new d.b(k.Ea);c=a.f.read(a,c,b,f,h);l||(a.position+=c);return c},write:function(a,c,b,f,h,
l){if(0>f||0>h)throw new d.b(k.g);if(0===(a.flags&2097155))throw new d.b(k.I);if(d.k(a.d.mode))throw new d.b(k.na);if(!a.f.write)throw new d.b(k.g);a.flags&1024&&d.C(a,0,2);var g=!0;if("undefined"===typeof h)h=a.position,g=!1;else if(!a.seekable)throw new d.b(k.Ea);c=a.f.write(a,c,b,f,h,l);g||(a.position+=c);try{if(a.path&&d.p.onWriteToFile)d.p.onWriteToFile(a.path)}catch(t){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+t.message)}return c},qa:function(a,c,b){if(0>
c||0>=b)throw new d.b(k.g);if(0===(a.flags&2097155))throw new d.b(k.I);if(!d.isFile(a.d.mode)&&!d.k(a.d.mode))throw new d.b(k.oa);if(!a.f.qa)throw new d.b(k.gc);a.f.qa(a,c,b)},sa:function(a,c,b,f,h,l,g){if(1===(a.flags&2097155))throw new d.b(k.ma);if(!a.f.sa)throw new d.b(k.oa);return a.f.sa(a,c,b,f,h,l,g)},ha:function(a,c,b,d,h){return a&&a.f.ha?a.f.ha(a,c,b,d,h):0},mg:function(){return 0},kb:function(a,c,b){if(!a.f.kb)throw new d.b(k.da);return a.f.kb(a,c,b)},readFile:function(a,c){c=c||{};c.flags=
c.flags||"r";c.encoding=c.encoding||"binary";if("utf8"!==c.encoding&&"binary"!==c.encoding)throw Error('Invalid encoding type "'+c.encoding+'"');var b,f=d.open(a,c.flags),h=d.stat(a).size,l=new Uint8Array(h);d.read(f,l,0,h,0);"utf8"===c.encoding?b=Y(l,0):"binary"===c.encoding&&(b=l);d.close(f);return b},writeFile:function(a,c,b){b=b||{};b.flags=b.flags||"w";b.encoding=b.encoding||"utf8";if("utf8"!==b.encoding&&"binary"!==b.encoding)throw Error('Invalid encoding type "'+b.encoding+'"');a=d.open(a,
b.flags,b.mode);if("utf8"===b.encoding){var f=new Uint8Array(da(c)+1);c=va(c,f,0,f.length);d.write(a,f,0,c,0,b.Fb)}else"binary"===b.encoding&&d.write(a,c,0,c.length,0,b.Fb);d.close(a)},cwd:function(){return d.Hb},chdir:function(a){a=d.h(a,{G:!0});if(null===a.d)throw new d.b(k.v);if(!d.k(a.d.mode))throw new d.b(k.ba);var c=d.T(a.d,"x");if(c)throw new d.b(c);d.Hb=a.path},vc:function(){d.mkdir("/tmp");d.mkdir("/home");d.mkdir("/home/web_user")},uc:function(){d.mkdir("/dev");d.ub(d.Z(1,3),{read:function(){return 0},
write:function(a,e,c,d){return d}});d.Qa("/dev/null",d.Z(1,3));X.register(d.Z(5,0),X.Hc);X.register(d.Z(6,0),X.Gc);d.Qa("/dev/tty",d.Z(5,0));d.Qa("/dev/tty1",d.Z(6,0));var a;if("undefined"!==typeof crypto){var c=new Uint8Array(1);a=function(){crypto.getRandomValues(c);return c[0]}}else a=O?function(){return require("crypto").randomBytes(1)[0]}:function(){return 256*Math.random()|0};d.N("/dev","random",a);d.N("/dev","urandom",a);d.mkdir("/dev/shm");d.mkdir("/dev/shm/tmp")},Cc:function(){d.mkdir("/proc");
d.mkdir("/proc/self");d.mkdir("/proc/self/fd");d.i({i:function(){var a=d.createNode("/proc/self","fd",16895,73);a.e={lookup:function(a,e){var f=d.R(+e);if(!f)throw new d.b(k.I);var h={parent:null,i:{ua:"fake"},e:{readlink:function(){return f.path}}};return h.parent=h}};return a}},{},"/proc/self/fd")},Dc:function(){a.stdin?d.N("/dev","stdin",a.stdin):d.symlink("/dev/tty","/dev/stdin");a.stdout?d.N("/dev","stdout",null,a.stdout):d.symlink("/dev/tty","/dev/stdout");a.stderr?d.N("/dev","stderr",null,
a.stderr):d.symlink("/dev/tty1","/dev/stderr");var e=d.open("/dev/stdin","r");v(0===e.fd,"invalid handle for stdin ("+e.fd+")");e=d.open("/dev/stdout","w");v(1===e.fd,"invalid handle for stdout ("+e.fd+")");e=d.open("/dev/stderr","w");v(2===e.fd,"invalid handle for stderr ("+e.fd+")")},Nb:function(){d.b||(d.b=function(a,c){this.d=c;this.qd=function(a){this.t=a;for(var e in k)if(k[e]===a){this.code=e;break}};this.qd(a);this.message=Zb[a]},d.b.prototype=Error(),d.b.prototype.constructor=d.b,[k.v].forEach(function(a){d.hb[a]=
new d.b(a);d.hb[a].stack="<generic error, no stack>"}))},wb:function(){d.Nb();d.K=Array(4096);d.i(q,{},"/");d.vc();d.uc();d.Cc();d.Lc={MEMFS:q,IDBFS:z,NODEFS:u,WORKERFS:C}},S:function(e,c,b){v(!d.S.La,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");d.S.La=!0;d.Nb();a.stdin=e||a.stdin;a.stdout=c||a.stdout;a.stderr=b||a.stderr;d.Dc()},jd:function(){d.S.La=!1;var e=a._fflush;
e&&e(0);for(e=0;e<d.ka.length;e++){var c=d.ka[e];c&&d.close(c)}},X:function(a,c){var b=0;a&&(b|=365);c&&(b|=146);return b},eg:function(a,c){var b=p.join.apply(null,a);c&&"/"==b[0]&&(b=b.substr(1));return b},Af:function(a,c){return p.resolve(c,a)},qg:function(a){return p.normalize(a)},Pf:function(a,c){var b=d.ab(a,c);if(b.exists)return b.object;aa(b.error);return null},ab:function(a,c){try{var b=d.h(a,{G:!c});a=b.path}catch(f){}var h={Na:!1,exists:!1,error:0,name:null,path:null,object:null,ed:!1,hd:null,
gd:null};try{b=d.h(a,{parent:!0}),h.ed=!0,h.hd=b.path,h.gd=b.d,h.name=p.basename(a),b=d.h(a,{G:!c}),h.exists=!0,h.path=b.path,h.object=b.d,h.name=b.d.name,h.Na="/"===b.path}catch(l){h.error=l.t}return h},xc:function(a,c,b,f){a=p.q("string"===typeof a?a:d.J(a),c);b=d.X(b,f);return d.mkdir(a,b)},Ac:function(a,c){a="string"===typeof a?a:d.J(a);for(var b=c.split("/").reverse();b.length;){var f=b.pop();if(f){var h=p.q(a,f);try{d.mkdir(h)}catch(l){}a=h}}return h},wc:function(a,c,b,f,h){a=p.q("string"===
typeof a?a:d.J(a),c);f=d.X(f,h);return d.create(a,f)},bb:function(a,c,b,f,h,l){a=c?p.q("string"===typeof a?a:d.J(a),c):a;f=d.X(f,h);h=d.create(a,f);if(b){if("string"===typeof b){a=Array(b.length);c=0;for(var g=b.length;c<g;++c)a[c]=b.charCodeAt(c);b=a}d.chmod(h,f|146);a=d.open(h,"w");d.write(a,b,0,b.length,0,l);d.close(a);d.chmod(h,f)}return h},N:function(a,c,b,f){a=p.q("string"===typeof a?a:d.J(a),c);c=d.X(!!b,!!f);d.N.nb||(d.N.nb=64);var h=d.Z(d.N.nb++,0);d.ub(h,{open:function(a){a.seekable=!1},
close:function(){f&&f.buffer&&f.buffer.length&&f(10)},read:function(a,c,e,h){for(var f=0,g=0;g<h;g++){var m;try{m=b()}catch(n){throw new d.b(k.P);}if(void 0===m&&0===f)throw new d.b(k.zb);if(null===m||void 0===m)break;f++;c[e+g]=m}f&&(a.d.timestamp=Date.now());return f},write:function(a,c,e,b){for(var h=0;h<b;h++)try{f(c[e+h])}catch(g){throw new d.b(k.P);}b&&(a.d.timestamp=Date.now());return h}});return d.Qa(a,c,h)},zc:function(a,c,b){a=p.q("string"===typeof a?a:d.J(a),c);return d.symlink(b,a)},Qb:function(e){if(e.lb||
e.Xc||e.link||e.c)return!0;var c=!0;if("undefined"!==typeof XMLHttpRequest)throw Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(a.read)try{e.c=T(a.read(e.url),!0),e.j=e.c.length}catch(b){c=!1}else throw Error("Cannot load without read() or XMLHttpRequest.");c||aa(k.P);return c},yc:function(a,c,b,f,h){function l(){this.mb=!1;this.Ia=[]}l.prototype.get=
function(a){if(!(a>this.length-1||0>a)){var c=a%this.chunkSize;return this.Ub(a/this.chunkSize|0)[c]}};l.prototype.pd=function(a){this.Ub=a};l.prototype.Eb=function(){var a=new XMLHttpRequest;a.open("HEAD",b,!1);a.send(null);if(!(200<=a.status&&300>a.status||304===a.status))throw Error("Couldn't load "+b+". Status: "+a.status);var c=Number(a.getResponseHeader("Content-length")),e,h=(e=a.getResponseHeader("Accept-Ranges"))&&"bytes"===e,a=(e=a.getResponseHeader("Content-Encoding"))&&"gzip"===e,d=1048576;
h||(d=c);var f=this;f.pd(function(a){var e=a*d,h=(a+1)*d-1,h=Math.min(h,c-1);if("undefined"===typeof f.Ia[a]){var l=f.Ia;if(e>h)throw Error("invalid range ("+e+", "+h+") or no bytes requested!");if(h>c-1)throw Error("only "+c+" bytes available! programmer error!");var g=new XMLHttpRequest;g.open("GET",b,!1);c!==d&&g.setRequestHeader("Range","bytes="+e+"-"+h);"undefined"!=typeof Uint8Array&&(g.responseType="arraybuffer");g.overrideMimeType&&g.overrideMimeType("text/plain; charset=x-user-defined");
g.send(null);if(!(200<=g.status&&300>g.status||304===g.status))throw Error("Couldn't load "+b+". Status: "+g.status);e=void 0!==g.response?new Uint8Array(g.response||[]):T(g.responseText||"",!0);l[a]=e}if("undefined"===typeof f.Ia[a])throw Error("doXHR failed!");return f.Ia[a]});if(a||!c)d=c=1,d=c=this.Ub(0).length,console.log("LazyFiles on gzip forces download of the whole file when length is accessed");this.mc=c;this.lc=d;this.mb=!0};if("undefined"!==typeof XMLHttpRequest){if(!R)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
var g=new l;Object.defineProperties(g,{length:{get:function(){this.mb||this.Eb();return this.mc}},chunkSize:{get:function(){this.mb||this.Eb();return this.lc}}});g={lb:!1,c:g}}else g={lb:!1,url:b};var t=d.wc(a,c,g,f,h);g.c?t.c=g.c:g.url&&(t.c=null,t.url=g.url);Object.defineProperties(t,{j:{get:function(){return this.c.length}}});var m={};Object.keys(t.f).forEach(function(a){var c=t.f[a];m[a]=function(){if(!d.Qb(t))throw new d.b(k.P);return c.apply(null,arguments)}});m.read=function(a,c,e,b,h){if(!d.Qb(t))throw new d.b(k.P);
a=a.d.c;if(h>=a.length)return 0;b=Math.min(a.length-h,b);v(0<=b);if(a.slice)for(var f=0;f<b;f++)c[e+f]=a[h+f];else for(f=0;f<b;f++)c[e+f]=a.get(h+f);return b};t.f=m;return t},Bc:function(e,c,b,f,h,l,g,k,m,n){function q(b){function p(a){n&&n();k||d.bb(e,c,a,f,h,m);l&&l();Ga()}var u=!1;a.preloadPlugins.forEach(function(a){!u&&a.canHandle(r)&&(a.handle(b,r,p,function(){g&&g();Ga()}),u=!0)});u||p(b)}Browser.S();var r=c?p.resolve(p.q(e,c)):e;hb();"string"==typeof b?Browser.Cf(b,function(a){q(a)},g):q(b)},
indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},yb:function(){return"EM_FS_"+window.location.pathname},Da:20,u:"FILE_DATA",og:function(a,c,b){c=c||function(){};b=b||function(){};var f=d.indexedDB();try{var h=f.open(d.yb(),d.Da)}catch(l){return b(l)}h.onupgradeneeded=function(){console.log("creating db");h.result.createObjectStore(d.u)};h.onsuccess=function(){var f=h.result.transaction([d.u],"readwrite"),l=f.objectStore(d.u),g=0,k=0,m=
a.length;a.forEach(function(a){a=l.put(d.ab(a).object.c,a);a.onsuccess=function(){g++;g+k==m&&(0==k?c():b())};a.onerror=function(){k++;g+k==m&&(0==k?c():b())}});f.onerror=b};h.onerror=b},gg:function(a,c,b){c=c||function(){};b=b||function(){};var f=d.indexedDB();try{var h=f.open(d.yb(),d.Da)}catch(l){return b(l)}h.onupgradeneeded=b;h.onsuccess=function(){var f=h.result;try{var l=f.transaction([d.u],"readonly")}catch(g){b(g);return}var k=l.objectStore(d.u),m=0,n=0,q=a.length;a.forEach(function(a){var e=
k.get(a);e.onsuccess=function(){d.ab(a).exists&&d.unlink(a);d.bb(p.dirname(a),p.basename(a),e.result,!0,!0,!0);m++;m+n==q&&(0==n?c():b())};e.onerror=function(){n++;m+n==q&&(0==n?c():b())}});l.onerror=b};h.onerror=b}},r={zd:5,Yb:{},umask:511,Df:function(a,c){if("/"!==c[0]){var b;if(-100===a)b=d.cwd();else{b=d.R(a);if(!b)throw new d.b(k.I);b=b.path}c=p.q(b,c)}return c},Mf:function(a,c,b){try{var f=a(c)}catch(h){if(h&&h.d&&p.normalize(c)!==p.normalize(d.J(h.d)))return-k.ba;throw h;}n[b>>2]=f.dev;n[b+
4>>2]=0;n[b+8>>2]=f.ino;n[b+12>>2]=f.mode;n[b+16>>2]=f.nlink;n[b+20>>2]=f.uid;n[b+24>>2]=f.gid;n[b+28>>2]=f.rdev;n[b+32>>2]=0;n[b+36>>2]=f.size;n[b+40>>2]=4096;n[b+44>>2]=f.blocks;n[b+48>>2]=f.atime.getTime()/1E3|0;n[b+52>>2]=0;n[b+56>>2]=f.mtime.getTime()/1E3|0;n[b+60>>2]=0;n[b+64>>2]=f.ctime.getTime()/1E3|0;n[b+68>>2]=0;n[b+72>>2]=f.ino;return 0},Ic:function(a,c,b,f){a=new Uint8Array(J.subarray(a,a+b));d.ha(c,a,0,b,f)},Jf:function(a,c){a=p.normalize(a);"/"===a[a.length-1]&&(a=a.substr(0,a.length-
1));d.mkdir(a,c,0);return 0},Kf:function(a,c,b){switch(c&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-k.g}d.D(a,c,b);return 0},Lf:function(a,c,b){if(0>=b)return-k.g;a=d.readlink(a);var f=Math.min(b,da(a)),h=D[c+f];ka(a,c,b+1);D[c+f]=h;return f},Hf:function(a,c){if(c&-8)return-k.g;var b;b=d.h(a,{G:!0}).d;var f="";c&4&&(f+="r");c&2&&(f+="w");c&1&&(f+="x");return f&&d.T(b,f)?-k.ma:0},If:function(a,c,b){var f=d.R(b);f&&d.close(f);return d.open(a,c,0,b,b).fd},Jc:function(a,
c,b,f){for(var h=0,l=0;l<b;l++){var g=n[c+(8*l+4)>>2],k=d.read(a,D,n[c+8*l>>2],g,f);if(0>k)return-1;h+=k;if(k<g)break}return h},Kc:function(a,c,b,f){for(var h=0,l=0;l<b;l++){var g=d.write(a,D,n[c+8*l>>2],n[c+(8*l+4)>>2],f);if(0>g)return-1;h+=g}return h},H:0,get:function(){r.H+=4;return n[r.H-4>>2]},Uc:function(){return M(r.get())},ea:function(){var a=d.R(r.get());if(!a)throw new d.b(k.I);return a},Yf:function(){var a=SOCKFS.Wf(r.get());if(!a)throw new d.b(k.I);return a},Xf:function(a){var c=r.get(),
b=r.get();if(a&&0===c)return null;a=__read_sockaddr(c,b);if(a.t)throw new d.b(a.t);a.Bb=DNS.hg(a.Bb)||a.Bb;return a},Rf:function(){var a=r.get(),c=r.get();0<=a?v(0===c):v(-1===c);return a},Zf:function(){v(0===r.get())}},jb=x;x+=16;var Q={},Aa=[31,29,31,30,31,30,31,31,30,31,30,31],Ba=[31,28,31,30,31,30,31,31,30,31,30,31],$b=A([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,
0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",2),ac=x;x+=16;d.wb();ja.unshift(function(){a.noFSInit||d.S.La||d.S()});Ka.push(function(){d.Xb=!1});ma.push(function(){d.jd()});a.FS_createFolder=d.xc;a.FS_createPath=
d.Ac;a.FS_createDataFile=d.bb;a.FS_createPreloadedFile=d.Bc;a.FS_createLazyFile=d.yc;a.FS_createLink=d.zc;a.FS_createDevice=d.N;a.FS_unlink=d.unlink;ja.unshift(function(){X.S()});ma.push(function(){});if(O){var B=require("fs"),tb=require("path");u.wb()}ya(Q);O?ba=function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:"undefined"!==typeof dateNow?ba=dateNow:"object"===typeof self&&self.performance&&"function"===typeof self.performance.now?ba=function(){return self.performance.now()}:"object"===
typeof performance&&"function"===typeof performance.now?ba=function(){return performance.now()}:ba=Date.now;S=A(1,"i32",2);Qa=P=m.Db(x);Ca=Qa+Sa;Ra=m.Db(Ca);n[S>>2]=Ra;Oa=!0;a.qc={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:Infinity,byteLength:Da};a.rc={abort:G,assert:v,enlargeMemory:cb,getTotalMemory:function(){return E},abortOnCannotGrowMemory:function(){G("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+
E+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")},invoke_iiiiiiii:function(e,c,b,d,h,l,g,k){try{return a.dynCall_iiiiiiii(e,c,b,d,h,l,g,k)}catch(m){if("number"!==typeof m&&"longjmp"!==m)throw m;a.setThrew(1,0)}},invoke_viiiii:function(e,c,b,d,h,l){try{a.dynCall_viiiii(e,
c,b,d,h,l)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;a.setThrew(1,0)}},invoke_iiiiiid:function(e,c,b,d,h,l,g){try{return a.dynCall_iiiiiid(e,c,b,d,h,l,g)}catch(k){if("number"!==typeof k&&"longjmp"!==k)throw k;a.setThrew(1,0)}},invoke_vi:function(e,c){try{a.dynCall_vi(e,c)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;a.setThrew(1,0)}},invoke_vii:function(e,c,b){try{a.dynCall_vii(e,c,b)}catch(d){if("number"!==typeof d&&"longjmp"!==d)throw d;a.setThrew(1,0)}},invoke_iiiiiii:function(e,
c,b,d,h,l,g){try{return a.dynCall_iiiiiii(e,c,b,d,h,l,g)}catch(k){if("number"!==typeof k&&"longjmp"!==k)throw k;a.setThrew(1,0)}},invoke_ii:function(e,c){try{return a.dynCall_ii(e,c)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;a.setThrew(1,0)}},invoke_id:function(e,c){try{return a.dynCall_id(e,c)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;a.setThrew(1,0)}},invoke_iiiiiiiiiiii:function(e,c,b,d,h,l,g,k,m,n,p,q){try{return a.dynCall_iiiiiiiiiiii(e,c,b,d,h,l,g,k,m,n,p,q)}catch(r){if("number"!==
typeof r&&"longjmp"!==r)throw r;a.setThrew(1,0)}},invoke_iiii:function(e,c,b,d){try{return a.dynCall_iiii(e,c,b,d)}catch(h){if("number"!==typeof h&&"longjmp"!==h)throw h;a.setThrew(1,0)}},invoke_viiiiiiiiiiiiiii:function(e,c,b,d,h,l,g,k,m,n,p,q,r,u,v,w){try{a.dynCall_viiiiiiiiiiiiiii(e,c,b,d,h,l,g,k,m,n,p,q,r,u,v,w)}catch(x){if("number"!==typeof x&&"longjmp"!==x)throw x;a.setThrew(1,0)}},invoke_viiiiii:function(e,c,b,d,h,l,g){try{a.dynCall_viiiiii(e,c,b,d,h,l,g)}catch(k){if("number"!==typeof k&&"longjmp"!==
k)throw k;a.setThrew(1,0)}},invoke_iid:function(e,c,b){try{return a.dynCall_iid(e,c,b)}catch(d){if("number"!==typeof d&&"longjmp"!==d)throw d;a.setThrew(1,0)}},invoke_viiiiiii:function(e,c,b,d,h,l,g,k){try{a.dynCall_viiiiiii(e,c,b,d,h,l,g,k)}catch(m){if("number"!==typeof m&&"longjmp"!==m)throw m;a.setThrew(1,0)}},invoke_viiiiiiiiii:function(e,c,b,d,h,l,g,k,m,n,p){try{a.dynCall_viiiiiiiiii(e,c,b,d,h,l,g,k,m,n,p)}catch(q){if("number"!==typeof q&&"longjmp"!==q)throw q;a.setThrew(1,0)}},invoke_iii:function(e,
c,b){try{return a.dynCall_iii(e,c,b)}catch(d){if("number"!==typeof d&&"longjmp"!==d)throw d;a.setThrew(1,0)}},invoke_iiiiii:function(e,c,b,d,h,l){try{return a.dynCall_iiiiii(e,c,b,d,h,l)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;a.setThrew(1,0)}},invoke_i:function(e){try{return a.dynCall_i(e)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;a.setThrew(1,0)}},invoke_iiiii:function(e,c,b,d,h){try{return a.dynCall_iiiii(e,c,b,d,h)}catch(l){if("number"!==typeof l&&"longjmp"!==l)throw l;
a.setThrew(1,0)}},invoke_viii:function(e,c,b,d){try{a.dynCall_viii(e,c,b,d)}catch(h){if("number"!==typeof h&&"longjmp"!==h)throw h;a.setThrew(1,0)}},invoke_v:function(e){try{a.dynCall_v(e)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;a.setThrew(1,0)}},invoke_iiiiiiiii:function(e,c,b,d,h,l,g,k,m){try{return a.dynCall_iiiiiiiii(e,c,b,d,h,l,g,k,m)}catch(n){if("number"!==typeof n&&"longjmp"!==n)throw n;a.setThrew(1,0)}},invoke_iiiiid:function(e,c,b,d,h,l){try{return a.dynCall_iiiiid(e,c,b,d,
h,l)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;a.setThrew(1,0)}},invoke_viiii:function(e,c,b,d,h){try{a.dynCall_viiii(e,c,b,d,h)}catch(l){if("number"!==typeof l&&"longjmp"!==l)throw l;a.setThrew(1,0)}},___syscall221:function(a,c){r.H=c;try{var b=r.ea();switch(r.get()){case 0:var f=r.get();return 0>f?-k.g:d.open(b.path,b.flags,0,f).fd;case 1:case 2:return 0;case 3:return b.flags;case 4:return f=r.get(),b.flags|=f,0;case 12:case 12:return f=r.get(),ca[f+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;
case 16:case 8:return-k.g;case 9:return aa(k.g),-1;default:return-k.g}}catch(h){return"undefined"!==typeof d&&h instanceof d.b||G(h),-h.t}},_strftime:kb,_pthread_cond_wait:function(){return 0},___lock:function(){},_emscripten_get_now_is_monotonic:lb,__ZSt18uncaught_exceptionv:fa,_pthread_key_create:function(a){if(0==a)return k.g;n[a>>2]=Ta;Ea[Ta]=0;Ta++;return 0},_abort:function(){a.abort()},___gxx_personality_v0:function(){},___cxa_find_matching_catch_4:function(){return V.apply(null,arguments)},
___assert_fail:function(a,c,b,d){ia=!0;throw"Assertion failed: "+M(a)+", at: "+[c?M(c):"unknown filename",b,d?M(d):"unknown function"]+" at "+wa();},___cxa_free_exception:ib,___cxa_find_matching_catch_2:function(){return V.apply(null,arguments)},_pthread_join:function(){},___buildEnvironment:ya,__addDays:pa,_strftime_l:function(a,c,b,d){return kb(a,c,b,d)},_pthread_cond_destroy:function(){return 0},___setErrNo:aa,_llvm_eh_typeid_for:function(a){return a},__ZN4wasm18createSafeHeapPassEv:function(){a.printErr("missing function: _ZN4wasm18createSafeHeapPassEv");
G(-1)},___cxa_begin_catch:function(a){var c=w.B[a];c&&!c.W&&(c.W=!0,fa.n--);c&&(c.Sa=!1);w.W.push(a);w.oc(w.Jb(a));return a},_emscripten_memcpy_big:function(a,c,b){J.set(J.subarray(c,c+b),a);return a},___cxa_end_catch:function(){a.setThrew(0);var e=w.W.pop();e&&(w.Fc(w.Jb(e)),w.ga=0)},___resumeException:function(a){w.ga||(w.ga=a);throw a;},___cxa_find_matching_catch_3:function(){return V.apply(null,arguments)},__exit:mb,_pthread_equal:function(a,c){return a==c},_pthread_getspecific:function(a){return Ea[a]||
0},__arraySum:za,___syscall91:function(a,c){r.H=c;try{var b=r.get(),f=r.get(),h=r.Yb[b];if(!h)return 0;f===h.fg&&(r.Ic(b,d.R(h.fd),f,h.flags),r.Yb[b]=null,h.pc&&U(h.jg));return 0}catch(l){return"undefined"!==typeof d&&l instanceof d.b||G(l),-l.t}},_pthread_cond_signal:function(){return 0},___cxa_thread_atexit:function(){return Ia.apply(null,arguments)},_pthread_mutex_destroy:function(){},___cxa_get_exception_ptr:function(a){return a},_pthread_once:qa,_getenv:na,_clock_gettime:function(a,c){var b;
if(0===a)b=Date.now();else if(1===a&&lb())b=ba();else return aa(k.g),-1;n[c>>2]=b/1E3|0;n[c+4>>2]=b%1E3*1E6|0;return 0},___map_file:function(){aa(k.m);return-1},___syscall54:function(a,c){r.H=c;try{var b=r.ea(),f=r.get();switch(f){case 21505:return b.tty?0:-k.da;case 21506:return b.tty?0:-k.da;case 21519:if(!b.tty)return-k.da;var h=r.get();return n[h>>2]=0;case 21520:return b.tty?-k.g:-k.da;case 21531:return h=r.get(),d.kb(b,f,h);case 21523:return b.tty?0:-k.da;default:G("bad ioctl syscall "+f)}}catch(l){return"undefined"!==
typeof d&&l instanceof d.b||G(l),-l.t}},___unlock:function(){},__isLeapYear:oa,_emscripten_get_now:ba,_pthread_setspecific:function(a,c){if(!(a in Ea))return k.g;Ea[a]=c;return 0},___cxa_atexit:function(){return Ia.apply(null,arguments)},___cxa_throw:function(a,c,b){w.B[a]={$b:a,Cb:a,type:c,Kb:b,ya:0,W:!1,Sa:!1};w.ga=a;"uncaught_exception"in fa?fa.n++:fa.n=1;throw a;},___cxa_rethrow:function(){var a=w.W.pop();w.B[a].Sa||(w.W.push(a),w.B[a].Sa=!0);w.ga=a;throw a;},___syscall6:function(a,c){r.H=c;try{var b=
r.ea();d.close(b);return 0}catch(f){return"undefined"!==typeof d&&f instanceof d.b||G(f),-f.t}},___syscall5:function(a,c){r.H=c;try{var b=r.Uc(),f=r.get(),h=r.get();return d.open(b,f,h).fd}catch(l){return"undefined"!==typeof d&&l instanceof d.b||G(l),-l.t}},___cxa_pure_virtual:function(){ia=!0;throw"Pure virtual function called!";},___cxa_allocate_exception:function(a){return L(a)},_atexit:Ia,___syscall140:function(a,c){r.H=c;try{var b=r.ea();r.get();var f=r.get(),h=r.get(),l=r.get();d.C(b,f,l);n[h>>
2]=b.position;b.ib&&0===f&&0===l&&(b.ib=null);return 0}catch(g){return"undefined"!==typeof d&&g instanceof d.b||G(g),-g.t}},_exit:function(a){mb(a)},___cxa_find_matching_catch:V,___syscall145:function(a,c){r.H=c;try{var b=r.ea(),f=r.get(),h=r.get();return r.Jc(b,f,h)}catch(l){return"undefined"!==typeof d&&l instanceof d.b||G(l),-l.t}},___syscall146:function(a,c){r.H=c;try{var b=r.ea(),f=r.get(),h=r.get();return r.Kc(b,f,h)}catch(l){return"undefined"!==typeof d&&l instanceof d.b||G(l),-l.t}},DYNAMICTOP_PTR:S,
tempDoublePtr:Yb,ABORT:ia,STACKTOP:P,STACK_MAX:Ca,cttz_i8:$b,___dso_handle:ac};// EMSCRIPTEN_START_ASM
var g=(function(global,env,buffer) {
"almost asm";var a=global.Int8Array;var b=new a(buffer);var c=global.Int16Array;var d=new c(buffer);var e=global.Int32Array;var f=new e(buffer);var g=global.Uint8Array;var h=new g(buffer);var i=global.Uint16Array;var j=new i(buffer);var k=global.Uint32Array;var l=new k(buffer);var m=global.Float32Array;var n=new m(buffer);var o=global.Float64Array;var p=new o(buffer);var q=global.byteLength;var r=env.DYNAMICTOP_PTR|0;var s=env.tempDoublePtr|0;var t=env.ABORT|0;var u=env.STACKTOP|0;var v=env.STACK_MAX|0;var w=env.cttz_i8|0;var x=env.___dso_handle|0;var y=0;var z=0;var A=0;var B=0;var C=global.NaN,D=global.Infinity;var E=0,F=0,G=0,H=0,I=0.0;var J=0;var K=global.Math.floor;var L=global.Math.abs;var M=global.Math.sqrt;var N=global.Math.pow;var O=global.Math.cos;var P=global.Math.sin;var Q=global.Math.tan;var R=global.Math.acos;var S=global.Math.asin;var T=global.Math.atan;var U=global.Math.atan2;var V=global.Math.exp;var W=global.Math.log;var X=global.Math.ceil;var Y=global.Math.imul;var Z=global.Math.min;var _=global.Math.max;var $=global.Math.clz32;var aa=env.abort;var ba=env.assert;var ca=env.enlargeMemory;var da=env.getTotalMemory;var ea=env.abortOnCannotGrowMemory;var fa=env.invoke_iiiiiiii;var ga=env.invoke_viiiii;var ha=env.invoke_iiiiiid;var ia=env.invoke_vi;var ja=env.invoke_vii;var ka=env.invoke_iiiiiii;var la=env.invoke_ii;var ma=env.invoke_id;var na=env.invoke_iiiiiiiiiiii;var oa=env.invoke_iiii;var pa=env.invoke_viiiiiiiiiiiiiii;var qa=env.invoke_viiiiii;var ra=env.invoke_iid;var sa=env.invoke_viiiiiii;var ta=env.invoke_viiiiiiiiii;var ua=env.invoke_iii;var va=env.invoke_iiiiii;var wa=env.invoke_i;var xa=env.invoke_iiiii;var ya=env.invoke_viii;var za=env.invoke_v;var Aa=env.invoke_iiiiiiiii;var Ba=env.invoke_iiiiid;var Ca=env.invoke_viiii;var Da=env.___syscall221;var Ea=env._strftime;var Fa=env._pthread_cond_wait;var Ga=env.___lock;var Ha=env._emscripten_get_now_is_monotonic;var Ia=env.__ZSt18uncaught_exceptionv;var Ja=env._pthread_key_create;var Ka=env._abort;var La=env.___gxx_personality_v0;var Ma=env.___cxa_find_matching_catch_4;var Na=env.___assert_fail;var Oa=env.___cxa_free_exception;var Pa=env.___cxa_find_matching_catch_2;var Qa=env._pthread_join;var Ra=env.___buildEnvironment;var Sa=env.__addDays;var Ta=env._strftime_l;var Ua=env._pthread_cond_destroy;var Va=env.___setErrNo;var Wa=env._llvm_eh_typeid_for;var Xa=env.__ZN4wasm18createSafeHeapPassEv;var Ya=env.___cxa_begin_catch;var Za=env._emscripten_memcpy_big;var _a=env.___cxa_end_catch;var $a=env.___resumeException;var ab=env.___cxa_find_matching_catch_3;var bb=env.__exit;var cb=env._pthread_equal;var db=env._pthread_getspecific;var eb=env.__arraySum;var fb=env.___syscall91;var gb=env._pthread_cond_signal;var hb=env.___cxa_thread_atexit;var ib=env._pthread_mutex_destroy;var jb=env.___cxa_get_exception_ptr;var kb=env._pthread_once;var lb=env._getenv;var mb=env._clock_gettime;var nb=env.___map_file;var ob=env.___syscall54;var pb=env.___unlock;var qb=env.__isLeapYear;var rb=env._emscripten_get_now;var sb=env._pthread_setspecific;var tb=env.___cxa_atexit;var ub=env.___cxa_throw;var vb=env.___cxa_rethrow;var wb=env.___syscall6;var xb=env.___syscall5;var yb=env.___cxa_pure_virtual;var zb=env.___cxa_allocate_exception;var Ab=env._atexit;var Bb=env.___syscall140;var Cb=env._exit;var Db=env.___cxa_find_matching_catch;var Eb=env.___syscall145;var Fb=env.___syscall146;var Gb=0.0;function Hb(newBuffer){if(q(newBuffer)&16777215||q(newBuffer)<=16777215||q(newBuffer)>2147483648)return false;b=new a(newBuffer);d=new c(newBuffer);f=new e(newBuffer);h=new g(newBuffer);j=new i(newBuffer);l=new k(newBuffer);n=new m(newBuffer);p=new o(newBuffer);buffer=newBuffer;return true}
// EMSCRIPTEN_START_FUNCS
function dm(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+16|0;i=h;e=d+1|0;g=pq(lj(c,d)|0,52526)|0;f[(f[a>>2]|0)+92>>2]=g;a:do if((e|0)!=(lxa(c)|0)){while(1){if(e>>>0>=(lxa(c)|0)>>>0)break a;g=lj(c,e)|0;if(!(qIa(b[g>>0]|0)|0))break a;d=rr(lj(c,e)|0)|0;e=e+1|0;if(Hga(d)|0){j=5;break}d=ZA(d)|0;g=J;if(g>>>0>0|(g|0)==0&d>>>0>65535)break;eja((f[a>>2]|0)+96|0,d,g)|0}if((j|0)==5){j=(CJ(d,52555,9)|0)!=0;b[(f[a>>2]|0)+114>>0]=j&1;break}a=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(52565)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[i+11>>0]=g;e=i}else{d=g+16&-16;y=0;e=la(150,d|0)|0;h=y;y=0;if(h&1){j=15;break}f[i>>2]=e;f[i+8>>2]=d|-2147483648;f[i+4>>2]=g}Pta(e,52565,g)|0;SBa(e+g|0,0);y=0;ja(583,a|0,i|0);h=y;y=0;if(h&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}e=Pa()|0;zta(i);if(d)j=17}else{y=0;za(3);y=0;j=15}while(0);if((j|0)==15){e=Pa()|0;j=17}if((j|0)==17)Oa(a|0);$a(e|0)}while(0);u=h;return e|0}function em(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;i=u;u=u+288|0;k=i+184|0;j=i+92|0;g=i;if(((b[a+24>>0]|0?(h=c+16|0,d=f[h>>2]|0,d|0):0)?(e=c+12|0,rCa(f[(f[e>>2]|0)+4>>2]|0)|0):0)?rCa(f[d+4>>2]|0)|0:0){d=a+28|0;c=c+8|0;Ot(k,f[d>>2]|0,f[c>>2]|0);a:do if(!(jca(k)|0)){y=0;ya(75,j|0,f[d>>2]|0,f[e>>2]|0);l=y;y=0;b:do if(l&1)d=Pa()|0;else{c:do if(!(jca(j)|0)){y=0;ya(75,g|0,f[d>>2]|0,f[h>>2]|0);l=y;y=0;d:do if(l&1)d=Pa()|0;else{do if(!(jca(g)|0)){d=f[a+20>>2]|0;gKa(d)|0;y=0;d=la(173,d+144|0)|0;l=y;y=0;if(!(l&1)?(f[d+16>>2]=f[c>>2],f[d+8>>2]=f[e>>2],f[d+12>>2]=f[h>>2],y=0,ia(364,d|0),l=y,y=0,!(l&1)):0){jva(f[a>>2]|0,d)|0;break}d=Pa()|0;hT(g);break d}while(0);hT(g);break c}while(0);hT(j);break b}while(0);hT(j);break a}while(0);hT(k);$a(d|0)}while(0);hT(k)}u=i;return}function fm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j;do if(b[a+12>>0]|0){i=Vea(76852,56200)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(g);jn(i,e)|0;Yp(i)|0;break}k=Pa()|0;pza(g);$a(k|0)}while(0);Ql(a,c+16|0);Ql(a,c+20|0);Ql(a,c+24|0);d=a+4|0;Zq(f[d>>2]|0,-2)|0;e=c+8|0;a:do switch(f[c+4>>2]|0){case 1:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,74)|0;break a}case 2:{Zq(f[d>>2]|0,75)|0;break a}case 4:{Zq(f[d>>2]|0,72)|0;break a}default:Ka()}break}case 2:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,76)|0;break a}case 2:{Zq(f[d>>2]|0,77)|0;break a}case 4:{Zq(f[d>>2]|0,78)|0;break a}case 8:{Zq(f[d>>2]|0,73)|0;break a}default:Ka()}break}default:Ka()}while(0);k=h[e>>0]|0;AN(a,k,k,gKa(f[c+12>>2]|0)|0);u=j;return}function gm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+80|0;i=j+48|0;d=j+68|0;e=j+24|0;g=j;h=j+64|0;NM(e,b,f[c+24>>2]|0);if(!(FBa(e)|0)){NM(g,b,f[c+28>>2]|0);if(FBa(g)|0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else{b=b+4|0;k=f[b>>2]|0;f[i>>2]=f[e>>2];f[i+4>>2]=f[e+4>>2];f[i+8>>2]=f[e+8>>2];f[i+12>>2]=f[e+12>>2];k=ep(k,c,i)|0;e=f[(f[b>>2]|0)+36>>2]|0;b=f[(f[e>>2]|0)+28>>2]|0;f[h>>2]=k;f[d>>2]=f[h>>2];f[i>>2]=f[g>>2];f[i+4>>2]=f[g+4>>2];f[i+8>>2]=f[g+8>>2];f[i+12>>2]=f[g+12>>2];dc[b&127](e,c,d,i);NBa(a)}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}u=j;return}function hm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+16|0;h=m+12|0;j=m+8|0;k=m;l=a+12|0;do if(!(b[l>>0]|0))e=c+4|0;else{d=Vea(wja(Vea(76852,59090)|0,c)|0,59105)|0;e=c+4|0;d=wj(d,f[e>>2]|0)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[h>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,i=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,n=y,y=0,!(n&1)):0){pza(h);jn(d,i)|0;Yp(d)|0;break}n=Pa()|0;pza(h);$a(n|0)}while(0);d=a+4|0;switch(f[e>>2]|0){case 1:{n=Zq(f[d>>2]|0,65)|0;PDa(j,csa(c+8|0)|0);Ln(n,f[j>>2]|0)|0;break}case 2:{j=Zq(f[d>>2]|0,66)|0;pxa(k,Eka(c+8|0)|0,J);n=k;wn(j,f[n>>2]|0,f[n+4>>2]|0)|0;break}case 3:{om(Zq(f[d>>2]|0,67)|0,Xqa(c+8|0)|0)|0;break}case 4:{n=Zq(f[d>>2]|0,68)|0;si(n,oja(c+8|0)|0,J)|0;break}default:Ka()}if(b[l>>0]|0)Vea(76852,59109)|0;u=m;return}function im(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;k=l+4|0;h=l;a:do if(!(f[d+4>>2]&1)){j=f[(f[a>>2]|0)+24>>2]|0;f[h>>2]=f[c>>2];f[k>>2]=f[h>>2];a=Yb[j&31](a,k,d,e,g&1)|0}else{Axa(k,d);y=0;a=ua(46,f[k>>2]|0,77596)|0;j=y;y=0;do if(!(j&1)){pza(k);d=f[a>>2]|0;if(g)Mb[f[d+24>>2]&4095](k,a);else Mb[f[d+28>>2]&4095](k,a);i=k+8+3|0;a=b[i>>0]|0;d=f[k>>2]|0;j=k+4|0;g=a<<24>>24<0?d:k;while(1){h=a<<24>>24<0;if((g|0)==((h?d:k)+((h?f[j>>2]|0:a&255)<<2)|0)){d=9;break}a=f[g>>2]|0;d=f[c>>2]|0;if(d|0){e=d+24|0;h=f[e>>2]|0;if((h|0)==(f[d+28>>2]|0)){h=f[(f[d>>2]|0)+52>>2]|0;a=gKa(a)|0;y=0;a=ua(h|0,d|0,a|0)|0;h=y;y=0;if(h&1){d=18;break}}else{f[e>>2]=h+4;f[h>>2]=a;a=gKa(a)|0}if(TDa(a)|0)f[c>>2]=0}g=g+4|0;a=b[i>>0]|0;d=f[k>>2]|0}if((d|0)==9){a=f[c>>2]|0;jta(k);break a}else if((d|0)==18){a=Pa()|0;jta(k);break}}else{a=Pa()|0;pza(k)}while(0);$a(a|0)}while(0);u=l;return a|0}function jm(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0;i=u;u=u+32|0;m=i+16|0;n=i+12|0;j=i;g=$ra(f[a+4>>2]|0)|0;f[g+4>>2]=d;l=g+8|0;b[l>>0]=e;rJa(m);$la(n,h[l>>0]|0,0);d=wf(c,g+12|0,m,f[n>>2]|0)|0;e=gKa(f[m>>2]|0)|0;if((e|0)==(h[l>>0]|0|0)){n=sra(a,lj(c,d)|0)|0;f[g+16>>2]=n;n=sra(a,lj(c,d+1|0)|0)|0;f[g+20>>2]=n;n=sra(a,lj(c,d+2|0)|0)|0;f[g+24>>2]=n;Ica(g);u=i;return g|0}c=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;a=uHa(53517)|0;do if(a>>>0<=4294967279){if(a>>>0<11){b[j+11>>0]=a;d=j}else{e=a+16&-16;y=0;d=la(150,e|0)|0;n=y;y=0;if(n&1){k=10;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=a}Pta(d,53517,a)|0;SBa(d+a|0,0);y=0;ja(583,c|0,j|0);n=y;y=0;if(n&1)e=1;else{y=0;ya(79,c|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(e)k=12}else{y=0;za(3);y=0;k=10}while(0);if((k|0)==10){d=Pa()|0;k=12}if((k|0)==12)Oa(c|0);$a(d|0);return 0}function km(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;g=i;a=osa(a+144|0)|0;if(b|0){dCa(g,b);f[a+8>>2]=f[g>>2]}h=a+12|0;g=0;while(1){if((g|0)==(d|0))break;AW(h,f[c+(g<<2)>>2]|0);g=g+1|0}h=(e|0)==-1;if(h)Do(a);else Ela(a,e);if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,19952)|0;g=0;while(1){if((g|0)==(d|0))break;if(g|0)Vea(76684,72307)|0;k=Vea(76684,19994)|0;j=EN(74808,c+(g<<2)|0)|0;Vea(vj(k,f[j>>2]|0)|0,72132)|0;g=g+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;k=qN(a)|0;Vea(vj(Vea(76684,20007)|0,k)|0,20024)|0;yY(b);Vea(vj(Vea(76684,20055)|0,d)|0,72307)|0;if(h)Vea(76684,20068)|0;else vj(76684,e)|0;Vea(76684,19943)|0;Vea(76684,19947)|0}u=i;return a|0}function lm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+64|0;h=l+48|0;i=l+32|0;j=l+16|0;k=l;a:do switch(f[b>>2]|0){case 3:{g=+Hoa(b);e=+Hoa(c);if(g==0.0&g==e){k=(JAa(g)|0)<0;tda(a,k?g:e);break a}d=e<g?e:g;b=((JAa(g)|0)&2147483647)>>>0>2139095040;c=((JAa(e)|0)&2147483647)>>>0>2139095040;if(!(c|(b|((JAa(d)|0)&2147483647)>>>0>2139095040))){tda(a,d);break a}if(b|c){tda(j,b?g:e);pja(i,j);uAa(k,12582912);wV(h,i,k);qja(a,h);break a}else{uAa(h,2143289344);qja(a,h);break a}}case 4:{g=+Goa(b);e=+Goa(c);if(g==0.0&g==e){Mra(g)|0;S5(a,(J|0)<0?g:e);break a}d=e<g?e:g;b=Mra(g)|0;c=J&2147483647;b=c>>>0>2146435072|(c|0)==2146435072&b>>>0>0;c=Mra(e)|0;m=J&2147483647;c=m>>>0>2146435072|(m|0)==2146435072&c>>>0>0;m=Mra(d)|0;n=J&2147483647;if(!(c|(b|(n>>>0>2146435072|(n|0)==2146435072&m>>>0>0)))){S5(a,d);break a}if(b|c){S5(j,b?g:e);n=j+8|0;aia(i,f[j>>2]|0,f[n>>2]|0,f[n+4>>2]|0);Ysa(k,0,524288);wV(h,i,k);Bca(a,h);break a}else{Ysa(h,0,2146959360);Bca(a,h);break a}}default:Ka()}while(0);u=l;return}function mm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+64|0;h=l+48|0;i=l+32|0;j=l+16|0;k=l;a:do switch(f[b>>2]|0){case 3:{g=+Hoa(b);e=+Hoa(c);if(g==0.0&g==e){k=(JAa(g)|0)<0;tda(a,k?e:g);break a}d=g<e?e:g;b=((JAa(g)|0)&2147483647)>>>0>2139095040;c=((JAa(e)|0)&2147483647)>>>0>2139095040;if(!(c|(b|((JAa(d)|0)&2147483647)>>>0>2139095040))){tda(a,d);break a}if(b|c){tda(j,b?g:e);pja(i,j);uAa(k,12582912);wV(h,i,k);qja(a,h);break a}else{uAa(h,2143289344);qja(a,h);break a}}case 4:{g=+Goa(b);e=+Goa(c);if(g==0.0&g==e){Mra(g)|0;S5(a,(J|0)<0?e:g);break a}d=g<e?e:g;b=Mra(g)|0;c=J&2147483647;b=c>>>0>2146435072|(c|0)==2146435072&b>>>0>0;c=Mra(e)|0;m=J&2147483647;c=m>>>0>2146435072|(m|0)==2146435072&c>>>0>0;m=Mra(d)|0;n=J&2147483647;if(!(c|(b|(n>>>0>2146435072|(n|0)==2146435072&m>>>0>0)))){S5(a,d);break a}if(b|c){S5(j,b?g:e);n=j+8|0;aia(i,f[j>>2]|0,f[n>>2]|0,f[n+4>>2]|0);Ysa(k,0,524288);wV(h,i,k);Bca(a,h);break a}else{Ysa(h,0,2146959360);Bca(a,h);break a}}default:Ka()}while(0);u=l;return}function nm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;g=i+24|0;h=i;NBa(g);d=f[c+12>>2]|0;if((d|0)!=0?(YX(h,b,d),f[g>>2]=f[h>>2],f[g+4>>2]=f[h+4>>2],f[g+8>>2]=f[h+8>>2],f[g+12>>2]=f[h+12>>2],f[g+16>>2]=f[h+16>>2],FBa(g)|0):0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else e=4;a:do if((e|0)==4){d=f[c+16>>2]|0;do if(d|0){YX(h,b,d);if(FBa(h)|0){f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2];f[a+16>>2]=f[h+16>>2];f[a+20>>2]=f[h+20>>2];break a}h=Y$(h)|0;if((h|0)==0&(J|0)==0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2];break a}else break}while(0);f[g+16>>2]=f[c+8>>2];f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}while(0);u=i;return}function om(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;do if(!(b[a+12>>0]|0))h=a+4|0;else{d=Vea(wj(Vea(76852,58991)|0,c)|0,54382)|0;h=a+4|0;d=Vea(vj(d,(f[h>>2]|0)-(f[a>>2]|0)|0)|0,72083)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[i>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(i);jn(d,g)|0;Yp(d)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);d=c&255;b[i>>0]=d;e=f[h>>2]|0;g=a+8|0;if(e>>>0<(f[g>>2]|0)>>>0){b[e>>0]=d;e=(f[h>>2]|0)+1|0;f[h>>2]=e}else{hD(a,i);e=f[h>>2]|0}d=c>>>8&255;b[i>>0]=d;if(e>>>0<(f[g>>2]|0)>>>0){b[e>>0]=d;e=(f[h>>2]|0)+1|0;f[h>>2]=e}else{hD(a,i);e=f[h>>2]|0}d=c>>>16&255;b[i>>0]=d;if(e>>>0<(f[g>>2]|0)>>>0){b[e>>0]=d;e=(f[h>>2]|0)+1|0;f[h>>2]=e}else{hD(a,i);e=f[h>>2]|0}d=c>>>24&255;b[i>>0]=d;if(e>>>0<(f[g>>2]|0)>>>0){b[e>>0]=d;f[h>>2]=(f[h>>2]|0)+1}else hD(a,i);u=j;return a|0}function pm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+4|0;a:do if(b){if(b>>>0>1073741823){c=zb(8)|0;y=0;ja(76,c|0,70649);a=y;y=0;if(a&1){a=Pa()|0;Oa(c|0);$a(a|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}l=nV(b<<2)|0;c=f[a>>2]|0;f[a>>2]=l;if(c|0)$Ja(c);f[d>>2]=b;c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}e=a+8|0;c=f[e>>2]|0;if(c|0){d=f[c+4>>2]|0;k=b+-1|0;l=(k&b|0)==0;if(!l){if(d>>>0>=b>>>0)d=(d>>>0)%(b>>>0)|0}else d=d&k;f[(f[a>>2]|0)+(d<<2)>>2]=e;while(1){j=c;b:while(1)while(1){c=f[j>>2]|0;if(!c)break a;e=f[c+4>>2]|0;if(!l){if(e>>>0>=b>>>0)e=(e>>>0)%(b>>>0)|0}else e=e&k;if((e|0)==(d|0)){j=c;continue b}g=(f[a>>2]|0)+(e<<2)|0;if(!(f[g>>2]|0))break b;h=c+8|0;i=c;while(1){g=f[i>>2]|0;if(!g){g=0;break}if((f[h>>2]|0)==(f[g+8>>2]|0))i=g;else break}f[j>>2]=g;f[i>>2]=f[f[(f[a>>2]|0)+(e<<2)>>2]>>2];f[f[(f[a>>2]|0)+(e<<2)>>2]>>2]=c}f[g>>2]=j;d=e}}}else{c=f[a>>2]|0;f[a>>2]=0;if(c|0)$Ja(c);f[d>>2]=0}while(0);return}function qm(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;j=l+32|0;e=l;g=l+8|0;h=a+12|0;do if(b[h>>0]|0){i=Vea(76852,54526)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(i,d)|0;Yp(i)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);tpa(g,a);y=0;ja(2010,e|0,g|0);m=y;y=0;if(m&1){m=Pa()|0;D8(g);$a(m|0)}D8(g);do if(!(b[h>>0]|0)){a=e;c=f[a+4>>2]|0;a=f[a>>2]|0}else{d=Vea(76852,55977)|0;c=e;a=f[c>>2]|0;c=f[c+4>>2]|0;d=Vea(oj(d,a,c)|0,54676)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,k=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(d,k)|0;Yp(d)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);J=c;u=l;return a|0}function rm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;c=k;a:do if((b|0)!=(a|0)){i=a+16|0;h=f[i>>2]|0;j=b+16|0;g=h;do if((h|0)!=(a|0)){d=f[j>>2]|0;if((d|0)!=(b|0)){f[i>>2]=d;f[j>>2]=g;break a}h=f[(f[d>>2]|0)+12>>2]|0;c=gKa(a)|0;y=0;ja(h|0,d|0,c|0);h=y;y=0;if(!(h&1)){h=f[j>>2]|0;Lb[f[(f[h>>2]|0)+16>>2]&511](h);f[j>>2]=f[i>>2];f[i>>2]=c;break a}}else{if((f[j>>2]|0)!=(b|0)){g=f[(f[h>>2]|0)+12>>2]|0;c=gKa(b)|0;y=0;ja(g|0,h|0,c|0);h=y;y=0;if(h&1)break;h=f[i>>2]|0;Lb[f[(f[h>>2]|0)+16>>2]&511](h);f[i>>2]=f[j>>2];f[j>>2]=c;break a}c=gKa(c)|0;y=0;ja(f[(f[h>>2]|0)+12>>2]|0,h|0,c|0);g=y;y=0;if((!(g&1)?(g=f[i>>2]|0,Lb[f[(f[g>>2]|0)+16>>2]&511](g),f[i>>2]=0,g=f[j>>2]|0,a=f[(f[g>>2]|0)+12>>2]|0,d=gKa(h)|0,y=0,ja(a|0,g|0,d|0),h=y,y=0,!(h&1)):0)?(e=f[j>>2]|0,Lb[f[(f[e>>2]|0)+16>>2]&511](e),f[j>>2]=0,f[i>>2]=d,i=f[(f[c>>2]|0)+12>>2]|0,e=gKa(b)|0,y=0,ja(i|0,c|0,e|0),i=y,y=0,!(i&1)):0){Lb[f[(f[c>>2]|0)+16>>2]&511](c);f[j>>2]=e;break a}j=ab(0)|0;lDa(j)}while(0);j=ab(0)|0;lDa(j)}while(0);u=k;return}function sm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;j=u;u=u+32|0;d=j+20|0;h=j+16|0;g=j+12|0;k=j;i=gta(f[a+4>>2]|0)|0;m=po(a,lj(c,1)|0)|0;f[i+8>>2]=m;e=f[a>>2]|0;f[h>>2]=m;f[d>>2]=f[h>>2];e=J$(e,d)|0;h=i+4|0;do if(!e){m=f[a>>2]|0;f[g>>2]=f[i+8>>2];f[d>>2]=f[g>>2];d=I$(m,d)|0;if(d|0?(f[d+12>>2]|0)==3:0){d=d+20|0;break}g=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(52953)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;d=k}else{a=e+16&-16;y=0;d=la(150,a|0)|0;m=y;y=0;if(m&1){l=14;break}f[k>>2]=d;f[k+8>>2]=a|-2147483648;f[k+4>>2]=e}Pta(d,52953,e)|0;SBa(d+e|0,0);y=0;Ca(79,g|0,k|0,f[c+28>>2]|0,f[c+32>>2]|0);m=y;y=0;if(m&1)a=1;else{y=0;ya(79,g|0,64,361);y=0;a=0}d=Pa()|0;zta(k);if(a)l=16}else{y=0;za(3);y=0;l=14}while(0);if((l|0)==14){d=Pa()|0;l=16}if((l|0)==16)Oa(g|0);$a(d|0)}else d=e+4|0;while(0);f[h>>2]=f[d>>2];u=j;return i|0}function tm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;j=a+4|0;g=b;do if((j|0)!=(b|0)?(k=f[e>>2]|0,h=f[b+16>>2]|0,k>>>0>=h>>>0):0){if(h>>>0<k>>>0){i=1;d=g}else{f[c>>2]=g;f[d>>2]=g;b=d;break}while(1){if((i|0)<=0)break;h=d;d=f[h+4>>2]|0;a:do if(!d)while(1){d=f[h+8>>2]|0;if((f[d>>2]|0)==(h|0))break a;h=d}else while(1){h=f[d>>2]|0;if(!h)break;else d=h}while(0);i=i+-1|0}h=d;if((h|0)!=(j|0)?k>>>0>=(f[d+16>>2]|0)>>>0:0){b=Hx(a,c,e)|0;break}b=b+4|0;if(!(f[b>>2]|0)){f[c>>2]=g;break}else{f[c>>2]=h;b=h;break}}else l=3;while(0);do if((l|0)==3){h=f[b>>2]|0;if((f[a>>2]|0)!=(b|0)){if(!h){d=b;while(1){g=f[d+8>>2]|0;if((f[g>>2]|0)==(d|0))d=g;else break}}else{g=h;while(1){d=f[g+4>>2]|0;if(!d)break;else g=d}}if((f[g+16>>2]|0)>>>0>=(f[e>>2]|0)>>>0){b=Hx(a,c,e)|0;break}}if(!h){f[c>>2]=b;break}else{b=g;f[c>>2]=b;b=b+4|0;break}}while(0);return b|0}function um(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;i=u;u=u+16|0;g=i+12|0;j=i;do if(b[a+12>>0]|0){h=Vea(76852,56412)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}l=Pa()|0;pza(g);$a(l|0)}while(0);d=f[a+112>>2]|0;if(d|0){if(f[d+4>>2]|0){l=Jg(a)|0;f[c+8>>2]=l}u=i;return}h=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(56428)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[j+11>>0]=g;d=j}else{e=g+16&-16;y=0;d=la(150,e|0)|0;l=y;y=0;if(l&1){k=15;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=g}Pta(d,56428,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,j|0);l=y;y=0;if(l&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(e)k=17}else{y=0;za(3);y=0;k=15}while(0);if((k|0)==15){d=Pa()|0;k=17}if((k|0)==17)Oa(h|0);$a(d|0)}function vm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j;XN(b);h=gT()|0;i=OG(f[18676]|0)|0;d=UAa(h,1)|0;l6(gKa(f[d>>2]|0)|0,i)|0;EM(i,f[18829]|0);EM(i,f[18790]|0);EM(i,f[18791]|0);d=UAa(i,3)|0;d=gKa(f[d>>2]|0)|0;l6(d,gKa(yO(f[18792]|0)|0)|0)|0;d=UAa(i,3)|0;Mq(f[d>>2]|0);d=f[b+16>>2]|0;c=f[b+12>>2]|0;while(1){if((c|0)==(d|0))break;e=UAa(i,3)|0;GM(f[e>>2]|0,f[c>>2]|0);c=c+4|0}c=f[b+80>>2]|0;e=0;d=f[b+76>>2]|0;while(1){if((d|0)==(c|0))break;hqa(g,d);k=aqa(e,g)|0;Kza(g);e=k;d=d+16|0}d=a+68|0;f[d>>2]=e;c=1;while(1)if(c>>>0<e>>>0)c=c<<1;else break;f[d>>2]=c;d=f[b+40>>2]|0;c=f[b+36>>2]|0;while(1){e=UAa(i,3)|0;e=f[e>>2]|0;if((c|0)==(d|0))break;k=gKa(e)|0;l6(k,$f(a,f[c>>2]|0)|0)|0;c=c+4|0}nf(a,e,b);k=UAa(i,3)|0;cG(f[k>>2]|0,b);u=j;return h|0}function wm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;i=n+8|0;j=n+4|0;k=n;do if((f[b+4>>2]|0)==5){l=a+48|0;m=a+36|0;while(1){f[j>>2]=b;b=EN(l,j)|0;b=f[b>>2]|0;if(!b){h=22;break}e=wAa(b)|0;if(!e){d=mAa(b)|0;if(d|0){c=f[d+32>>2]|0;if(!c)c=0;else c=(f[c+4>>2]|0)==5&1;if((((f[(f[d+28>>2]|0)+4>>2]|0)==5&1)+c|0)==1)zm(a,d,-1)}}else{g=f[e+12>>2]|0;if(!g)c=0;else c=(f[g+4>>2]|0)==5&1;d=f[e+16>>2]|0;if(d)c=((f[d+4>>2]|0)==5&1)+c|0;if((c|0)==1){f[k>>2]=f[e+8>>2];f[i>>2]=f[k>>2];fA(a,i,-1,g)}}d=b+4|0;if((f[d>>2]|0)==5){h=22;break}c=xAa(b)|0;if(!c){c=YAa(b)|0;if(c){qO(c);if((f[d>>2]|0)!=5){h=25;break}}else h=23}else{c=c+8|0;if(pJa(f[c>>2]|0)|0?(h=(vK(m,c)|0)+4|0,(f[h>>2]|0)!=0):0){h=25;break}else h=23}if((h|0)==23){h=0;f[d>>2]=5}}if((h|0)==22)break;else if((h|0)==25)break}while(0);u=n;return}function xm(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;m=o;c=d;while(1){if((c|0)==(e|0)){c=e;break}if(!(f[c>>2]|0))break;c=c+4|0}f[j>>2]=h;f[g>>2]=d;l=i;n=a+8|0;a:while(1){if((h|0)==(i|0)|(d|0)==(e|0)){p=33;break}a=psa(f[n>>2]|0)|0;k=yq(h,g,c-d>>2,l-h|0)|0;if(a|0)psa(a)|0;switch(k|0){case -1:{p=10;break a}case 0:{d=1;break a}default:{}}h=(f[j>>2]|0)+k|0;f[j>>2]=h;if((h|0)==(i|0)){p=32;break}if((c|0)==(e|0)){d=f[g>>2]|0;c=e;continue}h=psa(f[n>>2]|0)|0;d=hz(m,0)|0;if(h|0)psa(h)|0;if((d|0)==-1){d=2;p=31;break}if(d>>>0>(l-(f[j>>2]|0)|0)>>>0){d=1;p=31;break}else h=m;while(1){if(!d)break;a=b[h>>0]|0;k=f[j>>2]|0;f[j>>2]=k+1;b[k>>0]=a;h=h+1|0;d=d+-1|0}d=(f[g>>2]|0)+4|0;f[g>>2]=d;c=d;while(1){if((c|0)==(e|0)){c=e;break}if(!(f[c>>2]|0))break;c=c+4|0}h=f[j>>2]|0}if((p|0)==10){f[j>>2]=h;while(1){if((d|0)==(f[g>>2]|0))break;e=f[d>>2]|0;c=psa(f[n>>2]|0)|0;h=hz(h,e)|0;if(c|0)psa(c)|0;if((h|0)==-1)break;h=(f[j>>2]|0)+h|0;f[j>>2]=h;d=d+4|0}f[g>>2]=d;d=2}else if((p|0)!=31)if((p|0)==32){d=f[g>>2]|0;p=33}if((p|0)==33)d=(d|0)!=(e|0)&1;u=o;return d|0}function ym(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;j=n+40|0;k=n+12|0;l=n+24|0;m=n;a:do if((((((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==90:0)?(e=a+2|0,(b[e>>0]|0)==102):0)?(h=Cf(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,(f[d>>2]|0)!=(g|0)):0){HL(m,g+-24|0);y=0;oa(77,m|0,0,72296)|0;g=y;y=0;do if(g&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,72083)|0;g=y;y=0;if(g&1){a=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);a=h;break a}while(0);zta(m);$a(a|0)}while(0);u=n;return a|0}function zm(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=u;u=u+64|0;m=q+48|0;o=q+40|0;r=q+24|0;h=q+8|0;k=q;l=q+20|0;p=q+16|0;gua(r);n=c+8|0;Bwa(o,n);iua(h,n);n=c+32|0;i=m+4|0;j=o+4|0;g=f[h>>2]|0;h=f[h+4>>2]|0;while(1){if(!(Cpa(f[o>>2]|0,f[j>>2]|0,g,h)|0)){g=3;break}y=0;e=la(164,o|0)|0;s=y;y=0;if(s&1){g=4;break}e=f[e>>2]|0;f[k>>2]=e;y=0;Ca(59,m|0,r|0,k|0,k|0);s=y;y=0;if(s&1){g=10;break}if(b[i>>0]|0?(f[l>>2]=e,s=f[n>>2]|0,y=0,f[m>>2]=f[l>>2],Ca(60,a|0,m|0,d|0,s|0),s=y,y=0,s&1):0){g=10;break}bva(o)}do if((g|0)==3){e=c+24|0;y=0;Ca(59,o|0,r|0,e|0,e|0);s=y;y=0;if(s&1){e=Pa()|0;break}if(b[o+4>>0]|0?(f[p>>2]=f[e>>2],s=f[n>>2]|0,y=0,f[m>>2]=f[p>>2],Ca(60,a|0,m|0,d|0,s|0),s=y,y=0,s&1):0){e=Pa()|0;break}Cta(r);u=q;return}else if((g|0)==4){e=Pa()|0;g=11}else if((g|0)==10){e=Pa()|0;g=11}while(0);Cta(r);$a(e|0)}function Am(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+4|0;g=b+-4|0;e=a+8|0;switch(b-a>>2|0){case 1:case 0:{d=1;break}case 2:{d=f[g>>2]|0;e=f[a>>2]|0;if(DS(f[f[c>>2]>>2]|0,f[c+4>>2]|0,d,e)|0){f[a>>2]=d;f[g>>2]=e;d=1}else d=1;break}case 3:{vs(a,d,g,c)|0;d=1;break}case 4:{Hu(a,d,e,g,c)|0;d=1;break}case 5:{ir(a,d,e,a+12|0,g,c)|0;d=1;break}default:{vs(a,d,e,c)|0;k=c+4|0;j=a+12|0;d=0;while(1){if((j|0)==(b|0)){e=1;d=0;break}i=f[j>>2]|0;h=f[e>>2]|0;if(DS(f[f[c>>2]>>2]|0,f[k>>2]|0,i,h)|0)g=j;else{e=j;j=j+4|0;continue}while(1){f[g>>2]=h;if((e|0)==(a|0)){e=a;break}g=e+-4|0;h=f[g>>2]|0;if(!(DS(f[f[c>>2]>>2]|0,f[k>>2]|0,i,h)|0))break;else{l=e;e=g;g=l}}f[e>>2]=i;d=d+1|0;g=j+4|0;if((d|0)==8){e=0;d=(g|0)==(b|0);break}else{e=j;j=g}}d=d|e}}return d|0}function Bm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;g=c+12|0;do if(b[g>>0]|0){h=Vea(76852,54526)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(h,e)|0;Yp(h)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);l=Im(c)|0;Ysa(a,l,J);Bca(i,a);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];f[a+12>>2]=f[i+12>>2];do if(b[g>>0]|0){c=Vea(76852,55914)|0;f[i>>2]=f[a>>2];f[i+4>>2]=f[a+4>>2];f[i+8>>2]=f[a+8>>2];f[i+12>>2]=f[a+12>>2];a=Vea(iv(c,i)|0,54676)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,j=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(a,j)|0;Yp(a)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);u=k;return}function Cm(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;g=a+12|0;do if(b[g>>0]|0){e=Vea(76852,54526)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(e,d)|0;Yp(e)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);d=Tk(a)|0;d=(((Tk(a)|0)&255)<<8|d&255)&65535;do if(b[g>>0]|0){a=Vea(tj(Vea(76852,55953)|0,d)|0,55938)|0;c=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[c>>2]=f[c>>2]&-75|8;a=tj(a,d)|0;c=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[c>>2]=f[c>>2]&-75|2;a=Vea(a,54676)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,i=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(a,i)|0;Yp(a)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);u=j;return d|0}function Dm(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;g=a+12|0;do if(b[g>>0]|0){e=Vea(76852,54526)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(e,d)|0;Yp(e)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);d=(Cm(a)|0)&65535;d=((Cm(a)|0)&65535)<<16|d;do if(b[g>>0]|0){a=Vea(vj(Vea(76852,55942)|0,d)|0,55938)|0;c=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[c>>2]=f[c>>2]&-75|8;a=vj(a,d)|0;c=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[c>>2]=f[c>>2]&-75|2;a=Vea(a,54676)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,i=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(a,i)|0;Yp(a)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);u=j;return d|0}function Em(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0;k=a+4|0;c=f[k>>2]|0;j=a+100|0;if(c>>>0<(f[j>>2]|0)>>>0){f[k>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;switch(c|0){case 43:case 45:{d=(c|0)==45&1;c=f[k>>2]|0;if(c>>>0<(f[j>>2]|0)>>>0){f[k>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;if((b|0)!=0&(c+-48|0)>>>0>9?(f[j>>2]|0)!=0:0)f[k>>2]=(f[k>>2]|0)+-1;break}default:d=0}if((c+-48|0)>>>0>9)if(!(f[j>>2]|0)){d=-2147483648;c=0}else{f[k>>2]=(f[k>>2]|0)+-1;d=-2147483648;c=0}else{i=0;do{i=c+-48+(i*10|0)|0;c=f[k>>2]|0;if(c>>>0<(f[j>>2]|0)>>>0){f[k>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;e=(c+-48|0)>>>0<10}while(e&(i|0)<214748364);b=((i|0)<0)<<31>>31;if(e){e=i;do{b=oea(e|0,b|0,10,0)|0;e=J;c=Hsa(c|0,((c|0)<0)<<31>>31|0,-48,-1)|0;e=Hsa(c|0,J|0,b|0,e|0)|0;b=J;c=f[k>>2]|0;if(c>>>0<(f[j>>2]|0)>>>0){f[k>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0}while((c+-48|0)>>>0<10&((b|0)<21474836|(b|0)==21474836&e>>>0<2061584302));g=c;i=e}else g=c;c=f[j>>2]|0;if((g+-48|0)>>>0<10)do{e=f[k>>2]|0;if(e>>>0<c>>>0){f[k>>2]=e+1;e=h[e>>0]|0}else{e=kz(a)|0;c=f[j>>2]|0}}while((e+-48|0)>>>0<10);if(c|0)f[k>>2]=(f[k>>2]|0)+-1;k=(d|0)!=0;c=Aoa(0,0,i|0,b|0)|0;d=k?J:b;c=k?c:i}J=d;return c|0}function Fm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;h=u;u=u+32|0;d=h+20|0;l=h+16|0;e=h+12|0;i=h;g=fta(f[a+4>>2]|0)|0;m=po(a,lj(c,1)|0)|0;f[g+8>>2]=m;k=f[a>>2]|0;f[l>>2]=m;f[d>>2]=f[l>>2];if(J$(k,d)|0?(m=f[a>>2]|0,f[e>>2]=f[g+8>>2],f[d>>2]=f[e>>2],m=(J$(m,d)|0)+12|0,(b[m>>0]|0)==0):0){g=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(52886)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[i+11>>0]=e;d=i}else{a=e+16&-16;y=0;d=la(150,a|0)|0;m=y;y=0;if(m&1){j=11;break}f[i>>2]=d;f[i+8>>2]=a|-2147483648;f[i+4>>2]=e}Pta(d,52886,e)|0;SBa(d+e|0,0);y=0;Ca(79,g|0,i|0,f[c+28>>2]|0,f[c+32>>2]|0);m=y;y=0;if(m&1)a=1;else{y=0;ya(79,g|0,64,361);y=0;a=0}d=Pa()|0;zta(i);if(a)j=13}else{y=0;za(3);y=0;j=11}while(0);if((j|0)==11){d=Pa()|0;j=13}if((j|0)==13)Oa(g|0);$a(d|0)}m=sra(a,lj(c,2)|0)|0;f[g+12>>2]=m;Sva(g);u=h;return g|0}function Gm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+48|0;j=n+32|0;h=n+16|0;i=n+4|0;k=n+24|0;l=n+8|0;m=n;do if(b[a+12>>0]|0){d=Vea(76852,56666)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[j>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,o=y,y=0,!(o&1)):0){pza(j);jn(d,g)|0;Yp(d)|0;break}o=Pa()|0;pza(j);$a(o|0)}while(0);g=c+8|0;Bwa(j,g);iua(h,g);g=j+4|0;e=f[h>>2]|0;d=f[h+4>>2]|0;while(1){if(!(Cpa(f[j>>2]|0,f[g>>2]|0,e,d)|0))break;o=ppa(j)|0;f[i>>2]=f[o>>2];Ql(a,i);bva(j)}Ql(a,c+28|0);d=a+4|0;o=Zq(f[d>>2]|0,17)|0;f[l>>2]=f[c+24>>2];f[j>>2]=f[l>>2];PDa(k,xP(a,j)|0);o=Un(o,f[k>>2]|0)|0;PDa(m,0);Un(o,f[m>>2]|0)|0;if((f[c+4>>2]|0)==5)Zq(f[d>>2]|0,0)|0;u=n;return}function Hm(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=c;p=a;e=0;a:while(1){if(!(e>>>0<d>>>0&a>>>0<c>>>0)){q=24;break}n=b[a>>0]|0;k=n&255;g=a+1|0;do if(n<<24>>24<=-1){if((n&255)<194){q=24;break a}i=a+2|0;m=a;f=o-m|0;if((n&255)<224){if((f|0)<2){q=24;break a}if((b[g>>0]&-64)<<24>>24==-128){a=i;break}else{q=24;break a}}l=a+3|0;if((n&255)<240){if((f|0)<3){q=24;break a}i=b[i>>0]|0;f=h[g>>0]|0;g=f&224;switch(n<<24>>24){case -32:{if((g|0)!=160){a=m;break a}break}case -19:{if((g|0)!=128){a=m;break a}break}default:if((f&192|0)!=128){a=m;break a}}if((i&-64)<<24>>24==-128){a=l;break}else{q=24;break a}}if((n&255)>=245){q=24;break a}if((d-e|0)>>>0<2|(f|0)<4){q=24;break a}j=b[g>>0]|0;i=b[i>>0]|0;f=b[l>>0]|0;g=j&255;switch(n<<24>>24){case -16:{if((j+112&255)>=48){a=m;break a}break}case -12:{if((g&240|0)!=128){a=m;break a}break}default:if((g&192|0)!=128){a=m;break a}}if(!((i&-64)<<24>>24==-128&(f&-64)<<24>>24==-128)){q=24;break a}if((g<<12&196608|k<<18&1835008)>>>0>1114111){q=24;break a}else{e=e+1|0;a=a+4|0}}else a=g;while(0);e=e+1|0}return a-p|0}function Im(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;i=k;h=a+12|0;do if(b[h>>0]|0){e=Vea(76852,54526)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;g=y;y=0;if(!(g&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,g=y,y=0,!(g&1)):0){pza(i);jn(e,d)|0;Yp(e)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);g=Dm(a)|0;e=Dm(a)|0;do if(b[h>>0]|0){c=Vea(nj(Vea(76852,55927)|0,g,e)|0,55938)|0;d=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[d>>2]=f[d>>2]&-75|8;c=nj(c,g,e)|0;d=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[d>>2]=f[d>>2]&-75|2;c=Vea(c,54676)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[i>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,j=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,h=y,y=0,!(h&1)):0){pza(i);jn(c,j)|0;Yp(c)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);J=e;u=k;return g|0}function Jm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;g=c+12|0;do if(b[g>>0]|0){h=Vea(76852,54526)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(h,e)|0;Yp(h)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);uAa(a,Dm(c)|0);qja(i,a);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];f[a+12>>2]=f[i+12>>2];do if(b[g>>0]|0){c=Vea(76852,55964)|0;f[i>>2]=f[a>>2];f[i+4>>2]=f[a+4>>2];f[i+8>>2]=f[a+8>>2];f[i+12>>2]=f[a+12>>2];a=Vea(iv(c,i)|0,54676)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,j=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(a,j)|0;Yp(a)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);u=k;return}function Km(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+64|0;i=m+40|0;j=m+12|0;k=m+24|0;l=m;a:do if(((((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==122:0)?(n=a+2|0,g=fc(n,c,d)|0,(g|0)!=(n|0)):0)?(h=d+4|0,e=f[h>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(l,e+-24|0);y=0;oa(77,l|0,0,72310)|0;n=y;y=0;do if(n&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,k|0,72083)|0;n=y;y=0;if(n&1){a=Pa()|0;zta(k);break}f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}hM(i,j);nu((f[h>>2]|0)+-24|0,i);Xka(i);zta(j);zta(k);zta(l);a=g;break a}while(0);zta(l);$a(a|0)}while(0);u=m;return a|0}function Lm(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+64|0;i=m+40|0;j=m+12|0;k=m+24|0;l=m;a:do if(((((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==116:0)?(n=a+2|0,g=ic(n,c,d)|0,(g|0)!=(n|0)):0)?(h=d+4|0,e=f[h>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(l,e+-24|0);y=0;oa(77,l|0,0,72310)|0;n=y;y=0;do if(n&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,k|0,72083)|0;n=y;y=0;if(n&1){a=Pa()|0;zta(k);break}f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}hM(i,j);nu((f[h>>2]|0)+-24|0,i);Xka(i);zta(j);zta(k);zta(l);a=g;break a}while(0);zta(l);$a(a|0)}while(0);u=m;return a|0}function Mm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;c=o;k=o+4|0;f[c>>2]=b;d=f[a+28>>2]|0;if(d|0?(h=Vs(d+64|0,c)|0,h|0):0){c=h+12|0;zD(k,(f[(f[a+24>>2]|0)+132>>2]|0)+((f[c>>2]|0)*12|0)|0);e=a+32|0;g=h+16|0;d=h+20|0;do if(tqa(e,f[c>>2]|0,f[g>>2]|0,f[d>>2]|0)|0){f[e>>2]=f[c>>2];f[e+4>>2]=f[c+4>>2];f[e+8>>2]=f[c+8>>2];y=0;c=ua(53,f[a>>2]|0,37660)|0;h=y;y=0;if(((((((!(h&1)?(y=0,i=ua(100,c|0,k|0)|0,h=y,y=0,!(h&1)):0)?(y=0,j=ua(53,i|0,58655)|0,i=y,y=0,!(i&1)):0)?(y=0,l=ua(68,j|0,f[g>>2]|0)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(53,l|0,58655)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(68,m|0,f[d>>2]|0)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(67,n|0,10)|0,n=y,y=0,!(n&1)):0)?(y=0,ua(98,f[a>>2]|0,f[a+4>>2]|0)|0,n=y,y=0,!(n&1)):0)break;o=Pa()|0;zta(k);$a(o|0)}while(0);zta(k)}bl(a,b);u=o;return}function Nm(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;j=l+28|0;e=l+24|0;g=l;h=a+12|0;do if(b[h>>0]|0){i=Vea(76852,54526)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(i,d)|0;Yp(i)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);spa(g,a);y=0;ja(2004,e|0,g|0);m=y;y=0;if(m&1){m=Pa()|0;D8(g);$a(m|0)}D8(g);do if(!(b[h>>0]|0))a=f[e>>2]|0;else{c=Vea(76852,58137)|0;a=f[e>>2]|0;c=Vea(vj(c,a)|0,54676)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,k=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(c,k)|0;Yp(c)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);u=l;return a|0}function Om(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;j=l+28|0;e=l+24|0;g=l;h=a+12|0;do if(b[h>>0]|0){i=Vea(76852,54526)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(i,d)|0;Yp(i)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);upa(g,a);y=0;ja(2008,e|0,g|0);m=y;y=0;if(m&1){m=Pa()|0;D8(g);$a(m|0)}D8(g);do if(!(b[h>>0]|0))a=f[e>>2]|0;else{c=Vea(76852,54887)|0;a=f[e>>2]|0;c=Vea(wj(c,a)|0,54676)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,k=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(j);jn(c,k)|0;Yp(c)|0;break}m=Pa()|0;pza(j);$a(m|0)}while(0);u=l;return a|0}function Pm(a,c){a=a|0;c=c|0;if(!c)Na(59079,64509,76,59084);do switch(f[c>>2]|0){case 1:{fca(a,c);break}case 22:case 19:case 18:case 15:case 2:break;case 3:{U1(a,c);break}case 4:{c$(a,c);break}case 5:{Gu(a,c);break}case 6:{ZCa(a);break}case 7:{Ssa(a);break}case 8:{ZCa(a);break}case 9:{b$(a,c);break}case 10:{a$(a,c);break}case 11:{$Z(a,c);break}case 12:{_Z(a,c);break}case 13:{Qga(a,b[c+20>>0]|0);break}case 14:{oga(a,b[c+20>>0]|0);break}case 25:{kla(a);break}case 24:{kla(a);break}case 26:{kla(a);break}case 27:{kla(a);break}case 16:{tna(a,c);break}case 17:{x$(a,c);break}case 20:{sCa(a);break}case 21:{Mva(a);break}case 23:{sCa(a);break}default:Ka()}while(0);return}function Qm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+48|0;j=n+32|0;k=n+24|0;i=n+8|0;l=n+16|0;m=n;e=c+32|0;g=f[e>>2]|0;do if(ata(g)|0)g1(a,g)|0;else{h=c+28|0;d=f[h>>2]|0;if(xFa(f[d+4>>2]|0)|0)if(!g){g1(a,d)|0;break}else{m=f[a+36>>2]|0;gKa(m)|0;m=osa(m+144|0)|0;l=m+12|0;lU(l,2);j=KX(a,f[e>>2]|0)|0;k=bga(l,0)|0;f[k>>2]=j;k=f[h>>2]|0;l=bga(l,1)|0;f[l>>2]=k;Ela(m,f[c+4>>2]|0);g1(a,m)|0;break}g=c+8|0;Bwa(k,g);iua(i,g);g=k+4|0;e=f[i>>2]|0;d=f[i+4>>2]|0;while(1){if(!(Cpa(f[k>>2]|0,f[g>>2]|0,e,d)|0))break;i=ppa(k)|0;f[l>>2]=f[i>>2];f[j>>2]=f[l>>2];LY(a,j);bva(k)}f[m>>2]=f[c+24>>2];f[j>>2]=f[m>>2];LY(a,j);b[a+104>>0]=0}while(0);u=n;return}function Rm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;h=i+24|0;d=i;NBa(a);gxa(h);e=f[c+32>>2]|0;if(e){NM(d,b,e);f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];if(!(FBa(a)|0)){f[h>>2]=f[a>>2];f[h+4>>2]=f[a+4>>2];f[h+8>>2]=f[a+8>>2];f[h+12>>2]=f[a+12>>2];g=4}}else g=4;if((g|0)==4?(NM(d,b,f[c+28>>2]|0),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],!(FBa(a)|0)):0){d=Y$(a)|0;g=J;b=f[c+24>>2]|0;if((g|0)>-1|(g|0)==-1&d>>>0>4294967295?d>>>0<(gKa(f[c+12>>2]|0)|0)>>>0:0){b=bga(c+8|0,d)|0;b=f[b>>2]|0}f[a+16>>2]=b;f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2]}u=i;return}function Sm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=e+4|0;p=e+8|0;i=a;g=a;h=a;j=a;a:while(1){m=c+16|0;n=(c|0)==(d|0);l=h;h=a;k=j;while(1){if((h|0)==(b|0)|n)break a;a=f[k+16>>2]|0;h=f[m>>2]|0;if(!(Iva(a,h)|0))break;a=f[i+4>>2]|0;b:do if(!a){g=i;while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break b;g=a}}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);l=a;g=a;h=a;k=a;i=a}if(Iva(h,a)|0){h=l;j=k}else{a=l+16|0;h=f[o>>2]|0;if((h|0)==(f[p>>2]|0))XC(e,a);else{f[h>>2]=f[a>>2];f[o>>2]=(f[o>>2]|0)+4}a=f[g+4>>2]|0;c:do if(!a)while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break c;g=a}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);i=a;g=a;h=a;j=a;k=a}a=f[c+4>>2]|0;if(!a)while(1){a=f[c+8>>2]|0;if((f[a>>2]|0)==(c|0)){c=a;a=k;continue a}else c=a}else c=a;while(1){a=f[c>>2]|0;if(!a)break;else c=a}a=k}return}function Tm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;j=l+24|0;k=l;i=(f[a+4>>2]|0)-(f[a>>2]|0)>>2;d=f[c>>2]|0;e=(f[c+4>>2]|0)-d|0;a:do if(!i){if(!e)Na(45092,28384,147,45113);while(1){if($6(f[d+16>>2]|0)|0)break a;d=f[c>>2]|0}}else{if(((e|0)/24|0|0)!=(i|0))Na(45118,28384,154,45113);g=a+12|0;if(b[g>>0]|0)Na(45142,28384,155,45113);b[g>>0]=1;h=a+16|0;f[j>>2]=h;b[j+4>>0]=1;Bsa(h);y=0;ia(370,a|0);e=y;y=0;do if(!(e&1)){d=0;while(1){if(d>>>0>=i>>>0){e=20;break}e=f[(f[a>>2]|0)+(d<<2)>>2]|0;y=0;ja(1477,k|0,(f[c>>2]|0)+(d*24|0)|0);m=y;y=0;if(m&1){e=18;break}y=0;ja(1478,e|0,k|0);m=y;y=0;if(m&1){e=19;break}D8(k);d=d+1|0}if((e|0)==18){d=Pa()|0;break}else if((e|0)==19){d=Pa()|0;D8(k);break}else if((e|0)==20){FP(a+44|0,j,a);b[g>>0]=0;$W(h);break a}}else d=Pa()|0;while(0);$W(h);$a(d|0)}while(0);u=l;return}function Um(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+32|0;g=m+20|0;e=m+16|0;h=m+12|0;i=m+8|0;d=m+24|0;j=m+4|0;k=m;y=0;ya(112,d|0,a|0,0);n=y;y=0;a:do if(n&1){d=ab(0)|0;l=12}else b:do if(b[d>>0]|0){f[j>>2]=0;Axa(k,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[k>>2]|0,77580)|0;n=y;y=0;do if(!(n&1)?(n=a+(f[(f[a>>2]|0)+-12>>2]|0)|0,o=f[(f[d>>2]|0)+36>>2]|0,f[h>>2]=f[n+24>>2],f[i>>2]=0,y=0,f[e>>2]=f[h>>2],f[g>>2]=f[i>>2],ka(o|0,d|0,e|0,g|0,n|0,j|0,c|0)|0,n=y,y=0,!(n&1)):0){pza(k);o=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,o|0,f[o+16>>2]|f[j>>2]|0);o=y;y=0;if(o&1){d=ab(0)|0;break}else break b}else l=8;while(0);if((l|0)==8){d=ab(0)|0;pza(k)}l=12;break a}while(0);while(0);do if((l|0)==12){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);o=y;y=0;if(!(o&1)){_a();break}d=Pa()|0;y=0;za(5);o=y;y=0;if(o&1){o=ab(0)|0;lDa(o)}else $a(d|0)}while(0);u=m;return a|0}function Vm(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+32|0;g=m+20|0;e=m+16|0;h=m+12|0;i=m+8|0;d=m+24|0;j=m+4|0;k=m;y=0;ya(112,d|0,a|0,0);n=y;y=0;a:do if(n&1){d=ab(0)|0;l=12}else b:do if(b[d>>0]|0){f[j>>2]=0;Axa(k,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[k>>2]|0,77580)|0;n=y;y=0;do if(!(n&1)?(n=a+(f[(f[a>>2]|0)+-12>>2]|0)|0,o=f[(f[d>>2]|0)+28>>2]|0,f[h>>2]=f[n+24>>2],f[i>>2]=0,y=0,f[e>>2]=f[h>>2],f[g>>2]=f[i>>2],ka(o|0,d|0,e|0,g|0,n|0,j|0,c|0)|0,n=y,y=0,!(n&1)):0){pza(k);o=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,o|0,f[o+16>>2]|f[j>>2]|0);o=y;y=0;if(o&1){d=ab(0)|0;break}else break b}else l=8;while(0);if((l|0)==8){d=ab(0)|0;pza(k)}l=12;break a}while(0);while(0);do if((l|0)==12){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);o=y;y=0;if(!(o&1)){_a();break}d=Pa()|0;y=0;za(5);o=y;y=0;if(o&1){o=ab(0)|0;lDa(o)}else $a(d|0)}while(0);u=m;return a|0}function Wm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;g=i;h=Mqa(a+144|0)|0;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,20314)|0;a=0;while(1){if((a|0)==(d|0))break;if(a|0)Vea(76684,72307)|0;k=Vea(76684,19994)|0;j=EN(74808,c+(a<<2)|0)|0;Vea(vj(k,f[j>>2]|0)|0,72132)|0;a=a+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;k=qN(h)|0;Vea(vj(Vea(vj(Vea(Vea(Vea(vj(Vea(76684,20007)|0,k)|0,20401)|0,b)|0,20387)|0,d)|0,72307)|0,e)|0,19943)|0;Vea(76684,19947)|0}dCa(g,b);f[h+24>>2]=f[g>>2];b=h+8|0;a=0;while(1){if((a|0)==(d|0))break;AW(b,f[c+(a<<2)>>2]|0);a=a+1|0}f[h+4>>2]=e;$Aa(h);u=i;return h|0}function Xm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0;j=u;u=u+112|0;c=j+48|0;d=j+92|0;e=j+96|0;i=j+80|0;g=j+64|0;m=j+32|0;l=j+16|0;k=j;n=f[a+36>>2]|0;gKa(n)|0;VBa(d,n);f[e>>2]=f[18954];n=a+44|0;a=f[n>>2]|0;f[n>>2]=a+1;uAa(m,a);f[c>>2]=f[m>>2];f[c+4>>2]=f[m+4>>2];f[c+8>>2]=f[m+8>>2];f[c+12>>2]=f[m+12>>2];a=FO(d,c)|0;f[g>>2]=a;uAa(l,h[b+8>>0]|0);f[c>>2]=f[l>>2];f[c+4>>2]=f[l+4>>2];f[c+8>>2]=f[l+8>>2];f[c+12>>2]=f[l+12>>2];a=FO(d,c)|0;f[g+4>>2]=a;uAa(k,f[b+12>>2]|0);f[c>>2]=f[k>>2];f[c+4>>2]=f[k+4>>2];f[c+8>>2]=f[k+8>>2];f[c+12>>2]=f[k+12>>2];a=FO(d,c)|0;f[g+8>>2]=a;b=b+24|0;f[g+12>>2]=f[b>>2];f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;y=0;ja(179,i|0,4);a=y;y=0;if(a&1){n=Pa()|0;E4(i);$a(n|0)}aZ(i,g,g+16|0);y=0;f[c>>2]=f[e>>2];a=xa(16,d|0,c|0,i|0,1)|0;n=y;y=0;if(n&1){n=Pa()|0;E4(i);$a(n|0)}else{f[b>>2]=a;E4(i);u=j;return}}function Ym(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0;j=u;u=u+112|0;c=j+48|0;d=j+92|0;e=j+96|0;i=j+80|0;g=j+64|0;m=j+32|0;l=j+16|0;k=j;n=f[a+36>>2]|0;gKa(n)|0;VBa(d,n);f[e>>2]=f[18955];n=a+44|0;a=f[n>>2]|0;f[n>>2]=a+1;uAa(m,a);f[c>>2]=f[m>>2];f[c+4>>2]=f[m+4>>2];f[c+8>>2]=f[m+8>>2];f[c+12>>2]=f[m+12>>2];a=FO(d,c)|0;f[g>>2]=a;uAa(l,h[b+8>>0]|0);f[c>>2]=f[l>>2];f[c+4>>2]=f[l+4>>2];f[c+8>>2]=f[l+8>>2];f[c+12>>2]=f[l+12>>2];a=FO(d,c)|0;f[g+4>>2]=a;uAa(k,f[b+12>>2]|0);f[c>>2]=f[k>>2];f[c+4>>2]=f[k+4>>2];f[c+8>>2]=f[k+8>>2];f[c+12>>2]=f[k+12>>2];a=FO(d,c)|0;f[g+8>>2]=a;b=b+24|0;f[g+12>>2]=f[b>>2];f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;y=0;ja(179,i|0,4);a=y;y=0;if(a&1){n=Pa()|0;E4(i);$a(n|0)}aZ(i,g,g+16|0);y=0;f[c>>2]=f[e>>2];a=xa(16,d|0,c|0,i|0,1)|0;n=y;y=0;if(n&1){n=Pa()|0;E4(i);$a(n|0)}else{f[b>>2]=a;E4(i);u=j;return}}function Zm(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;c=a+208|0;vU(c);d=f[a+40>>2]|0;b=f[a+36>>2]|0;while(1){if((b|0)==(d|0))break;g=f[b>>2]|0;e=KM(c,g)|0;f[e>>2]=g;b=b+4|0}d=a+172|0;MT(d);c=f[a+4>>2]|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;e=f[b>>2]|0;g=KM(d,e)|0;f[g>>2]=e;b=b+4|0}c=a+184|0;LU(c);d=f[a+16>>2]|0;b=f[a+12>>2]|0;while(1){if((b|0)==(d|0))break;e=f[b>>2]|0;g=KM(c,e)|0;f[g>>2]=e;b=b+4|0}c=a+196|0;NU(c);d=f[a+28>>2]|0;b=f[a+24>>2]|0;while(1){if((b|0)==(d|0))break;e=f[b>>2]|0;g=KM(c,e)|0;f[g>>2]=e;b=b+4|0}c=a+220|0;MU(c);d=f[a+52>>2]|0;b=f[a+48>>2]|0;while(1){if((b|0)==(d|0))break;e=f[b>>2]|0;g=KM(c,e)|0;f[g>>2]=e;b=b+4|0}return}function _m(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;g=i;h=ysa(a+144|0)|0;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,20314)|0;a=0;while(1){if((a|0)==(d|0))break;if(a|0)Vea(76684,72307)|0;k=Vea(76684,19994)|0;j=EN(74808,c+(a<<2)|0)|0;Vea(vj(k,f[j>>2]|0)|0,72132)|0;a=a+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;k=qN(h)|0;Vea(vj(Vea(vj(Vea(Vea(Vea(vj(Vea(76684,20007)|0,k)|0,20356)|0,b)|0,20387)|0,d)|0,72307)|0,e)|0,19943)|0;Vea(76684,19947)|0}dCa(g,b);f[h+24>>2]=f[g>>2];b=h+8|0;a=0;while(1){if((a|0)==(d|0))break;AW(b,f[c+(a<<2)>>2]|0);a=a+1|0}f[h+4>>2]=e;$Aa(h);u=i;return h|0}function $m(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=c;p=a;n=0;a:while(1){if(!(n>>>0<d>>>0&a>>>0<c>>>0)){q=23;break}m=b[a>>0]|0;j=m&255;f=a+1|0;do if(m<<24>>24<=-1){if((m&255)<194){q=23;break a}g=a+2|0;l=a;e=o-l|0;if((m&255)<224){if((e|0)<2){q=23;break a}if((b[f>>0]&-64)<<24>>24==-128){a=g;break}else{q=23;break a}}k=a+3|0;if((m&255)<240){if((e|0)<3){q=23;break a}g=b[g>>0]|0;e=h[f>>0]|0;f=e&224;switch(m<<24>>24){case -32:{if((f|0)!=160){a=l;break a}break}case -19:{if((f|0)!=128){a=l;break a}break}default:if((e&192|0)!=128){a=l;break a}}if((g&-64)<<24>>24==-128){a=k;break}else{q=23;break a}}if((e|0)<4|(m&255)>244){q=23;break a}i=b[f>>0]|0;g=b[g>>0]|0;e=b[k>>0]|0;f=i&255;switch(m<<24>>24){case -16:{if((i+112&255)>=48){a=l;break a}break}case -12:{if((f&240|0)!=128){a=l;break a}break}default:if((f&192|0)!=128){a=l;break a}}if(!((g&-64)<<24>>24==-128&(e&-64)<<24>>24==-128)){q=23;break a}if((f<<12&196608|j<<18&1835008)>>>0>1114111){q=23;break a}else a=a+4|0}else a=f;while(0);n=n+1|0}return a-p|0}function an(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;g=i+24|0;h=i;e=b+16|0;c=f[e>>2]|0;do if(c|0){d=b+12|0;if(bN(f[d>>2]|0,c)|0){h=f[a+36>>2]|0;gKa(h)|0;VBa(g,h);V0(a,b);h=Una(f[g>>2]|0,f[b+8>>2]|0)|0;h=p5(g,h,f[d>>2]|0)|0;Ela(h,f[b+4>>2]|0);jva(f[a+16>>2]|0,h)|0;break}d=xAa(f[d>>2]|0)|0;c=xAa(f[e>>2]|0)|0;if(((d|0)!=0&(c|0)!=0?!(pJa(f[d+8>>2]|0)|0):0)?!(pJa(f[c+8>>2]|0)|0):0){uua(h,d);uua(h+12|0,c);f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;y=0;ja(1726,g|0,2);e=y;y=0;if(e&1){i=Pa()|0;e2(g);$a(i|0)}mQ(g,h,h+24|0);y=0;ya(100,a|0,g|0,b|0);h=y;y=0;if(h&1){i=Pa()|0;e2(g);$a(i|0)}else{e2(g);break}}}while(0);u=i;return}function bn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+48|0;d=j+28|0;i=j;e=j+24|0;g=j+20|0;c=b+16|0;if(!(f[c>>2]|0)){PDa(i,0);h=b+8|0;k=(hv(a+52|0,h)|0)==0;c=f[h>>2]|0;if(k){f[e>>2]=c;f[d>>2]=f[e>>2];c=lJ(Yma(d)|0)|0}else{f[g>>2]=c;f[d>>2]=f[g>>2];c=gJ(Yma(d)|0)|0}f[i>>2]=c;d=f[b+12>>2]|0;if(d){k=kL(a+40|0,h)|0;k=zQ(JF(a,d,f[k>>2]|0)|0)|0;a=UAa(k,1)|0;l6(gKa(f[a>>2]|0)|0,c)|0;c=k}}else{f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];f[d+16>>2]=0;jIa(i);f[i+8>>2]=f[c>>2];f[i+12>>2]=d;c=AT(a,i,f[a+4>>2]|0)|0}u=j;return c|0}function cn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+32|0;o=p+12|0;d=p+4|0;g=p+8|0;h=p;lt(o,a);y=0;ya(64,d|0,((b[o+11>>0]|0)<0?f[o>>2]|0:o)|0,0);n=y;y=0;if(n&1){p=Pa()|0;zta(o);$a(p|0)}zta(o);e=f[d>>2]|0;FCa(g,e);f[o>>2]=f[g>>2];if(!(T_(c,o)|0)){d=nV(20)|0;_pa(d);FCa(o,e);f[d>>2]=f[o>>2];n=a+11|0;if((b[n>>0]|0)<0){l=a;m=a;e=f[a>>2]|0}else{l=a;m=a;e=a}i=l4(b[e>>0]|0)|0;f[d+4>>2]=i;a=a+4|0;i=d+8|0;j=d+12|0;k=d+16|0;h=1;while(1){e=b[n>>0]|0;g=e<<24>>24<0;if(g)e=f[a>>2]|0;else e=e&255;if(h>>>0>=e>>>0)break;if(g)e=f[m>>2]|0;else e=l;e=l4(b[e+h>>0]|0)|0;f[o>>2]=e;g=f[j>>2]|0;if(g>>>0<(f[k>>2]|0)>>>0){f[g>>2]=e;f[j>>2]=g+4}else XC(i,o);h=h+1|0}rt(c,d)}else{FCa(h,e);f[o>>2]=f[h>>2];d=UX(c,o)|0}u=p;return d|0}function dn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=e+4|0;p=e+8|0;h=a;g=a;i=a;a:while(1){m=c+16|0;n=(c|0)==(d|0);l=h;h=a;k=i;while(1){if((h|0)==(b|0)|n)break a;j=k+16|0;a=f[j>>2]|0;i=f[m>>2]|0;if(a>>>0>=i>>>0)break;a=f[l+4>>2]|0;b:do if(!a){g=l;while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break b;g=a}}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);l=a;g=a;h=a;k=a}h=a;if(i>>>0<a>>>0){h=l;i=k;j=k}else{a=f[o>>2]|0;if((a|0)==(f[p>>2]|0))XC(e,j);else{f[a>>2]=h;f[o>>2]=(f[o>>2]|0)+4}a=f[g+4>>2]|0;c:do if(!a)while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break c;g=a}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);h=a;g=a;i=a;j=a}a=f[c+4>>2]|0;if(!a)while(1){a=f[c+8>>2]|0;if((f[a>>2]|0)==(c|0)){c=a;a=j;continue a}else c=a}else c=a;while(1){a=f[c>>2]|0;if(!a)break;else c=a}a=j}return}function en(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+32|0;d=j+16|0;e=j+12|0;k=j;g=f[a+60>>2]|0;h=(f[a+64>>2]|0)-g>>2;do if(h>>>0>c>>>0){l=f[a>>2]|0;f[e>>2]=f[g+(c<<2)>>2];f[d>>2]=f[e>>2];d=QY(l,d)|0;if(!(f[d+12>>2]|0)){i=d;break}else Na(54244,54283,1489,54308)}else{c=c-h|0;a=f[a>>2]|0;d=f[a+36>>2]|0;if(c>>>0<(f[a+40>>2]|0)-d>>2>>>0){i=f[d+(c<<2)>>2]|0;break}g=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(54329)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;d=k}else{c=e+16&-16;y=0;d=la(150,c|0)|0;j=y;y=0;if(j&1){l=14;break}f[k>>2]=d;f[k+8>>2]=c|-2147483648;f[k+4>>2]=e}Pta(d,54329,e)|0;SBa(d+e|0,0);y=0;ja(583,g|0,k|0);j=y;y=0;if(j&1)c=1;else{y=0;ya(79,g|0,64,361);y=0;c=0}d=Pa()|0;zta(k);if(c)l=16}else{y=0;za(3);y=0;l=14}while(0);if((l|0)==14){d=Pa()|0;l=16}if((l|0)==16)Oa(g|0);$a(d|0)}while(0);u=j;return f[i>>2]|0}function fn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;d=b+-4|0;e=a+4|0;g=a+8|0;switch(b-a>>2|0){case 1:case 0:{d=1;break}case 2:{if(er(f[c>>2]|0,f[c+4>>2]|0,f[d>>2]|0,f[a>>2]|0)|0){b=f[a>>2]|0;f[a>>2]=f[d>>2];f[d>>2]=b;d=1}else d=1;break}case 3:{Gs(a,e,d,c)|0;d=1;break}case 4:{Hv(a,e,g,d,c)|0;d=1;break}case 5:{hs(a,e,g,a+12|0,d,c)|0;d=1;break}default:{Gs(a,e,g,c)|0;j=c+4|0;i=a+12|0;d=0;e=g;while(1){if((i|0)==(b|0)){e=1;d=0;break}if(!(er(f[c>>2]|0,f[j>>2]|0,f[i>>2]|0,f[e>>2]|0)|0)){e=i;i=i+4|0;continue}h=f[i>>2]|0;g=i;while(1){f[g>>2]=f[e>>2];if((e|0)==(a|0)){e=a;break}g=e+-4|0;if(er(f[c>>2]|0,f[j>>2]|0,h,f[g>>2]|0)|0){k=e;e=g;g=k}else break}f[e>>2]=h;d=d+1|0;g=i+4|0;if((d|0)==8){e=0;d=(g|0)==(b|0);break}else{e=i;i=g}}d=d|e}}return d|0}function gn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0;i=Fp(a,b,c,d)|0;g=f[e>>2]|0;h=f[d>>2]|0;if(wR(+p[g+16>>3],+p[h+16>>3])|0){f[d>>2]=g;f[e>>2]=h;g=i+1|0;h=f[d>>2]|0;e=f[c>>2]|0;if(wR(+p[h+16>>3],+p[e+16>>3])|0){f[c>>2]=h;f[d>>2]=e;g=i+2|0;h=f[c>>2]|0;e=f[b>>2]|0;if(wR(+p[h+16>>3],+p[e+16>>3])|0){f[b>>2]=h;f[c>>2]=e;g=f[b>>2]|0;h=f[a>>2]|0;if(wR(+p[g+16>>3],+p[h+16>>3])|0){f[a>>2]=g;f[b>>2]=h;g=i+4|0}else g=i+3|0}}}else g=i;return g|0}function hn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;j=o+20|0;k=o+12|0;d=o+4|0;e=o+16|0;l=o+8|0;m=o;n=a+4|0;c=Tua(f[n>>2]|0)|0;f[k>>2]=1;cJa(d);if(Hra(lj(b,1)|0)|0){f[k>>2]=2;FCa(j,rr(lj(b,1)|0)|0);i=f[j>>2]|0;f[d>>2]=i;d=i}else{dCa(j,52950);i=f[j>>2]|0;f[d>>2]=i;d=i}i=a+112|0;f[e>>2]=d;f[j>>2]=f[e>>2];d=Tv(i,j)|0;e=rz(b,k)|0;g=f[k>>2]|0;h=sra(a,lj(b,g)|0)|0;f[c+8>>2]=h;h=g+2|0;f[k>>2]=h;p=rk(a,lj(b,g+1|0)|0)|0;f[c+12>>2]=p;if(h>>>0<(lxa(b)|0)>>>0){f[k>>2]=g+3;p=rk(a,lj(b,h)|0)|0;f[c+16>>2]=p}AS(c,e);f[l>>2]=d;f[j>>2]=f[l>>2];tE(i,j);f[m>>2]=d;f[j>>2]=f[m>>2];if(oB(c,j)|0){p=osa(f[n>>2]|0)|0;f[p+8>>2]=d;AW(p+12|0,c);Ela(p,f[c+4>>2]|0);c=p}u=o;return c|0}function jn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;j=l;y=0;ja(80,j|0,a|0);h=y;y=0;a:do if(h&1){d=ab(0)|0;k=13}else{b:do if(b[j>>0]|0){d=f[(f[a>>2]|0)+-12>>2]|0;g=f[a+d+24>>2]|0;h=g;do if(!g){i=d;k=9}else{d=h+24|0;e=f[d>>2]|0;if((e|0)==(f[h+28>>2]|0)){g=f[(f[g>>2]|0)+52>>2]|0;d=oHa(c)|0;y=0;d=ua(g|0,h|0,d|0)|0;h=y;y=0;if(h&1)break}else{f[d>>2]=e+1;b[e>>0]=c;d=oHa(c)|0}if(!(bDa(d,-1)|0))break b;i=f[(f[a>>2]|0)+-12>>2]|0;k=9}while(0);if((k|0)==9?(i=a+i|0,y=0,ja(81,i|0,f[i+16>>2]|1|0),i=y,y=0,!(i&1)):0)break;d=ab(0)|0;ww(j);k=13;break a}while(0);ww(j)}while(0);do if((k|0)==13){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);k=y;y=0;if(!(k&1)){_a();break}d=Pa()|0;y=0;za(5);k=y;y=0;if(k&1){k=ab(0)|0;lDa(k)}else $a(d|0)}while(0);u=l;return a|0}function kn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+32|0;i=l+12|0;g=l;h=l+24|0;k=f[b>>2]|0;d=k;a:do if(rCa(f[k+4>>2]|0)|0){e=a+40|0;k=a+44|0;c=f[k>>2]|0;if((c|0)==(f[a+48>>2]|0))XC(e,b);else{f[c>>2]=d;f[k>>2]=(f[k>>2]|0)+4}MG(i,e);c=f[a+32>>2]|0;gKa(c)|0;y=0;c=ua(73,i|0,c|0)|0;d=y;y=0;do if(d&1)j=12;else{if(!c){y=0;ja(178,g|0,e|0);e=y;y=0;if(e&1){j=12;break}y=0;c=la(162,g|0)|0;e=y;y=0;if(e&1){c=Pa()|0;E4(g);break}E4(g);E4(i);if(c)c=0;else{VBa(h,gKa(f[a+36>>2]|0)|0);c=Una(f[h>>2]|0,f[b>>2]|0)|0;f[b>>2]=c;c=1}}else{E4(i);c=0}e=f[k>>2]|0;d=0;while(1){if((d|0)==-1)break a;j=d+-1|0;f[k>>2]=e+(j<<2);d=j}}while(0);if((j|0)==12)c=Pa()|0;E4(i);$a(c|0)}else c=0;while(0);u=l;return c|0}function ln(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;g=i+24|0;h=i;NBa(g);d=f[c+12>>2]|0;if((d|0)!=0?(Aia(h,b,d),f[g>>2]=f[h>>2],f[g+4>>2]=f[h+4>>2],f[g+8>>2]=f[h+8>>2],f[g+12>>2]=f[h+12>>2],f[g+16>>2]=f[h+16>>2],FBa(g)|0):0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else e=4;a:do if((e|0)==4){d=f[c+16>>2]|0;do if(d|0){Aia(h,b,d);if(FBa(h)|0){f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2];f[a+16>>2]=f[h+16>>2];f[a+20>>2]=f[h+20>>2];break a}h=Y$(h)|0;if((h|0)==0&(J|0)==0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2];break a}else break}while(0);f[g+16>>2]=f[c+8>>2];f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}while(0);u=i;return}function mn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+80|0;d=h+48|0;e=h+24|0;g=h;YX(d,b,f[c+8>>2]|0);if(!(FBa(d)|0)){YX(e,b,f[c+12>>2]|0);if(!(FBa(e)|0)){YX(g,b,f[c+16>>2]|0);if(FBa(g)|0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else{g=(csa(g)|0)!=0;g=g?d:e;f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=h;return}function nn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=u;u=u+64|0;d=q+48|0;l=q+44|0;p=q+4|0;n=q+40|0;o=q;s=a+84|0;g=f[s>>2]|0;f[s>>2]=g+1;s=Fha(f[c+8>>2]|0)|0;r=a+36|0;e=f[r>>2]|0;gKa(e)|0;VBa(l,e);e=zn(g)|0;g=yn(g)|0;h=f[c+16>>2]|0;wla(p);f[p+24>>2]=f[a+80>>2];f[p+28>>2]=s;f[p+32>>2]=e;Ewa(p,gKa(f[r>>2]|0)|0);y=0;ja(934,p|0,b|0);r=y;y=0;do if(((!(r&1)?(i=f[b>>2]|0,f[n>>2]=e,f[o>>2]=g,y=0,f[d>>2]=f[o>>2],j=xa(14,l|0,d|0,0,0)|0,s=y,y=0,!(s&1)):0)?(y=0,f[d>>2]=f[n>>2],k=xa(15,l|0,i|0,d|0,j|0)|0,s=y,y=0,!(s&1)):0)?(y=0,m=oa(50,l|0,k|0,f[c+12>>2]|0)|0,s=y,y=0,!(s&1)):0){f[m+8>>2]=g;f[b>>2]=m;if(h|0){y=0;d=la(169,h|0)|0;s=y;y=0;if(s&1)break;y=0;ya(90,a|0,b|0,d|0);s=y;y=0;if(s&1)break}Rua(p);u=q;return}while(0);s=Pa()|0;Rua(p);$a(s|0)}function on(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;a:do if(!a){d=f[c>>2]|0;a=f[d>>2]|0;if(!a)d=0;else{e=d;d=0;do{if(a>>>0>127){a=hz(i,a)|0;if((a|0)==-1){d=-1;break a}}else a=1;d=a+d|0;e=e+4|0;a=f[e>>2]|0}while((a|0)!=0)}}else{b:do if(d>>>0>3){e=d;g=f[c>>2]|0;while(1){h=f[g>>2]|0;if((h+-1|0)>>>0>126){if(!h)break;h=hz(a,h)|0;if((h|0)==-1){d=-1;break a}a=a+h|0;e=e-h|0}else{b[a>>0]=h;a=a+1|0;e=e+-1|0;g=f[c>>2]|0}g=g+4|0;f[c>>2]=g;if(e>>>0<=3)break b}b[a>>0]=0;f[c>>2]=0;d=d-e|0;break a}else e=d;while(0);if(e){g=f[c>>2]|0;while(1){h=f[g>>2]|0;if((h+-1|0)>>>0>126){if(!h){g=19;break}h=hz(i,h)|0;if((h|0)==-1){d=-1;break a}if(e>>>0<h>>>0){g=22;break}hz(a,f[g>>2]|0)|0;a=a+h|0;e=e-h|0}else{b[a>>0]=h;a=a+1|0;e=e+-1|0;g=f[c>>2]|0}g=g+4|0;f[c>>2]=g;if(!e)break a}if((g|0)==19){b[a>>0]=0;f[c>>2]=0;d=d-e|0;break}else if((g|0)==22){d=d-e|0;break}}}while(0);u=j;return d|0}function pn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+32|0;k=l+16|0;i=l+24|0;h=l+8|0;j=l;f[k>>2]=b;c=f[a+24>>2]|0;b=(f[a+28>>2]|0)-c>>2;if(b>>>0>1)b=f[c+(b+-2<<2)>>2]|0;else b=0;c=EN(a+48|0,k)|0;f[c>>2]=b;c=f[k>>2]|0;d=xAa(c)|0;g=a+36|0;do if(!d){b=wAa(c)|0;if(b|0){vK(g,b+8|0)|0;break}d=mAa(c)|0;if(d|0){e=d+8|0;Bwa(i,e);iua(h,e);e=i+4|0;c=f[h>>2]|0;b=f[h+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[e>>2]|0,c,b)|0))break;h=ppa(i)|0;f[j>>2]=f[h>>2];vK(g,j)|0;bva(i)}vK(g,d+24|0)|0}}else{b=d+8|0;if(pJa(f[b>>2]|0)|0){j=vK(g,b)|0;f[j>>2]=d}}while(0);SE(a,f[k>>2]|0,1);u=l;return}function qn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=f[b>>2]|0;d=a+16|0;switch(f[c>>2]|0){case 1:{JJ(d,1948,b);e=11;break}case 2:{JJ(d,1949,b);g=(Asa(c)|0)+16|0;if(f[g>>2]|0){JJ(d,1947,(Asa(c)|0)+16|0);JJ(d,1950,b)}JJ(d,1947,(Asa(c)|0)+12|0);JJ(d,1951,b);JJ(d,1947,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1952,b);e=11;break}case 4:{JJ(d,1953,b);e=11;break}case 5:{JJ(d,1954,b);e=11;break}case 20:{JJ(d,1955,b);e=11;break}case 23:{JJ(d,1955,b);e=11;break}default:e=11}if((e|0)==11?(gM(a,b),(f[c>>2]|0)==3):0)JJ(d,1956,b);return}function rn(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+48|0;h=k+32|0;d=k+28|0;e=k+16|0;i=k+12|0;j=k;f[d>>2]=f[18955];f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;g=uHa(43438)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[e+11>>0]=g;c=e}else{l=g+16&-16;c=nV(l)|0;f[e>>2]=c;f[e+8>>2]=l|-2147483648;f[e+4>>2]=g}Pta(c,43438,g)|0;SBa(c+g|0,0);y=0;f[h>>2]=f[d>>2];ya(93,a|0,h|0,e|0);l=y;y=0;do if(!(l&1)){zta(e);f[i>>2]=f[18954];f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(43438)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[j+11>>0]=d;c=j}else{l=d+16&-16;c=nV(l)|0;f[j>>2]=c;f[j+8>>2]=l|-2147483648;f[j+4>>2]=d}Pta(c,43438,d)|0;SBa(c+d|0,0);y=0;f[h>>2]=f[i>>2];ya(93,a|0,h|0,j|0);l=y;y=0;if(l&1){c=Pa()|0;zta(j);break}else{zta(j);u=k;return}}else{c=Pa()|0;zta(e)}while(0);$a(c|0)}function sn(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=nV(84)|0;dM(o);f[o>>2]=f[b>>2];f[o+4>>2]=d;f[o+36>>2]=g;g=f[c+4>>2]|0;h=o+12|0;i=o+16|0;j=o+8|0;k=o+40|0;l=o+44|0;m=o+52|0;n=o+48|0;d=f[c>>2]|0;while(1){if((d|0)==(g|0))break;a=d+4|0;b=f[h>>2]|0;if((b|0)==(f[i>>2]|0))XC(j,a);else{f[b>>2]=f[a>>2];f[h>>2]=b+4}c=(f[l>>2]|0)-(f[k>>2]|0)>>2;a=KM(m,d)|0;f[a>>2]=c;a=f[l>>2]|0;if((a|0)==(f[n>>2]|0))XC(k,d);else{f[a>>2]=f[d>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+8|0}g=f[e+4>>2]|0;h=o+24|0;i=o+28|0;j=o+20|0;d=f[e>>2]|0;while(1){if((d|0)==(g|0))break;a=d+4|0;b=f[h>>2]|0;if((b|0)==(f[i>>2]|0))XC(j,a);else{f[b>>2]=f[a>>2];f[h>>2]=b+4}e=(f[l>>2]|0)-(f[k>>2]|0)>>2;a=KM(m,d)|0;f[a>>2]=e;a=f[l>>2]|0;if((a|0)==(f[n>>2]|0))XC(k,d);else{f[a>>2]=f[d>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+8|0}return o|0}function tn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;k=n;l=yLa()|0;y=0;c=ua(55,l|0,f[a+20>>2]|0)|0;j=y;y=0;if(j&1){j=ab(0)|0;lDa(j)}if(!c){j=0;c=a;i=0;a:while(1){while(1){y=0;d=ua(55,l|0,f[c+20>>2]|0)|0;a=y;y=0;if(a&1){m=6;break a}if(d|0){m=13;break a}g=c+24|0;d=f[g>>2]|0;if(!d)break;else c=d}if(!j){h=nV(28)|0;Bia(h);d=h}else{d=j;h=i}e=f[g>>2]|0;if(!e)f[g>>2]=d;if(!e)break;j=d;c=e;i=h}if((m|0)==6){l=ab(0)|0;lDa(l)}if((m|0)==13?j|0:0){Rba(j);$Ja(i)}c=tn(c,b)|0}else{b=b+7&-8;c=a+12|0;e=0;g=f[c>>2]|0;while(1){if(g>>>0>b>>>0)break;m=g<<1;f[c>>2]=m;e=1;g=m}h=a+4|0;i=f[h>>2]|0;j=a+16|0;c=i;if(!((i|0)!=(f[a>>2]|0)?(d=f[j>>2]|0,!(e|(d+b|0)>>>0>=g>>>0)):0)){d=YJa(g)|0;f[k>>2]=d;if(c>>>0<(f[a+8>>2]|0)>>>0){f[i>>2]=d;c=(f[h>>2]|0)+4|0;f[h>>2]=c}else{XC(a,k);c=f[h>>2]|0}f[j>>2]=0;d=0}c=(f[c+-4>>2]|0)+d|0;f[j>>2]=d+b}u=n;return c|0}function un(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=e+4|0;o=e+8|0;h=a;g=a;i=a;a:while(1){l=c+16|0;m=(c|0)==(d|0);k=h;h=a;j=i;while(1){if((h|0)==(b|0)|m)break a;h=j+16|0;i=f[h>>2]|0;a=f[l>>2]|0;if(i>>>0>=a>>>0)break;a=f[k+4>>2]|0;b:do if(!a){g=k;while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break b;g=a}}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);k=a;g=a;h=a;j=a}if(a>>>0<i>>>0){h=k;i=j}else{a=f[n>>2]|0;if((a|0)==(f[o>>2]|0))XC(e,h);else{f[a>>2]=i;f[n>>2]=a+4}a=f[g+4>>2]|0;c:do if(!a)while(1){a=f[g+8>>2]|0;if((f[a>>2]|0)==(g|0))break c;g=a}else while(1){g=f[a>>2]|0;if(!g)break;else a=g}while(0);h=a;g=a;i=a;j=a}a=f[c+4>>2]|0;if(!a)while(1){a=f[c+8>>2]|0;if((f[a>>2]|0)==(c|0)){c=a;a=j;continue a}else c=a}else c=a;while(1){a=f[c>>2]|0;if(!a)break;else c=a}a=j}return}function vn(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+32|0;h=i;j=i+12|0;a:do if(e)hk(a,b,d,g,61789);else{b:do switch(b|0){case 8:case 4:case 2:case 1:break;default:{_L(j,b);y=0;ua(81,j|0,61833)|0;e=y;y=0;do if(!(e&1)){f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];e=0;while(1){if((e|0)==3)break;f[j+(e<<2)>>2]=0;e=e+1|0}y=0;ya(117,a|0,h|0,g|0);e=y;y=0;if(e&1){e=Pa()|0;zta(h);break}else{zta(h);zta(j);break b}}else e=Pa()|0;while(0);zta(j);$a(e|0)}}while(0);Po(a,b>>>0<=d>>>0,g,61849)|0;switch(c|0){case 3:case 1:{Po(a,b>>>0<5,g,61849)|0;break a}case 4:case 2:{Po(a,b>>>0<9,g,61849)|0;break a}default:break a}}while(0);u=i;return}function wn(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;j=l;i=j;f[i>>2]=c;f[i+4>>2]=d;i=l+8|0;k=a+12|0;do if(!(b[k>>0]|0))e=-1;else{e=(f[a+4>>2]|0)-(f[a>>2]|0)|0;c=Vea(vj(Vea(oj(Vea(76852,59143)|0,c,d)|0,54382)|0,e)|0,72083)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[i>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(i);jn(c,g)|0;Yp(c)|0;break}m=Pa()|0;pza(i);$a(m|0)}while(0);py(j,a);a:do if(b[k>>0]|0){c=a+4|0;while(1){if(e>>>0>=((f[c>>2]|0)-(f[a>>2]|0)|0)>>>0)break a;k=Vea(76852,58988)|0;m=Uaa(a,e)|0;Vea(vj(Vea(wj(k,h[m>>0]|0)|0,54382)|0,e)|0,61397)|0;e=e+1|0}}while(0);u=l;return a|0}function xn(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=f[e>>2]|0;p=(o|0)==(d|0);do if(p){m=(b[l+24>>0]|0)==a<<24>>24;if(!m?(b[l+25>>0]|0)!=a<<24>>24:0){n=5;break}f[e>>2]=d+1;b[d>>0]=m?43:45;f[g>>2]=0;m=0}else n=5;while(0);a:do if((n|0)==5){n=b[i+11>>0]|0;if(a<<24>>24==h<<24>>24?((n<<24>>24<0?f[i+4>>2]|0:n&255)|0)!=0:0){m=f[k>>2]|0;if((m-j|0)>=160){m=0;break}e=f[g>>2]|0;f[k>>2]=m+4;f[m>>2]=e;f[g>>2]=0;m=0;break}i=l+26|0;h=0;while(1){m=l+h|0;if((h|0)==26){m=i;break}if((b[m>>0]|0)==a<<24>>24)break;else h=h+1|0}m=m-l|0;if((m|0)>23)m=-1;else{h=68313+m|0;switch(c|0){case 10:case 8:{if((m|0)>=(c|0)){m=-1;break a}break}case 16:{if((m|0)>=22){if(p){m=-1;break a}if((o-d|0)>=3){m=-1;break a}if((b[o+-1>>0]|0)!=48){m=-1;break a}f[g>>2]=0;m=b[h>>0]|0;f[e>>2]=o+1;b[o>>0]=m;m=0;break a}break}default:{}}m=b[h>>0]|0;f[e>>2]=o+1;b[o>>0]=m;f[g>>2]=(f[g>>2]|0)+1;m=0}}while(0);return m|0}function yn(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;h=u;u=u+48|0;e=h+24|0;g=h+28|0;j=h+12|0;i=h;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(36304)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[j+11>>0]=d;c=j}else{k=d+16&-16;c=nV(k)|0;f[j>>2]=c;f[j+8>>2]=k|-2147483648;f[j+4>>2]=d}Pta(c,36304,d)|0;SBa(c+d|0,0);y=0;ja(593,i|0,a|0);k=y;y=0;if(k&1)c=Pa()|0;else{k=b[i+11>>0]|0;d=k<<24>>24<0;y=0;oa(37,j|0,(d?f[i>>2]|0:i)|0,(d?f[i+4>>2]|0:k&255)|0)|0;k=y;y=0;do if(!(k&1)){f[g>>2]=f[j>>2];f[g+4>>2]=f[j+4>>2];f[g+8>>2]=f[j+8>>2];c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}y=0;ja(582,e|0,g|0);k=y;y=0;if(k&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);zta(j);u=h;return f[e>>2]|0}}else c=Pa()|0;while(0);zta(i)}zta(j);$a(c|0);return 0}function zn(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;h=u;u=u+48|0;e=h+24|0;g=h+28|0;j=h+12|0;i=h;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(36312)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[j+11>>0]=d;c=j}else{k=d+16&-16;c=nV(k)|0;f[j>>2]=c;f[j+8>>2]=k|-2147483648;f[j+4>>2]=d}Pta(c,36312,d)|0;SBa(c+d|0,0);y=0;ja(593,i|0,a|0);k=y;y=0;if(k&1)c=Pa()|0;else{k=b[i+11>>0]|0;d=k<<24>>24<0;y=0;oa(37,j|0,(d?f[i>>2]|0:i)|0,(d?f[i+4>>2]|0:k&255)|0)|0;k=y;y=0;do if(!(k&1)){f[g>>2]=f[j>>2];f[g+4>>2]=f[j+4>>2];f[g+8>>2]=f[j+8>>2];c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}y=0;ja(582,e|0,g|0);k=y;y=0;if(k&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);zta(j);u=h;return f[e>>2]|0}}else c=Pa()|0;while(0);zta(i)}zta(j);$a(c|0);return 0}function An(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+32|0;h=j+16|0;i=j+8|0;g=j;f[i>>2]=f[b+24>>2];f[h>>2]=f[i>>2];i=nM(Yma(h)|0)|0;c=b+8|0;if(Xha(f[a>>2]|0,b)|0){h=BT()|0;c=kh(a,c,h,i,f[a+4>>2]|0,f[b+4>>2]|0)|0}else{Bwa(h,c);iua(g,c);d=h+4|0;e=f[g>>2]|0;c=f[g+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[d>>2]|0,e,c)|0))break;g=ppa(h)|0;g=f[g>>2]|0;l=UAa(i,2)|0;l=gKa(f[l>>2]|0)|0;k=AT(a,g,f[18680]|0)|0;l6(l,Fw(k,q5(f[g+4>>2]|0)|0)|0)|0;bva(h)}c=Fw(i,q5(f[b+4>>2]|0)|0)|0}u=j;return c|0}function Bn(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=f[e>>2]|0;p=(o|0)==(d|0);do if(p){m=(f[l+96>>2]|0)==(a|0);if(!m?(f[l+100>>2]|0)!=(a|0):0){n=5;break}f[e>>2]=d+1;b[d>>0]=m?43:45;f[g>>2]=0;m=0}else n=5;while(0);a:do if((n|0)==5){n=b[i+11>>0]|0;if((a|0)==(h|0)?((n<<24>>24<0?f[i+4>>2]|0:n&255)|0)!=0:0){m=f[k>>2]|0;if((m-j|0)>=160){m=0;break}e=f[g>>2]|0;f[k>>2]=m+4;f[m>>2]=e;f[g>>2]=0;m=0;break}i=l+104|0;h=0;while(1){m=l+(h<<2)|0;if((h|0)==26){m=i;break}if((f[m>>2]|0)==(a|0))break;else h=h+1|0}m=m-l|0;h=m>>2;if((m|0)>92)m=-1;else{i=68313+h|0;switch(c|0){case 10:case 8:{if((h|0)>=(c|0)){m=-1;break a}break}case 16:{if((m|0)>=88){if(p){m=-1;break a}if((o-d|0)>=3){m=-1;break a}if((b[o+-1>>0]|0)!=48){m=-1;break a}f[g>>2]=0;m=b[i>>0]|0;f[e>>2]=o+1;b[o>>0]=m;m=0;break a}break}default:{}}m=b[i>>0]|0;f[e>>2]=o+1;b[o>>0]=m;f[g>>2]=(f[g>>2]|0)+1;m=0}}while(0);return m|0}function Cn(a,b){a=a|0;b=b|0;var c=0;if(!b)Na(59079,64509,76,59084);do switch(f[b>>2]|0){case 1:{c=DC(a,b)|0;break}case 2:{c=pV(a,b)|0;break}case 3:{c=Zsa(a,f[b+12>>2]|0)|0;break}case 4:{c=C8(a,b)|0;break}case 5:{c=v6(a,b)|0;break}case 6:{c=IC(a,b)|0;break}case 7:{c=kC(a,b)|0;break}case 8:{c=_y(a,b)|0;break}case 23:case 22:case 27:case 26:case 9:{c=0;break}case 10:{c=1;break}case 11:{c=1;break}case 12:{c=2;break}case 13:{c=Uha(a,b)|0;break}case 14:{c=D0(a,b)|0;break}case 25:{c=100;break}case 24:{c=100;break}case 15:{c=1;break}case 16:{c=PF(a,b)|0;break}case 17:{c=Eq(a,b)|0;break}case 18:{c=kW(a,b)|0;break}case 19:{c=_ta(a,f[b+8>>2]|0)|0;break}case 20:{c=Bua(a,f[b+8>>2]|0)|0;break}case 21:{c=100;break}default:Ka()}while(0);return c|0}function Dn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;g=u;u=u+16|0;h=g;d=a+160|0;j=a+164|0;e=(f[j>>2]|0)-(f[d>>2]|0)>>2;Ng(a);d=(f[j>>2]|0)-(f[d>>2]|0)>>2;do if((e-d|0)==1)a=Hi(a)|0;else{if(e>>>0<=d>>>0){j=osa(f[a+4>>2]|0)|0;my(a,j,e,d);Ela(j,c);a=j;break}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(56943)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[h+11>>0]=d;a=h}else{c=d+16&-16;y=0;a=la(150,c|0)|0;j=y;y=0;if(j&1){i=12;break}f[h>>2]=a;f[h+8>>2]=c|-2147483648;f[h+4>>2]=d}Pta(a,56943,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,h|0);j=y;y=0;if(j&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(h);if(c)i=14}else{y=0;za(3);y=0;i=12}while(0);if((i|0)==12){a=Pa()|0;i=14}if((i|0)==14)Oa(e|0);$a(a|0)}while(0);u=g;return a|0}function En(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;Aaa(f[a>>2]|0,52950,0)|0;d=c+4|0;if(rCa(f[d>>2]|0)|0){e=Vea(f[a>>2]|0,39243)|0;c3(Vea(e,F$(f[d>>2]|0)|0)|0,41)|0}zea(a);kF(a,f[c+8>>2]|0);e=a+20|0;d=f[c+12>>2]|0;if((((b[e>>0]|0)==0?aJa(f[d>>2]|0)|0:0)?(g=(xAa(d)|0)+8|0,tJa(f[g>>2]|0)|0):0)?(g=(xAa(d)|0)+16|0,(gKa(f[g>>2]|0)|0)==1):0){g=efa((xAa(d)|0)+12|0)|0;kF(a,f[g>>2]|0)}else kF(a,d);d=f[c+16>>2]|0;do if(d|0){if((((b[e>>0]|0)==0?aJa(f[d>>2]|0)|0:0)?(g=(xAa(d)|0)+8|0,tJa(f[g>>2]|0)|0):0)?(g=(xAa(d)|0)+16|0,(gKa(f[g>>2]|0)|0)==1):0){g=efa((xAa(d)|0)+12|0)|0;kF(a,f[g>>2]|0);break}kF(a,d)}while(0);x_(a);return}function Fn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+32|0;j=m+24|0;h=m+8|0;i=m;k=m+16|0;l=m+4|0;do if(b[a+12>>0]|0){g=Vea(76852,56758)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,n=y,y=0,!(n&1)):0){pza(j);jn(g,e)|0;Yp(g)|0;break}n=Pa()|0;pza(j);$a(n|0)}while(0);g=c+8|0;Bwa(j,g);iua(h,g);g=j+4|0;e=f[h>>2]|0;d=f[h+4>>2]|0;while(1){if(!(Cpa(f[j>>2]|0,f[g>>2]|0,e,d)|0))break;n=ppa(j)|0;f[i>>2]=f[n>>2];Ql(a,i);bva(j)}d=a+4|0;n=Zq(f[d>>2]|0,16)|0;f[l>>2]=f[c+24>>2];f[j>>2]=f[l>>2];PDa(k,Up(a,j)|0);Un(n,f[k>>2]|0)|0;if((f[c+4>>2]|0)==5)Zq(f[d>>2]|0,0)|0;u=m;return}function Gn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=a+11|0;d=b[n>>0]|0;e=d<<24>>24<0;if(e){m=f[a+4>>2]|0;j=m>>>0<11?m:11;d=(f[a+8>>2]&2147483647)+-1|0}else{m=d&255;j=m>>>0<11?m:11;d=10}if((j-m+d|0)>>>0<c>>>0)qv(a,d,m+c-j-d|0,m,0,j,c,73504);else{if(e)l=f[a>>2]|0;else l=a;do if((j|0)!=(c|0)){i=m-j|0;if(!i){e=j;h=0;g=73504;d=c;k=17}else{if(j>>>0>c>>>0){Ita(l,73504,c)|0;Ita(l+c|0,l+j|0,i)|0;e=j;d=c;break}do if(l>>>0<73504>>>0&(l+m|0)>>>0>73504>>>0)if((l+j|0)>>>0>73504>>>0){Ita(l,73504,j)|0;e=0;h=j;g=73504+c|0;d=c-j|0;break}else{e=j;h=0;g=73504+(c-j)|0;d=c;break}else{e=j;h=0;g=73504;d=c}while(0);k=l+h|0;Ita(k+d|0,k+e|0,i)|0;k=17}}else{e=c;h=0;g=73504;d=c;k=17}while(0);if((k|0)==17)Ita(l+h|0,g,d)|0;d=d-e+m|0;if((b[n>>0]|0)<0)f[a+4>>2]=d;else b[n>>0]=d;SBa(l+d|0,0)}return}function Hn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;e=k;l=k+20|0;i=k+16|0;j=a+16|0;g=a+36|0;d=gKa(f[g>>2]|0)|0;f[l>>2]=f[b+24>>2];f[e>>2]=f[l>>2];d=QY(d,e)|0;do if((bDa(f[d+4>>2]|0,f[18800]|0)|0?bDa(f[d+8>>2]|0,f[18795]|0)|0:0)?(h=b+8|0,c=bga(h,1)|0,c=pAa(f[c>>2]|0)|0,c|0):0){b=c+8|0;S5(e,2.0);if(JD(b,e)|0){l=bga(h,0)|0;l=f[l>>2]|0;h=gKa(f[a+32>>2]|0)|0;wC(e,l,h,gKa(f[g>>2]|0)|0);h=f[g>>2]|0;gKa(h)|0;VBa(i,h);h=f[e+4>>2]|0;l=gia(i,f[e>>2]|0,f[h+4>>2]|0)|0;l=s5(f[i>>2]|0,65,h,l)|0;jva(f[j>>2]|0,l)|0;break}S5(e,.5);if(JD(b,e)|0){l=f[g>>2]|0;gKa(l)|0;VBa(e,l);l=bga(h,0)|0;l=dea(f[e>>2]|0,19,f[l>>2]|0)|0;jva(f[j>>2]|0,l)|0}}while(0);u=k;return}function In(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;h=i+12|0;j=i;g=(fwa(rr(lj(c,0)|0)|0,46)|0)+11|0;f[h>>2]=g;g=Ei(h,(y9(d)|0)&255)|0;e=fwa(f[h>>2]|0,46)|0;f[h>>2]=e;if(e|0){e=e+1|0;f[h>>2]=e;if(!(CJ(e,53353,7)|0))e=jm(a,c,d,g)|0;else e=Bh(a,c,d,g,e)|0;u=i;return e|0}g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;c=uHa(53320)|0;do if(c>>>0<=4294967279){if(c>>>0<11){b[j+11>>0]=c;e=j}else{a=c+16&-16;y=0;e=la(150,a|0)|0;i=y;y=0;if(i&1){k=10;break}f[j>>2]=e;f[j+8>>2]=a|-2147483648;f[j+4>>2]=c}Pta(e,53320,c)|0;SBa(e+c|0,0);y=0;ja(583,g|0,j|0);i=y;y=0;if(i&1)a=1;else{y=0;ya(79,g|0,64,361);y=0;a=0}e=Pa()|0;zta(j);if(a)k=12}else{y=0;za(3);y=0;k=10}while(0);if((k|0)==10){e=Pa()|0;k=12}if((k|0)==12)Oa(g|0);$a(e|0);return 0}function Jn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+96|0;d=j+64|0;k=j+84|0;e=j+40|0;g=j;h=j+24|0;i=j+80|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;y=0;Ca(53,e|0,b|0,c+8|0,k|0);l=y;y=0;a:do if(l&1)d=Pa()|0;else{do if(!(FBa(e)|0)){l=f[b+4>>2]|0;f[i>>2]=f[c+24>>2];y=0;f[d>>2]=f[i>>2];Ca(54,h|0,l|0,d|0,k|0);l=y;y=0;if(l&1){d=Pa()|0;break a}else{f[d>>2]=f[h>>2];f[d+4>>2]=f[h+4>>2];f[d+8>>2]=f[h+8>>2];f[d+12>>2]=f[h+12>>2];oda(g,d);f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2];break}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}while(0);f3(k);u=j;return}while(0);f3(k);$a(d|0)}function Kn(){var a=0;bJ();f[19127]=14684;f[19129]=14704;f[19128]=0;dX(76516,77188);f[19147]=0;f[19148]=-1;aJ();f[19149]=14724;f[19151]=14744;f[19150]=0;dX(76604,77252);f[19169]=0;f[19170]=-1;TD(77316,10780,77364);f[19171]=28;f[19172]=48;dX(76688,77316);f[19190]=0;f[19191]=-1;SD(77372,10780,77420);f[19192]=14764;f[19193]=14784;dX(76772,77372);f[19211]=0;f[19212]=-1;TD(77428,10288,77476);f[19213]=28;f[19214]=48;dX(76856,77428);f[19232]=0;f[19233]=-1;a=f[76852+(f[(f[19213]|0)+-12>>2]|0)+24>>2]|0;f[19255]=28;f[19256]=48;dX(77024,a);f[19274]=0;f[19275]=-1;SD(77484,10288,77532);f[19234]=14764;f[19235]=14784;dX(76940,77484);f[19253]=0;f[19254]=-1;a=f[76936+(f[(f[19234]|0)+-12>>2]|0)+24>>2]|0;f[19276]=14764;f[19277]=14784;dX(77108,a);f[19295]=0;f[19296]=-1;f[76508+(f[(f[19127]|0)+-12>>2]|0)+72>>2]=76684;f[76596+(f[(f[19149]|0)+-12>>2]|0)+72>>2]=76768;a=76852+(f[(f[19213]|0)+-12>>2]|0)+4|0;f[a>>2]=f[a>>2]|8192;a=76936+(f[(f[19234]|0)+-12>>2]|0)+4|0;f[a>>2]=f[a>>2]|8192;f[76852+(f[(f[19213]|0)+-12>>2]|0)+72>>2]=76684;f[76936+(f[(f[19234]|0)+-12>>2]|0)+72>>2]=76768;return}function Ln(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;j=l;f[j>>2]=c;g=l+4|0;k=a+12|0;do if(!(b[k>>0]|0))d=-1;else{d=(f[a+4>>2]|0)-(f[a>>2]|0)|0;c=Vea(vj(Vea(wj(Vea(76852,59157)|0,c)|0,54382)|0,d)|0,72083)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[g>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,i=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,m=y,y=0,!(m&1)):0){pza(g);jn(c,i)|0;Yp(c)|0;break}m=Pa()|0;pza(g);$a(m|0)}while(0);MB(j,a);a:do if(b[k>>0]|0){c=a+4|0;while(1){if(d>>>0>=((f[c>>2]|0)-(f[a>>2]|0)|0)>>>0)break a;k=Vea(76852,58988)|0;m=Uaa(a,d)|0;Vea(vj(Vea(wj(k,h[m>>0]|0)|0,54382)|0,d)|0,61397)|0;d=d+1|0}}while(0);u=l;return a|0}function Mn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+48|0;e=h+16|0;g=h;NM(e,b,f[c+8>>2]|0);do if(!(FBa(e)|0)){d=c+16|0;if(!(csa(e)|0)){d=f[d>>2]|0;if(!d){NBa(a);break}else{NM(a,b,d);break}}else{NM(a,b,f[c+12>>2]|0);if(FBa(a)|0)break;if(f[d>>2]|0)break;gxa(g);f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];break}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}while(0);u=h;return}function Nn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j+16|0;k=j+4|0;i=j;g=f[f[a>>2]>>2]|0;d=g+(b*12|0)+8|0;a:do if((f[c+8>>2]|0)>>>0>=(f[d>>2]|0)>>>0){f[k>>2]=0;e=k+4|0;f[e>>2]=0;f[k+8>>2]=0;y=0;ga(6,f[g+(b*12|0)>>2]|0,g+(b*12|0)+4|0,f[c>>2]|0,c+4|0,k|0);g=y;y=0;b:do if(g&1)a=Pa()|0;else{c:do if((f[e>>2]|0)-(f[k>>2]|0)>>2>>>0>=(f[d>>2]|0)>>>0){a=f[f[a+4>>2]>>2]|0;e=a+(b*12|0)+4|0;a=f[a+(b*12|0)>>2]|0;d:while(1){if((a|0)==(e|0))break c;f[i>>2]=f[a+16>>2];y=0;Ca(63,h|0,c|0,i|0,i|0);b=y;y=0;if(b&1)break;d=f[a+4>>2]|0;if(!d)while(1){d=f[a+8>>2]|0;if((f[d>>2]|0)==(a|0)){a=d;continue d}else a=d}else a=d;while(1){d=f[a>>2]|0;if(!d)break;else a=d}}a=Pa()|0;break b}while(0);E4(k);break a}while(0);E4(k);$a(a|0)}while(0);u=j;return}function On(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;c=j;g=a+4|0;f[g>>2]=0;y=0;ya(112,c|0,a|0,1);e=y;y=0;a:do if(e&1){d=ab(0)|0;c=-1;i=10}else{b:do if(!(b[c>>0]|0))c=-1;else{c=f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0;d=c+12|0;e=f[d>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+40>>2]|0,c|0)|0;e=y;y=0;if(e&1)c=-1;else i=6}else{f[d>>2]=e+1;c=oHa(b[e>>0]|0)|0;i=6}do if((i|0)==6)if(bDa(c,-1)|0){g=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,g|0,f[g+16>>2]|6|0);g=y;y=0;if(g&1)break;else break b}else{f[g>>2]=1;break b}while(0);d=ab(0)|0;i=10;break a}while(0);h=c}while(0);do if((i|0)==10){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);i=y;y=0;if(!(i&1)){_a();h=c;break}c=Pa()|0;y=0;za(5);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}else $a(c|0)}while(0);u=j;return h|0}function Pn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+16|0;j=m;k=Pqa(b)|0;l=a+36|0;EO(l,k);d=f[l>>2]|0;c=(f[a+40>>2]|0)-d>>2;while(1){if((c|0)<=0)break;i=d;f[i>>2]=0;c=c+-1|0;d=i+4|0}d=a+48|0;EO(d,k);d=f[d>>2]|0;c=(f[a+52>>2]|0)-d>>2;while(1){if((c|0)<=0)break;i=d;f[i>>2]=0;c=c+-1|0;d=i+4|0}h=a+24|0;Fo(h,k);e=f[h>>2]|0;d=Rya(b)|0;g=e;if((d|0)>-1)c=d>>>5;else c=(d+-31|0)/32|0;c=(g+(c<<2)-e<<3)+(d&31)|0;if(!c)i=h;else{f[j>>2]=e;f[j+4>>2]=0;KH(j,c);i=h;g=f[h>>2]|0}c=Rya(b)|0;if((c|0)>-1)e=c>>>5;else e=(c+-31|0)/32|0;c=c&31;d=f[a+28>>2]|0;d=(d-(e<<5)&-32)+((d&31)-c)|0;if(d|0){f[j>>2]=g+(e<<2);f[j+4>>2]=c;UH(j,d)}QC(a,b+36|0);c=0;while(1){if((c|0)==(k|0))break;if(!(f[(f[l>>2]|0)+(c<<2)>>2]|0)){j=(f[i>>2]|0)+(c>>>5<<2)|0;f[j>>2]=f[j>>2]&~(1<<(c&31))}c=c+1|0}u=m;return}function Qn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;k=j7(c)|0;l=f[a+4>>2]|0;a:do if(l){m=l+-1|0;n=(m&l|0)==0;if(!n)if(k>>>0<l>>>0)j=k;else j=(k>>>0)%(l>>>0)|0;else j=m&k;a=f[(f[a>>2]|0)+(j<<2)>>2]|0;if(a){i=b[c+11>>0]|0;h=i<<24>>24<0;i=h?f[c+4>>2]|0:i&255;h=h?f[c>>2]|0:c;b:while(1){a=f[a>>2]|0;if(!a){a=0;break a}c=f[a+4>>2]|0;if((c|0)!=(k|0)){if(!n){if(c>>>0>=l>>>0)c=(c>>>0)%(l>>>0)|0}else c=c&m;if((c|0)==(j|0))continue;else{a=0;break}}e=a+8|0;c=b[e+11>>0]|0;d=c<<24>>24<0;c=c&255;if(((d?f[a+12>>2]|0:c)|0)!=(i|0))continue;if(d)if(!(ara(f[e>>2]|0,h,i)|0))break;else continue;g=h;d=e;while(1){if(!c)break a;if((b[d>>0]|0)!=(b[g>>0]|0))continue b;g=g+1|0;d=d+1|0;c=c+-1|0}}}else a=0}else a=0;while(0);return a|0}function Rn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;while(1){if((a|0)==(b|0))break;h=f[a>>2]|0;f[i>>2]=h;k=(Qt(c,i)|0)==0;e=h+48|0;g=f[e>>2]|0;h=h+52|0;d=f[h>>2]|0;a:do if(k){while(1){if((d|0)==(g|0))break;k=d+-4|0;f[h>>2]=k;d=k}e=f[a>>2]|0;d=f[e+36>>2]|0;e=e+40|0;g=f[e>>2]|0;while(1){if((g|0)==(d|0))break a;k=g+-4|0;f[e>>2]=k;g=k}}else{k=yv(g,d,c)|0;kN(e,k,f[(f[a>>2]|0)+52>>2]|0);k=f[a>>2]|0;h=k+36|0;k=yv(f[h>>2]|0,f[k+40>>2]|0,c)|0;kN(h,k,f[(f[a>>2]|0)+40>>2]|0)}while(0);a=a+4|0}u=j;return}function Sn(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;f[a>>2]=c;f[a+4>>2]=d;f[a+8>>2]=0;b[a+12>>0]=0;b[a+13>>0]=1;c=a+16|0;k=a+20|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;f[c+12>>2]=0;c=0;while(1){if((c|0)==3)break;f[k+(c<<2)>>2]=0;c=c+1|0}j=a+32|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}c=a+44|0;Bia(c);d=a+72|0;gua(d);e=a+84|0;gua(e);g=a+96|0;gua(g);h=a+108|0;gua(h);i=a+120|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;f[i+12>>2]=0;f[i+16>>2]=0;f[i+20>>2]=0;f[i+24>>2]=0;y=0;ia(345,a|0);l=y;y=0;if(l&1){l=Pa()|0;E4(a+136|0);e2(i);Kja(h);Kja(g);nia(e);uoa(d);Rba(c);zta(j);zta(k);$a(l|0)}else return}function Tn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0;c3(f[a>>2]|0,40)|0;i=gKa(f[a>>2]|0)|0;e=c+32|0;Vea(i,F$(f[e>>2]|0)|0)|0;if(b[c+20>>0]|0)Vea(f[a>>2]|0,39113)|0;Vea(f[a>>2]|0,39121)|0;i=c+8|0;d=b[i>>0]|0;if(!((d&255)>=4?!((d&255)<8&(f[e>>2]|0)==2):0))g=5;a:do if((g|0)==5)switch(d<<24>>24){case 1:{c3(f[a>>2]|0,56)|0;break a}case 2:{Vea(f[a>>2]|0,39104)|0;break a}case 4:{Vea(f[a>>2]|0,39107)|0;break a}default:Ka()}while(0);d=c+12|0;if(gKa(f[d>>2]|0)|0){g=Vea(f[a>>2]|0,39083)|0;vj(g,gKa(f[d>>2]|0)|0)|0}d=c+16|0;g=gKa(f[d>>2]|0)|0;if((g|0)!=(h[i>>0]|0)){i=Vea(f[a>>2]|0,39128)|0;vj(i,gKa(f[d>>2]|0)|0)|0}zea(a);kF(a,f[c+24>>2]|0);kF(a,f[c+28>>2]|0);x_(a);return}function Un(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;e=l;k=a+12|0;do if(!(b[k>>0]|0))d=-1;else{d=(f[a+4>>2]|0)-(f[a>>2]|0)|0;g=Vea(vj(Vea(vj(Vea(76852,58974)|0,c)|0,54382)|0,d)|0,72083)|0;Axa(e,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;i=ua(46,f[e>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,j=ua(f[(f[i>>2]|0)+28>>2]|0,i|0,10)|0,m=y,y=0,!(m&1)):0){pza(e);jn(g,j)|0;Yp(g)|0;break}m=Pa()|0;pza(e);$a(m|0)}while(0);oD(c,a);a:do if(b[k>>0]|0){e=a+4|0;while(1){if(d>>>0>=((f[e>>2]|0)-(f[a>>2]|0)|0)>>>0)break a;k=Vea(76852,58988)|0;m=Uaa(a,d)|0;Vea(vj(Vea(wj(k,h[m>>0]|0)|0,54382)|0,d)|0,61397)|0;d=d+1|0}}while(0);u=l;return a|0}function Vn(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+32|0;d=k+12|0;e=k+8|0;g=k+16|0;h=k+4|0;j=k;do if(!(fwa(a,45)|0)){if(((b[a>>0]|0)+-48|0)>>>0<10){f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(23313)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[g+11>>0]=d;c=g}else{e=d+16&-16;c=nV(e)|0;f[g>>2]=c;f[g+8>>2]=e|-2147483648;f[g+4>>2]=d}Pta(c,23313,d)|0;SBa(c+d|0,0);y=0;ua(50,g|0,a|0)|0;e=y;y=0;if((!(e&1)?(y=0,ya(64,j|0,((b[g+11>>0]|0)<0?f[g>>2]|0:g)|0,0),e=y,y=0,!(e&1)):0)?(FCa(h,f[j>>2]|0),y=0,i=la(149,f[h>>2]|0)|0,j=y,y=0,!(j&1)):0){zta(g);a=i;break}k=Pa()|0;zta(g);$a(k|0)}}else{c=$oa(a)|0;a=c;a:while(1){switch(b[a>>0]|0){case 0:break a;case 45:{b[a>>0]=95;break}default:{}}a=a+1|0}Tna(e,c,0);FCa(d,f[e>>2]|0);a=Vn(f[d>>2]|0)|0}while(0);u=k;return a|0}function Wn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;n=u;u=u+16|0;i=n+4|0;k=n;d=b+4|0;e=gKa(f[d>>2]|0)|0;g=b+8|0;Lp(a,e>>>0>(gKa(f[g>>2]|0)|0)>>>0);Mp(a,(gKa(f[g>>2]|0)|0)>>>0<65536);g=f[b+16>>2]|0;e=a+20|0;c=0;b=f[b+12>>2]|0;while(1){if((b|0)==(g|0))break;o=f[b>>2]|0;if(Uj(a,f[o+4>>2]|0,1,o,64140)|0?(l=f[b>>2]|0,h=b+4|0,j=b+8|0,$la(i,(f[j>>2]|0)-(f[h>>2]|0)|0,0),m=f[e>>2]|0,gKa(m)|0,$la(k,(gKa(f[m+92>>2]|0)|0)<<16,0),l=WD(l,f[i>>2]|0,f[k>>2]|0)|0,Po(a,l,f[b>>2]|0,64169)|0,l=(f[j>>2]|0)-(f[h>>2]|0)|0,up(a,l>>>0<=(gKa(f[d>>2]|0)|0)<<16>>>0,l),m=f[b>>2]|0,yFa(f[m>>2]|0)|0):0){p=csa((_ra(m)|0)+8|0)|0;o=p+l|0;q=o>>>0<=(gKa(f[d>>2]|0)|0)<<16>>>0;up(a,q,(f[j>>2]|0)-(f[h>>2]|0)|0);up(a,p>>>0>=c>>>0,(f[j>>2]|0)-(f[h>>2]|0)|0);c=o}b=b+16|0}u=n;return}function Xn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;h=i+24|0;d=i;NBa(a);gxa(h);e=f[c+32>>2]|0;if(e){YX(d,b,e);f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];if(!(FBa(a)|0)){f[h>>2]=f[a>>2];f[h+4>>2]=f[a+4>>2];f[h+8>>2]=f[a+8>>2];f[h+12>>2]=f[a+12>>2];g=4}}else g=4;if((g|0)==4?(YX(d,b,f[c+28>>2]|0),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],!(FBa(a)|0)):0){d=Y$(a)|0;g=J;b=f[c+24>>2]|0;if((g|0)>-1|(g|0)==-1&d>>>0>4294967295?d>>>0<(gKa(f[c+12>>2]|0)|0)>>>0:0){b=bga(c+8|0,d)|0;b=f[b>>2]|0}f[a+16>>2]=b;f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2]}u=i;return}function Yn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i;y=0;ya(112,d|0,a|0,0);g=y;y=0;a:do if(g&1){d=ab(0)|0;h=12}else b:do if(b[d>>0]|0){d=f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0;e=d+12|0;g=f[e>>2]|0;if((g|0)==(f[d+16>>2]|0)){y=0;d=la(f[(f[d>>2]|0)+40>>2]|0,d|0)|0;g=y;y=0;if(!(g&1))h=6}else{f[e>>2]=g+1;d=oHa(b[g>>0]|0)|0;h=6}do if((h|0)==6)if(bDa(d,-1)|0){c=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,c|0,f[c+16>>2]|6|0);c=y;y=0;if(c&1)break;else break b}else{g=oHa(d)|0;b[c>>0]=g;break b}while(0);d=ab(0)|0;h=12;break a}while(0);while(0);do if((h|0)==12){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);h=y;y=0;if(!(h&1)){_a();break}d=Pa()|0;y=0;za(5);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}else $a(d|0)}while(0);u=i;return a|0}function Zn(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;d=f[c+48>>2]|0;a:do if(!(d&16)){if(!(d&8)){f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=0;while(1){if((d|0)==3)break a;f[a+(d<<2)>>2]=0;d=d+1|0}}d=f[c+8>>2]|0;c=f[c+16>>2]|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;h=c-d|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[a+11>>0]=h;g=a}else{e=h+16&-16;g=nV(e)|0;f[a>>2]=g;f[a+8>>2]=e|-2147483648;f[a+4>>2]=h}e=g;while(1){if((d|0)==(c|0))break;SBa(e,b[d>>0]|0);d=d+1|0;e=e+1|0}SBa(g+h|0,0)}else{d=c+44|0;e=f[d>>2]|0;g=f[c+24>>2]|0;if(e>>>0<g>>>0)f[d>>2]=g;else g=e;d=f[c+20>>2]|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=g-d|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;h=nV(e)|0;f[a>>2]=h;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=h}e=a;while(1){if((d|0)==(g|0))break;SBa(e,b[d>>0]|0);d=d+1|0;e=e+1|0}SBa(a+c|0,0)}while(0);return}function _n(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+32|0;i=m+24|0;h=m+8|0;j=m;k=m+16|0;l=m+4|0;do if(b[a+12>>0]|0){g=Vea(76852,59300)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[i>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,n=y,y=0,!(n&1)):0){pza(i);jn(g,e)|0;Yp(g)|0;break}n=Pa()|0;pza(i);$a(n|0)}while(0);g=c+8|0;Bwa(i,g);iua(h,g);g=i+4|0;e=f[h>>2]|0;d=f[h+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[g>>2]|0,e,d)|0))break;n=ppa(i)|0;f[j>>2]=f[n>>2];Ql(a,j);bva(i)}n=Zq(f[a+4>>2]|0,16)|0;f[l>>2]=f[c+24>>2];f[i>>2]=f[l>>2];PDa(k,Up(a,i)|0);Un(n,f[k>>2]|0)|0;u=m;return}function $n(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+80|0;h=j+40|0;k=j+60|0;d=j;i=j+24|0;g=j+56|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;y=0;Ca(53,d|0,b|0,c+8|0,k|0);e=y;y=0;a:do if(e&1)b=Pa()|0;else{do if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else{b=f[b+4>>2]|0;d=f[b+36>>2]|0;e=f[(f[d>>2]|0)+8>>2]|0;b=f[b>>2]|0;f[g>>2]=f[c+24>>2];y=0;f[h>>2]=f[g>>2];b=ua(70,b|0,h|0)|0;g=y;y=0;if(!(g&1)?(y=0,Ca(e|0,i|0,d|0,b|0,k|0),g=y,y=0,!(g&1)):0){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];f[h+12>>2]=f[i+12>>2];oda(a,h);break}b=Pa()|0;break a}while(0);f3(k);u=j;return}while(0);f3(k);$a(b|0)}function ao(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0.0,i=0,j=0,k=0.0;e=f[b>>2]|0;i=f[a>>2]|0;k=+p[e+16>>3];h=+p[i+16>>3];j=wR(k,h)|0;g=f[c>>2]|0;d=wR(+p[g+16>>3],k)|0;do if(j){if(d){f[a>>2]=g;f[c>>2]=i;d=1;break}f[a>>2]=e;f[b>>2]=i;d=f[c>>2]|0;if(wR(+p[d+16>>3],h)|0){f[b>>2]=d;f[c>>2]=i;d=2}else d=1}else if(d){f[b>>2]=g;f[c>>2]=e;d=f[b>>2]|0;e=f[a>>2]|0;if(wR(+p[d+16>>3],+p[e+16>>3])|0){f[a>>2]=d;f[b>>2]=e;d=2}else d=1}else d=0;while(0);return d|0}function bo(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n;a:do if(!a)a=0;else{i=c;j=e-i|0;l=g+12|0;k=f[l>>2]|0;j=(k|0)>(j|0)?k-j|0:0;k=d;g=k-i|0;if((g|0)>0?(Rb[f[(f[a>>2]|0)+48>>2]&127](a,c,g)|0)!=(g|0):0){a=0;break}do if((j|0)>0){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(j>>>0<11){c=m+11|0;b[c>>0]=j;g=m;i=m}else{c=j+16&-16;g=nV(c)|0;f[m>>2]=g;f[m+8>>2]=c|-2147483648;f[m+4>>2]=j;c=m+11|0;i=m}_ma(g,j,h)|0;SBa(g+j|0,0);y=0;g=oa(f[(f[a>>2]|0)+48>>2]|0,a|0,((b[c>>0]|0)<0?f[i>>2]|0:m)|0,j|0)|0;h=y;y=0;if(!(h&1)){zta(m);if((g|0)==(j|0))break;else{a=0;break a}}else{n=Pa()|0;zta(m);$a(n|0)}}while(0);e=e-k|0;if((e|0)>0?(Rb[f[(f[a>>2]|0)+48>>2]&127](a,d,e)|0)!=(e|0):0){a=0;break}f[l>>2]=0}while(0);u=n;return a|0}function co(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=a+8|0;i=a+4|0;c=f[a>>2]|0;a:while(1){while(1){d=b[c>>0]|0;e=c+1|0;if(!(kEa(d<<24>>24)|0))break;if(d<<24>>24==10){f[i>>2]=(f[i>>2]|0)+1;f[h>>2]=e}f[a>>2]=e;c=e}switch(d<<24>>24){case 59:{if((b[e>>0]|0)!=59)break a;if((b[c+2>>0]|0)==64){Wg(a);d=f[a>>2]|0}else d=c;b:while(1){c=d+1|0;switch(b[d>>0]|0){case 10:case 0:break b;default:{}}f[a>>2]=c;d=c}f[i>>2]=(f[i>>2]|0)+1;f[a>>2]=c;f[h>>2]=c;continue a}case 40:break;default:break a}if((b[e>>0]|0)!=59)break;c=c+2|0;f[a>>2]=c;d=1;while(1){c:while(1){e=b[c>>0]|0;if(!(e<<24>>24))break a;g=c+1|0;switch(e<<24>>24){case 40:{if((b[g>>0]|0)==59){e=20;break c}break}case 59:{if((b[g>>0]|0)==41){e=22;break c}break}case 10:{f[i>>2]=(f[i>>2]|0)+1;f[h>>2]=c;break}default:{}}f[a>>2]=g;c=g}if((e|0)==20){c=c+2|0;f[a>>2]=c;d=d+1|0;continue}else if((e|0)==22){c=c+2|0;f[a>>2]=c;d=d+-1|0;if(!d)continue a;else continue}}}return}function eo(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;h=l+28|0;i=l+4|0;k=l+16|0;j=l;a:do if(c)c=1;else{f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[k+11>>0]=g;c=k}else{m=g+16&-16;c=nV(m)|0;f[k>>2]=c;f[k+8>>2]=m|-2147483648;f[k+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,k|0,59812)|0;m=y;y=0;do if(!(m&1)){f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];c=0;while(1){if((c|0)==3)break;f[k+(c<<2)>>2]=0;c=c+1|0}f[j>>2]=f[d>>2];y=0;f[h>>2]=f[j>>2];ya(113,a|0,i|0,h|0);m=y;y=0;if(m&1){c=Pa()|0;zta(i);break}else{zta(i);zta(k);c=0;break a}}else c=Pa()|0;while(0);zta(k);$a(c|0)}while(0);u=l;return c|0}function fo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;h=l+12|0;k=l;i=l+8|0;do if(b[a+12>>0]|0){g=Vea(76852,56929)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[h>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(h);jn(g,e)|0;Yp(g)|0;break}l=Pa()|0;pza(h);$a(l|0)}while(0);g=Op(a)|0;j=c+4|0;f[j>>2]=g;g=at(a)|0;f[c+8>>2]=g;f[i>>2]=g;f[h>>2]=f[i>>2];qta(k,h,0);g=a+148|0;d=f[g>>2]|0;if(d>>>0<(f[a+152>>2]|0)>>>0){h=k;i=f[h+4>>2]|0;k=d;f[k>>2]=f[h>>2];f[k+4>>2]=i;f[g>>2]=(f[g>>2]|0)+8}else ry(a+144|0,k);e=Dn(a,f[j>>2]|0)|0;f[c+12>>2]=e;e=f[g>>2]|0;d=0;while(1){if((d|0)==-1)break;k=d+-1|0;f[g>>2]=e+(k<<3);d=k}Zia(c,f[j>>2]|0);u=l;return}function go(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;c3(f[a>>2]|0,40)|0;g=gKa(f[a>>2]|0)|0;e=c+4|0;Vea(g,F$(f[e>>2]|0)|0)|0;if(b[c+20>>0]|0)Vea(f[a>>2]|0,39113)|0;Vea(f[a>>2]|0,39136)|0;g=c+8|0;d=b[g>>0]|0;if(!((d&255)>=4?!((d&255)<8&(f[e>>2]|0)==2):0)){switch(d<<24>>24){case 1:{c3(f[a>>2]|0,56)|0;break}case 2:{Vea(f[a>>2]|0,39104)|0;break}case 4:{Vea(f[a>>2]|0,39107)|0;break}default:Ka()}Vea(f[a>>2]|0,b[c+9>>0]|0?39142:39110)|0}d=c+12|0;if(gKa(f[d>>2]|0)|0){e=Vea(f[a>>2]|0,39083)|0;vj(e,gKa(f[d>>2]|0)|0)|0}d=c+16|0;e=gKa(f[d>>2]|0)|0;if((e|0)!=(h[g>>0]|0)){g=Vea(f[a>>2]|0,39128)|0;vj(g,gKa(f[d>>2]|0)|0)|0}zea(a);kF(a,f[c+24>>2]|0);x_(a);return}function ho(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;e=u;u=u+256|0;i=e+240|0;g=e;h=e+252|0;if(f[18711]|0)Vea(76684,21974)|0;d=nV(232)|0;y=0;ia(334,d|0);j=y;y=0;if(j&1){c=Pa()|0;$Ja(d)}else{gza(i);y=0;ja(71,i|0,b|0);j=y;y=0;if(!(j&1)){if(b|0)S0(f[i>>2]|0,a|0,b|0)|0;Cr(g,d,i,0);y=0;ia(346,g|0);j=y;y=0;if(!(j&1)){Jx(g);F4(i);u=e;return d|0}a=ab(64)|0;j=J;Jx(g);if((j|0)==(Wa(64)|0)){j=Ya(a|0)|0;y=0;ia(337,j|0);j=y;y=0;if(!(j&1)?(y=0,za(4),j=y,y=0,!(j&1)):0){y=0;ua(52,h|0,22270)|0;j=y;y=0;if(j&1){Pa()|0;bfa()}else bfa()}a=Pa()|0;y=0;za(5);j=y;y=0;if(j&1){j=ab(0)|0;lDa(j)}else c=a}else c=a}else c=Pa()|0;F4(i)}$a(c|0);return 0}function io(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+32|0;i=l+16|0;j=l+12|0;m=l;e=a+36|0;g=c+11|0;h=c+4|0;k=a+24|0;d=a+28|0;while(1){a=f[e>>2]|0;f[e>>2]=a+1;_L(m,a);a=b[g>>0]|0;n=a<<24>>24<0;y=0;oa(61,m|0,(n?f[c>>2]|0:c)|0,(n?f[h>>2]|0:a&255)|0)|0;a=y;y=0;if(a&1){d=9;break}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ja(582,j|0,i|0);n=y;y=0;if(n&1){d=10;break}zta(i);zta(m);if((SN(k,j)|0)==(d|0)){d=8;break}}if((d|0)==8){jz(i,k,j,j);u=l;return f[j>>2]|0}else if((d|0)==9)a=Pa()|0;else if((d|0)==10){a=Pa()|0;zta(i)}zta(m);$a(a|0);return 0}function jo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;e=b+-4|0;c=a+4|0;d=a+8|0;switch(b-a>>2|0){case 1:case 0:{c=1;break}case 2:{d=f[e>>2]|0;c=f[a>>2]|0;if(Iwa(d,c)|0){f[a>>2]=d;f[e>>2]=c;c=1}else c=1;break}case 3:{qw(a,c,e)|0;c=1;break}case 4:{Oz(a,c,d,e)|0;c=1;break}case 5:{wv(a,c,d,a+12|0,e)|0;c=1;break}default:{qw(a,c,d)|0;i=a+12|0;c=0;while(1){if((i|0)==(b|0)){d=1;c=0;break}g=f[i>>2]|0;h=g;if(Iwa(g,f[d>>2]|0)|0)e=i;else{d=i;i=i+4|0;continue}while(1){f[e>>2]=f[d>>2];if((d|0)==(a|0))break;e=d+-4|0;if(Iwa(g,f[e>>2]|0)|0){j=d;d=e;e=j}else break}f[d>>2]=h;c=c+1|0;e=i+4|0;if((c|0)==8){d=0;c=(e|0)==(b|0);break}else{d=i;i=e}}c=c|d}}return c|0}function ko(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;l=m;g=(f[b+4>>2]|0)-(f[b>>2]|0)>>2;gza(l);y=0;ja(604,l|0,g|0);k=y;y=0;do if(!(k&1)){e=f[l>>2]|0;d=0;while(1){if((d|0)==(g|0))break;f[e+(f[(f[c>>2]|0)+(d<<2)>>2]<<2)>>2]=d;d=d+1|0}y=0;k=la(150,24)|0;j=y;y=0;if(!(j&1)?(gza(k),y=0,ja(1938,k|0,b|0),j=y,y=0,!(j&1)):0){if(!g){y=0;Ca(52,50114,50016,770,50124);y=0;break}d=Rya(gKa(f[(f[a>>2]|0)+32>>2]|0)|0)|0;i=g+-1|0;j=f[l>>2]|0;while(1){if(d>>>0>=i>>>0)break;g=f[k>>2]|0;e=g+(d<<2)|0;c=f[e>>2]|0;b=d+1|0;g=g+(b<<2)|0;h=f[g>>2]|0;if((f[j+(c<<2)>>2]|0)>>>0>(f[j+(h<<2)>>2]|0)>>>0){f[e>>2]=h;f[g>>2]=c;d=b}d=d+1|0}y=0;ja(1939,a|0,k|0);a=y;y=0;if(!(a&1)){E4(l);u=m;return k|0}}}while(0);m=Pa()|0;E4(l);$a(m|0);return 0}function lo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;e=g+12|0;h=g;d=Hra(c)|0;c=rr(c)|0;do if(d){FCa(e,c);c=f[e>>2]|0}else{d=PH(gKa(c)|0)|0;c=f[a+20>>2]|0;if(d>>>0<(f[a+24>>2]|0)-c>>2>>>0){c=f[c+(d<<2)>>2]|0;f[e>>2]=c;break}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;a=uHa(53641)|0;do if(a>>>0<=4294967279){if(a>>>0<11){b[h+11>>0]=a;c=h}else{d=a+16&-16;y=0;c=la(150,d|0)|0;g=y;y=0;if(g&1){i=12;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=a}Pta(c,53641,a)|0;SBa(c+a|0,0);y=0;ja(583,e|0,h|0);g=y;y=0;if(g&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(d)i=14}else{y=0;za(3);y=0;i=12}while(0);if((i|0)==12){c=Pa()|0;i=14}if((i|0)==14)Oa(e|0);$a(c|0)}while(0);u=g;return c|0}function mo(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;k=l+12|0;j=l;a:do if((((((c-a|0)>2?(b[a>>0]|0)==100:0)?(b[a+1>>0]|0)==115:0)?(m=a+2|0,e=fc(m,c,d)|0,(e|0)!=(m|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(k,g+-24|0);c=f[i>>2]|0;a=c+-24|0;while(1){if((c|0)==(a|0))break;m=c+-24|0;f[i>>2]=m;Xka(m);c=f[i>>2]|0}y=0;ya(149,j|0,72376,k|0);m=y;y=0;do if(!(m&1)){m=b[j+11>>0]|0;g=m<<24>>24<0;y=0;oa(73,(f[i>>2]|0)+-24|0,(g?f[j>>2]|0:j)|0,(g?f[j+4>>2]|0:m&255)|0)|0;m=y;y=0;if(m&1){a=Pa()|0;zta(j);break}else{zta(j);zta(k);a=h;break a}}else a=Pa()|0;while(0);zta(k);$a(a|0)}while(0);u=l;return a|0}function no(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;k=l+12|0;j=l;a:do if((((((c-a|0)>2?(b[a>>0]|0)==100:0)?(b[a+1>>0]|0)==116:0)?(m=a+2|0,e=fc(m,c,d)|0,(e|0)!=(m|0)):0)?(h=Kc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(k,g+-24|0);c=f[i>>2]|0;a=c+-24|0;while(1){if((c|0)==(a|0))break;m=c+-24|0;f[i>>2]=m;Xka(m);c=f[i>>2]|0}y=0;ya(149,j|0,72374,k|0);m=y;y=0;do if(!(m&1)){m=b[j+11>>0]|0;g=m<<24>>24<0;y=0;oa(73,(f[i>>2]|0)+-24|0,(g?f[j>>2]|0:j)|0,(g?f[j+4>>2]|0:m&255)|0)|0;m=y;y=0;if(m&1){a=Pa()|0;zta(j);break}else{zta(j);zta(k);a=h;break a}}else a=Pa()|0;while(0);zta(k);$a(a|0)}while(0);u=l;return a|0}function oo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;e=g+12|0;h=g;d=Hra(c)|0;c=rr(c)|0;do if(d){FCa(e,c);c=f[e>>2]|0}else{d=PH(gKa(c)|0)|0;c=f[a+8>>2]|0;if(d>>>0<(f[a+12>>2]|0)-c>>2>>>0){c=f[c+(d<<2)>>2]|0;f[e>>2]=c;break}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;a=uHa(52081)|0;do if(a>>>0<=4294967279){if(a>>>0<11){b[h+11>>0]=a;c=h}else{d=a+16&-16;y=0;c=la(150,d|0)|0;g=y;y=0;if(g&1){i=12;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=a}Pta(c,52081,a)|0;SBa(c+a|0,0);y=0;ja(583,e|0,h|0);g=y;y=0;if(g&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(d)i=14}else{y=0;za(3);y=0;i=12}while(0);if((i|0)==12){c=Pa()|0;i=14}if((i|0)==14)Oa(e|0);$a(c|0)}while(0);u=g;return c|0}function po(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;e=g+12|0;h=g;d=Hra(c)|0;c=rr(c)|0;do if(d){FCa(e,c);c=f[e>>2]|0}else{d=PH(gKa(c)|0)|0;c=f[a+32>>2]|0;if(d>>>0<(f[a+36>>2]|0)-c>>2>>>0){c=f[c+(d<<2)>>2]|0;f[e>>2]=c;break}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;a=uHa(52910)|0;do if(a>>>0<=4294967279){if(a>>>0<11){b[h+11>>0]=a;c=h}else{d=a+16&-16;y=0;c=la(150,d|0)|0;g=y;y=0;if(g&1){i=12;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=a}Pta(c,52910,a)|0;SBa(c+a|0,0);y=0;ja(583,e|0,h|0);g=y;y=0;if(g&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(d)i=14}else{y=0;za(3);y=0;i=12}while(0);if((i|0)==12){c=Pa()|0;i=14}if((i|0)==14)Oa(e|0);$a(c|0)}while(0);u=g;return c|0}function qo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a:do if(f[a+8>>2]|0){e=i3(a)|0;b:while(1){if(!e)break a;if((b|0)==(c|0)){b=e;break}f[e+16>>2]=f[b+16>>2];g=OI(e)|0;XM(a,e);d=f[b+4>>2]|0;if(!d)while(1){d=f[b+8>>2]|0;if((f[d>>2]|0)==(b|0)){e=g;b=d;continue b}else b=d}else b=d;while(1){d=f[b>>2]|0;if(!d)break;else b=d}e=g}while(1){d=f[b+8>>2]|0;if(!d)break;b=d}MV(b);b=c}while(0);c:while(1){if((b|0)==(c|0))break;sE(a,b+16|0);d=f[b+4>>2]|0;if(!d)while(1){d=f[b+8>>2]|0;if((f[d>>2]|0)==(b|0)){b=d;continue c}else b=d}else b=d;while(1){d=f[b>>2]|0;if(!d)break;else b=d}}return}function ro(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,g=0.0;a:do switch(f[b>>2]|0){case 3:{g=+Hoa(b);e=+Hoa(c);c=(JAa(g)|0)<0^(JAa(e)|0)<0;d=c?-0.0:0.0;switch(C4(e)|0){case 2:{switch(C4(g)|0){case 0:{tda(a,+gU(g));break a}case 2:{tda(a,+Baa(C,d));break a}case 1:case 3:case 4:{tda(a,+Baa(D,d));break a}default:Ka()}break}case 3:case 4:case 1:case 0:{tda(a,g/e);break a}default:Ka()}break}case 4:{g=+Goa(b);d=+Goa(c);Mra(g)|0;c=(J|0)<0;Mra(d)|0;e=c^(J|0)<0?-0.0:0.0;switch(mV(d)|0){case 2:{switch(mV(g)|0){case 0:{S5(a,+mN(g));break a}case 2:{S5(a,+d$(C,e));break a}case 1:case 3:case 4:{S5(a,+d$(D,e));break a}default:Ka()}break}case 3:case 4:case 1:case 0:{S5(a,g/d);break a}default:Ka()}break}default:Ka()}while(0);return}function so(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+32|0;g=j+28|0;h=j+4|0;k=j+16|0;i=j;a:do if(c){f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(64386)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[k+11>>0]=e;c=k}else{l=e+16&-16;c=nV(l)|0;f[k>>2]=c;f[k+8>>2]=l|-2147483648;f[k+4>>2]=e}Pta(c,64386,e)|0;SBa(c+e|0,0);y=0;ua(81,k|0,60793)|0;l=y;y=0;do if(!(l&1)){f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];c=0;while(1){if((c|0)==3)break;f[k+(c<<2)>>2]=0;c=c+1|0}f[i>>2]=f[d>>2];y=0;f[g>>2]=f[i>>2];ya(113,a|0,h|0,g|0);l=y;y=0;if(l&1){c=Pa()|0;zta(h);break}else{zta(h);zta(k);break a}}else c=Pa()|0;while(0);zta(k);$a(c|0)}while(0);u=j;return}function to(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;l$(a,52950);Xsa(a);gP(a,40);d=UAa(b,1)|0;Cg(a,f[d>>2]|0);gP(a,41);zya(a);d=XP(b)|0;a:do if(d){c=UAa(b,2)|0;while(1){c=f[c>>2]|0;gKa(c)|0;if(!(hJa(f[c>>2]|0)|0)){e=8;break a}g=UAa(c,0)|0;if(!(jha(f[g>>2]|0,f[18936]|0)|0)){e=8;break a}if(!(XP(c)|0))break;c=UAa(c,3)|0}gP(a,123);g=a+16|0;f[g>>2]=(f[g>>2]|0)+1;A2(a);c=UAa(b,2)|0;Cg(a,f[c>>2]|0);f[g>>2]=(f[g>>2]|0)+-1;A2(a);gP(a,125)}else e=8;while(0);if((e|0)==8?(g=UAa(b,2)|0,Tba(a,f[g>>2]|0),g=UAa(b,2)|0,!(jaa(f[g>>2]|0)|0)):0)gP(a,59);if(d?(zya(a),l$(a,29120),Xsa(a),g=UAa(b,3)|0,Tba(a,f[g>>2]|0),g=UAa(b,3)|0,!(jaa(f[g>>2]|0)|0)):0)gP(a,59);return}function uo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;h=i+8|0;g=i;Aaa(f[a>>2]|0,42702,0)|0;d=c+8|0;if(pJa(f[d>>2]|0)|0){e=c3(f[a>>2]|0,32)|0;K2(e,f[d>>2]|0)|0}d=c+4|0;if(rCa(f[d>>2]|0)|0){e=Vea(f[a>>2]|0,39243)|0;c3(Vea(e,F$(f[d>>2]|0)|0)|0,41)|0}zea(a);d=f[c+12>>2]|0;c=xAa(d)|0;if((c|0)!=0&(b[a+20>>0]|0)==0?tJa(f[c+8>>2]|0)|0:0){e=c+12|0;Bwa(h,e);iua(g,e);e=h+4|0;c=f[g>>2]|0;d=f[g+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[e>>2]|0,c,d)|0))break;g=ppa(h)|0;kF(a,f[g>>2]|0);bva(h)}}else kF(a,d);x_(a);u=i;return}function vo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;g=k+8|0;h=k;if(yS(d)|0){if(!c){c=0;i=0}else{c=f[c+4>>2]|0;xk(a,c,d);i=1}e=a+28|0;if(Po(a,(WS(e,b)|0)!=0,d,61158)|0){d=KM(e,b)|0;d=f[d>>2]|0;f[g>>2]=d;e=a+40|0;if(QZ(e,d)|0){a=$I(e,g)|0;e=f[a>>2]|0;if((e|0)!=5){if(!((c|0)==5|(c|0)==(e|0))){c=0;j=10}}else j=10;if((j|0)==10)f[a>>2]=c;c=a+4|0;if((i|0)!=(f[c>>2]|0))f[c>>2]=-1}else{pxa(h,c,i);j=$I(e,g)|0;i=f[h+4>>2]|0;f[j>>2]=f[h>>2];f[j+4>>2]=i}}}else jz(g,a+52|0,b,b);u=k;return}function wo(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,g=0,h=0,i=0,j=0,k=0.0;j=u;u=u+5024|0;d=j+2516|0;h=j;e=Vya(gKa(f[a+32>>2]|0)|0)|0;do if(e>>>0<2)Eg(a,b);else{e=Y(e+-1|0,e)|0;h1(d,a);$r(h,d,e>>>0<20?e:20);d=h+4|0;e=f[f[d>>2]>>2]|0;gKa(e)|0;c=+Uwa(+p[e+16>>3]);while(1){y=0;ia(375,h|0);e=y;y=0;if(e&1)break;g=f[f[d>>2]>>2]|0;gKa(g)|0;k=c;c=+Uwa(+p[g+16>>3]);if(c==k){i=7;break}}if((i|0)==7?(y=0,ya(102,a|0,g|0,b|0),i=y,y=0,!(i&1)):0){D1(h);break}j=Pa()|0;D1(h);$a(j|0)}while(0);u=j;return}function xo(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+16|0;h=j;f[h>>2]=0;d=h+4|0;f[d>>2]=0;f[h+8>>2]=0;i=a+48|0;y=0;ja(452,h|0,i|0);g=y;y=0;do if(!(g&1)){g=a+68|0;e=f[g>>2]|0;b=e+-12|0;c=f[d>>2]|0;if(c>>>0>=(f[h+8>>2]|0)>>>0){y=0;ja(452,h|0,b|0);e=y;y=0;if(e&1)break}else{f[c>>2]=0;l=c+4|0;f[l>>2]=0;f[c+8>>2]=0;f[c>>2]=f[b>>2];k=e+-8|0;f[l>>2]=f[k>>2];e=e+-4|0;f[c+8>>2]=f[e>>2];f[e>>2]=0;f[k>>2]=0;f[b>>2]=0;f[d>>2]=(f[d>>2]|0)+12}c=f[g>>2]|0;b=c+-12|0;while(1){if((c|0)==(b|0))break;l=c+-12|0;f[g>>2]=l;mU(l);c=f[g>>2]|0}y=0;b=ua(76,a|0,h|0)|0;l=y;y=0;if(!(l&1)){qQ(i,b);OQ(h);u=j;return}}while(0);l=Pa()|0;OQ(h);$a(l|0)}function yo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;k=l+8|0;g=l;NL(d,gKa(f[c+4>>2]|0)|0);Bwa(k,c);iua(g,c);i=d+4|0;j=d+8|0;c=k+4|0;e=f[g>>2]|0;g=f[g+4>>2]|0;while(1){if(!(Cpa(f[k>>2]|0,f[c>>2]|0,e,g)|0)){c=9;break}h=ppa(k)|0;NM(a,b,f[h>>2]|0);if(FBa(a)|0){c=8;break}h=f[i>>2]|0;if((h|0)==(f[j>>2]|0))Tx(d,a);else{f[h>>2]=f[a>>2];f[h+4>>2]=f[a+4>>2];f[h+8>>2]=f[a+8>>2];f[h+12>>2]=f[a+12>>2];f[i>>2]=(f[i>>2]|0)+16}bva(k)}if((c|0)!=8)if((c|0)==9)NBa(a);u=l;return}function zo(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;l=u;u=u+16|0;j=l+4|0;k=l;f[j>>2]=g;f[k>>2]=h;a=bua(a+144|0)|0;if(f[18711]|0){h=qN(a)|0;h=Vea(vj(Vea(vj(Vea(vj(Vea(vj(Vea(76684,20507)|0,h)|0,20730)|0,c)|0,72307)|0,d)|0,72307)|0,e)|0,20179)|0;g=EN(74808,j)|0;g=Vea(vj(h,f[g>>2]|0)|0,20128)|0;h=EN(74808,k)|0;Vea(vj(Vea(vj(g,f[h>>2]|0)|0,20761)|0,i)|0,19943)|0}b[a+20>>0]=0;b[a+8>>0]=c;eja(a+12|0,d,0)|0;eja(a+16|0,e|0?e:c,0)|0;f[a+24>>2]=f[j>>2];f[a+28>>2]=f[k>>2];f[a+32>>2]=i;r4(a);u=l;return a|0}function Ao(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+16|0;g=m+12|0;k=m+8|0;l=m;i=m+4|0;c=a+44|0;j=b+24|0;if(bv(f[c>>2]|0,j)|0?(f[b+4>>2]|0)!=5:0){h=a+36|0;d=f[h>>2]|0;gKa(d)|0;VBa(g,d);d=kaa(f[g>>2]|0,b)|0;jva(f[a+16>>2]|0,d)|0;c=f[c>>2]|0;b=f[a+32>>2]|0;gKa(b)|0;if(!(bv(c+20|0,b)|0))Na(46858,46231,134,46915);e=Mi(c+20|0,b)|0;d=bga(d+12|0,0)|0;f[k>>2]=d;b=gKa(f[h>>2]|0)|0;f[i>>2]=f[j>>2];f[g>>2]=f[i>>2];b=vY(b,g)|0;f[l>>2]=b;c=e+4|0;a=f[c>>2]|0;if(a>>>0<(f[e+8>>2]|0)>>>0){pxa(a,d,b);f[c>>2]=(f[c>>2]|0)+8}else zy(e,k,l)}u=m;return}function Bo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+32|0;g=j+12|0;h=j+16|0;i=j;d=a+24|0;e=a+28|0;do if((SN(d,b)|0)==(e|0)){a=f[b>>2]|0;f[g>>2]=a}else{c=a+36|0;b=f[b>>2]|0;while(1){a=f[c>>2]|0;f[c>>2]=a+1;_L(i,a);y=0;ua(81,i|0,b|0)|0;a=y;y=0;if(a&1){b=10;break}f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}y=0;ja(582,g|0,h|0);a=y;y=0;if(a&1){b=11;break}zta(h);zta(i);if((SN(d,g)|0)==(e|0)){b=13;break}}if((b|0)==10)a=Pa()|0;else if((b|0)==11){a=Pa()|0;zta(h)}else if((b|0)==13){a=f[g>>2]|0;break}zta(i);$a(a|0)}while(0);u=j;return a|0}function Co(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;g=j;do if(b[a+12>>0]|0){h=Vea(76852,56929)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);g=a+4|0;Zq(f[g>>2]|0,3)|0;i=f[g>>2]|0;h=c+4|0;d=f[h>>2]|0;Ln(i,GU((d|0)==5?0:d)|0)|0;d=c+8|0;i=a+140|0;e=f[i>>2]|0;if((e|0)==(f[a+144>>2]|0))XC(a+136|0,d);else{f[e>>2]=f[d>>2];f[i>>2]=(f[i>>2]|0)+4}$s(a,f[c+12>>2]|0);e=f[i>>2]|0;d=0;while(1){if((d|0)==-1)break;c=d+-1|0;f[i>>2]=e+(c<<2);d=c}Zq(f[g>>2]|0,11)|0;if((f[h>>2]|0)==5)Zq(f[g>>2]|0,0)|0;u=j;return}function Do(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+64|0;g=i+48|0;d=i;c=i+44|0;b=f[a+8>>2]|0;a:do if(pJa(b)|0){f[c>>2]=b;f[g>>2]=f[c>>2];TH(d,a,g);h=dO(f[d+32>>2]|0,f[d+36>>2]|0)|0;f[a+4>>2]=h;y=0;ia(360,a|0);h=y;y=0;if(h&1){i=Pa()|0;_sa(d);$a(i|0)}else{_sa(d);break}}else{e=a+12|0;h=a+4|0;do if(gKa(f[a+16>>2]|0)|0){Bwa(g,e);iua(d,e);a=g+4|0;c=f[d>>2]|0;b=f[d+4>>2]|0;while(1){if(!(Cpa(f[g>>2]|0,f[a>>2]|0,c,b)|0)){c=8;break}d=ppa(g)|0;if((f[(f[d>>2]|0)+4>>2]|0)==5){c=7;break}bva(g)}if((c|0)==7){f[h>>2]=5;break a}else if((c|0)==8){b=efa(e)|0;b=f[(f[b>>2]|0)+4>>2]|0;break}}else b=0;while(0);f[h>>2]=b}while(0);u=i;return}function Eo(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,g=0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0.0;m=u;u=u+32|0;i=m+20|0;j=m;k=m+8|0;l=m+4|0;f[k>>2]=0;e=k+4|0;f[e>>2]=0;f[k+8>>2]=0;y=0;Ca(76,f[a>>2]|0,b|0,k|0,l|0);g=y;y=0;do if(!(g&1)){c=f[k>>2]|0;g=f[e>>2]|0;f[j>>2]=c;if((c|0)!=(g|0)){c=j;e=i;a:while(1){f[e>>2]=f[c>>2];c=f[j>>2]|0;e=f[i>>2]|0;do{e=e+4|0;if((e|0)==(g|0))break a}while((f[c>>2]|0)>>>0>=(f[e>>2]|0)>>>0);f[i>>2]=e;c=i;e=j}}e=f[c>>2]|0;g=f[(f[a>>2]|0)+136>>2]|0;if(g>>>0<e>>>0){y=0;Ca(52,50067,50016,719,50097);y=0;break}h=1.0/(+(g>>>0)*2.0);c=0;d=+((g-e|0)>>>0);while(1){if((c|0)==(g|0))break;n=(f[(f[b>>2]|0)+(c<<2)>>2]|0)==(c|0)?h+d:d;c=c+1|0;d=n}Vra(b,d*100.0+ +((f[l>>2]|0)>>>0));E4(k);u=m;return}while(0);m=Pa()|0;E4(k);$a(m|0)}function Fo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+32|0;k=l+24|0;e=l+8|0;g=l;h=a+4|0;c=f[h>>2]|0;if(c>>>0<b>>>0){i=f[a+8>>2]|0;d=i<<5;j=b-c|0;do if(d>>>0<j>>>0|c>>>0>(d-j|0)>>>0){f[e>>2]=0;c=e+4|0;f[c>>2]=0;f[e+8>>2]=0;if((b|0)>=0){i=i<<6;b=b+31&-32;y=0;ja(1904,e|0,(d>>>0<1073741823?(i>>>0<b>>>0?b:i):2147483647)|0);i=y;y=0;if(!(i&1)){i=f[h>>2]|0;f[c>>2]=i+j;c=f[a>>2]|0;f[k>>2]=f[e>>2];f[k+4>>2]=0;Qv(g,c,0,c+(i>>>5<<2)|0,i&31,k);c=g;i=f[c>>2]|0;c=f[c+4>>2]|0;LV(a,e);HCa(f[e>>2]|0);a=i;break}}else{y=0;za(8);y=0}l=Pa()|0;HCa(f[e>>2]|0);$a(l|0)}else{a=(f[a>>2]|0)+(c>>>5<<2)|0;f[h>>2]=b;c=c&31}while(0);if(j|0){f[k>>2]=a;f[k+4>>2]=c;KH(k,j)}}else f[h>>2]=b;u=l;return}function Go(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;k=o+8|0;l=o;m=b+4|0;d=f[m>>2]|0;e=f[b>>2]|0;n=e;switch(d-e|0){case 0:{Na(32308,32248,281,32328);break}case 12:break;default:c=3}a:do if((c|0)==3){j=a+44|0;i=1;a=e;c=n;while(1){if(i>>>0>=((d-a|0)/12|0)>>>0)break a;e=c+(i*12|0)|0;d=0;while(1){if(d>>>0>=(f[j>>2]|0)>>>0)break;a=f[e>>2]|0;g=a+(d*12|0)+4|0;h=(f[n>>2]|0)+(d*12|0)|0;a=f[a+(d*12|0)>>2]|0;b:while(1){if((a|0)==(g|0))break;f[l>>2]=f[a+16>>2];cz(k,h,l,l);c=f[a+4>>2]|0;if(!c)while(1){c=f[a+8>>2]|0;if((f[c>>2]|0)==(a|0)){a=c;continue b}else a=c}else a=c;while(1){c=f[a>>2]|0;if(!c)break;else a=c}}d=d+1|0}c=f[b>>2]|0;i=i+1|0;d=f[m>>2]|0;a=c}}while(0);u=o;return n|0}function Ho(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;j=l;f[j>>2]=d;if(!(rCa(c)|0))Na(47630,47491,124,47655);i=(e|0)==-1;k=a+60|0;do if(pJa(f[b>>2]|0)|0){h=a+48|0;g=SN(h,b)|0;if((g|0)!=(a+52|0)){e=g+20|0;if(d|0){i=f[e>>2]|0;k=EN(k,j)|0;f[k>>2]=i}e=f[e>>2]|0;break}if(i)e=u1(gKa(f[a+32>>2]|0)|0,c)|0;i=KM(h,b)|0;f[i>>2]=e;if(f[j>>2]|0){k=EN(k,j)|0;f[k>>2]=e}}else{if(!d)Na(47675,47491,142,47655);g=OO(k,d)|0;if((g|0)!=(a+64|0)){e=f[g+20>>2]|0;break}if(i)e=u1(gKa(f[a+32>>2]|0)|0,c)|0;k=EN(k,j)|0;f[k>>2]=e}while(0);u=l;return e|0}function Io(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+16|0;k=j;d=a+8|0;Ir(a,a+4|0,d,c)|0;h=a+12|0;a:while(1){if((h|0)==(b|0)){i=3;break}if(GA(f[c>>2]|0,h,d)|0){e=f[h>>2]|0;f[h>>2]=0;f[k>>2]=e;e=h;while(1){l=f[d>>2]|0;f[d>>2]=0;g=f[e>>2]|0;f[e>>2]=l;if(g|0){XV(g);$Ja(g)}if((d|0)==(a|0))break;e=d+-4|0;y=0;g=oa(52,f[c>>2]|0,k|0,e|0)|0;l=y;y=0;if(l&1)break a;if(g){l=d;d=e;e=l}else break}l=f[k>>2]|0;f[k>>2]=0;e=f[d>>2]|0;f[d>>2]=l;if(e|0){XV(e);$Ja(e)}d=f[k>>2]|0;f[k>>2]=0;if(d|0){XV(d);$Ja(d)}}d=h;h=h+4|0}if((i|0)==3){u=j;return}d=Pa()|0;e=f[k>>2]|0;f[k>>2]=0;if(e|0){XV(e);$Ja(e)}$a(d|0)}function Jo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;g=h;Aaa(f[a>>2]|0,39381,0)|0;c3(I3(f[a>>2]|0,f[b+4>>2]|0)|0,32)|0;c3(I3(f[a>>2]|0,f[b+8>>2]|0)|0,32)|0;e=a+24|0;switch(f[b+12>>2]|0){case 0:{d=f[b+16>>2]|0;if(pJa(d)|0){e=f[e>>2]|0;f[g>>2]=d;f[c>>2]=f[g>>2];Qp(a,UX(e,c)|0,b)}break}case 1:{TF(a,(f[e>>2]|0)+60|0);break}case 2:{Eu(a,(f[e>>2]|0)+88|0);break}case 3:{Vea(Vea(c3(K2(Vea(f[a>>2]|0,39389)|0,f[b>>2]|0)|0,32)|0,F$(f[b+20>>2]|0)|0)|0,72083)|0;break}default:Ka()}c3(f[a>>2]|0,41)|0;u=h;return}function Ko(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+48|0;j=k+8|0;d=k+4|0;i=k;h=b+12|0;c=f[h>>2]|0;do if(c){if((f[c+4>>2]|0)==5){jva(f[a+16>>2]|0,c)|0;break}g=QM(a,c)|0;f[d>>2]=f[b+8>>2];f[j>>2]=f[d>>2];e=Ho(a,j,g,0,-1)|0;d=Rx(a,f[h>>2]|0,e)|0;f[h>>2]=0;$5(b);d=p5(f[a+44>>2]|0,d,b)|0;jva(f[a+16>>2]|0,d)|0;c=b+16|0;if(!(f[c>>2]|0))e=7;else{cJa(i);f[j>>2]=f[i>>2];Ho(a,j,g,d,e)|0;e=7}}else{d=b;c=b+16|0;e=7}while(0);do if((e|0)==7){Pca(j,a,d);y=0;ja(1629,j|0,c|0);a=y;y=0;if(a&1){k=Pa()|0;E$(j);$a(k|0)}else{E$(j);break}}while(0);u=k;return}function Lo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+32|0;l=o+16|0;c=o+8|0;i=o;if(aea(b)|0){m=b+8|0;Bwa(l,m);iua(c,m);m=a+32|0;j=b+32|0;n=a+36|0;k=a+40|0;h=l+4|0;g=f[c>>2]|0;e=f[c+4>>2]|0;d=a+28|0;while(1){if(!(Cpa(f[l>>2]|0,f[h>>2]|0,g,e)|0))break;a=ppa(l)|0;if(bDa(f[a>>2]|0,f[d>>2]|0)|0){c=f[j>>2]|0;if(!c)c=0;else c=f[c+4>>2]|0;f[i>>2]=c;a=f[n>>2]|0;if(a>>>0<(f[k>>2]|0)>>>0){f[a>>2]=c;f[n>>2]=a+4}else XC(m,i)}bva(l)}if(bDa(f[b+24>>2]|0,f[d>>2]|0)|0){c=f[j>>2]|0;if(!c)c=0;else c=f[c+4>>2]|0;f[l>>2]=c;a=f[n>>2]|0;if(a>>>0<(f[k>>2]|0)>>>0){f[a>>2]=c;f[n>>2]=a+4}else XC(m,l)}}u=o;return}function Mo(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h;f[a+4>>2]=0;y=0;ya(112,c|0,a|0,1);d=y;y=0;a:do if(d&1){d=ab(0)|0;c=-1;g=10}else{do if(!(b[c>>0]|0))c=-1;else{c=f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0;d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;d=y;y=0;if(d&1)c=-1;else g=6}else{c=oHa(b[d>>0]|0)|0;g=6}if((g|0)==6){if(!(bDa(c,-1)|0))break;d=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,d|0,f[d+16>>2]|2|0);d=y;y=0;if(!(d&1))break}d=ab(0)|0;g=10;break a}while(0);e=c}while(0);do if((g|0)==10){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);g=y;y=0;if(!(g&1)){_a();e=c;break}c=Pa()|0;y=0;za(5);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}else $a(c|0)}while(0);u=h;return e|0}function No(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+80|0;d=h+48|0;e=h+24|0;g=h;Aia(d,b,f[c+8>>2]|0);if(!(FBa(d)|0)){Aia(e,b,f[c+12>>2]|0);if(!(FBa(e)|0)){Aia(g,b,f[c+16>>2]|0);if(FBa(g)|0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else{g=(csa(g)|0)!=0;g=g?d:e;f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=h;return}function Oo(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j;i=j+12|0;a:do if(c)c=1;else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;c=i}else{k=g+16&-16;c=nV(k)|0;f[i>>2]=c;f[i+8>>2]=k|-2147483648;f[i+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,i|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(122,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(i);c=0;break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=j;return c|0}function Po(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j;i=j+12|0;a:do if(c)c=1;else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;c=i}else{k=g+16&-16;c=nV(k)|0;f[i>>2]=c;f[i+8>>2]=k|-2147483648;f[i+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,i|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(117,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(i);c=0;break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=j;return c|0}function Qo(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j;i=j+12|0;a:do if(c)c=1;else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;c=i}else{k=g+16&-16;c=nV(k)|0;f[i>>2]=c;f[i+8>>2]=k|-2147483648;f[i+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,i|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(121,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(i);c=0;break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=j;return c|0}function Ro(){GFa();sFa();nFa();lFa();jFa();hFa();cFa();aFa();$Ea();_Ea();ZEa();YEa();XEa();WEa();VEa();UEa();TEa();SEa();REa();QEa();PEa();OEa();NEa();MEa();LEa();KEa();JEa();IEa();HEa();GEa();FEa();EEa();DEa();CEa();BEa();AEa();zEa();yEa();xEa();wEa();vEa();uEa();tEa();sEa();rEa();qEa();pEa();oEa();nEa();mEa();lEa();hEa();gEa();fEa();eEa();dEa();cEa();bEa();return}function So(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j;i=j+12|0;a:do if(c)c=1;else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;c=i}else{k=g+16&-16;c=nV(k)|0;f[i>>2]=c;f[i+8>>2]=k|-2147483648;f[i+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,i|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(114,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(i);c=0;break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=j;return c|0}function To(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;h=j;i=j+12|0;a:do if(c)c=1;else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;c=i}else{k=g+16&-16;c=nV(k)|0;f[i>>2]=c;f[i+8>>2]=k|-2147483648;f[i+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,i|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(120,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(i);c=0;break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=j;return c|0}function Uo(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;f[d>>2]=a;f[h>>2]=e;a=f[d>>2]|0;a:while(1){if(a>>>0>=c>>>0){a=0;break}l=f[a>>2]|0;if(l>>>0>1114111|(l&-2048|0)==55296){a=2;break}do if(l>>>0>=128){k=(l&63|128)&255;if(l>>>0<2048){a=f[h>>2]|0;if((g-a|0)<2){a=1;break a}f[h>>2]=a+1;b[a>>0]=l>>>6|192;l=f[h>>2]|0;f[h>>2]=l+1;b[l>>0]=k;break}a=f[h>>2]|0;e=g-a|0;i=a+1|0;j=(l>>>6&63|128)&255;if(l>>>0<65536){if((e|0)<3){a=1;break a}f[h>>2]=i;b[a>>0]=l>>>12|224;l=f[h>>2]|0;f[h>>2]=l+1;b[l>>0]=j;l=f[h>>2]|0;f[h>>2]=l+1;b[l>>0]=k;break}else{if((e|0)<4){a=1;break a}f[h>>2]=i;b[a>>0]=l>>>18|240;i=f[h>>2]|0;f[h>>2]=i+1;b[i>>0]=l>>>12&63|128;l=f[h>>2]|0;f[h>>2]=l+1;b[l>>0]=j;l=f[h>>2]|0;f[h>>2]=l+1;b[l>>0]=k;break}}else{a=f[h>>2]|0;if((g-a|0)<1){a=1;break a}f[h>>2]=a+1;b[a>>0]=l}while(0);a=(f[d>>2]|0)+4|0;f[d>>2]=a}return a|0}function Vo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+32|0;d=k+12|0;l=k+16|0;j=k+8|0;i=k+4|0;h=k;f[d>>2]=b;f[l>>2]=l;e=l+4|0;f[e>>2]=l;g=l+8|0;f[g>>2]=0;y=0;ja(584,l|0,d|0);d=y;y=0;if(d&1)b=Pa()|0;else{d=a+4|0;a:while(1){if(!(f[g>>2]|0)){a=16;break}c=f[(f[e>>2]|0)+8>>2]|0;f[j>>2]=c;u3(l);if(!(_qa(d,c)|0)){y=0;ja(550,d|0,j|0);a=y;y=0;if(a&1){a=6;break}b=f[c+16>>2]|0;gKa(b)|0;a=i;while(1){f[a>>2]=b;m=EFa(c)|0;a=f[i>>2]|0;b=a;if((b|0)==(m|0))break;y=0;ja(584,l|0,a+8|0);m=y;y=0;if(m&1){a=13;break a}f[i>>2]=f[b+4>>2];a=h}}}if((a|0)==6)b=Pa()|0;else if((a|0)==13)b=Pa()|0;else if((a|0)==16){Qua(l);u=k;return}}Qua(l);$a(b|0)}function Wo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+1040|0;g=j;i=j+8|0;e=f[2619]|0;d=Aba(c,i)|0;switch(d|0){case 0:{f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(i)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{e=d+16&-16;g=nV(e)|0;f[a>>2]=g;f[a+8>>2]=e|-2147483648;f[a+4>>2]=d;a=g}Pta(a,i,d)|0;SBa(a+d|0,0);break}case -1:{d=f[2619]|0;h=3;break}default:h=3}a:do if((h|0)==3){f[2619]=e;switch(d|0){case 22:{f[g>>2]=c;uha(i,1024,70800,g)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(i)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{g=d+16&-16;h=nV(g)|0;f[a>>2]=h;f[a+8>>2]=g|-2147483648;f[a+4>>2]=d;a=h}Pta(a,i,d)|0;SBa(a+d|0,0);break a}case 34:{Ka();break}default:Na(70817,70837,99,70920)}}while(0);u=j;return}function Xo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;c=a+8|0;ao(a,a+4|0,c)|0;h=a+12|0;while(1){if((h|0)==(b|0))break;i=f[h>>2]|0;g=i+16|0;if(wR(+p[g>>3],+p[(f[c>>2]|0)+16>>3])|0){f[h>>2]=0;d=h;while(1){j=f[c>>2]|0;f[c>>2]=0;e=f[d>>2]|0;f[d>>2]=j;if(e|0){E4(e);$Ja(e)}if((c|0)==(a|0))break;d=c+-4|0;if(wR(+p[g>>3],+p[(f[d>>2]|0)+16>>3])|0){j=c;c=d;d=j}else break}d=f[c>>2]|0;f[c>>2]=i;if(d|0){E4(d);$Ja(d)}}c=h;h=h+4|0}return}function Yo(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0;e=u;u=u+208|0;b=e+152|0;c=e;g=e+200|0;if(f[18711]|0)Vea(76684,21974)|0;d=nV(232)|0;y=0;ia(334,d|0);i=y;y=0;if(!(i&1)){y=0;ja(70,b|0,a|0);i=y;y=0;if(i&1){a=ab(64)|0;b=J}else{y=0;a=ua(51,f[b+44>>2]|0,0)|0;i=y;y=0;if(!(i&1)?(y=0,Ca(49,c|0,d|0,a|0,0),i=y,y=0,!(i&1)):0){jG(c);oDa(b);u=e;return d|0}a=ab(64)|0;i=J;oDa(b);b=i}if((b|0)==(Wa(64)|0)){i=Ya(a|0)|0;y=0;ia(337,i|0);i=y;y=0;if(!(i&1)?(y=0,za(4),i=y,y=0,!(i&1)):0){y=0;ua(52,g|0,22023)|0;i=y;y=0;if(i&1){Pa()|0;bfa()}else bfa()}a=Pa()|0;y=0;za(5);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}else h=a}else h=a}else{h=Pa()|0;$Ja(d)}$a(h|0);return 0}function Zo(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;k=m+20|0;e=m+16|0;g=m+12|0;h=m+8|0;j=m+4|0;l=m;do if(b[a+26>>0]|0){i=c+12|0;d=f[i>>2]|0;if(!d){if(!(b[a+25>>0]|0))break;d=gKa(f[a+20>>2]|0)|0;f[e>>2]=f[c+16>>2];f[k>>2]=f[e>>2];d=UX(d,k)|0;e=f[d+4>>2]|0;f[g>>2]=f[c>>2];f[k>>2]=f[g>>2];Rj(a,e,k,63496);e=f[d+12>>2]|0;d=f[d+8>>2]|0;while(1){if((d|0)==(e|0))break;g=f[d>>2]|0;f[h>>2]=f[c>>2];f[k>>2]=f[h>>2];Rj(a,g,k,63544);d=d+4|0}d=f[i>>2]|0}if((d|0)==1){d=f[a+20>>2]|0;gKa(d)|0;d=(b[d+61>>0]|0)!=0;f[j>>2]=f[c>>2];f[k>>2]=f[j>>2];eo(a,d,k,63591)|0;d=f[i>>2]|0}if((d|0)==2){j=f[a+20>>2]|0;gKa(j)|0;j=(b[j+113>>0]|0)!=0;f[l>>2]=f[c>>2];f[k>>2]=f[l>>2];eo(a,j,k,63654)|0}}while(0);u=m;return}function _o(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;g=l;k=a+4|0;i=f[k>>2]|0;j=f[a>>2]|0;h=j;do if((i|0)==(j|0)){j=a+8|0;d=f[j>>2]|0;e=a+12|0;m=f[e>>2]|0;c=m;if(d>>>0>=m>>>0){c=c-h>>1;c=(c|0)==0?1:c;fF(g,c,(c+3|0)>>>2,f[a+16>>2]|0);zV(g,f[k>>2]|0,f[j>>2]|0);c=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=c;c=g+4|0;m=f[k>>2]|0;f[k>>2]=f[c>>2];f[c>>2]=m;c=g+8|0;m=f[j>>2]|0;f[j>>2]=f[c>>2];f[c>>2]=m;c=g+12|0;m=f[e>>2]|0;f[e>>2]=f[c>>2];f[c>>2]=m;M1(g);c=f[k>>2]|0;break}a=d;g=((c-a>>2)+1|0)/2|0;c=d+(g<<2)|0;a=a-i|0;m=a>>2;e=c+(0-m<<2)|0;if(m){S0(e|0,i|0,a|0)|0;c=e;d=f[j>>2]|0}f[k>>2]=c;f[j>>2]=d+(g<<2)}else c=i;while(0);f[c+-4>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+-4;u=l;return}function $o(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;i=u;u=u+32|0;h=i;j=i+12|0;a:do if(!c){f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[j+11>>0]=g;c=j}else{k=g+16&-16;c=nV(k)|0;f[j>>2]=c;f[j+8>>2]=k|-2147483648;f[j+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,j|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}y=0;ya(139,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(j);break a}}else c=Pa()|0;while(0);zta(j);$a(c|0)}while(0);u=i;return}function ap(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;i=u;u=u+32|0;h=i;j=i+12|0;a:do if(!c){f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[j+11>>0]=g;c=j}else{k=g+16&-16;c=nV(k)|0;f[j>>2]=c;f[j+8>>2]=k|-2147483648;f[j+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ua(81,j|0,59812)|0;k=y;y=0;do if(!(k&1)){f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}y=0;ya(132,a|0,h|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(h);break}else{zta(h);zta(j);break a}}else c=Pa()|0;while(0);zta(j);$a(c|0)}while(0);u=i;return}function bp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+64|0;d=i+40|0;e=i+16|0;g=i;h=i+56|0;NM(e,b,f[c+24>>2]|0);if(FBa(e)|0){f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}else{b=b+4|0;j=f[b>>2]|0;f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];j=ep(j,c,d)|0;e=f[(f[b>>2]|0)+36>>2]|0;b=f[(f[e>>2]|0)+24>>2]|0;f[h>>2]=j;f[d>>2]=f[h>>2];dc[b&127](g,e,c,d);f[d>>2]=f[g>>2];f[d+4>>2]=f[g+4>>2];f[d+8>>2]=f[g+8>>2];f[d+12>>2]=f[g+12>>2];oda(a,d)}u=i;return}function cp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;g=l;k=a+4|0;i=f[k>>2]|0;j=f[a>>2]|0;h=j;do if((i|0)==(j|0)){j=a+8|0;d=f[j>>2]|0;e=a+12|0;m=f[e>>2]|0;c=m;if(d>>>0>=m>>>0){c=c-h>>1;c=(c|0)==0?1:c;fF(g,c,(c+3|0)>>>2,a+12|0);zV(g,f[k>>2]|0,f[j>>2]|0);c=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=c;c=g+4|0;m=f[k>>2]|0;f[k>>2]=f[c>>2];f[c>>2]=m;c=g+8|0;m=f[j>>2]|0;f[j>>2]=f[c>>2];f[c>>2]=m;c=g+12|0;m=f[e>>2]|0;f[e>>2]=f[c>>2];f[c>>2]=m;M1(g);c=f[k>>2]|0;break}a=d;g=((c-a>>2)+1|0)/2|0;c=d+(g<<2)|0;a=a-i|0;m=a>>2;e=c+(0-m<<2)|0;if(m){S0(e|0,i|0,a|0)|0;c=e;d=f[j>>2]|0}f[k>>2]=c;f[j>>2]=d+(g<<2)}else c=i;while(0);f[c+-4>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+-4;u=l;return}function dp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+48|0;e=j+8|0;k=j+16|0;h=j+4|0;g=j;f[e>>2]=c;i=nV(24)|0;hwa(i);NW(f[a>>2]|0,i);f[i+20>>2]=c;f[c+96>>2]=i;a:do if((gKa(f[b+8>>2]|0)|0)>>>0>1){IO(b,c);vE(c,d,b);ija(k);y=0;ja(550,k|0,e|0);e=y;y=0;do if(!(e&1)){a=f[d+16>>2]|0;gKa(a)|0;c=EFa(d)|0;b=h;while(1){f[b>>2]=a;b=f[h>>2]|0;a=b;if((a|0)==(c|0)){b=5;break}y=0;Ca(65,f[b+8>>2]|0,1,i|0,k|0);e=y;y=0;if(e&1){b=9;break}f[h>>2]=f[a+4>>2];b=g}if((b|0)==5){_fa(k);break a}else if((b|0)==9){a=Pa()|0;break}}else a=Pa()|0;while(0);_fa(k);$a(a|0)}while(0);u=j;return i|0}function ep(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0;i=u;u=u+16|0;e=i;g=i+4|0;$la(g,(gKa(f[a+32>>2]|0)|0)<<16,0);if((f[c>>2]|0)==1){d=csa(c)|0;c=d;d=((d|0)<0)<<31>>31}else{c=Eka(c)|0;d=J}k=b+12|0;l=gKa(f[k>>2]|0)|0;j=gKa(f[g>>2]|0)|0;Wi(a,l,0,j,0,26813);Wi(a,c,d,j-(gKa(f[k>>2]|0)|0)|0,0,26829);d=Hsa(gKa(f[k>>2]|0)|0,0,c|0,d|0)|0;g=J;b=b+8|0;Wi(a,h[b>>0]|0,0,j,0,26844);Wi(a,d,g,j-(h[b>>0]|0)|0,0,26859);$la(e,d,g);u=i;return f[e>>2]|0}function fp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(61616)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,61616,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(124,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function gp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(61527)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,61527,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(123,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function hp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(61218)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,61218,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(119,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function ip(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(63316)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,63316,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(133,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function jp(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0;e=u;u=u+16|0;g=e;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[g+(c<<2)>>2]=0;c=c+1|0}d=b[h+11>>0]|0;i=d<<24>>24<0;c=i?f[h>>2]|0:h;d=c+(i?f[h+4>>2]|0:d&255)|0;while(1){if(c>>>0>=d>>>0){d=9;break}y=0;ja(82,g|0,b[c>>0]|0);i=y;y=0;if(i&1){d=8;break}c=c+1|0}do if((d|0)==8)c=Pa()|0;else if((d|0)==9){c=(b[g+11>>0]|0)<0?f[g>>2]|0:g;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[a+(d<<2)>>2]=0;d=d+1|0}d=c+(iJ(gKa(c)|0)|0)|0;while(1){if(c>>>0>=d>>>0){d=17;break}y=0;ja(82,a|0,b[c>>0]|0);i=y;y=0;if(i&1){d=16;break}c=c+1|0}if((d|0)==16){c=Pa()|0;zta(a);break}else if((d|0)==17){zta(g);u=e;return}}while(0);zta(g);$a(c|0)}function kp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(61190)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,61190,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(118,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function lp(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;d=n+8|0;i=n+4|0;j=n;a:do if(((b[a+26>>0]|0?(e=a+20|0,g=gKa(f[e>>2]|0)|0,f[i>>2]=f[c+24>>2],f[d>>2]=f[i>>2],g=I$(g,d)|0,Qo(a,(g|0)!=0,c,61400)|0):0)?(h=g+16|0,Qo(a,pJa(f[h>>2]|0)|0,c,61430)|0):0)?(l=gKa(f[e>>2]|0)|0,f[j>>2]=f[h>>2],f[d>>2]=f[j>>2],j=UX(l,d)|0,l=c+8|0,k=c+12|0,i=gKa(f[k>>2]|0)|0,m=j+8|0,Qo(a,(i|0)==((f[j+12>>2]|0)-(f[m>>2]|0)>>2|0),c,61326)|0):0){d=0;while(1){if(d>>>0>=(gKa(f[k>>2]|0)|0)>>>0)break a;j=bga(l,d)|0;if(!(Qj(a,f[(f[j>>2]|0)+4>>2]|0,f[(f[m>>2]|0)+(d<<2)>>2]|0,c)|0))Vea(vj(Vea(76852,61383)|0,d)|0,61397)|0;d=d+1|0}}while(0);u=n;return}function mp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(60755)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,60755,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,60793)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(115,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function np(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(63374)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,63374,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(134,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function op(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0;i=u;u=u+16|0;j=i;h=Nm(a)|0;eja(c,Nm(a)|0,0)|0;if((h&3|0)!=2){b[e>>0]=h>>>1&1;if(!(h&1))f[d>>2]=g;else eja(d,Nm(a)|0,0)|0;u=i;return}d=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;c=uHa(54854)|0;do if(c>>>0<=4294967279){if(c>>>0<11){b[j+11>>0]=c;g=j}else{a=c+16&-16;y=0;g=la(150,a|0)|0;i=y;y=0;if(i&1){k=10;break}f[j>>2]=g;f[j+8>>2]=a|-2147483648;f[j+4>>2]=c}Pta(g,54854,c)|0;SBa(g+c|0,0);y=0;ja(583,d|0,j|0);i=y;y=0;if(i&1)a=1;else{y=0;ya(79,d|0,64,361);y=0;a=0}g=Pa()|0;zta(j);if(a)k=12}else{y=0;za(3);y=0;k=10}while(0);if((k|0)==10){g=Pa()|0;k=12}if((k|0)==12)Oa(d|0);$a(g|0)}function pp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(60838)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,60838,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,60793)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(116,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function qp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(60811)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,60811,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(116,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function rp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;j=l+4|0;k=l;g=a+4|0;h=b+8|0;c=kL(a+40|0,h)|0;f[c>>2]=f[g>>2];c=BT()|0;i=b+12|0;e=gKa(f[b+16>>2]|0)|0;b=bDa(f[g>>2]|0,f[18679]|0)|0;d=e+-1|0;e=b?e:d;b=0;while(1){if((b|0)==(e|0))break;m=bga(i,b)|0;Dt(c,gKa(AT(a,f[m>>2]|0,f[18679]|0)|0)|0);b=b+1|0}if(aDa(f[g>>2]|0,f[18679]|0)|0){m=bga(i,d)|0;Dt(c,JF(a,f[m>>2]|0,f[g>>2]|0)|0)}b=f[h>>2]|0;if(pJa(b)|0){f[k>>2]=b;f[j>>2]=f[k>>2];c=vL(Yma(j)|0,c)|0}u=l;return c|0}function sp(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;k=f[c+4>>2]|0;e=f[d+4>>2]|0;l=k+-1|0;m=(l&k|0)==0;if(!m)if(e>>>0<k>>>0)i=e;else i=(e>>>0)%(k>>>0)|0;else i=l&e;h=(f[c>>2]|0)+(i<<2)|0;n=f[h>>2]|0;while(1){e=f[n>>2]|0;if((e|0)==(d|0))break;else n=e}j=c+8|0;if((n|0)!=(j|0)){e=f[n+4>>2]|0;if(!m){if(e>>>0>=k>>>0)e=(e>>>0)%(k>>>0)|0}else e=e&l;if((e|0)!=(i|0))g=13}else g=13;do if((g|0)==13){e=f[d>>2]|0;if(e|0){e=f[e+4>>2]|0;if(!m){if(e>>>0>=k>>>0)e=(e>>>0)%(k>>>0)|0}else e=e&l;if((e|0)==(i|0))break}f[h>>2]=0}while(0);g=f[d>>2]|0;e=g;if(g){g=f[g+4>>2]|0;if(!m){if(g>>>0>=k>>>0)g=(g>>>0)%(k>>>0)|0}else g=g&l;if((g|0)!=(i|0)){f[(f[c>>2]|0)+(g<<2)>>2]=n;e=f[d>>2]|0}}f[n>>2]=e;f[d>>2]=0;c=c+12|0;f[c>>2]=(f[c>>2]|0)+-1;f[a>>2]=d;f[a+4>>2]=j;b[a+8>>0]=1;return}function tp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;i=j+8|0;d=j;c=b+8|0;if((pJa(f[c>>2]|0)|0?(WS(a+96|0,c)|0)==0:0)?(h=SN(a+60|0,c)|0,(h|0)!=(a+64|0)):0){g=b+12|0;Bwa(i,g);iua(d,g);g=i+4|0;e=f[d>>2]|0;c=f[d+4>>2]|0;d=1;while(1){if(!(Cpa(f[i>>2]|0,f[g>>2]|0,e,c)|0))break;k=ppa(i)|0;k=d&(f[(f[k>>2]|0)+4>>2]|0)!=5;bva(i);d=k}e=h+20|0;if(d){uua(i,b);c=h+24|0;d=f[c>>2]|0;if(d>>>0<(f[h+28>>2]|0)>>>0){f[d>>2]=f[i>>2];f[d+4>>2]=f[i+4>>2];f[d+8>>2]=f[i+8>>2];f[c>>2]=(f[c>>2]|0)+12}else Kx(e,i)}oe(a,e,b)}u=j;return}function up(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;g=h;i=h+12|0;a:do if(!c){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(64205)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[i+11>>0]=e;c=i}else{j=e+16&-16;c=nV(j)|0;f[i>>2]=c;f[i+8>>2]=j|-2147483648;f[i+4>>2]=e}Pta(c,64205,e)|0;SBa(c+e|0,0);y=0;ua(81,i|0,59812)|0;j=y;y=0;do if(!(j&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ya(137,a|0,g|0,d|0);j=y;y=0;if(j&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);break a}}else c=Pa()|0;while(0);zta(i);$a(c|0)}while(0);u=h;return}function vp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;j=k;h=f[b>>2]|0;g=pJa(h)|0;i=f[c>>2]|0;d=g^(pJa(i)|0);if(d|g^1)d=d^1;else{g=f[a>>2]|0;d=g+4|0;e=f[d>>2]|0;if((e|0)==(f[g+8>>2]|0))XC(g,b);else{f[e>>2]=h;f[d>>2]=(f[d>>2]|0)+4}d=NK(f[a+4>>2]|0,b)|0;e=d+4|0;g=f[e>>2]|0;if((g|0)==(f[d+8>>2]|0))XC(d,c);else{f[g>>2]=i;f[e>>2]=(f[e>>2]|0)+4}d=f[a+8>>2]|0;h=a+12|0;e=f[h>>2]|0;f[j>>2]=e;g=d+4|0;b=f[g>>2]|0;if(b>>>0<(f[d+8>>2]|0)>>>0){f[b>>2]=e;f[g>>2]=(f[g>>2]|0)+4}else XC(d,j);b=f[a+16>>2]|0;d=f[h>>2]|0;f[j>>2]=d;e=b+4|0;g=f[e>>2]|0;if(g>>>0<(f[b+8>>2]|0)>>>0){f[g>>2]=d;f[e>>2]=(f[e>>2]|0)+4}else XC(b,j);d=1}u=k;return d|0}function wp(a){a=a|0;if(!a)Na(59079,64509,76,59084);do switch(f[a>>2]|0){case 1:{ABa(a);break}case 2:{qDa(a);break}case 3:{KCa(a);break}case 4:{zBa(a);break}case 5:{WAa(a);break}case 6:{OCa(a);break}case 7:{OCa(a);break}case 8:{oya(a);break}case 23:case 22:case 20:case 27:case 26:case 24:case 25:case 11:case 9:break;case 10:{HAa(a);break}case 12:{aAa(a);break}case 13:{LCa(a);break}case 14:{jCa(a);break}case 15:{kCa(a);break}case 16:{iCa(a);break}case 17:{JBa(a);break}case 18:{IBa(a);break}case 19:{NCa(a);break}case 21:{MCa(a);break}default:Ka()}while(0);return}function xp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=b+12|0;e=f[(f[d>>2]|0)+4>>2]|0;if((e|0)!=5?(c=f[(f[b+16>>2]|0)+4>>2]|0,(c|0)!=5):0)mk(a,e,c,b);switch(f[b+8>>2]|0){case 24:case 23:case 22:case 21:case 20:case 19:case 18:case 17:case 16:case 15:case 14:case 13:case 12:case 11:case 10:case 9:case 8:case 7:case 6:case 5:case 4:case 3:case 2:case 1:case 0:{Yj(a,f[(f[d>>2]|0)+4>>2]|0,1,b,62673);break}case 49:case 48:case 47:case 46:case 45:case 44:case 43:case 42:case 41:case 40:case 39:case 38:case 37:case 36:case 35:case 34:case 33:case 32:case 31:case 30:case 29:case 28:case 27:case 26:case 25:{Yj(a,f[(f[d>>2]|0)+4>>2]|0,2,b,62680);break}case 62:case 61:case 60:case 59:case 58:case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:{Yj(a,f[(f[d>>2]|0)+4>>2]|0,3,b,62687);break}case 75:case 74:case 73:case 72:case 71:case 70:case 69:case 68:case 67:case 66:case 65:case 64:case 63:{Yj(a,f[(f[d>>2]|0)+4>>2]|0,4,b,62694);break}default:Ka()}return}function yp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+96|0;h=k+4|0;e=k;g=a+12|0;d=a+16|0;c=f[d>>2]|0;do if((gKa(c)|0)==1){c=bga(g,0)|0;c=f[c>>2]|0;f[e>>2]=f[a+8>>2];f[h>>2]=f[e>>2];if(oB(c,h)|0){c=f[d>>2]|0;j=10;break}e=bga(g,0)|0;e=f[e>>2]|0;Ot(h,uya(f[b+40>>2]|0)|0,e);g=jca(h)|0;hT(h);d=f[e+4>>2]|0;if(!g?!(rCa(d)|0):0){i=f[b+36>>2]|0;gKa(i)|0;VBa(h,i);i=jq(h,a)|0;break}c=f[a+4>>2]|0;if((c|0)!=(d|0))if((rCa(c)|0)&(d|0)==5)i=a;else Na(31692,31758,47,31780);else i=e}else j=10;while(0);if((j|0)==10)if(!(gKa(c)|0)){Tta(a)|0;i=a}else i=a;u=k;return i|0}function zp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+32|0;e=h;g=f[c+8>>2]|0;NM(e,b,f[c+12>>2]|0);do if(!(FBa(e)|0)){d=c+4|0;c=f[d>>2]|0;if(pJa(c)|0?(f[e>>2]|0)!=(c|0):0)Na(26691,39631,804,32270);g=(f[f[b+8>>2]>>2]|0)+(g<<4)|0;f[g>>2]=f[e>>2];f[g+4>>2]=f[e+4>>2];f[g+8>>2]=f[e+8>>2];f[g+12>>2]=f[e+12>>2];if(pJa(f[d>>2]|0)|0){f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2];break}else{NBa(a);break}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}while(0);u=h;return}function Ap(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;e=l;k=a+8|0;c=f[k>>2]|0;g=a+12|0;j=f[g>>2]|0;h=j;i=c;do if((c|0)==(j|0)){j=a+4|0;c=f[j>>2]|0;m=f[a>>2]|0;d=m;if(c>>>0<=m>>>0){c=h-d>>1;c=(c|0)==0?1:c;fF(e,c,c>>>2,f[a+16>>2]|0);zV(e,f[j>>2]|0,f[k>>2]|0);c=f[a>>2]|0;f[a>>2]=f[e>>2];f[e>>2]=c;c=e+4|0;m=f[j>>2]|0;f[j>>2]=f[c>>2];f[c>>2]=m;c=e+8|0;m=f[k>>2]|0;f[k>>2]=f[c>>2];f[c>>2]=m;c=e+12|0;m=f[g>>2]|0;f[g>>2]=f[c>>2];f[c>>2]=m;M1(e);c=f[k>>2]|0;break}a=c;e=((a-d>>2)+1|0)/-2|0;g=c+(e<<2)|0;d=i-a|0;a=d>>2;if(a){S0(g|0,c|0,d|0)|0;c=f[j>>2]|0}m=g+(a<<2)|0;f[k>>2]=m;f[j>>2]=c+(e<<2);c=m}while(0);f[c>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+4;u=l;return}function Bp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+32|0;i=l;e=l+16|0;h=c+4|0;b=f[h>>2]|0;g=c+8|0;if(bDa(b,f[18735]|0)|0?bDa(f[g>>2]|0,f[18734]|0)|0:0){e=f[d+4>>2]|0;b=f[d>>2]|0;while(1){if((b|0)==(e|0))break;f[i>>2]=f[b>>2];f[i+4>>2]=f[b+4>>2];f[i+8>>2]=f[b+8>>2];f[i+12>>2]=f[b+12>>2];c3(iv(76684,i)|0,10)|0;b=b+16|0}gxa(a);u=l;return}if(bDa(b,f[18790]|0)|0?bDa(f[g>>2]|0,f[18733]|0)|0:0){Vea(76684,25518)|0;ub(zb(1)|0,216,0)}Zza();y=0;b=ua(52,e|0,25549)|0;a=y;y=0;if(((!(a&1)?(y=0,j=ua(52,b|0,f[h>>2]|0)|0,a=y,y=0,!(a&1)):0)?(y=0,k=ua(52,j|0,72374)|0,a=y,y=0,!(a&1)):0)?(y=0,ua(52,k|0,f[c>>2]|0)|0,a=y,y=0,!(a&1)):0)bfa();Pa()|0;bfa()}function Cp(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;e=j+8|0;d=j+4|0;h=j;a:do if(b[a+26>>0]|0){g=a+20|0;k=gKa(f[g>>2]|0)|0;i=c+24|0;f[d>>2]=f[i>>2];f[e>>2]=f[d>>2];d=w$(k,e)|0;if(!(To(a,(d|0)!=0,c,61249)|0)){k=gKa(f[g>>2]|0)|0;f[h>>2]=f[i>>2];f[e>>2]=f[h>>2];if(!(I$(k,e)|0))break;Vea(76852,61272)|0;break}g=c+8|0;e=c+12|0;k=gKa(f[e>>2]|0)|0;h=d+8|0;if(To(a,(k|0)==((f[d+12>>2]|0)-(f[h>>2]|0)>>2|0),c,61326)|0){d=0;while(1){if(d>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break a;k=bga(g,d)|0;if(!(Tj(a,f[(f[k>>2]|0)+4>>2]|0,f[(f[h>>2]|0)+(d<<2)>>2]|0,c)|0))Vea(vj(Vea(76852,61383)|0,d)|0,61397)|0;d=d+1|0}}}while(0);u=j;return}function Dp(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;d=u;u=u+16|0;g=d;c=a+236|0;if(f[c>>2]|0)Na(55225,54283,1804,55236);Ng(a);if(((f[a+164>>2]|0)-(f[a+160>>2]|0)|0)==4){a=Hi(a)|0;if(!(f[c>>2]|0)){u=d;return a|0}else Na(55225,54283,1810,55236)}e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(55251)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;i=y;y=0;if(i&1){h=12;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,55251,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,g|0);i=y;y=0;if(i&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(c)h=14}else{y=0;za(3);y=0;h=12}while(0);if((h|0)==12){a=Pa()|0;h=14}if((h|0)==14)Oa(e|0);$a(a|0);return 0}function Ep(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;d=u;u=u+16|0;g=d;if(b[(f[a>>2]|0)+112>>0]|0){h=lj(c,1)|0;h=fIa(b[h>>0]|0)|0;h=h?1:2;$k(a,c,h+1|0,sra(a,lj(c,h)|0)|0);u=d;return}e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(52447)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;i=y;y=0;if(i&1){h=10;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,52447,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,g|0);i=y;y=0;if(i&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(c)h=12}else{y=0;za(3);y=0;h=10}while(0);if((h|0)==10){a=Pa()|0;h=12}if((h|0)==12)Oa(e|0);$a(a|0)}function Fp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;e=ao(a,b,c)|0;g=f[d>>2]|0;h=f[c>>2]|0;if(wR(+p[g+16>>3],+p[h+16>>3])|0){f[c>>2]=g;f[d>>2]=h;d=e+1|0;g=f[c>>2]|0;h=f[b>>2]|0;if(wR(+p[g+16>>3],+p[h+16>>3])|0){f[b>>2]=g;f[c>>2]=h;g=f[b>>2]|0;h=f[a>>2]|0;if(wR(+p[g+16>>3],+p[h+16>>3])|0){f[a>>2]=g;f[b>>2]=h;e=e+3|0}else e=e+2|0}else e=d}return e|0}function Gp(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;l=n+8|0;j=n+4|0;m=n;i=b+16|0;h=f[i>>2]|0;if((f[b+20>>2]|0)-h>>2>>>0<=c>>>0){Mb[f[(f[b>>2]|0)+20>>2]&4095](b,25578);h=f[i>>2]|0}i=f[g>>2]|0;f[j>>2]=f[h+(c<<2)>>2];f[l>>2]=f[j>>2];i=w$(i,l)|0;if(!i)Mb[f[(f[b>>2]|0)+20>>2]&4095](b,25597);c=i+8|0;j=i+12|0;if(((f[j>>2]|0)-(f[c>>2]|0)>>2|0)!=((f[d+4>>2]|0)-(f[d>>2]|0)>>4|0))Mb[f[(f[b>>2]|0)+20>>2]&4095](b,25625);h=0;while(1){k=f[c>>2]|0;if(h>>>0>=(f[j>>2]|0)-k>>2>>>0)break;if((f[k+(h<<2)>>2]|0)!=(f[(f[d>>2]|0)+(h<<4)>>2]|0))Mb[f[(f[b>>2]|0)+20>>2]&4095](b,25658);h=h+1|0}if((f[i+4>>2]|0)!=(e|0))Mb[f[(f[b>>2]|0)+20>>2]&4095](b,25690);f[m>>2]=f[i>>2];f[l>>2]=f[m>>2];Vh(a,g,l,d);u=n;return}function Hp(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;k=u;u=u+16|0;j=k;f[j>>2]=i;a=nua(a+144|0)|0;if(f[18711]|0){l=qN(a)|0;l=Vea(vj(Vea(vj(Vea(vj(Vea(wj(Vea(vj(Vea(vj(Vea(76684,20507)|0,l)|0,20700)|0,c)|0,72307)|0,d<<24>>24)|0,72307)|0,e)|0,72307)|0,g)|0,72307)|0,h)|0,20179)|0;i=EN(74808,j)|0;Vea(vj(l,f[i>>2]|0)|0,20144)|0}b[a+20>>0]=0;b[a+8>>0]=c;b[a+9>>0]=d<<24>>24!=0&1;eja(a+12|0,e,0)|0;eja(a+16|0,g|0?g:c,0)|0;f[a+4>>2]=h;f[a+24>>2]=f[j>>2];nwa(a);u=k;return a|0}function Ip(a,c){a=a|0;c=+c;var d=0,e=0,g=0,h=0;d=Mra(c)|0;e=J;g=(e|0)<0;do if(c==0.0&g)Vea(a,38999)|0;else{h=e&2147483647;if(h>>>0>2146435072|(h|0)==2146435072&d>>>0>0){Vea(Vea(a,g?72207:83563)|0,67309)|0;d=TT(c)|0;e=J;if((d|0)==0&(e|0)==0)break;h=Vea(a,39002)|0;g=a+(f[(f[a>>2]|0)+-12>>2]|0)+4|0;f[g>>2]=f[g>>2]&-75|8;nj(h,d,e)|0;h=a+(f[(f[a>>2]|0)+-12>>2]|0)+4|0;f[h>>2]=f[h>>2]&-75|2;break}h=e&2146435072;if(!(h>>>0<2146435072|(h|0)==2146435072&0<0)){Vea(a,g?39006:65380)|0;break}d=xh(c,1)|0;switch(b[d>>0]|0){case 46:{c3(a,48)|0;break}case 45:{e=d+1|0;if((b[e>>0]|0)==46){Vea(a,38999)|0;d=e}break}default:{}}Vea(a,d)|0}while(0);return}function Jp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;h=i+24|0;d=i;NBa(a);gxa(h);e=f[c+32>>2]|0;if(e){Aia(d,b,e);f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];if(!(FBa(a)|0)){f[h>>2]=f[a>>2];f[h+4>>2]=f[a+4>>2];f[h+8>>2]=f[a+8>>2];f[h+12>>2]=f[a+12>>2];g=4}}else g=4;if((g|0)==4?(Aia(d,b,f[c+28>>2]|0),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],!(FBa(a)|0)):0){d=Y$(a)|0;g=J;b=f[c+24>>2]|0;if((g|0)>-1|(g|0)==-1&d>>>0>4294967295?d>>>0<(gKa(f[c+12>>2]|0)|0)>>>0:0){b=bga(c+8|0,d)|0;b=f[b>>2]|0}f[a+16>>2]=b;f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2]}u=i;return}function Kp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;e=l;k=a+8|0;c=f[k>>2]|0;g=a+12|0;j=f[g>>2]|0;h=j;i=c;do if((c|0)==(j|0)){j=a+4|0;c=f[j>>2]|0;m=f[a>>2]|0;d=m;if(c>>>0<=m>>>0){c=h-d>>1;c=(c|0)==0?1:c;fF(e,c,c>>>2,a+12|0);zV(e,f[j>>2]|0,f[k>>2]|0);c=f[a>>2]|0;f[a>>2]=f[e>>2];f[e>>2]=c;c=e+4|0;m=f[j>>2]|0;f[j>>2]=f[c>>2];f[c>>2]=m;c=e+8|0;m=f[k>>2]|0;f[k>>2]=f[c>>2];f[c>>2]=m;c=e+12|0;m=f[g>>2]|0;f[g>>2]=f[c>>2];f[c>>2]=m;M1(e);c=f[k>>2]|0;break}a=c;e=((a-d>>2)+1|0)/-2|0;g=c+(e<<2)|0;d=i-a|0;a=d>>2;if(a){S0(g|0,c|0,d|0)|0;c=f[j>>2]|0}m=g+(a<<2)|0;f[k>>2]=m;f[j>>2]=c+(e<<2);c=m}while(0);f[c>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+4;u=l;return}function Lp(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+32|0;e=g;h=g+12|0;a:do if(c){f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(64092)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[h+11>>0]=d;c=h}else{i=d+16&-16;c=nV(i)|0;f[h>>2]=c;f[h+8>>2]=i|-2147483648;f[h+4>>2]=d}Pta(c,64092,d)|0;SBa(c+d|0,0);y=0;ua(81,h|0,60793)|0;i=y;y=0;do if(!(i&1)){f[e>>2]=f[h>>2];f[e+4>>2]=f[h+4>>2];f[e+8>>2]=f[h+8>>2];c=0;while(1){if((c|0)==3)break;f[h+(c<<2)>>2]=0;c=c+1|0}y=0;ja(2014,a|0,e|0);i=y;y=0;if(i&1){c=Pa()|0;zta(e);break}else{zta(e);zta(h);break a}}else c=Pa()|0;while(0);zta(h);$a(c|0)}while(0);u=g;return}function Mp(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+32|0;e=g;h=g+12|0;a:do if(!c){f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(64114)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[h+11>>0]=d;c=h}else{i=d+16&-16;c=nV(i)|0;f[h>>2]=c;f[h+8>>2]=i|-2147483648;f[h+4>>2]=d}Pta(c,64114,d)|0;SBa(c+d|0,0);y=0;ua(81,h|0,59812)|0;i=y;y=0;do if(!(i&1)){f[e>>2]=f[h>>2];f[e+4>>2]=f[h+4>>2];f[e+8>>2]=f[h+8>>2];c=0;while(1){if((c|0)==3)break;f[h+(c<<2)>>2]=0;c=c+1|0}y=0;ja(2014,a|0,e|0);i=y;y=0;if(i&1){c=Pa()|0;zta(e);break}else{zta(e);zta(h);break a}}else c=Pa()|0;while(0);zta(h);$a(c|0)}while(0);u=g;return}function Np(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+1040|0;l=p+8|0;n=p;g=f[b>>2]|0;f[n>>2]=g;o=(a|0)!=0;h=o?d:256;i=o?a:l;d=g;a:do if((h|0)!=0&(g|0)!=0){a=0;k=c;while(1){c=k>>>2;j=c>>>0>=h>>>0;if(!(k>>>0>131|j)){c=k;break a}d=j?h:c;c=k-d|0;d=Ag(i,n,d,e)|0;if((d|0)==-1)break;g=(i|0)==(l|0);h=h-(g?0:d)|0;i=g?i:i+(d<<2)|0;a=d+a|0;d=f[n>>2]|0;g=d;if((h|0)!=0&(d|0)!=0)k=c;else break a}g=f[n>>2]|0;a=-1;h=0;d=g}else a=0;while(0);b:do if((d|0)!=0?(h|0)!=0&(c|0)!=0:0){while(1){g=$p(i,d,c,e)|0;if((g+2|0)>>>0<3)break;d=d+g|0;c=c-g|0;h=h+-1|0;a=a+1|0;if(!((h|0)!=0&(c|0)!=0)){m=13;break}else i=i+4|0}if((m|0)==13){f[n>>2]=d;break}f[n>>2]=d;switch(g|0){case -1:{a=-1;break b}case 0:{f[n>>2]=0;d=0;break b}default:{f[e>>2]=0;break b}}}else d=g;while(0);if(o)f[b>>2]=d;u=p;return a|0}function Op(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;b=u;u=u+32|0;d=b;e=b+12|0;a=Om(a)|0;switch(a|0){case -64:{a=0;break}case -1:{a=1;break}case -2:{a=2;break}case -3:{a=3;break}case -4:{a=4;break}default:{c=zb(20)|0;y=0;ja(593,e|0,a|0);b=y;y=0;do if(!(b&1)){y=0;ua(81,e|0,56980)|0;b=y;y=0;if(b&1){a=Pa()|0;zta(e);g=16;break}f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];a=0;while(1){if((a|0)==3)break;f[e+(a<<2)>>2]=0;a=a+1|0}y=0;ja(583,c|0,d|0);b=y;y=0;if(b&1)b=1;else{y=0;ya(79,c|0,64,361);y=0;b=0}a=Pa()|0;zta(d);zta(e);if(b)g=16}else{a=Pa()|0;g=16}while(0);if((g|0)==16)Oa(c|0);$a(a|0)}}u=b;return a|0}function Pp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;f[a>>2]=b+12;f[a+4>>2]=c;f[a+8>>2]=d;f[a+12>>2]=e;i=a+16|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;f[i+12>>2]=0;n[a+32>>2]=1.0;h=(gKa(f[b+16>>2]|0)|0)+-1|0;b=-1;c=0;a:while(1){e=(b|0)==-1;while(1){if(c>>>0>=h>>>0){j=12;break a}g=c+1|0;d=f[a>>2]|0;if(e)break;y=0;d=ua(64,d|0,c|0)|0;k=y;y=0;if(k&1){j=8;break a}if(DV(f[d>>2]|0)|0){j=11;break}else c=g}if((j|0)==11){j=0;y=0;c=oa(64,a|0,b|0,c|0)|0;k=y;y=0;if(k&1){j=8;break}else{b=-1;continue}}y=0;d=ua(64,d|0,c|0)|0;k=y;y=0;if(k&1){j=8;break}y=0;d=ua(131,a|0,f[d>>2]|0)|0;k=y;y=0;if(k&1){j=8;break}b=(d|0)==0?-1:c;c=g}if((j|0)==8){k=Pa()|0;k$(i);$a(k|0)}else if((j|0)==12)return}function Qp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;Vea(f[a>>2]|0,39398)|0;if(c|0){g=c3(f[a>>2]|0,32)|0;K2(g,f[c>>2]|0)|0}d=b+8|0;c=b+12|0;g=a+12|0;if((f[c>>2]|0)!=(f[d>>2]|0)){Vea(f[a>>2]|0,f[g>>2]|0)|0;xca(f[a>>2]|0,39404)|0;e=f[c>>2]|0;c=f[d>>2]|0;while(1){d=f[a>>2]|0;if((c|0)==(e|0))break;d=c3(d,32)|0;Vea(d,F$(f[c>>2]|0)|0)|0;c=c+4|0}c3(d,41)|0}c=b+4|0;if(f[c>>2]|0){Vea(f[a>>2]|0,f[g>>2]|0)|0;g=xca(f[a>>2]|0,37643)|0;c3(Vea(g,F$(f[c>>2]|0)|0)|0,41)|0}Vea(f[a>>2]|0,72083)|0;return}function Rp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=b;e=c-j>>3;d=a+8|0;g=f[a>>2]|0;i=g;a:do if(e>>>0>(f[d>>2]|0)-g>>3>>>0){IW(a);if(e>>>0>536870911)SZ();else{j=(f[d>>2]|0)-(f[a>>2]|0)|0;k=j>>2;T2(a,j>>3>>>0<268435455?(k>>>0<e>>>0?e:k):536870911);z_(a,b,c);break}}else{k=a+4|0;g=(f[k>>2]|0)-g>>3;h=e>>>0>g>>>0;g=h?b+(g<<3)|0:c;e=i;d=b;while(1){if((d|0)==(g|0))break;f[e>>2]=f[d>>2];f[e+4>>2]=f[d+4>>2];e=e+8|0;d=d+8|0}e=i+((g-j|0)>>>3<<3)|0;if(h){z_(a,g,c);break}d=f[k>>2]|0;while(1){if((d|0)==(e|0))break a;c=d+-8|0;f[k>>2]=c;d=c}}while(0);return}function Sp(a){a=a|0;var b=0,c=0,d=0;b=a+60|0;c=a;d=c+60|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(d|0));y=0;ia(335,b|0);d=y;y=0;do if(!(d&1)){y=0;ia(336,a+88|0);d=y;y=0;if(d&1){d=Pa()|0;xxa(b);b=d;break}else{cJa(a+116|0);d=a+120|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;f[d+12>>2]=0;f[d+16>>2]=0;f[d+20>>2]=0;Bia(a+144|0);gua(a+172|0);gua(a+184|0);gua(a+196|0);gua(a+208|0);gua(a+220|0);return}}else b=Pa()|0;while(0);qR(a+48|0);mP(a+36|0);qR(a+24|0);qR(a+12|0);NO(a);$a(b|0)}function Tp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;j=l;f[j>>2]=0;h=j+4|0;f[h>>2]=0;f[j+8>>2]=0;k=a+48|0;e=a+52|0;g=j+8|0;a=f[k>>2]|0;a:while(1){if((a|0)==(e|0))break;do if(oh(b,a+24|0)|0){c=a+16|0;d=f[h>>2]|0;if((d|0)==(f[g>>2]|0)){y=0;ja(72,j|0,c|0);d=y;y=0;if(d&1){i=15;break a}else break}else{f[d>>2]=f[c>>2];f[h>>2]=d+4;break}}while(0);c=f[a+4>>2]|0;if(!c)while(1){c=f[a+8>>2]|0;if((f[c>>2]|0)==(a|0)){a=c;continue a}else a=c}else a=c;while(1){c=f[a>>2]|0;if(!c)break;else a=c}}if((i|0)==15){l=Pa()|0;E4(j);$a(l|0)}c=f[h>>2]|0;a=f[j>>2]|0;while(1){if((a|0)==(c|0))break;RL(k,f[a>>2]|0);a=a+4|0}E4(j);u=l;return}function Up(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=a+96|0;k=a+104|0;a:do if(!(f[k>>2]|0)){c=f[a>>2]|0;d=f[c+16>>2]|0;c=f[c+12>>2]|0;while(1){if((c|0)==(d|0)){h=0;break}e=f[c>>2]|0;if(!(f[e+12>>2]|0)){if(WS(j,e)|0){g=7;break}l=f[k>>2]|0;e=KM(j,e)|0;f[e>>2]=l}c=c+4|0}if((g|0)==7)Na(58657,54283,350,58698);while(1){l=f[a>>2]|0;c=f[l+36>>2]|0;if(h>>>0>=(f[l+40>>2]|0)-c>>2>>>0){i=j;break a}c=f[c+(h<<2)>>2]|0;if(WS(j,c)|0)break;g=f[k>>2]|0;l=KM(j,c)|0;f[l>>2]=g;h=h+1|0}Na(58715,54283,355,58698)}else i=j;while(0);if(!(WS(i,b)|0))Na(58768,54283,360,58698);else{l=KM(j,b)|0;return f[l>>2]|0}return 0}function Vp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=a+108|0;k=a+116|0;a:do if(!(f[k>>2]|0)){c=f[a>>2]|0;d=f[c+16>>2]|0;c=f[c+12>>2]|0;while(1){if((c|0)==(d|0)){h=0;break}e=f[c>>2]|0;if((f[e+12>>2]|0)==3){if(WS(j,e)|0){g=7;break}l=f[k>>2]|0;e=KM(j,e)|0;f[e>>2]=l}c=c+4|0}if((g|0)==7)Na(59171,54283,369,59210);while(1){l=f[a>>2]|0;c=f[l+48>>2]|0;if(h>>>0>=(f[l+52>>2]|0)-c>>2>>>0){i=j;break a}c=f[c+(h<<2)>>2]|0;if(WS(j,c)|0)break;g=f[k>>2]|0;l=KM(j,c)|0;f[l>>2]=g;h=h+1|0}Na(59225,54283,374,59210)}else i=j;while(0);if(!(WS(i,b)|0))Na(59274,54283,379,59210);else{l=KM(j,b)|0;return f[l>>2]|0}return 0}function Wp(a){a=a|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e;a:do if(f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0){y=0;ja(2047,c|0,a|0);d=y;y=0;b:do if(d&1)c=ab(0)|0;else{do if(b[c>>0]|0){d=f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0;y=0;d=la(f[(f[d>>2]|0)+24>>2]|0,d|0)|0;g=y;y=0;if(!(g&1)){if((d|0)!=-1)break;g=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,g|0,f[g+16>>2]|1|0);g=y;y=0;if(!(g&1))break}g=ab(0)|0;ww(c);c=g;break b}while(0);ww(c);break a}while(0);Ya(c|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);g=y;y=0;if(!(g&1)){_a();break}c=Pa()|0;y=0;za(5);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}else $a(c|0)}while(0);u=e;return a|0}function Xp(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;d=u;u=u+16|0;g=d;c=a<<24>>24;if((a+-48&255)>=10)if((a+-97&255)>=6)if((a+-65&255)<6)a=-55;else{e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(58559)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;i=y;y=0;if(i&1){h=12;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,58559,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,g|0);i=y;y=0;if(i&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(c)h=14}else{y=0;za(3);y=0;h=12}while(0);if((h|0)==12){a=Pa()|0;h=14}if((h|0)==14)Oa(e|0);$a(a|0)}else a=-87;else a=-48;u=d;return a+c|0}function Yp(a){a=a|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e;a:do if(f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0){y=0;ja(80,c|0,a|0);d=y;y=0;b:do if(d&1)c=ab(0)|0;else{do if(b[c>>0]|0){d=f[a+(f[(f[a>>2]|0)+-12>>2]|0)+24>>2]|0;y=0;d=la(f[(f[d>>2]|0)+24>>2]|0,d|0)|0;g=y;y=0;if(!(g&1)){if((d|0)!=-1)break;g=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,g|0,f[g+16>>2]|1|0);g=y;y=0;if(!(g&1))break}g=ab(0)|0;ww(c);c=g;break b}while(0);ww(c);break a}while(0);Ya(c|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);g=y;y=0;if(!(g&1)){_a();break}c=Pa()|0;y=0;za(5);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}else $a(c|0)}while(0);u=e;return a|0}function Zp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;g=((f[a+4>>2]|0)-(f[a>>2]|0)>>2)+-2|0;a:while(1){if((g|0)<=-1){j=16;break}i=f[a>>2]|0;d=f[i+(g<<2)>>2]|0;i=f[i+(g+1<<2)>>2]|0;c=f[d>>2]|0;if(aJa(c)|0){d=ksa(d)|0;e=d+12|0;d=d+16|0;c=0;while(1){if(c>>>0>=((gKa(f[d>>2]|0)|0)+-1|0)>>>0)break;k=bga(e,c)|0;if((f[k>>2]|0)==(i|0)){h=0;break a}else c=c+1|0}k=efa(e)|0;if((f[k>>2]|0)!=(i|0)){j=8;break}}else{if(!(hJa(c)|0)){j=14;break}c=Asa(d)|0;if((i|0)==(f[c+8>>2]|0)){h=1;break}d=f[c+16>>2]|0;if(!d){h=0;break}if(!((i|0)==(d|0)?1:(i|0)==(f[c+12>>2]|0))){j=13;break}}g=g+-1|0}if((j|0)==8)Na(51181,51209,35,51240);else if((j|0)==13)Na(51253,51209,41,51240);else if((j|0)==14)h=(DFa(c)|0)^1;else if((j|0)==16)h=(f[b+4>>2]|0)!=0;return h|0}function _p(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;g=f[e>>2]|0;do if(g){e=ECa(a)|0;k=b[d+11>>0]|0;j=k<<24>>24<0;k=j?f[d+4>>2]|0:k&255;j=j?f[d>>2]|0:d;a=g;while(1){d=a+16|0;g=b[d+11>>0]|0;h=g<<24>>24<0;d=h?f[d>>2]|0:d;g=h?f[a+20>>2]|0:g&255;h=g>>>0<k>>>0;l=ara(j,d,h?g:k)|0;i=k>>>0<g>>>0;if((((l|0)==0?(i?-2147483648:0):l)|0)<0){d=f[a>>2]|0;if(!d){d=6;break}else{e=a;a=d}}else{l=ara(d,j,i?k:g)|0;if((((l|0)==0?(h?-2147483648:0):l)|0)>=0){d=10;break}e=a+4|0;d=f[e>>2]|0;if(!d){d=9;break}else a=d}}if((d|0)==6){f[c>>2]=a;e=a;break}else if((d|0)==9){f[c>>2]=a;break}else if((d|0)==10){f[c>>2]=a;break}}else f[c>>2]=e;while(0);return e|0}function $p(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;g=k;i=(e|0)==0?76476:e;e=f[i>>2]|0;a:do if(!c)if(!e)e=0;else j=17;else{h=(a|0)==0?g:a;if(!d)e=-2;else{if(!e){e=b[c>>0]|0;if(e<<24>>24>-1){f[h>>2]=e&255;e=e<<24>>24!=0&1;break}if(!(f[f[2650]>>2]|0)){f[h>>2]=e<<24>>24&57343;e=1;break}e=(e&255)+-194|0;if(e>>>0>50){j=17;break}e=f[10084+(e<<2)>>2]|0;g=d+-1|0;if(g){c=c+1|0;j=11}}else{g=d;j=11}b:do if((j|0)==11){a=b[c>>0]|0;l=(a&255)>>>3;if((l+-16|l+(e>>26))>>>0>7){j=17;break a}while(1){c=c+1|0;e=(a&255)+-128|e<<6;g=g+-1|0;if((e|0)>=0)break;if(!g)break b;a=b[c>>0]|0;if((a&-64)<<24>>24!=-128){j=17;break a}}f[i>>2]=0;f[h>>2]=e;e=d-g|0;break a}while(0);f[i>>2]=e;e=-2}}while(0);if((j|0)==17){f[i>>2]=0;f[2619]=84;e=-1}u=k;return e|0}function aq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;h=k+8|0;i=k+4|0;j=k;do if(b[a+12>>0]|0){g=Vea(76852,59337)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[h>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(h);jn(g,e)|0;Yp(g)|0;break}l=Pa()|0;pza(h);$a(l|0)}while(0);d=c+12|0;if(f[d>>2]|0)Ql(a,d);d=c+16|0;if(!(f[d>>2]|0))g=12;else{Ql(a,d);g=f[d>>2]|0?13:12}e=a+4|0;l=Zq(f[e>>2]|0,g)|0;f[j>>2]=f[c+8>>2];f[h>>2]=f[j>>2];PDa(i,Pr(a,h)|0);Un(l,f[i>>2]|0)|0;if(f[d>>2]|0?(f[c+4>>2]|0)==5:0)Zq(f[e>>2]|0,0)|0;u=k;return}function bq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+48|0;e=h+16|0;g=h;YX(e,b,f[c+8>>2]|0);do if(!(FBa(e)|0)){d=c+16|0;if(!(csa(e)|0)){d=f[d>>2]|0;if(!d){NBa(a);break}else{YX(a,b,d);break}}else{YX(a,b,f[c+12>>2]|0);if(FBa(a)|0)break;if(f[d>>2]|0)break;gxa(g);f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];break}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}while(0);u=h;return}function cq(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=a+11|0;g=b[i>>0]|0;h=g<<24>>24<0;if(h){k=f[a+4>>2]|0;e=(f[a+8>>2]&2147483647)+-1|0}else{k=g&255;e=10}c=k>>>0<11;j=c?10:(k+16&-16)+-1|0;a:do if((j|0)!=(e|0)){do if(c){c=f[a>>2]|0;if(h){d=c;g=0;e=a;h=15}else{Pta(a,c,(g&255)+1|0)|0;$Ja(c);h=18}}else{d=j+1|0;if(j>>>0<=e>>>0){y=0;c=la(150,d|0)|0;e=y;y=0;if(e&1){k=ab(0)|0;Ya(k|0)|0;_a();break a}}else c=nV(d)|0;if(h){d=f[a>>2]|0;g=1;e=c;h=15;break}else{Pta(c,a,(g&255)+1|0)|0;e=c;c=a+4|0;h=17;break}}while(0);if((h|0)==15){c=a+4|0;Pta(e,d,(f[c>>2]|0)+1|0)|0;$Ja(d);if(g){d=j+1|0;h=17}else h=18}if((h|0)==17){f[a+8>>2]=d|-2147483648;f[c>>2]=k;f[a>>2]=e;break}else if((h|0)==18){b[i>>0]=k;break}}while(0);return}function dq(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;d=i+16|0;e=i;h=b+8|0;a:do switch(f[b+4>>2]|0){case 1:{g=Fza(csa(h)|0)|0;break}case 3:{g=nM(f[18914]|0)|0;Mua(d);S5(e,+Hoa(h));h=d+8|0;f[h>>2]=f[e>>2];f[h+4>>2]=f[e+4>>2];f[h+8>>2]=f[e+8>>2];f[h+12>>2]=f[e+12>>2];f[d+4>>2]=4;h=UAa(g,2)|0;l6(gKa(f[h>>2]|0)|0,dq(a,d)|0)|0;break}case 4:{c=+Goa(h);if(c==0.0?(Mra(c)|0,(J|0)<0):0){h=f[18905]|0;g=f[18904]|0;g=uL(h,uL(g,h9(0.0)|0)|0)|0;break a}g=uL(f[18905]|0,h9(+Goa(h))|0)|0;break}default:Ka()}while(0);u=i;return g|0}function eq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;m=n+40|0;k=n+24|0;j=n+16|0;g=n;l=n+56|0;e=b[c>>0]|0;if(Nt(67424,e<<24>>24,4)|0){d=rc(1156)|0;if(!d)d=0;else{h=d;i=h+124|0;do{f[h>>2]=0;h=h+4|0}while((h|0)<(i|0));if(!(fwa(c,43)|0))f[d>>2]=e<<24>>24==114?8:4;if(fwa(c,101)|0){f[g>>2]=a;f[g+4>>2]=2;f[g+8>>2]=1;Da(221,g|0)|0;e=b[c>>0]|0}if(e<<24>>24==97){f[j>>2]=a;f[j+4>>2]=3;e=Da(221,j|0)|0;if(!(e&1024)){f[k>>2]=a;f[k+4>>2]=4;f[k+8>>2]=e|1024;Da(221,k|0)|0}c=f[d>>2]|128;f[d>>2]=c}else c=f[d>>2]|0;f[d+60>>2]=a;f[d+44>>2]=d+132;f[d+48>>2]=1024;e=d+75|0;b[e>>0]=-1;if((c&8|0)==0?(f[m>>2]=a,f[m+4>>2]=21523,f[m+8>>2]=l,(ob(54,m|0)|0)==0):0)b[e>>0]=10;f[d+32>>2]=11;f[d+36>>2]=9;f[d+40>>2]=10;f[d+12>>2]=86;if(!(f[19098]|0))f[d+76>>2]=-1;Qna(d)|0}}else{f[2619]=22;d=0}u=n;return d|0}function fq(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;c=j+8|0;g=j+4|0;i=j;e=f[a>>2]|0;if(b[e+60>>0]|0?(b[e+61>>0]|0)==0:0){do if(b[a+12>>0]|0){d=Vea(76852,59585)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[c>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(c);jn(d,h)|0;Yp(d)|0;break}k=Pa()|0;pza(c);$a(k|0)}while(0);k=uW(a,4)|0;h=a+4|0;e=f[h>>2]|0;PDa(g,1);Un(e,f[g>>2]|0)|0;h=f[h>>2]|0;PDa(i,-16);Ln(h,f[i>>2]|0)|0;i=f[a>>2]|0;h=f[i+68>>2]|0;i=f[i+72>>2]|0;iF(a,h,i,(gKa(i)|0)!=-1,0);KE(a,k)}u=j;return}function gq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;i=n+8|0;j=n;Aua(i,b);k=gKa(f[i+4>>2]|0)|0;l=f[a+4>>2]|0;a:do if(l){m=l+-1|0;g=(m&l|0)==0;if(!g)if(k>>>0<l>>>0)h=k;else h=(k>>>0)%(l>>>0)|0;else h=m&k;a=f[(f[a>>2]|0)+(h<<2)>>2]|0;if(a){d=i+4|0;e=j+4|0;while(1){a=f[a>>2]|0;if(!a){a=0;break a}c=f[a+4>>2]|0;if((c|0)==(k|0)){Aua(i,a+8|0);Aua(j,b);if(Gda(f[i>>2]|0,f[d>>2]|0,f[j>>2]|0,f[e>>2]|0)|0)break;else continue}if(!g){if(c>>>0>=l>>>0)c=(c>>>0)%(l>>>0)|0}else c=c&m;if((c|0)!=(h|0)){a=0;break}}}else a=0}else a=0;while(0);u=n;return a|0}function hq(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;e=((f[a+4>>2]|0)-(f[a>>2]|0)>>2)+-2|0;a:while(1){if((e|0)<=-1){g=0;h=0;break}i=f[a>>2]|0;c=f[i+(e<<2)>>2]|0;i=f[i+(e+1<<2)>>2]|0;b=f[c>>2]|0;if(aJa(b)|0){c=ksa(c)|0;d=c+12|0;c=c+16|0;b=0;while(1){if(b>>>0>=((gKa(f[c>>2]|0)|0)+-1|0)>>>0)break;k=bga(d,b)|0;if((f[k>>2]|0)==(i|0)){g=1;h=0;break a}else b=b+1|0}k=efa(d)|0;if((f[k>>2]|0)!=(i|0)){j=8;break}}else{if(!(hJa(b)|0)){j=14;break}b=Asa(c)|0;if((i|0)==(f[b+8>>2]|0)){g=1;h=0;break}c=f[b+16>>2]|0;if(!c){g=1;h=0;break}if(!((i|0)==(c|0)?1:(i|0)==(f[b+12>>2]|0))){j=13;break}}e=e+-1|0}if((j|0)==8)Na(51181,51209,62,51299);else if((j|0)==13)Na(51253,51209,68,51299);else if((j|0)==14){g=1;h=DFa(b)|0}return g&h|0}function iq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;l$(a,42689);zya(a);gP(a,40);e=UAa(b,1)|0;Cg(a,f[e>>2]|0);gP(a,41);zya(a);gP(a,123);A2(a);e=UAa(b,2)|0;e=f[e>>2]|0;g=a+16|0;h=a+12|0;b=0;while(1){if(b>>>0>=(yja(gKa(e)|0)|0)>>>0)break;c=UAa(e,b)|0;c=f[c>>2]|0;d=UAa(c,0)|0;if(Ata(f[d>>2]|0)|0)l$(a,24689);else{l$(a,24698);d=UAa(c,0)|0;Cg(a,f[d>>2]|0);gP(a,58)}d=UAa(c,1)|0;do if(yja(gKa(f[d>>2]|0)|0)|0){f[g>>2]=(f[g>>2]|0)+1;A2(a);d=f[h>>2]|0;c=UAa(c,1)|0;WH(a,f[c>>2]|0);f[g>>2]=(f[g>>2]|0)+-1;if((d|0)==(f[h>>2]|0)){f[h>>2]=d+-1;break}else{A2(a);break}}else A2(a);while(0);b=b+1|0}gP(a,125);return}function jq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+32|0;c=g+16|0;d=g;gxa(d);switch(f[b+4>>2]|0){case 1:{uAa(c,0);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];f[d+12>>2]=f[c+12>>2];e=8;break}case 2:{Ysa(c,0,0);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];f[d+12>>2]=f[c+12>>2];e=8;break}case 3:{tda(c,0.0);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];f[d+12>>2]=f[c+12>>2];e=8;break}case 4:{S5(c,0.0);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];f[d+12>>2]=f[c+12>>2];e=8;break}case 0:{c=Tta(b)|0;break}case 5:{c=Gwa(b)|0;break}default:e=8}if((e|0)==8){f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];c=FO(a,c)|0}u=g;return c|0}function kq(a){a=a|0;var c=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;h=k;W6(a);f[a>>2]=9916;f[a+32>>2]=0;f[a+36>>2]=0;f[a+40>>2]=0;c=a+52|0;i=a+68|0;j=a+98|0;e=c;g=e+44|0;do{f[e>>2]=0;e=e+4|0}while((e|0)<(g|0));d[c+44>>1]=0;b[c+46>>0]=0;c=a+4|0;zwa(h,f[c>>2]|0);y=0;e=la(222,f[h>>2]|0)|0;g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}pza(h);do if(e){zwa(h,f[c>>2]|0);y=0;c=ua(46,f[h>>2]|0,79348)|0;g=y;y=0;if(g&1){c=Pa()|0;pza(h);break}else{f[i>>2]=c;pza(h);l=f[i>>2]|0;l=(Ob[f[(f[l>>2]|0)+28>>2]&255](l)|0)&1;b[j>>0]=l;l=7;break}}else l=7;while(0);do if((l|0)==7){y=0;oa(f[(f[a>>2]|0)+12>>2]|0,a|0,0,4096)|0;l=y;y=0;if(l&1){c=Pa()|0;break}else{u=k;return}}while(0);vwa(a);$a(c|0)}function lq(){var a=0,c=0;if((b[74192]|0)==0?twa(74192)|0:0){c=79072;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=79240);tb(398,0,x|0)|0}Sga(79072,16320)|0;Sga(79084,16348)|0;Sga(79096,16376)|0;Sga(79108,16408)|0;Sga(79120,16448)|0;Sga(79132,16484)|0;Sga(79144,16512)|0;Sga(79156,16548)|0;Sga(79168,16564)|0;Sga(79180,16580)|0;Sga(79192,16596)|0;Sga(79204,16612)|0;Sga(79216,16628)|0;Sga(79228,16644)|0;return}function mq(){var a=0,c=0;if((b[74112]|0)==0?twa(74112)|0:0){c=78260;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=78428);tb(394,0,x|0)|0}Tga(78260,68962)|0;Tga(78272,68969)|0;Tga(78284,68976)|0;Tga(78296,68984)|0;Tga(78308,68994)|0;Tga(78320,69003)|0;Tga(78332,69010)|0;Tga(78344,69019)|0;Tga(78356,69023)|0;Tga(78368,69027)|0;Tga(78380,69031)|0;Tga(78392,69035)|0;Tga(78404,69039)|0;Tga(78416,69043)|0;return}function nq(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;a:do if(a>>>0<c>>>0){b:do if((b[a>>0]|0)!=95){if((ic(a,c,d)|0)!=(c|0)){f[e>>2]=-2;break a}}else{if((c-a|0)<=3){f[e>>2]=-2;break a}g=a+2|0;switch(b[a+1>>0]|0){case 90:{a=Fc(g,c,d)|0;if(!((a|0)==(g|0)|(a|0)==(c|0))?(b[a>>0]|0)==46:0)a=Nk(a,c,d)|0;if((a|0)==(c|0))break b;f[e>>2]=-2;break a}case 95:{if((b[g>>0]|0)==95?(b[a+3>>0]|0)==90:0){g=a+4|0;a=Fc(g,c,d)|0;if(!((a|0)==(g|0)|(a|0)==(c|0))?(Bv(a,c,f[d>>2]|0,f[d+4>>2]|0)|0)==(c|0):0)break b;f[e>>2]=-2;break a}break}default:{}}f[e>>2]=-2;break a}while(0);if((f[e>>2]|0)==0?(f[d>>2]|0)==(f[d+4>>2]|0):0)f[e>>2]=-2}else f[e>>2]=-2;while(0);return}function oq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;k=j+8|0;i=j;f[k>>2]=0;h=k+4|0;f[h>>2]=0;f[k+8>>2]=0;g=k+8|0;c=a+52|0;a:while(1){c=f[c>>2]|0;if(!c){d=3;break}d=c;do if(oh(b,d+24|0)|0){d=d+8|0;e=f[h>>2]|0;if((e|0)==(f[g>>2]|0)){y=0;ja(1445,k|0,d|0);e=y;y=0;if(e&1){d=9;break a}else break}else{Aua(e,d);f[h>>2]=(f[h>>2]|0)+8;break}}while(0)}do if((d|0)==3){e=f[h>>2]|0;d=a+44|0;c=f[k>>2]|0;while(1){if((c|0)==(e|0)){d=11;break}Aua(i,c);y=0;ja(1446,d|0,i|0);a=y;y=0;if(a&1){d=14;break}c=c+8|0}if((d|0)==11){a3(k);u=j;return}else if((d|0)==14){c=Pa()|0;break}}else if((d|0)==9)c=Pa()|0;while(0);a3(k);$a(c|0)}function pq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;h=u;u=u+16|0;d=h+12|0;i=h;e=ZA(rr(a)|0)|0;g=J;if(!(g>>>0>0|(g|0)==0&e>>>0>4294967295)){$la(d,e,g);u=h;return f[d>>2]|0}h=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(c)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[i+11>>0]=g;d=i}else{e=g+16&-16;y=0;d=la(150,e|0)|0;k=y;y=0;if(k&1){j=10;break}f[i>>2]=d;f[i+8>>2]=e|-2147483648;f[i+4>>2]=g}Pta(d,c,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,i|0,f[a+28>>2]|0,f[a+32>>2]|0);k=y;y=0;if(k&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(i);if(e)j=12}else{y=0;za(3);y=0;j=10}while(0);if((j|0)==10){d=Pa()|0;j=12}if((j|0)==12)Oa(h|0);$a(d|0);return 0}function qq(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;if((d+-1&255)>1)e=0;else{i=Jsa(f[a+4>>2]|0)|0;switch(d<<24>>24){case 1:{e=1;break}case 2:{e=2;break}default:Ka()}f[i+20>>2]=e;f[i+4>>2]=1;do if(b[a+12>>0]|0){e=Vea(76852,56180)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(e,g)|0;Yp(e)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);e=Jg(a)|0;f[i+16>>2]=e;e=Jg(a)|0;f[i+12>>2]=e;e=Jg(a)|0;f[i+8>>2]=e;pda(i);f[c>>2]=i;e=1}u=j;return e|0}function rq(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;if((d|0)>=8192)return Za(a|0,c|0,d|0)|0;h=a|0;g=a+d|0;if((a&3)==(c&3)){while(a&3){if(!d)return h|0;b[a>>0]=b[c>>0]|0;a=a+1|0;c=c+1|0;d=d-1|0}d=g&-4|0;e=d-64|0;while((a|0)<=(e|0)){f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];f[a+12>>2]=f[c+12>>2];f[a+16>>2]=f[c+16>>2];f[a+20>>2]=f[c+20>>2];f[a+24>>2]=f[c+24>>2];f[a+28>>2]=f[c+28>>2];f[a+32>>2]=f[c+32>>2];f[a+36>>2]=f[c+36>>2];f[a+40>>2]=f[c+40>>2];f[a+44>>2]=f[c+44>>2];f[a+48>>2]=f[c+48>>2];f[a+52>>2]=f[c+52>>2];f[a+56>>2]=f[c+56>>2];f[a+60>>2]=f[c+60>>2];a=a+64|0;c=c+64|0}while((a|0)<(d|0)){f[a>>2]=f[c>>2];a=a+4|0;c=c+4|0}}else{d=g-4|0;while((a|0)<(d|0)){b[a>>0]=b[c>>0]|0;b[a+1>>0]=b[c+1>>0]|0;b[a+2>>0]=b[c+2>>0]|0;b[a+3>>0]=b[c+3>>0]|0;a=a+4|0;c=c+4|0}}while((a|0)<(g|0)){b[a>>0]=b[c>>0]|0;a=a+1|0;c=c+1|0}return h|0}function sq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;gP(a,123);i=a+16|0;f[i>>2]=(f[i>>2]|0)+1;A2(a);h=UAa(c,1)|0;h=f[h>>2]|0;e=0;while(1){if(e>>>0>=(yja(gKa(h)|0)|0)>>>0)break;if(e|0){if(!(b[a>>0]|0))gP(a,44);else l$(a,72307);A2(a)}g=UAa(h,e)|0;g=UAa(f[g>>2]|0,0)|0;g=voa(gKa(f[g>>2]|0)|0)|0;c=g;a:while(1){d=b[c>>0]|0;if(!(d<<24>>24)){c=15;break}if(!(fDa(d<<24>>24)|0))switch(d<<24>>24){case 36:case 95:break;default:{c=14;break a}}c=c+1|0}if((c|0)==14){gP(a,34);l$(a,g);gP(a,34)}else if((c|0)==15)l$(a,g);l$(a,58655);zya(a);g=UAa(h,e)|0;g=UAa(f[g>>2]|0,1)|0;Cg(a,f[g>>2]|0);e=e+1|0}f[i>>2]=(f[i>>2]|0)+-1;A2(a);gP(a,125);return}function tq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b;l=c-e>>2;d=a+8|0;j=f[a>>2]|0;h=j;a:do if(l>>>0>(f[d>>2]|0)-j>>2>>>0){_X(a);if(l>>>0>1073741823)SZ();else{j=(f[d>>2]|0)-(f[a>>2]|0)|0;k=j>>1;g4(a,j>>2>>>0<536870911?(k>>>0<l>>>0?l:k):1073741823);PZ(a,b,c,l);break}}else{k=a+4|0;g=(f[k>>2]|0)-j>>2;i=l>>>0>g>>>0;g=i?b+(g<<2)|0:c;d=g-e|0;e=d>>2;if(e|0)S0(j|0,b|0,d|0)|0;e=h+(e<<2)|0;if(i){PZ(a,g,c,l-((f[k>>2]|0)-(f[a>>2]|0)>>2)|0);break}d=f[k>>2]|0;while(1){if((d|0)==(e|0))break a;l=d+-4|0;f[k>>2]=l;d=l}}while(0);return}function uq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+48|0;l=k+24|0;i=k+12|0;j=k;or(l,b);e=f[a+4>>2]|0;g=j+4|0;h=j+8|0;c=l+4|0;d=i+4|0;b=f[a>>2]|0;while(1){if((b|0)==(e|0)){b=2;a=9;break}y=0;ja(1785,i|0,f[b>>2]|0);a=y;y=0;if(a&1){a=6;break}f[j>>2]=0;f[g>>2]=0;f[h>>2]=0;y=0;ga(7,f[l>>2]|0,c|0,f[i>>2]|0,d|0,j|0);a=y;y=0;if(a&1){a=7;break}a=(f[g>>2]|0)==(f[j>>2]|0);E4(j);Cta(i);if(a)b=b+4|0;else{b=(a^1)&1;a=9;break}}if((a|0)==6)b=Pa()|0;else if((a|0)==7){b=Pa()|0;E4(j);Cta(i)}else if((a|0)==9){Cta(l);u=k;return (b|0)==2|0}Cta(l);$a(b|0);return 0}function vq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+64|0;d=g+24|0;e=g;c=OO(a,f[b>>2]|0)|0;a:do if((c|0)==(a+4|0)){c=a+12|0;ija(e);f[d>>2]=f[b>>2];y=0;ja(586,d+4|0,e|0);h=y;y=0;do if(!(h&1)){y=0;ja(589,c|0,d|0);h=y;y=0;if(h&1){c=Pa()|0;iwa(d);break}else{iwa(d);_fa(e);c=f[c>>2]|0;h=f[b>>2]|0;f[e>>2]=h;f[e+4>>2]=c;Pv(d,a,h,e);break a}}else c=Pa()|0;while(0);_fa(e);$a(c|0)}else c=f[c+20>>2]|0;while(0);u=g;return c+12|0}function wq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+48|0;k=m+16|0;g=m;e=m+32|0;i=a+28|0;d=f[i>>2]|0;f[e>>2]=d;j=a+20|0;d=(f[j>>2]|0)-d|0;f[e+4>>2]=d;f[e+8>>2]=b;f[e+12>>2]=c;d=d+c|0;h=a+60|0;f[g>>2]=f[h>>2];f[g+4>>2]=e;f[g+8>>2]=2;g=Qza(Fb(146,g|0)|0)|0;a:do if((d|0)!=(g|0)){b=2;while(1){if((g|0)<0)break;d=d-g|0;o=f[e+4>>2]|0;n=g>>>0>o>>>0;e=n?e+8|0:e;b=(n<<31>>31)+b|0;o=g-(n?o:0)|0;f[e>>2]=(f[e>>2]|0)+o;n=e+4|0;f[n>>2]=(f[n>>2]|0)-o;f[k>>2]=f[h>>2];f[k+4>>2]=e;f[k+8>>2]=b;g=Qza(Fb(146,k|0)|0)|0;if((d|0)==(g|0)){l=3;break a}}f[a+16>>2]=0;f[i>>2]=0;f[j>>2]=0;f[a>>2]=f[a>>2]|32;if((b|0)==2)c=0;else c=c-(f[e+4>>2]|0)|0}else l=3;while(0);if((l|0)==3){o=f[a+44>>2]|0;f[a+16>>2]=o+(f[a+48>>2]|0);f[i>>2]=o;f[j>>2]=o}u=m;return c|0}function xq(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=u;u=u+16|0;g=e;c=rr(lj(c,1)|0)|0;a=tc(c,d,f[a+4>>2]|0)|0;if(a|0){u=e;return a|0}e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(53185)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;i=y;y=0;if(i&1){h=10;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,53185,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,g|0);i=y;y=0;if(i&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(c)h=12}else{y=0;za(3);y=0;h=10}while(0);if((h|0)==10){a=Pa()|0;h=12}if((h|0)==12)Oa(e|0);$a(a|0);return 0}function yq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+272|0;j=m+8|0;k=m;e=f[b>>2]|0;f[k>>2]=e;l=(a|0)!=0;h=l?d:256;g=l?a:j;d=e;a:do if((h|0)!=0&(e|0)!=0){a=0;i=g;while(1){g=c>>>0>=h>>>0;if(!(g|c>>>0>32)){g=i;break a}d=g?h:c;c=c-d|0;d=on(i,k,d)|0;if((d|0)==-1)break;g=(i|0)==(j|0);h=h-(g?0:d)|0;g=g?i:i+d|0;a=d+a|0;d=f[k>>2]|0;e=d;if((h|0)!=0&(d|0)!=0)i=g;else break a}e=f[k>>2]|0;g=i;a=-1;h=0;d=e}else a=0;while(0);do if((d|0)!=0?(h|0)!=0&(c|0)!=0:0){e=h;while(1){h=hz(g,f[d>>2]|0)|0;if((h+1|0)>>>0<2){e=9;break}d=d+4|0;c=c+-1|0;e=e-h|0;a=h+a|0;if(!((e|0)!=0&(c|0)!=0)){e=11;break}else g=g+h|0}if((e|0)==9){j=(h|0)==0;f[k>>2]=j?0:d;a=j?a:-1;d=j?0:d;break}else if((e|0)==11){f[k>>2]=d;break}}else d=e;while(0);if(l)f[b>>2]=d;u=m;return a|0}function zq(a,c){a=a|0;c=c|0;var d=0,e=0;c3(f[a>>2]|0,40)|0;Zy(f[a>>2]|0,f[c+4>>2]|0,b[c+12>>0]|0);switch(f[c+8>>2]|0){case 0:{Vea(f[a>>2]|0,53361)|0;break}case 1:{Vea(f[a>>2]|0,53372)|0;break}case 2:{Vea(f[a>>2]|0,53365)|0;break}case 3:{Vea(f[a>>2]|0,53369)|0;break}case 4:{Vea(f[a>>2]|0,53376)|0;break}case 5:{Vea(f[a>>2]|0,53380)|0;break}default:{}}d=c+16|0;if(gKa(f[d>>2]|0)|0){e=Vea(f[a>>2]|0,39083)|0;vj(e,gKa(f[d>>2]|0)|0)|0}zea(a);kF(a,f[c+20>>2]|0);kF(a,f[c+24>>2]|0);x_(a);return}function Aq(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;j=k;do if((((((c-a|0)>2?(b[a>>0]|0)==112:0)?(b[a+1>>0]|0)==116:0)?(l=a+2|0,e=fc(l,c,d)|0,(e|0)!=(l|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(j,g+-24|0);a=f[i>>2]|0;c=a+-24|0;e=a;while(1){if((e|0)==(c|0))break;l=e+-24|0;f[i>>2]=l;Xka(l);e=f[i>>2]|0}y=0;ua(165,a+-48|0,72353)|0;l=y;y=0;if(!(l&1)?(l=b[j+11>>0]|0,d=l<<24>>24<0,y=0,oa(73,(f[i>>2]|0)+-24|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:l&255)|0)|0,l=y,y=0,!(l&1)):0){zta(j);a=h;break}l=Pa()|0;zta(j);$a(l|0)}while(0);u=k;return a|0}function Bq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+32|0;m=p+16|0;e=p+8|0;n=p+4|0;o=p;do if(!(bDa(c,-1)|0)){l=oHa(c)|0;b[e>>0]=l;l=a+32|0;if(b[a+44>>0]|0)if((Jca(e,1,1,f[l>>2]|0)|0)==1){d=14;break}else{a=-1;break}f[n>>2]=m;j=e+1|0;k=a+36|0;g=a+40|0;h=m+8|0;i=m;a=e;while(1){d=f[k>>2]|0;d=bc[f[(f[d>>2]|0)+12>>2]&15](d,f[g>>2]|0,a,j,o,m,h,n)|0;e=(d|0)==1;if((f[o>>2]|0)==(a|0)){d=13;break}if((d|0)==3){if((Jca(a,1,1,f[l>>2]|0)|0)!=1){d=13;break}}else{if((d|1|0)!=1){d=13;break}d=(f[n>>2]|0)-i|0;if((Jca(m,1,d,f[l>>2]|0)|0)!=(d|0)){d=13;break}a=e?f[o>>2]|0:a}if(!e){d=12;break}}if((d|0)==12){d=14;break}else if((d|0)==13){a=-1;break}}else d=14;while(0);if((d|0)==14)a=Awa(c)|0;u=p;return a|0}function Cq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;d=k;g=c+4|0;h=f[g>>2]|0;wp(c);i=f[g>>2]|0;if((i|0)!=(h|0)){if(!((i|0)==5&(rCa(h)|0))){j=a+24|0;rO(f[j>>2]|0);e=Vea(76852,64547)|0;a=f[a+16>>2]|0;if(!(gKa(a)|0)){dCa(d,64568);a=f[d>>2]|0}else{a=f[a>>2]|0;f[d>>2]=a}e=Vea(wja(Vea(K2(e,a)|0,64583)|0,c)|0,64588)|0;e=Vea(Vea(e,F$(h)|0)|0,64601)|0;Vea(Vea(e,F$(i)|0)|0,61397)|0;b[(f[j>>2]|0)+24>>0]=0}f[g>>2]=h}u=k;return}function Dq(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;i=j;f[i>>2]=c;f[i+4>>2]=d;d=j+20|0;h=j+8|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=uHa(e)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[h+11>>0]=g;c=h}else{k=g+16&-16;c=nV(k)|0;f[h>>2]=c;f[h+8>>2]=k|-2147483648;f[h+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);y=0;ya(145,d|0,i|0,h|0);k=y;y=0;do if(!(k&1)){y=0;ja(2050,a|0,d|0);k=y;y=0;if(k&1){c=Pa()|0;zta(d);break}else{zta(d);zta(h);f[a>>2]=18032;e=i;i=f[e+4>>2]|0;k=a+8|0;f[k>>2]=f[e>>2];f[k+4>>2]=i;u=j;return}}else c=Pa()|0;while(0);zta(h);$a(c|0)}
function aj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;q=CBa(b)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){k=h+-1|0;j=(k&h|0)==0;if(!j)if(q>>>0<h>>>0)d=q;else d=(q>>>0)%(h>>>0)|0;else d=k&q;c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c)m=16;else{i=f[b>>2]|0;do{c=f[c>>2]|0;if(!c){m=16;break a}b=f[c+4>>2]|0;if((b|0)!=(q|0)){if(!j){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&k;if((b|0)!=(d|0)){m=16;break a}}}while(!(bDa(f[c+8>>2]|0,i)|0))}}else{d=0;m=16}while(0);if((m|0)==16){yF(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(1512,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){c=Pa()|0;d=f[r>>2]|0;f[r>>2]=0;if(d|0)$Ja(d);$a(c|0)}c=f[o>>2]|0;d=c+-1|0;if(!(d&c)){h=c;d=d&q;break}if(q>>>0<c>>>0){h=c;d=q}else{h=c;d=(q>>>0)%(c>>>0)|0}}while(0);c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c){q=a+8|0;c=f[r>>2]|0;f[c>>2]=f[q>>2];f[q>>2]=c;f[(f[a>>2]|0)+(d<<2)>>2]=q;d=f[c>>2]|0;if(!d)d=r;else{d=f[d+4>>2]|0;b=h+-1|0;if(b&h){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&b;f[(f[a>>2]|0)+(d<<2)>>2]=c;d=r}}else{a=f[r>>2]|0;f[a>>2]=f[c>>2];f[c>>2]=a;d=r;c=a}f[i>>2]=(f[i>>2]|0)+1;f[d>>2]=0}u=s;return c+12|0}function bj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+32|0;k=o+16|0;h=o+4|0;l=o+8|0;m=o;if(f[b+32>>2]|0)Na(23697,19319,848,23710);n=BT()|0;PDa(h,0);j=b+28|0;e=f[j>>2]|0;d=f[a>>2]|0;do if(Xha(d,e)|0){tI(k,1,d,f[a+8>>2]|0,f[18679]|0);y=0;d=ua(56,n|0,2)|0;e=y;y=0;if(((!(e&1)?(g=f[d>>2]|0,y=0,i=oa(40,a|0,f[j>>2]|0,k|0)|0,j=y,y=0,!(j&1)):0)?(y=0,ja(78,g|0,i|0),j=y,y=0,!(j&1)):0)?(y=0,c=la(154,k|0)|0,j=y,y=0,!(j&1)):0){f[h>>2]=c;iX(k);break}o=Pa()|0;iX(k);$a(o|0)}else{c=AT(a,e,f[18680]|0)|0;f[h>>2]=c}while(0);e=cP(c)|0;a=UAa(n,2)|0;a=UAa(f[a>>2]|0,1)|0;l6(gKa(f[a>>2]|0)|0,e)|0;a=b+8|0;d=b+12|0;c=0;while(1){if(c>>>0>=(gKa(f[d>>2]|0)|0)>>>0)break;zG(e,MBa(+(c>>>0))|0);j=bga(a,c)|0;f[l>>2]=f[j>>2];f[k>>2]=f[l>>2];Tz(e,zQ(lJ(Yma(k)|0)|0)|0);c=c+1|0}zF(e);f[m>>2]=f[b+24>>2];f[k>>2]=f[m>>2];Tz(e,zQ(lJ(Yma(k)|0)|0)|0);u=o;return n|0}function cj(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0;p=u;u=u+144|0;i=p+128|0;j=p+124|0;q=p+64|0;k=p+44|0;l=p+24|0;m=p+8|0;e=p+20|0;h=p+4|0;o=p;f[j>>2]=a;kia(q);y=0;ja(721,q|0,a|0);d=y;y=0;if(d&1)a=Pa()|0;else{f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;f[k+12>>2]=0;n[k+16>>2]=1.0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;f[l+12>>2]=0;n[l+16>>2]=1.0;f[m>>2]=j;f[m+4>>2]=k;f[m+8>>2]=l;b=f[q+28>>2]|0;a=f[q+24>>2]|0;while(1){if((a|0)==(b|0)){g=4;break}c=f[a>>2]|0;f[e>>2]=f[c+16>>2];y=0;f[i>>2]=f[e>>2];d=ua(94,m|0,i|0)|0;r=y;y=0;if(r&1)break;f[c+16>>2]=d;a=a+4|0}a:do if((g|0)==4){b=f[q+40>>2]|0;a=f[q+36>>2]|0;while(1){if((a|0)==(b|0))break;c=f[a>>2]|0;f[h>>2]=f[c+32>>2];y=0;f[i>>2]=f[h>>2];d=ua(94,m|0,i|0)|0;r=y;y=0;if(r&1)break a;f[c+32>>2]=d;a=a+4|0}b=f[q+52>>2]|0;a=f[q+48>>2]|0;while(1){if((a|0)==(b|0))break;c=f[a>>2]|0;f[o>>2]=f[c+24>>2];y=0;f[i>>2]=f[o>>2];d=ua(94,m|0,i|0)|0;r=y;y=0;if(r&1)break a;f[c+24>>2]=d;a=a+4|0}o=f[j>>2]|0;r=Dw(f[o>>2]|0,f[o+4>>2]|0,l)|0;NB(o,r,f[(f[j>>2]|0)+4>>2]|0);Sma(l);CY(k);p7(q);u=p;return}while(0);a=Pa()|0;Sma(l);CY(k)}p7(q);$a(a|0)}function dj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;q=CBa(b)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){k=h+-1|0;j=(k&h|0)==0;if(!j)if(q>>>0<h>>>0)d=q;else d=(q>>>0)%(h>>>0)|0;else d=k&q;c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c)m=16;else{i=f[b>>2]|0;do{c=f[c>>2]|0;if(!c){m=16;break a}b=f[c+4>>2]|0;if((b|0)!=(q|0)){if(!j){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&k;if((b|0)!=(d|0)){m=16;break a}}}while(!(fxa(f[c+8>>2]|0,i)|0))}}else{d=0;m=16}while(0);if((m|0)==16){fJ(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(1997,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){c=Pa()|0;d=f[r>>2]|0;f[r>>2]=0;if(d|0)$Ja(d);$a(c|0)}c=f[o>>2]|0;d=c+-1|0;if(!(d&c)){h=c;d=d&q;break}if(q>>>0<c>>>0){h=c;d=q}else{h=c;d=(q>>>0)%(c>>>0)|0}}while(0);c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c){q=a+8|0;c=f[r>>2]|0;f[c>>2]=f[q>>2];f[q>>2]=c;f[(f[a>>2]|0)+(d<<2)>>2]=q;d=f[c>>2]|0;if(!d)d=r;else{d=f[d+4>>2]|0;b=h+-1|0;if(b&h){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&b;f[(f[a>>2]|0)+(d<<2)>>2]=c;d=r}}else{a=f[r>>2]|0;f[a>>2]=f[c>>2];f[c>>2]=a;d=r;c=a}f[i>>2]=(f[i>>2]|0)+1;f[d>>2]=0}u=s;return c+12|0}function ej(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;q=CBa(b)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){k=h+-1|0;j=(k&h|0)==0;if(!j)if(q>>>0<h>>>0)d=q;else d=(q>>>0)%(h>>>0)|0;else d=k&q;c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c)m=16;else{i=f[b>>2]|0;do{c=f[c>>2]|0;if(!c){m=16;break a}b=f[c+4>>2]|0;if((b|0)!=(q|0)){if(!j){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&k;if((b|0)!=(d|0)){m=16;break a}}}while(!(fxa(f[c+8>>2]|0,i)|0))}}else{d=0;m=16}while(0);if((m|0)==16){fJ(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(208,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){c=Pa()|0;d=f[r>>2]|0;f[r>>2]=0;if(d|0)$Ja(d);$a(c|0)}c=f[o>>2]|0;d=c+-1|0;if(!(d&c)){h=c;d=d&q;break}if(q>>>0<c>>>0){h=c;d=q}else{h=c;d=(q>>>0)%(c>>>0)|0}}while(0);c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c){q=a+8|0;c=f[r>>2]|0;f[c>>2]=f[q>>2];f[q>>2]=c;f[(f[a>>2]|0)+(d<<2)>>2]=q;d=f[c>>2]|0;if(!d)d=r;else{d=f[d+4>>2]|0;b=h+-1|0;if(b&h){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&b;f[(f[a>>2]|0)+(d<<2)>>2]=c;d=r}}else{a=f[r>>2]|0;f[a>>2]=f[c>>2];f[c>>2]=a;d=r;c=a}f[i>>2]=(f[i>>2]|0)+1;f[d>>2]=0}u=s;return c+12|0}function fj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;k=f[b>>2]|0;f[r>>2]=k;q=$z(r,4)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){i=h+-1|0;j=(i&h|0)==0;if(!j)if(q>>>0<h>>>0)c=q;else c=(q>>>0)%(h>>>0)|0;else c=i&q;b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b)m=15;else do{b=f[b>>2]|0;if(!b){m=15;break a}d=f[b+4>>2]|0;if((d|0)!=(q|0)){if(!j){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&i;if((d|0)!=(c|0)){m=15;break a}}}while((f[b+8>>2]|0)!=(k|0))}else{c=0;m=15}while(0);if((m|0)==15){fJ(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(1108,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){b=Pa()|0;c=f[r>>2]|0;f[r>>2]=0;if(c|0)$Ja(c);$a(b|0)}b=f[o>>2]|0;c=b+-1|0;if(!(c&b)){h=b;c=c&q;break}if(q>>>0<b>>>0){h=b;c=q}else{h=b;c=(q>>>0)%(b>>>0)|0}}while(0);b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b){q=a+8|0;b=f[r>>2]|0;f[b>>2]=f[q>>2];f[q>>2]=b;f[(f[a>>2]|0)+(c<<2)>>2]=q;c=f[b>>2]|0;if(!c)c=r;else{c=f[c+4>>2]|0;d=h+-1|0;if(d&h){if(c>>>0>=h>>>0)c=(c>>>0)%(h>>>0)|0}else c=c&d;f[(f[a>>2]|0)+(c<<2)>>2]=b;c=r}}else{a=f[r>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=a;c=r;b=a}f[i>>2]=(f[i>>2]|0)+1;f[c>>2]=0}u=s;return b+12|0}function gj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;q=CBa(b)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){k=h+-1|0;j=(k&h|0)==0;if(!j)if(q>>>0<h>>>0)d=q;else d=(q>>>0)%(h>>>0)|0;else d=k&q;c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c)m=16;else{i=f[b>>2]|0;do{c=f[c>>2]|0;if(!c){m=16;break a}b=f[c+4>>2]|0;if((b|0)!=(q|0)){if(!j){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&k;if((b|0)!=(d|0)){m=16;break a}}}while(!(bDa(f[c+8>>2]|0,i)|0))}}else{d=0;m=16}while(0);if((m|0)==16){fJ(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(1515,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){c=Pa()|0;d=f[r>>2]|0;f[r>>2]=0;if(d|0)$Ja(d);$a(c|0)}c=f[o>>2]|0;d=c+-1|0;if(!(d&c)){h=c;d=d&q;break}if(q>>>0<c>>>0){h=c;d=q}else{h=c;d=(q>>>0)%(c>>>0)|0}}while(0);c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c){q=a+8|0;c=f[r>>2]|0;f[c>>2]=f[q>>2];f[q>>2]=c;f[(f[a>>2]|0)+(d<<2)>>2]=q;d=f[c>>2]|0;if(!d)d=r;else{d=f[d+4>>2]|0;b=h+-1|0;if(b&h){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&b;f[(f[a>>2]|0)+(d<<2)>>2]=c;d=r}}else{a=f[r>>2]|0;f[a>>2]=f[c>>2];f[c>>2]=a;d=r;c=a}f[i>>2]=(f[i>>2]|0)+1;f[d>>2]=0}u=s;return c+12|0}function hj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;e=u;u=u+32|0;g=e+12|0;h=e;d=a+12|0;a:do if((SN(d,c)|0)==(a+16|0)){e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(33294)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;h=y;y=0;if(h&1){i=10;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,33294,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,g|0);h=y;y=0;if(h&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(!c)break a}else{y=0;za(3);y=0;i=10}while(0);if((i|0)==10)a=Pa()|0;Oa(e|0)}else{g=NK(d,c)|0;if((f[g>>2]|0)!=(f[g+4>>2]|0)){i=(NK(d,c)|0)+4|0;u=e;return f[(f[i>>2]|0)+-4>>2]|0}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(33322)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[h+11>>0]=d;a=h}else{c=d+16&-16;y=0;a=la(150,c|0)|0;g=y;y=0;if(g&1){i=22;break}f[h>>2]=a;f[h+8>>2]=c|-2147483648;f[h+4>>2]=d}Pta(a,33322,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,h|0);g=y;y=0;if(g&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(h);if(!c)break a}else{y=0;za(3);y=0;i=22}while(0);if((i|0)==22)a=Pa()|0;Oa(e|0)}while(0);$a(a|0);return 0}function ij(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+48|0;g=r+36|0;l=r+32|0;m=r+28|0;n=r+24|0;o=r+20|0;p=r+16|0;q=r+12|0;h=r+8|0;i=r+4|0;j=r;k=c+8|0;a:do switch(f[c+32>>2]|0){case 1:{switch(b[k>>0]|0){case 1:{p=f[(f[a>>2]|0)+64>>2]|0;f[l>>2]=f[d>>2];q=(csa(e)|0)&255;f[g>>2]=f[l>>2];$b[p&255](a,g,q);break a}case 2:{p=f[(f[a>>2]|0)+68>>2]|0;f[m>>2]=f[d>>2];q=(csa(e)|0)&65535;f[g>>2]=f[m>>2];$b[p&255](a,g,q);break a}case 4:{p=f[(f[a>>2]|0)+72>>2]|0;f[n>>2]=f[d>>2];q=csa(e)|0;f[g>>2]=f[n>>2];$b[p&255](a,g,q);break a}default:Ka()}break}case 2:{switch(b[k>>0]|0){case 1:{p=f[(f[a>>2]|0)+64>>2]|0;f[o>>2]=f[d>>2];q=Eka(e)|0;f[g>>2]=f[o>>2];$b[p&255](a,g,q&255);break a}case 2:{o=f[(f[a>>2]|0)+68>>2]|0;f[p>>2]=f[d>>2];q=Eka(e)|0;f[g>>2]=f[p>>2];$b[o&255](a,g,q&65535);break a}case 4:{o=f[(f[a>>2]|0)+72>>2]|0;f[q>>2]=f[d>>2];p=Eka(e)|0;f[g>>2]=f[q>>2];$b[o&255](a,g,p);break a}case 8:{p=f[(f[a>>2]|0)+76>>2]|0;f[h>>2]=f[d>>2];q=Eka(e)|0;f[g>>2]=f[h>>2];dc[p&127](a,g,q,J);break a}default:Ka()}break}case 3:{p=f[(f[a>>2]|0)+72>>2]|0;f[i>>2]=f[d>>2];q=Xqa(e)|0;f[g>>2]=f[i>>2];$b[p&255](a,g,q);break}case 4:{p=f[(f[a>>2]|0)+76>>2]|0;f[j>>2]=f[d>>2];q=oja(e)|0;f[g>>2]=f[j>>2];dc[p&127](a,g,q,J);break}default:Ka()}while(0);u=r;return}function jj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+32|0;i=h+12|0;j=h;f[a>>2]=0;d=c+16|0;c=0;while(1){e=($6(f[d>>2]|0)|0)&255;g=e&127;if((((c|0)==0?127:(1<<32-c)+127|0)&g|0)!=(g|0)){a=3;break}f[a>>2]=f[a>>2]|g<<c;if(!(e&128)){a=28;break}c=c+7|0;if(c>>>0>31){a=16;break}}a:do if((a|0)==3){g=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(54899)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[i+11>>0]=e;c=i}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){a=11;break}f[i>>2]=c;f[i+8>>2]=d|-2147483648;f[i+4>>2]=e}Pta(c,54899,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,i|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(i);if(!d)break a}else{y=0;za(3);y=0;a=11}while(0);if((a|0)==11)c=Pa()|0;Oa(g|0)}else if((a|0)==16){g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(54942)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;i=y;y=0;if(i&1){a=24;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,54942,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,j|0);i=y;y=0;if(i&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(j);if(!d)break a}else{y=0;za(3);y=0;a=24}while(0);if((a|0)==24)c=Pa()|0;Oa(g|0)}else if((a|0)==28){u=h;return}while(0);$a(c|0)}function kj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;i=k+8|0;j=k;g=a+26|0;b[g>>0]=(b[g>>0]|0)==0?b[c+26>>0]|0:1;g=a+27|0;b[g>>0]=(b[g>>0]|0)==0?b[c+27>>0]|0:1;g=a+76|0;b[g>>0]=(b[g>>0]|0)==0?b[c+76>>0]|0:1;g=a+77|0;b[g>>0]=(b[g>>0]|0)==0?b[c+77>>0]|0:1;g=c+32|0;h=a+28|0;d=f[c+28>>2]|0;a:while(1){if((d|0)==(g|0))break;e=f[d+16>>2]|0;f[j>>2]=e;Pz(i,h,e,j);e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue a}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}g=c+44|0;h=a+40|0;d=f[c+40>>2]|0;b:while(1){if((d|0)==(g|0))break;e=f[d+16>>2]|0;f[j>>2]=e;Pz(i,h,e,j);e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue b}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}g=c+56|0;h=a+52|0;d=f[c+52>>2]|0;c:while(1){if((d|0)==(g|0))break;f[j>>2]=f[d+16>>2];jz(i,h,j,j);e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue c}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}h=c+68|0;g=a+64|0;d=f[c+64>>2]|0;d:while(1){if((d|0)==(h|0))break;f[j>>2]=f[d+16>>2];jz(i,g,j,j);e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue d}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}u=k;return}function lj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;d=u;u=u+32|0;g=d+12|0;h=d;i=a+28|0;j=a+32|0;a:do if(fIa(b[a>>0]|0)|0){g=(Fr(a)|0)+4|0;if((gKa(f[g>>2]|0)|0)>>>0>c>>>0){k=Fr(a)|0;k=Cja(f[k>>2]|0,f[k+4>>2]|0,c)|0;u=d;return f[k>>2]|0}e=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(51714)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[h+11>>0]=d;a=h}else{c=d+16&-16;y=0;a=la(150,c|0)|0;g=y;y=0;if(g&1){k=22;break}f[h>>2]=a;f[h+8>>2]=c|-2147483648;f[h+4>>2]=d}Pta(a,51714,d)|0;SBa(a+d|0,0);y=0;Ca(79,e|0,h|0,f[i>>2]|0,f[j>>2]|0);j=y;y=0;if(j&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(h);if(!c)break a}else{y=0;za(3);y=0;k=22}while(0);if((k|0)==22)a=Pa()|0;Oa(e|0)}else{e=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(51700)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;h=y;y=0;if(h&1){k=10;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,51700,d)|0;SBa(a+d|0,0);y=0;Ca(79,e|0,g|0,f[i>>2]|0,f[j>>2]|0);j=y;y=0;if(j&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(g);if(!c)break a}else{y=0;za(3);y=0;k=10}while(0);if((k|0)==10)a=Pa()|0;Oa(e|0)}while(0);$a(a|0);return 0}function mj(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;a:do switch(a|0){case 0:{b=MBa(0.0)|0;break}case 1:{b=uL(f[18905]|0,MBa(0.0)|0)|0;break}case 2:{b=f[18837]|0;if(tJa(b)|0){b=f[18914]|0;b=DI(b,MBa(0.0)|0)|0;break a}else{b=Bea(b)|0;break a}}case 3:{a=f[18910]|0;b=MBa(0.0)|0;b=xz(a,b,MBa(0.0)|0,MBa(0.0)|0,MBa(0.0)|0)|0;break}case 4:{b=vC(f[18909]|0,MBa(0.0)|0,MBa(0.0)|0)|0;break}case 5:{o=f[18908]|0;n=MBa(0.0)|0;m=MBa(0.0)|0;l=MBa(0.0)|0;k=MBa(0.0)|0;j=MBa(0.0)|0;i=MBa(0.0)|0;h=MBa(0.0)|0;g=MBa(0.0)|0;e=MBa(0.0)|0;d=MBa(0.0)|0;c=MBa(0.0)|0;a=MBa(0.0)|0;b=MBa(0.0)|0;b=ar(o,n,m,l,k,j,i,h,g,e,d,c,a,b,MBa(0.0)|0,MBa(0.0)|0,MBa(0.0)|0)|0;break}case 6:{k=f[18907]|0;l=MBa(0.0)|0;m=MBa(0.0)|0;n=MBa(0.0)|0;o=MBa(0.0)|0;b=MBa(0.0)|0;b=Ev(k,l,m,n,o,b,MBa(0.0)|0,MBa(0.0)|0,MBa(0.0)|0)|0;break}case 7:{o=f[18906]|0;b=MBa(0.0)|0;b=xz(o,b,MBa(0.0)|0,MBa(0.0)|0,MBa(0.0)|0)|0;break}default:Na(64313,51469,215,51515)}while(0);return b|0}function nj(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+16|0;j=p+12|0;m=p+8|0;n=p;y=0;ja(80,n|0,a|0);l=y;y=0;a:do if(l&1){e=ab(0)|0;o=20}else{b:do if(b[n>>0]|0){Axa(j,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;k=ua(46,f[j>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){e=ab(0)|0;pza(j)}else{pza(j);g=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[g+24>>2]|0;h=g+76|0;e=f[h>>2]|0;do if(bDa(-1,e)|0){Axa(j,g);y=0;e=ua(46,f[j>>2]|0,77556)|0;q=y;y=0;if(!(q&1)?(y=0,i=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,32)|0,q=y,y=0,!(q&1)):0){pza(j);e=i<<24>>24;f[h>>2]=e;o=10;break}e=ab(0)|0;pza(j)}else o=10;while(0);do if((o|0)==10){q=f[(f[k>>2]|0)+28>>2]|0;f[m>>2]=l;y=0;f[j>>2]=f[m>>2];e=ka(q|0,k|0,j|0,g|0,e&255|0,c|0,d|0)|0;q=y;y=0;if(q&1){e=ab(0)|0;break}if(e|0)break b;q=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,q|0,f[q+16>>2]|5|0);q=y;y=0;if(!(q&1))break b;e=ab(0)|0;break c}while(0)}while(0);ww(n);o=20;break a}while(0);ww(n)}while(0);do if((o|0)==20){Ya(e|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);q=y;y=0;if(!(q&1)){_a();break}e=Pa()|0;y=0;za(5);q=y;y=0;if(q&1){q=ab(0)|0;lDa(q)}else $a(e|0)}while(0);u=p;return a|0}function oj(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+16|0;j=p+12|0;m=p+8|0;n=p;y=0;ja(80,n|0,a|0);l=y;y=0;a:do if(l&1){e=ab(0)|0;o=20}else{b:do if(b[n>>0]|0){Axa(j,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;k=ua(46,f[j>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){e=ab(0)|0;pza(j)}else{pza(j);g=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[g+24>>2]|0;h=g+76|0;e=f[h>>2]|0;do if(bDa(-1,e)|0){Axa(j,g);y=0;e=ua(46,f[j>>2]|0,77556)|0;q=y;y=0;if(!(q&1)?(y=0,i=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,32)|0,q=y,y=0,!(q&1)):0){pza(j);e=i<<24>>24;f[h>>2]=e;o=10;break}e=ab(0)|0;pza(j)}else o=10;while(0);do if((o|0)==10){q=f[(f[k>>2]|0)+20>>2]|0;f[m>>2]=l;y=0;f[j>>2]=f[m>>2];e=ka(q|0,k|0,j|0,g|0,e&255|0,c|0,d|0)|0;q=y;y=0;if(q&1){e=ab(0)|0;break}if(e|0)break b;q=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,q|0,f[q+16>>2]|5|0);q=y;y=0;if(!(q&1))break b;e=ab(0)|0;break c}while(0)}while(0);ww(n);o=20;break a}while(0);ww(n)}while(0);do if((o|0)==20){Ya(e|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);q=y;y=0;if(!(q&1)){_a();break}e=Pa()|0;y=0;za(5);q=y;y=0;if(q&1){q=ab(0)|0;lDa(q)}else $a(e|0)}while(0);u=p;return a|0}function pj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+336|0;m=v+48|0;l=v+32|0;i=v+24|0;h=v+8|0;k=v;q=v+300|0;n=v+296|0;g=v+68|0;t=v+64|0;r=v+60|0;s=v+56|0;o=k;f[o>>2]=37;f[o+4>>2]=0;o=c+4|0;j=DB(k+1|0,68562,f[o>>2]|0)|0;f[n>>2]=q;a=gpa()|0;if(j){f[h>>2]=f[c+8>>2];p[h+8>>3]=e;a=L$(q,30,a,k,h)|0}else{p[i>>3]=e;a=L$(q,30,a,k,i)|0}a:do if((a|0)>29){a=gpa()|0;if(j){y=0;f[l>>2]=f[c+8>>2];p[l+8>>3]=e;a=xa(24,n|0,a|0,k|0,l|0)|0;m=y;y=0;if(!(m&1))w=9}else{y=0;p[m>>3]=e;a=xa(24,n|0,a|0,k|0,m|0)|0;m=y;y=0;if(!(m&1))w=9}do if((w|0)==9){h=f[n>>2]|0;if(!h){y=0;za(9);y=0;break}else{l=h;k=h;w=12;break a}}while(0);a=Pa()|0}else{l=0;k=q;w=12}while(0);if((w|0)==12){j=k+a|0;i=uG(k,j,f[o>>2]|0)|0;do if((k|0)!=(q|0)){a=rc(a<<3)|0;if(!a){y=0;za(9);y=0;a=Pa()|0;break}else{g=a;h=a;w=16;break}}else{h=0;w=16}while(0);if((w|0)==16){Axa(s,c);y=0;sa(4,k|0,i|0,j|0,g|0,t|0,r|0,s|0);w=y;y=0;do if(w&1){a=Pa()|0;pza(s)}else{pza(s);y=0;a=ka(43,f[b>>2]|0,g|0,f[t>>2]|0,f[r>>2]|0,c|0,d|0)|0;w=y;y=0;if(w&1){a=Pa()|0;break}f[b>>2]=a;if(h|0)Xe(h);if(l|0)Xe(l);u=v;return a|0}while(0);if(h)Xe(h)}if(l)Xe(l)}$a(a|0);return 0}function qj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+336|0;m=v+48|0;l=v+32|0;i=v+24|0;h=v+8|0;k=v;q=v+300|0;n=v+296|0;g=v+68|0;t=v+64|0;r=v+60|0;s=v+56|0;o=k;f[o>>2]=37;f[o+4>>2]=0;o=c+4|0;j=DB(k+1|0,83563,f[o>>2]|0)|0;f[n>>2]=q;a=gpa()|0;if(j){f[h>>2]=f[c+8>>2];p[h+8>>3]=e;a=L$(q,30,a,k,h)|0}else{p[i>>3]=e;a=L$(q,30,a,k,i)|0}a:do if((a|0)>29){a=gpa()|0;if(j){y=0;f[l>>2]=f[c+8>>2];p[l+8>>3]=e;a=xa(24,n|0,a|0,k|0,l|0)|0;m=y;y=0;if(!(m&1))w=9}else{y=0;p[m>>3]=e;a=xa(24,n|0,a|0,k|0,m|0)|0;m=y;y=0;if(!(m&1))w=9}do if((w|0)==9){h=f[n>>2]|0;if(!h){y=0;za(9);y=0;break}else{l=h;k=h;w=12;break a}}while(0);a=Pa()|0}else{l=0;k=q;w=12}while(0);if((w|0)==12){j=k+a|0;i=uG(k,j,f[o>>2]|0)|0;do if((k|0)!=(q|0)){a=rc(a<<3)|0;if(!a){y=0;za(9);y=0;a=Pa()|0;break}else{g=a;h=a;w=16;break}}else{h=0;w=16}while(0);if((w|0)==16){Axa(s,c);y=0;sa(4,k|0,i|0,j|0,g|0,t|0,r|0,s|0);w=y;y=0;do if(w&1){a=Pa()|0;pza(s)}else{pza(s);y=0;a=ka(43,f[b>>2]|0,g|0,f[t>>2]|0,f[r>>2]|0,c|0,d|0)|0;w=y;y=0;if(w&1){a=Pa()|0;break}f[b>>2]=a;if(h|0)Xe(h);if(l|0)Xe(l);u=v;return a|0}while(0);if(h)Xe(h)}if(l)Xe(l)}$a(a|0);return 0}function rj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+160|0;m=v+48|0;l=v+32|0;i=v+24|0;h=v+8|0;k=v;q=v+130|0;n=v+68|0;g=v+72|0;t=v+64|0;r=v+60|0;s=v+56|0;o=k;f[o>>2]=37;f[o+4>>2]=0;o=c+4|0;j=DB(k+1|0,68562,f[o>>2]|0)|0;f[n>>2]=q;a=gpa()|0;if(j){f[h>>2]=f[c+8>>2];p[h+8>>3]=e;a=L$(q,30,a,k,h)|0}else{p[i>>3]=e;a=L$(q,30,a,k,i)|0}a:do if((a|0)>29){a=gpa()|0;if(j){y=0;f[l>>2]=f[c+8>>2];p[l+8>>3]=e;a=xa(24,n|0,a|0,k|0,l|0)|0;m=y;y=0;if(!(m&1))w=9}else{y=0;p[m>>3]=e;a=xa(24,n|0,a|0,k|0,m|0)|0;m=y;y=0;if(!(m&1))w=9}do if((w|0)==9){h=f[n>>2]|0;if(!h){y=0;za(9);y=0;break}else{l=h;k=h;w=12;break a}}while(0);a=Pa()|0}else{l=0;k=q;w=12}while(0);if((w|0)==12){j=k+a|0;i=uG(k,j,f[o>>2]|0)|0;do if((k|0)!=(q|0)){a=rc(a<<1)|0;if(!a){y=0;za(9);y=0;a=Pa()|0;break}else{g=a;h=a;w=16;break}}else{h=0;w=16}while(0);if((w|0)==16){Axa(s,c);y=0;sa(2,k|0,i|0,j|0,g|0,t|0,r|0,s|0);w=y;y=0;do if(w&1){a=Pa()|0;pza(s)}else{pza(s);y=0;a=ka(41,f[b>>2]|0,g|0,f[t>>2]|0,f[r>>2]|0,c|0,d|0)|0;w=y;y=0;if(w&1){a=Pa()|0;break}f[b>>2]=a;if(h|0)Xe(h);if(l|0)Xe(l);u=v;return a|0}while(0);if(h)Xe(h)}if(l)Xe(l)}$a(a|0);return 0}function sj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+160|0;m=v+48|0;l=v+32|0;i=v+24|0;h=v+8|0;k=v;q=v+130|0;n=v+68|0;g=v+72|0;t=v+64|0;r=v+60|0;s=v+56|0;o=k;f[o>>2]=37;f[o+4>>2]=0;o=c+4|0;j=DB(k+1|0,83563,f[o>>2]|0)|0;f[n>>2]=q;a=gpa()|0;if(j){f[h>>2]=f[c+8>>2];p[h+8>>3]=e;a=L$(q,30,a,k,h)|0}else{p[i>>3]=e;a=L$(q,30,a,k,i)|0}a:do if((a|0)>29){a=gpa()|0;if(j){y=0;f[l>>2]=f[c+8>>2];p[l+8>>3]=e;a=xa(24,n|0,a|0,k|0,l|0)|0;m=y;y=0;if(!(m&1))w=9}else{y=0;p[m>>3]=e;a=xa(24,n|0,a|0,k|0,m|0)|0;m=y;y=0;if(!(m&1))w=9}do if((w|0)==9){h=f[n>>2]|0;if(!h){y=0;za(9);y=0;break}else{l=h;k=h;w=12;break a}}while(0);a=Pa()|0}else{l=0;k=q;w=12}while(0);if((w|0)==12){j=k+a|0;i=uG(k,j,f[o>>2]|0)|0;do if((k|0)!=(q|0)){a=rc(a<<1)|0;if(!a){y=0;za(9);y=0;a=Pa()|0;break}else{g=a;h=a;w=16;break}}else{h=0;w=16}while(0);if((w|0)==16){Axa(s,c);y=0;sa(2,k|0,i|0,j|0,g|0,t|0,r|0,s|0);w=y;y=0;do if(w&1){a=Pa()|0;pza(s)}else{pza(s);y=0;a=ka(41,f[b>>2]|0,g|0,f[t>>2]|0,f[r>>2]|0,c|0,d|0)|0;w=y;y=0;if(w&1){a=Pa()|0;break}f[b>>2]=a;if(h|0)Xe(h);if(l|0)Xe(l);u=v;return a|0}while(0);if(h)Xe(h)}if(l)Xe(l)}$a(a|0);return 0}function tj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+12|0;k=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=20}else{b:do if(b[m>>0]|0){Axa(i,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[i>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){d=ab(0)|0;pza(i)}else{pza(i);e=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[e+24>>2]|0;g=e+76|0;d=f[g>>2]|0;do if(bDa(-1,d)|0){Axa(i,e);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[g>>2]=d;n=10;break}d=ab(0)|0;pza(i)}else n=10;while(0);do if((n|0)==10){p=f[(f[j>>2]|0)+24>>2]|0;f[k>>2]=l;y=0;f[i>>2]=f[k>>2];d=va(p|0,j|0,i|0,e|0,d&255|0,c&65535|0)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0;break c}while(0)}while(0);ww(m);n=20;break a}while(0);ww(m)}while(0);do if((n|0)==20){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function uj(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;j=u;u=u+16|0;h=j+12|0;k=j;e=a+4|0;switch(d<<24>>24){case 63:{d=xsa(f[e>>2]|0)|0;f[d+8>>2]=1;f[d+4>>2]=1;l=4;break}case 64:{d=xsa(f[e>>2]|0)|0;f[d+8>>2]=2;l=d+16|0;lU(l,1);g=Jg(a)|0;l=bga(l,0)|0;f[l>>2]=g;l=4;break}default:d=0}do if((l|0)==4){do if(b[a+12>>0]|0){e=Vea(76852,55765)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[h>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,i=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,m=y,y=0,!(m&1)):0){pza(h);jn(e,i)|0;Yp(e)|0;break}m=Pa()|0;pza(h);$a(m|0)}while(0);if(!(Nm(a)|0)){nZ(d);f[c>>2]=d;d=1;break}a=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;g=uHa(55779)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[k+11>>0]=g;d=k}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=18;break}f[k>>2]=d;f[k+8>>2]=e|-2147483648;f[k+4>>2]=g}Pta(d,55779,g)|0;SBa(d+g|0,0);y=0;ja(583,a|0,k|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,a|0,64,361);y=0;e=0}d=Pa()|0;zta(k);if(e)l=20}else{y=0;za(3);y=0;l=18}while(0);if((l|0)==18){d=Pa()|0;l=20}if((l|0)==20)Oa(a|0);$a(d|0)}while(0);u=j;return d|0}function vj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+12|0;k=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=20}else{b:do if(b[m>>0]|0){Axa(i,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[i>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){d=ab(0)|0;pza(i)}else{pza(i);e=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[e+24>>2]|0;g=e+76|0;d=f[g>>2]|0;do if(bDa(-1,d)|0){Axa(i,e);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[g>>2]=d;n=10;break}d=ab(0)|0;pza(i)}else n=10;while(0);do if((n|0)==10){p=f[(f[j>>2]|0)+24>>2]|0;f[k>>2]=l;y=0;f[i>>2]=f[k>>2];d=va(p|0,j|0,i|0,e|0,d&255|0,c|0)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0;break c}while(0)}while(0);ww(m);n=20;break a}while(0);ww(m)}while(0);do if((n|0)==20){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function wj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+12|0;k=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=20}else{b:do if(b[m>>0]|0){Axa(i,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[i>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){d=ab(0)|0;pza(i)}else{pza(i);e=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[e+24>>2]|0;g=e+76|0;d=f[g>>2]|0;do if(bDa(-1,d)|0){Axa(i,e);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[g>>2]=d;n=10;break}d=ab(0)|0;pza(i)}else n=10;while(0);do if((n|0)==10){p=f[(f[j>>2]|0)+16>>2]|0;f[k>>2]=l;y=0;f[i>>2]=f[k>>2];d=va(p|0,j|0,i|0,e|0,d&255|0,c|0)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0;break c}while(0)}while(0);ww(m);n=20;break a}while(0);ww(m)}while(0);do if((n|0)==20){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function xj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+12|0;k=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=20}else{b:do if(b[m>>0]|0){Axa(i,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[i>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){d=ab(0)|0;pza(i)}else{pza(i);e=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[e+24>>2]|0;g=e+76|0;d=f[g>>2]|0;do if(bDa(-1,d)|0){Axa(i,e);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[g>>2]=d;n=10;break}d=ab(0)|0;pza(i)}else n=10;while(0);do if((n|0)==10){p=f[(f[j>>2]|0)+12>>2]|0;f[k>>2]=l;y=0;f[i>>2]=f[k>>2];d=va(p|0,j|0,i|0,e|0,d&255|0,c|0)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0;break c}while(0)}while(0);ww(m);n=20;break a}while(0);ww(m)}while(0);do if((n|0)==20){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function yj(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;i=l+36|0;j=l+24|0;m=l+12|0;k=l;h=fc(a,c,e)|0;a:do if((h|0)!=(a|0)?(g=e+4|0,(f[e>>2]|0)!=(f[g>>2]|0)):0){$t(m,d,72085);y=0;ja(2054,k|0,(f[g>>2]|0)+-24|0);e=y;y=0;if(e&1)a=Pa()|0;else{e=b[k+11>>0]|0;d=e<<24>>24<0;y=0;oa(73,m|0,(d?f[k>>2]|0:k)|0,(d?f[k+4>>2]|0:e&255)|0)|0;e=y;y=0;do if(e&1)a=Pa()|0;else{f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,j|0,72083)|0;e=y;y=0;if(e&1){a=Pa()|0;zta(j);break}f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;d=a+-24|0;c=d+11|0;if((b[c>>0]|0)<0){SBa(f[d>>2]|0,0);f[a+-20>>2]=0;a=d}else{SBa(d,0);b[c>>0]=0;a=d}Sq(d);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}zta(i);zta(j);zta(k);zta(m);a=h;break a}while(0);zta(k)}zta(m);$a(a|0)}while(0);u=l;return a|0}function zj(a,b,c){a=a|0;b=b|0;c=c|0;if(!c)Na(59079,64509,76,59084);do switch(f[c>>2]|0){case 1:{Di(a,b,c);break}case 2:{Ls(a,b,c);break}case 3:{O7(a);break}case 4:{ln(a,b,c);break}case 5:{Jp(a,b,c);break}case 6:{O7(a);break}case 7:{O7(a);break}case 8:{O7(a);break}case 9:{O7(a);break}case 10:{O7(a);break}case 11:{O7(a);break}case 12:{O7(a);break}case 13:{O7(a);break}case 14:{O7(a);break}case 25:{O7(a);break}case 24:{O7(a);break}case 26:{Hxa(a);break}case 27:{Hxa(a);break}case 15:{JV(a,c);break}case 16:{Ac(a,b,c);break}case 17:{qc(a,b,c);break}case 18:{No(a,b,c);break}case 19:{uJ(a,b,f[c+8>>2]|0);break}case 20:{HI(a,b,c);break}case 21:{O7(a);break}case 22:{Hxa(a);break}case 23:{cka(a,b);break}default:Ka()}while(0);return}function Aj(a,c){a=a|0;c=+c;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+12|0;k=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=20}else{b:do if(b[m>>0]|0){Axa(i,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[i>>2]|0,77612)|0;l=y;y=0;c:do if(l&1){d=ab(0)|0;pza(i)}else{pza(i);e=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;l=f[e+24>>2]|0;g=e+76|0;d=f[g>>2]|0;do if(bDa(-1,d)|0){Axa(i,e);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[g>>2]=d;n=10;break}d=ab(0)|0;pza(i)}else n=10;while(0);do if((n|0)==10){p=f[(f[j>>2]|0)+32>>2]|0;f[k>>2]=l;y=0;f[i>>2]=f[k>>2];d=Ba(p|0,j|0,i|0,e|0,d&255|0,+c)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0;break c}while(0)}while(0);ww(m);n=20;break a}while(0);ww(m)}while(0);do if((n|0)==20){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function Bj(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+16|0;k=p;n=a+11|0;g=b[n>>0]|0;j=g<<24>>24<0;if(j)h=f[a>>2]|0;else h=a;o=c-h|0;m=e-d|0;do if(!m)l=37;else{if(j){h=f[a>>2]|0;i=f[a+4>>2]|0}else{h=a;i=g&255}if(Eva(d,h,h+i|0)|0){f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;if(m>>>0>4294967279)JZ();if(m>>>0<11){b[k+11>>0]=m;h=k}else{o=m+16&-16;h=QCa(o)|0;f[k>>2]=h;f[k+8>>2]=o|-2147483648;f[k+4>>2]=m}g=h;while(1){if((d|0)==(e|0))break;SBa(g,b[d>>0]|0);d=d+1|0;g=g+1|0}SBa(h+m|0,0);e=b[k+11>>0]|0;o=e<<24>>24<0;n=o?f[k>>2]|0:k;y=0;a=xa(29,a|0,c|0,n|0,n+(o?f[k+4>>2]|0:e&255)|0)|0;e=y;y=0;if(e&1){p=Pa()|0;zta(k);$a(p|0)}else{zta(k);break}}if(j){h=(f[a+8>>2]&2147483647)+-1|0;i=f[a+4>>2]|0}else{h=10;i=g&255}c=i+m|0;if((h-i|0)>>>0>=m>>>0){if(j)g=f[a>>2]|0;else g=a;h=i-o|0;if(h){l=g+o|0;Ita(l+m|0,l,h)|0}}else{dA(a,h,c-h|0,i,o,m);g=f[a>>2]|0}if((b[n>>0]|0)<0)f[a+4>>2]=c;else b[n>>0]=c;SBa(g+c|0,0);g=g+o|0;while(1){if((d|0)==(e|0))break;SBa(g,b[d>>0]|0);d=d+1|0;g=g+1|0}g=b[n>>0]|0;l=37}while(0);if((l|0)==37){if(g<<24>>24<0)a=f[a>>2]|0;a=a+o|0}u=p;return a|0}function Cj(a){a=+a;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+16|0;h=n+12|0;i=n+8|0;l=n;y=0;ja(80,l|0,76684);k=y;y=0;a:do if(k&1){c=ab(0)|0;m=20}else{b:do if(b[l>>0]|0){Axa(h,76684+(f[(f[19171]|0)+-12>>2]|0)|0);y=0;j=ua(46,f[h>>2]|0,77612)|0;k=y;y=0;c:do if(k&1){c=ab(0)|0;pza(h)}else{pza(h);d=76684+(f[(f[19171]|0)+-12>>2]|0)|0;k=f[d+24>>2]|0;e=d+76|0;c=f[e>>2]|0;do if(bDa(-1,c)|0){Axa(h,d);y=0;c=ua(46,f[h>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,g=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,32)|0,o=y,y=0,!(o&1)):0){pza(h);c=g<<24>>24;f[e>>2]=c;m=10;break}c=ab(0)|0;pza(h)}else m=10;while(0);do if((m|0)==10){o=f[(f[j>>2]|0)+32>>2]|0;f[i>>2]=k;y=0;f[h>>2]=f[i>>2];c=Ba(o|0,j|0,h|0,d|0,c&255|0,+a)|0;o=y;y=0;if(o&1){c=ab(0)|0;break}if(c|0)break b;o=76684+(f[(f[19171]|0)+-12>>2]|0)|0;y=0;ja(81,o|0,f[o+16>>2]|5|0);o=y;y=0;if(!(o&1))break b;c=ab(0)|0;break c}while(0)}while(0);ww(l);m=20;break a}while(0);ww(l)}while(0);do if((m|0)==20){Ya(c|0)|0;y=0;ia(351,76684+(f[(f[19171]|0)+-12>>2]|0)|0);o=y;y=0;if(!(o&1)){_a();break}c=Pa()|0;y=0;za(5);o=y;y=0;if(o&1){o=ab(0)|0;lDa(o)}else $a(c|0)}while(0);u=n;return}function Dj(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n;do if(b[a+12>>0]|0){g=Vea(76852,57e3)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[m>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(m);jn(g,e)|0;Yp(g)|0;break}n=Pa()|0;pza(m);$a(n|0)}while(0);l=c+8|0;k=(f[(f[l>>2]|0)+4>>2]|0)==5;Ql(a,l);l=a+4|0;d=f[l>>2]|0;do if(!k){Zq(d,4)|0;k=f[l>>2]|0;j=c+4|0;h=f[j>>2]|0;Ln(k,GU((h|0)==5?0:h)|0)|0;h=a+136|0;FCa(m,f[18813]|0);k=a+140|0;d=f[k>>2]|0;i=a+144|0;if(d>>>0<(f[i>>2]|0)>>>0){f[d>>2]=f[m>>2];f[k>>2]=(f[k>>2]|0)+4}else XC(h,m);$s(a,f[c+12>>2]|0);e=f[k>>2]|0;d=0;while(1){if((d|0)==-1)break;g=d+-1|0;f[k>>2]=e+(g<<2);d=g}g=c+16|0;a:do if(f[g>>2]|0){Zq(f[l>>2]|0,5)|0;FCa(m,f[18813]|0);d=f[k>>2]|0;if(d>>>0<(f[i>>2]|0)>>>0){f[d>>2]=f[m>>2];f[k>>2]=(f[k>>2]|0)+4}else XC(h,m);$s(a,f[g>>2]|0);e=f[k>>2]|0;d=0;while(1){if((d|0)==-1)break a;m=d+-1|0;f[k>>2]=e+(m<<2);d=m}}while(0);Zq(f[l>>2]|0,11)|0;if((f[j>>2]|0)==5)if(!(f[g>>2]|0))Na(59352,54283,632,59366);else{Zq(f[l>>2]|0,0)|0;break}}else Zq(d,0)|0;while(0);u=n;return}function Ej(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+80|0;i=l+68|0;e=l+64|0;j=l+8|0;k=l;Vea(76684,36860)|0;b=f[c+40>>2]|0;a=f[c+36>>2]|0;while(1){if((a|0)==(b|0))break;h=Vea(76684,37323)|0;Vea(K2(h,f[f[a>>2]>>2]|0)|0,37327)|0;a=a+4|0}b=f[c+16>>2]|0;a=f[c+12>>2]|0;while(1){if((a|0)==(b|0))break;if(!(f[(f[a>>2]|0)+12>>2]|0)){h=Vea(76684,37323)|0;Vea(K2(h,f[f[a>>2]>>2]|0)|0,37367)|0}a=a+4|0}b=f[c+28>>2]|0;a=f[c+24>>2]|0;while(1){if((a|0)==(b|0))break;d=f[a>>2]|0;if(!(f[d+8>>2]|0)){f[e>>2]=f[d+4>>2];f[i>>2]=f[e>>2];h=vY(c,i)|0;g=Vea(76684,37323)|0;Vea(K2(g,f[h>>2]|0)|0,37411)|0}a=a+4|0}Hw(j,c);g=f[c+80>>2]|0;e=f[c+76>>2]|0;a:while(1){if((e|0)==(g|0)){m=16;break}h=f[e+8>>2]|0;d=f[e+4>>2]|0;while(1){if((d|0)==(h|0))break;f[k>>2]=f[d>>2];y=0;f[i>>2]=f[k>>2];a=ua(47,c|0,i|0)|0;b=y;y=0;if(b&1)break a;y=0;b=ua(53,76684,37323)|0;n=y;y=0;if(n&1)break a;y=0;a=ua(65,b|0,f[a>>2]|0)|0;n=y;y=0;if(n&1)break a;y=0;ua(53,a|0,37453)|0;n=y;y=0;if(n&1)break a;d=d+4|0}e=e+16|0}if((m|0)==16?(y=0,ua(53,76684,37450)|0,n=y,y=0,!(n&1)):0){r8(j);u=l;return}n=Pa()|0;r8(j);$a(n|0)}function Fj(a){a=a|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+16|0;m=n+8|0;g=n+4|0;l=n;k=f[a>>2]|0;do if((f[k+52>>2]|0)!=(f[k+48>>2]|0)){k=a+12|0;do if(b[k>>0]|0){c=Vea(76852,59554)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[m>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(m);jn(c,e)|0;Yp(c)|0;break}n=Pa()|0;pza(m);$a(n|0)}while(0);j=uW(a,6)|0;i=a+4|0;d=f[i>>2]|0;e=f[a>>2]|0;PDa(g,(f[e+52>>2]|0)-(f[e+48>>2]|0)>>2);Un(d,f[g>>2]|0)|0;d=f[a>>2]|0;e=f[d+52>>2]|0;d=f[d+48>>2]|0;while(1){if((d|0)==(e|0)){c=9;break}if(b[k>>0]|0){g=Vea(76852,59544)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;o=y;y=0;if(o&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;o=y;y=0;if(o&1){c=13;break}pza(m);jn(g,c)|0;Yp(g)|0}o=f[i>>2]|0;Ln(o,GU(f[(f[d>>2]|0)+4>>2]|0)|0)|0;o=f[i>>2]|0;PDa(l,h[(f[d>>2]|0)+12>>0]|0);Un(o,f[l>>2]|0)|0;XT(a,f[(f[d>>2]|0)+8>>2]|0);Zq(f[i>>2]|0,11)|0;d=d+4|0}if((c|0)==9){KE(a,j);break}else if((c|0)==13){o=Pa()|0;pza(m);$a(o|0)}}while(0);u=n;return}function Gj(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;j=i;e=a+3|0;g=a+2|0;h=a+1|0;a:do switch(b[a>>0]|0){case 105:switch(b[h>>0]|0){case 51:{if((b[g>>0]|0)!=50){k=16;break a}if(d){a=1;k=28;break a}a=(b[e>>0]|0)==0;if(a|c){a=a&1;k=28;break a}else break a}case 54:{if((b[g>>0]|0)!=52){k=16;break a}if(d){a=2;k=28;break a}a=(b[e>>0]|0)==0;if(a|c){a=a?2:0;k=28;break a}else break a}default:{k=16;break a}}case 102:switch(b[h>>0]|0){case 51:{if((b[g>>0]|0)!=50){k=16;break a}if(d){a=3;k=28;break a}a=(b[e>>0]|0)==0;if(a|c){a=a?3:0;k=28;break a}else break a}case 54:{if((b[g>>0]|0)!=52){k=16;break a}if(d){a=4;k=28;break a}a=(b[e>>0]|0)==0;if(a|c){a=a?4:0;k=28;break a}else break a}default:{k=16;break a}}default:k=16}while(0);if((k|0)==16?c:0){a=0;k=28}if((k|0)==28){u=i;return a|0}g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(52365)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;a=j}else{d=e+16&-16;y=0;a=la(150,d|0)|0;i=y;y=0;if(i&1){k=25;break}f[j>>2]=a;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(a,52365,e)|0;SBa(a+e|0,0);y=0;ja(583,g|0,j|0);i=y;y=0;if(i&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}a=Pa()|0;zta(j);if(d)k=27}else{y=0;za(3);y=0;k=25}while(0);if((k|0)==25){a=Pa()|0;k=27}if((k|0)==27)Oa(g|0);$a(a|0);return 0}function Hj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+64|0;m=n;Bha(m,c);l=a+80|0;k=f[m>>2]|0;f[m>>2]=0;b=f[l>>2]|0;f[l>>2]=k;if(b|0)$Ja(b);f[m>>2]=0;l=Wta(a)|0;i=a+100|0;k=nV(12)|0;j=d+36|0;hoa(k,a,f[j>>2]|0);xO(m,k);k=a+104|0;b=f[k>>2]|0;do if(b>>>0>=(f[a+108>>2]|0)>>>0){y=0;ja(547,i|0,m|0);h=y;y=0;if(h&1){b=Pa()|0;tva(f[m+4>>2]|0);break}else{b=f[m+4>>2]|0;o=7;break}}else{f[b>>2]=f[m>>2];o=m+4|0;f[b+4>>2]=f[o>>2];f[m>>2]=0;f[o>>2]=0;f[k>>2]=b+8;b=0;o=7}while(0);do if((o|0)==7){tva(b);while(1){h=f[k>>2]|0;b=h;if((h|0)==(f[i>>2]|0))break;g=f[b+-8>>2]|0;h=f[b+-4>>2]|0;if(h){cza(h);b=f[k>>2]|0}e=b+-8|0;while(1){if((b|0)==(e|0))break;f[k>>2]=b+-8;tva(f[b+-4>>2]|0);b=f[k>>2]|0}y=0;ia(f[f[g>>2]>>2]|0,g|0);g=y;y=0;if(g&1){o=17;break}tva(h)}if((o|0)==17){b=Pa()|0;tva(h);break}wxa(f[(f[a+84>>2]|0)+104>>2]|0);Ti(a+16|0,l);Fsa(m,c,u1(d,1)|0);o=b4(f[a+64>>2]|0,m)|0;f[j>>2]=o;oL(m);y=0;ja(548,m+16|0,j|0);o=y;y=0;if(o&1){b=Pa()|0;dfa(m);break}else{dfa(m);u=n;return}}while(0);$a(b|0)}function Ij(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;k=u;u=u+32|0;i=k+20|0;g=k+16|0;j=k+12|0;l=k;do if(b[a+12>>0]|0){d=Vea(76852,56490)|0;d=vj(d,f[a+36>>2]|0)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[i>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,n=y,y=0,!(n&1)):0){pza(i);jn(d,h)|0;Yp(d)|0;break}n=Pa()|0;pza(i);$a(n|0)}while(0);e=Fk(a,Nm(a)|0)|0;f[c+8>>2]=e;d=f[a>>2]|0;f[g>>2]=e;f[i>>2]=f[g>>2];d=J$(d,i)|0;e=c+4|0;do if(!d){d=f[a>>2]|0;f[j>>2]=f[c+8>>2];f[i>>2]=f[j>>2];d=I$(d,i)|0;if(d|0?(f[d+12>>2]|0)==3:0){d=d+20|0;break}h=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;g=uHa(56510)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[l+11>>0]=g;d=l}else{e=g+16&-16;y=0;d=la(150,e|0)|0;n=y;y=0;if(n&1){m=19;break}f[l>>2]=d;f[l+8>>2]=e|-2147483648;f[l+4>>2]=g}Pta(d,56510,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,l|0);n=y;y=0;if(n&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(l);if(e)m=21}else{y=0;za(3);y=0;m=19}while(0);if((m|0)==19){d=Pa()|0;m=21}if((m|0)==21)Oa(h|0);$a(d|0)}else d=d+4|0;while(0);f[e>>2]=f[d>>2];u=k;return}function Jj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+48|0;k=l+24|0;h=l+16|0;g=l+8|0;i=l;d=f[b>>2]|0;c=f[d>>2]|0;j=a+72|0;do if(!(CFa(c)|0)){if(!(aJa(c)|0)){if(hJa(c)|0){b=(Asa(d)|0)+16|0;if(!(f[b>>2]|0)){e=18;break}Na(32626,32558,142,32653)}if(xFa(c)|0){e=Xra(d)|0;b=e+8|0;Bwa(h,b);iua(g,b);b=h+4|0;d=f[g>>2]|0;c=f[g+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[b>>2]|0,d,c)|0))break;g=ppa(h)|0;f[i>>2]=f[g>>2];jz(k,j,i,i);bva(h)}e=e+24|0;jz(k,j,e,e);e=18}else e=18}}else{i=jsa(d)|0;c=i+8|0;if(f[i+12>>2]|0){jz(k,j,c,c);e=18;break}e=NK(a+60|0,c)|0;f[k>>2]=b;uS(k+4|0,a+48|0);c=e+4|0;d=f[c>>2]|0;if(d>>>0>=(f[e+8>>2]|0)>>>0){y=0;ja(498,e|0,k|0);j=y;y=0;if(j&1){l=Pa()|0;Cra(k);$a(l|0)}}else{Ioa(d,k);f[c>>2]=(f[c>>2]|0)+16}Cra(k);e=18}while(0);if((e|0)==18)LT(a+48|0);u=l;return}function Kj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+16|0;p=r+8|0;q=r;d=a+4|0;a:do if(b){if(b>>>0>1073741823){c=zb(8)|0;y=0;ja(76,c|0,70649);r=y;y=0;if(r&1){r=Pa()|0;Oa(c|0);$a(r|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}o=nV(b<<2)|0;c=f[a>>2]|0;f[a>>2]=o;if(c|0)$Ja(c);f[d>>2]=b;c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}e=a+8|0;d=f[e>>2]|0;if(d|0){c=f[d+4>>2]|0;n=b+-1|0;o=(n&b|0)==0;if(!o){if(c>>>0>=b>>>0)c=(c>>>0)%(b>>>0)|0}else c=c&n;f[(f[a>>2]|0)+(c<<2)>>2]=e;l=p+4|0;m=q+4|0;while(1){k=d;b:while(1)while(1){d=f[k>>2]|0;if(!d)break a;e=f[d+4>>2]|0;if(!o){if(e>>>0>=b>>>0)e=(e>>>0)%(b>>>0)|0}else e=e&n;if((e|0)==(c|0)){k=d;continue b}g=(f[a>>2]|0)+(e<<2)|0;if(!(f[g>>2]|0))break b;g=d+8|0;j=d;while(1){h=f[j>>2]|0;if(!h){i=29;break}Aua(p,g);Aua(q,h+8|0);if(!(Gda(f[p>>2]|0,f[l>>2]|0,f[q>>2]|0,f[m>>2]|0)|0)){i=31;break}j=f[j>>2]|0}if((i|0)==29){h=j;g=0}else if((i|0)==31){h=j;g=f[j>>2]|0}f[k>>2]=g;f[h>>2]=f[f[(f[a>>2]|0)+(e<<2)>>2]>>2];f[f[(f[a>>2]|0)+(e<<2)>>2]>>2]=d}f[g>>2]=k;c=e}}}else{c=f[a>>2]|0;f[a>>2]=0;if(c|0)$Ja(c);f[d>>2]=0}while(0);u=r;return}function Lj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;k=l+40|0;i=l+32|0;m=l+16|0;d=l+8|0;g=l;gua(m);h=b+8|0;Bwa(i,h);iua(d,h);h=i+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[h>>2]|0,c,d)|0)){j=3;break}y=0;e=la(164,i|0)|0;j=y;y=0;if(j&1){j=4;break}f[g>>2]=f[e>>2];y=0;Ca(59,k|0,m|0,g|0,g|0);j=y;y=0;if(j&1){j=8;break}bva(i)}do if((j|0)==3){b=b+24|0;y=0;Ca(59,i|0,m|0,b|0,b|0);i=y;y=0;if(!(i&1)){h=m+4|0;b=a+48|0;i=a+76|0;c=f[m>>2]|0;a:while(1){if((c|0)==(h|0))break;f[k>>2]=f[c+16>>2];y=0;d=ua(75,i|0,k|0)|0;g=y;y=0;if(g&1){j=23;break}e=d+4|0;g=f[e>>2]|0;if(g>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(451,d|0,b|0);g=y;y=0;if(g&1){j=23;break}}else{y=0;ja(449,g|0,b|0);g=y;y=0;if(g&1){j=23;break}f[e>>2]=(f[e>>2]|0)+12}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue a}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}if((j|0)==23){c=Pa()|0;break}y=0;ja(450,f[a+44>>2]|0,b|0);k=y;y=0;if(!(k&1)){Cta(m);u=l;return}}c=Pa()|0}else if((j|0)==4){c=Pa()|0;j=9}else if((j|0)==8){c=Pa()|0;j=9}while(0);Cta(m);$a(c|0)}function Mj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;e=j;d=pAa(b)|0;f[e>>2]=d;g=d;a:do if(!d){b=eAa(b)|0;if(b|0){d=f[b+8>>2]|0;e=b+12|0;h=a+8|0;if(!d){fQ(f[(f[h>>2]|0)+16>>2]|0,f[e>>2]|0,c);fQ(f[(f[h>>2]|0)+16>>2]|0,f[b+16>>2]|0,c);break}g=b+16|0;switch(d|0){case 1:{b=f[e>>2]|0;d=pAa(b)|0;if(d){if(csa(d+8|0)|0){b=f[e>>2]|0;i=13}}else i=13;if((i|0)==13)fQ(f[(f[h>>2]|0)+16>>2]|0,b,c);fQ(f[(f[h>>2]|0)+16>>2]|0,f[g>>2]|0,0-c|0);break a}case 10:{b=pAa(f[g>>2]|0)|0;if(!b)break a;h=f[h>>2]|0;i=f[e>>2]|0;c=Y(s4(FR(b)|0)|0,c)|0;fQ(f[h+16>>2]|0,i,c);break a}case 2:{a=f[e>>2]|0;d=pAa(a)|0;b=f[g>>2]|0;if(d|0){i=f[h>>2]|0;c=Y(csa(d+8|0)|0,c)|0;fQ(f[i+16>>2]|0,b,c);break a}b=pAa(b)|0;if(!b)break a;i=f[h>>2]|0;c=Y(csa(b+8|0)|0,c)|0;fQ(f[i+16>>2]|0,a,c);break a}default:break a}}}else{b=csa(d+8|0)|0;if(b|0){d=Y(b,c)|0;b=f[a>>2]|0;f[b>>2]=(f[b>>2]|0)+d;b=f[a+4>>2]|0;d=b+4|0;a=f[d>>2]|0;if((a|0)==(f[b+8>>2]|0)){XC(b,e);break}else{f[a>>2]=g;f[d>>2]=(f[d>>2]|0)+4;break}}}while(0);u=j;return}function Nj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+176|0;j=r+152|0;p=r+16|0;o=r;a:do if((b|0)==5|(b|0)==(c|0))g=1;else{h=p+56|0;k=p+4|0;f[p>>2]=4140;f[h>>2]=4160;dX(p+56|0,k);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=p+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,p|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(122,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(p);g=0;break a}}else q=18;while(0);if((q|0)==18)g=Pa()|0;oia(p);$a(g|0)}while(0);u=r;return g|0}function Oj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;h=n;k=b+8|0;c=f[k>>2]|0;d=pAa(c)|0;l=b+12|0;m=b+16|0;e=a+44|0;a:do if(!d){if((f[c+4>>2]|0)==5){M2(e,f[l>>2]|0);c=f[m>>2]|0;if(c|0)M2(e,c);g1(a,f[k>>2]|0)|0;break}c=f[m>>2]|0;g=c;if(!c){if(!(sGa(f[f[l>>2]>>2]|0)|0))break;m=f[a+36>>2]|0;gKa(m)|0;VBa(h,m);g1(a,Una(f[h>>2]|0,f[k>>2]|0)|0)|0;break}d=f[c>>2]|0;if(sGa(d)|0){f[m>>2]=0;break}e=f[l>>2]|0;c=f[e>>2]|0;if(sGa(c)|0){f[l>>2]=g;f[m>>2]=0;a=f[a+36>>2]|0;gKa(a)|0;VBa(h,a);a=dea(f[h>>2]|0,20,f[k>>2]|0)|0;f[k>>2]=a;break}if((DFa(c)|0?DFa(d)|0:0)?(i=(nsa(e)|0)+8|0,i=f[i>>2]|0,j=(nsa(f[m>>2]|0)|0)+8|0,j=f[j>>2]|0,(f[i+4>>2]|0)==(f[j+4>>2]|0)):0){f[l>>2]=i;f[m>>2]=j;qO(b);m=f[a+36>>2]|0;gKa(m)|0;VBa(h,m);g1(a,Una(f[h>>2]|0,b)|0)|0}}else{k=Y$(d+8|0)|0;do if((k|0)==0&(J|0)==0){c=f[m>>2]|0;if(!c){M2(e,b);_ua(b);break a}else{M2(e,f[l>>2]|0);break}}else{c=f[l>>2]|0;d=f[m>>2]|0;if(d)M2(e,d)}while(0);g1(a,c)|0}while(0);u=n;return}function Pj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+48|0;g=o+20|0;p=o+24|0;l=o+16|0;m=o+12|0;k=o+8|0;n=o+4|0;j=o;f[g>>2]=b;f[p>>2]=p;h=p+4|0;f[h>>2]=p;i=p+8|0;f[i>>2]=0;y=0;ja(584,p|0,g|0);g=y;y=0;if(g&1)b=Pa()|0;else{e=a+4|0;g=a+8|0;a:while(1){if(!(f[i>>2]|0)){c=26;break}f[l>>2]=f[(f[h>>2]|0)+8>>2];u3(p);y=0;b=ua(84,e|0,l|0)|0;d=y;y=0;if(d&1){c=9;break}d=f[b>>2]|0;f[m>>2]=d;b=f[a>>2]|0;if(_qa(b,d)|0){y=0;b=ua(82,b|0,m|0)|0;d=y;y=0;if(d&1){c=10;break}IO(b,f[l>>2]|0)}y=0;b=ua(84,e|0,l|0)|0;d=y;y=0;if(d&1){c=10;break}if(f[b>>2]|0){y=0;b=ua(84,e|0,l|0)|0;d=y;y=0;if(d&1){c=10;break}f[b>>2]=0;c=f[l>>2]|0;b=f[c+16>>2]|0;gKa(b)|0;d=k;while(1){f[d>>2]=b;d=EFa(c)|0;b=f[k>>2]|0;if((b|0)==(d|0))break;d=f[b+8>>2]|0;f[n>>2]=d;d=OO(e,d)|0;if((d|0)!=(g|0)?(f[d+20>>2]|0)!=0:0){y=0;ja(584,p|0,n|0);d=y;y=0;if(d&1){c=22;break a}c=f[l>>2]|0}f[k>>2]=f[b+4>>2];d=j}}}if((c|0)==9)b=Pa()|0;else if((c|0)==10){b=Pa()|0;c=24}else if((c|0)==22){b=Pa()|0;c=24}else if((c|0)==26){Qua(p);u=o;return}}Qua(p);$a(b|0)}function Qj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+176|0;h=q+152|0;o=q+16|0;n=q;a:do if((b|0)==5|(b|0)==(c|0))e=1;else{i=o+56|0;j=o+4|0;f[o>>2]=4140;f[i>>2]=4160;dX(o+56|0,j);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[i>>2]=10004;W6(j);f[j>>2]=6060;g=o+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,j|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(j);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,o|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,k=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,l=ua(62,k|0,c|0)|0,k=y,y=0,!(k&1)):0)?(y=0,m=ua(53,l|0,71123)|0,l=y,y=0,!(l&1)):0)?(y=0,ua(53,m|0,61355)|0,m=y,y=0,!(m&1)):0)?(y=0,ja(118,n|0,j|0),m=y,y=0,!(m&1)):0){y=0;ya(121,a|0,n|0,d|0);m=y;y=0;if(m&1){e=Pa()|0;zta(n);break}else{zta(n);oia(o);e=0;break a}}else p=18;while(0);if((p|0)==18)e=Pa()|0;oia(o);$a(e|0)}while(0);u=q;return e|0}function Rj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;i=o+156|0;p=o+8|0;m=o+144|0;n=o;a:do if((b|0)==2){g=p+56|0;h=p+4|0;f[p>>2]=4140;f[g>>2]=4160;dX(p+56|0,h);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[g>>2]=10004;W6(h);f[h>>2]=6060;e=p+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[e+(b<<2)>>2]=0;b=b+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[i+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,h|0,i|0);b=y;y=0;if(b&1){q=Pa()|0;zta(i);zta(e);vwa(h);oCa(g);$a(q|0)}zta(i);y=0;b=ua(62,p|0,2)|0;g=y;y=0;do if(((((!(g&1)?(y=0,j=ua(53,b|0,60638)|0,g=y,y=0,!(g&1)):0)?(y=0,k=ua(62,j|0,2)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,d|0)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,h|0),l=y,y=0,!(l&1)):0){f[n>>2]=f[c>>2];y=0;f[i>>2]=f[n>>2];ya(113,a|0,m|0,i|0);n=y;y=0;if(n&1){b=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)b=Pa()|0;oia(p);$a(b|0)}while(0);u=o;return}function Sj(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=u;u=u+112|0;b=i+48|0;c=i+100|0;l=i+32|0;k=i+16|0;m=i;d=i+104|0;g=i+88|0;e=i+80|0;j=i+64|0;h=i+68|0;PDa(c,a);FCa(d,f[18779]|0);o=gia(c,0,1)|0;n=gia(c,0,1)|0;uAa(l,1);f[b>>2]=f[l>>2];f[b+4>>2]=f[l+4>>2];f[b+8>>2]=f[l+8>>2];f[b+12>>2]=f[l+12>>2];a=FO(c,b)|0;l=f[c>>2]|0;a=s5(l,9,o,s5(l,1,n,a)|0)|0;uAa(k,31);f[b>>2]=f[k>>2];f[b+4>>2]=f[k+4>>2];f[b+8>>2]=f[k+8>>2];f[b+12>>2]=f[k+12>>2];k=FO(c,b)|0;a=s5(l,1,k,dea(l,0,a)|0)|0;k=dea(l,20,gia(c,0,1)|0)|0;uAa(m,32);f[b>>2]=f[m>>2];f[b+4>>2]=f[m+4>>2];f[b+8>>2]=f[m+8>>2];f[b+12>>2]=f[m+12>>2];a=j9(l,k,FO(c,b)|0,a)|0;dCa(j,19346);f[b>>2]=f[j>>2];qta(e,b,1);f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;y=0;ja(56,g|0,1);j=y;y=0;if(j&1){o=Pa()|0;a3(g);$a(o|0)}kR(g,e,e+8|0);f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;y=0;f[b>>2]=f[d>>2];a=ka(39,c|0,b|0,g|0,1,h|0,a|0)|0;o=y;y=0;if(o&1){o=Pa()|0;a3(h);a3(g);$a(o|0)}else{a3(h);a3(g);u=i;return a|0}return 0}function Tj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+176|0;h=q+152|0;o=q+16|0;n=q;a:do if((b|0)==5|(b|0)==(c|0))e=1;else{i=o+56|0;j=o+4|0;f[o>>2]=4140;f[i>>2]=4160;dX(o+56|0,j);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[i>>2]=10004;W6(j);f[j>>2]=6060;g=o+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,j|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(j);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,o|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,k=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,l=ua(62,k|0,c|0)|0,k=y,y=0,!(k&1)):0)?(y=0,m=ua(53,l|0,71123)|0,l=y,y=0,!(l&1)):0)?(y=0,ua(53,m|0,61355)|0,m=y,y=0,!(m&1)):0)?(y=0,ja(118,n|0,j|0),m=y,y=0,!(m&1)):0){y=0;ya(120,a|0,n|0,d|0);m=y;y=0;if(m&1){e=Pa()|0;zta(n);break}else{zta(n);oia(o);e=0;break a}}else p=18;while(0);if((p|0)==18)e=Pa()|0;oia(o);$a(e|0)}while(0);u=q;return e|0}function Uj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+176|0;i=r+152|0;p=r+16|0;o=r;a:do if((b|0)==(c|0))g=1;else{j=p+56|0;k=p+4|0;f[p>>2]=4140;f[j>>2]=4160;dX(p+56|0,k);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[j>>2]=10004;W6(k);f[k>>2]=6060;h=p+36|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[h+(g<<2)>>2]=0;g=g+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,i|0);g=y;y=0;if(g&1){r=Pa()|0;zta(i);zta(h);vwa(k);oCa(j);$a(r|0)}zta(i);y=0;g=ua(62,p|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(117,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(p);g=0;break a}}else q=18;while(0);if((q|0)==18)g=Pa()|0;oia(p);$a(g|0)}while(0);u=r;return g|0}function Vj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(128,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function Wj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(129,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function Xj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(127,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function Yj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(131,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function Zj(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+48|0;g=n+16|0;m=n+32|0;h=n;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,21608)|0;e=0;while(1){if((e|0)==(d|0))break;if(e|0)Vea(76684,72307)|0;j=Vea(76684,21645)|0;k=EN(74820,c+(e<<2)|0)|0;Vea(vj(j,f[k>>2]|0)|0,72132)|0;e=e+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;Vea(vj(Vea(76684,21656)|0,d)|0,19943)|0;Vea(76684,19947)|0}b[a+60>>0]=1;i=cua(a+144|0)|0;uAa(h,0);f[g>>2]=f[h>>2];f[g+4>>2]=f[h+4>>2];f[g+8>>2]=f[h+8>>2];f[g+12>>2]=f[h+12>>2];Yqa(m,J5(i,g)|0);g=m+8|0;h=m+12|0;i=m+4|0;e=0;while(1){if(e>>>0>=d>>>0){l=12;break}j=f[c+(e<<2)>>2]|0;k=f[g>>2]|0;if((k|0)==(f[h>>2]|0)){y=0;ja(68,i|0,j|0);k=y;y=0;if(k&1)break}else{f[k>>2]=f[j>>2];f[g>>2]=(f[g>>2]|0)+4}e=e+1|0}do if((l|0)==12){e=a+80|0;g=f[e>>2]|0;if((g|0)==(f[a+84>>2]|0)){y=0;ja(67,a+76|0,m|0);l=y;y=0;if(l&1)break}else{y=0;ja(66,g|0,m|0);l=y;y=0;if(l&1)break;f[e>>2]=(f[e>>2]|0)+16}e=a+72|0;y=0;oa(39,e|0,d|0,0)|0;d=y;y=0;if(!(d&1)){f[a+68>>2]=f[e>>2];Kza(m);u=n;return}}while(0);n=Pa()|0;Kza(m);$a(n|0)}function _j(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(126,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function $j(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;j=k;i=a+12|0;do if(b[i>>0]|0){e=Vea(76852,58579)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(j);jn(e,d)|0;Yp(e)|0;break}k=Pa()|0;pza(j);$a(k|0)}while(0);g=f[a+124>>2]|0;h=a+4|0;a=f[a+120>>2]|0;while(1){if((a|0)==(g|0)){c=8;break}if(!(b[i>>0]|0)){e=a;c=a+8|0}else{c=Vea(76852,58588)|0;c=Vea(wj(c,b[f[a>>2]>>0]|0)|0,72153)|0;c=Vea(wj(c,b[(f[a>>2]|0)+1>>0]|0)|0,55636)|0;e=f[h>>2]|0;e=Vea(vj(c,(f[e+4>>2]|0)-(f[e>>2]|0)|0)|0,58603)|0;c=a+8|0;e=vj(e,f[c>>2]|0)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;l=y;y=0;if(l&1){c=13;break}y=0;d=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0;l=y;y=0;if(l&1){c=13;break}pza(j);jn(e,d)|0;Yp(e)|0;e=a}d=f[h>>2]|0;Cs(d,f[c>>2]|0,(f[d+4>>2]|0)-(f[d>>2]|0)|0);d=a+4|0;c=0;while(1){if(c>>>0>=(f[d>>2]|0)>>>0)break;Exa(f[h>>2]|0,b[(f[e>>2]|0)+c>>0]|0)|0;c=c+1|0}a=a+12|0}if((c|0)==8){u=k;return}else if((c|0)==13){l=Pa()|0;pza(j);$a(l|0)}}function ak(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;j=p+152|0;q=p+16|0;o=p;a:do if(!((b|0)==5|(b|0)==(c|0))){h=q+56|0;k=q+4|0;f[q>>2]=4140;f[h>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[h>>2]=10004;W6(k);f[k>>2]=6060;i=q+36|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[j+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,j|0);g=y;y=0;if(g&1){r=Pa()|0;zta(j);zta(i);vwa(k);oCa(h);$a(r|0)}zta(j);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(116,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function bk(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;g=f[a>>2]|0;do if(g){h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;h=1;break}else{h=(f[a>>2]|0)==0;break}}else h=1;while(0);if(c){g=f[c+12>>2]|0;if((g|0)==(f[c+16>>2]|0))g=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0))if(h){i=c;j=15}else{g=6;j=35}else j=13}else j=13;if((j|0)==13)if(h){g=6;j=35}else{i=0;j=15}do if((j|0)==15){g=f[a>>2]|0;h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if((Rb[f[(f[e>>2]|0)+36>>2]&127](e,g&255,0)|0)<<24>>24==37){g=f[a>>2]|0;h=g+12|0;c=f[h>>2]|0;if((c|0)==(f[g+16>>2]|0)){Ob[f[(f[g>>2]|0)+40>>2]&255](g)|0;g=f[a>>2]|0;if(!g)h=1;else j=22}else{f[h>>2]=c+1;j=22}do if((j|0)==22){h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;h=1;break}else{h=(f[a>>2]|0)==0;break}}while(0);if(i|0){g=f[i+12>>2]|0;if((g|0)==(f[i+16>>2]|0))g=Ob[f[(f[i>>2]|0)+36>>2]&255](i)|0;else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0))if(h)break;else{g=2;j=35;break}}if(h){g=2;j=35}}else{g=4;j=35}}while(0);if((j|0)==35)f[d>>2]=f[d>>2]|g;return}function ck(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;n=o;a:do if(!((b|0)==5|(b|0)==(c|0))){i=p+56|0;j=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,j);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(j);f[j>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,j|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(j);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,k=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,l=ua(62,k|0,c|0)|0,k=y,y=0,!(k&1)):0)?(y=0,m=ua(53,l|0,71123)|0,l=y,y=0,!(l&1)):0)?(y=0,ua(53,m|0,61653)|0,m=y,y=0,!(m&1)):0)?(y=0,ja(118,n|0,j|0),m=y,y=0,!(m&1)):0){y=0;ya(124,a|0,n|0,d|0);m=y;y=0;if(m&1){e=Pa()|0;zta(n);break}else{zta(n);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function dk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;i=p+152|0;q=p+16|0;o=p;a:do if((b|0)!=(c|0)){j=q+56|0;k=q+4|0;f[q>>2]=4140;f[j>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[j>>2]=10004;W6(k);f[k>>2]=6060;h=q+36|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[h+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,i|0);g=y;y=0;if(g&1){r=Pa()|0;zta(i);zta(h);vwa(k);oCa(j);$a(r|0)}zta(i);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(132,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function ek(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;i=p+152|0;q=p+16|0;o=p;a:do if((b|0)!=(c|0)){j=q+56|0;k=q+4|0;f[q>>2]=4140;f[j>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[j>>2]=10004;W6(k);f[k>>2]=6060;h=q+36|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[h+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,i|0);g=y;y=0;if(g&1){r=Pa()|0;zta(i);zta(h);vwa(k);oCa(j);$a(r|0)}zta(i);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(114,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function fk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;i=p+152|0;q=p+16|0;o=p;a:do if((b|0)!=(c|0)){j=q+56|0;k=q+4|0;f[q>>2]=4140;f[j>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[j>>2]=10004;W6(k);f[k>>2]=6060;h=q+36|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[h+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,i|0);g=y;y=0;if(g&1){r=Pa()|0;zta(i);zta(h);vwa(k);oCa(j);$a(r|0)}zta(i);y=0;g=ua(62,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(62,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(116,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function gk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;n=o;a:do if((b|4|0)!=5){i=p+56|0;j=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,j);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(j);f[j>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,j|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(j);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,k=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,l=ua(62,k|0,1)|0,k=y,y=0,!(k&1)):0)?(y=0,m=ua(53,l|0,71123)|0,l=y,y=0,!(l&1)):0)?(y=0,ua(53,m|0,d|0)|0,m=y,y=0,!(m&1)):0)?(y=0,ja(118,n|0,j|0),m=y,y=0,!(m&1)):0){y=0;ya(130,a|0,n|0,c|0);m=y;y=0;if(m&1){e=Pa()|0;zta(n);break}else{zta(n);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function hk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+176|0;i=p+152|0;q=p+16|0;o=p;a:do if((b|0)!=(c|0)){j=q+56|0;k=q+4|0;f[q>>2]=4140;f[j>>2]=4160;dX(q+56|0,k);f[q+128>>2]=0;f[q+132>>2]=-1;f[q>>2]=9984;f[j>>2]=10004;W6(k);f[k>>2]=6060;h=q+36|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[h+(g<<2)>>2]=0;g=g+1|0}f[q+48>>2]=0;f[q+52>>2]=16;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=0;while(1){if((g|0)==3)break;f[i+(g<<2)>>2]=0;g=g+1|0}y=0;ja(117,k|0,i|0);g=y;y=0;if(g&1){r=Pa()|0;zta(i);zta(h);vwa(k);oCa(j);$a(r|0)}zta(i);y=0;g=ua(68,q|0,b|0)|0;j=y;y=0;do if(((((!(j&1)?(y=0,l=ua(53,g|0,60713)|0,j=y,y=0,!(j&1)):0)?(y=0,m=ua(68,l|0,c|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,71123)|0,m=y,y=0,!(m&1)):0)?(y=0,ua(53,n|0,e|0)|0,e=y,y=0,!(e&1)):0)?(y=0,ja(118,o|0,k|0),e=y,y=0,!(e&1)):0){y=0;ya(117,a|0,o|0,d|0);e=y;y=0;if(e&1){g=Pa()|0;zta(o);break}else{zta(o);oia(q);break a}}else r=18;while(0);if((r|0)==18)g=Pa()|0;oia(q);$a(g|0)}while(0);u=p;return}function ik(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;m=o;a:do if((b|0)!=(c|0)){i=p+56|0;n=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,n);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(n);f[n>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,n|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(n);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,j=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(62,j|0,c|0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,62237)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,n|0),n=y,y=0,!(n&1)):0){y=0;ya(128,a|0,m|0,d|0);n=y;y=0;if(n&1){e=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function jk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;m=o;a:do if((b|0)!=(c|0)){i=p+56|0;n=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,n);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(n);f[n>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,n|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(n);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,j=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(62,j|0,c|0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,61684)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,n|0),n=y,y=0,!(n&1)):0){y=0;ya(124,a|0,m|0,d|0);n=y;y=0;if(n&1){e=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function kk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;m=o;a:do if((b|0)!=(c|0)){i=p+56|0;n=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,n);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(n);f[n>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,n|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(n);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,j=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(62,j|0,c|0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,63347)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,n|0),n=y,y=0,!(n&1)):0){y=0;ya(133,a|0,m|0,d|0);n=y;y=0;if(n&1){e=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function lk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;m=o;a:do if((b|0)!=(c|0)){i=p+56|0;n=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,n);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(n);f[n>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,n|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(n);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,j=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(62,j|0,c|0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,63402)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,n|0),n=y,y=0,!(n&1)):0){y=0;ya(135,a|0,m|0,d|0);n=y;y=0;if(n&1){e=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function mk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+176|0;h=o+152|0;p=o+16|0;m=o;a:do if((b|0)!=(c|0)){i=p+56|0;n=p+4|0;f[p>>2]=4140;f[i>>2]=4160;dX(p+56|0,n);f[p+128>>2]=0;f[p+132>>2]=-1;f[p>>2]=9984;f[i>>2]=10004;W6(n);f[n>>2]=6060;g=p+36|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}f[p+48>>2]=0;f[p+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}y=0;ja(117,n|0,h|0);e=y;y=0;if(e&1){q=Pa()|0;zta(h);zta(g);vwa(n);oCa(i);$a(q|0)}zta(h);y=0;e=ua(62,p|0,b|0)|0;i=y;y=0;do if(((((!(i&1)?(y=0,j=ua(53,e|0,60713)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(62,j|0,c|0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,62640)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,n|0),n=y,y=0,!(n&1)):0){y=0;ya(131,a|0,m|0,d|0);n=y;y=0;if(n&1){e=Pa()|0;zta(m);break}else{zta(m);oia(p);break a}}else q=18;while(0);if((q|0)==18)e=Pa()|0;oia(p);$a(e|0)}while(0);u=o;return}function nk(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+16|0;l=p;o=a+64|0;a:do if(!(f[o>>2]|0))c=0;else{j=a+68|0;d=f[j>>2]|0;if(!d){p=zb(4)|0;fJa(p);ub(p|0,5864,326)}k=a+92|0;c=f[k>>2]|0;m=a+32|0;n=a+72|0;if(!(c&16)){if(c&8|0){g=a+80|0;i=f[g+4>>2]|0;h=l;f[h>>2]=f[g>>2];f[h+4>>2]=i;h=a+36|0;i=a+40|0;do if(!(b[a+98>>0]|0)){e=Ob[f[(f[d>>2]|0)+24>>2]&255](d)|0;g=f[h>>2]|0;c=(f[i>>2]|0)-g|0;if((e|0)>0){d=0;c=(Y((f[a+16>>2]|0)-(f[a+12>>2]|0)|0,e)|0)+c|0;break}d=f[a+12>>2]|0;if((d|0)==(f[a+16>>2]|0))d=0;else{j=f[j>>2]|0;j=Yb[f[(f[j>>2]|0)+32>>2]&31](j,l,f[m>>2]|0,g,d-(f[a+8>>2]|0)|0)|0;d=1;c=c-j+(f[h>>2]|0)-(f[m>>2]|0)|0}}else{d=0;c=(f[a+16>>2]|0)-(f[a+12>>2]|0)|0}while(0);if(KBa(f[o>>2]|0,0-c|0,1)|0){c=-1;break}if(d){j=l;l=f[j+4>>2]|0;o=n;f[o>>2]=f[j>>2];f[o+4>>2]=l}o=f[m>>2]|0;f[i>>2]=o;f[h>>2]=o;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[k>>2]=0}}else{if((f[a+24>>2]|0)!=(f[a+20>>2]|0)?(Xb[f[(f[a>>2]|0)+52>>2]&255](a,-1)|0)==-1:0){c=-1;break}c=a+52|0;b:while(1){a=f[j>>2]|0;d=f[m>>2]|0;d=Yb[f[(f[a>>2]|0)+20>>2]&31](a,n,d,d+(f[c>>2]|0)|0,l)|0;a=f[m>>2]|0;k=(f[l>>2]|0)-a|0;if((Jca(a,1,k,f[o>>2]|0)|0)!=(k|0)){c=-1;break a}switch(d|0){case 2:{c=-1;break a}case 1:break;default:break b}}if(ZP(f[o>>2]|0)|0){c=-1;break}}c=0}while(0);u=p;return c|0}function ok(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;h=b+8|0;e=f[h>>2]|0;if(!e)b=a;else{b=xAa(a)|0;if((b|0)!=0?!(pJa(f[b+8>>2]|0)|0):0)j=c;else{b=kaa(f[c>>2]|0,a)|0;j=c;e=f[h>>2]|0}a=e;while(1){if(!a)break;e=$ta(a)|0;if(!e){i=16;break}g=e+24|0;e=f[e+20>>2]|0;a:while(1){if((e|0)==(g|0))break;a=f[e+20>>2]|0;k=gl(f[e+16>>2]|0)|0;f[b+8>>2]=k;Do(b);b=kaa(f[j>>2]|0,b)|0;AW(b+12|0,Rb[f[(f[a>>2]|0)+8>>2]&127](a,c,d)|0);Do(b);a=f[e+4>>2]|0;if(!a)while(1){a=f[e+8>>2]|0;if((f[a>>2]|0)==(e|0)){e=a;continue a}else e=a}else e=a;while(1){a=f[e>>2]|0;if(!a)break;else e=a}}a=f[(f[h>>2]|0)+8>>2]|0;f[h>>2]=a}b:do if((i|0)==16){e=vua(a)|0;if(e|0){k=gl(f[(f[e+20>>2]|0)+100>>2]|0)|0;f[b+8>>2]=k;break}a=Nua(a)|0;if(!a)Na(33423,33266,80,33428);g=gKa(f[a+32>>2]|0)|0;if(!g)Na(33452,33266,81,33428);e=f[a+40>>2]|0;if((g|0)==1){k=gl(f[(f[e+8>>2]|0)+100>>2]|0)|0;f[b+8>>2]=k;break}e=gKa(e)|0;g=EFa(a+24|0)|0;while(1){a=e;if((a|0)==(g|0))break b;k=gl(f[(f[e+8>>2]|0)+100>>2]|0)|0;f[b+8>>2]=k;Do(b);k=kaa(f[j>>2]|0,b)|0;Do(k);b=k;e=f[a+4>>2]|0}}while(0);Do(b)}return b|0}function pk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+176|0;g=n+152|0;o=n+16|0;l=n;a:do if((b|4|0)!=5){h=o+56|0;m=o+4|0;f[o>>2]=4140;f[h>>2]=4160;dX(o+56|0,m);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[h>>2]=10004;W6(m);f[m>>2]=6060;e=o+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[e+(d<<2)>>2]=0;d=d+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[g+(d<<2)>>2]=0;d=d+1|0}y=0;ja(117,m|0,g|0);d=y;y=0;if(d&1){p=Pa()|0;zta(g);zta(e);vwa(m);oCa(h);$a(p|0)}zta(g);y=0;d=ua(62,o|0,b|0)|0;h=y;y=0;do if(((((!(h&1)?(y=0,i=ua(53,d|0,60713)|0,h=y,y=0,!(h&1)):0)?(y=0,j=ua(62,i|0,1)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,61759)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,m|0),m=y,y=0,!(m&1)):0){y=0;ya(125,a|0,l|0,c|0);m=y;y=0;if(m&1){d=Pa()|0;zta(l);break}else{zta(l);oia(o);break a}}else p=18;while(0);if((p|0)==18)d=Pa()|0;oia(o);$a(d|0)}while(0);u=n;return}function qk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+176|0;g=n+152|0;o=n+16|0;l=n;a:do if((b|4|0)!=5){h=o+56|0;m=o+4|0;f[o>>2]=4140;f[h>>2]=4160;dX(o+56|0,m);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[h>>2]=10004;W6(m);f[m>>2]=6060;e=o+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[e+(d<<2)>>2]=0;d=d+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[g+(d<<2)>>2]=0;d=d+1|0}y=0;ja(117,m|0,g|0);d=y;y=0;if(d&1){p=Pa()|0;zta(g);zta(e);vwa(m);oCa(h);$a(p|0)}zta(g);y=0;d=ua(62,o|0,b|0)|0;h=y;y=0;do if(((((!(h&1)?(y=0,i=ua(53,d|0,60713)|0,h=y,y=0,!(h&1)):0)?(y=0,j=ua(62,i|0,1)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,63462)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,m|0),m=y,y=0,!(m&1)):0){y=0;ya(136,a|0,l|0,c|0);m=y;y=0;if(m&1){d=Pa()|0;zta(l);break}else{zta(l);oia(o);break a}}else p=18;while(0);if((p|0)==18)d=Pa()|0;oia(o);$a(d|0)}while(0);u=n;return}function rk(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+32|0;m=p+16|0;n=p+12|0;o=p;d=ec(a,c)|0;f[m>>2]=d;l=c+36|0;c=f[l>>2]|0;if(c){d=f[c>>2]|0;f[n>>2]=d;g=f[a>>2]|0;h=g+132|0;i=a+64|0;if(!(Ht(i,n)|0)){j=g+136|0;k=((f[j>>2]|0)-(f[h>>2]|0)|0)/12|0;c=gKa(d)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;e=uHa(c)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[o+11>>0]=e;d=o}else{q=e+16&-16;d=nV(q)|0;f[o>>2]=d;f[o+8>>2]=q|-2147483648;f[o+4>>2]=e}Pta(d,c,e)|0;SBa(d+e|0,0);d=f[j>>2]|0;if(d>>>0>=(f[g+140>>2]|0)>>>0){y=0;ja(1996,h|0,o|0);q=y;y=0;if(q&1){q=Pa()|0;zta(o);$a(q|0)}}else{f[d>>2]=f[o>>2];f[d+4>>2]=f[o+4>>2];f[d+8>>2]=f[o+8>>2];d=0;while(1){if((d|0)==3)break;f[o+(d<<2)>>2]=0;d=d+1|0}f[j>>2]=(f[j>>2]|0)+12}zta(o);q=dj(i,n)|0;f[q>>2]=k}n=dj(i,n)|0;n=f[n>>2]|0;q=f[l>>2]|0;o=f[q+4>>2]|0;q=f[q+8>>2]|0;d=Xi((f[a+84>>2]|0)+64|0,m)|0;f[d>>2]=n;f[d+4>>2]=o;f[d+8>>2]=q;d=f[m>>2]|0}u=p;return d|0}function sk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+16|0;l=q+8|0;m=q;p=b+8|0;do if((((pJa(f[p>>2]|0)|0?(gKa(f[b+16>>2]|0)|0)==1:0)?(n=bga(b+12|0,0)|0,n=xAa(f[n>>2]|0)|0,n|0):0)?(k=n+8|0,pJa(f[k>>2]|0)|0):0)?(o=n+4|0,(f[o>>2]|0)==(f[b+4>>2]|0)):0){b=wK(a+44|0,p)|0;h=b+4|0;i=l+4|0;j=m+4|0;b=f[b>>2]|0;a:while(1){if((b|0)==(h|0)){b=8;break}c=f[b+16>>2]|0;d=wAa(c)|0;if(!d){e=mAa(c)|0;if(!e){b=20;break}c=e+8|0;Bwa(l,c);iua(m,c);c=f[m>>2]|0;d=f[j>>2]|0;while(1){if(!(Cpa(f[l>>2]|0,f[i>>2]|0,c,d)|0))break;g=ppa(l)|0;if(bDa(f[g>>2]|0,f[p>>2]|0)|0)f[g>>2]=f[k>>2];bva(l)}c=e+24|0;if(bDa(f[c>>2]|0,f[p>>2]|0)|0)f[c>>2]=f[k>>2]}else{c=d+8|0;if(bDa(f[c>>2]|0,f[p>>2]|0)|0)f[c>>2]=f[k>>2]}c=f[b+4>>2]|0;if(!c)while(1){c=f[b+8>>2]|0;if((f[c>>2]|0)==(b|0)){b=c;continue a}else b=c}else b=c;while(1){c=f[b>>2]|0;if(!c)break;else b=c}}if((b|0)==8){Ela(n,f[o>>2]|0);jva(f[a+16>>2]|0,n)|0;break}else if((b|0)==20)Ka()}while(0);RF(a,p);u=q;return}function tk(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+16|0;m=n+12|0;g=n+8|0;k=n+4|0;l=n;j=f[a>>2]|0;do if((f[j+40>>2]|0)!=(f[j+36>>2]|0)){j=a+12|0;do if(b[j>>0]|0){c=Vea(76852,59618)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[m>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(m);jn(c,e)|0;Yp(c)|0;break}n=Pa()|0;pza(m);$a(n|0)}while(0);i=uW(a,3)|0;h=a+4|0;d=f[h>>2]|0;e=f[a>>2]|0;PDa(g,(f[e+40>>2]|0)-(f[e+36>>2]|0)>>2);Un(d,f[g>>2]|0)|0;d=f[a>>2]|0;e=f[d+40>>2]|0;d=f[d+36>>2]|0;while(1){if((d|0)==(e|0)){c=9;break}if(b[j>>0]|0){g=Vea(76852,59544)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;o=y;y=0;if(o&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;o=y;y=0;if(o&1){c=13;break}pza(m);jn(g,c)|0;Yp(g)|0}o=f[h>>2]|0;f[l>>2]=f[(f[d>>2]|0)+32>>2];f[m>>2]=f[l>>2];PDa(k,xP(a,m)|0);Un(o,f[k>>2]|0)|0;d=d+4|0}if((c|0)==9){KE(a,i);break}else if((c|0)==13){o=Pa()|0;pza(m);$a(o|0)}}while(0);u=n;return}function uk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+176|0;h=n+152|0;o=n+16|0;m=n;a:do if(!b){g=o+56|0;i=o+4|0;f[o>>2]=4140;f[g>>2]=4160;dX(o+56|0,i);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[g>>2]=10004;W6(i);f[i>>2]=6060;e=o+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[e+(b<<2)>>2]=0;b=b+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[h+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,i|0,h|0);b=y;y=0;if(b&1){p=Pa()|0;zta(h);zta(e);vwa(i);oCa(g);$a(p|0)}zta(h);y=0;b=ua(62,o|0,0)|0;h=y;y=0;do if(((((!(h&1)?(y=0,j=ua(53,b|0,60638)|0,h=y,y=0,!(h&1)):0)?(y=0,k=ua(62,j|0,0)|0,j=y,y=0,!(j&1)):0)?(y=0,l=ua(53,k|0,71123)|0,k=y,y=0,!(k&1)):0)?(y=0,ua(53,l|0,d|0)|0,l=y,y=0,!(l&1)):0)?(y=0,ja(118,m|0,i|0),l=y,y=0,!(l&1)):0){y=0;ya(133,a|0,m|0,c|0);l=y;y=0;if(l&1){b=Pa()|0;zta(m);break}else{zta(m);oia(o);break a}}else p=18;while(0);if((p|0)==18)b=Pa()|0;oia(o);$a(b|0)}while(0);u=n;return}function vk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;l=n;g=a+8|0;m=g+3|0;e=b[m>>0]|0;h=e<<24>>24<0;if(h){i=(f[g>>2]&2147483647)+-1|0;k=f[a+4>>2]|0}else{i=1;k=e&255}j=d-c>>2;do if(j|0){if(h){g=f[a>>2]|0;h=f[a+4>>2]|0}else{g=a;h=e&255}if(!(Eva(c,g,g+(h<<2)|0)|0)){g=k+j|0;if((i-k|0)>>>0<j>>>0){Zu(a,i,g-i|0,k,k);e=b[m>>0]|0}if(e<<24>>24<0)e=f[a>>2]|0;else e=a;e=e+(k<<2)|0;while(1){if((c|0)==(d|0))break;FCa(e,f[c>>2]|0);e=e+4|0;c=c+4|0}FCa(e,0);if((b[m>>0]|0)<0){f[a+4>>2]=g;break}else{b[m>>0]=g;break}}f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;if(j>>>0>1073741807)JZ();do if(j>>>0>=2){e=j+4&-4;if(e>>>0<=1073741823){m=nV(e<<2)|0;f[l>>2]=m;f[l+8>>2]=e|-2147483648;f[l+4>>2]=j;e=m;break}c=zb(8)|0;y=0;ja(76,c|0,70649);n=y;y=0;if(n&1){n=Pa()|0;Oa(c|0);$a(n|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}else{b[l+8+3>>0]=j;e=l}while(0);while(1){if((c|0)==(d|0))break;FCa(e,f[c>>2]|0);c=c+4|0;e=e+4|0}FCa(e,0);d=b[l+8+3>>0]|0;m=d<<24>>24<0;y=0;oa(72,a|0,(m?f[l>>2]|0:l)|0,(m?f[l+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){n=Pa()|0;jta(l);$a(n|0)}else{jta(l);break}}while(0);u=n;return a|0}function wk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+192|0;i=m+92|0;j=m;g=f[c>>2]|0;do if(g){if((e|0)!=0?(f[e>>2]|0)!=0:0){h=a+40|0;Ot(i,uya(f[h>>2]|0)|0,g);g=f[e>>2]|0;if(g|0){h=uya(f[h>>2]|0)|0;y=0;ya(75,j|0,h|0,g|0);h=y;y=0;if(h&1){m=Pa()|0;hT(i);$a(m|0)}h=oh(j,i)|0;hT(j);if(h){hT(i);g=d;break}}hT(i);g=f[c>>2]|0}g=xAa(g)|0;if(((g|0)!=0?!(pJa(f[g+8>>2]|0)|0):0)?(l=g+12|0,k=g+16|0,(gKa(f[k>>2]|0)|0)>>>0>1):0){e=b+4|0;if((f[e>>2]|0)==0?aE(g)|0:0){g=d;break}h=efa(l)|0;h=f[h>>2]|0;j=f[h+4>>2]|0;if((j|0)!=5?(f[g+4>>2]|0)==(j|0):0){f[c>>2]=h;if(!d){d=efa(l)|0;f[d>>2]=b;Ela(g,f[e>>2]|0);jva(f[a+16>>2]|0,g)|0;break}e=d+12|0;c=efa(e)|0;if((f[c>>2]|0)!=(b|0))Na(43083,43110,313,43137);Fga(e);g=0;while(1){if(g>>>0>=((gKa(f[k>>2]|0)|0)+-1|0)>>>0)break;c=bga(l,g)|0;AW(e,f[c>>2]|0);g=g+1|0}AW(e,b);g=d}else g=d}else g=d}else g=d;while(0);u=m;return g|0}function xk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+176|0;g=m+152|0;n=m+16|0;l=m;a:do if(!b){e=n+56|0;h=n+4|0;f[n>>2]=4140;f[e>>2]=4160;dX(n+56|0,h);f[n+128>>2]=0;f[n+132>>2]=-1;f[n>>2]=9984;f[e>>2]=10004;W6(h);f[h>>2]=6060;d=n+36|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[d+(b<<2)>>2]=0;b=b+1|0}f[n+48>>2]=0;f[n+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[g+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,h|0,g|0);b=y;y=0;if(b&1){o=Pa()|0;zta(g);zta(d);vwa(h);oCa(e);$a(o|0)}zta(g);y=0;b=ua(62,n|0,0)|0;g=y;y=0;do if(((((!(g&1)?(y=0,i=ua(53,b|0,60638)|0,g=y,y=0,!(g&1)):0)?(y=0,j=ua(62,i|0,0)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,61127)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,h|0),k=y,y=0,!(k&1)):0){y=0;ya(117,a|0,l|0,c|0);k=y;y=0;if(k&1){b=Pa()|0;zta(l);break}else{zta(l);oia(n);break a}}else o=18;while(0);if((o|0)==18)b=Pa()|0;oia(n);$a(b|0)}while(0);u=m;return}function yk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+176|0;g=n+152|0;o=n+16|0;l=n;a:do if((b|0)!=1){h=o+56|0;m=o+4|0;f[o>>2]=4140;f[h>>2]=4160;dX(o+56|0,m);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[h>>2]=10004;W6(m);f[m>>2]=6060;e=o+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[e+(d<<2)>>2]=0;d=d+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[g+(d<<2)>>2]=0;d=d+1|0}y=0;ja(117,m|0,g|0);d=y;y=0;if(d&1){p=Pa()|0;zta(g);zta(e);vwa(m);oCa(h);$a(p|0)}zta(g);y=0;d=ua(68,o|0,b|0)|0;h=y;y=0;do if(((((!(h&1)?(y=0,i=ua(53,d|0,60713)|0,h=y,y=0,!(h&1)):0)?(y=0,j=ua(68,i|0,1)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,63430)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,m|0),m=y,y=0,!(m&1)):0){y=0;ya(136,a|0,l|0,c|0);m=y;y=0;if(m&1){d=Pa()|0;zta(l);break}else{zta(l);oia(o);break a}}else p=18;while(0);if((p|0)==18)d=Pa()|0;oia(o);$a(d|0)}while(0);u=n;return}function zk(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;k=l;h=e&1;g=a+4|0;a:do if(e)switch(d<<24>>24){case 25:{d=1;e=1;i=18;break a}case 26:{d=2;e=1;i=18;break a}case 23:{d=4;e=1;i=18;break a}case 27:{d=1;e=2;i=18;break a}case 28:{d=2;e=2;i=18;break a}case 29:{d=4;e=2;i=18;break a}case 24:{d=8;e=2;i=18;break a}default:{d=0;break a}}else switch(d<<24>>24){case 59:{d=2;e=1;i=18;break a}case 58:{d=1;e=1;i=18;break a}case 54:{d=4;e=1;i=18;break a}case 60:{d=1;e=2;i=18;break a}case 61:{d=2;e=2;i=18;break a}case 62:{d=4;e=2;i=18;break a}case 55:{d=8;e=2;i=18;break a}case 56:{d=4;e=3;i=18;break a}case 57:{d=8;e=4;i=18;break a}default:{d=0;break a}}while(0);if((i|0)==18){g=bua(f[g>>2]|0)|0;b[g+8>>0]=d;f[g+32>>2]=e;b[g+20>>0]=h;do if(b[a+12>>0]|0){d=Vea(76852,56315)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[k>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,j=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,i=y,y=0,!(i&1)):0){pza(k);jn(d,j)|0;Yp(d)|0;break}l=Pa()|0;pza(k);$a(l|0)}while(0);B6(a,g+16|0,g+12|0);d=Jg(a)|0;f[g+28>>2]=d;d=Jg(a)|0;f[g+24>>2]=d;r4(g);f[c>>2]=g;d=1}u=l;return d|0}function Ak(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+176|0;g=m+152|0;n=m+16|0;l=m;a:do if(!b){e=n+56|0;h=n+4|0;f[n>>2]=4140;f[e>>2]=4160;dX(n+56|0,h);f[n+128>>2]=0;f[n+132>>2]=-1;f[n>>2]=9984;f[e>>2]=10004;W6(h);f[h>>2]=6060;d=n+36|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[d+(b<<2)>>2]=0;b=b+1|0}f[n+48>>2]=0;f[n+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[g+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,h|0,g|0);b=y;y=0;if(b&1){o=Pa()|0;zta(g);zta(d);vwa(h);oCa(e);$a(o|0)}zta(g);y=0;b=ua(62,n|0,0)|0;g=y;y=0;do if(((((!(g&1)?(y=0,i=ua(53,b|0,60638)|0,g=y,y=0,!(g&1)):0)?(y=0,j=ua(62,i|0,0)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,62701)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,h|0),k=y,y=0,!(k&1)):0){y=0;ya(132,a|0,l|0,c|0);k=y;y=0;if(k&1){b=Pa()|0;zta(l);break}else{zta(l);oia(n);break a}}else o=18;while(0);if((o|0)==18)b=Pa()|0;oia(n);$a(b|0)}while(0);u=m;return}function Bk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+176|0;g=m+152|0;n=m+16|0;l=m;a:do if(!b){e=n+56|0;h=n+4|0;f[n>>2]=4140;f[e>>2]=4160;dX(n+56|0,h);f[n+128>>2]=0;f[n+132>>2]=-1;f[n>>2]=9984;f[e>>2]=10004;W6(h);f[h>>2]=6060;d=n+36|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[d+(b<<2)>>2]=0;b=b+1|0}f[n+48>>2]=0;f[n+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[g+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,h|0,g|0);b=y;y=0;if(b&1){o=Pa()|0;zta(g);zta(d);vwa(h);oCa(e);$a(o|0)}zta(g);y=0;b=ua(62,n|0,0)|0;g=y;y=0;do if(((((!(g&1)?(y=0,i=ua(53,b|0,60638)|0,g=y,y=0,!(g&1)):0)?(y=0,j=ua(62,i|0,0)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,62020)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,h|0),k=y,y=0,!(k&1)):0){y=0;ya(126,a|0,l|0,c|0);k=y;y=0;if(k&1){b=Pa()|0;zta(l);break}else{zta(l);oia(n);break a}}else o=18;while(0);if((o|0)==18)b=Pa()|0;oia(n);$a(b|0)}while(0);u=m;return}function Ck(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+176|0;g=m+152|0;n=m+16|0;l=m;a:do if(!b){e=n+56|0;h=n+4|0;f[n>>2]=4140;f[e>>2]=4160;dX(n+56|0,h);f[n+128>>2]=0;f[n+132>>2]=-1;f[n>>2]=9984;f[e>>2]=10004;W6(h);f[h>>2]=6060;d=n+36|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[d+(b<<2)>>2]=0;b=b+1|0}f[n+48>>2]=0;f[n+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[g+(b<<2)>>2]=0;b=b+1|0}y=0;ja(117,h|0,g|0);b=y;y=0;if(b&1){o=Pa()|0;zta(g);zta(d);vwa(h);oCa(e);$a(o|0)}zta(g);y=0;b=ua(62,n|0,0)|0;g=y;y=0;do if(((((!(g&1)?(y=0,i=ua(53,b|0,60638)|0,g=y,y=0,!(g&1)):0)?(y=0,j=ua(62,i|0,0)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,60544)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,h|0),k=y,y=0,!(k&1)):0){y=0;ya(114,a|0,l|0,c|0);k=y;y=0;if(k&1){b=Pa()|0;zta(l);break}else{zta(l);oia(n);break a}}else o=18;while(0);if((o|0)==18)b=Pa()|0;oia(n);$a(b|0)}while(0);u=m;return}function Dk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+176|0;g=n+152|0;o=n+16|0;l=n;a:do if(b|0){h=o+56|0;m=o+4|0;f[o>>2]=4140;f[h>>2]=4160;dX(o+56|0,m);f[o+128>>2]=0;f[o+132>>2]=-1;f[o>>2]=9984;f[h>>2]=10004;W6(m);f[m>>2]=6060;e=o+36|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[e+(d<<2)>>2]=0;d=d+1|0}f[o+48>>2]=0;f[o+52>>2]=16;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[g+(d<<2)>>2]=0;d=d+1|0}y=0;ja(117,m|0,g|0);d=y;y=0;if(d&1){p=Pa()|0;zta(g);zta(e);vwa(m);oCa(h);$a(p|0)}zta(g);y=0;d=ua(68,o|0,b|0)|0;h=y;y=0;do if(((((!(h&1)?(y=0,i=ua(53,d|0,60713)|0,h=y,y=0,!(h&1)):0)?(y=0,j=ua(68,i|0,0)|0,i=y,y=0,!(i&1)):0)?(y=0,k=ua(53,j|0,71123)|0,j=y,y=0,!(j&1)):0)?(y=0,ua(53,k|0,60718)|0,k=y,y=0,!(k&1)):0)?(y=0,ja(118,l|0,m|0),m=y,y=0,!(m&1)):0){y=0;ya(115,a|0,l|0,c|0);m=y;y=0;if(m&1){d=Pa()|0;zta(l);break}else{zta(l);oia(o);break a}}else p=18;while(0);if((p|0)==18)d=Pa()|0;oia(o);$a(d|0)}while(0);u=n;return}function Ek(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,g=0,h=0;e=u;u=u+48|0;d=e+16|0;g=e+32|0;h=e;VBa(g,a);f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];LI(h,d);f[d>>2]=f[h>>2];f[d+4>>2]=f[h+4>>2];f[d+8>>2]=f[h+8>>2];f[d+12>>2]=f[h+12>>2];d=FO(g,d)|0;a:do if(f[18711]|0){a=qN(d)|0;switch(f[b>>2]|0){case 1:{Vea(wj(Vea(vj(Vea(76684,20507)|0,a)|0,20765)|0,f[b+8>>2]|0)|0,20817)|0;break a}case 2:{h=b+8|0;Vea(oj(Vea(vj(Vea(76684,20507)|0,a)|0,20822)|0,f[h>>2]|0,f[h+4>>2]|0)|0,20817)|0;break a}case 3:{Vea(vj(Vea(76684,20507)|0,a)|0,20874)|0;c=+n[b+8>>2];if(((JAa(c)|0)&2147483647)>>>0>2139095040)Vea(76684,65388)|0;else Cj(c);Vea(76684,20817)|0;break a}case 4:{Vea(vj(Vea(76684,20507)|0,a)|0,20928)|0;c=+p[b+8>>3];h=Mra(c)|0;g=J&2147483647;if(g>>>0>2146435072|(g|0)==2146435072&h>>>0>0)Vea(76684,65388)|0;else Aj(76684,c)|0;Vea(76684,20817)|0;break a}default:Ka()}}while(0);u=e;return d|0}function Fk(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;l=u;u=u+32|0;i=l+16|0;j=l+12|0;g=l+20|0;m=l;f[j>>2]=c;k=a+180|0;h=a+188|0;if(!(f[h>>2]|0)){c=f[a>>2]|0;d=f[c+16>>2]|0;c=f[c+12>>2]|0;while(1){if((c|0)==(d|0))break;e=f[c>>2]|0;if((f[e+12>>2]|0)==3){f[g>>2]=f[h>>2];o=yM(k,g)|0;f[o>>2]=f[e>>2]}c=c+4|0}c=0;while(1){o=f[a>>2]|0;d=f[o+48>>2]|0;if(c>>>0>=(f[o+52>>2]|0)-d>>2>>>0)break;f[g>>2]=f[h>>2];e=f[d+(c<<2)>>2]|0;o=yM(k,g)|0;f[o>>2]=f[e>>2];c=c+1|0}c=f[j>>2]|0}do if((c|0)==-1){dCa(i,57185);c=f[i>>2]|0}else{if(QZ(k,c)|0){c=yM(k,j)|0;c=f[c>>2]|0;f[i>>2]=c;break}a=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(57190)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[m+11>>0]=e;c=m}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){n=22;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(c,57190,e)|0;SBa(c+e|0,0);y=0;ja(583,a|0,m|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(d)n=24}else{y=0;za(3);y=0;n=22}while(0);if((n|0)==22){c=Pa()|0;n=24}if((n|0)==24)Oa(a|0);$a(c|0)}while(0);u=l;return c|0}function Gk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=f[a>>2]|0;do if(e){g=f[e+12>>2]|0;if((g|0)==(f[e+16>>2]|0))e=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else e=gKa(f[g>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(b){e=f[b+12>>2]|0;if((e|0)==(f[b+16>>2]|0))e=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0))if(g){h=b;i=15}else{e=6;i=35}else i=13}else i=13;if((i|0)==13)if(g){e=6;i=35}else{h=0;i=15}do if((i|0)==15){e=f[a>>2]|0;g=f[e+12>>2]|0;if((g|0)==(f[e+16>>2]|0))e=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else e=gKa(f[g>>2]|0)|0;if((Rb[f[(f[d>>2]|0)+52>>2]&127](d,e,0)|0)<<24>>24==37){e=f[a>>2]|0;g=e+12|0;b=f[g>>2]|0;if((b|0)==(f[e+16>>2]|0)){Ob[f[(f[e>>2]|0)+40>>2]&255](e)|0;e=f[a>>2]|0;if(!e)g=1;else i=22}else{f[g>>2]=b+4;i=22}do if((i|0)==22){g=f[e+12>>2]|0;if((g|0)==(f[e+16>>2]|0))e=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else e=gKa(f[g>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}while(0);if(h|0){e=f[h+12>>2]|0;if((e|0)==(f[h+16>>2]|0))e=Ob[f[(f[h>>2]|0)+36>>2]&255](h)|0;else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0))if(g)break;else{e=2;i=35;break}}if(g){e=2;i=35}}else{e=4;i=35}}while(0);if((i|0)==35)f[c>>2]=f[c>>2]|e;return}function Hk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+32|0;g=n+8|0;h=n+4|0;k=n;l=n+12|0;f[g>>2]=a;f[h>>2]=b;f[k>>2]=e;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,22554)|0;a=0;while(1){if((a|0)==(d|0))break;if(a|0)Vea(76684,72307)|0;vj(76684,f[c+(a<<2)>>2]|0)|0;a=a+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;b=Vea(76684,22587)|0;a=EN(74832,g)|0;a=Vea(vj(b,f[a>>2]|0)|0,22477)|0;b=EN(74832,h)|0;b=Vea(vj(Vea(vj(a,f[b>>2]|0)|0,22634)|0,d)|0,20179)|0;a=EN(74808,k)|0;Vea(vj(b,f[a>>2]|0)|0,20144)|0;Vea(76684,19947)|0;a=f[g>>2]|0;b=f[h>>2]|0}f[l>>2]=0;g=l+4|0;f[g>>2]=0;f[l+8>>2]=0;h=l+8|0;e=0;while(1){if(e>>>0>=d>>>0){m=13;break}i=c+(e<<2)|0;j=f[g>>2]|0;if((j|0)==(f[h>>2]|0)){y=0;ja(72,l|0,i|0);j=y;y=0;if(j&1)break}else{f[j>>2]=f[i>>2];f[g>>2]=j+4}e=e+1|0}if((m|0)==13?(y=0,Ca(50,a|0,b|0,l|0,f[k>>2]|0),m=y,y=0,!(m&1)):0){E4(l);u=n;return}n=Pa()|0;E4(l);$a(n|0)}function Ik(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;h=l;i=a+4|0;j=a+8|0;k=(f[j>>2]|0)-(f[i>>2]|0)>>2;g=((k*25|0)>>>0)/100|0;e=((k*50|0)>>>0)/100|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;y=0;ja(1934,h|0,e|0);d=y;y=0;a:do if(!(d&1)){b=0;while(1){if(b>>>0>=e>>>0){b=0;break}m=f[a>>2]|0;d=KU(a)|0;d=f[(f[i>>2]|0)+(d<<2)>>2]|0;c=KU(a)|0;y=0;c=oa(65,m|0,d|0,f[(f[i>>2]|0)+(c<<2)>>2]|0)|0;d=y;y=0;if(d&1)break a;m=(f[h>>2]|0)+(b<<2)|0;d=f[m>>2]|0;f[m>>2]=c;if(d|0){E4(d);$Ja(d)}b=b+1|0}while(1){if(b>>>0>=e>>>0)break;c=(f[i>>2]|0)+(b+g<<2)|0;m=(f[h>>2]|0)+(b<<2)|0;d=f[c>>2]|0;f[c>>2]=f[m>>2];f[m>>2]=d;b=b+1|0}b=g+e|0;while(1){if(b>>>0>=k>>>0)break;y=0;c=la(197,f[a>>2]|0)|0;m=y;y=0;if(m&1)break a;m=(f[i>>2]|0)+(b<<2)|0;d=f[m>>2]|0;f[m>>2]=c;if(d|0){E4(d);$Ja(d)}b=b+1|0}BV(f[a+4>>2]|0,f[j>>2]|0);mL(h);u=l;return}while(0);m=Pa()|0;mL(h);$a(m|0)}function Jk(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;t=u;u=u+16|0;g=t+8|0;l=t+4|0;m=t;n=a+64|0;if(!(f[n>>2]|0))d=-1;else{nI(a);q=a+20|0;r=f[q>>2]|0;o=a+28|0;p=f[o>>2]|0;k=bDa(c,-1)|0;d=a+24|0;e=f[d>>2]|0;if(k)g=r;else{if(!e){f[d>>2]=g;f[q>>2]=g;f[o>>2]=g+1;e=g}g=oHa(c)|0;b[e>>0]=g;e=(f[d>>2]|0)+1|0;f[d>>2]=e;g=f[q>>2]|0}a:do if((e|0)==(g|0))s=24;else{do if(!(b[a+98>>0]|0)){i=a+32|0;f[l>>2]=f[i>>2];j=a+68|0;k=a+72|0;h=a+52|0;while(1){a=f[j>>2]|0;if(!a){s=12;break}v=f[i>>2]|0;e=bc[f[(f[a>>2]|0)+12>>2]&15](a,k,g,e,m,v,v+(f[h>>2]|0)|0,l)|0;g=f[q>>2]|0;if((f[m>>2]|0)==(g|0))break;if((e|0)==3){s=15;break}if((e|1|0)!=1)break;a=f[i>>2]|0;v=(f[l>>2]|0)-a|0;if((Jca(a,1,v,f[n>>2]|0)|0)!=(v|0))break;if((e|0)!=1){s=22;break}e=f[m>>2]|0;v=f[d>>2]|0;f[q>>2]=e;f[o>>2]=v;g=e;e=g+(v-e)|0;f[d>>2]=e}if((s|0)==12){v=zb(4)|0;fJa(v);ub(v|0,5864,326)}else if((s|0)==15){v=(f[d>>2]|0)-g|0;if((Jca(g,1,v,f[n>>2]|0)|0)==(v|0))break}else if((s|0)==22)break;d=-1;break a}else{v=e-g|0;if((Jca(g,1,v,f[n>>2]|0)|0)!=(v|0)){d=-1;break a}}while(0);f[d>>2]=r;f[q>>2]=r;f[o>>2]=p;s=24}while(0);if((s|0)==24)d=Awa(c)|0}u=t;return d|0}function Kk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+48|0;q=t+32|0;r=t;s=t+24|0;n=a+4|0;l=c+92|0;Y1(n,(gKa(f[l>>2]|0)|0)<<16);m=f[c+104>>2]|0;p=d+4|0;h=f[c+100>>2]|0;while(1){if((h|0)==(m|0))break;q0(s,p);YX(r,s,f[h>>2]|0);i=csa(r)|0;$la(q,i,((i|0)<0)<<31>>31);i=gKa(f[q>>2]|0)|0;j=h+4|0;k=h+8|0;e=f[k>>2]|0;d=f[j>>2]|0;if((e+i-d|0)>>>0>(gKa(f[l>>2]|0)|0)<<16>>>0){o=5;break}else g=0;while(1){if((g|0)==(e-d|0))break;Fwa(f[n>>2]|0,i+g|0,b[d+g>>0]|0);g=g+1|0;d=f[j>>2]|0;e=f[k>>2]|0}h=h+16|0}if((o|0)==5)Na(24949,25027,99,25049);a=a+16|0;l=c+68|0;vN(a,gKa(f[l>>2]|0)|0);m=f[c+80>>2]|0;h=f[c+76>>2]|0;while(1){if((h|0)==(m|0)){o=10;break}q0(s,p);YX(r,s,f[h>>2]|0);i=csa(r)|0;$la(q,i,((i|0)<0)<<31>>31);i=gKa(f[q>>2]|0)|0;j=h+4|0;k=h+8|0;d=f[k>>2]|0;e=f[j>>2]|0;if(((d-e>>2)+i|0)>>>0>(gKa(f[l>>2]|0)|0)>>>0){o=12;break}else g=0;while(1){if((g|0)==(d-e>>2|0))break;f[(f[a>>2]|0)+(i+g<<2)>>2]=f[e+(g<<2)>>2];g=g+1|0;d=f[k>>2]|0;e=f[j>>2]|0}h=h+16|0}if((o|0)==10){u=t;return}else if((o|0)==12)Na(25054,25027,108,25049)}function Lk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+32|0;g=t+28|0;e=t+24|0;h=t+8|0;l=t;d=f[a>>2]|0;r=b+8|0;s=a+8|0;do if(Xha(d,b)|0){tI(h,f[b+4>>2]|0,d,f[s>>2]|0,f[a+4>>2]|0);y=0;d=oa(40,a|0,f[b+12>>2]|0,h|0)|0;e=y;y=0;if((((((((!(e&1)?(y=0,c=la(157,d|0)|0,e=y,y=0,!(e&1)):0)?(y=0,i=ua(56,c|0,1)|0,e=y,y=0,!(e&1)):0)?(j=gKa(f[i>>2]|0)|0,y=0,k=ua(59,f[s>>2]|0,f[r>>2]|0)|0,s=y,y=0,!(s&1)):0)?(f[l>>2]=k,y=0,f[g>>2]=f[l>>2],m=la(158,g|0)|0,s=y,y=0,!(s&1)):0)?(y=0,n=la(151,m|0)|0,s=y,y=0,!(s&1)):0)?(o=f[18859]|0,y=0,p=la(154,h|0)|0,s=y,y=0,!(s&1)):0)?(y=0,q=oa(41,n|0,o|0,p|0)|0,s=y,y=0,!(s&1)):0)?(s=gKa(q)|0,y=0,ua(49,j|0,s|0)|0,s=y,y=0,!(s&1)):0){iX(h);break}t=Pa()|0;iX(h);$a(t|0)}else{s=Cea(f[s>>2]|0,f[r>>2]|0)|0;f[e>>2]=s;f[g>>2]=f[e>>2];s=Bea(Yma(g)|0)|0;c=f[18859]|0;c=Nq(s,c,AT(a,f[b+12>>2]|0,f[18680]|0)|0)|0}while(0);u=t;return c|0}function Mk(a,c,e){a=a|0;c=c|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;j=s;b[a>>0]=0;g=c+(f[(f[c>>2]|0)+-12>>2]|0)|0;h=f[g+16>>2]|0;if(!h){g=f[g+72>>2]|0;if(g|0)Yp(g)|0;do if(!e?(i=c+(f[(f[c>>2]|0)+-12>>2]|0)|0,f[i+4>>2]&4096|0):0){Axa(j,i);y=0;g=ua(46,f[j>>2]|0,77556)|0;q=y;y=0;if(q&1){s=Pa()|0;pza(j);$a(s|0)}pza(j);p=f[c+(f[(f[c>>2]|0)+-12>>2]|0)+24>>2]|0;k=g+8|0;l=p;m=(p|0)==0;n=l+12|0;o=l+16|0;q=p;while(1){if(m)break;g=f[n>>2]|0;if((g|0)==(f[o>>2]|0))g=Ob[f[(f[q>>2]|0)+36>>2]&255](l)|0;else g=oHa(b[g>>0]|0)|0;j=bDa(g,-1)|0;h=j?0:p;if(j)break;e=h;i=e+12|0;g=f[i>>2]|0;j=e+16|0;if((g|0)==(f[j>>2]|0))g=Ob[f[(f[h>>2]|0)+36>>2]&255](e)|0;else g=oHa(b[g>>0]|0)|0;if((g&255)<<24>>24<=-1){r=22;break}if(!(d[(f[k>>2]|0)+(g<<24>>24<<1)>>1]&8192)){r=22;break}g=f[i>>2]|0;if((g|0)==(f[j>>2]|0)){Ob[f[(f[h>>2]|0)+40>>2]&255](e)|0;continue}else{f[i>>2]=g+1;continue}}if((r|0)==22){g=f[i>>2]|0;if((g|0)==(f[j>>2]|0))g=Ob[f[(f[q>>2]|0)+36>>2]&255](e)|0;else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0))break}r=c+(f[(f[c>>2]|0)+-12>>2]|0)|0;QH(r,f[r+16>>2]|6)}while(0);b[a>>0]=(f[c+(f[(f[c>>2]|0)+-12>>2]|0)+16>>2]|0)==0&1}else QH(g,h|4);u=s;return}function Nk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+48|0;i=k+24|0;j=k+12|0;l=k;a:do if(((a|0)!=(c|0)?(b[a>>0]|0)==46:0)?(h=d+4|0,(f[d>>2]|0)!=(f[h>>2]|0)):0){f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;g=c-a|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[l+11>>0]=g;e=l}else{d=g+16&-16;e=QCa(d)|0;f[l>>2]=e;f[l+8>>2]=d|-2147483648;f[l+4>>2]=g}d=e;while(1){if((a|0)==(c|0))break;SBa(d,b[a>>0]|0);a=a+1|0;d=d+1|0}SBa(e+g|0,0);y=0;oa(77,l|0,0,72080)|0;g=y;y=0;if(g&1)a=Pa()|0;else{f[j>>2]=f[l>>2];f[j+4>>2]=f[l+4>>2];f[j+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,j|0,72083)|0;g=y;y=0;do if(!(g&1)){f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}g=b[i+11>>0]|0;e=g<<24>>24<0;y=0;oa(73,(f[h>>2]|0)+-24|0,(e?f[i>>2]|0:i)|0,(e?f[i+4>>2]|0:g&255)|0)|0;h=y;y=0;if(h&1){a=Pa()|0;zta(i);break}else{zta(i);zta(j);zta(l);a=c;break a}}else a=Pa()|0;while(0);zta(j)}zta(l);$a(a|0)}while(0);u=k;return a|0}function Ok(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=a+8|0;i=l+3|0;g=b[i>>0]|0;h=g<<24>>24<0;if(h){m=f[a+4>>2]|0;e=(f[l>>2]&2147483647)+-1|0}else{m=g&255;e=1}c=m>>>0<2;j=c?1:(m+4&-4)+-1|0;a:do if((j|0)!=(e|0)){do if(c){c=f[a>>2]|0;if(h){d=c;g=0;e=a;k=24}else{awa(a,c,(g&255)+1|0);$Ja(c);k=27}}else{d=j+1|0;c=d>>>0>1073741823;b:do if(j>>>0>e>>>0){if(!c){c=nV(d<<2)|0;break}c=zb(8)|0;y=0;ja(76,c|0,70649);m=y;y=0;if(m&1){m=Pa()|0;Oa(c|0);$a(m|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}else{do if(c){c=zb(8)|0;y=0;ja(76,c|0,70649);m=y;y=0;if(m&1){m=ab(0)|0;Oa(c|0);c=m;break}else{f[c>>2]=18216;y=0;ya(79,c|0,5816,318);y=0;k=17;break}}else{y=0;c=la(150,d<<2|0)|0;k=y;y=0;if(k&1)k=17;else break b}while(0);if((k|0)==17)c=ab(0)|0;Ya(c|0)|0;_a();break a}while(0);if(h){d=f[a>>2]|0;g=1;e=c;k=24;break}else{awa(c,a,(g&255)+1|0);e=c;c=a+4|0;k=26;break}}while(0);if((k|0)==24){c=a+4|0;awa(e,d,(f[c>>2]|0)+1|0);$Ja(d);if(g){d=j+1|0;k=26}else k=27}if((k|0)==26){f[l>>2]=d|-2147483648;f[c>>2]=m;f[a>>2]=e;break}else if((k|0)==27){b[i>>0]=m;break}}while(0);return}function Pk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+16|0;g=t;l=f[d+8>>2]|0;f[g>>2]=l;g=$z(g,4)|0;r=d+4|0;f[r>>2]=g;q=c+4|0;k=f[q>>2]|0;p=(k|0)==0;a:do if(!p){m=k+-1|0;o=(m&k|0)==0;if(!o){if(g>>>0>=k>>>0)g=(g>>>0)%(k>>>0)|0}else g=m&g;e=f[(f[c>>2]|0)+(g<<2)>>2]|0;if(!e)s=14;else while(1){e=f[e>>2]|0;if(!e){s=14;break a}h=f[e+4>>2]|0;if(!o){if(h>>>0>=k>>>0)h=(h>>>0)%(k>>>0)|0}else h=h&m;if((h|0)!=(g|0)){s=14;break a}if((f[e+8>>2]|0)==(l|0)){g=0;break}}}else{g=0;s=14}while(0);if((s|0)==14){l=c+12|0;i=+(((f[l>>2]|0)+1|0)>>>0);j=+n[c+16>>2];do if(p|i>+(k>>>0)*j){h=(k>>>0<3|(k+-1&k|0)!=0)&1|k<<1;g=~~+X(+(i/j))>>>0;aB(c,h>>>0<g>>>0?g:h);h=f[q>>2]|0;g=f[r>>2]|0;e=h+-1|0;if(!(e&h)){k=h;g=e&g;break}if(g>>>0<h>>>0)k=h;else{k=h;g=(g>>>0)%(h>>>0)|0}}while(0);e=f[(f[c>>2]|0)+(g<<2)>>2]|0;if(!e){e=c+8|0;f[d>>2]=f[e>>2];f[e>>2]=d;f[(f[c>>2]|0)+(g<<2)>>2]=e;e=f[d>>2]|0;if(e|0){e=f[e+4>>2]|0;g=k+-1|0;if(g&k){if(e>>>0>=k>>>0)e=(e>>>0)%(k>>>0)|0}else e=e&g;e=(f[c>>2]|0)+(e<<2)|0;s=27}}else{f[d>>2]=f[e>>2];s=27}if((s|0)==27)f[e>>2]=d;f[l>>2]=(f[l>>2]|0)+1;g=1;e=d}f[a>>2]=e;b[a+4>>0]=g;u=t;return}function Qk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=b+12|0;j=b+16|0;b=f[j>>2]|0;a:do if(gKa(b)|0){k=a+80|0;i=0;b:while(1){if(i>>>0<(b+-1|0)>>>0){h=0;c=i}else break a;while(1){c=c+1|0;if(c>>>0>=b>>>0)break;b=bga(l,c)|0;b=lR(f[b>>2]|0,f[k>>2]|0)|0;if(!b){d=bga(l,c)|0;d=xAa(f[d>>2]|0)|0;if(!d)break;e=d+12|0;b=d+16|0;if(!(gKa(f[b>>2]|0)|0))break;g=bga(e,0)|0;g=lR(f[g>>2]|0,f[k>>2]|0)|0;if(!g)break;m=bga(l,i)|0;if(h|(Mg(a,g,f[m>>2]|0)|0))b=1;else{if((gKa(f[b>>2]|0)|0)!=1)break b;nn(a,bga(l,i)|0,g);m=bga(l,i)|0;m=f[m>>2]|0;b=bga(e,0)|0;f[b>>2]=m;b=bga(l,i)|0;f[b>>2]=d;b=bga(l,c)|0;f[b>>2]=g;_ua(g);b=0}}else{m=bga(l,i)|0;if(h|(Mg(a,b,f[m>>2]|0)|0))b=1;else{nn(a,bga(l,i)|0,b);_ua(b);b=0}}h=b;b=f[j>>2]|0}i=c;b=f[j>>2]|0}Na(36231,36256,124,36293)}while(0);return}function Rk(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+48|0;n=m+16|0;i=m+12|0;l=m+8|0;j=m+4|0;k=m;a:do if(!(f[e+4>>2]&1)){f[l>>2]=-1;o=f[(f[a>>2]|0)+16>>2]|0;f[j>>2]=f[c>>2];f[k>>2]=f[d>>2];f[i>>2]=f[j>>2];f[n>>2]=f[k>>2];i=Nb[o&63](a,i,n,e,g,l)|0;f[c>>2]=i;switch(f[l>>2]|0){case 0:{b[h>>0]=0;break}case 1:{b[h>>0]=1;break}default:{b[h>>0]=1;f[g>>2]=4}}}else{Axa(n,e);y=0;j=ua(46,f[n>>2]|0,77588)|0;o=y;y=0;do if(!(o&1)){pza(n);Axa(n,e);y=0;i=ua(46,f[n>>2]|0,77596)|0;o=y;y=0;if(o&1){i=Pa()|0;pza(n);break}pza(n);y=0;ja(f[(f[i>>2]|0)+24>>2]|0,n|0,i|0);o=y;y=0;if(o&1){i=Pa()|0;break}y=0;ja(f[(f[i>>2]|0)+28>>2]|0,n+12|0,i|0);o=y;y=0;if(o&1){i=Pa()|0;jta(n);break}a=n+24|0;y=0;i=fa(8,c|0,f[d>>2]|0,n|0,a|0,j|0,g|0,1)|0;o=y;y=0;if(o&1){i=Pa()|0;j=J;do{a=a+-12|0;jta(a)}while((a|0)!=(n|0));break}else{b[h>>0]=(i|0)==(n|0)&1;i=f[c>>2]|0;do{a=a+-12|0;jta(a)}while((a|0)!=(n|0));break a}}else{i=Pa()|0;pza(n)}while(0);$a(i|0)}while(0);u=m;return i|0}function Sk(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+48|0;n=m+16|0;i=m+12|0;l=m+8|0;j=m+4|0;k=m;a:do if(!(f[e+4>>2]&1)){f[l>>2]=-1;o=f[(f[a>>2]|0)+16>>2]|0;f[j>>2]=f[c>>2];f[k>>2]=f[d>>2];f[i>>2]=f[j>>2];f[n>>2]=f[k>>2];i=Nb[o&63](a,i,n,e,g,l)|0;f[c>>2]=i;switch(f[l>>2]|0){case 0:{b[h>>0]=0;break}case 1:{b[h>>0]=1;break}default:{b[h>>0]=1;f[g>>2]=4}}}else{Axa(n,e);y=0;j=ua(46,f[n>>2]|0,77556)|0;o=y;y=0;do if(!(o&1)){pza(n);Axa(n,e);y=0;i=ua(46,f[n>>2]|0,77572)|0;o=y;y=0;if(o&1){i=Pa()|0;pza(n);break}pza(n);y=0;ja(f[(f[i>>2]|0)+24>>2]|0,n|0,i|0);o=y;y=0;if(o&1){i=Pa()|0;break}y=0;ja(f[(f[i>>2]|0)+28>>2]|0,n+12|0,i|0);o=y;y=0;if(o&1){i=Pa()|0;zta(n);break}a=n+24|0;y=0;i=fa(7,c|0,f[d>>2]|0,n|0,a|0,j|0,g|0,1)|0;o=y;y=0;if(o&1){i=Pa()|0;j=J;do{a=a+-12|0;zta(a)}while((a|0)!=(n|0));break}else{b[h>>0]=(i|0)==(n|0)&1;i=f[c>>2]|0;do{a=a+-12|0;zta(a)}while((a|0)!=(n|0));break a}}else{i=Pa()|0;pza(n)}while(0);$a(i|0)}while(0);u=m;return i|0}function Tk(a){a=a|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+16|0;e=k+12|0;l=k;i=a+8|0;c=f[i>>2]|0;j=a+36|0;d=f[j>>2]|0;if($ua(c,d)|0){do if(b[a+12>>0]|0){c=Vea(76852,54372)|0;c=Vea(wj(c,h[(f[f[i>>2]>>2]|0)+(f[j>>2]|0)>>0]|0)|0,54382)|0;c=Vea(vj(c,f[j>>2]|0)|0,72083)|0;Axa(e,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[e>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(e);jn(c,g)|0;Yp(c)|0;d=f[j>>2]|0;c=f[i>>2]|0;break}m=Pa()|0;pza(e);$a(m|0)}while(0);f[j>>2]=d+1;u=k;return b[(f[c>>2]|0)+d>>0]|0}e=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;a=uHa(54348)|0;do if(a>>>0<=4294967279){if(a>>>0<11){b[l+11>>0]=a;c=l}else{d=a+16&-16;y=0;c=la(150,d|0)|0;k=y;y=0;if(k&1){m=10;break}f[l>>2]=c;f[l+8>>2]=d|-2147483648;f[l+4>>2]=a}Pta(c,54348,a)|0;SBa(c+a|0,0);y=0;ja(583,e|0,l|0);k=y;y=0;if(k&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(l);if(d)m=12}else{y=0;za(3);y=0;m=10}while(0);if((m|0)==10){c=Pa()|0;m=12}if((m|0)==12)Oa(e|0);$a(c|0);return 0}function Uk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=u;u=u+64|0;h=l+16|0;i=l+40|0;j=l+52|0;k=l;f[a>>2]=b;m=a+4|0;gua(m);n=a+20|0;f[n>>2]=0;f[a+24>>2]=0;f[a+28>>2]=0;d=a+32|0;rJa(d);f[a+36>>2]=c;y=0;ya(f[(f[c>>2]|0)+4>>2]|0,c|0,m|0,b|0);g=y;y=0;a:do if(!(g&1)){f[d>>2]=f[b+92>>2];e=f[b+52>>2]|0;d=f[b+48>>2]|0;while(1){if((d|0)==(e|0))break;q0(i,m);y=0;ya(69,h|0,i|0,f[(f[d>>2]|0)+8>>2]|0);g=y;y=0;if(g&1){o=9;break}y=0;g=ua(71,m|0,f[d>>2]|0)|0;p=y;y=0;if(p&1){o=9;break}f[g>>2]=f[h>>2];f[g+4>>2]=f[h+4>>2];f[g+8>>2]=f[h+8>>2];f[g+12>>2]=f[h+12>>2];d=d+4|0}if((o|0)==9){d=Pa()|0;break}g=f[f[c>>2]>>2]|0;p=gKa(a)|0;y=0;ya(g|0,c|0,b|0,p|0);p=y;y=0;if(!(p&1)){d=f[b+116>>2]|0;do if(pJa(d)|0){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;f[j>>2]=d;y=0;f[h>>2]=f[j>>2];Ca(55,k|0,a|0,h|0,i|0);p=y;y=0;if(p&1){d=Pa()|0;f3(i);break a}else{f3(i);break}}while(0);u=l;return}else o=5}else o=5;while(0);if((o|0)==5)d=Pa()|0;E4(n);sfa(m);$a(d|0)}function Vk(a,c,e,g,i,j){a=a|0;c=c|0;e=e|0;g=g|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f[e>>2]=a;f[j>>2]=g;q=c;r=i;a:while(1){k=f[e>>2]|0;if(k>>>0>=c>>>0){a=0;break}if(g>>>0>=i>>>0){a=1;break}o=b[k>>0]|0;p=o&255;a=k+1|0;do if(o<<24>>24>-1)d[g>>1]=o&255;else{if((o&255)<194){a=2;break a}l=q-k|0;m=k+2|0;if((o&255)<224){if((l|0)<2){a=1;break a}a=h[a>>0]|0;if((a&192|0)!=128){a=2;break a}d[g>>1]=a&63|p<<6&1984;a=m;break}n=k+3|0;if((o&255)<240){if((l|0)<3){a=1;break a}k=b[m>>0]|0;l=h[a>>0]|0;a=l&224;switch(o<<24>>24){case -32:{if((a|0)!=160){a=2;break a}break}case -19:{if((a|0)!=128){a=2;break a}break}default:if((l&192|0)!=128){a=2;break a}}a=k&255;if((a&192|0)!=128){a=2;break a}d[g>>1]=l<<6&4032|p<<12|a&63;a=n;break}if((o&255)>=245){a=2;break a}if((l|0)<4){a=1;break a}l=b[a>>0]|0;a=b[m>>0]|0;k=b[n>>0]|0;m=l&255;switch(o<<24>>24){case -16:{if((l+112&255)>=48){a=2;break a}break}case -12:{if((m&240|0)!=128){a=2;break a}break}default:if((m&192|0)!=128){a=2;break a}}l=a&255;if((l&192|0)!=128){a=2;break a}k=k&255;if((k&192|0)!=128){a=2;break a}if((r-g|0)<4){a=1;break a}a=p&7;if((m<<12&196608|a<<18)>>>0>1114111){a=2;break a}d[g>>1]=m<<2&60|l>>>4&3|((m>>>4&3|a<<2)<<6)+16320|55296;a=g+2|0;f[j>>2]=a;d[a>>1]=k&63|l<<6&960|56320;a=(f[e>>2]|0)+4|0}while(0);f[e>>2]=a;g=(f[j>>2]|0)+2|0;f[j>>2]=g}return a|0}function Wk(a,c,e,g){a=a|0;c=c|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0;j=g+8|0;while(1){g=f[a>>2]|0;do if(g){h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;h=1;break}else{h=(f[a>>2]|0)==0;break}}else h=1;while(0);if(c){g=f[c+12>>2]|0;if((g|0)==(f[c+16>>2]|0))g=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0)){if(!h)break}else k=14}else k=14;if((k|0)==14){k=0;if(h){c=0;break}else c=0}g=f[a>>2]|0;h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if((g&255)<<24>>24<=-1)break;if(!(d[(f[j>>2]|0)+(g<<24>>24<<1)>>1]&8192))break;g=f[a>>2]|0;h=g+12|0;i=f[h>>2]|0;if((i|0)==(f[g+16>>2]|0)){Ob[f[(f[g>>2]|0)+40>>2]&255](g)|0;continue}else{f[h>>2]=i+1;continue}}g=f[a>>2]|0;do if(g){h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=oHa(b[h>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;h=1;break}else{h=(f[a>>2]|0)==0;break}}else h=1;while(0);if(c){g=f[c+12>>2]|0;if((g|0)==(f[c+16>>2]|0))g=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0)){if(!h)k=38}else k=36}else k=36;if((k|0)==36?h:0)k=38;if((k|0)==38)f[e>>2]=f[e>>2]|2;return}function Xk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i;e=f[c+16>>2]|0;g=c+92|0;h=c+96|0;a=f[c+12>>2]|0;a:while(1){if((a|0)==(e|0)){a=3;break}c=f[a>>2]|0;b:do switch(f[c+12>>2]|0){case 3:{if(bDa(f[c+4>>2]|0,f[18735]|0)|0?bDa(f[c+8>>2]|0,f[18829]|0)|0:0)switch(f[c+20>>2]|0){case 1:{uAa(d,666);c=GL(b,f[a>>2]|0)|0;f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];break b}case 2:{Ysa(d,666,0);c=GL(b,f[a>>2]|0)|0;f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];break b}case 3:{tda(d,666.5999755859375);c=GL(b,f[a>>2]|0)|0;f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];break b}case 4:{S5(d,666.6);c=GL(b,f[a>>2]|0)|0;f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];break b}default:{a=12;break a}}break}case 2:{if(bDa(f[c+4>>2]|0,f[18735]|0)|0?bDa(f[c+8>>2]|0,f[18760]|0)|0:0){eja(g,1,0)|0;eja(h,2,0)|0}break}default:{}}while(0);a=a+4|0}if((a|0)==3){u=i;return}else if((a|0)==12)Ka()}function Yk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+96|0;n=o+8|0;j=o;k=o+48|0;m=o+32|0;a:do if((c-a|0)>>>0>20){e=0;c=j;while(1){g=b[a+e>>0]|0;h=g<<24>>24;l=a+(e|1)|0;if((e|0)==20){i=6;break}if(!(PBa(h)|0))break;l=b[l>>0]|0;b[c>>0]=l+(((h+-48|0)>>>0<10?0:9)+h<<4)+((l+-48|0)>>>0<10?208:169);e=e+2|0;c=c+1|0}do if((i|0)==6){if(g<<24>>24==69){b:do if((j|0)!=(c|0)){e=j;while(1){c=c+-1|0;if(e>>>0>=c>>>0)break b;i=b[e>>0]|0;b[e>>0]=b[c>>0]|0;b[c>>0]=i;e=e+1|0}}while(0);c=k;e=c+40|0;do{b[c>>0]=0;c=c+1|0}while((c|0)<(e|0));p[n>>3]=+p[j>>3];c=uha(k,40,73389,n)|0;if(c>>>0>39)break;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(c>>>0<11){b[m+11>>0]=c;a=m}else{j=c+16&-16;a=QCa(j)|0;f[m>>2]=a;f[m+8>>2]=j|-2147483648;f[m+4>>2]=c}Pta(a,k,c)|0;SBa(a+c|0,0);hM(n,m);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,n|0);d=y;y=0;if(d&1){o=Pa()|0;Xka(n);zta(m);$a(o|0)}}else{ZL(c,n);f[a>>2]=(f[a>>2]|0)+24}Xka(n);zta(m);a=l}break a}while(0)}while(0);u=o;return a|0}function Zk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+80|0;n=o+8|0;j=o;k=o+48|0;m=o+32|0;a:do if((c-a|0)>>>0>16){e=0;c=j;while(1){g=b[a+e>>0]|0;h=g<<24>>24;l=a+(e|1)|0;if((e|0)==16){i=6;break}if(!(PBa(h)|0))break;l=b[l>>0]|0;b[c>>0]=l+(((h+-48|0)>>>0<10?0:9)+h<<4)+((l+-48|0)>>>0<10?208:169);e=e+2|0;c=c+1|0}do if((i|0)==6){if(g<<24>>24==69){b:do if((j|0)!=(c|0)){e=j;while(1){c=c+-1|0;if(e>>>0>=c>>>0)break b;i=b[e>>0]|0;b[e>>0]=b[c>>0]|0;b[c>>0]=i;e=e+1|0}}while(0);c=k;e=c+32|0;do{b[c>>0]=0;c=c+1|0}while((c|0)<(e|0));p[n>>3]=+p[j>>3];c=uha(k,32,73394,n)|0;if(c>>>0>31)break;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(c>>>0<11){b[m+11>>0]=c;a=m}else{j=c+16&-16;a=QCa(j)|0;f[m>>2]=a;f[m+8>>2]=j|-2147483648;f[m+4>>2]=c}Pta(a,k,c)|0;SBa(a+c|0,0);hM(n,m);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,n|0);d=y;y=0;if(d&1){o=Pa()|0;Xka(n);zta(m);$a(o|0)}}else{ZL(c,n);f[a>>2]=(f[a>>2]|0)+24}Xka(n);zta(m);a=l}break a}while(0)}while(0);u=o;return a|0}function _k(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,q=0;q=u;u=u+64|0;o=q;j=q+36|0;k=q+40|0;m=q+24|0;a:do if((c-a|0)>>>0>8){e=0;c=j;while(1){g=b[a+e>>0]|0;h=g<<24>>24;l=a+(e|1)|0;if((e|0)==8){i=6;break}if(!(PBa(h)|0))break;l=b[l>>0]|0;b[c>>0]=l+(((h+-48|0)>>>0<10?0:9)+h<<4)+((l+-48|0)>>>0<10?208:169);e=e+2|0;c=c+1|0}do if((i|0)==6){if(g<<24>>24==69){b:do if((j|0)!=(c|0)){e=j;while(1){c=c+-1|0;if(e>>>0>=c>>>0)break b;i=b[e>>0]|0;b[e>>0]=b[c>>0]|0;b[c>>0]=i;e=e+1|0}}while(0);c=k;e=c+24|0;do{b[c>>0]=0;c=c+1|0}while((c|0)<(e|0));p[o>>3]=+n[j>>2];c=uha(k,24,73397,o)|0;if(c>>>0>23)break;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(c>>>0<11){b[m+11>>0]=c;a=m}else{j=c+16&-16;a=QCa(j)|0;f[m>>2]=a;f[m+8>>2]=j|-2147483648;f[m+4>>2]=c}Pta(a,k,c)|0;SBa(a+c|0,0);hM(o,m);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,o|0);d=y;y=0;if(d&1){q=Pa()|0;Xka(o);zta(m);$a(q|0)}}else{ZL(c,o);f[a>>2]=(f[a>>2]|0)+24}Xka(o);zta(m);a=l}break a}while(0)}while(0);u=q;return a|0}function $k(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+64|0;j=o+16|0;k=o+52|0;l=o+56|0;p=o+40|0;h=o;m=o+36|0;n=o+32|0;f[l>>2]=d;f[p>>2]=0;i=p+4|0;f[i>>2]=0;f[p+8>>2]=0;while(1){y=0;e=la(202,b|0)|0;g=y;y=0;if(g&1){c=8;break}if(c>>>0>=e>>>0){c=10;break}e=c;c=c+1|0;y=0;e=ua(51,b|0,e|0)|0;g=y;y=0;if(g&1){c=8;break}y=0;e=la(204,e|0)|0;g=y;y=0;if(g&1){c=8;break}g=iJ(e)|0;if(!g)continue;y=0;ya(104,e|0,g|0,p|0);g=y;y=0;if(g&1){c=9;break}}do if((c|0)==9)d=Pa()|0;else if((c|0)==10){if(!d){y=0;d=la(208,f[a+4>>2]|0)|0;b=y;y=0;if(b&1){c=8;break}uAa(h,0);f[j>>2]=f[h>>2];f[j+4>>2]=f[h+4>>2];f[j+8>>2]=f[h+8>>2];f[j+12>>2]=f[h+12>>2];J5(d,j)|0;f[l>>2]=d}h=f[a>>2]|0;b=f[p>>2]|0;f[m>>2]=b;c=(f[i>>2]|0)-b|0;f[n>>2]=c;e=h+104|0;g=f[e>>2]|0;if(g>>>0<(f[h+108>>2]|0)>>>0){y=0;ya(71,k|0,c|0,0);n=y;y=0;if(!(n&1)?(y=0,f[j>>2]=f[k>>2],Ca(56,g|0,d|0,b|0,j|0),n=y,y=0,!(n&1)):0){f[e>>2]=(f[e>>2]|0)+16;c=18}else c=19}else{y=0;Ca(81,h+100|0,l|0,m|0,n|0);n=y;y=0;if(n&1)c=19;else c=18}if((c|0)==18){F4(p);u=o;return}else if((c|0)==19){d=Pa()|0;break}}while(0);if((c|0)==8)d=Pa()|0;F4(p);$a(d|0)}function al(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=a+12|0;do if((b[a+1>>0]|0)!=0?(h=UAa(c,1)|0,jha(f[h>>2]|0,f[18905]|0)|0):0){h=UAa(c,2)|0;h=f[h>>2]|0;gKa(h)|0;if(!(aJa(f[h>>2]|0)|0)){h=UAa(c,2)|0;h=UAa(f[h>>2]|0,0)|0;if(!(jha(f[h>>2]|0,f[18916]|0)|0)){i=14;break}h=UAa(c,2)|0;h=UAa(f[h>>2]|0,1)|0;if(!(jha(f[h>>2]|0,f[18904]|0)|0)){i=14;break}h=UAa(c,2)|0;h=UAa(f[h>>2]|0,2)|0;h=f[h>>2]|0;gKa(h)|0;if(!(aJa(f[h>>2]|0)|0)){i=14;break}}h=f[j>>2]|0;e=UAa(c,2)|0;Cg(a,f[e>>2]|0);GD(a,1);e=a+4|0;c=f[e>>2]|0;d=c+h|0;b[c+(f[j>>2]|0)>>0]=0;if(!(fwa(d,46)|0)){g=fwa(d,101)|0;if(!g){l$(a,24718);break}GD(a,3);d=(f[e>>2]|0)+h|0;d=d+(iJ(d)|0)|0;while(1){if(d>>>0<g>>>0)break;b[d+2>>0]=b[d>>0]|0;d=d+-1|0}b[g>>0]=46;b[g+1>>0]=48;f[j>>2]=(f[j>>2]|0)+2}}else i=14;while(0);if((i|0)==14){g=a+4|0;d=f[g>>2]|0;e=f[j>>2]|0;if((b[d+(e+-1)>>0]|0)==45){i=UAa(c,1)|0;if(jha(f[i>>2]|0,f[18904]|0)|0)i=19;else{e=f[j>>2]|0;d=f[g>>2]|0;i=17}}else i=17;if(((i|0)==17?(b[d+(e+-1)>>0]|0)==43:0)?(j=UAa(c,1)|0,jha(f[j>>2]|0,f[18905]|0)|0):0)i=19;if((i|0)==19)gP(a,32);j=UAa(c,1)|0;l$(a,voa(gKa(f[j>>2]|0)|0)|0);j=UAa(c,2)|0;X$(a,f[j>>2]|0,c,1)}return}function bl(a,b){a=a|0;b=b|0;if(!b)Na(59079,64509,76,59084);do switch(f[b>>2]|0){case 1:{hh(a,b);break}case 2:{En(a,b);break}case 3:{uo(a,b);break}case 4:{bu(a,b);break}case 5:{Wq(a,b);break}case 6:{Tea(a,b);break}case 7:{Tea(a,b);break}case 8:{_u(a,b);break}case 9:{kV(a,b);break}case 10:{kG(a,b);break}case 11:{I1(a,b);break}case 12:{YT(a,b);break}case 13:{go(a,b);break}case 14:{Tn(a,b);break}case 25:{zq(a,b);break}case 24:{Dx(a,b);break}case 26:{YE(a,b);break}case 27:{$S(a,b);break}case 15:{UU(f[a>>2]|0,b);break}case 16:{Af(a,b);break}case 17:{qe(a,b);break}case 18:{MJ(a,b);break}case 19:{y0(a,b);break}case 20:{yP(a,b);break}case 21:{dv(a,b);break}case 22:{bka(f[a>>2]|0);break}case 23:{hha(f[a>>2]|0);break}default:Ka()}while(0);return}function cl(a,c,d,e,g,h,i,j,k,l,m,n){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0;p=k;a:do if(a<<24>>24==h<<24>>24)if(b[c>>0]|0){b[c>>0]=0;d=f[g>>2]|0;f[g>>2]=d+1;b[d>>0]=46;g=b[j+11>>0]|0;if(((g<<24>>24<0?f[j+4>>2]|0:g&255)|0)!=0?(o=f[l>>2]|0,(o-p|0)<160):0){k=f[m>>2]|0;f[l>>2]=o+4;f[o>>2]=k;k=0}else k=0}else k=-1;else{if(a<<24>>24==i<<24>>24?(i=b[j+11>>0]|0,(i<<24>>24<0?f[j+4>>2]|0:i&255)|0):0){if(!(b[c>>0]|0)){k=-1;break}k=f[l>>2]|0;if((k-p|0)>=160){k=0;break}g=f[m>>2]|0;f[l>>2]=k+4;f[k>>2]=g;f[m>>2]=0;k=0;break}h=n+32|0;o=0;while(1){k=n+o|0;if((o|0)==32){k=h;break}if((b[k>>0]|0)==a<<24>>24)break;else o=o+1|0}o=k-n|0;if((o|0)>31)k=-1;else{h=b[68313+o>>0]|0;switch(o|0){case 24:case 25:{k=f[g>>2]|0;if((k|0)!=(e|0)?(b[k+-1>>0]&95)!=(b[d>>0]&127):0){k=-1;break a}f[g>>2]=k+1;b[k>>0]=h;k=0;break a}case 23:case 22:{b[d>>0]=80;k=f[g>>2]|0;f[g>>2]=k+1;b[k>>0]=h;k=0;break a}default:{k=h&95;if((((k|0)==(b[d>>0]|0)?(b[d>>0]=k|128,b[c>>0]|0):0)?(b[c>>0]=0,d=b[j+11>>0]|0,(d<<24>>24<0?f[j+4>>2]|0:d&255)|0):0)?(q=f[l>>2]|0,(q-p|0)<160):0){d=f[m>>2]|0;f[l>>2]=q+4;f[q>>2]=d}l=f[g>>2]|0;f[g>>2]=l+1;b[l>>0]=h;if((o|0)>21){k=0;break a}f[m>>2]=(f[m>>2]|0)+1;k=0;break a}}}}while(0);return k|0}function dl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;i=u;u=u+16|0;g=i+12|0;j=i;do if(b[a+12>>0]|0){h=Vea(76852,57e3)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}l=Pa()|0;pza(g);$a(l|0)}while(0);e=Op(a)|0;d=c+4|0;f[d>>2]=e;e=Jg(a)|0;f[c+8>>2]=e;e=ru(a,f[d>>2]|0)|0;f[c+12>>2]=e;e=a+176|0;if((f[e>>2]|0)==5){l=ru(a,f[d>>2]|0)|0;f[c+16>>2]=l}AS(c,f[d>>2]|0);if((f[e>>2]|0)==11){u=i;return}h=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(57012)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[j+11>>0]=g;d=j}else{e=g+16&-16;y=0;d=la(150,e|0)|0;l=y;y=0;if(l&1){k=17;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=g}Pta(d,57012,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,j|0);l=y;y=0;if(l&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(e)k=19}else{y=0;za(3);y=0;k=17}while(0);if((k|0)==17){d=Pa()|0;k=19}if((k|0)==19)Oa(h|0);$a(d|0)}function el(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+48|0;k=q+44|0;i=q+40|0;l=q+32|0;j=q+16|0;m=q+24|0;n=q+8|0;o=q+4|0;p=q;do if(b[a+12>>0]|0){d=Vea(76852,56819)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[k>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,h=y,y=0,!(h&1)):0){pza(k);jn(d,g)|0;Yp(d)|0;break}q=Pa()|0;pza(k);$a(q|0)}while(0);d=c+32|0;if(f[d>>2]|0)Ql(a,d);Ql(a,c+28|0);g=aea(c)|0;h=a+4|0;d=f[h>>2]|0;if(g){e=Zq(d,14)|0;g=c+8|0;PDa(i,gKa(f[c+12>>2]|0)|0);Un(e,f[i>>2]|0)|0;Bwa(l,g);iua(j,g);g=l+4|0;e=f[j>>2]|0;d=f[j+4>>2]|0;while(1){if(!(Cpa(f[l>>2]|0,f[g>>2]|0,e,d)|0))break;i=ppa(l)|0;j=f[h>>2]|0;f[n>>2]=f[i>>2];f[k>>2]=f[n>>2];PDa(m,Pr(a,k)|0);Un(j,f[m>>2]|0)|0;bva(l)}n=f[h>>2]|0;f[p>>2]=f[c+24>>2];f[k>>2]=f[p>>2];PDa(o,Pr(a,k)|0);Un(n,f[o>>2]|0)|0}else Zq(d,0)|0;u=q;return}function fl(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;h=u;u=u+64|0;e=h+36|0;g=h+40|0;i=h+24|0;k=h+12|0;j=h;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(33558)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[k+11>>0]=d;c=k}else{l=d+16&-16;c=nV(l)|0;f[k>>2]=c;f[k+8>>2]=l|-2147483648;f[k+4>>2]=d}Pta(c,33558,d)|0;SBa(c+d|0,0);y=0;ja(593,j|0,a|0);l=y;y=0;if(l&1)c=Pa()|0;else{l=b[j+11>>0]|0;d=l<<24>>24<0;y=0;oa(37,k|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:l&255)|0)|0;l=y;y=0;if(l&1)c=Pa()|0;else{f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];c=0;while(1){if((c|0)==3)break;f[k+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,i|0,33565)|0;l=y;y=0;do if(!(l&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ja(582,e|0,g|0);l=y;y=0;if(l&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);zta(j);zta(k);u=h;return f[e>>2]|0}}else c=Pa()|0;while(0);zta(i)}zta(j)}zta(k);$a(c|0);return 0}function gl(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;h=u;u=u+64|0;e=h+36|0;g=h+40|0;i=h+24|0;k=h+12|0;j=h;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(33477)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[k+11>>0]=d;c=k}else{l=d+16&-16;c=nV(l)|0;f[k>>2]=c;f[k+8>>2]=l|-2147483648;f[k+4>>2]=d}Pta(c,33477,d)|0;SBa(c+d|0,0);y=0;ja(593,j|0,a|0);l=y;y=0;if(l&1)c=Pa()|0;else{l=b[j+11>>0]|0;d=l<<24>>24<0;y=0;oa(37,k|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:l&255)|0)|0;l=y;y=0;if(l&1)c=Pa()|0;else{f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];c=0;while(1){if((c|0)==3)break;f[k+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,i|0,33484)|0;l=y;y=0;do if(!(l&1)){f[g>>2]=f[i>>2];f[g+4>>2]=f[i+4>>2];f[g+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}y=0;ja(582,e|0,g|0);l=y;y=0;if(l&1){c=Pa()|0;zta(g);break}else{zta(g);zta(i);zta(j);zta(k);u=h;return f[e>>2]|0}}else c=Pa()|0;while(0);zta(i)}zta(j)}zta(k);$a(c|0);return 0}function hl(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;h=l+12|0;i=l+8|0;j=l+4|0;k=l;f[i>>2]=e;f[j>>2]=g;g=Ura(a+144|0)|0;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,20242)|0;a=0;while(1){if((a|0)==(c|0))break;if(a|0)Vea(76684,72307)|0;e=Vea(76684,59726)|0;Vea(Vea(e,f[b+(a<<2)>>2]|0)|0,59726)|0;a=a+1|0}if(!c)Vea(76684,64313)|0;Vea(76684,19863)|0;e=qN(g)|0;e=Vea(Vea(Vea(vj(Vea(vj(Vea(76684,20007)|0,e)|0,20271)|0,c)|0,20310)|0,d)|0,20226)|0;a=EN(74808,i)|0;a=Vea(vj(e,f[a>>2]|0)|0,20128)|0;e=EN(74808,j)|0;Vea(vj(a,f[e>>2]|0)|0,20144)|0;Vea(76684,19947)|0}e=g+8|0;a=0;while(1){if((a|0)==(c|0))break;dCa(k,f[b+(a<<2)>>2]|0);f[h>>2]=f[k>>2];eV(e,h);a=a+1|0}dCa(h,d);f[g+24>>2]=f[h>>2];f[g+28>>2]=f[i>>2];f[g+32>>2]=f[j>>2];vHa(g);u=l;return g|0}function il(a,b){a=a|0;b=b|0;if(!b)Na(59079,64509,76,59084);do switch(f[b>>2]|0){case 1:{wi(a,b);break}case 2:{Dj(a,b);break}case 3:{Co(a,b);break}case 4:{aq(a,b);break}case 5:{el(a,b);break}case 6:{Fn(a,b);break}case 7:{_n(a,b);break}case 8:{Gm(a,b);break}case 9:{as(a,b);break}case 10:{jr(a,b);break}case 11:{sr(a,b);break}case 12:{Xs(a,b);break}case 13:{Uh(a,b);break}case 14:{oi(a,b);break}case 25:{Be(a,b);break}case 24:{fm(a,b);break}case 26:{_r(a,b);break}case 27:{Wu(a,b);break}case 15:{hm(a,b);break}case 16:{gg(a,b);break}case 17:{ze(a,b);break}case 18:{ot(a,b);break}case 19:{Zw(a,b);break}case 20:{ow(a,b);break}case 21:{Tr(a,b);break}case 22:{Oy(a);break}case 23:{sy(a);break}default:Ka()}while(0);return}function jl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;k=c;j=o;n=a+11|0;e=b[n>>0]|0;g=e<<24>>24<0;if(g){i=(f[a+8>>2]&2147483647)+-1|0;m=f[a+4>>2]|0}else{i=10;m=e&255}l=d-k|0;do if(l|0){if(g){g=f[a>>2]|0;h=f[a+4>>2]|0}else{g=a;h=e&255}if(Eva(c,g,g+h|0)|0){f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;if(l>>>0>4294967279)JZ();if(l>>>0<11){b[j+11>>0]=l;g=j}else{n=l+16&-16;g=QCa(n)|0;f[j>>2]=g;f[j+8>>2]=n|-2147483648;f[j+4>>2]=l}e=g;while(1){if((c|0)==(d|0))break;SBa(e,b[c>>0]|0);c=c+1|0;e=e+1|0}SBa(g+l|0,0);d=b[j+11>>0]|0;n=d<<24>>24<0;y=0;oa(73,a|0,(n?f[j>>2]|0:j)|0,(n?f[j+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){o=Pa()|0;zta(j);$a(o|0)}else{zta(j);break}}else{j=m+l|0;if((i-m|0)>>>0<l>>>0){dA(a,i,j-i|0,m,m,0);e=b[n>>0]|0}if(e<<24>>24<0)h=f[a>>2]|0;else h=a;g=d+(m-k)|0;e=h+m|0;while(1){if((c|0)==(d|0))break;SBa(e,b[c>>0]|0);e=e+1|0;c=c+1|0}SBa(h+g|0,0);if((b[n>>0]|0)<0){f[a+4>>2]=j;break}else{b[n>>0]=j;break}}}while(0);u=o;return}function kl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+16|0;i=o+8|0;m=o;y=0;ja(80,m|0,a|0);l=y;y=0;a:do if(l&1){d=ab(0)|0;n=16}else{b:do if(b[m>>0]|0){j=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;k=f[j+24>>2]|0;l=f[j+4>>2]|0;g=c+d|0;e=j+76|0;d=f[e>>2]|0;do if(bDa(-1,d)|0){Axa(i,j);y=0;d=ua(46,f[i>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,h=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,32)|0,p=y,y=0,!(p&1)):0){pza(i);d=h<<24>>24;f[e>>2]=d;n=8;break}d=ab(0)|0;pza(i)}else n=8;while(0);do if((n|0)==8){y=0;d=ka(41,k|0,c|0,((l&176|0)==32?g:c)|0,g|0,j|0,d&255|0)|0;p=y;y=0;if(p&1){d=ab(0)|0;break}if(d|0)break b;p=a+(f[(f[a>>2]|0)+-12>>2]|0)|0;y=0;ja(81,p|0,f[p+16>>2]|5|0);p=y;y=0;if(!(p&1))break b;d=ab(0)|0}while(0);ww(m);n=16;break a}while(0);ww(m)}while(0);do if((n|0)==16){Ya(d|0)|0;y=0;ia(351,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);p=y;y=0;if(!(p&1)){_a();break}d=Pa()|0;y=0;za(5);p=y;y=0;if(p&1){p=ab(0)|0;lDa(p)}else $a(d|0)}while(0);u=o;return a|0}function ll(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+80|0;k=r+64|0;q=r+48|0;l=r+44|0;m=r+40|0;p=r;n=r+24|0;o=f[a+4>>2]|0;b=f[a>>2]|0;d=f[b+4>>2]|0;do if((d|0)!=(f[b>>2]|0)){c=pwa(jO()|0)|0;f[q>>2]=0;d=q+4|0;f[d>>2]=0;f[q+8>>2]=0;f[l>>2]=0;e=f[o>>2]|0;f[m>>2]=(f[e+40>>2]|0)-(f[e+36>>2]|0)>>2;e=n+4|0;g=n+8|0;h=n+12|0;i=q+8|0;b=0;while(1){if(b>>>0>=c>>>0){c=4;break}f[n>>2]=l;f[e>>2]=m;f[g>>2]=o;f[h>>2]=f[a>>2];y=0;f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];f[k+12>>2]=f[n+12>>2];ja(1474,p|0,k|0);j=y;y=0;if(j&1){c=10;break}j=f[d>>2]|0;if(j>>>0>=(f[i>>2]|0)>>>0){y=0;ja(1475,q|0,p|0);j=y;y=0;if(j&1){c=11;break}}else{sI(j,p);f[d>>2]=(f[d>>2]|0)+24}D8(p);b=b+1|0}if((c|0)==4){y=0;b=wa(4)|0;p=y;y=0;if(!(p&1)?(y=0,ja(1476,b|0,q|0),p=y,y=0,!(p&1)):0){IX(q);b=f[a>>2]|0;d=f[b+4>>2]|0;break}b=Pa()|0}else if((c|0)==10){b=Pa()|0;c=12}else if((c|0)==11){b=Pa()|0;D8(p);c=12}IX(q);$a(b|0)}while(0);e=f[b>>2]|0;c=b+4|0;b=d;while(1){if((b|0)==(e|0))break;q=b+-4|0;f[c>>2]=q;b=q}u=r;return}function ml(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;m=o;n=nV(20)|0;_pa(n);if(!b){l=EI((f[a+4>>2]|0)-(f[a>>2]|0)>>2)|0;f[n>>2]=l}else{dCa(m,b);f[n>>2]=f[m>>2]}f[n+4>>2]=c;h=n+12|0;i=n+16|0;j=n+8|0;g=0;while(1){if((g|0)==(e|0))break;k=f[d+(g<<2)>>2]|0;f[m>>2]=k;l=f[h>>2]|0;if(l>>>0<(f[i>>2]|0)>>>0){f[l>>2]=k;f[h>>2]=l+4}else XC(j,m);g=g+1|0}Bsa(74768);y=0;ja(64,a|0,n|0);l=y;y=0;if(l&1){o=Pa()|0;$W(74768);$a(o|0)}$W(74768);if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,19828)|0;g=0;while(1){if((g|0)==(e|0))break;if(g|0)Vea(76684,72307)|0;vj(76684,f[d+(g<<2)>>2]|0)|0;g=g+1|0}if(!e)Vea(76684,64313)|0;Vea(76684,19863)|0;d=f[18701]|0;Vea(vj(Vea(76684,19868)|0,d)|0,19887)|0;f[m>>2]=n;m=EN(74796,m)|0;f[m>>2]=d;yY(b);Vea(vj(Vea(vj(Vea(76684,72307)|0,c)|0,19928)|0,e)|0,19943)|0;Vea(76684,19947)|0}u=o;return n|0}function nl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;i=l+24|0;j=l+12|0;k=l;a:do if(((((c-a|0)>2?(b[a>>0]|0)==97:0)?(b[a+1>>0]|0)==122:0)?(m=a+2|0,h=fc(m,c,d)|0,(h|0)!=(m|0)):0)?(g=d+4|0,e=f[g>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(k,e+-24|0);y=0;oa(77,k|0,0,73264)|0;m=y;y=0;do if(m&1)a=Pa()|0;else{f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,j|0,72083)|0;m=y;y=0;if(m&1){a=Pa()|0;zta(j);break}f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;d=a+-24|0;c=d+11|0;if((b[c>>0]|0)<0){SBa(f[d>>2]|0,0);f[a+-20>>2]=0;a=d}else{SBa(d,0);b[c>>0]=0;a=d}Sq(d);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}zta(i);zta(j);zta(k);a=h;break a}while(0);zta(k);$a(a|0)}while(0);u=l;return a|0}function ol(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;while(1){e=f[a>>2]|0;do if(e){g=f[e+12>>2]|0;if((g|0)==(f[e+16>>2]|0))e=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else e=gKa(f[g>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(b){e=f[b+12>>2]|0;if((e|0)==(f[b+16>>2]|0))e=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0)){if(!g){g=b;break}}else i=14}else i=14;if((i|0)==14){i=0;if(g){g=0;break}else b=0}e=f[a>>2]|0;g=f[e+12>>2]|0;if((g|0)==(f[e+16>>2]|0))e=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else e=gKa(f[g>>2]|0)|0;if(!(Rb[f[(f[d>>2]|0)+12>>2]&127](d,8192,e)|0)){g=b;break}e=f[a>>2]|0;g=e+12|0;h=f[g>>2]|0;if((h|0)==(f[e+16>>2]|0)){Ob[f[(f[e>>2]|0)+40>>2]&255](e)|0;continue}else{f[g>>2]=h+4;continue}}b=f[a>>2]|0;do if(b){e=f[b+12>>2]|0;if((e|0)==(f[b+16>>2]|0))b=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else b=gKa(f[e>>2]|0)|0;if(TDa(b)|0){f[a>>2]=0;e=1;break}else{e=(f[a>>2]|0)==0;break}}else e=1;while(0);if(g){b=f[g+12>>2]|0;if((b|0)==(f[g+16>>2]|0))b=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else b=gKa(f[b>>2]|0)|0;if(!(TDa(b)|0)){if(!e)i=37}else i=35}else i=35;if((i|0)==35?e:0)i=37;if((i|0)==37)f[c>>2]=f[c>>2]|2;return}function pl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;i=l+24|0;j=l+12|0;k=l;a:do if(((((c-a|0)>2?(b[a>>0]|0)==97:0)?(b[a+1>>0]|0)==116:0)?(m=a+2|0,h=ic(m,c,d)|0,(h|0)!=(m|0)):0)?(g=d+4|0,e=f[g>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(k,e+-24|0);y=0;oa(77,k|0,0,73264)|0;m=y;y=0;do if(m&1)a=Pa()|0;else{f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,j|0,72083)|0;m=y;y=0;if(m&1){a=Pa()|0;zta(j);break}f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;d=a+-24|0;c=d+11|0;if((b[c>>0]|0)<0){SBa(f[d>>2]|0,0);f[a+-20>>2]=0;a=d}else{SBa(d,0);b[c>>0]=0;a=d}Sq(d);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}zta(i);zta(j);zta(k);a=h;break a}while(0);zta(k);$a(a|0)}while(0);u=l;return a|0}function ql(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+96|0;i=n;j=b+12|0;k=pAa(f[j>>2]|0)|0;l=b+16|0;m=pAa(f[l>>2]|0)|0;b=f[b+8>>2]|0;c=k+8|0;d=(k|0)!=0;e=m+8|0;g=(m|0)!=0;a:do switch(b|0){case 0:{if(d?(csa(c)|0)==0:0){jva(f[a>>2]|0,f[l>>2]|0)|0;break a}if(g?(csa(e)|0)==0:0)jva(f[a>>2]|0,f[j>>2]|0)|0;break}case 1:{if(g?(csa(e)|0)==0:0)jva(f[a>>2]|0,f[j>>2]|0)|0;break}default:{h=a+24|0;switch(b|0){case 10:{if(!d)break a;if(FR(k)|0)break a;Ot(i,f[h>>2]|0,f[l>>2]|0);m=jca(i)|0;hT(i);if(m)break a;jva(f[a>>2]|0,k)|0;break a}case 2:break;default:break a}if((d?(csa(c)|0)==0:0)?(Ot(i,f[h>>2]|0,f[l>>2]|0),l=jca(i)|0,hT(i),!l):0){jva(f[a>>2]|0,k)|0;break a}if((g?(csa(e)|0)==0:0)?(Ot(i,f[h>>2]|0,f[j>>2]|0),l=jca(i)|0,hT(i),!l):0)jva(f[a>>2]|0,m)|0}}while(0);u=n;return}function rl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;g=i+24|0;h=i;NBa(g);d=f[c+12>>2]|0;if((d|0)!=0?(NM(h,b,d),f[g>>2]=f[h>>2],f[g+4>>2]=f[h+4>>2],f[g+8>>2]=f[h+8>>2],f[g+12>>2]=f[h+12>>2],f[g+16>>2]=f[h+16>>2],FBa(g)|0):0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else e=4;a:do if((e|0)==4){d=f[c+16>>2]|0;do if(d|0){NM(h,b,d);if(FBa(h)|0){f[a>>2]=f[h>>2];f[a+4>>2]=f[h+4>>2];f[a+8>>2]=f[h+8>>2];f[a+12>>2]=f[h+12>>2];f[a+16>>2]=f[h+16>>2];f[a+20>>2]=f[h+20>>2];break a}h=Y$(h)|0;if((h|0)==0&(J|0)==0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2];break a}else break}while(0);f[g+16>>2]=f[c+8>>2];f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}while(0);u=i;return}function sl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;do if(b[a+12>>0]|0){h=c3(Vea(76852,55892)|0,d)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(h,g)|0;Yp(h)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);e=a+4|0;switch(d<<24>>24){case 65:{e=cua(f[e>>2]|0)|0;uAa(i,Om(a)|0);j=e+8|0;f[j>>2]=f[i>>2];f[j+4>>2]=f[i+4>>2];f[j+8>>2]=f[i+8>>2];f[j+12>>2]=f[i+12>>2];j=11;break}case 66:{e=cua(f[e>>2]|0)|0;Ysa(i,qm(a)|0,J);j=e+8|0;f[j>>2]=f[i>>2];f[j+4>>2]=f[i+4>>2];f[j+8>>2]=f[i+8>>2];f[j+12>>2]=f[i+12>>2];j=11;break}case 67:{e=cua(f[e>>2]|0)|0;Jm(i,a);j=e+8|0;f[j>>2]=f[i>>2];f[j+4>>2]=f[i+4>>2];f[j+8>>2]=f[i+8>>2];f[j+12>>2]=f[i+12>>2];j=11;break}case 68:{e=cua(f[e>>2]|0)|0;Bm(i,a);j=e+8|0;f[j>>2]=f[i>>2];f[j+4>>2]=f[i+4>>2];f[j+8>>2]=f[i+8>>2];f[j+12>>2]=f[i+12>>2];j=11;break}default:e=0}if((j|0)==11){f[e+4>>2]=f[e+8>>2];f[c>>2]=e;e=1}u=k;return e|0}function tl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=f[b>>2]|0;l=b+4|0;e=f[l>>2]|0;m=((f[c>>2]|0)-g<<3)+(f[c+4>>2]|0)-e|0;if((m|0)>0){if(!e){e=d+4|0;l=b;b=d;c=e;e=f[e>>2]|0}else{h=32-e|0;k=(m|0)<(h|0)?m:h;h=-1>>>(h-k|0)&-1<<e&f[g>>2];c=d+4|0;e=f[c>>2]|0;j=32-e|0;g=j>>>0<k>>>0?j:k;i=f[d>>2]|0;e=f[i>>2]&~(-1>>>(j-g|0)&-1<<e);f[i>>2]=e;j=f[c>>2]|0;r=f[l>>2]|0;f[i>>2]=(j>>>0>r>>>0?h<<j-r:h>>>(r-j|0))|e;e=(f[c>>2]|0)+g|0;i=i+(e>>>5<<2)|0;f[d>>2]=i;e=e&31;f[c>>2]=e;j=k-g|0;if((j|0)>0){e=f[i>>2]&~(-1>>>(32-j|0));f[i>>2]=e;f[i>>2]=h>>>((f[l>>2]|0)+g|0)|e;f[c>>2]=j;e=j}g=(f[b>>2]|0)+4|0;f[b>>2]=g;m=m-k|0;l=b;b=d}k=32-e|0;h=-1<<e;i=~h;j=~m;j=m+((j|0)>-32?j:-32)+32|0;e=m;while(1){if((e|0)<=31)break;s=f[g>>2]|0;r=f[b>>2]|0;t=f[r>>2]&i;f[r>>2]=t;f[r>>2]=s<<f[c>>2]|t;r=r+4|0;f[b>>2]=r;f[r>>2]=f[r>>2]&h|s>>>k;r=(f[l>>2]|0)+4|0;f[l>>2]=r;e=e+-32|0;g=r}e=m-(j&-32)|0;if((e|0)>0?(q=f[g>>2]&-1>>>(32-e|0),n=(k|0)<(e|0)?k:e,o=f[b>>2]|0,p=f[o>>2]&~(-1<<f[c>>2]&-1>>>(k-n|0)),f[o>>2]=p,f[o>>2]=p|q<<f[c>>2],p=(f[c>>2]|0)+n|0,o=o+(p>>>5<<2)|0,f[b>>2]=o,f[c>>2]=p&31,p=e-n|0,(p|0)>0):0){f[o>>2]=f[o>>2]&~(-1>>>(32-p|0))|q>>>n;f[c>>2]=p}}else c=d+4|0;f[a>>2]=f[d>>2];f[a+4>>2]=f[c>>2];return}function ul(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n;a:do if(!a)a=0;else{i=c;j=e-i>>2;l=g+12|0;k=f[l>>2]|0;j=(k|0)>(j|0)?k-j|0:0;k=d;i=k-i|0;g=i>>2;if((i|0)>0?(Rb[f[(f[a>>2]|0)+48>>2]&127](a,c,g)|0)!=(g|0):0){a=0;break}do if((j|0)>0){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(j>>>0>1073741807)JZ();do if(j>>>0>=2){g=j+4&2147483644;if(g>>>0<=1073741823){i=nV(g<<2)|0;f[m>>2]=i;c=m+8|0;f[c>>2]=g|-2147483648;f[m+4>>2]=j;g=i;c=c+3|0;i=m;break}a=zb(8)|0;y=0;ja(76,a|0,70649);n=y;y=0;if(n&1){n=Pa()|0;Oa(a|0);$a(n|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else{c=m+8+3|0;b[c>>0]=j;g=m;i=m}while(0);$va(g,j,h);FCa(g+(j<<2)|0,0);y=0;g=oa(f[(f[a>>2]|0)+48>>2]|0,a|0,((b[c>>0]|0)<0?f[m>>2]|0:i)|0,j|0)|0;h=y;y=0;if(!(h&1)){jta(m);if((g|0)==(j|0))break;else{a=0;break a}}else{n=Pa()|0;jta(m);$a(n|0)}}while(0);m=e-k|0;e=m>>2;if((m|0)>0?(Rb[f[(f[a>>2]|0)+48>>2]&127](a,d,e)|0)!=(e|0):0){a=0;break}f[l>>2]=0}while(0);u=n;return a|0}function vl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;j=n+40|0;k=n+12|0;l=n+24|0;m=n;a:do if((c-a|0)>2?(b[a>>0]|0)==116:0){e=b[a+1>>0]|0;switch(e<<24>>24){case 101:case 105:break;default:{c=a;break a}}g=a+2|0;if(e<<24>>24==101)c=fc(g,c,d)|0;else c=ic(g,c,d)|0;if((c|0)!=(g|0)?(i=d+4|0,h=f[i>>2]|0,(f[d>>2]|0)!=(h|0)):0){HL(m,h+-24|0);y=0;oa(77,m|0,0,72288)|0;h=y;y=0;do if(h&1)c=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];e=0;while(1){if((e|0)==3)break;f[m+(e<<2)>>2]=0;e=e+1|0}y=0;ua(165,l|0,72083)|0;h=y;y=0;if(h&1){c=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];e=0;while(1){if((e|0)==3)break;f[l+(e<<2)>>2]=0;e=e+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);break a}while(0);zta(m);$a(c|0)}else c=a}else c=a;while(0);u=n;return c|0}function wl(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+16|0;p=q;k=d;while(1){if((k|0)==(e|0)){k=e;break}if(!(b[k>>0]|0))break;k=k+1|0}f[j>>2]=h;f[g>>2]=d;n=i;o=a+8|0;a=h;while(1){if((a|0)==(i|0)|(d|0)==(e|0)){a=32;break}l=c;h=f[l+4>>2]|0;m=p;f[m>>2]=f[l>>2];f[m+4>>2]=h;m=k;h=psa(f[o>>2]|0)|0;l=Np(a,g,m-d|0,n-a>>2,c)|0;if(h|0)psa(h)|0;if((l|0)==-1){k=a;a=10;break}a=(f[j>>2]|0)+(l<<2)|0;f[j>>2]=a;if((a|0)==(i|0)){a=29;break}d=f[g>>2]|0;if((k|0)==(e|0))k=e;else{k=psa(f[o>>2]|0)|0;d=$p(a,d,1,c)|0;if(k|0)psa(k)|0;if(d|0){d=2;a=28;break}f[j>>2]=(f[j>>2]|0)+4;d=(f[g>>2]|0)+1|0;f[g>>2]=d;k=d;while(1){if((k|0)==(e|0)){k=e;break}if(!(b[k>>0]|0))break;k=k+1|0}a=f[j>>2]|0}}do if((a|0)==10){a:while(1){f[j>>2]=k;if((d|0)==(f[g>>2]|0)){a=18;break}a=psa(f[o>>2]|0)|0;k=$p(k,d,m-d|0,p)|0;if(a|0)psa(a)|0;switch(k|0){case -1:{a=15;break a}case -2:{a=16;break a}case 0:{k=1;break}default:{}}d=d+k|0;k=(f[j>>2]|0)+4|0;a=10}if((a|0)==15){f[g>>2]=d;d=2;a=28;break}else if((a|0)==16){f[g>>2]=d;d=1;a=28;break}else if((a|0)==18){f[g>>2]=d;d=(d|0)!=(e|0)&1;a=28;break}}else if((a|0)==29){d=f[g>>2]|0;a=32}while(0);if((a|0)!=28)if((a|0)==32)d=(d|0)!=(e|0)&1;u=q;return d|0}function xl(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n;j=f[a+60>>2]|0;k=a+152|0;l=m+4|0;i=f[a+56>>2]|0;a:while(1){if((i|0)==(j|0)){e=3;break}c=f[i>>2]|0;f[m>>2]=c;if(Qt(k,m)|0){rya(m,c+12|0);y=0;ja(1944,a|0,m|0);h=y;y=0;if(h&1){e=18;break}c=f[i>>2]|0;h=c+24|0;c=(f[c+28>>2]|0)-(f[h>>2]|0)>>4;b:while(1){g=c+-1|0;if((c|0)<=0)break;d=f[h>>2]|0;e=f[d+(g<<4)+4>>2]|0;if(!(tJa(f[d+(g<<4)>>2]|0)|0)){y=0;c=ua(133,m|0,e|0)|0;e=y;y=0;if(e&1){e=18;break a}if(!c){c=g;continue}b[d+(g<<4)+12>>0]=1;c=g;continue}y=0;ja(1945,m|0,e|0);d=y;y=0;if(d&1){e=18;break a}d=f[l>>2]|0;c=f[m>>2]|0;while(1){if((c|0)==(d|0)){c=g;continue b}Z$(a,f[c>>2]|0,e);c=c+4|0}}E4(m)}i=i+4|0}if((e|0)==3){rya(m,f[a+52>>2]|0);d=Rya(gKa(f[a+32>>2]|0)|0)|0;c=0;while(1){if(c>>>0>=d>>>0){e=20;break}y=0;ja(1945,m|0,c|0);l=y;y=0;if(l&1)break;c=c+1|0}if((e|0)==20?(y=0,ja(1944,a|0,m|0),a=y,y=0,!(a&1)):0){E4(m);u=n;return}c=Pa()|0;E4(m)}else if((e|0)==18){c=Pa()|0;E4(m)}$a(c|0)}function yl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=u;u=u+96|0;g=i+64|0;j=i+80|0;d=i+40|0;e=i+16|0;h=i;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;y=0;Ca(53,d|0,b|0,c+8|0,j|0);k=y;y=0;a:do if(k&1)d=Pa()|0;else{b:do if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else{y=0;ya(70,e|0,b|0,f[c+28>>2]|0);k=y;y=0;c:do if(k&1)d=Pa()|0;else{do if(FBa(e)|0){f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}else{y=0;d=la(161,e|0)|0;k=y;y=0;if(!(k&1)?(k=f[b+4>>2]|0,b=f[k+36>>2]|0,e=f[(f[b>>2]|0)+12>>2]|0,c=f[c+4>>2]|0,k=gKa(k)|0,y=0,qa(e|0,h|0,b|0,d|0,j|0,c|0,k|0),k=y,y=0,!(k&1)):0){f[g>>2]=f[h>>2];f[g+4>>2]=f[h+4>>2];f[g+8>>2]=f[h+8>>2];f[g+12>>2]=f[h+12>>2];oda(a,g);break}d=Pa()|0;break c}while(0);break b}while(0);break a}while(0);f3(j);u=i;return}while(0);f3(j);$a(d|0)}function zl(a,c,e,g,h,i){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;i=i|0;var k=0,l=0,m=0,n=0,o=0;f[e>>2]=a;f[i>>2]=g;o=c;a=f[e>>2]|0;a:while(1){if(a>>>0>=c>>>0){a=0;break}g=d[a>>1]|0;n=g&65535;do if((g&65535)<128){a=f[i>>2]|0;if((h-a|0)<1){a=1;break a}f[i>>2]=a+1;b[a>>0]=g}else{m=(n&63|128)&255;if((g&65535)<2048){a=f[i>>2]|0;if((h-a|0)<2){a=1;break a}f[i>>2]=a+1;b[a>>0]=n>>>6|192;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=m;break}k=(n>>>12|224)&255;l=(n>>>6&63|128)&255;if((g&65535)<55296){a=f[i>>2]|0;if((h-a|0)<3){a=1;break a}f[i>>2]=a+1;b[a>>0]=k;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=l;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=m;break}if((g&65535)>=56320){if((g&65535)<57344){a=2;break a}a=f[i>>2]|0;if((h-a|0)<3){a=1;break a}f[i>>2]=a+1;b[a>>0]=k;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=l;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=m;break}if((o-a|0)<4){a=1;break a}a=a+2|0;g=j[a>>1]|0;if((g&64512|0)!=56320){a=2;break a}if((h-(f[i>>2]|0)|0)<4){a=1;break a}k=n&960;if(((k<<10)+65536|0)>>>0>1114111){a=2;break a}f[e>>2]=a;l=(k>>>6)+1|0;m=f[i>>2]|0;f[i>>2]=m+1;b[m>>0]=l>>>2|240;m=f[i>>2]|0;f[i>>2]=m+1;b[m>>0]=n>>>2&15|l<<4&48|128;m=f[i>>2]|0;f[i>>2]=m+1;b[m>>0]=n<<4&48|g>>>6&15|128;n=f[i>>2]|0;f[i>>2]=n+1;b[n>>0]=g&63|128}while(0);a=(f[e>>2]|0)+2|0;f[e>>2]=a}return a|0}function Al(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+16|0;h=k+8|0;g=k+4|0;i=k;f[g>>2]=b;j=nqa(a+144|0)|0;if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,20314)|0;b=0;while(1){if((b|0)==(d|0))break;if(b|0)Vea(76684,72307)|0;m=Vea(76684,19994)|0;l=EN(74808,c+(b<<2)|0)|0;Vea(vj(m,f[l>>2]|0)|0,72132)|0;b=b+1|0}if(!d)Vea(76684,64313)|0;Vea(76684,19863)|0;m=qN(j)|0;m=Vea(vj(Vea(76684,20007)|0,m)|0,20438)|0;b=EN(74808,g)|0;Vea(Vea(Vea(vj(Vea(vj(m,f[b>>2]|0)|0,20488)|0,d)|0,20310)|0,e)|0,20502)|0;Vea(76684,19947)|0;b=f[g>>2]|0}f[j+28>>2]=b;g=j+8|0;b=0;while(1){if((b|0)==(d|0))break;AW(g,f[c+(b<<2)>>2]|0);b=b+1|0}dCa(h,e);m=f[h>>2]|0;f[j+24>>2]=m;f[i>>2]=m;f[h>>2]=f[i>>2];m=(UX(a,h)|0)+4|0;f[j+4>>2]=f[m>>2];u=k;return j|0}function Bl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+16|0;n=s;a:do if(!(bDa(c,-1)|0)){o=a+12|0;p=a+8|0;q=(f[o>>2]|0)-(f[p>>2]|0)|0;r=a+24|0;e=f[r>>2]|0;l=a+28|0;g=f[l>>2]|0;d=a+32|0;m=a+44|0;do if((e|0)==(g|0)){h=a+48|0;if(!(f[h>>2]&16)){d=-1;break a}k=a+20|0;j=f[k>>2]|0;i=e-j|0;j=(f[m>>2]|0)-j|0;y=0;ja(82,d|0,0);g=y;y=0;if(!(g&1)){e=d+11|0;if((b[e>>0]|0)<0)g=(f[a+40>>2]&2147483647)+-1|0;else g=10;y=0;ja(83,d|0,g|0);g=y;y=0;if(!(g&1)){e=b[e>>0]|0;if(e<<24>>24<0){g=f[d>>2]|0;e=f[a+36>>2]|0}else{g=d;e=e&255}t=g+e|0;f[k>>2]=g;f[l>>2]=t;k=g+i|0;f[r>>2]=k;e=g+j|0;f[m>>2]=e;i=m;g=t;break}}d=ab(0)|0;Ya(d|0)|0;_a();d=-1;break a}else{h=a+48|0;i=m;k=e;e=f[m>>2]|0}while(0);j=k+1|0;f[n>>2]=j;e=f[(j>>>0<e>>>0?m:n)>>2]|0;f[i>>2]=e;if(f[h>>2]&8|0){if((b[d+11>>0]|0)<0)d=f[d>>2]|0;f[p>>2]=d;f[o>>2]=d+q;f[a+16>>2]=e}d=c&255;if((k|0)==(g|0)){t=f[(f[a>>2]|0)+52>>2]|0;d=oHa(d)|0;d=Xb[t&255](a,d)|0;break}else{f[r>>2]=j;b[k>>0]=d;d=oHa(d)|0;break}}else d=Awa(c)|0;while(0);u=s;return d|0}function Cl(a,c,d,e,g,h,i,j,k,l,m,n){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0;p=k;a:do if((a|0)==(h|0))if(b[c>>0]|0){b[c>>0]=0;d=f[g>>2]|0;f[g>>2]=d+1;b[d>>0]=46;g=b[j+11>>0]|0;if(((g<<24>>24<0?f[j+4>>2]|0:g&255)|0)!=0?(o=f[l>>2]|0,(o-p|0)<160):0){k=f[m>>2]|0;f[l>>2]=o+4;f[o>>2]=k;k=0}else k=0}else k=-1;else{if((a|0)==(i|0)?(i=b[j+11>>0]|0,(i<<24>>24<0?f[j+4>>2]|0:i&255)|0):0){if(!(b[c>>0]|0)){k=-1;break}k=f[l>>2]|0;if((k-p|0)>=160){k=0;break}g=f[m>>2]|0;f[l>>2]=k+4;f[k>>2]=g;f[m>>2]=0;k=0;break}h=n+128|0;o=0;while(1){k=n+(o<<2)|0;if((o|0)==32){k=h;break}if((f[k>>2]|0)==(a|0))break;else o=o+1|0}o=k-n|0;k=o>>2;if((o|0)<=124){h=b[68313+k>>0]|0;switch(k|0){case 24:case 25:{k=f[g>>2]|0;if((k|0)!=(e|0)?(b[k+-1>>0]&95)!=(b[d>>0]&127):0){k=-1;break a}f[g>>2]=k+1;b[k>>0]=h;k=0;break a}case 23:case 22:{b[d>>0]=80;break}default:{k=h&95;if((((k|0)==(b[d>>0]|0)?(b[d>>0]=k|128,b[c>>0]|0):0)?(b[c>>0]=0,d=b[j+11>>0]|0,(d<<24>>24<0?f[j+4>>2]|0:d&255)|0):0)?(q=f[l>>2]|0,(q-p|0)<160):0){d=f[m>>2]|0;f[l>>2]=q+4;f[q>>2]=d}}}l=f[g>>2]|0;f[g>>2]=l+1;b[l>>0]=h;if((o|0)>84)k=0;else{f[m>>2]=(f[m>>2]|0)+1;k=0}}else k=-1}while(0);return k|0}function Dl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;k=c;j=o;n=a+11|0;e=b[n>>0]|0;g=e<<24>>24<0;if(g){i=(f[a+8>>2]&2147483647)+-1|0;m=f[a+4>>2]|0}else{i=10;m=e&255}l=d-k|0;do if(l|0){if(g){g=f[a>>2]|0;h=f[a+4>>2]|0}else{g=a;h=e&255}if(Eva(c,g,g+h|0)|0){f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;if(l>>>0>4294967279)JZ();if(l>>>0<11){b[j+11>>0]=l;g=j}else{n=l+16&-16;g=nV(n)|0;f[j>>2]=g;f[j+8>>2]=n|-2147483648;f[j+4>>2]=l}e=g;while(1){if((c|0)==(d|0))break;SBa(e,b[c>>0]|0);c=c+1|0;e=e+1|0}SBa(g+l|0,0);d=b[j+11>>0]|0;n=d<<24>>24<0;y=0;oa(37,a|0,(n?f[j>>2]|0:j)|0,(n?f[j+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){o=Pa()|0;zta(j);$a(o|0)}else{zta(j);break}}else{j=m+l|0;if((i-m|0)>>>0<l>>>0){ED(a,i,j-i|0,m,m);e=b[n>>0]|0}if(e<<24>>24<0)h=f[a>>2]|0;else h=a;g=d+(m-k)|0;e=h+m|0;while(1){if((c|0)==(d|0))break;SBa(e,b[c>>0]|0);e=e+1|0;c=c+1|0}SBa(h+g|0,0);if((b[n>>0]|0)<0){f[a+4>>2]=j;break}else{b[n>>0]=j;break}}}while(0);u=o;return a|0}function El(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;i=c+44|0;j=f[i>>2]|0;q=c+24|0;o=f[q>>2]|0;l=o;if(j>>>0<o>>>0){f[i>>2]=o;n=l}else n=j;m=h&24;a:do if((m|0)!=0?!((g|0)==1&(m|0)==24):0){m=(h&8|0)!=0;k=c+32|0;b:do switch(g|0){case 0:{i=0;j=0;break}case 1:if(m){j=(f[c+12>>2]|0)-(f[c+8>>2]|0)|0;i=j;j=((j|0)<0)<<31>>31;break b}else{j=l-(f[c+20>>2]|0)|0;i=j;j=((j|0)<0)<<31>>31;break b}case 2:{if((b[k+11>>0]|0)<0)i=f[k>>2]|0;else i=k;j=n-i|0;i=j;j=((j|0)<0)<<31>>31;break}default:{j=-1;i=-1;break a}}while(0);j=Hsa(i|0,j|0,d|0,e|0)|0;i=J;if((i|0)>=0){if((b[k+11>>0]|0)<0)k=f[k>>2]|0;e=n-k|0;d=((e|0)<0)<<31>>31;if(!((d|0)<(i|0)|(d|0)==(i|0)&e>>>0<j>>>0)){g=(h&16|0)!=0;do if((j|0)==0&(i|0)==0)if(m){l=c+12|0;k=0;p=26}else k=0;else if(m){k=c+12|0;if((f[k>>2]|0)==0|g&(o|0)==0){j=-1;i=-1;break a}l=k;k=j;p=26;break}else{if(g&(o|0)==0){j=-1;i=-1;break a}k=j;break}while(0);if((p|0)==26){f[l>>2]=(f[c+8>>2]|0)+k;f[c+16>>2]=n}if(g)f[q>>2]=(f[c+20>>2]|0)+k}else{j=-1;i=-1}}else{j=-1;i=-1}}else{j=-1;i=-1}while(0);q=a;f[q>>2]=0;f[q+4>>2]=0;a=a+8|0;f[a>>2]=j;f[a+4>>2]=i;return}function Fl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+64|0;j=m+48|0;n=m+8|0;k=m+4|0;l=m;i=a+20|0;TI(i);d=f[c+40>>2]|0;a=f[c+36>>2]|0;while(1){if((a|0)==(d|0))break;aj(i,f[a>>2]|0)|0;a=a+4|0}kca(n,c);XAa(n,1);y=0;ja(1509,n|0,i|0);h=y;y=0;do if(!(h&1)?(y=0,ia(341,n|0),h=y,y=0,!(h&1)):0){e=f[c+28>>2]|0;d=f[c+24>>2]|0;while(1){if((d|0)==(e|0))break;a=f[d>>2]|0;if(!(f[a+8>>2]|0)){y=0;a=ua(111,i|0,a+4|0)|0;h=y;y=0;if(h&1){g=13;break}b[a+9>>0]=1}d=d+4|0}if((g|0)==13){a=Pa()|0;break}g=f[c+80>>2]|0;e=f[c+76>>2]|0;a:while(1){if((e|0)==(g|0)){g=16;break}h=f[e+8>>2]|0;d=f[e+4>>2]|0;while(1){if((d|0)==(h|0))break;a=f[d>>2]|0;f[k>>2]=a;f[l>>2]=a;y=0;f[j>>2]=f[l>>2];a=ua(96,c|0,j|0)|0;o=y;y=0;if(o&1){g=24;break a}if(a|0){y=0;a=ua(111,i|0,k|0)|0;o=y;y=0;if(o&1){g=24;break a}b[a+9>>0]=1}d=d+4|0}e=e+16|0}if((g|0)==16){SY(n);u=m;return}else if((g|0)==24){a=Pa()|0;break}}else g=9;while(0);if((g|0)==9)a=Pa()|0;SY(n);$a(a|0)}function Gl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;j=u;u=u+32|0;d=j+16|0;e=j+12|0;k=j;i=Ura(f[a+4>>2]|0)|0;g=i+8|0;h=1;while(1){m=lj(c,h)|0;if(fIa(b[m>>0]|0)|0)break;m=Pe(a,lj(c,h)|0)|0;f[e>>2]=m;f[d>>2]=f[e>>2];eV(g,d);h=h+1|0}if(gKa(f[i+12>>2]|0)|0){e=efa(g)|0;f[i+24>>2]=f[e>>2];Fga(g);e=h+1|0;m=sra(a,lj(c,h)|0)|0;d=i+28|0;f[d>>2]=m;if(e>>>0<(lxa(c)|0)>>>0){f[i+32>>2]=f[d>>2];m=sra(a,lj(c,e)|0)|0;f[d>>2]=m}u=j;return i|0}h=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;g=uHa(53125)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[k+11>>0]=g;d=k}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=13;break}f[k>>2]=d;f[k+8>>2]=e|-2147483648;f[k+4>>2]=g}Pta(d,53125,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,k|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(k);if(e)l=15}else{y=0;za(3);y=0;l=13}while(0);if((l|0)==13){d=Pa()|0;l=15}if((l|0)==15)Oa(h|0);$a(d|0);return 0}function Hl(a,c,d,e,g,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;f[d>>2]=a;f[i>>2]=e;p=c;a:while(1){n=f[d>>2]|0;if(n>>>0>=c>>>0){a=0;break}if(e>>>0>=g>>>0){a=1;break}m=b[n>>0]|0;o=m&255;a=n+1|0;do if(m<<24>>24>-1)f[e>>2]=o;else{if((m&255)<194){a=2;break a}k=n+2|0;j=p-n|0;if((m&255)<224){if((j|0)<2){a=1;break a}a=h[a>>0]|0;if((a&192|0)!=128){a=2;break a}f[e>>2]=a&63|o<<6&1984;a=k;break}l=n+3|0;if((m&255)<240){if((j|0)<3){a=1;break a}j=b[k>>0]|0;k=h[a>>0]|0;a=k&224;switch(m<<24>>24){case -32:{if((a|0)!=160){a=2;break a}break}case -19:{if((a|0)!=128){a=2;break a}break}default:if((k&192|0)!=128){a=2;break a}}a=j&255;if((a&192|0)!=128){a=2;break a}f[e>>2]=k<<6&4032|o<<12&61440|a&63;a=l;break}if((m&255)>=245){a=2;break a}if((j|0)<4){a=1;break a}j=b[a>>0]|0;a=b[k>>0]|0;k=b[l>>0]|0;l=j&255;switch(m<<24>>24){case -16:{if((j+112&255)>=48){a=2;break a}break}case -12:{if((l&240|0)!=128){a=2;break a}break}default:if((l&192|0)!=128){a=2;break a}}j=a&255;if((j&192|0)!=128){a=2;break a}a=k&255;if((a&192|0)!=128){a=2;break a}a=l<<12&258048|o<<18&1835008|j<<6&4032|a&63;if(a>>>0>1114111){a=2;break a}f[e>>2]=a;a=n+4|0}while(0);f[d>>2]=a;e=(f[i>>2]|0)+4|0;f[i>>2]=e}return a|0}function Il(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;j=o+20|0;g=o+16|0;k=o+12|0;l=o+8|0;m=o+4|0;n=o;if(b[(f[a>>2]|0)+60>>0]|0){do if(b[a+12>>0]|0){c=Vea(76852,59492)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(j);jn(c,e)|0;Yp(c)|0;break}o=Pa()|0;pza(j);$a(o|0)}while(0);h=uW(a,9)|0;i=a+4|0;d=f[i>>2]|0;e=f[a>>2]|0;PDa(g,(f[e+80>>2]|0)-(f[e+76>>2]|0)>>4);Un(d,f[g>>2]|0)|0;d=f[a>>2]|0;e=f[d+80>>2]|0;d=f[d+76>>2]|0;while(1){if((d|0)==(e|0))break;p=f[i>>2]|0;PDa(k,0);Un(p,f[k>>2]|0)|0;XT(a,f[d>>2]|0);Zq(f[i>>2]|0,11)|0;p=f[i>>2]|0;c=d+4|0;g=d+8|0;PDa(l,(f[g>>2]|0)-(f[c>>2]|0)>>2);Un(p,f[l>>2]|0)|0;g=f[g>>2]|0;c=f[c>>2]|0;while(1){if((c|0)==(g|0))break;p=f[i>>2]|0;f[n>>2]=f[c>>2];f[j>>2]=f[n>>2];PDa(m,Up(a,j)|0);Un(p,f[m>>2]|0)|0;c=c+4|0}d=d+16|0}KE(a,h)}u=o;return}function Jl(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=u;u=u+16|0;c=g+12|0;h=g;d=a+16|0;e=f[d>>2]|0;if(e|0){Yn(e,c)|0;switch(b[c>>0]|0){case 34:{f[a+20>>2]=0;break}case 44:{l=a+20|0;m=(yi(f[d>>2]|0)|0)+(f[l>>2]|0)|0;j=a+24|0;k=(yi(f[d>>2]|0)|0)+(f[j>>2]|0)|0;e=a+28|0;c=(yi(f[d>>2]|0)|0)+(f[e>>2]|0)|0;i=a+32|0;h=(yi(f[d>>2]|0)|0)+(f[i>>2]|0)|0;f[l>>2]=m;f[j>>2]=k;f[e>>2]=c;f[i>>2]=h;break}default:{e=zb(12)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(57083)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[h+11>>0]=d;a=h}else{c=d+16&-16;y=0;a=la(150,c|0)|0;m=y;y=0;if(m&1){i=12;break}f[h>>2]=a;f[h+8>>2]=c|-2147483648;f[h+4>>2]=d}Pta(a,57083,d)|0;SBa(a+d|0,0);y=0;ja(2001,e|0,h|0);m=y;y=0;if(m&1)c=1;else{y=0;ya(79,e|0,4016,384);y=0;c=0}a=Pa()|0;zta(h);if(c)i=14}else{y=0;za(3);y=0;i=12}while(0);if((i|0)==12){a=Pa()|0;i=14}if((i|0)==14)Oa(e|0);$a(a|0)}}}u=g;return}function Kl(){IFa();uFa();oFa();mFa();kFa();iFa();dFa();bFa();fHa();eHa();dHa();cHa();bHa();aHa();$Ga();_Ga();rFa();ZGa();qFa();pFa();YGa();XGa();WGa();VGa();UGa();TGa();SGa();RGa();QGa();PGa();OGa();NGa();MGa();LGa();KGa();JGa();IGa();HGa();GGa();FGa();EGa();DGa();CGa();BGa();AGa();zGa();yGa();xGa();wGa();vGa();uGa();pGa();oGa();nGa();mGa();lGa();kGa();jGa();iGa();hGa();gGa();fGa();eGa();dGa();cGa();bGa();aGa();$Fa();_Fa();ZFa();YFa();XFa();WFa();VFa();UFa();TFa();SFa();RFa();QFa();PFa();OFa();NFa();MFa();LFa();KFa();JFa();nxa();Yva();Xva();IJa();return}function Ll(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+48|0;i=l+24|0;j=l+12|0;k=l;h=fc(a,c,d)|0;a:do if((h|0)!=(a|0)?(g=d+4|0,e=f[g>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(k,e+-24|0);y=0;oa(77,k|0,0,72356)|0;d=y;y=0;do if(d&1)a=Pa()|0;else{f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,j|0,72083)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(j);break}f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;e=a+-24|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-20>>2]=0;a=e}else{SBa(e,0);b[c>>0]=0;a=e}Sq(e);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}zta(i);zta(j);zta(k);a=h;break a}while(0);zta(k);$a(a|0)}while(0);u=l;return a|0}function Ml(){var a=0,c=0;if((b[74176]|0)==0?twa(74176)|0:0){c=78780;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=79068);tb(397,0,x|0)|0}Sga(78780,15800)|0;Sga(78792,15832)|0;Sga(78804,15868)|0;Sga(78816,15892)|0;Sga(78828,15916)|0;Sga(78840,15932)|0;Sga(78852,15952)|0;Sga(78864,15972)|0;Sga(78876,16e3)|0;Sga(78888,16040)|0;Sga(78900,16072)|0;Sga(78912,16108)|0;Sga(78924,16144)|0;Sga(78936,16160)|0;Sga(78948,16176)|0;Sga(78960,16192)|0;Sga(78972,15916)|0;Sga(78984,16208)|0;Sga(78996,16224)|0;Sga(79008,16240)|0;Sga(79020,16256)|0;Sga(79032,16272)|0;Sga(79044,16288)|0;Sga(79056,16304)|0;return}function Nl(){var a=0,c=0;if((b[74096]|0)==0?twa(74096)|0:0){c=77968;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=78256);tb(393,0,x|0)|0}Tga(77968,68832)|0;Tga(77980,68840)|0;Tga(77992,68849)|0;Tga(78004,68855)|0;Tga(78016,68861)|0;Tga(78028,68865)|0;Tga(78040,68870)|0;Tga(78052,68875)|0;Tga(78064,68882)|0;Tga(78076,68892)|0;Tga(78088,68900)|0;Tga(78100,68909)|0;Tga(78112,68918)|0;Tga(78124,68922)|0;Tga(78136,68926)|0;Tga(78148,68930)|0;Tga(78160,68861)|0;Tga(78172,68934)|0;Tga(78184,68938)|0;Tga(78196,68942)|0;Tga(78208,68946)|0;Tga(78220,68950)|0;Tga(78232,68954)|0;Tga(78244,68958)|0;return}function Ol(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;k=l+4|0;h=l;a:do if(!(f[d+4>>2]&1)){j=f[(f[a>>2]|0)+24>>2]|0;f[h>>2]=f[c>>2];f[k>>2]=f[h>>2];a=Yb[j&31](a,k,d,e,g&1)|0}else{Axa(k,d);y=0;a=ua(46,f[k>>2]|0,77572)|0;i=y;y=0;do if(!(i&1)){pza(k);d=f[a>>2]|0;if(g)Mb[f[d+24>>2]&4095](k,a);else Mb[f[d+28>>2]&4095](k,a);i=k+11|0;a=b[i>>0]|0;if(a<<24>>24<0){d=a;a=f[k>>2]|0;j=9}else g=k;while(1){if((j|0)==9){g=a;a=d}j=a<<24>>24<0;if((g|0)==((j?f[k>>2]|0:k)+(j?f[k+4>>2]|0:a&255)|0)){j=11;break}a=b[g>>0]|0;d=f[c>>2]|0;if(d|0){e=d+24|0;h=f[e>>2]|0;if((h|0)==(f[d+28>>2]|0)){j=f[(f[d>>2]|0)+52>>2]|0;a=oHa(a)|0;y=0;a=ua(j|0,d|0,a|0)|0;j=y;y=0;if(j&1){j=20;break}}else{f[e>>2]=h+1;b[h>>0]=a;a=oHa(a)|0}if(bDa(a,-1)|0)f[c>>2]=0}d=b[i>>0]|0;a=g+1|0;j=9}if((j|0)==11){a=f[c>>2]|0;zta(k);break a}else if((j|0)==20){a=Pa()|0;zta(k);break}}else{a=Pa()|0;pza(k)}while(0);$a(a|0)}while(0);u=l;return a|0}function Pl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=u;u=u+32|0;n=r+16|0;o=r+8|0;k=r+4|0;l=r;e=a+52|0;p=a+48|0;if(b[e>>0]|0){d=f[p>>2]|0;if(c){f[p>>2]=-1;b[e>>0]=0}}else{d=f[a+44>>2]|0;d=(d|0)>1?d:1;m=a+32|0;e=0;while(1){if((e|0)>=(d|0)){q=8;break}g=zR(f[m>>2]|0)|0;if((g|0)==-1){d=-1;break}b[n+e>>0]=g;e=e+1|0}if((q|0)==8){do if(!(b[a+53>>0]|0)){j=a+40|0;h=a+36|0;i=o+1|0;a:while(1){s=f[j>>2]|0;g=s;e=f[g>>2]|0;g=f[g+4>>2]|0;t=f[h>>2]|0;a=n+d|0;switch(bc[f[(f[t>>2]|0)+16>>2]&15](t,s,n,a,k,o,i,l)|0){case 3:{q=15;break a}case 2:{q=17;break a}case 1:break;default:break a}t=f[j>>2]|0;f[t>>2]=e;f[t+4>>2]=g;if((d|0)==8){q=17;break}e=zR(f[m>>2]|0)|0;if((e|0)==-1){q=17;break}b[a>>0]=e;d=d+1|0}if((q|0)==15)b[o>>0]=b[n>>0]|0;else if((q|0)==17){d=-1;break}q=18}else{b[o>>0]=b[n>>0]|0;q=18}while(0);b:do if((q|0)==18){if(c){d=b[o>>0]|0;t=oHa(d)|0;f[p>>2]=t}else{while(1){if((d|0)<=0)break;d=d+-1|0;t=oHa(b[n+d>>0]|0)|0;if((jP(t,f[m>>2]|0)|0)==-1){d=-1;break b}}d=b[o>>0]|0}d=oHa(d)|0}while(0)}}u=r;return d|0}function Ql(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;h=a+12|0;do if(b[h>>0]|0){d=Vea(76852,55619)|0;l=a+132|0;e=(f[l>>2]|0)+1|0;f[l>>2]=e;e=Vea(wj(d,e)|0,55636)|0;d=f[a+4>>2]|0;d=vj(e,(f[d+4>>2]|0)-(f[d>>2]|0)|0)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(d,g)|0;Yp(d)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);gz(a,f[c>>2]|0);do if(b[h>>0]|0){l=Vea(76852,55748)|0;h=a+132|0;c=f[h>>2]|0;f[h>>2]=c+-1;c=Vea(wj(l,c)|0,55636)|0;a=f[a+4>>2]|0;a=vj(c,(f[a+4>>2]|0)-(f[a>>2]|0)|0)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,j=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,l=y,y=0,!(l&1)):0){pza(i);jn(a,j)|0;Yp(a)|0;break}l=Pa()|0;pza(i);$a(l|0)}while(0);u=k;return}function Rl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+96|0;c=o+32|0;g=o+76|0;h=o+72|0;i=o+80|0;n=o+60|0;j=o+48|0;k=o+16|0;l=o;e=f[a+36>>2]|0;gKa(e)|0;VBa(g,e);cJa(h);e=b+4|0;switch(f[e>>2]|0){case 1:{d=75852;m=5;break}case 2:break;case 3:{d=75844;m=5;break}case 4:{d=75840;m=5;break}default:Ka()}do if((m|0)==5){m=f[d>>2]|0;f[h>>2]=m;f[i>>2]=m;h=a+44|0;m=f[h>>2]|0;f[h>>2]=m+1;uAa(k,m);f[c>>2]=f[k>>2];f[c+4>>2]=f[k+4>>2];f[c+8>>2]=f[k+8>>2];f[c+12>>2]=f[k+12>>2];m=FO(g,c)|0;f[j>>2]=m;uAa(l,f[b+8>>2]|0);f[c>>2]=f[l>>2];f[c+4>>2]=f[l+4>>2];f[c+8>>2]=f[l+8>>2];f[c+12>>2]=f[l+12>>2];m=FO(g,c)|0;f[j+4>>2]=m;f[j+8>>2]=b;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;y=0;ja(179,n|0,3);m=y;y=0;if(m&1){o=Pa()|0;E4(n);$a(o|0)}aZ(n,j,j+12|0);m=f[e>>2]|0;y=0;f[c>>2]=f[i>>2];c=xa(16,g|0,c|0,n|0,m|0)|0;m=y;y=0;if(m&1){o=Pa()|0;E4(n);$a(o|0)}else{jva(f[a+16>>2]|0,c)|0;E4(n);break}}while(0);u=o;return}function Sl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;a:do if(b){if(b>>>0>1073741823){c=zb(8)|0;y=0;ja(76,c|0,70649);a=y;y=0;if(a&1){a=Pa()|0;Oa(c|0);$a(a|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}l=nV(b<<2)|0;c=f[a>>2]|0;f[a>>2]=l;if(c|0)$Ja(c);f[d>>2]=b;c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}e=a+8|0;c=f[e>>2]|0;if(c|0){d=f[c+4>>2]|0;k=b+-1|0;l=(k&b|0)==0;if(!l){if(d>>>0>=b>>>0)d=(d>>>0)%(b>>>0)|0}else d=d&k;f[(f[a>>2]|0)+(d<<2)>>2]=e;while(1){j=c;b:while(1)while(1){c=f[j>>2]|0;if(!c)break a;e=f[c+4>>2]|0;if(!l){if(e>>>0>=b>>>0)e=(e>>>0)%(b>>>0)|0}else e=e&k;if((e|0)==(d|0)){j=c;continue b}g=(f[a>>2]|0)+(e<<2)|0;if(!(f[g>>2]|0))break b;h=c+8|0;i=c;while(1){g=f[i>>2]|0;if(!g){g=0;break}if(fxa(f[h>>2]|0,f[g+8>>2]|0)|0)i=g;else{m=30;break}}if((m|0)==30)m=0;f[j>>2]=g;f[i>>2]=f[f[(f[a>>2]|0)+(e<<2)>>2]>>2];f[f[(f[a>>2]|0)+(e<<2)>>2]>>2]=c}f[g>>2]=j;d=e}}}else{c=f[a>>2]|0;f[a>>2]=0;if(c|0)$Ja(c);f[d>>2]=0}while(0);return}function Tl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+80|0;d=h+48|0;e=h+24|0;g=h;NM(d,b,f[c+8>>2]|0);if(!(FBa(d)|0)){NM(e,b,f[c+12>>2]|0);if(!(FBa(e)|0)){NM(g,b,f[c+16>>2]|0);if(FBa(g)|0){f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}else{g=(csa(g)|0)!=0;g=g?d:e;f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];f[a+16>>2]=f[g+16>>2];f[a+20>>2]=f[g+20>>2]}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=h;return}function Ul(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;a:do if(b){if(b>>>0>1073741823){c=zb(8)|0;y=0;ja(76,c|0,70649);a=y;y=0;if(a&1){a=Pa()|0;Oa(c|0);$a(a|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}l=nV(b<<2)|0;c=f[a>>2]|0;f[a>>2]=l;if(c|0)$Ja(c);f[d>>2]=b;c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}e=a+8|0;c=f[e>>2]|0;if(c|0){d=f[c+4>>2]|0;k=b+-1|0;l=(k&b|0)==0;if(!l){if(d>>>0>=b>>>0)d=(d>>>0)%(b>>>0)|0}else d=d&k;f[(f[a>>2]|0)+(d<<2)>>2]=e;while(1){j=c;b:while(1)while(1){c=f[j>>2]|0;if(!c)break a;e=f[c+4>>2]|0;if(!l){if(e>>>0>=b>>>0)e=(e>>>0)%(b>>>0)|0}else e=e&k;if((e|0)==(d|0)){j=c;continue b}g=(f[a>>2]|0)+(e<<2)|0;if(!(f[g>>2]|0))break b;h=c+8|0;i=c;while(1){g=f[i>>2]|0;if(!g){g=0;break}if(Eza(f[h>>2]|0,f[g+8>>2]|0)|0)i=g;else{m=30;break}}if((m|0)==30)m=0;f[j>>2]=g;f[i>>2]=f[f[(f[a>>2]|0)+(e<<2)>>2]>>2];f[f[(f[a>>2]|0)+(e<<2)>>2]>>2]=c}f[g>>2]=j;d=e}}}else{c=f[a>>2]|0;f[a>>2]=0;if(c|0)$Ja(c);f[d>>2]=0}while(0);return}function Vl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+96|0;c=o+32|0;e=o+76|0;g=o+72|0;h=o+80|0;n=o+60|0;i=o+48|0;j=o+16|0;k=o;m=f[a+36>>2]|0;gKa(m)|0;VBa(e,m);cJa(g);m=b+12|0;switch(f[(f[m>>2]|0)+4>>2]|0){case 1:{d=75836;l=5;break}case 5:case 2:break;case 3:{d=75828;l=5;break}case 4:{d=75824;l=5;break}default:Ka()}do if((l|0)==5){l=f[d>>2]|0;f[g>>2]=l;f[h>>2]=l;g=a+44|0;l=f[g>>2]|0;f[g>>2]=l+1;uAa(j,l);f[c>>2]=f[j>>2];f[c+4>>2]=f[j+4>>2];f[c+8>>2]=f[j+8>>2];f[c+12>>2]=f[j+12>>2];l=FO(e,c)|0;f[i>>2]=l;uAa(k,f[b+8>>2]|0);f[c>>2]=f[k>>2];f[c+4>>2]=f[k+4>>2];f[c+8>>2]=f[k+8>>2];f[c+12>>2]=f[k+12>>2];l=FO(e,c)|0;f[i+4>>2]=l;f[i+8>>2]=f[m>>2];f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;y=0;ja(179,n|0,3);l=y;y=0;if(l&1){o=Pa()|0;E4(n);$a(o|0)}aZ(n,i,i+12|0);l=f[(f[m>>2]|0)+4>>2]|0;y=0;f[c>>2]=f[h>>2];c=xa(16,e|0,c|0,n|0,l|0)|0;l=y;y=0;if(l&1){o=Pa()|0;E4(n);$a(o|0)}else{f[m>>2]=c;E4(n);break}}while(0);u=o;return}function Wl(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+64|0;i=m+40|0;j=m+12|0;k=m+24|0;l=m;a:do if((c-a|0)>3?(b[a>>0]|0)==68:0){switch(b[a+1>>0]|0){case 84:case 116:break;default:break a}n=a+2|0;g=fc(n,c,d)|0;if((!((g|0)==(n|0)|(g|0)==(c|0))?(b[g>>0]|0)==69:0)?(h=d+4|0,e=f[h>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(l,e+-24|0);y=0;oa(77,l|0,0,73401)|0;n=y;y=0;do if(n&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,k|0,72083)|0;n=y;y=0;if(n&1){a=Pa()|0;zta(k);break}f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}hM(i,j);nu((f[h>>2]|0)+-24|0,i);Xka(i);zta(j);zta(k);zta(l);a=g+1|0;break a}while(0);zta(l);$a(a|0)}}while(0);u=m;return a|0}function Xl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;a:do if(b){if(b>>>0>1073741823){c=zb(8)|0;y=0;ja(76,c|0,70649);a=y;y=0;if(a&1){a=Pa()|0;Oa(c|0);$a(a|0)}else{f[c>>2]=18216;ub(c|0,5816,318)}}l=nV(b<<2)|0;c=f[a>>2]|0;f[a>>2]=l;if(c|0)$Ja(c);f[d>>2]=b;c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}e=a+8|0;c=f[e>>2]|0;if(c|0){d=f[c+4>>2]|0;k=b+-1|0;l=(k&b|0)==0;if(!l){if(d>>>0>=b>>>0)d=(d>>>0)%(b>>>0)|0}else d=d&k;f[(f[a>>2]|0)+(d<<2)>>2]=e;while(1){j=c;b:while(1)while(1){c=f[j>>2]|0;if(!c)break a;e=f[c+4>>2]|0;if(!l){if(e>>>0>=b>>>0)e=(e>>>0)%(b>>>0)|0}else e=e&k;if((e|0)==(d|0)){j=c;continue b}g=(f[a>>2]|0)+(e<<2)|0;if(!(f[g>>2]|0))break b;h=c+8|0;i=c;while(1){g=f[i>>2]|0;if(!g){g=0;break}if(bDa(f[h>>2]|0,f[g+8>>2]|0)|0)i=g;else{m=30;break}}if((m|0)==30)m=0;f[j>>2]=g;f[i>>2]=f[f[(f[a>>2]|0)+(e<<2)>>2]>>2];f[f[(f[a>>2]|0)+(e<<2)>>2]>>2]=c}f[g>>2]=j;d=e}}}else{c=f[a>>2]|0;f[a>>2]=0;if(c|0)$Ja(c);f[d>>2]=0}while(0);return}function Yl(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+48|0;h=j+20|0;i=j;d=Pqa(c)|0;g=a+136|0;f[g>>2]=d;e=a+172|0;WO(e,Y(d,d)|0);e=f[e>>2]|0;d=(f[a+176>>2]|0)-e|0;while(1){if((d|0)<=0)break;k=e;b[k>>0]=0;d=d+-1|0;e=k+1|0}e=a+184|0;EO(e,f[g>>2]|0);e=f[e>>2]|0;d=(f[a+188>>2]|0)-e>>2;while(1){if((d|0)<=0)break;k=e;f[k>>2]=0;d=d+-1|0;e=k+4|0}k=a+16|0;Xx(k,c);me(h,k);k=a+152|0;Jv(k,h);Sma(h);Nh(i,k);Rn(f[a+56>>2]|0,f[a+60>>2]|0,i);Sma(i);xw(a);ld(a);xl(a);f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;y=0;ja(f[(f[a>>2]|0)+28>>2]|0,a|0,h|0);k=y;y=0;if(!(k&1)?(y=0,ja(1941,a|0,h|0),k=y,y=0,!(k&1)):0){E4(h);u=j;return}k=Pa()|0;E4(h);$a(k|0)}function Zl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{d=(f[c>>2]|0)+(4-1)&~(4-1);b=f[d>>2]|0;f[c>>2]=d+4;f[a>>2]=b;break a}case 10:{d=(f[c>>2]|0)+(4-1)&~(4-1);b=f[d>>2]|0;f[c>>2]=d+4;d=a;f[d>>2]=b;f[d+4>>2]=((b|0)<0)<<31>>31;break a}case 11:{d=(f[c>>2]|0)+(4-1)&~(4-1);b=f[d>>2]|0;f[c>>2]=d+4;d=a;f[d>>2]=b;f[d+4>>2]=0;break a}case 12:{d=(f[c>>2]|0)+(8-1)&~(8-1);b=d;e=f[b>>2]|0;b=f[b+4>>2]|0;f[c>>2]=d+8;d=a;f[d>>2]=e;f[d+4>>2]=b;break a}case 13:{e=(f[c>>2]|0)+(4-1)&~(4-1);d=f[e>>2]|0;f[c>>2]=e+4;d=(d&65535)<<16>>16;e=a;f[e>>2]=d;f[e+4>>2]=((d|0)<0)<<31>>31;break a}case 14:{e=(f[c>>2]|0)+(4-1)&~(4-1);d=f[e>>2]|0;f[c>>2]=e+4;e=a;f[e>>2]=d&65535;f[e+4>>2]=0;break a}case 15:{e=(f[c>>2]|0)+(4-1)&~(4-1);d=f[e>>2]|0;f[c>>2]=e+4;d=(d&255)<<24>>24;e=a;f[e>>2]=d;f[e+4>>2]=((d|0)<0)<<31>>31;break a}case 16:{e=(f[c>>2]|0)+(4-1)&~(4-1);d=f[e>>2]|0;f[c>>2]=e+4;e=a;f[e>>2]=d&255;f[e+4>>2]=0;break a}case 17:{e=(f[c>>2]|0)+(8-1)&~(8-1);g=+p[e>>3];f[c>>2]=e+8;p[a>>3]=g;break a}case 18:{e=(f[c>>2]|0)+(8-1)&~(8-1);g=+p[e>>3];f[c>>2]=e+8;p[a>>3]=g;break a}default:break a}while(0);while(0);return}function _l(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=u;u=u+32|0;n=r+16|0;o=r+8|0;k=r+4|0;l=r;e=a+52|0;p=a+48|0;if(b[e>>0]|0){d=f[p>>2]|0;if(c){f[p>>2]=-1;b[e>>0]=0}}else{d=f[a+44>>2]|0;d=(d|0)>1?d:1;m=a+32|0;e=0;while(1){if((e|0)>=(d|0)){q=8;break}g=zR(f[m>>2]|0)|0;if((g|0)==-1){d=-1;break}b[n+e>>0]=g;e=e+1|0}if((q|0)==8){do if(!(b[a+53>>0]|0)){j=a+40|0;h=a+36|0;i=o+4|0;a:while(1){s=f[j>>2]|0;g=s;e=f[g>>2]|0;g=f[g+4>>2]|0;t=f[h>>2]|0;a=n+d|0;switch(bc[f[(f[t>>2]|0)+16>>2]&15](t,s,n,a,k,o,i,l)|0){case 3:{q=15;break a}case 2:{q=17;break a}case 1:break;default:break a}t=f[j>>2]|0;f[t>>2]=e;f[t+4>>2]=g;if((d|0)==8){q=17;break}e=zR(f[m>>2]|0)|0;if((e|0)==-1){q=17;break}b[a>>0]=e;d=d+1|0}if((q|0)==15)f[o>>2]=b[n>>0];else if((q|0)==17){d=-1;break}q=18}else{f[o>>2]=b[n>>0];q=18}while(0);b:do if((q|0)==18){if(c){d=f[o>>2]|0;t=gKa(d)|0;f[p>>2]=t}else{while(1){if((d|0)<=0)break;d=d+-1|0;t=gKa(b[n+d>>0]|0)|0;if((jP(t,f[m>>2]|0)|0)==-1){d=-1;break b}}d=f[o>>2]|0}d=gKa(d)|0}while(0)}}u=r;return d|0}function $l(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=b+12|0;k=b+16|0;j=gKa(f[k>>2]|0)|0;h=j+-1|0;i=b+4|0;m=a+44|0;e=0;g=0;while(1){if(g>>>0>=j>>>0){c=20;break}d=bga(l,g)|0;d=f[d>>2]|0;if((g|0)==(h|0))c=rCa(f[i>>2]|0)|0;else c=0;c=Oe(a,d,c)|0;if(c){if((c|0)!=(d|0)){Cy(m,d,c);d=bga(l,g)|0;f[d>>2]=c}if((e|0)>0){n=bga(l,g)|0;n=f[n>>2]|0;d=g-e|0;c=bga(l,d)|0;f[c>>2]=n;c=bga(l,g)|0;f[c>>2]=0}else d=g-e|0;n=bga(l,d)|0;if(g>>>0<h>>>0?(f[(f[n>>2]|0)+4>>2]|0)==5:0){c=13;break}else c=e}else{M2(m,d);c=e+1|0}e=c;g=g+1|0}if((c|0)==13){d=d+1|0;c=d;while(1){if(c>>>0>=(gKa(f[k>>2]|0)|0)>>>0)break;e=bga(l,c)|0;e=f[e>>2]|0;if(e|0)M2(m,e);c=c+1|0}lU(l,d);xN(m,b)}else if((c|0)==20?(e|0)>0:0){lU(l,j-e|0);xN(m,b)}g1(a,yp(b,a)|0)|0;return}function am(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;e=u;u=u+16|0;h=e;d=rr(lj(c,0)|0)|0;if(bDa(d,f[18756]|0)|0)hc(a,c);do if(QK(c)|0){if(bDa(d,f[18763]|0)|0){jc(a,c,1);break}if(bDa(d,f[18829]|0)|0){sc(a,c,1);break}if(bDa(d,f[18755]|0)|0){Nc(a,c,1);break}if(bDa(d,f[18760]|0)|0){Qc(a,c,1);break}g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(53686)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;a=h}else{d=e+16&-16;y=0;a=la(150,d|0)|0;j=y;y=0;if(j&1){i=20;break}f[h>>2]=a;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(a,53686,e)|0;SBa(a+e|0,0);y=0;Ca(79,g|0,h|0,f[c+28>>2]|0,f[c+32>>2]|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}a=Pa()|0;zta(h);if(d)i=22}else{y=0;za(3);y=0;i=20}while(0);if((i|0)==20){a=Pa()|0;i=22}if((i|0)==22)Oa(g|0);$a(a|0)}while(0);u=e;return}function bm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=nAa(b)|0;a:do if(!c){e=eAa(b)|0;if(!e){c=xAa(b)|0;if(!c){c=YAa(b)|0;if(!c)break;if((f[c+4>>2]|0)!=1)break;e=c+12|0;d=bm(a,f[e>>2]|0)|0;f[e>>2]=d;e=c+16|0;a=bm(a,f[e>>2]|0)|0;f[e>>2]=a;return b|0}else{if((f[c+4>>2]|0)!=1)break;d=c+12|0;if(!(gKa(f[c+16>>2]|0)|0))break;e=efa(d)|0;e=bm(a,f[e>>2]|0)|0;a=efa(d)|0;f[a>>2]=e;return b|0}}else{c=e+12|0;switch(f[e+8>>2]|0){case 8:{d=bm(a,f[c>>2]|0)|0;f[c>>2]=d;d=e+16|0;c=bm(a,f[d>>2]|0)|0;f[d>>2]=c;break}case 16:{d=pAa(f[e+16>>2]|0)|0;if(d|0?(csa(d+8|0)|0)==0:0){b=f[c>>2]|0;break a}break}default:{}}c=$F(e)|0;if(!c)break;b=GG(a,c,Bja(e)|0)|0;break}}else if(((f[c+8>>2]|0)==20?(d=nAa(f[c+12>>2]|0)|0,(d|0)!=0):0)?(f[d+8>>2]|0)==20:0)b=f[d+12>>2]|0;while(0);return b|0}function cm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=a+4|0;g=b;do if((k|0)!=(b|0)?(j=f[e>>2]|0,h=f[b+16>>2]|0,!(Iva(j,h)|0)):0){if(Iva(h,j)|0){i=1;h=g}else{f[c>>2]=g;f[d>>2]=g;b=d;break}while(1){if((i|0)<=0)break;d=h;h=f[d+4>>2]|0;a:do if(!h)while(1){h=f[d+8>>2]|0;if((f[h>>2]|0)==(d|0))break a;d=h}else while(1){d=f[h>>2]|0;if(!d)break;else h=d}while(0);i=i+-1|0}d=h;if((d|0)!=(k|0)?!(Iva(j,f[h+16>>2]|0)|0):0){b=wx(a,c,e)|0;break}b=b+4|0;if(!(f[b>>2]|0)){f[c>>2]=g;break}else{f[c>>2]=d;b=d;break}}else l=3;while(0);do if((l|0)==3){d=f[b>>2]|0;if((f[a>>2]|0)!=(b|0)){if(!d){h=b;while(1){g=f[h+8>>2]|0;if((f[g>>2]|0)==(h|0))h=g;else break}}else{g=d;while(1){h=f[g+4>>2]|0;if(!h)break;else g=h}}if(!(Iva(f[g+16>>2]|0,f[e>>2]|0)|0)){b=wx(a,c,e)|0;break}}if(!d){f[c>>2]=b;break}else{b=g;f[c>>2]=b;b=b+4|0;break}}while(0);return b|0}
function rf(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;t=u;u=u+16|0;k=t+12|0;j=t+8|0;r=t+4|0;s=t;f[g>>2]=0;Axa(k,e);y=0;l=ua(46,f[k>>2]|0,77556)|0;q=y;y=0;if(q&1){v=Pa()|0;pza(k);$a(v|0)}pza(k);m=h+16|0;n=h+8|0;o=h+20|0;p=h+24|0;q=a+8|0;do switch(i<<24>>24|0){case 65:case 97:{qM(a,p,c,f[d>>2]|0,g,l);v=28;break}case 104:case 66:case 98:{VL(a,m,c,f[d>>2]|0,g,l);v=28;break}case 99:{i=Ob[f[(f[q>>2]|0)+12>>2]&255](q)|0;v=b[i+11>>0]|0;s=v<<24>>24<0;r=s?f[i>>2]|0:i;v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,r,r+(s?f[i+4>>2]|0:v&255)|0)|0;f[c>>2]=v;v=28;break}case 101:case 100:{LS(h+12|0,c,f[d>>2]|0,g,l);v=28;break}case 68:{v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,69047,69055)|0;f[c>>2]=v;v=28;break}case 70:{v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,69055,69063)|0;f[c>>2]=v;v=28;break}case 72:{yT(n,c,f[d>>2]|0,g,l);v=28;break}case 73:{pS(n,c,f[d>>2]|0,g,l);v=28;break}case 106:{MS(h+28|0,c,f[d>>2]|0,g,l);v=28;break}case 109:{VS(m,c,f[d>>2]|0,g,l);v=28;break}case 77:{qT(h+4|0,c,f[d>>2]|0,g,l);v=28;break}case 116:case 110:{Wk(c,f[d>>2]|0,g,l);v=28;break}case 112:{ny(a,n,c,f[d>>2]|0,g,l);v=28;break}case 114:{v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,69063,69074)|0;f[c>>2]=v;v=28;break}case 82:{v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,69074,69079)|0;f[c>>2]=v;v=28;break}case 83:{pT(h,c,f[d>>2]|0,g,l);v=28;break}case 84:{v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,69079,69087)|0;f[c>>2]=v;v=28;break}case 119:{oT(p,c,f[d>>2]|0,g,l);v=28;break}case 120:{i=f[(f[a>>2]|0)+20>>2]|0;f[r>>2]=f[c>>2];f[s>>2]=f[d>>2];f[j>>2]=f[r>>2];f[k>>2]=f[s>>2];j=Nb[i&63](a,j,k,e,g,h)|0;break}case 88:{i=Ob[f[(f[q>>2]|0)+24>>2]&255](q)|0;v=b[i+11>>0]|0;s=v<<24>>24<0;r=s?f[i>>2]|0:i;v=Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,r,r+(s?f[i+4>>2]|0:v&255)|0)|0;f[c>>2]=v;v=28;break}case 121:{DQ(o,c,f[d>>2]|0,g,l);v=28;break}case 89:{xX(o,c,f[d>>2]|0,g,l);v=28;break}case 37:{bk(c,f[d>>2]|0,g,l);v=28;break}default:{f[g>>2]=f[g>>2]|4;v=28}}while(0);if((v|0)==28)j=f[c>>2]|0;u=t;return j|0}function sf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;h=m;a:do if((c-a|0)>1?(b[a>>0]|0)==83:0){g=b[a+1>>0]|0;j=a+2|0;k=d+16|0;b:do switch(g|0){case 97:{VJ(h,73411);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 98:{UJ(h,73426);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 115:{YJ(h,72905);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 105:{XJ(h,73001);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 111:{XJ(h,73078);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 100:{WJ(h,73155);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(e,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=j;break a}case 95:{e=f[k>>2]|0;if((e|0)==(f[d+20>>2]|0))break a;g=f[e+4>>2]|0;h=d+4|0;i=d+8|0;a=f[e>>2]|0;while(1){if((a|0)==(g|0)){a=j;break a}e=f[h>>2]|0;if((e|0)==(f[i>>2]|0))Lt(d,a);else{VT(e,a);f[h>>2]=(f[h>>2]|0)+24}a=a+24|0}}default:{e=(g+-48|0)>>>0<10;if(!e?(BJa(g)|0)==0:0)break a;g=(e?-48:-55)+g|0;while(1){l=j+1|0;if((j|0)==(c|0))break a;e=b[j>>0]|0;h=e<<24>>24;i=(h+-48|0)>>>0<10;if(!i?(BJa(h)|0)==0:0)break;j=l;g=h+(g*36|0)+(i?-48:-55)|0}if(e<<24>>24!=95)break a;g=g+1|0;k=f[k>>2]|0;e=k;if(g>>>0>=(f[d+20>>2]|0)-k>>4>>>0)break a;h=f[e+(g<<4)+4>>2]|0;i=d+4|0;j=d+8|0;a=f[e+(g<<4)>>2]|0;while(1){if((a|0)==(h|0)){a=l;break a}e=f[i>>2]|0;if((e|0)==(f[j>>2]|0))Lt(d,a);else{VT(e,a);f[i>>2]=(f[i>>2]|0)+24}a=a+24|0}}}while(0);$a(a|0)}while(0);u=m;return a|0}function tf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;n=u;u=u+16|0;E=n;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=b;C=b+8|0;k=b+12|0;x=c+4|0;a:do if(((f[k>>2]|0)-(f[C>>2]|0)>>2|0)==((f[x>>2]|0)-(f[c>>2]|0)>>4|0)){D=Pqa(b)|0;y=0;ja(116,a|0,D|0);D=y;y=0;if(D&1)D=15;else{e=0;while(1){if(e>>>0>=(Pqa(b)|0)>>>0){D=19;break}D=f[c>>2]|0;d=D;if(e>>>0<(f[x>>2]|0)-D>>4>>>0){if(!(qva(b,e)|0)){D=24;break}d=d+(e<<4)|0;if((f[(f[C>>2]|0)+(e<<2)>>2]|0)!=(f[d>>2]|0)){D=26;break}D=(f[a>>2]|0)+(e<<4)|0;f[D>>2]=f[d>>2];f[D+4>>2]=f[d+4>>2];f[D+8>>2]=f[d+8>>2];f[D+12>>2]=f[d+12>>2]}else{if(!(vva(b,e)|0)){D=45;break}y=0;d=ua(69,b|0,e|0)|0;D=y;y=0;if(D&1){D=20;break}f[(f[a>>2]|0)+(e<<4)>>2]=d}e=e+1|0}do if((D|0)==19){u=n;return}else if((D|0)==20){d=Pa()|0;break a}else if((D|0)==24){y=0;Ca(52,25903,39631,723,25924);y=0}else if((D|0)==26){y=0;d=ua(53,76852,25851)|0;x=y;y=0;if((((((((((!(x&1)?(y=0,z=ua(65,d|0,f[b>>2]|0)|0,b=y,y=0,!(b&1)):0)?(y=0,o=ua(53,z|0,25938)|0,b=y,y=0,!(b&1)):0)?(y=0,p=la(152,f[(f[C>>2]|0)+(e<<2)>>2]|0)|0,C=y,y=0,!(C&1)):0)?(y=0,q=ua(53,o|0,p|0)|0,C=y,y=0,!(C&1)):0)?(y=0,r=ua(53,q|0,25954)|0,C=y,y=0,!(C&1)):0)?(y=0,s=ua(68,r|0,e|0)|0,C=y,y=0,!(C&1)):0)?(y=0,t=ua(53,s|0,25970)|0,C=y,y=0,!(C&1)):0)?(y=0,v=la(152,f[(f[c>>2]|0)+(e<<4)>>2]|0)|0,C=y,y=0,!(C&1)):0)?(y=0,w=ua(53,t|0,v|0)|0,C=y,y=0,!(C&1)):0)?(y=0,A=ua(53,w|0,72374)|0,C=y,y=0,!(C&1)):0){Axa(E,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[E>>2]|0,77556)|0;C=y;y=0;if(!(C&1)?(y=0,B=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,C=y,y=0,!(C&1)):0){pza(E);y=0;ua(63,A|0,B|0)|0;E=y;y=0;if(E&1)break;y=0;la(159,A|0)|0;E=y;y=0;if(E&1)break;y=0;za(6);y=0;break}d=Pa()|0;pza(E);break a}}else if((D|0)==45){y=0;Ca(52,25977,39631,733,25924);y=0}while(0);d=Pa()|0}}else{y=0;d=ua(53,76852,25851)|0;B=y;y=0;if((((((!(B&1)?(y=0,e=ua(65,d|0,f[b>>2]|0)|0,B=y,y=0,!(B&1)):0)?(y=0,g=ua(53,e|0,25862)|0,B=y,y=0,!(B&1)):0)?(y=0,h=ua(68,g|0,(f[k>>2]|0)-(f[C>>2]|0)>>2|0)|0,C=y,y=0,!(C&1)):0)?(y=0,i=ua(53,h|0,25873)|0,C=y,y=0,!(C&1)):0)?(y=0,j=ua(68,i|0,(f[x>>2]|0)-(f[c>>2]|0)>>4|0)|0,C=y,y=0,!(C&1)):0)?(y=0,l=ua(53,j|0,25891)|0,C=y,y=0,!(C&1)):0){Axa(E,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[E>>2]|0,77556)|0;C=y;y=0;if(!(C&1)?(y=0,m=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,C=y,y=0,!(C&1)):0){pza(E);y=0;ua(63,l|0,m|0)|0;E=y;y=0;if(E&1){D=15;break}y=0;la(159,l|0)|0;E=y;y=0;if(E&1){D=15;break}y=0;za(6);y=0;D=15;break}d=Pa()|0;pza(E)}else D=15}while(0);if((D|0)==15)d=Pa()|0;f3(a);$a(d|0)}function uf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+16|0;m=o+12|0;p=o;do if((d+-30&255)>41)e=0;else{n=hta(f[a+4>>2]|0)|0;j=n+8|0;i=n+4|0;do switch(d<<24>>24){case 30:{k=4;e=1;g=0;break}case 32:{k=1;e=1;g=0;break}case 33:{k=2;e=1;g=0;break}case 31:{k=8;e=2;g=0;break}case 34:{k=1;e=2;g=0;break}case 35:{k=2;e=2;g=0;break}case 36:{k=4;e=2;g=0;break}case 37:{k=4;e=1;g=1;break}case 39:{k=1;e=1;g=1;break}case 40:{k=2;e=1;g=1;break}case 38:{k=8;e=2;g=1;break}case 41:{k=1;e=2;g=1;break}case 42:{k=2;e=2;g=1;break}case 43:{k=4;e=2;g=1;break}case 44:{k=4;e=1;g=2;break}case 46:{k=1;e=1;g=2;break}case 47:{k=2;e=1;g=2;break}case 45:{k=8;e=2;g=2;break}case 48:{k=1;e=2;g=2;break}case 49:{k=2;e=2;g=2;break}case 50:{k=4;e=2;g=2;break}case 51:{k=4;e=1;g=3;break}case 53:{k=1;e=1;g=3;break}case 54:{k=2;e=1;g=3;break}case 52:{k=8;e=2;g=3;break}case 55:{k=1;e=2;g=3;break}case 56:{k=2;e=2;g=3;break}case 57:{k=4;e=2;g=3;break}case 58:{k=4;e=1;g=4;break}case 60:{k=1;e=1;g=4;break}case 61:{k=2;e=1;g=4;break}case 59:{k=8;e=2;g=4;break}case 62:{k=1;e=2;g=4;break}case 63:{k=2;e=2;g=4;break}case 64:{k=4;e=2;g=4;break}case 65:{k=4;e=1;g=5;break}case 67:{k=1;e=1;g=5;break}case 68:{k=2;e=1;g=5;break}case 66:{k=8;e=2;g=5;break}case 69:{k=1;e=2;g=5;break}case 70:{k=2;e=2;g=5;break}case 71:{k=4;e=2;g=5;break}default:Ka()}while(0);f[j>>2]=g;f[i>>2]=e;i=n+12|0;b[i>>0]=k;do if(b[a+12>>0]|0){e=Vea(76852,56261)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[m>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,l=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,k=y,y=0,!(k&1)):0){pza(m);jn(e,l)|0;Yp(e)|0;break}q=Pa()|0;pza(m);$a(q|0)}while(0);rJa(m);B6(a,m,n+16|0);m=gKa(f[m>>2]|0)|0;if((m|0)==(h[i>>0]|0)){e=Jg(a)|0;f[n+24>>2]=e;e=Jg(a)|0;f[n+20>>2]=e;Fna(n);f[c>>2]=n;e=1;break}d=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;i=uHa(56280)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[p+11>>0]=i;e=p}else{g=i+16&-16;y=0;e=la(150,g|0)|0;o=y;y=0;if(o&1){q=59;break}f[p>>2]=e;f[p+8>>2]=g|-2147483648;f[p+4>>2]=i}Pta(e,56280,i)|0;SBa(e+i|0,0);y=0;ja(583,d|0,p|0);o=y;y=0;if(o&1)g=1;else{y=0;ya(79,d|0,64,361);y=0;g=0}e=Pa()|0;zta(p);if(g)q=61}else{y=0;za(3);y=0;q=59}while(0);if((q|0)==59){e=Pa()|0;q=61}if((q|0)==61)Oa(d|0);$a(e|0)}while(0);u=o;return e|0}function vf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;j=k;g=a+4|0;do switch(d<<24>>24){case 106:{d=1;e=0;h=77;break}case 124:{d=2;e=25;h=77;break}case -110:{d=3;e=50;h=77;break}case -96:{d=4;e=63;h=77;break}case 107:{d=1;e=1;h=77;break}case 125:{d=2;e=26;h=77;break}case -109:{d=3;e=51;h=77;break}case -95:{d=4;e=64;h=77;break}case 108:{d=1;e=2;h=77;break}case 126:{d=2;e=27;h=77;break}case -108:{d=3;e=52;h=77;break}case -94:{d=4;e=65;h=77;break}case 109:{d=1;e=3;h=77;break}case 127:{d=2;e=28;h=77;break}case 110:{d=1;e=4;h=77;break}case -128:{d=2;e=29;h=77;break}case 111:{d=1;e=5;h=77;break}case -127:{d=2;e=30;h=77;break}case 112:{d=1;e=6;h=77;break}case -126:{d=2;e=31;h=77;break}case 113:{d=1;e=7;h=77;break}case -125:{d=2;e=32;h=77;break}case 114:{d=1;e=8;h=77;break}case -124:{d=2;e=33;h=77;break}case 115:{d=1;e=9;h=77;break}case -123:{d=2;e=34;h=77;break}case 116:{d=1;e=10;h=77;break}case -122:{d=2;e=35;h=77;break}case 118:{d=1;e=11;h=77;break}case -120:{d=2;e=36;h=77;break}case 117:{d=1;e=12;h=77;break}case -121:{d=2;e=37;h=77;break}case 119:{d=1;e=13;h=77;break}case -119:{d=2;e=38;h=77;break}case 120:{d=1;e=14;h=77;break}case -118:{d=2;e=39;h=77;break}case -107:{d=3;e=53;h=77;break}case -93:{d=4;e=66;h=77;break}case -104:{d=3;e=54;h=77;break}case -90:{d=4;e=67;h=77;break}case -106:{d=3;e=55;h=77;break}case -92:{d=4;e=68;h=77;break}case -105:{d=3;e=56;h=77;break}case -91:{d=4;e=69;h=77;break}case 70:{d=1;e=15;h=77;break}case 81:{d=2;e=40;h=77;break}case 91:{d=3;e=57;h=77;break}case 97:{d=4;e=70;h=77;break}case 71:{d=1;e=16;h=77;break}case 82:{d=2;e=41;h=77;break}case 92:{d=3;e=58;h=77;break}case 98:{d=4;e=71;h=77;break}case 72:{d=1;e=17;h=77;break}case 83:{d=2;e=42;h=77;break}case 73:{d=1;e=18;h=77;break}case 84:{d=2;e=43;h=77;break}case 76:{d=1;e=19;h=77;break}case 87:{d=2;e=44;h=77;break}case 77:{d=1;e=20;h=77;break}case 88:{d=2;e=45;h=77;break}case 74:{d=1;e=21;h=77;break}case 85:{d=2;e=46;h=77;break}case 75:{d=1;e=22;h=77;break}case 86:{d=2;e=47;h=77;break}case 78:{d=1;e=23;h=77;break}case 89:{d=2;e=48;h=77;break}case 79:{d=1;e=24;h=77;break}case 90:{d=2;e=49;h=77;break}case 93:{d=3;e=59;h=77;break}case 99:{d=4;e=72;h=77;break}case 95:{d=3;e=60;h=77;break}case 101:{d=4;e=73;h=77;break}case 94:{d=3;e=61;h=77;break}case 100:{d=4;e=74;h=77;break}case 96:{d=3;e=62;h=77;break}case 102:{d=4;e=75;h=77;break}default:d=0}while(0);if((h|0)==77){g=Ota(f[g>>2]|0)|0;f[g+8>>2]=e;f[g+4>>2]=d;do if(b[a+12>>0]|0){d=Vea(76852,56144)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[j>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,i=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,h=y,y=0,!(h&1)):0){pza(j);jn(d,i)|0;Yp(d)|0;break}k=Pa()|0;pza(j);$a(k|0)}while(0);d=Jg(a)|0;f[g+16>>2]=d;d=Jg(a)|0;f[g+12>>2]=d;GV(g);f[c>>2]=g;d=1}u=k;return d|0}function wf(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;j=u;u=u+48|0;k=j+36|0;l=j+24|0;m=j+12|0;n=j;eja(c,0,0)|0;f[d>>2]=e;i=1;a:while(1){h=lj(a,i)|0;if(fIa(b[h>>0]|0)|0){a=55;break}h=rr(lj(a,i)|0)|0;e=fwa(h,61)|0;if(!e){a=4;break}e=ZA(e+1|0)|0;g=J;switch(b[h>>0]|0){case 97:{if(g>>>0>0|(g|0)==0&e>>>0>4294967295){a=17;break a}eja(d,e,g)|0;break}case 111:{if(g>>>0>0|(g|0)==0&e>>>0>4294967295){a=30;break a}eja(c,e,g)|0;break}default:{a=42;break a}}i=i+1|0}b:do if((a|0)==4){i=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;h=uHa(53445)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[k+11>>0]=h;e=k}else{g=h+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){a=12;break}f[k>>2]=e;f[k+8>>2]=g|-2147483648;f[k+4>>2]=h}Pta(e,53445,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,k|0);n=y;y=0;if(n&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(k);if(!g)break b}else{y=0;za(3);y=0;a=12}while(0);if((a|0)==12)e=Pa()|0;Oa(i|0)}else if((a|0)==17){i=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;h=uHa(53475)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[l+11>>0]=h;e=l}else{g=h+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){a=25;break}f[l>>2]=e;f[l+8>>2]=g|-2147483648;f[l+4>>2]=h}Pta(e,53475,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,l|0);n=y;y=0;if(n&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(l);if(!g)break b}else{y=0;za(3);y=0;a=25}while(0);if((a|0)==25)e=Pa()|0;Oa(i|0)}else if((a|0)==30){i=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;h=uHa(53485)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[m+11>>0]=h;e=m}else{g=h+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){a=38;break}f[m>>2]=e;f[m+8>>2]=g|-2147483648;f[m+4>>2]=h}Pta(e,53485,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,m|0);n=y;y=0;if(n&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(m);if(!g)break b}else{y=0;za(3);y=0;a=38}while(0);if((a|0)==38)e=Pa()|0;Oa(i|0)}else if((a|0)==42){i=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;h=uHa(53496)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[n+11>>0]=h;e=n}else{g=h+16&-16;y=0;e=la(150,g|0)|0;m=y;y=0;if(m&1){a=50;break}f[n>>2]=e;f[n+8>>2]=g|-2147483648;f[n+4>>2]=h}Pta(e,53496,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,n|0);m=y;y=0;if(m&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(n);if(!g)break b}else{y=0;za(3);y=0;a=50}while(0);if((a|0)==50)e=Pa()|0;Oa(i|0)}else if((a|0)==55){u=j;return i|0}while(0);$a(e|0);return 0}function xf(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+32|0;h=n+12|0;m=n+24|0;i=n;d=f[a+92>>2]|0;c=f[a+88>>2]|0;while(1){e=f[a>>2]|0;if((c|0)==(d|0))break;zt(e,f[c>>2]|0);c=c+4|0}a:do if(((f[e+40>>2]|0)-(f[e+36>>2]|0)|0)==((f[a+76>>2]|0)-(f[a+72>>2]|0)|0)){c=f[a+40>>2]|0;if((c|0)!=-1){l=en(a,c)|0;f[(f[a>>2]|0)+116>>2]=l}e=f[a+136>>2]|0;g=a+120|0;d=f[a+132>>2]|0;b:while(1){if((d|0)==(e|0))break;f[m>>2]=f[d>>2];c=EN(g,m)|0;c=f[c>>2]|0;switch(f[(f[m>>2]|0)+8>>2]|0){case 0:{c=en(a,c)|0;break}case 1:{c=EI(0)|0;break}case 2:{c=EI(0)|0;break}case 3:{c=Fk(a,c)|0;break}default:{j=26;break b}}l=f[m>>2]|0;f[l+4>>2]=c;eu(f[a>>2]|0,l);d=d+4|0}if((j|0)==26){g=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(54228)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[i+11>>0]=e;c=i}else{d=e+16&-16;y=0;c=la(150,d|0)|0;n=y;y=0;if(n&1){j=34;break}f[i>>2]=c;f[i+8>>2]=d|-2147483648;f[i+4>>2]=e}Pta(c,54228,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,i|0);n=y;y=0;if(n&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(i);if(d)j=36}else{y=0;za(3);y=0;j=34}while(0);if((j|0)==34){c=Pa()|0;j=36}if((j|0)==36)Oa(g|0);break}h=a+104|0;c=f[a+100>>2]|0;c:while(1){if((c|0)==(h|0))break;e=f[c+16>>2]|0;g=f[c+24>>2]|0;d=f[c+20>>2]|0;while(1){if((d|0)==(g|0))break;f[(f[d>>2]|0)+24>>2]=f[f[(f[(f[a>>2]|0)+36>>2]|0)+(e<<2)>>2]>>2];d=d+4|0}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue c}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}l=a+196|0;c=f[a+192>>2]|0;d:while(1){if((c|0)==(l|0))break;e=f[c+16>>2]|0;g=f[c+24>>2]|0;d=f[c+20>>2]|0;while(1){if((d|0)==(g|0))break;h=f[(f[a>>2]|0)+76>>2]|0;i=en(a,f[d>>2]|0)|0;f[m>>2]=i;j=h+(e<<4)+8|0;k=f[j>>2]|0;if(k>>>0<(f[h+(e<<4)+12>>2]|0)>>>0){f[k>>2]=i;f[j>>2]=(f[j>>2]|0)+4}else XC(h+(e<<4)+4|0,m);d=d+4|0}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue d}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}u=n;return}else{g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(54186)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;c=h}else{d=e+16&-16;y=0;c=la(150,d|0)|0;n=y;y=0;if(n&1){j=13;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(c,54186,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,h|0);n=y;y=0;if(n&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(!d)break a}else{y=0;za(3);y=0;j=13}while(0);if((j|0)==13)c=Pa()|0;Oa(g|0)}while(0);$a(c|0)}function yf(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;o=u;u=u+48|0;n=o+32|0;q=o+4|0;l=o;p=o+16|0;m=a+12|0;do if(b[m>>0]|0){e=Vea(76852,57361)|0;Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[n>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,k=y,y=0,!(k&1)):0){pza(n);jn(e,d)|0;Yp(e)|0;break}q=Pa()|0;pza(n);$a(q|0)}while(0);k=Nm(a)|0;do if(b[m>>0]|0){c=vj(Vea(76852,57222)|0,k)|0;Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[n>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(n);jn(c,g)|0;Yp(c)|0;break}q=Pa()|0;pza(n);$a(q|0)}while(0);gua(q);g=a+120|0;h=a+136|0;i=a+140|0;j=a+132|0;e=0;while(1){if(e>>>0>=k>>>0){h=13;break}if(b[m>>0]|0){y=0;d=ua(53,76852,57228)|0;c=y;y=0;if(c&1){h=21;break}Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[n>>2]|0,77556)|0;r=y;y=0;if(r&1){h=18;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;r=y;y=0;if(r&1){h=18;break}pza(n);y=0;ua(63,d|0,c|0)|0;r=y;y=0;if(r&1){h=21;break}y=0;la(159,d|0)|0;r=y;y=0;if(r&1){h=21;break}}y=0;c=la(150,12)|0;r=y;y=0;if(r&1){h=21;break}cCa(c);f[l>>2]=c;y=0;c=la(215,a|0)|0;r=y;y=0;if(r&1){h=34;break}f[f[l>>2]>>2]=c;c=f[l>>2]|0;if(WS(q,c)|0){h=26;break}y=0;Ca(59,n|0,q|0,c|0,c|0);r=y;y=0;if(r&1){h=35;break}y=0;c=la(212,a|0)|0;r=y;y=0;if(r&1){h=35;break}f[(f[l>>2]|0)+8>>2]=c;y=0;c=la(212,a|0)|0;r=y;y=0;if(r&1){h=35;break}y=0;d=ua(155,g|0,l|0)|0;r=y;y=0;if(r&1){h=47;break}f[d>>2]=c;c=f[h>>2]|0;if((c|0)==(f[i>>2]|0)){y=0;ja(2007,j|0,l|0);r=y;y=0;if(r&1){h=47;break}}else{f[c>>2]=f[l>>2];f[h>>2]=(f[h>>2]|0)+4}e=e+1|0}a:do if((h|0)==13){Cta(q);u=o;return}else if((h|0)==18){c=Pa()|0;pza(n);h=22}else if((h|0)==21){c=Pa()|0;h=22}else if((h|0)==26){g=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;e=uHa(57376)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[p+11>>0]=e;c=p}else{d=e+16&-16;y=0;c=la(150,d|0)|0;r=y;y=0;if(r&1){h=36;break}f[p>>2]=c;f[p+8>>2]=d|-2147483648;f[p+4>>2]=e}Pta(c,57376,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,p|0);r=y;y=0;if(r&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(p);if(!d){h=48;break a}}else{y=0;za(3);y=0;h=36}while(0);if((h|0)==36)c=Pa()|0;Oa(g|0);h=48}else if((h|0)==34){c=Pa()|0;h=48}else if((h|0)==35){c=Pa()|0;h=48}else if((h|0)==47){c=Pa()|0;h=48}while(0);Cta(q);$a(c|0)}function zf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=c+4|0;a:while(1){p=b;q=b+-4|0;while(1){o=a;b:while(1){n=o;d=p-n|0;e=d>>2;a=o+4|0;switch(e|0){case 1:case 0:break a;case 2:{t=5;break a}case 3:{t=7;break a}case 4:{t=8;break a}case 5:{t=9;break a}default:{}}if((d|0)<124){t=11;break a}k=o+(((e|0)/2|0)<<2)|0;if((d|0)>3996){d=(e|0)/4|0;d=ir(o,o+(d<<2)|0,k,k+(d<<2)|0,q,c)|0}else d=vs(o,k,q,c)|0;l=f[o>>2]|0;g=f[k>>2]|0;j=f[u>>2]|0;i=f[f[c>>2]>>2]|0;if(DS(i,j,l,g)|0){e=q;break}else e=q;while(1){e=e+-4|0;if((o|0)==(e|0))break;h=f[e>>2]|0;if(DS(i,j,h,g)|0){t=28;break b}}g=f[q>>2]|0;if(!(DS(i,j,l,g)|0)){d=a;while(1){if((d|0)==(q|0))break a;e=f[d>>2]|0;a=d+4|0;if(DS(i,j,l,e)|0)break;else d=a}f[d>>2]=g;f[q>>2]=e}if((a|0)==(q|0))break a;else d=q;while(1){k=f[o>>2]|0;j=f[u>>2]|0;i=f[f[c>>2]>>2]|0;while(1){g=f[a>>2]|0;h=a+4|0;if(DS(i,j,k,g)|0)break;else a=h}do{d=d+-4|0;e=f[d>>2]|0}while(DS(i,j,k,e)|0);if(a>>>0>=d>>>0){o=a;continue b}f[a>>2]=e;f[d>>2]=g;a=h}}if((t|0)==28){t=0;f[o>>2]=h;f[e>>2]=l;d=d+1|0}c:do if(a>>>0<e>>>0){m=k;while(1){l=f[m>>2]|0;k=f[u>>2]|0;j=f[f[c>>2]>>2]|0;while(1){h=f[a>>2]|0;i=a+4|0;if(DS(j,k,h,l)|0)a=i;else break}do{e=e+-4|0;g=f[e>>2]|0}while(!(DS(j,k,g,l)|0));if(a>>>0>e>>>0){e=m;g=a;break c}f[a>>2]=g;f[e>>2]=h;m=(m|0)==(a|0)?e:m;a=i;d=d+1|0}}else{e=k;g=a}while(0);if((g|0)!=(e|0)?(r=f[e>>2]|0,s=f[g>>2]|0,DS(f[f[c>>2]>>2]|0,f[u>>2]|0,r,s)|0):0){f[g>>2]=r;f[e>>2]=s;a=d+1|0}else a=d;if(!a){d=Am(o,g,c)|0;a=g+4|0;if(Am(a,b,c)|0){t=44;break}if(d)continue}m=g;if((m-n|0)>=(p-m|0)){t=43;break}zf(o,g,c);a=g+4|0}if((t|0)==43){t=0;zf(g+4|0,b,c);a=o;b=g;continue}else if((t|0)==44){t=0;if(d)break;else{a=o;b=g;continue}}}if((t|0)==5){b=f[q>>2]|0;a=f[o>>2]|0;if(DS(f[f[c>>2]>>2]|0,f[u>>2]|0,b,a)|0){f[o>>2]=b;f[q>>2]=a}}else if((t|0)==7)vs(o,a,q,c)|0;else if((t|0)==8)Hu(o,a,o+8|0,q,c)|0;else if((t|0)==9)ir(o,a,o+8|0,o+12|0,q,c)|0;else if((t|0)==11)Iw(o,b,c);return}function Af(a,b){a=a|0;b=b|0;c3(f[a>>2]|0,40)|0;do switch(f[b+8>>2]|0){case 0:{Vea(f[a>>2]|0,38357)|0;break}case 2:{Vea(f[a>>2]|0,38365)|0;break}case 4:{Vea(f[a>>2]|0,38373)|0;break}case 20:{Vea(f[a>>2]|0,38384)|0;break}case 1:{Vea(f[a>>2]|0,38392)|0;break}case 3:{Vea(f[a>>2]|0,38400)|0;break}case 5:{Vea(f[a>>2]|0,38408)|0;break}case 21:{Vea(f[a>>2]|0,38419)|0;break}case 6:{Vea(f[a>>2]|0,38427)|0;break}case 8:{Vea(f[a>>2]|0,38435)|0;break}case 10:{Vea(f[a>>2]|0,38443)|0;break}case 12:{Vea(f[a>>2]|0,38452)|0;break}case 14:{Vea(f[a>>2]|0,38462)|0;break}case 16:{Vea(f[a>>2]|0,38472)|0;break}case 18:{Vea(f[a>>2]|0,38484)|0;break}case 7:{Vea(f[a>>2]|0,38493)|0;break}case 9:{Vea(f[a>>2]|0,38501)|0;break}case 11:{Vea(f[a>>2]|0,38509)|0;break}case 13:{Vea(f[a>>2]|0,38518)|0;break}case 15:{Vea(f[a>>2]|0,38528)|0;break}case 17:{Vea(f[a>>2]|0,38538)|0;break}case 19:{Vea(f[a>>2]|0,38550)|0;break}case 22:{Vea(f[a>>2]|0,38559)|0;break}case 23:{Vea(f[a>>2]|0,38576)|0;break}case 24:{Vea(f[a>>2]|0,38593)|0;break}case 25:{Vea(f[a>>2]|0,38606)|0;break}case 26:{Vea(f[a>>2]|0,38622)|0;break}case 27:{Vea(f[a>>2]|0,38638)|0;break}case 28:{Vea(f[a>>2]|0,38654)|0;break}case 29:{Vea(f[a>>2]|0,38670)|0;break}case 30:{Vea(f[a>>2]|0,38686)|0;break}case 31:{Vea(f[a>>2]|0,38702)|0;break}case 32:{Vea(f[a>>2]|0,38718)|0;break}case 33:{Vea(f[a>>2]|0,38734)|0;break}case 34:{Vea(f[a>>2]|0,38754)|0;break}case 37:{Vea(f[a>>2]|0,38774)|0;break}case 38:{Vea(f[a>>2]|0,38792)|0;break}case 35:{Vea(f[a>>2]|0,38810)|0;break}case 36:{Vea(f[a>>2]|0,38828)|0;break}case 41:{Vea(f[a>>2]|0,38846)|0;break}case 42:{Vea(f[a>>2]|0,38864)|0;break}case 39:{Vea(f[a>>2]|0,38882)|0;break}case 40:{Vea(f[a>>2]|0,38900)|0;break}case 43:{Vea(f[a>>2]|0,38918)|0;break}case 44:{Vea(f[a>>2]|0,38934)|0;break}case 45:{Vea(f[a>>2]|0,38949)|0;break}case 46:{Vea(f[a>>2]|0,38969)|0;break}default:Ka()}while(0);zea(a);kF(a,f[b+12>>2]|0);x_(a);return}function Bf(){var a=0,c=0,d=0,e=0,g=0;f[18631]=0;f[18630]=17452;y=0;za(10);d=y;y=0;if(d&1)a=Pa()|0;else{f[18666]=0;f[18667]=0;f[18668]=0;d=uHa(68349)|0;do if(d>>>0>4294967279){y=0;za(3);y=0;e=41}else{if(d>>>0<11){b[74675]=d;a=74664}else{c=d+16&-16;y=0;a=la(150,c|0)|0;g=y;y=0;if(g&1){e=41;break}f[18666]=a;f[18668]=c|-2147483648;f[18667]=d}Pta(a,68349,d)|0;SBa(a+d|0,0);a=f[18632]|0;c=f[18633]|0;while(1){if((c|0)==(a|0))break;g=c+-4|0;f[18633]=g;c=g}sBa();y=0;za(11);g=y;y=0;do if(((((((((((((!(g&1)?(rBa(),y=0,za(12),g=y,y=0,!(g&1)):0)?(qCa(),y=0,za(13),g=y,y=0,!(g&1)):0)?(LBa(),y=0,za(14),g=y,y=0,!(g&1)):0)?(eza(),y=0,za(15),g=y,y=0,!(g&1)):0)?(dza(),y=0,za(16),g=y,y=0,!(g&1)):0)?(Sya(),y=0,za(17),g=y,y=0,!(g&1)):0)?(Tya(),y=0,za(18),g=y,y=0,!(g&1)):0)?(hDa(),y=0,za(19),g=y,y=0,!(g&1)):0)?(gDa(),y=0,za(20),g=y,y=0,!(g&1)):0)?(Xua(),y=0,za(21),g=y,y=0,!(g&1)):0)?(Wua(),y=0,za(22),g=y,y=0,!(g&1)):0)?(Vua(),y=0,za(23),g=y,y=0,!(g&1)):0)?(Uua(),y=0,za(24),g=y,y=0,!(g&1)):0){Vza();y=0;za(25);g=y;y=0;if(g&1)break;Uza();y=0;za(26);g=y;y=0;if(g&1)break;Tza();y=0;za(27);g=y;y=0;if(g&1)break;Sza();y=0;za(28);g=y;y=0;if(g&1)break;Iua();y=0;za(29);g=y;y=0;if(g&1)break;Hua();y=0;za(30);g=y;y=0;if(g&1)break;Gua();y=0;za(31);g=y;y=0;if(g&1)break;Fua();y=0;za(32);g=y;y=0;if(g&1)break;Nha();y=0;za(33);g=y;y=0;if(g&1)break;Mha();y=0;za(34);g=y;y=0;if(g&1)break;_ha();y=0;za(35);g=y;y=0;if(g&1)break;Zha();y=0;za(36);g=y;y=0;if(g&1)break;iBa();y=0;za(37);g=y;y=0;if(g&1)break;hBa();y=0;za(38);g=y;y=0;if(g&1)break;return}while(0);a=Pa()|0;zta(74664)}while(0);if((e|0)==41)a=Pa()|0;JR(74528)}$a(a|0)}function Cf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+80|0;g=n+64|0;l=n+40|0;k=n+12|0;m=n+24|0;j=n;a:do if((c-a|0)>2?(b[a>>0]|0)==102:0){e=a+2|0;b:do switch(b[a+1>>0]|0){case 112:{e=sN(e,c,g)|0;h=pL(e,c)|0;c:do if((h|0)!=(c|0)?(b[h>>0]|0)==95:0){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;c=h-e|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[m+11>>0]=c;g=m}else{j=c+16&-16;g=QCa(j)|0;f[m>>2]=g;f[m+8>>2]=j|-2147483648;f[m+4>>2]=c}a=e;e=g;while(1){if((a|0)==(h|0))break;SBa(e,b[a>>0]|0);a=a+1|0;e=e+1|0}SBa(g+c|0,0);y=0;oa(77,m|0,0,73274)|0;j=y;y=0;do if(j&1)a=Pa()|0;else{f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}hM(l,k);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(l);zta(k);break}}else{ZL(e,l);f[a>>2]=(f[a>>2]|0)+24}Xka(l);zta(k);zta(m);a=h+1|0;break c}while(0);zta(m);break b}while(0);break a}case 76:{e=pL(e,c)|0;d:do if((((e|0)!=(c|0)?(b[e>>0]|0)==112:0)?(h=sN(e+1|0,c,g)|0,i=pL(h,c)|0,(i|0)!=(c|0)):0)?(b[i>>0]|0)==95:0){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;c=i-h|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[m+11>>0]=c;g=m}else{k=c+16&-16;g=QCa(k)|0;f[m>>2]=g;f[m+8>>2]=k|-2147483648;f[m+4>>2]=c}a=h;e=g;while(1){if((a|0)==(i|0))break;SBa(e,b[a>>0]|0);a=a+1|0;e=e+1|0}SBa(g+c|0,0);y=0;oa(77,m|0,0,73274)|0;k=y;y=0;do if(k&1)a=Pa()|0;else{f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}hM(l,j);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(l);zta(j);break}}else{ZL(e,l);f[a>>2]=(f[a>>2]|0)+24}Xka(l);zta(j);zta(m);a=i+1|0;break d}while(0);zta(m);break b}while(0);break a}default:break a}while(0);$a(a|0)}while(0);u=n;return a|0}function Df(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=u;u=u+32|0;s=r+12|0;q=r;a:do if(((a|0)!=(c|0)?(b[a>>0]|0)==70:0)?(e=a+1|0,(e|0)!=(c|0)):0){if((b[e>>0]|0)==89){e=a+2|0;if((e|0)==(c|0))break}h=ic(e,c,d)|0;if((h|0)!=(e|0)){f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;g=uHa(72085)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){n=s+11|0;b[n>>0]=g;e=s;o=s+4|0}else{o=g+16&-16;e=QCa(o)|0;f[s>>2]=e;f[s+8>>2]=o|-2147483648;o=s+4|0;f[o>>2]=g;n=s+11|0}Pta(e,72085,g)|0;SBa(e+g|0,0);p=d+4|0;k=q+11|0;l=q+4|0;m=0;e=h;b:while(1)c:while(1){if((e|0)==(c|0)){g=15;break b}h=b[e>>0]|0;i=e+1|0;switch(h<<24>>24){case 69:{g=20;break b}case 118:{e=i;continue c}default:{}}g=(i|0)==(c|0);if(!(g|h<<24>>24!=82)?(b[i>>0]|0)==69:0){m=1;e=i;continue b}if(!(g|h<<24>>24!=79)?(b[i>>0]|0)==69:0){m=2;e=i;continue b}g=((f[p>>2]|0)-(f[d>>2]|0)|0)/24|0;y=0;i=oa(76,e|0,c|0,d|0)|0;j=y;y=0;if(j&1){g=27;break b}j=((f[p>>2]|0)-(f[d>>2]|0)|0)/24|0;if((i|0)==(e|0)|(i|0)==(c|0)){g=49;break b}else e=g;while(1){if(e>>>0>=j>>>0){e=g;break}h=b[n>>0]|0;if((h<<24>>24<0?f[o>>2]|0:h&255)>>>0>1?(y=0,ua(165,s|0,72307)|0,h=y,y=0,h&1):0){g=31;break b}y=0;ja(2054,q|0,(f[d>>2]|0)+(e*24|0)|0);h=y;y=0;if(h&1){g=35;break b}h=b[k>>0]|0;t=h<<24>>24<0;y=0;oa(73,s|0,(t?f[q>>2]|0:q)|0,(t?f[l>>2]|0:h&255)|0)|0;h=y;y=0;if(h&1){g=36;break b}zta(q);e=e+1|0}while(1){if(e>>>0>=j>>>0){e=i;continue c}h=f[p>>2]|0;g=h+-24|0;while(1){if((h|0)==(g|0))break;t=h+-24|0;f[p>>2]=t;Xka(t);h=f[p>>2]|0}e=e+1|0}}d:do if((g|0)==15){g=f[p>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0)){g=49;break d}t=g+-24|0;f[p>>2]=t;Xka(t);g=f[p>>2]|0}}else if((g|0)==20){y=0;ua(165,s|0,72083)|0;t=y;y=0;e:do if(!(t&1)){switch(m&3){case 1:{y=0;ua(165,s|0,73511)|0;t=y;y=0;if(t&1)break e;break}case 2:{y=0;ua(165,s|0,73514)|0;t=y;y=0;if(t&1)break e;break}default:{}}e=f[p>>2]|0;if((f[d>>2]|0)==(e|0)){g=49;break d}y=0;ua(165,e+-24|0,72117)|0;t=y;y=0;if(!(t&1)?(t=b[n>>0]|0,d=t<<24>>24<0,y=0,xa(25,(f[p>>2]|0)+-12|0,0,(d?f[s>>2]|0:s)|0,(d?f[o>>2]|0:t&255)|0)|0,t=y,y=0,!(t&1)):0){zta(s);a=i;break a}}while(0);a=Pa()|0}else if((g|0)==27)a=Pa()|0;else if((g|0)==31)a=Pa()|0;else if((g|0)==35){a=Pa()|0;g=37}else if((g|0)==36){a=Pa()|0;zta(q);g=37}while(0);if((g|0)!=37)if((g|0)==49){zta(s);break}zta(s);$a(a|0)}}while(0);u=r;return a|0}function Ef(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+240|0;t=C+200|0;h=C+199|0;i=C+198|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+197|0;s=C+196|0;su(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;p=E+4|0;q=E+8|0;o=b[h>>0]|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;d=bDa(d,-1)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[p>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(cl(d&255,x,s,i,z,o,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+1;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+OK(i,f[z>>2]|0,e);n[g>>2]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Ff(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+240|0;t=C+200|0;h=C+199|0;i=C+198|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+197|0;s=C+196|0;su(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;o=E+4|0;q=E+8|0;n=b[h>>0]|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;d=bDa(d,-1)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[o>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(cl(d&255,x,s,i,z,n,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+1;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+MK(i,f[z>>2]|0,e);p[g>>3]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Gf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+240|0;t=C+200|0;h=C+199|0;i=C+198|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+197|0;s=C+196|0;su(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;o=E+4|0;q=E+8|0;n=b[h>>0]|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;d=bDa(d,-1)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[o>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(cl(d&255,x,s,i,z,n,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+1;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+PK(i,f[z>>2]|0,e);p[g>>3]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Hf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+224|0;q=z+198|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;Ax(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;k=bDa(d,-1)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(xn(d&255,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+1;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}v=eD(i,f[v>>2]|0,e,r)|0;C=g;f[C>>2]=v;f[C+4>>2]=J;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function If(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+224|0;q=z+198|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;Ax(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;k=bDa(d,-1)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(xn(d&255,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+1;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}v=eF(i,f[v>>2]|0,e,r)|0;C=g;f[C>>2]=v;f[C+4>>2]=J;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Jf(a,c,e,g,h){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;A=u;u=u+224|0;r=A+198|0;j=A+196|0;B=A+184|0;C=A+172|0;w=A+168|0;x=A+8|0;v=A+4|0;t=A;i=f[e+4>>2]|0;Ax(B,e,r,j);f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[C+(e<<2)>>2]=0;e=e+1|0}s=Rga(i)|0;q=C+11|0;if((b[q>>0]|0)<0)e=(f[C+8>>2]&2147483647)+-1|0;else e=10;y=0;ja(83,C|0,e|0);p=y;y=0;if(p&1)e=Pa()|0;else{k=(b[q>>0]|0)<0?f[C>>2]|0:C;f[w>>2]=k;f[v>>2]=x;f[t>>2]=0;o=C+4|0;p=C+8|0;n=b[j>>0]|0;j=k;k=a;i=a;while(1){if(!k){k=0;m=0;a=1}else{e=f[k+12>>2]|0;if((e|0)==(f[k+16>>2]|0)){y=0;e=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;m=y;y=0;if(m&1)break}else e=oHa(b[e>>0]|0)|0;l=bDa(e,-1)|0;k=l?0:k;i=l?0:i;m=l?0:a;a=l}if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;e=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;l=y;y=0;if(l&1)break}else e=oHa(b[e>>0]|0)|0;if(!(bDa(e,-1)|0))if(a)l=c;else{z=34;break}else z=18}else z=18;if((z|0)==18){z=0;if(a){c=0;z=34;break}else l=0}c=b[q>>0]|0;c=c<<24>>24<0?f[o>>2]|0:c&255;if((f[w>>2]|0)==(j+c|0)){y=0;ja(83,C|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[q>>0]|0)<0)e=(f[p>>2]&2147483647)+-1|0;else e=10;y=0;ja(83,C|0,e|0);a=y;y=0;if(a&1)break;j=(b[q>>0]|0)<0?f[C>>2]|0:C;f[w>>2]=j+c}c=k+12|0;e=f[c>>2]|0;a=k+16|0;if((e|0)==(f[a>>2]|0)){y=0;e=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;D=y;y=0;if(D&1)break}else e=oHa(b[e>>0]|0)|0;if(xn(e&255,s,j,w,t,n,B,x,v,r)|0){c=l;z=34;break}e=f[c>>2]|0;if((e|0)==(f[a>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;D=y;y=0;if(D&1)break;else{c=l;a=m;continue}}else{f[c>>2]=e+1;c=l;a=m;continue}}do if((z|0)==34){D=b[B+11>>0]|0;e=f[v>>2]|0;if(((D<<24>>24<0?f[B+4>>2]|0:D&255)|0)!=0?(e-x|0)<160:0){t=f[t>>2]|0;D=e+4|0;f[v>>2]=D;f[e>>2]=t;e=D}D=$A(j,f[w>>2]|0,g,s)|0;d[h>>1]=D;Iu(B,x,e,g);if(!k)j=1;else{e=f[k+12>>2]|0;if((e|0)==(f[k+16>>2]|0)){y=0;e=la(f[(f[m>>2]|0)+36>>2]|0,k|0)|0;D=y;y=0;if(D&1)break}else e=oHa(b[e>>0]|0)|0;j=bDa(e,-1)|0;i=j?0:i}if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;e=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;D=y;y=0;if(D&1)break}else e=oHa(b[e>>0]|0)|0;if(!(bDa(e,-1)|0)){if(!j)z=49}else z=47}else z=47;if((z|0)==47?j:0)z=49;if((z|0)==49)f[g>>2]=f[g>>2]|2;zta(C);zta(B);u=A;return i|0}while(0);e=Pa()|0}zta(C);zta(B);$a(e|0);return 0}function Kf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+224|0;q=z+198|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;Ax(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;k=bDa(d,-1)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(xn(d&255,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+1;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}C=gC(i,f[v>>2]|0,e,r)|0;f[g>>2]=C;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Lf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+224|0;q=z+198|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;Ax(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=b[i>>0]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=oHa(b[d>>0]|0)|0;k=bDa(d,-1)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(xn(d&255,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+1;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}C=hx(i,f[v>>2]|0,e,r)|0;f[g>>2]=C;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;i=bDa(d,-1)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=oHa(b[d>>0]|0)|0;if(!(bDa(d,-1)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Mf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;G=u;u=u+128|0;A=G+104|0;H=G+48|0;B=G+4|0;C=G;D=a+12|0;E=H+36|0;F=B+36|0;t=c+144|0;s=a+16|0;o=H+40|0;p=H+44|0;q=H+48|0;v=H+4|0;w=B+4|0;r=A+4|0;x=H+4|0;z=B+4|0;e=1;g=0;a:while(1){if(e){e=0;i=0}else{I=41;break}b:while(1){n=e;while(1){if(n>>>0>=(gKa(f[s>>2]|0)|0)>>>0){e=i;break b}h=bga(D,n)|0;h=xAa(f[h>>2]|0)|0;e=n+1|0;if(h|0){I=20;break}l=bga(D,n)|0;l=zAa(f[l>>2]|0)|0;if(!l){n=e;continue}m=l+8|0;h=xAa(f[m>>2]|0)|0;if(!h){n=e;continue}if(aE(h)|0){n=e;continue}j=h+8|0;if(!(pJa(f[j>>2]|0)|0)){g=h;I=19;break}f[A>>2]=h;Lea(H,d);f[E>>2]=f[j>>2];y=0;ja(1283,H|0,A|0);k=y;y=0;if(k&1){I=13;break a}y=0;k=oa(57,b[o>>0]|0,f[p>>2]|0,f[q>>2]|0)|0;J=y;y=0;if(J&1){I=13;break a}if(k)h=0;else{Jqa(B,d);f[F>>2]=f[j>>2];Ewa(B,c);y=0;ja(1284,B|0,A|0);J=y;y=0;if(J&1){I=16;break a}wsa(B)}wsa(H);if(!h)n=e;else{g=h;I=19;break}}if((I|0)==19){I=0;h=g+12|0;i=efa(h)|0;f[m>>2]=f[i>>2];_wa(l);h=efa(h)|0;f[h>>2]=l;Do(g);h=bga(D,n)|0;f[h>>2]=g;h=g;i=1;g=1}else if((I|0)==20)I=0;if(!(pJa(f[h+8>>2]|0)|0)){I=22;break}}if((I|0)==22){I=0;Wva(A,t);g=0;while(1){if((g|0)==(n|0))break;J=bga(D,g)|0;AW(A,f[J>>2]|0);g=g+1|0}g=h+12|0;Bwa(H,g);iua(B,g);g=f[B>>2]|0;h=f[w>>2]|0;while(1){if(!(Cpa(f[H>>2]|0,f[v>>2]|0,g,h)|0))break;J=ppa(H)|0;AW(A,f[J>>2]|0);bva(H)}while(1){if(e>>>0>=(gKa(f[s>>2]|0)|0)>>>0)break;J=bga(D,e)|0;AW(A,f[J>>2]|0);e=e+1|0}if(!(Pya(f[r>>2]|0)|0)){h=efa(A)|0;h=f[h>>2]|0;Bwa(H,A);iua(B,A);e=f[B>>2]|0;g=f[z>>2]|0;while(1){if(!(Cpa(f[H>>2]|0,f[x>>2]|0,e,g)|0))break;i=ppa(H)|0;j=f[i>>2]|0;if((j|0)!=(h|0)?rCa(f[j+4>>2]|0)|0:0){VBa(C,c);J=Una(f[C>>2]|0,f[i>>2]|0)|0;f[i>>2]=J}bva(H)}}V2(D,A);e=1;g=1}e=(e&1)!=0}if((I|0)==13)e=Pa()|0;else if((I|0)==16){e=Pa()|0;wsa(B)}else if((I|0)==41){if(g)Ela(a,f[a+4>>2]|0);u=G;return}wsa(H);$a(e|0)}function Nf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+352|0;t=C+208|0;h=C+200|0;i=C+196|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+337|0;s=C+336|0;pu(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;p=E+4|0;q=E+8|0;o=f[h>>2]|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;d=TDa(d)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[p>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(Cl(d,x,s,i,z,o,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+4;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+OK(i,f[z>>2]|0,e);n[g>>2]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Of(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+352|0;t=C+208|0;h=C+200|0;i=C+196|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+337|0;s=C+336|0;pu(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;o=E+4|0;q=E+8|0;n=f[h>>2]|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;d=TDa(d)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[o>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(Cl(d,x,s,i,z,n,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+4;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+MK(i,f[z>>2]|0,e);p[g>>3]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Pf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;C=u;u=u+352|0;t=C+208|0;h=C+200|0;i=C+196|0;D=C+184|0;E=C+172|0;z=C+168|0;A=C+8|0;v=C+4|0;w=C;x=C+337|0;s=C+336|0;pu(D,d,t,h,i);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[E+(d<<2)>>2]=0;d=d+1|0}r=E+11|0;if((b[r>>0]|0)<0)d=(f[E+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);q=y;y=0;if(q&1)d=Pa()|0;else{j=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=j;f[v>>2]=A;f[w>>2]=0;b[x>>0]=1;b[s>>0]=69;o=E+4|0;q=E+8|0;n=f[h>>2]|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){k=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;d=TDa(d)|0;k=d?0:j;h=d?0:h;l=d?0:a;a=d}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;j=y;y=0;if(j&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!a){B=34;break}}else B=18}else B=18;if((B|0)==18){B=0;if(a){c=0;B=34;break}else c=0}a=b[r>>0]|0;a=a<<24>>24<0?f[o>>2]|0:a&255;if((f[z>>2]|0)==(i+a|0)){y=0;ja(83,E|0,a<<1|0);j=y;y=0;if(j&1)break;if((b[r>>0]|0)<0)d=(f[q>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,E|0,d|0);j=y;y=0;if(j&1)break;i=(b[r>>0]|0)<0?f[E>>2]|0:E;f[z>>2]=i+a}a=k+12|0;d=f[a>>2]|0;j=k+16|0;if((d|0)==(f[j>>2]|0)){y=0;d=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(Cl(d,x,s,i,z,n,m,D,A,v,w,t)|0){B=34;break}d=f[a>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;F=y;y=0;if(F&1)break;else{j=k;a=l;continue}}else{f[a>>2]=d+4;j=k;a=l;continue}}do if((B|0)==34){F=b[D+11>>0]|0;d=f[v>>2]|0;if(!((b[x>>0]|0)==0?1:((F<<24>>24<0?f[D+4>>2]|0:F&255)|0)==0)?(d-A|0)<160:0){x=f[w>>2]|0;F=d+4|0;f[v>>2]=F;f[d>>2]=x;d=F}G=+PK(i,f[z>>2]|0,e);p[g>>3]=G;Iu(D,A,d,e);if(!k)i=1;else{d=f[k+12>>2]|0;if((d|0)==(f[k+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,k|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;F=y;y=0;if(F&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)B=49}else B=47}else B=47;if((B|0)==47?i:0)B=49;if((B|0)==49)f[e>>2]=f[e>>2]|2;zta(E);zta(D);u=C;return h|0}while(0);d=Pa()|0}zta(E);zta(D);$a(d|0);return 0}function Qf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+304|0;q=z+200|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;zx(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;k=TDa(d)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(Bn(d,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+4;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}v=eD(i,f[v>>2]|0,e,r)|0;C=g;f[C>>2]=v;f[C+4>>2]=J;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Rf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+304|0;q=z+200|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;zx(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;k=TDa(d)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(Bn(d,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+4;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}v=eF(i,f[v>>2]|0,e,r)|0;C=g;f[C>>2]=v;f[C+4>>2]=J;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Sf(a,c,e,g,h){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;A=u;u=u+304|0;r=A+200|0;j=A+196|0;B=A+184|0;C=A+172|0;w=A+168|0;x=A+8|0;v=A+4|0;t=A;i=f[e+4>>2]|0;zx(B,e,r,j);f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[C+(e<<2)>>2]=0;e=e+1|0}s=Rga(i)|0;q=C+11|0;if((b[q>>0]|0)<0)e=(f[C+8>>2]&2147483647)+-1|0;else e=10;y=0;ja(83,C|0,e|0);p=y;y=0;if(p&1)e=Pa()|0;else{k=(b[q>>0]|0)<0?f[C>>2]|0:C;f[w>>2]=k;f[v>>2]=x;f[t>>2]=0;o=C+4|0;p=C+8|0;n=f[j>>2]|0;j=k;k=a;i=a;while(1){if(!k){k=0;m=0;a=1}else{e=f[k+12>>2]|0;if((e|0)==(f[k+16>>2]|0)){y=0;e=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;m=y;y=0;if(m&1)break}else e=gKa(f[e>>2]|0)|0;l=TDa(e)|0;k=l?0:k;i=l?0:i;m=l?0:a;a=l}if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;e=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;l=y;y=0;if(l&1)break}else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0))if(a)l=c;else{z=34;break}else z=18}else z=18;if((z|0)==18){z=0;if(a){c=0;z=34;break}else l=0}c=b[q>>0]|0;c=c<<24>>24<0?f[o>>2]|0:c&255;if((f[w>>2]|0)==(j+c|0)){y=0;ja(83,C|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[q>>0]|0)<0)e=(f[p>>2]&2147483647)+-1|0;else e=10;y=0;ja(83,C|0,e|0);a=y;y=0;if(a&1)break;j=(b[q>>0]|0)<0?f[C>>2]|0:C;f[w>>2]=j+c}c=k+12|0;e=f[c>>2]|0;a=k+16|0;if((e|0)==(f[a>>2]|0)){y=0;e=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;D=y;y=0;if(D&1)break}else e=gKa(f[e>>2]|0)|0;if(Bn(e,s,j,w,t,n,B,x,v,r)|0){c=l;z=34;break}e=f[c>>2]|0;if((e|0)==(f[a>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;D=y;y=0;if(D&1)break;else{c=l;a=m;continue}}else{f[c>>2]=e+4;c=l;a=m;continue}}do if((z|0)==34){D=b[B+11>>0]|0;e=f[v>>2]|0;if(((D<<24>>24<0?f[B+4>>2]|0:D&255)|0)!=0?(e-x|0)<160:0){t=f[t>>2]|0;D=e+4|0;f[v>>2]=D;f[e>>2]=t;e=D}D=$A(j,f[w>>2]|0,g,s)|0;d[h>>1]=D;Iu(B,x,e,g);if(!k)j=1;else{e=f[k+12>>2]|0;if((e|0)==(f[k+16>>2]|0)){y=0;e=la(f[(f[m>>2]|0)+36>>2]|0,k|0)|0;D=y;y=0;if(D&1)break}else e=gKa(f[e>>2]|0)|0;j=TDa(e)|0;i=j?0:i}if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;e=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;D=y;y=0;if(D&1)break}else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0)){if(!j)z=49}else z=47}else z=47;if((z|0)==47?j:0)z=49;if((z|0)==49)f[g>>2]=f[g>>2]|2;zta(C);zta(B);u=A;return i|0}while(0);e=Pa()|0}zta(C);zta(B);$a(e|0);return 0}function Tf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+304|0;q=z+200|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;zx(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;k=TDa(d)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(Bn(d,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+4;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}C=gC(i,f[v>>2]|0,e,r)|0;f[g>>2]=C;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Uf(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+304|0;q=z+200|0;i=z+196|0;A=z+184|0;B=z+172|0;v=z+168|0;w=z+8|0;t=z+4|0;s=z;h=f[d+4>>2]|0;zx(A,d,q,i);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[B+(d<<2)>>2]=0;d=d+1|0}r=Rga(h)|0;p=B+11|0;if((b[p>>0]|0)<0)d=(f[B+8>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);o=y;y=0;if(o&1)d=Pa()|0;else{j=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=j;f[t>>2]=w;f[s>>2]=0;n=B+4|0;o=B+8|0;m=f[i>>2]|0;i=j;j=a;h=a;while(1){if(!j){j=0;l=0;a=1}else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;l=y;y=0;if(l&1)break}else d=gKa(f[d>>2]|0)|0;k=TDa(d)|0;j=k?0:j;h=k?0:h;l=k?0:a;a=k}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;k=y;y=0;if(k&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0))if(a)k=c;else{x=34;break}else x=18}else x=18;if((x|0)==18){x=0;if(a){c=0;x=34;break}else k=0}c=b[p>>0]|0;c=c<<24>>24<0?f[n>>2]|0:c&255;if((f[v>>2]|0)==(i+c|0)){y=0;ja(83,B|0,c<<1|0);a=y;y=0;if(a&1)break;if((b[p>>0]|0)<0)d=(f[o>>2]&2147483647)+-1|0;else d=10;y=0;ja(83,B|0,d|0);a=y;y=0;if(a&1)break;i=(b[p>>0]|0)<0?f[B>>2]|0:B;f[v>>2]=i+c}c=j+12|0;d=f[c>>2]|0;a=j+16|0;if((d|0)==(f[a>>2]|0)){y=0;d=la(f[(f[j>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(Bn(d,r,i,v,s,m,A,w,t,q)|0){c=k;x=34;break}d=f[c>>2]|0;if((d|0)==(f[a>>2]|0)){y=0;la(f[(f[j>>2]|0)+40>>2]|0,j|0)|0;C=y;y=0;if(C&1)break;else{c=k;a=l;continue}}else{f[c>>2]=d+4;c=k;a=l;continue}}do if((x|0)==34){C=b[A+11>>0]|0;d=f[t>>2]|0;if(((C<<24>>24<0?f[A+4>>2]|0:C&255)|0)!=0?(d-w|0)<160:0){s=f[s>>2]|0;C=d+4|0;f[t>>2]=C;f[d>>2]=s;d=C}C=hx(i,f[v>>2]|0,e,r)|0;f[g>>2]=C;Iu(A,w,d,e);if(!j)i=1;else{d=f[j+12>>2]|0;if((d|0)==(f[j+16>>2]|0)){y=0;d=la(f[(f[l>>2]|0)+36>>2]|0,j|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;i=TDa(d)|0;h=i?0:h}if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;d=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;C=y;y=0;if(C&1)break}else d=gKa(f[d>>2]|0)|0;if(!(TDa(d)|0)){if(!i)x=49}else x=47}else x=47;if((x|0)==47?i:0)x=49;if((x|0)==49)f[e>>2]=f[e>>2]|2;zta(B);zta(A);u=z;return h|0}while(0);d=Pa()|0}zta(B);zta(A);$a(d|0);return 0}function Vf(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;z=u;u=u+16|0;w=z;x=Jta(f[i>>2]|0,77588)|0;s=Jta(f[i>>2]|0,77596)|0;Mb[f[(f[s>>2]|0)+20>>2]&4095](w,s);f[h>>2]=e;i=b[a>>0]|0;switch(i<<24>>24){case 43:case 45:{y=0;i=ua(f[(f[x>>2]|0)+44>>2]|0,x|0,i|0)|0;t=y;y=0;if(!(t&1)){k=f[h>>2]|0;f[h>>2]=k+4;f[k>>2]=i;k=a+1|0;v=4}break}default:{k=a;v=4}}a:do if((v|0)==4){t=d;b:do if((t-k|0)>1?(b[k>>0]|0)==48:0){j=k+1|0;switch(b[j>>0]|0){case 88:case 120:break;default:{j=k;v=13;break b}}y=0;i=ua(f[(f[x>>2]|0)+44>>2]|0,x|0,48)|0;r=y;y=0;if(r&1)break a;r=f[h>>2]|0;f[h>>2]=r+4;f[r>>2]=i;k=k+2|0;y=0;i=ua(f[(f[x>>2]|0)+44>>2]|0,x|0,b[j>>0]|0)|0;r=y;y=0;if(r&1)break a;j=f[h>>2]|0;f[h>>2]=j+4;f[j>>2]=i;j=k;while(1){if(j>>>0>=d>>>0)break b;r=b[j>>0]|0;gpa()|0;if(!(PJa(r<<24>>24)|0))break b;j=j+1|0}}else{j=k;v=13}while(0);c:do if((v|0)==13)while(1){v=0;if(j>>>0>=d>>>0)break c;r=b[j>>0]|0;gpa()|0;if(!(yJa(r<<24>>24)|0))break c;j=j+1|0;v=13}while(0);o=w+11|0;n=b[o>>0]|0;p=w+4|0;q=k;r=a;d:do if((n<<24>>24<0?f[p>>2]|0:n&255)|0){e:do if((k|0)!=(j|0)){i=j;a=k;while(1){i=i+-1|0;if(a>>>0>=i>>>0)break e;n=b[a>>0]|0;b[a>>0]=b[i>>0]|0;b[i>>0]=n;a=a+1|0}}while(0);y=0;n=la(f[(f[s>>2]|0)+16>>2]|0,s|0)|0;m=y;y=0;if(m&1)break a;a=0;l=0;while(1){if(k>>>0>=j>>>0)break;i=b[o>>0]|0;m=i<<24>>24<0;A=b[(m?f[w>>2]|0:w)+a>>0]|0;if(A<<24>>24>0&(l|0)==(A<<24>>24|0)){l=f[h>>2]|0;f[h>>2]=l+4;f[l>>2]=n;a=(a>>>0<((m?f[p>>2]|0:i&255)+-1|0)>>>0&1)+a|0;l=0}y=0;i=ua(f[(f[x>>2]|0)+44>>2]|0,x|0,b[k>>0]|0)|0;A=y;y=0;if(A&1)break a;A=f[h>>2]|0;f[h>>2]=A+4;f[A>>2]=i;k=k+1|0;l=l+1|0}i=e+(q-r<<2)|0;a=f[h>>2]|0;if((i|0)==(a|0))k=x;else{k=a;while(1){k=k+-4|0;if(i>>>0>=k>>>0){k=x;i=a;break d}A=f[i>>2]|0;f[i>>2]=f[k>>2];f[k>>2]=A;i=i+4|0}}}else{y=0;xa(f[(f[x>>2]|0)+48>>2]|0,x|0,k|0,j|0,f[h>>2]|0)|0;A=y;y=0;if(A&1)break a;i=(f[h>>2]|0)+(j-q<<2)|0;f[h>>2]=i;k=x}while(0);while(1){if(j>>>0>=d>>>0)break;i=b[j>>0]|0;j=j+1|0;if(i<<24>>24==46){v=35;break}y=0;i=ua(f[(f[k>>2]|0)+44>>2]|0,x|0,i|0)|0;A=y;y=0;if(A&1)break a;q=f[h>>2]|0;A=q+4|0;f[h>>2]=A;f[q>>2]=i;i=A}if((v|0)==35){y=0;i=la(f[(f[s>>2]|0)+12>>2]|0,s|0)|0;A=y;y=0;if(A&1)break;v=f[h>>2]|0;A=v+4|0;f[h>>2]=A;f[v>>2]=i;i=A}y=0;xa(f[(f[x>>2]|0)+48>>2]|0,x|0,j|0,d|0,i|0)|0;A=y;y=0;if(!(A&1)){A=(f[h>>2]|0)+(t-j<<2)|0;f[h>>2]=A;f[g>>2]=(c|0)==(d|0)?A:e+(c-r<<2)|0;zta(w);u=z;return}}while(0);A=Pa()|0;zta(w);$a(A|0)}function Wf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=c+4|0;a:while(1){k=b;l=b+-4|0;while(1){b:while(1){j=a;e=k-j|0;g=e>>2;d=a+4|0;switch(g|0){case 1:case 0:break a;case 2:{n=5;break a}case 3:{n=7;break a}case 4:{n=8;break a}case 5:{n=9;break a}default:{}}if((e|0)<124){n=11;break a}h=a+(((g|0)/2|0)<<2)|0;if((e|0)>3996){e=(g|0)/4|0;e=hs(a,a+(e<<2)|0,h,h+(e<<2)|0,l,c)|0}else e=Gs(a,h,l,c)|0;if(er(f[c>>2]|0,f[m>>2]|0,f[a>>2]|0,f[h>>2]|0)|0){g=l;break}else g=l;while(1){g=g+-4|0;if((a|0)==(g|0))break;if(er(f[c>>2]|0,f[m>>2]|0,f[g>>2]|0,f[h>>2]|0)|0){n=28;break b}}if(!(er(f[c>>2]|0,f[m>>2]|0,f[a>>2]|0,f[l>>2]|0)|0)){while(1){if((d|0)==(l|0))break a;e=d+4|0;if(er(f[c>>2]|0,f[m>>2]|0,f[a>>2]|0,f[d>>2]|0)|0)break;else d=e}j=f[d>>2]|0;f[d>>2]=f[l>>2];f[l>>2]=j;d=e}if((d|0)==(l|0))break a;else e=l;while(1){while(1){g=d+4|0;if(er(f[c>>2]|0,f[m>>2]|0,f[a>>2]|0,f[d>>2]|0)|0)break;else d=g}do e=e+-4|0;while(er(f[c>>2]|0,f[m>>2]|0,f[a>>2]|0,f[e>>2]|0)|0);if(d>>>0>=e>>>0){a=d;continue b}j=f[d>>2]|0;f[d>>2]=f[e>>2];f[e>>2]=j;d=g}}if((n|0)==28){n=0;i=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=i;e=e+1|0}c:do if(d>>>0<g>>>0){i=h;while(1){while(1){h=d+4|0;if(er(f[c>>2]|0,f[m>>2]|0,f[d>>2]|0,f[i>>2]|0)|0)d=h;else break}do g=g+-4|0;while(!(er(f[c>>2]|0,f[m>>2]|0,f[g>>2]|0,f[i>>2]|0)|0));if(d>>>0>g>>>0){g=i;break c}o=f[d>>2]|0;f[d>>2]=f[g>>2];f[g>>2]=o;i=(i|0)==(d|0)?g:i;d=h;e=e+1|0}}else g=h;while(0);if((d|0)!=(g|0)?er(f[c>>2]|0,f[m>>2]|0,f[g>>2]|0,f[d>>2]|0)|0:0){o=f[d>>2]|0;f[d>>2]=f[g>>2];f[g>>2]=o;e=e+1|0}if(!e){e=fn(a,d,c)|0;g=d+4|0;if(fn(g,b,c)|0){n=44;break}if(e){a=g;continue}}o=d;if((o-j|0)>=(k-o|0)){n=43;break}Wf(a,d,c);a=d+4|0}if((n|0)==43){n=0;Wf(d+4|0,b,c);b=d;continue}else if((n|0)==44){n=0;if(e)break;else{b=d;continue}}}if((n|0)==5){if(er(f[c>>2]|0,f[m>>2]|0,f[l>>2]|0,f[a>>2]|0)|0){o=f[a>>2]|0;f[a>>2]=f[l>>2];f[l>>2]=o}}else if((n|0)==7)Gs(a,d,l,c)|0;else if((n|0)==8)Hv(a,d,a+8|0,l,c)|0;else if((n|0)==9)hs(a,d,a+8|0,a+12|0,l,c)|0;else if((n|0)==11)vy(a,b,c);return}function Xf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;z=u;u=u+256|0;r=z+240|0;o=z+232|0;v=z+216|0;e=z+208|0;w=z+100|0;x=z;tla(e,d);t=a+44|0;h=gq(t,e)|0;do if(!h){hca(x,c,uya(f[a+40>>2]|0)|0);Aua(w,e);mca(w+8|0,x);Aua(r,w);s=gKa(f[r+4>>2]|0)|0;p=a+48|0;d=f[p>>2]|0;q=(d|0)==0;a:do if(!q){l=d+-1|0;m=(l&d|0)==0;if(!m)if(s>>>0<d>>>0)e=s;else e=(s>>>0)%(d>>>0)|0;else e=l&s;c=f[(f[t>>2]|0)+(e<<2)>>2]|0;if(!c)g=22;else{h=r+4|0;k=o+4|0;while(1){c=f[c>>2]|0;if(!c){g=22;break a}g=f[c+4>>2]|0;if((g|0)!=(s|0)){if(!m){if(g>>>0>=d>>>0)g=(g>>>0)%(d>>>0)|0}else g=g&l;if((g|0)!=(e|0)){g=22;break a}}Aua(r,c+8|0);Aua(o,w);y=0;g=xa(17,f[r>>2]|0,f[h>>2]|0,f[o>>2]|0,f[k>>2]|0)|0;A=y;y=0;if(A&1)break;if(g){g=43;break a}}c=Pa()|0;g=46}}else{e=0;g=22}while(0);b:do if((g|0)==22){y=0;Ca(70,v|0,t|0,s|0,w|0);A=y;y=0;if(A&1){c=Pa()|0;g=46;break}h=a+56|0;i=+(((f[h>>2]|0)+1|0)>>>0);j=+n[a+60>>2];do if(q|i>+(d>>>0)*j){A=(d>>>0<3|(d+-1&d|0)!=0)&1|d<<1;r=~~+X(+(i/j))>>>0;y=0;ja(1467,t|0,(A>>>0<r>>>0?r:A)|0);A=y;y=0;if(!(A&1)){c=f[p>>2]|0;e=c+-1|0;if(!(e&c)){d=c;e=e&s;break}if(s>>>0<c>>>0){d=c;e=s;break}d=c;e=(s>>>0)%(c>>>0)|0;break}c=Pa()|0;e=f[v>>2]|0;f[v>>2]=0;if(e|0){if(b[v+8>>0]|0)Zva(e+8|0);$Ja(e)}g=46;break b}while(0);c=f[(f[t>>2]|0)+(e<<2)>>2]|0;if(!c){c=a+52|0;g=f[v>>2]|0;f[g>>2]=f[c>>2];f[c>>2]=g;f[(f[t>>2]|0)+(e<<2)>>2]=c;c=f[g>>2]|0;if(!c)c=v;else{c=f[c+4>>2]|0;e=d+-1|0;if(e&d){if(c>>>0>=d>>>0)c=(c>>>0)%(d>>>0)|0}else c=c&e;f[(f[t>>2]|0)+(c<<2)>>2]=g;c=v}}else{A=f[v>>2]|0;f[A>>2]=f[c>>2];f[c>>2]=A;c=v}f[h>>2]=(f[h>>2]|0)+1;f[c>>2]=0;g=43}while(0);if((g|0)==43){Zva(w);bCa(x);break}else if((g|0)==46){Zva(w);bCa(x);$a(c|0)}}else{g=h+20|0;e=d+4|0;if((f[g>>2]|0)==-1){x=gKa(f[a+32>>2]|0)|0;x=u1(x,f[e>>2]|0)|0;f[g>>2]=x;c=a+36|0;A=f[c>>2]|0;gKa(A)|0;VBa(r,A);A=h+16|0;x=Mba(r,x,f[f[A>>2]>>2]|0)|0;f[f[A>>2]>>2]=x}else c=a+36|0;A=f[c>>2]|0;gKa(A)|0;VBa(r,A);A=gia(r,f[g>>2]|0,f[e>>2]|0)|0;jva(f[a+16>>2]|0,A)|0}while(0);u=z;return}function Yf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;m=u;u=u+112|0;p=m+88|0;i=m+64|0;j=m+36|0;k=m+48|0;l=m+24|0;n=m+12|0;o=m;a:do if((((c-a|0)>2?(b[a>>0]|0)==99:0)?(b[a+1>>0]|0)==118:0)?(e=d+63|0,q=b[e>>0]|0,b[e>>0]=0,h=a+2|0,g=ic(h,c,d)|0,b[e>>0]=q,!((g|0)==(h|0)|(g|0)==(c|0))):0){if((b[g>>0]|0)!=95){e=fc(g,c,d)|0;if((e|0)==(g|0)){e=a;break}}else{e=g+1|0;if((e|0)==(c|0)){e=a;break}g=b[e>>0]|0;b:do if(g<<24>>24==69){g=d+4|0;c=f[g>>2]|0;if(c>>>0<(f[d+8>>2]|0)>>>0){f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;f[c+12>>2]=0;f[c+16>>2]=0;f[c+20>>2]=0;vT(c);f[g>>2]=(f[g>>2]|0)+24;break}else{Lu(d);break}}else while(1){if(g<<24>>24==69)break b;g=fc(e,c,d)|0;if((g|0)==(e|0)|(g|0)==(c|0)){e=a;break a}e=g;g=b[g>>0]|0}while(0);e=e+1|0}h=d+4|0;g=f[h>>2]|0;if(((g-(f[d>>2]|0)|0)/24|0)>>>0>=2){HL(p,g+-24|0);g=f[h>>2]|0;c=g+-24|0;a=g;while(1){if((a|0)==(c|0))break;q=a+-24|0;f[h>>2]=q;Xka(q);a=f[h>>2]|0}y=0;ja(2054,o|0,g+-48|0);q=y;y=0;if(q&1)e=Pa()|0;else{y=0;oa(77,o|0,0,72085)|0;q=y;y=0;if(q&1)e=Pa()|0;else{f[n>>2]=f[o>>2];f[n+4>>2]=f[o+4>>2];f[n+8>>2]=f[o+8>>2];g=0;while(1){if((g|0)==3)break;f[o+(g<<2)>>2]=0;g=g+1|0}y=0;ua(165,n|0,73249)|0;q=y;y=0;if(q&1)e=Pa()|0;else{f[l>>2]=f[n>>2];f[l+4>>2]=f[n+4>>2];f[l+8>>2]=f[n+8>>2];g=0;while(1){if((g|0)==3)break;f[n+(g<<2)>>2]=0;g=g+1|0}q=b[p+11>>0]|0;d=q<<24>>24<0;y=0;oa(73,l|0,(d?f[p>>2]|0:p)|0,(d?f[p+4>>2]|0:q&255)|0)|0;q=y;y=0;do if(q&1)e=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];g=0;while(1){if((g|0)==3)break;f[l+(g<<2)>>2]=0;g=g+1|0}y=0;ua(165,k|0,72083)|0;q=y;y=0;if(q&1){e=Pa()|0;zta(k);break}f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];g=0;while(1){if((g|0)==3)break;f[k+(g<<2)>>2]=0;g=g+1|0}hM(i,j);nu((f[h>>2]|0)+-24|0,i);Xka(i);zta(j);zta(k);zta(l);zta(n);zta(o);zta(p);break a}while(0);zta(l)}zta(n)}zta(o)}zta(p);$a(e|0)}else e=a}else e=a;while(0);u=m;return e|0}function Zf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0.0,i=0,j=0,k=0.0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=a+4|0;i=f[y>>2]|0;x=a+100|0;if(i>>>0<(f[x>>2]|0)>>>0){f[y>>2]=i+1;j=h[i>>0]|0;l=0}else{j=kz(a)|0;l=0}a:while(1){switch(j|0){case 46:{n=8;break a}case 48:break;default:{s=0;t=0;o=1.0;g=0.0;i=0;m=j;r=l;v=0;u=0;l=0;j=0;break a}}i=f[y>>2]|0;if(i>>>0<(f[x>>2]|0)>>>0){f[y>>2]=i+1;j=h[i>>0]|0;l=1;continue}else{j=kz(a)|0;l=1;continue}}if((n|0)==8){i=f[y>>2]|0;if(i>>>0<(f[x>>2]|0)>>>0){f[y>>2]=i+1;j=h[i>>0]|0}else j=kz(a)|0;if((j|0)==48){l=0;j=0;do{i=f[y>>2]|0;if(i>>>0<(f[x>>2]|0)>>>0){f[y>>2]=i+1;m=h[i>>0]|0}else m=kz(a)|0;l=Hsa(l|0,j|0,-1,-1)|0;j=J}while((m|0)==48);s=1;t=0;o=1.0;g=0.0;i=0;r=1;v=0;u=0}else{s=1;t=0;o=1.0;g=0.0;i=0;m=j;r=l;v=0;u=0;l=0;j=0}}while(1){n=m+-48|0;p=(m|0)==46;if(n>>>0>=10?!(p|((m|32)+-97|0)>>>0<6):0)break;if(p)if(!s){s=1;n=t;k=o;l=u;j=v;q=u;p=v}else{m=46;break}else{m=(m|0)>57?(m|32)+-87|0:n;do if(!((v|0)<0|(v|0)==0&u>>>0<8))if((v|0)<0|(v|0)==0&u>>>0<14){o=o*.0625;n=t;k=o;g=g+o*+(m|0);break}else{r=(t|0)!=0|(m|0)==0;n=r?t:1;k=o;g=r?g:g+o*.5;break}else{n=t;k=o;i=m+(i<<4)|0}while(0);q=Hsa(u|0,v|0,1,0)|0;r=1;p=J}m=f[y>>2]|0;if(m>>>0<(f[x>>2]|0)>>>0){f[y>>2]=m+1;t=n;o=k;m=h[m>>0]|0;v=p;u=q;continue}else{t=n;o=k;m=kz(a)|0;v=p;u=q;continue}}do if(!r){i=(f[x>>2]|0)!=0;if(i)f[y>>2]=(f[y>>2]|0)+-1;if(e){if(i?(w=f[y>>2]|0,f[y>>2]=w+-1,s|0):0)f[y>>2]=w+-2}else z9(a,0);g=+(d|0)*0.0}else{p=(s|0)==0;q=p?u:l;p=p?v:j;if((v|0)<0|(v|0)==0&u>>>0<8){l=u;j=v;do{i=i<<4;l=Hsa(l|0,j|0,1,0)|0;j=J}while((j|0)<0|(j|0)==0&l>>>0<8);n=i}else n=i;if((m|32|0)==112){j=Em(a,e)|0;i=J;if((j|0)==0&(i|0)==-2147483648){if(!e){z9(a,0);g=0.0;break}if(!(f[x>>2]|0)){j=0;i=0}else{f[y>>2]=(f[y>>2]|0)+-1;j=0;i=0}}}else if(!(f[x>>2]|0)){j=0;i=0}else{f[y>>2]=(f[y>>2]|0)+-1;j=0;i=0}l=gna(q|0,p|0,2)|0;l=Hsa(l|0,J|0,-32,-1)|0;l=Hsa(l|0,J|0,j|0,i|0)|0;i=J;if(!n){g=+(d|0)*0.0;break}y=0-c|0;e=((y|0)<0)<<31>>31;if((i|0)>(e|0)|(i|0)==(e|0)&l>>>0>y>>>0){f[2619]=34;g=+(d|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}y=c+-106|0;e=((y|0)<0)<<31>>31;if((i|0)<(e|0)|(i|0)==(e|0)&l>>>0<y>>>0){f[2619]=34;g=+(d|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if((n|0)>-1){j=n;do{y=!(g>=.5);j=j<<1|(y^1)&1;g=g+(y?g:g+-1.0);l=Hsa(l|0,i|0,-1,-1)|0;i=J}while((j|0)>-1);o=g;m=j}else{o=g;m=n}y=((b|0)<0)<<31>>31;c=Aoa(32,0,c|0,((c|0)<0)<<31>>31|0)|0;i=Hsa(c|0,J|0,l|0,i|0)|0;c=J;if((y|0)>(c|0)|(y|0)==(c|0)&b>>>0>i>>>0)if((i|0)>0)n=58;else{j=0;i=84;n=60}else{i=b;n=58}if((n|0)==58)if((i|0)<53){j=i;i=84-i|0;n=60}else{k=0.0;g=+(d|0)}if((n|0)==60){g=+(d|0);k=+lJa(+KI(1.0,i),g);i=j}d=(m&1|0)==0&(o!=0.0&(i|0)<32);g=g*(d?0.0:o)+(k+g*+(((d&1)+m|0)>>>0))-k;if(!(g!=0.0))f[2619]=34;g=+oJa(g,l)}while(0);return +g}function _f(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;x=u;u=u+16|0;v=x;w=Jta(f[i>>2]|0,77556)|0;s=Jta(f[i>>2]|0,77572)|0;Mb[f[(f[s>>2]|0)+20>>2]&4095](v,s);f[h>>2]=e;i=b[a>>0]|0;switch(i<<24>>24){case 43:case 45:{y=0;i=ua(f[(f[w>>2]|0)+28>>2]|0,w|0,i|0)|0;r=y;y=0;if(!(r&1)){j=f[h>>2]|0;f[h>>2]=j+1;b[j>>0]=i;j=a+1|0;t=4}break}default:{j=a;t=4}}a:do if((t|0)==4){r=d;b:do if((r-j|0)>1?(b[j>>0]|0)==48:0){k=j+1|0;switch(b[k>>0]|0){case 88:case 120:break;default:{i=j;t=13;break b}}y=0;i=ua(f[(f[w>>2]|0)+28>>2]|0,w|0,48)|0;q=y;y=0;if(q&1)break a;q=f[h>>2]|0;f[h>>2]=q+1;b[q>>0]=i;j=j+2|0;y=0;i=ua(f[(f[w>>2]|0)+28>>2]|0,w|0,b[k>>0]|0)|0;q=y;y=0;if(q&1)break a;q=f[h>>2]|0;f[h>>2]=q+1;b[q>>0]=i;i=j;while(1){if(i>>>0>=d>>>0)break b;q=b[i>>0]|0;gpa()|0;if(!(PJa(q<<24>>24)|0))break b;i=i+1|0}}else{i=j;t=13}while(0);c:do if((t|0)==13)while(1){t=0;if(i>>>0>=d>>>0)break c;q=b[i>>0]|0;gpa()|0;if(!(yJa(q<<24>>24)|0))break c;i=i+1|0;t=13}while(0);n=v+11|0;m=b[n>>0]|0;o=v+4|0;p=j;q=a;d:do if((m<<24>>24<0?f[o>>2]|0:m&255)|0){e:do if((j|0)!=(i|0)){k=i;a=j;while(1){k=k+-1|0;if(a>>>0>=k>>>0)break e;m=b[a>>0]|0;b[a>>0]=b[k>>0]|0;b[k>>0]=m;a=a+1|0}}while(0);y=0;m=la(f[(f[s>>2]|0)+16>>2]|0,s|0)|0;l=y;y=0;if(l&1)break a;k=0;a=0;while(1){if(j>>>0>=i>>>0)break;l=b[((b[n>>0]|0)<0?f[v>>2]|0:v)+k>>0]|0;if(l<<24>>24>0&(a|0)==(l<<24>>24|0)){a=f[h>>2]|0;f[h>>2]=a+1;b[a>>0]=m;a=b[n>>0]|0;k=(k>>>0<((a<<24>>24<0?f[o>>2]|0:a&255)+-1|0)>>>0&1)+k|0;a=0}y=0;l=ua(f[(f[w>>2]|0)+28>>2]|0,w|0,b[j>>0]|0)|0;z=y;y=0;if(z&1)break a;z=f[h>>2]|0;f[h>>2]=z+1;b[z>>0]=l;j=j+1|0;a=a+1|0}k=e+(p-q)|0;j=f[h>>2]|0;if((k|0)==(j|0))k=w;else while(1){j=j+-1|0;if(k>>>0>=j>>>0){k=w;break d}z=b[k>>0]|0;b[k>>0]=b[j>>0]|0;b[j>>0]=z;k=k+1|0}}else{y=0;xa(f[(f[w>>2]|0)+32>>2]|0,w|0,j|0,i|0,f[h>>2]|0)|0;z=y;y=0;if(z&1)break a;f[h>>2]=(f[h>>2]|0)+(i-p);k=w}while(0);while(1){if(i>>>0>=d>>>0)break;j=b[i>>0]|0;i=i+1|0;if(j<<24>>24==46){t=35;break}y=0;j=ua(f[(f[k>>2]|0)+28>>2]|0,w|0,j|0)|0;z=y;y=0;if(z&1)break a;z=f[h>>2]|0;f[h>>2]=z+1;b[z>>0]=j}if((t|0)==35){y=0;j=la(f[(f[s>>2]|0)+12>>2]|0,s|0)|0;z=y;y=0;if(z&1)break;z=f[h>>2]|0;f[h>>2]=z+1;b[z>>0]=j}y=0;xa(f[(f[w>>2]|0)+32>>2]|0,w|0,i|0,d|0,f[h>>2]|0)|0;z=y;y=0;if(!(z&1)){z=(f[h>>2]|0)+(r-i)|0;f[h>>2]=z;f[g>>2]=(c|0)==(d|0)?z:e+(c-q)|0;zta(v);u=x;return}}while(0);z=Pa()|0;zta(v);$a(z|0)}function $f(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+16|0;e=m;do if(!(b[a+28>>0]&1))d=c;else{h=Vea(76852,19366)|0;h=K2(h,f[c>>2]|0)|0;Axa(e,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[e>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(e);jn(h,g)|0;Yp(h)|0;d=c;break}m=Pa()|0;pza(e);$a(m|0)}while(0);l=OG(Vn(f[d>>2]|0)|0)|0;k=a+44|0;d=f[k>>2]|0;e=a+48|0;while(1){g=f[e>>2]|0;if((g|0)==(d|0))break;j=g+-12|0;f[e>>2]=j;E4(j)}SI(k);j=a+32|0;d=f[j>>2]|0;e=a+36|0;g=f[e>>2]|0;while(1){if((g|0)==(d|0))break;i=g+-4|0;f[e>>2]=i;g=i}EO(j,5);d=f[j>>2]|0;f[d+16>>2]=0;f[d+12>>2]=0;f[d+4>>2]=0;d=0;while(1){if(d>>>0>=(Rya(c)|0)>>>0)break;i=Vn(Cea(c,d)|0)|0;EM(l,i);e=UAa(l,3)|0;e=gKa(f[e>>2]|0)|0;g=Bea(i)|0;h=f[18859]|0;i=Bea(i)|0;l6(e,gKa(Nq(g,h,Fw(i,q5(YV(c,d)|0)|0)|0)|0)|0)|0;d=d+1|0}h=JT()|0;i=UAa(l,3)|0;i=yja(gKa(f[i>>2]|0)|0)|0;n=UAa(l,3)|0;l6(gKa(f[n>>2]|0)|0,h)|0;n=c+36|0;sL(a,f[n>>2]|0);n=U3(a,f[n>>2]|0)|0;g=c+4|0;d=f[g>>2]|0;e=(d|0)!=0;do if(n){if(e)d=ch(a,d,c)|0;else d=f[18679]|0;Dt(l,gKa($E(a,c,d)|0)|0);if(f[g>>2]|0){e=UAa(l,3)|0;e=gKa(f[e>>2]|0)|0;n=Bea(d)|0;l6(e,gKa(hP(Fw(n,q5(f[g>>2]|0)|0)|0)|0)|0)|0;AO(f[a+44>>2]|0,f[g>>2]|0,d)}}else if(e){e=UAa(l,3)|0;e=gKa(f[e>>2]|0)|0;n=$E(a,c,f[18680]|0)|0;l6(e,gKa(hP(Fw(n,q5(f[g>>2]|0)|0)|0)|0)|0)|0;break}else{Dt(l,$E(a,c,f[18679]|0)|0);break}while(0);d=Rya(c)|0;while(1){if(d>>>0>=(Pqa(c)|0)>>>0)break;n=Vn(Cea(c,d)|0)|0;mD(h,n,mj(q5(YV(c,d)|0)|0)|0);d=d+1|0}n=UAa(h,1)|0;if(!(yja(gKa(f[n>>2]|0)|0)|0)){n=UAa(l,3)|0;pz(gKa(f[n>>2]|0)|0,i)}e=f[k>>2]|0;d=f[j>>2]|0;if(((f[e+16>>2]|0)-(f[e+12>>2]|0)>>2|0)!=(f[d+4>>2]|0))Na(19385,19319,568,19417);if(((f[e+40>>2]|0)-(f[e+36>>2]|0)>>2|0)!=(f[d+12>>2]|0))Na(19433,19319,569,19417);if(((f[e+52>>2]|0)-(f[e+48>>2]|0)>>2|0)==(f[d+16>>2]|0)){h4(a+56|0);u=m;return l|0}else Na(19465,19319,570,19417);return 0}function ag(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+32|0;m=n+4|0;g=n;b=a+16|0;c=f[b>>2]|0;a:do if(c>>>0>1023){f[b>>2]=c+-1024;i=a+4|0;h=f[i>>2]|0;k=f[h>>2]|0;h=h+4|0;f[i>>2]=h;j=a+8|0;b=f[j>>2]|0;c=a+12|0;l=f[c>>2]|0;d=l;g=b;do if((b|0)==(l|0)){l=f[a>>2]|0;b=l;if(h>>>0<=l>>>0){b=d-b>>1;b=(b|0)==0?1:b;fF(m,b,b>>>2,a+12|0);zV(m,f[i>>2]|0,f[j>>2]|0);b=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=b;b=m+4|0;a=f[i>>2]|0;f[i>>2]=f[b>>2];f[b>>2]=a;b=m+8|0;a=f[j>>2]|0;f[j>>2]=f[b>>2];f[b>>2]=a;b=m+12|0;a=f[c>>2]|0;f[c>>2]=f[b>>2];f[b>>2]=a;M1(m);b=f[j>>2]|0;break}c=h;d=((c-b>>2)+1|0)/-2|0;e=h+(d<<2)|0;b=g-c|0;c=b>>2;if(!c)b=h;else{S0(e|0,h|0,b|0)|0;b=f[i>>2]|0}m=e+(c<<2)|0;f[j>>2]=m;f[i>>2]=b+(d<<2);b=m}while(0);f[b>>2]=k;f[j>>2]=(f[j>>2]|0)+4}else{l=a+8|0;b=f[l>>2]|0;k=a+4|0;c=b-(f[k>>2]|0)|0;j=a+12|0;d=f[j>>2]|0;e=d-(f[a>>2]|0)|0;if(c>>>0<e>>>0){if((d|0)!=(b|0)){l=nV(4096)|0;f[m>>2]=l;Kp(a,m);break}h=nV(4096)|0;f[m>>2]=h;cp(a,m);h=f[k>>2]|0;i=f[h>>2]|0;h=h+4|0;f[k>>2]=h;b=f[l>>2]|0;e=f[j>>2]|0;c=e;g=b;do if((b|0)==(e|0)){e=f[a>>2]|0;b=e;if(h>>>0<=e>>>0){b=c-b>>1;b=(b|0)==0?1:b;fF(m,b,b>>>2,a+12|0);zV(m,f[k>>2]|0,f[l>>2]|0);b=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=b;b=m+4|0;a=f[k>>2]|0;f[k>>2]=f[b>>2];f[b>>2]=a;b=m+8|0;a=f[l>>2]|0;f[l>>2]=f[b>>2];f[b>>2]=a;b=m+12|0;a=f[j>>2]|0;f[j>>2]=f[b>>2];f[b>>2]=a;M1(m);b=f[l>>2]|0;break}c=h;d=((c-b>>2)+1|0)/-2|0;e=h+(d<<2)|0;b=g-c|0;c=b>>2;if(!c)b=h;else{S0(e|0,h|0,b|0)|0;b=f[k>>2]|0}m=e+(c<<2)|0;f[l>>2]=m;f[k>>2]=b+(d<<2);b=m}while(0);f[b>>2]=i;f[l>>2]=(f[l>>2]|0)+4;break}b=e>>1;fF(m,(b|0)==0?1:b,c>>2,a+12|0);y=0;b=la(150,4096)|0;i=y;y=0;do if(!(i&1)){f[g>>2]=b;y=0;ja(590,m|0,g|0);i=y;y=0;if(i&1){n=Pa()|0;$Ja(b);b=n;break}b=f[l>>2]|0;while(1){if((b|0)==(f[k>>2]|0)){c=23;break}b=b+-4|0;y=0;ja(591,m|0,b|0);i=y;y=0;if(i&1){c=26;break}}if((c|0)==23){i=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=i;a=m+4|0;f[k>>2]=f[a>>2];f[a>>2]=b;a=m+8|0;k=f[l>>2]|0;f[l>>2]=f[a>>2];f[a>>2]=k;a=m+12|0;l=f[j>>2]|0;f[j>>2]=f[a>>2];f[a>>2]=l;M1(m);break a}else if((c|0)==26){b=Pa()|0;break}}else b=Pa()|0;while(0);M1(m);$a(b|0)}while(0);u=n;return}function bg(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+32|0;m=n+4|0;g=n;b=a+16|0;c=f[b>>2]|0;a:do if(c>>>0>1023){f[b>>2]=c+-1024;i=a+4|0;h=f[i>>2]|0;k=f[h>>2]|0;h=h+4|0;f[i>>2]=h;j=a+8|0;b=f[j>>2]|0;c=a+12|0;l=f[c>>2]|0;d=l;g=b;do if((b|0)==(l|0)){l=f[a>>2]|0;b=l;if(h>>>0<=l>>>0){b=d-b>>1;b=(b|0)==0?1:b;fF(m,b,b>>>2,a+12|0);zV(m,f[i>>2]|0,f[j>>2]|0);b=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=b;b=m+4|0;a=f[i>>2]|0;f[i>>2]=f[b>>2];f[b>>2]=a;b=m+8|0;a=f[j>>2]|0;f[j>>2]=f[b>>2];f[b>>2]=a;b=m+12|0;a=f[c>>2]|0;f[c>>2]=f[b>>2];f[b>>2]=a;M1(m);b=f[j>>2]|0;break}c=h;d=((c-b>>2)+1|0)/-2|0;e=h+(d<<2)|0;b=g-c|0;c=b>>2;if(!c)b=h;else{S0(e|0,h|0,b|0)|0;b=f[i>>2]|0}m=e+(c<<2)|0;f[j>>2]=m;f[i>>2]=b+(d<<2);b=m}while(0);f[b>>2]=k;f[j>>2]=(f[j>>2]|0)+4}else{l=a+8|0;b=f[l>>2]|0;k=a+4|0;c=b-(f[k>>2]|0)|0;j=a+12|0;d=f[j>>2]|0;e=d-(f[a>>2]|0)|0;if(c>>>0<e>>>0){if((d|0)!=(b|0)){l=nV(4096)|0;f[m>>2]=l;Kp(a,m);break}h=nV(4096)|0;f[m>>2]=h;cp(a,m);h=f[k>>2]|0;i=f[h>>2]|0;h=h+4|0;f[k>>2]=h;b=f[l>>2]|0;e=f[j>>2]|0;c=e;g=b;do if((b|0)==(e|0)){e=f[a>>2]|0;b=e;if(h>>>0<=e>>>0){b=c-b>>1;b=(b|0)==0?1:b;fF(m,b,b>>>2,a+12|0);zV(m,f[k>>2]|0,f[l>>2]|0);b=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=b;b=m+4|0;a=f[k>>2]|0;f[k>>2]=f[b>>2];f[b>>2]=a;b=m+8|0;a=f[l>>2]|0;f[l>>2]=f[b>>2];f[b>>2]=a;b=m+12|0;a=f[j>>2]|0;f[j>>2]=f[b>>2];f[b>>2]=a;M1(m);b=f[l>>2]|0;break}c=h;d=((c-b>>2)+1|0)/-2|0;e=h+(d<<2)|0;b=g-c|0;c=b>>2;if(!c)b=h;else{S0(e|0,h|0,b|0)|0;b=f[k>>2]|0}m=e+(c<<2)|0;f[l>>2]=m;f[k>>2]=b+(d<<2);b=m}while(0);f[b>>2]=i;f[l>>2]=(f[l>>2]|0)+4;break}b=e>>1;fF(m,(b|0)==0?1:b,c>>2,a+12|0);y=0;b=la(150,4096)|0;i=y;y=0;do if(!(i&1)){f[g>>2]=b;y=0;ja(600,m|0,g|0);i=y;y=0;if(i&1){n=Pa()|0;$Ja(b);b=n;break}b=f[l>>2]|0;while(1){if((b|0)==(f[k>>2]|0)){c=23;break}b=b+-4|0;y=0;ja(601,m|0,b|0);i=y;y=0;if(i&1){c=26;break}}if((c|0)==23){i=f[a>>2]|0;f[a>>2]=f[m>>2];f[m>>2]=i;a=m+4|0;f[k>>2]=f[a>>2];f[a>>2]=b;a=m+8|0;k=f[l>>2]|0;f[l>>2]=f[a>>2];f[a>>2]=k;a=m+12|0;l=f[j>>2]|0;f[j>>2]=f[a>>2];f[a>>2]=l;M1(m);break a}else if((c|0)==26){b=Pa()|0;break}}else b=Pa()|0;while(0);M1(m);$a(b|0)}while(0);u=n;return}function cg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=u;u=u+64|0;s=q+44|0;h=q+32|0;k=q+24|0;p=q+8|0;l=q;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=uHa(19350)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[h+11>>0]=g;e=h}else{m=g+16&-16;e=nV(m)|0;f[h>>2]=e;f[h+8>>2]=m|-2147483648;f[h+4>>2]=g}Pta(e,19350,g)|0;SBa(e+g|0,0);m=gKa(f[c+24>>2]|0)|0;y=0;ua(50,h|0,m|0)|0;m=y;y=0;if(m&1){d=Pa()|0;zta(h)}else{f[s>>2]=f[h>>2];f[s+4>>2]=f[h+4>>2];f[s+8>>2]=f[h+8>>2];e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}zta(h);y=0;ya(64,h|0,((b[s+11>>0]|0)<0?f[s>>2]|0:s)|0,0);m=y;y=0;if(m&1)d=Pa()|0;else{f[k>>2]=h;f[k+4>>2]=a;m=c+4|0;h=c+8|0;e=c+28|0;do if(Xha(f[a>>2]|0,c)|0){y=0;g=wa(3)|0;o=y;y=0;if(o&1)r=19;else{y=0;ga(4,p|0,1,f[a>>2]|0,f[a+8>>2]|0,f[18679]|0);o=y;y=0;if(o&1){d=Pa()|0;break}y=0;e=oa(40,a|0,f[e>>2]|0,p|0)|0;o=y;y=0;if((((!(o&1)?(y=0,ja(78,g|0,e|0),o=y,y=0,!(o&1)):0)?(y=0,i=la(154,p|0)|0,o=y,y=0,!(o&1)):0)?(y=0,j=ua(57,k|0,i|0)|0,o=y,y=0,!(o&1)):0)?(y=0,d=ka(40,a|0,h|0,g|0,j|0,f[a+4>>2]|0,f[m>>2]|0)|0,a=y,y=0,!(a&1)):0){iX(p);r=40;break}d=Pa()|0;iX(p)}}else{y=0;d=oa(38,a|0,f[e>>2]|0,f[18680]|0)|0;j=y;y=0;if(!(j&1)?(y=0,n=ua(57,k|0,d|0)|0,k=y,y=0,!(k&1)):0){Bwa(p,h);iua(l,h);i=p+4|0;j=f[l>>2]|0;c=f[l+4>>2]|0;while(1){if(!(Cpa(f[p>>2]|0,f[i>>2]|0,j,c)|0))break;y=0;d=la(156,p|0)|0;l=y;y=0;if(l&1){r=27;break}e=f[d>>2]|0;y=0;d=ua(56,n|0,2)|0;l=y;y=0;if(l&1){r=27;break}h=gKa(f[d>>2]|0)|0;y=0;g=oa(38,a|0,e|0,f[18680]|0)|0;l=y;y=0;if(l&1){r=27;break}y=0;d=la(155,f[e+4>>2]|0)|0;l=y;y=0;if(l&1){r=27;break}y=0;d=ua(58,g|0,d|0)|0;l=y;y=0;if(l&1){r=27;break}y=0;ua(49,h|0,d|0)|0;l=y;y=0;if(l&1){r=27;break}bva(p)}if((r|0)==27){d=Pa()|0;break}y=0;d=la(155,f[m>>2]|0)|0;p=y;y=0;if(!(p&1)?(y=0,o=ua(58,n|0,d|0)|0,p=y,y=0,!(p&1)):0){d=o;r=40;break}d=Pa()|0}else r=19}while(0);if((r|0)==19)d=Pa()|0;else if((r|0)==40){zta(s);u=q;return d|0}}zta(s)}$a(d|0);return 0}function dg(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+64|0;p=o+48|0;m=o+24|0;i=o;n=o+12|0;a:do if(((((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==90:0)?(e=a+2|0,(b[e>>0]|0)==84):0)?(k=d+4|0,j=((f[k>>2]|0)-(f[d>>2]|0)|0)/24|0,l=ih(e,c,d)|0,h=((f[k>>2]|0)-(f[d>>2]|0)|0)/24|0,(l|0)!=(e|0)):0){f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;c=uHa(72296)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[p+11>>0]=c;a=p}else{e=c+16&-16;a=QCa(e)|0;f[p>>2]=a;f[p+8>>2]=e|-2147483648;f[p+4>>2]=c}Pta(a,72296,c)|0;SBa(a+c|0,0);b:do if((j|0)==(h|0))g=31;else{y=0;ja(2054,m|0,(f[d>>2]|0)+(j*24|0)|0);e=y;y=0;do if(e&1)a=Pa()|0;else{e=b[m+11>>0]|0;c=e<<24>>24<0;y=0;oa(73,p|0,(c?f[m>>2]|0:m)|0,(c?f[m+4>>2]|0:e&255)|0)|0;e=y;y=0;if(e&1){a=Pa()|0;zta(m);break}zta(m);e=m+11|0;g=m+4|0;a=j;while(1){a=a+1|0;if((a|0)==(h|0)){g=31;break b}y=0;ja(2054,i|0,(f[d>>2]|0)+(a*24|0)|0);c=y;y=0;if(c&1){g=26;break}y=0;oa(77,i|0,0,72307)|0;c=y;y=0;if(c&1){g=27;break}f[m>>2]=f[i>>2];f[m+4>>2]=f[i+4>>2];f[m+8>>2]=f[i+8>>2];c=0;while(1){if((c|0)==3)break;f[i+(c<<2)>>2]=0;c=c+1|0}c=b[e>>0]|0;q=c<<24>>24<0;y=0;oa(73,p|0,(q?f[m>>2]|0:m)|0,(q?f[g>>2]|0:c&255)|0)|0;c=y;y=0;if(c&1){g=28;break}zta(m);zta(i)}if((g|0)==26)a=Pa()|0;else if((g|0)==27){a=Pa()|0;g=29}else if((g|0)==28){a=Pa()|0;zta(m);g=29}if((g|0)==29)zta(i);break b}while(0)}while(0);do if((g|0)==31){y=0;ua(165,p|0,72083)|0;q=y;y=0;if(q&1){a=Pa()|0;break}else a=h;while(1){if((a|0)==(j|0))break;e=f[k>>2]|0;c=e+-24|0;while(1){if((e|0)==(c|0))break;q=e+-24|0;f[k>>2]=q;Xka(q);e=f[k>>2]|0}a=a+-1|0}f[n>>2]=f[p>>2];f[n+4>>2]=f[p+4>>2];f[n+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}hM(m,n);a=f[k>>2]|0;if(a>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,m|0);q=y;y=0;if(q&1){a=Pa()|0;Xka(m);zta(n);break}}else{ZL(a,m);f[k>>2]=(f[k>>2]|0)+24}Xka(m);zta(n);zta(p);a=l;break a}while(0);zta(p);$a(a|0)}while(0);u=o;return a|0}function eg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;w=u;u=u+48|0;s=w+40|0;p=w+36|0;o=w+16|0;g=w;q=w+32|0;r=w+28|0;t=w+12|0;VBa(p,c);v=nV(84)|0;dM(v);f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=uHa(46138)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[g+11>>0]=e;d=g}else{n=e+16&-16;d=nV(n)|0;f[g>>2]=d;f[g+8>>2]=n|-2147483648;f[g+4>>2]=e}Pta(d,46138,e)|0;SBa(d+e|0,0);y=0;ua(50,g|0,f[a>>2]|0)|0;n=y;y=0;do if(n&1)d=Pa()|0;else{f[o>>2]=f[g>>2];f[o+4>>2]=f[g+4>>2];f[o+8>>2]=f[g+8>>2];d=0;while(1){if((d|0)==3)break;f[g+(d<<2)>>2]=0;d=d+1|0}y=0;ja(582,s|0,o|0);n=y;y=0;if(n&1){d=Pa()|0;zta(o);break}f[v>>2]=f[s>>2];zta(o);zta(g);d=ysa(c+144|0)|0;f[d+24>>2]=f[a>>2];i=a+4|0;f[d+4>>2]=f[i>>2];j=f[a+12>>2]|0;k=v+8|0;l=d+8|0;m=v+12|0;n=v+16|0;h=f[a+8>>2]|0;while(1){if((h|0)==(j|0))break;g=f[h>>2]|0;f[s>>2]=g;do if((g|0)==2){e=(f[m>>2]|0)-(f[k>>2]|0)>>2;AW(l,a5(p,e,e+1|0)|0);f[o>>2]=1;e=f[m>>2]|0;g=f[n>>2]|0;if(e>>>0<g>>>0){f[e>>2]=1;a=e+4|0;f[m>>2]=a;e=g}else{XC(k,o);a=f[m>>2]|0;e=f[n>>2]|0}f[o>>2]=1;if(a>>>0<e>>>0){f[a>>2]=1;f[m>>2]=a+4}else XC(k,o)}else{e=(f[m>>2]|0)-(f[k>>2]|0)>>2;if((g|0)!=3){AW(l,gia(p,e,g)|0);e=f[m>>2]|0;if((e|0)==(f[n>>2]|0)){XC(k,s);break}else{f[e>>2]=g;f[m>>2]=e+4;break}}e=gia(p,e,4)|0;AW(l,dea(f[p>>2]|0,44,e)|0);f[o>>2]=4;e=f[m>>2]|0;if(e>>>0<(f[n>>2]|0)>>>0){f[e>>2]=4;f[m>>2]=e+4}else XC(k,o)}while(0);h=h+4|0}e=f[i>>2]|0;g=v+4|0;switch(e|0){case 2:{f[g>>2]=1;cJa(q);f[s>>2]=f[q>>2];o=Xt(v,s,2)|0;q=kaa(f[p>>2]|0,0)|0;n=q+12|0;AW(n,iea(f[p>>2]|0,o,d)|0);ZC(c);f[r>>2]=f[18953];d=mH(p,o)|0;f[s>>2]=f[r>>2];AW(n,vda(p,s,d)|0);AW(n,tha(p,o)|0);Do(q);d=q;break}case 3:{f[g>>2]=4;d=dea(f[p>>2]|0,43,d)|0;break}default:f[g>>2]=e}f[v+36>>2]=d;f[t>>2]=f[v>>2];f[s>>2]=f[t>>2];if(!(w$(c,s)|0))zt(c,v);u=w;return f[v>>2]|0}while(0);zta(g);$a(d|0);return 0}function fg(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=u;u=u+80|0;j=g+48|0;k=g+60|0;l=g+36|0;m=g+24|0;n=g+12|0;p=g;h=aua(f[a+4>>2]|0)|0;f[h+8>>2]=d;o=sra(a,lj(c,1)|0)|0;i=h+12|0;f[i>>2]=o;qt(h);switch(d|0){case 5:case 3:case 1:case 19:case 17:case 15:case 13:case 11:case 9:case 7:case 21:case 4:case 2:case 0:case 18:case 16:case 14:case 12:case 10:case 8:case 6:case 20:{q=2;break}case 42:case 40:case 38:case 36:case 46:case 41:case 39:case 37:case 35:case 45:case 34:case 32:case 30:case 28:case 26:case 33:case 31:case 29:case 27:case 25:case 44:case 43:case 24:case 23:case 22:break;default:Ka()}if((q|0)==2?(o=f[(f[i>>2]|0)+4>>2]|0,!((o|0)==5|(o|0)==(e|0))):0){o=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;g=uHa(53611)|0;do if(g>>>0>4294967279){y=0;za(3);y=0;q=34}else{if(g>>>0<11){b[p+11>>0]=g;a=p}else{d=g+16&-16;y=0;a=la(150,d|0)|0;r=y;y=0;if(r&1){q=34;break}f[p>>2]=a;f[p+8>>2]=d|-2147483648;f[p+4>>2]=g}Pta(a,53611,g)|0;SBa(a+g|0,0);y=0;a=la(209,f[h>>2]|0)|0;r=y;y=0;if(!(r&1)?(y=0,ua(50,p|0,a|0)|0,r=y,y=0,!(r&1)):0){f[n>>2]=f[p>>2];f[n+4>>2]=f[p+4>>2];f[n+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(50,n|0,71123)|0;r=y;y=0;if(r&1){d=Pa()|0;a=1}else{f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}y=0;a=la(152,e|0)|0;r=y;y=0;if(!(r&1)?(y=0,ua(50,m|0,a|0)|0,r=y,y=0,!(r&1)):0){f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(50,l|0,53625)|0;r=y;y=0;if(r&1){d=Pa()|0;a=1}else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;a=la(152,f[(f[i>>2]|0)+4>>2]|0)|0;r=y;y=0;if(!(r&1)?(y=0,ua(50,k|0,a|0)|0,r=y,y=0,!(r&1)):0){f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;Ca(79,o|0,j|0,f[c+28>>2]|0,f[c+32>>2]|0);r=y;y=0;if(r&1)a=1;else{y=0;ya(79,o|0,64,361);y=0;a=0}d=Pa()|0;zta(j)}else{d=Pa()|0;a=1}zta(k)}zta(l)}else{d=Pa()|0;a=1}zta(m)}zta(n)}else{d=Pa()|0;a=1}zta(p)}while(0);if((q|0)==34){d=Pa()|0;a=1}if(a)Oa(o|0);$a(d|0)}u=g;return h|0}function gg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56129)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+12|0);a=a+4|0;do switch(f[c+8>>2]|0){case 0:{Zq(f[a>>2]|0,103)|0;break}case 2:{Zq(f[a>>2]|0,104)|0;break}case 4:{Zq(f[a>>2]|0,105)|0;break}case 20:{Zq(f[a>>2]|0,69)|0;break}case 1:{Zq(f[a>>2]|0,121)|0;break}case 3:{Zq(f[a>>2]|0,122)|0;break}case 5:{Zq(f[a>>2]|0,123)|0;break}case 21:{Zq(f[a>>2]|0,80)|0;break}case 6:{Zq(f[a>>2]|0,-116)|0;break}case 8:{Zq(f[a>>2]|0,-117)|0;break}case 10:{Zq(f[a>>2]|0,-115)|0;break}case 12:{Zq(f[a>>2]|0,-114)|0;break}case 14:{Zq(f[a>>2]|0,-113)|0;break}case 16:{Zq(f[a>>2]|0,-112)|0;break}case 18:{Zq(f[a>>2]|0,-111)|0;break}case 7:{Zq(f[a>>2]|0,-102)|0;break}case 9:{Zq(f[a>>2]|0,-103)|0;break}case 11:{Zq(f[a>>2]|0,-101)|0;break}case 13:{Zq(f[a>>2]|0,-100)|0;break}case 15:{Zq(f[a>>2]|0,-99)|0;break}case 17:{Zq(f[a>>2]|0,-98)|0;break}case 19:{Zq(f[a>>2]|0,-97)|0;break}case 22:{Zq(f[a>>2]|0,-84)|0;break}case 23:{Zq(f[a>>2]|0,-83)|0;break}case 24:{Zq(f[a>>2]|0,-89)|0;break}case 27:{Zq(f[a>>2]|0,-87)|0;break}case 28:{Zq(f[a>>2]|0,-81)|0;break}case 25:{Zq(f[a>>2]|0,-88)|0;break}case 26:{Zq(f[a>>2]|0,-82)|0;break}case 31:{Zq(f[a>>2]|0,-85)|0;break}case 32:{Zq(f[a>>2]|0,-79)|0;break}case 29:{Zq(f[a>>2]|0,-86)|0;break}case 30:{Zq(f[a>>2]|0,-80)|0;break}case 37:{Zq(f[a>>2]|0,-77)|0;break}case 38:{Zq(f[a>>2]|0,-72)|0;break}case 35:{Zq(f[a>>2]|0,-78)|0;break}case 36:{Zq(f[a>>2]|0,-73)|0;break}case 41:{Zq(f[a>>2]|0,-75)|0;break}case 42:{Zq(f[a>>2]|0,-70)|0;break}case 39:{Zq(f[a>>2]|0,-76)|0;break}case 40:{Zq(f[a>>2]|0,-71)|0;break}case 44:{Zq(f[a>>2]|0,-74)|0;break}case 43:{Zq(f[a>>2]|0,-69)|0;break}case 33:{Zq(f[a>>2]|0,-68)|0;break}case 34:{Zq(f[a>>2]|0,-67)|0;break}case 45:{Zq(f[a>>2]|0,-66)|0;break}case 46:{Zq(f[a>>2]|0,-65)|0;break}default:Ka()}while(0);if((f[c+4>>2]|0)==5)Zq(f[a>>2]|0,0)|0;u=i;return}function hg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;B=u;u=u+64|0;z=B+48|0;C=B+8|0;p=B+44|0;q=B+40|0;r=B+36|0;s=B;t=B+32|0;v=B+28|0;w=B+24|0;x=B+20|0;A=B+4|0;a:do if(b[a+26>>0]|0){gua(C);l=f[c+28>>2]|0;m=c+36|0;n=c+40|0;j=c+64|0;i=c+88|0;k=f[c+24>>2]|0;b:while(1){if((k|0)==(l|0)){h=4;break}h=f[k>>2]|0;o=f[h+4>>2]|0;switch(f[h+8>>2]|0){case 0:{g=f[n>>2]|0;h=o;d=0;e=f[m>>2]|0;while(1){if((e|0)==(g|0))break;D=bDa(f[f[e>>2]>>2]|0,h)|0;d=d|D;if(D)break;else e=e+4|0}f[p>>2]=o;y=0;f[z>>2]=f[p>>2];xa(23,a|0,d|0,z|0,64239)|0;D=y;y=0;if(D&1){h=10;break b}break}case 3:{f[q>>2]=o;y=0;f[z>>2]=f[q>>2];d=ua(97,c|0,z|0)|0;D=y;y=0;if(D&1){h=13;break b}f[r>>2]=o;y=0;f[z>>2]=f[r>>2];xa(23,a|0,(d|0)!=0|0,z|0,64277)|0;D=y;y=0;if(D&1){h=13;break b}break}case 1:{y=0;ja(57,s|0,64313);D=y;y=0;if(D&1){h=19;break b}d=o;if(bDa(d,f[s>>2]|0)|0)d=1;else d=bDa(d,f[j>>2]|0)|0;f[t>>2]=o;y=0;f[z>>2]=f[t>>2];xa(23,a|0,d|0,z|0,64315)|0;D=y;y=0;if(D&1){h=19;break b}break}case 2:{y=0;ja(57,s|0,64313);D=y;y=0;if(D&1){h=25;break b}d=o;if(bDa(d,f[s>>2]|0)|0)d=1;else d=bDa(d,f[i>>2]|0)|0;f[v>>2]=o;y=0;f[z>>2]=f[v>>2];xa(23,a|0,d|0,z|0,64350)|0;D=y;y=0;if(D&1){h=25;break b}break}default:{h=26;break b}}o=f[f[k>>2]>>2]|0;f[s>>2]=o;D=(WS(C,s)|0)!=0;f[w>>2]=o;y=0;f[z>>2]=f[w>>2];ya(138,a|0,D|0,z|0);D=y;y=0;if(D&1){h=30;break}y=0;Ca(59,z|0,C|0,s|0,s|0);D=y;y=0;if(D&1){h=30;break}k=k+4|0}c:do if((h|0)==4){g=c+116|0;d=f[g>>2]|0;do if(pJa(d)|0){f[x>>2]=d;y=0;f[z>>2]=f[x>>2];e=ua(96,c|0,z|0)|0;D=y;y=0;if(D&1){d=Pa()|0;break c}f[A>>2]=f[g>>2];y=0;f[z>>2]=f[A>>2];d=xa(23,a|0,(e|0)!=0|0,z|0,64416)|0;D=y;y=0;if(!(D&1)){if(!d)break;y=0;Ca(84,a|0,(f[e+12>>2]|0)==(f[e+8>>2]|0)|0,c|0,64436);D=y;y=0;if(!(D&1)?(y=0,Ca(84,a|0,(f[e+4>>2]|0)==0|0,c|0,64461),D=y,y=0,!(D&1)):0)break}d=Pa()|0;break c}while(0);Cta(C);break a}else if((h|0)==10)d=Pa()|0;else if((h|0)==19)d=Pa()|0;else if((h|0)==25)d=Pa()|0;else if((h|0)==26){y=0;za(6);y=0;h=13}else if((h|0)==30)d=Pa()|0;while(0);if((h|0)==13)d=Pa()|0;Cta(C);$a(d|0)}while(0);u=B;return}function ig(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;r=u;u=u+16|0;s=r+8|0;p=r+4|0;q=r;if(f[18711]|0){Vea(76684,19823)|0;k=0;while(1){if((k|0)==(j|0))break;Vea(vj(Vea(76684,21705)|0,k)|0,21728)|0;m=i+(k<<2)|0;n=g+(k<<2)|0;l=0;while(1){if(l>>>0>=(f[m>>2]|0)>>>0)break;if(l|0)Vea(76684,72307)|0;wj(76684,b[(f[n>>2]|0)+l>>0]|0)|0;l=l+1|0}Vea(76684,19863)|0;k=k+1|0}Vea(76684,21736)|0;k=0;while(1){if((k|0)==(j|0))break;if(k|0)Vea(76684,72307)|0;vj(Vea(76684,27699)|0,k)|0;k=k+1|0}l=(j|0)==0;if(l)Vea(76684,64313)|0;Vea(76684,19863)|0;Vea(76684,21768)|0;k=0;while(1){if((k|0)==(j|0))break;if(k|0)Vea(76684,72307)|0;m=Vea(76684,19994)|0;n=EN(74808,h+(k<<2)|0)|0;Vea(vj(m,f[n>>2]|0)|0,72132)|0;k=k+1|0}if(l)Vea(76684,64313)|0;Vea(76684,19863)|0;Vea(76684,21816)|0;k=0;while(1){if((k|0)==(j|0))break;if(k|0)Vea(76684,72307)|0;vj(76684,f[i+(k<<2)>>2]|0)|0;k=k+1|0}if(l)Vea(76684,64313)|0;Vea(76684,19863)|0;Vea(vj(Vea(vj(Vea(76684,21854)|0,c)|0,72307)|0,d)|0,72307)|0;yY(e);Vea(vj(Vea(76684,21889)|0,j)|0,19943)|0;Vea(76684,19947)|0}eja(a+92|0,c,0)|0;eja(a+96|0,d,0)|0;b[a+112>>0]=1;a:do if(e|0){ada(s);y=0;ja(57,p|0,e|0);e=y;y=0;do if(!(e&1)){l=f[s>>2]|0;f[l>>2]=f[p>>2];y=0;k=la(153,0)|0;e=y;y=0;if(e&1){k=Pa()|0;m=s;o=41;break}f[l+4>>2]=k;f[l+8>>2]=2;f[s>>2]=0;y=0;ja(69,a|0,l|0);e=y;y=0;if(e&1){k=Pa()|0;f[s>>2]=0;break}else{f[s>>2]=0;break a}}else{k=Pa()|0;m=s;l=f[s>>2]|0;o=41}while(0);if((o|0)==41){f[m>>2]=0;if(l)$Ja(l)}$a(k|0)}while(0);e=a+104|0;o=a+108|0;l=a+100|0;k=0;while(1){if((k|0)==(j|0))break;m=f[h+(k<<2)>>2]|0;f[q>>2]=m;n=g+(k<<2)|0;c=i+(k<<2)|0;d=f[e>>2]|0;if(d>>>0<(f[o>>2]|0)>>>0){a=f[n>>2]|0;$la(p,f[c>>2]|0,0);f[s>>2]=f[p>>2];FM(d,m,a,s);f[e>>2]=(f[e>>2]|0)+16}else ls(l,q,n,c);k=k+1|0}u=r;return}function jg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+48|0;j=l+36|0;n=l+24|0;k=l+12|0;m=l;i=a+12|0;do if(b[i>>0]|0){e=Vea(76852,57207)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(j);jn(e,d)|0;Yp(e)|0;break}n=Pa()|0;pza(j);$a(n|0)}while(0);h=Nm(a)|0;do if(b[i>>0]|0){c=vj(Vea(76852,57222)|0,h)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;e=y;y=0;if(!(e&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,e=y,y=0,!(e&1)):0){pza(j);jn(c,g)|0;Yp(c)|0;break}n=Pa()|0;pza(j);$a(n|0)}while(0);e=0;while(1){if(e>>>0>=h>>>0){h=13;break}if(b[i>>0]|0){d=Vea(76852,57228)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;g=y;y=0;if(g&1){h=17;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;g=y;y=0;if(g&1){h=17;break}pza(j);jn(d,c)|0;Yp(d)|0}d=nV(16)|0;iJa(d);g=Op(a)|0;f[d+4>>2]=g;g=Nm(a)|0;c=(g|0)!=0;if((c&1|0)!=(g|0)){h=20;break}b[d+12>>0]=c&1;g=Dp(a)|0;f[d+8>>2]=g;g=f[a>>2]|0;_L(m,(f[g+52>>2]|0)-(f[g+48>>2]|0)>>2);y=0;ua(81,m|0,57270)|0;g=y;y=0;if(g&1){h=37;break}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}y=0;ja(582,j|0,k|0);g=y;y=0;if(g&1){h=38;break}f[d>>2]=f[j>>2];zta(k);zta(m);du(f[a>>2]|0,d);e=e+1|0}a:do if((h|0)==13){u=l;return}else if((h|0)==17){n=Pa()|0;pza(j);$a(n|0)}else if((h|0)==20){g=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;e=uHa(57237)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[n+11>>0]=e;c=n}else{d=e+16&-16;y=0;c=la(150,d|0)|0;m=y;y=0;if(m&1){h=28;break}f[n>>2]=c;f[n+8>>2]=d|-2147483648;f[n+4>>2]=e}Pta(c,57237,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,n|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(n);if(!d)break a}else{y=0;za(3);y=0;h=28}while(0);if((h|0)==28)c=Pa()|0;Oa(g|0)}else if((h|0)==37){c=Pa()|0;h=39}else if((h|0)==38){c=Pa()|0;zta(k);h=39}while(0);if((h|0)==39)zta(m);$a(c|0)}function kg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=u;u=u+48|0;l=p+28|0;m=p+24|0;r=p+12|0;q=p;j=a+12|0;do if(b[j>>0]|0){g=Vea(76852,54526)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[l>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(l);jn(g,e)|0;Yp(g)|0;break}r=Pa()|0;pza(l);$a(r|0)}while(0);i=Nm(a)|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[r+(d<<2)>>2]=0;d=d+1|0}g=r+11|0;h=r+4|0;e=0;while(1){if(e>>>0>=i>>>0){h=11;break}y=0;d=la(217,a|0)|0;s=y;y=0;if(s&1){h=22;break}if(!(d<<24>>24)){h=14;break}y=0;ya(110,l|0,r|0,d|0);s=y;y=0;if(s&1){h=36;break}if((b[g>>0]|0)<0){SBa(f[r>>2]|0,0);f[h>>2]=0}else{SBa(r,0);b[g>>0]=0}y=0;ia(377,r|0);s=y;y=0;if(s&1){h=31;break}f[r>>2]=f[l>>2];f[r+4>>2]=f[l+4>>2];f[r+8>>2]=f[l+8>>2];d=0;while(1){if((d|0)==3)break;f[l+(d<<2)>>2]=0;d=d+1|0}zta(l);e=e+1|0}a:do if((h|0)==11){do if(b[j>>0]|0){y=0;c=ua(53,76852,54658)|0;s=y;y=0;if((!(s&1)?(y=0,k=ua(100,c|0,r|0)|0,s=y,y=0,!(s&1)):0)?(y=0,n=ua(53,k|0,54676)|0,s=y,y=0,!(s&1)):0){Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[l>>2]|0,77556)|0;s=y;y=0;if(!(s&1)?(y=0,o=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,s=y,y=0,!(s&1)):0){pza(l);y=0;ua(63,n|0,o|0)|0;s=y;y=0;if(s&1){h=45;break}y=0;la(159,n|0)|0;s=y;y=0;if(s&1){h=45;break}else{h=47;break}}c=Pa()|0;pza(l)}else h=45}else h=47;while(0);if((h|0)==47){y=0;ja(582,m|0,r|0);s=y;y=0;if(s&1)h=45;else{zta(r);u=p;return f[m>>2]|0}}if((h|0)==45)c=Pa()|0}else if((h|0)==14){g=zb(20)|0;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;e=uHa(54530)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[q+11>>0]=e;c=q}else{d=e+16&-16;y=0;c=la(150,d|0)|0;s=y;y=0;if(s&1){h=23;break}f[q>>2]=c;f[q+8>>2]=d|-2147483648;f[q+4>>2]=e}Pta(c,54530,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,q|0);s=y;y=0;if(s&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(q);if(!d)break a}else{y=0;za(3);y=0;h=23}while(0);if((h|0)==23)c=Pa()|0;Oa(g|0)}else if((h|0)==22)c=Pa()|0;else if((h|0)==31){s=ab(0)|0;lDa(s)}else if((h|0)==36)c=Pa()|0;while(0);zta(r);$a(c|0);return 0}function lg(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=u;u=u+96|0;z=B+80|0;s=B+76|0;t=B+72|0;v=B+68|0;w=B+64|0;x=B+60|0;y=B+56|0;k=B+52|0;l=B+48|0;m=B+44|0;n=B+40|0;o=B+36|0;p=B+32|0;q=B+28|0;r=B+24|0;g=B;h=B+20|0;i=B+16|0;j=d+8|0;A=d+9|0;a:do switch(f[d+4>>2]|0){case 1:{switch(b[j>>0]|0){case 1:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+36>>2]|0;f[t>>2]=g;f[z>>2]=f[t>>2];uAa(a,(Xb[A&255](c,z)|0)&255);break a}else{A=f[h+32>>2]|0;f[s>>2]=g;f[z>>2]=f[s>>2];uAa(a,(Xb[A&255](c,z)|0)<<24>>24);break a}}case 2:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+44>>2]|0;f[w>>2]=g;f[z>>2]=f[w>>2];uAa(a,(Xb[A&255](c,z)|0)&65535);break a}else{A=f[h+40>>2]|0;f[v>>2]=g;f[z>>2]=f[v>>2];uAa(a,(Xb[A&255](c,z)|0)<<16>>16);break a}}case 4:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+52>>2]|0;f[y>>2]=g;f[z>>2]=f[y>>2];uAa(a,Xb[A&255](c,z)|0);break a}else{A=f[h+48>>2]|0;f[x>>2]=g;f[z>>2]=f[x>>2];uAa(a,Xb[A&255](c,z)|0);break a}}default:Ka()}break}case 2:{switch(b[j>>0]|0){case 1:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+36>>2]|0;f[l>>2]=g;f[z>>2]=f[l>>2];Ysa(a,(Xb[A&255](c,z)|0)&255,0);break a}else{A=f[h+32>>2]|0;f[k>>2]=g;f[z>>2]=f[k>>2];A=(Xb[A&255](c,z)|0)<<24>>24;Ysa(a,A,((A|0)<0)<<31>>31);break a}}case 2:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+44>>2]|0;f[n>>2]=g;f[z>>2]=f[n>>2];Ysa(a,(Xb[A&255](c,z)|0)&65535,0);break a}else{A=f[h+40>>2]|0;f[m>>2]=g;f[z>>2]=f[m>>2];A=(Xb[A&255](c,z)|0)<<16>>16;Ysa(a,A,((A|0)<0)<<31>>31);break a}}case 4:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+52>>2]|0;f[p>>2]=g;f[z>>2]=f[p>>2];Ysa(a,Xb[A&255](c,z)|0,0);break a}else{A=f[h+48>>2]|0;f[o>>2]=g;f[z>>2]=f[o>>2];A=Xb[A&255](c,z)|0;Ysa(a,A,((A|0)<0)<<31>>31);break a}}case 8:{h=f[c>>2]|0;g=f[e>>2]|0;if(!(b[A>>0]|0)){A=f[h+60>>2]|0;f[r>>2]=g;f[z>>2]=f[r>>2];A=Xb[A&255](c,z)|0;Ysa(a,A,J);break a}else{A=f[h+56>>2]|0;f[q>>2]=g;f[z>>2]=f[q>>2];A=Xb[A&255](c,z)|0;Ysa(a,A,J);break a}}default:Ka()}break}case 3:{A=f[(f[c>>2]|0)+52>>2]|0;f[h>>2]=f[e>>2];f[z>>2]=f[h>>2];uAa(g,Xb[A&255](c,z)|0);qja(a,g);break}case 4:{A=f[(f[c>>2]|0)+60>>2]|0;f[i>>2]=f[e>>2];f[z>>2]=f[i>>2];Ysa(g,Xb[A&255](c,z)|0,J);Bca(a,g);break}default:Ka()}while(0);u=B;return}function mg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+208|0;i=l+192|0;m=l;h=l+188|0;j=l+184|0;c=a+32|0;d=m+104|0;k=m+4|0;f[m>>2]=4068;f[d>>2]=4088;dX(m+104|0,k);f[m+176>>2]=0;f[m+180>>2]=-1;f[m>>2]=9880;f[d>>2]=9900;y=0;ia(387,k|0);g=y;y=0;do if(g&1)c=Pa()|0;else{if((L9(k,(b[c+11>>0]|0)<0?f[c>>2]|0:c)|0)==0?(g=m+(f[(f[m>>2]|0)+-12>>2]|0)|0,y=0,ja(81,g|0,f[g+16>>2]|4|0),g=y,y=0,g&1):0){c=Pa()|0;_I(k);break}e=f[a>>2]|0;g=f[e+16>>2]|0;e=f[e+12>>2]|0;while(1){if((e|0)==(g|0)){d=9;break}c=f[e>>2]|0;if(!(f[c+12>>2]|0)){f[h>>2]=f[c>>2];y=0;f[i>>2]=f[h>>2];c=ua(158,a|0,i|0)|0;d=y;y=0;if(d&1){d=20;break}y=0;c=ua(68,m|0,c|0)|0;d=y;y=0;if(d&1){d=20;break}y=0;c=ua(53,c|0,58655)|0;d=y;y=0;if(d&1){d=20;break}y=0;d=ua(53,c|0,f[f[e>>2]>>2]|0)|0;c=y;y=0;if(c&1){d=20;break}Axa(i,m+(f[(f[m>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;n=y;y=0;if(n&1){d=17;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;n=y;y=0;if(n&1){d=17;break}pza(i);y=0;ua(63,d|0,c|0)|0;n=y;y=0;if(n&1){d=20;break}y=0;la(159,d|0)|0;n=y;y=0;if(n&1){d=20;break}}e=e+4|0}do if((d|0)==9){e=f[a>>2]|0;g=f[e+40>>2]|0;e=f[e+36>>2]|0;while(1){if((e|0)==(g|0)){d=23;break}f[j>>2]=f[f[e>>2]>>2];y=0;f[i>>2]=f[j>>2];c=ua(158,a|0,i|0)|0;n=y;y=0;if(n&1){d=36;break}y=0;c=ua(68,m|0,c|0)|0;n=y;y=0;if(n&1){d=36;break}y=0;c=ua(53,c|0,58655)|0;n=y;y=0;if(n&1){d=36;break}y=0;d=ua(53,c|0,f[f[e>>2]>>2]|0)|0;n=y;y=0;if(n&1){d=36;break}Axa(i,m+(f[(f[m>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[i>>2]|0,77556)|0;n=y;y=0;if(n&1){d=32;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;n=y;y=0;if(n&1){d=32;break}pza(i);y=0;ua(63,d|0,c|0)|0;n=y;y=0;if(n&1){d=36;break}y=0;la(159,d|0)|0;n=y;y=0;if(n&1){d=36;break}e=e+4|0}if((d|0)==23){y=0;c=la(221,k|0)|0;n=y;y=0;do if(!(n&1)){if((c|0)==0?(n=m+(f[(f[m>>2]|0)+-12>>2]|0)|0,y=0,ja(81,n|0,f[n+16>>2]|4|0),n=y,y=0,n&1):0)break;cpa(m);u=l;return}while(0);c=Pa()|0;break}else if((d|0)==32){c=Pa()|0;pza(i);break}else if((d|0)==36){c=Pa()|0;break}}else if((d|0)==17){c=Pa()|0;pza(i)}else if((d|0)==20)c=Pa()|0;while(0);cpa(m);$a(c|0)}while(0);oCa(d);$a(c|0)}function ng(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=u;u=u+112|0;t=C+8|0;z=C+4|0;A=C;B=c+12|0;o=a+28|0;n=c+16|0;v=a+20|0;i=0;while(1){d=f[n>>2]|0;e=gKa(d)|0;if(i>>>0>=e>>>0)break;d=bga(B,i)|0;d=YAa(f[d>>2]|0)|0;a:do if((d|0?(j=d+16|0,k=f[j>>2]|0,k|0):0)?!(rCa(f[d+4>>2]|0)|0):0){h=d+12|0;e=wAa(f[h>>2]|0)|0;g=d+8|0;do if((e|0)!=0?(l=e+16|0,(f[l>>2]|0)==0):0)if(bA(f[g>>2]|0,f[e+12>>2]|0,f[o>>2]|0)|0){f[l>>2]=f[g>>2];$5(e);g=f[v>>2]|0;gKa(g)|0;VBa(t,g);g=uda(t,e)|0;h=bga(B,i)|0;f[h>>2]=g;oA(c,i+1|0,f[j>>2]|0);break a}else{d=f[j>>2]|0;break}else d=k;while(0);d=wAa(d)|0;if((d|0?(m=d+16|0,(f[m>>2]|0)==0):0)?bA(f[g>>2]|0,f[d+12>>2]|0,f[o>>2]|0)|0:0){e=f[v>>2]|0;gKa(e)|0;VBa(t,e);e=dea(f[t>>2]|0,20,f[g>>2]|0)|0;f[m>>2]=e;$5(d);e=f[v>>2]|0;gKa(e)|0;VBa(t,e);e=uda(t,d)|0;g=bga(B,i)|0;f[g>>2]=e;oA(c,i+1|0,f[h>>2]|0)}}while(0);i=i+1|0}if(e>>>0>1){b:do if(b[a+24>>0]|0){g=0;while(1){if(g>>>0>=(d+-1|0)>>>0)break b;e=bga(B,g)|0;e=wAa(f[e>>2]|0)|0;d=g+1|0;if((((((e|0?(p=e+16|0,f[p>>2]|0):0)?(f[e+4>>2]|0)!=5:0)?(q=bga(B,d)|0,q=wAa(f[q>>2]|0)|0,q|0):0)?(r=q+16|0,s=f[r>>2]|0,s|0):0)?(f[q+4>>2]|0)!=5:0)?bDa(f[e+8>>2]|0,f[q+8>>2]|0)|0:0){if(f[e+12>>2]|0)break;if(f[q+12>>2]|0)break;Ot(t,f[o>>2]|0,s);m=jca(t)|0;hT(t);if(!m){m=f[v>>2]|0;gKa(m)|0;VBa(t,m);m=s5(f[t>>2]|0,8,f[p>>2]|0,f[r>>2]|0)|0;f[p>>2]=m;_ua(q)}}g=d;d=f[n>>2]|0}Na(35515,35457,491,36293)}while(0);d=c+8|0;if((((pJa(f[d>>2]|0)|0?(w=bga(B,0)|0,w=wAa(f[w>>2]|0)|0,w|0):0)?(x=w+16|0,f[x>>2]|0):0)?(B=f[d>>2]|0,y=B,bDa(f[w+8>>2]|0,B)|0):0)?(f[w+4>>2]|0)!=5:0){if(f[w+12>>2]|0)Na(35542,35457,515,36293);f[z>>2]=y;f[t>>2]=f[z>>2];if((HB(c,t)|0)==1){B=f[v>>2]|0;gKa(B)|0;VBa(t,B);B=f[t>>2]|0;B=j9(B,dea(B,20,f[x>>2]|0)|0,c,0)|0;jva(f[a>>2]|0,B)|0;cJa(A);f[d>>2]=f[A>>2];_ua(w);Ela(c,f[c+4>>2]|0)}}}u=C;return}function og(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;s=u;u=u+80|0;v=s+56|0;t=s+32|0;r=s+28|0;l=s+24|0;j=s+20|0;o=s+12|0;n=s+16|0;m=s+8|0;p=s+4|0;q=s;ija(v);y=0;ja(586,t|0,c|0);k=y;y=0;if(k&1)e=Pa()|0;else{i=t+8|0;h=t+16|0;a:while(1){if(!(gKa(f[i>>2]|0)|0)){b=17;break}k=f[h>>2]|0;g=gKa(k)|0;k=f[k+8>>2]|0;f[r>>2]=k;GX(t,g);if(!(_qa(v,k)|0)){y=0;ja(550,v|0,r|0);g=y;y=0;if(g&1){b=11;break}IO(b,k);e=f[k+40>>2]|0;gKa(e)|0;g=l;while(1){f[g>>2]=e;w=EFa(k+24|0)|0;g=f[l>>2]|0;e=g;if((e|0)==(w|0))break;y=0;ja(550,t|0,g+8|0);w=y;y=0;if(w&1){b=14;break a}f[l>>2]=f[e+4>>2];g=j}}}do if((b|0)==11){e=Pa()|0;b=16}else if((b|0)==14){e=Pa()|0;b=16}else if((b|0)==17){if(gKa(f[v+8>>2]|0)|0){e=f[v+16>>2]|0;gKa(e)|0;j=EFa(v)|0;g=r;b:while(1){f[g>>2]=e;g=f[r>>2]|0;e=g;if((e|0)==(j|0))break;i=f[g+8>>2]|0;g=f[i+16>>2]|0;gKa(g)|0;i=EFa(i)|0;h=l;while(1){f[h>>2]=g;g=f[l>>2]|0;if((g|0)==(i|0))break;w=f[g+8>>2]|0;f[o>>2]=w;if(!(_qa(v,w)|0)?(y=0,ja(550,d|0,o|0),w=y,y=0,w&1):0){b=28;break b}f[l>>2]=f[g+4>>2];h=n}f[r>>2]=f[e+4>>2];g=m}if((b|0)==28){e=Pa()|0;break}y=0;i=la(150,48)|0;w=y;y=0;if(!(w&1)){opa(i);y=0;ja(587,f[a>>2]|0,i|0);w=y;y=0;if(!(w&1)){e=f[c+16>>2]|0;gKa(e)|0;h=EFa(c)|0;g=r;while(1){f[g>>2]=e;g=f[r>>2]|0;e=g;if((e|0)==(h|0))break;y=0;Ca(65,f[g+8>>2]|0,2,i|0,v|0);w=y;y=0;if(w&1){b=36;break}f[r>>2]=f[e+4>>2];g=p}if((b|0)==36){e=Pa()|0;break}e=f[d+16>>2]|0;gKa(e)|0;h=EFa(d)|0;g=r;while(1){f[g>>2]=e;g=f[r>>2]|0;e=g;if((e|0)==(h|0))break;y=0;Ca(65,f[g+8>>2]|0,1,i|0,v|0);w=y;y=0;if(w&1){b=41;break}f[r>>2]=f[e+4>>2];g=q}if((b|0)==41){e=Pa()|0;break}y=0;e=oa(49,a|0,v|0,c|0)|0;w=y;y=0;if(!(w&1)){f[i+20>>2]=e;y=0;ua(83,i+24|0,c|0)|0;w=y;y=0;if(w&1){e=Pa()|0;break}else{_fa(t);_fa(v);u=s;return i|0}}}e=Pa()|0;break}}else{y=0;Ca(52,33526,33266,570,33549);y=0}e=Pa()|0}while(0);_fa(t)}_fa(v);$a(e|0);return 0}function pg(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;l=n;m=e&1;h=a+4|0;j=a+12|0;a:do if(e){switch(d<<24>>24){case 18:{e=1;g=1;break}case 19:{e=1;g=2;break}case 16:{e=1;g=4;break}case 20:{e=2;g=1;break}case 21:{e=2;g=2;break}case 22:{e=2;g=4;break}case 17:{e=2;g=8;break}default:{d=0;break a}}d=nua(f[h>>2]|0)|0;b[d+8>>0]=g;f[d+4>>2]=e;b[d+9>>0]=0;if(!(b[j>>0]|0))g=34;else{g=Vea(76852,56344)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[l>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,k=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,j=y,y=0,!(j&1)):0){pza(l);jn(g,k)|0;Yp(g)|0;g=34;break}n=Pa()|0;pza(l);$a(n|0)}}else{do switch(d<<24>>24){case 44:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=1;f[d+4>>2]=1;b[d+9>>0]=1;break}case 45:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=1;f[d+4>>2]=1;b[d+9>>0]=0;break}case 46:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=2;f[d+4>>2]=1;b[d+9>>0]=1;break}case 47:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=2;f[d+4>>2]=1;b[d+9>>0]=0;break}case 40:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=4;f[d+4>>2]=1;break}case 48:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=1;f[d+4>>2]=2;b[d+9>>0]=1;break}case 49:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=1;f[d+4>>2]=2;b[d+9>>0]=0;break}case 50:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=2;f[d+4>>2]=2;b[d+9>>0]=1;break}case 51:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=2;f[d+4>>2]=2;b[d+9>>0]=0;break}case 52:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=4;f[d+4>>2]=2;b[d+9>>0]=1;break}case 53:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=4;f[d+4>>2]=2;b[d+9>>0]=0;break}case 41:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=8;f[d+4>>2]=2;break}case 42:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=4;f[d+4>>2]=3;break}case 43:{d=nua(f[h>>2]|0)|0;b[d+8>>0]=8;f[d+4>>2]=4;break}default:{d=0;break a}}while(0);if(!(b[j>>0]|0))g=34;else{e=Vea(76852,56330)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[l>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,i=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,k=y,y=0,!(k&1)):0){pza(l);jn(e,i)|0;Yp(e)|0;g=34;break}n=Pa()|0;pza(l);$a(n|0)}}while(0);if((g|0)==34){b[d+20>>0]=m;B6(a,d+16|0,d+12|0);m=Jg(a)|0;f[d+24>>2]=m;nwa(d);f[c>>2]=d;d=1}u=n;return d|0}function qg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:while(1){m=b;n=b+-4|0;while(1){l=a;b:while(1){k=l;c=m-k|0;d=c>>2;a=l+4|0;switch(d|0){case 1:case 0:break a;case 2:{q=5;break a}case 3:{q=7;break a}case 4:{q=8;break a}case 5:{q=9;break a}default:{}}if((c|0)<124){q=11;break a}i=l+(((d|0)/2|0)<<2)|0;if((c|0)>3996){c=(d|0)/4|0;c=wv(l,l+(c<<2)|0,i,i+(c<<2)|0,n)|0}else c=qw(l,i,n)|0;j=f[l>>2]|0;e=f[i>>2]|0;g=j;if(Iwa(j,e)|0){d=n;break}else d=n;while(1){d=d+-4|0;if((l|0)==(d|0))break;h=f[d>>2]|0;if(Iwa(h,e)|0){q=28;break b}}k=f[n>>2]|0;e=k;if(!(Iwa(j,k)|0)){c=a;while(1){if((c|0)==(n|0))break a;d=f[c>>2]|0;a=c+4|0;if(Iwa(j,d)|0)break;else c=a}f[c>>2]=e;f[n>>2]=d}if((a|0)==(n|0))break a;else c=n;while(1){h=f[l>>2]|0;while(1){k=f[a>>2]|0;e=a+4|0;g=k;if(Iwa(h,k)|0)break;else a=e}do{c=c+-4|0;k=f[c>>2]|0;d=k}while(Iwa(h,k)|0);if(a>>>0>=c>>>0){l=a;continue b}f[a>>2]=d;f[c>>2]=g;a=e}}if((q|0)==28){q=0;f[l>>2]=h;f[d>>2]=g;c=c+1|0}c:do if(a>>>0<d>>>0){j=i;while(1){i=f[j>>2]|0;while(1){e=f[a>>2]|0;g=a+4|0;h=e;if(Iwa(e,i)|0)a=g;else break}do{d=d+-4|0;r=f[d>>2]|0;e=r}while(!(Iwa(r,i)|0));if(a>>>0>d>>>0){d=j;e=a;break c}f[a>>2]=e;f[d>>2]=h;j=(j|0)==(a|0)?d:j;a=g;c=c+1|0}}else{d=i;e=a}while(0);if((e|0)!=(d|0)?(o=f[d>>2]|0,p=f[e>>2]|0,Iwa(o,p)|0):0){f[e>>2]=o;f[d>>2]=p;a=c+1|0}else a=c;if(!a){c=jo(l,e)|0;a=e+4|0;if(jo(a,b)|0){q=44;break}if(c)continue}r=e;if((r-k|0)>=(m-r|0)){q=43;break}qg(l,e);a=e+4|0}if((q|0)==43){q=0;qg(e+4|0,b);a=l;b=e;continue}else if((q|0)==44){q=0;if(c)break;else{a=l;b=e;continue}}}if((q|0)==5){a=f[n>>2]|0;b=f[l>>2]|0;if(Iwa(a,b)|0){f[l>>2]=a;f[n>>2]=b}}else if((q|0)==7)qw(l,a,n)|0;else if((q|0)==8)Oz(l,a,l+8|0,n)|0;else if((q|0)==9)wv(l,a,l+8|0,l+12|0,n)|0;else if((q|0)==11)zC(l,b);return}function rg(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;k=m+8|0;j=m;a:do if((a|0)!=(c|0)){l=d+16|0;b:do switch(b[a>>0]|0){case 84:{i=d+4|0;h=((f[i>>2]|0)-(f[d>>2]|0)|0)/24|0;c=ih(a,c,d)|0;e=f[i>>2]|0;g=(e-(f[d>>2]|0)|0)/24|0;if((c|0)!=(a|0)&(g|0)==(h+1|0)){f[j>>2]=f[d+12>>2];gG(k,e+-24|0,j);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,l|0,k|0);l=y;y=0;if(l&1){a=Pa()|0;tM(k);break b}}else{f[e+12>>2]=f[k+12>>2];f[e>>2]=f[k>>2];l=k+4|0;f[e+4>>2]=f[l>>2];d=k+8|0;f[e+8>>2]=f[d>>2];f[d>>2]=0;f[l>>2]=0;f[k>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(k);a=c;break a}else while(1){if((g|0)==(h|0))break a;c=e+-24|0;while(1){if((e|0)==(c|0))break;l=e+-24|0;f[i>>2]=l;Xka(l);e=f[i>>2]|0}g=g+-1|0;e=c}}case 68:{c=Wl(a,c,d)|0;if((c|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[j>>2]=f[d+12>>2];gG(k,e+-24|0,j);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,l|0,k|0);l=y;y=0;if(l&1){a=Pa()|0;tM(k);break b}}else{f[e+12>>2]=f[k+12>>2];f[e>>2]=f[k>>2];l=k+4|0;f[e+4>>2]=f[l>>2];d=k+8|0;f[e+8>>2]=f[d>>2];f[d>>2]=0;f[l>>2]=0;f[k>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(k);a=c;break a}case 83:{e=sf(a,c,d)|0;if((e|0)!=(a|0)){a=e;break a}if((c-a|0)<=2)break a;if((b[a+1>>0]|0)!=116)break a;i=a+2|0;g=vD(i,c,d)|0;if((g|0)==(i|0))break a;e=d+4|0;c=f[e>>2]|0;if((f[d>>2]|0)==(c|0))break a;x4(c+-24|0,0,72379)|0;e=(f[e>>2]|0)+-24|0;f[j>>2]=f[d+12>>2];gG(k,e,j);e=d+20|0;a=f[e>>2]|0;if(a>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,l|0,k|0);l=y;y=0;if(l&1){a=Pa()|0;tM(k);break b}}else{f[a+12>>2]=f[k+12>>2];f[a>>2]=f[k>>2];l=k+4|0;f[a+4>>2]=f[l>>2];d=k+8|0;f[a+8>>2]=f[d>>2];f[d>>2]=0;f[l>>2]=0;f[k>>2]=0;f[e>>2]=(f[e>>2]|0)+16}tM(k);a=g;break a}default:break a}while(0);$a(a|0)}while(0);u=m;return a|0}function sg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+32|0;m=n+16|0;k=n+8|0;h=n;i=b+8|0;j=a+76|0;a:do if(pJa(f[i>>2]|0)|0?(l=a+80|0,(SN(j,i)|0)!=(l|0)):0){g=NK(j,i)|0;b=f[a+68>>2]|0;c=b+-12|0;d=g+4|0;e=f[d>>2]|0;if(e>>>0<(f[g+8>>2]|0)>>>0){f[e>>2]=0;p=e+4|0;f[p>>2]=0;f[e+8>>2]=0;f[e>>2]=f[c>>2];o=b+-8|0;f[p>>2]=f[o>>2];b=b+-4|0;f[e+8>>2]=f[b>>2];f[b>>2]=0;f[o>>2]=0;f[c>>2]=0;b=(f[d>>2]|0)+12|0;f[d>>2]=b}else{Ct(g,c);b=f[d>>2]|0}CF(m,b+-12|0);y=0;b=ua(76,a|0,g|0)|0;p=y;y=0;if(p&1)b=Pa()|0;else{f[k>>2]=m;f[k+4>>2]=b;b=f[a+92>>2]|0;c=f[b+-8>>2]|0;d=a+112|0;b=f[b+-12>>2]|0;while(1){if((b|0)==(c|0)){e=9;break}e=f[b>>2]|0;f[h>>2]=e;e=f[e+8>>2]|0;y=0;g=ua(77,d|0,h|0)|0;p=y;y=0;if(p&1){e=14;break}y=0;ya(77,k|0,e|0,g|0);p=y;y=0;if(p&1){e=14;break}b=b+4|0}do if((e|0)==9){h=a+44|0;d=a+48|0;b=0;while(1){c=f[h>>2]|0;if(b>>>0>=c>>>0)break;y=0;ya(77,k|0,b|0,(f[d>>2]|0)+(b*12|0)|0);p=y;y=0;if(p&1){e=19;break}b=b+1|0}if((e|0)==19){b=Pa()|0;break}b=f[j>>2]|0;b:while(1){if((b|0)==(l|0)){e=34;break}c:do if(bDa(f[b+16>>2]|0,f[i>>2]|0)|0)d=c;else{g=f[b+24>>2]|0;e=f[b+20>>2]|0;while(1){if((e|0)==(g|0)){d=c;break c}d=0;while(1){if(d>>>0>=c>>>0)break;y=0;ya(77,k|0,d|0,(f[e>>2]|0)+(d*12|0)|0);p=y;y=0;if(p&1){e=33;break b}d=d+1|0;c=f[h>>2]|0}e=e+12|0}}while(0);c=f[b+4>>2]|0;if(!c)while(1){c=f[b+8>>2]|0;if((f[c>>2]|0)==(b|0)){b=c;c=d;continue b}else b=c}else b=c;while(1){c=f[b>>2]|0;if(!c)break;else b=c}c=d}if((e|0)==33){b=Pa()|0;break}else if((e|0)==34){dI(j,i);mU(m);break a}}else if((e|0)==14)b=Pa()|0;while(0)}mU(m);$a(b|0)}while(0);c=a+68|0;b=f[c>>2]|0;d=b+-12|0;while(1){if((b|0)==(d|0))break;p=b+-12|0;f[c>>2]=p;mU(p);b=f[c>>2]|0}b=a+92|0;d=f[b>>2]|0;c=d+-12|0;while(1){if((d|0)==(c|0))break;p=d+-12|0;f[b>>2]=p;E4(p);d=f[b>>2]|0}u=n;return}function tg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=u;u=u+48|0;m=l+24|0;n=l+12|0;o=l;h=a;f[h>>2]=0;f[h+4>>2]=0;h=c+16|0;c=0;j=0;while(1){i=($6(f[h>>2]|0)|0)<<24>>24;e=(i&128|0)==0;g=i&127;q=(c|0)==0&(j|0)==0;d=Aoa(64,0,c|0,j|0)|0;d=gna(1,0,d|0)|0;d=Hsa(d|0,J|0,-1,-1)|0;p=J;d=q?-1:d;d=g&d;if(!(e|(d|0)==(g|0)&0==0)){h=3;break}d=gna(d|0,0,c|0)|0;g=a;d=f[g>>2]|d;g=f[g+4>>2]|J;q=a;f[q>>2]=d;f[q+4>>2]=g;if(e){h=27;break}c=Hsa(c|0,j|0,7,0)|0;if(c>>>0>63){h=16;break}else j=J}a:do if((h|0)==3){g=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(54899)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[m+11>>0]=e;c=m}else{d=e+16&-16;y=0;c=la(150,d|0)|0;q=y;y=0;if(q&1){h=11;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(c,54899,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,m|0);q=y;y=0;if(q&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(!d)break a}else{y=0;za(3);y=0;h=11}while(0);if((h|0)==11)c=Pa()|0;Oa(g|0)}else if((h|0)==16){g=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;e=uHa(54942)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[n+11>>0]=e;c=n}else{d=e+16&-16;y=0;c=la(150,d|0)|0;q=y;y=0;if(q&1){h=24;break}f[n>>2]=c;f[n+8>>2]=d|-2147483648;f[n+4>>2]=e}Pta(c,54942,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,n|0);q=y;y=0;if(q&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(n);if(!d)break a}else{y=0;za(3);y=0;h=24}while(0);if((h|0)==24)c=Pa()|0;Oa(g|0)}else if((h|0)==27){if((i&64|0?(k=Hsa(c|0,j|0,7,0)|0,k>>>0<64):0)?(q=64-k|0,p=gna(d|0,g|0,q|0)|0,q=Lka(p|0,J|0,q|0)|0,p=J,n=a,f[n>>2]=q,f[n+4>>2]=p,(p|0)>-1|(p|0)==-1&q>>>0>4294967295):0){g=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;e=uHa(54955)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[o+11>>0]=e;c=o}else{d=e+16&-16;y=0;c=la(150,d|0)|0;q=y;y=0;if(q&1){h=38;break}f[o>>2]=c;f[o+8>>2]=d|-2147483648;f[o+4>>2]=e}Pta(c,54955,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,o|0);q=y;y=0;if(q&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(o);if(!d)break a}else{y=0;za(3);y=0;h=38}while(0);if((h|0)==38)c=Pa()|0;Oa(g|0);break}u=l;return}while(0);$a(c|0)}function ug(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;l=n+24|0;k=n;m=n+48|0;h=n+52|0;c=f[b>>2]|0;if(!(yFa(c)|0)?!(sGa(c)|0):0){NBa(k);f[m>>2]=0;Sta(m);y=0;ya(91,l|0,m|0,b|0);i=y;y=0;do if(i&1){c=ab(1696)|0;m=J;if((m|0)==(Wa(1696)|0)){Ya(c|0)|0;_a();break}else $a(c|0)}else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];f[k+12>>2]=f[l+12>>2];f[k+16>>2]=f[l+16>>2];i=a+16|0;if(!(FBa(k)|0))if(rCa(f[k>>2]|0)|0){a=f[a+36>>2]|0;gKa(a)|0;VBa(m,a);f[l>>2]=f[k>>2];f[l+4>>2]=f[k+4>>2];f[l+8>>2]=f[k+8>>2];f[l+12>>2]=f[k+12>>2];m=FO(m,l)|0;jva(f[i>>2]|0,m)|0;break}else{_ua(b);break}e=k+16|0;c=f[e>>2]|0;g=c;if(!(bDa(c,f[18946]|0)|0)){if(bDa(c,f[18770]|0)|0){c=dAa(b)|0;if(!c){a=f[a+36>>2]|0;gKa(a)|0;VBa(m,a);if(!(f[k>>2]|0))c=0;else{f[l>>2]=f[k>>2];f[l+4>>2]=f[k+4>>2];f[l+8>>2]=f[k+8>>2];f[l+12>>2]=f[k+12>>2];c=FO(m,l)|0}m=yra(f[m>>2]|0,c)|0;jva(f[i>>2]|0,m)|0;break}c=c+8|0;if(!(f[k>>2]|0)){f[c>>2]=0;break}b=f[c>>2]|0;if(b|0?(d=pAa(b)|0,d|0):0){m=d+8|0;f[m>>2]=f[k>>2];f[m+4>>2]=f[k+4>>2];f[m+8>>2]=f[k+8>>2];f[m+12>>2]=f[k+12>>2];iDa(d);break}a=f[a+36>>2]|0;gKa(a)|0;VBa(m,a);f[l>>2]=f[k>>2];f[l+4>>2]=f[k+4>>2];f[l+8>>2]=f[k+8>>2];f[l+12>>2]=f[k+12>>2];m=FO(m,l)|0;f[c>>2]=m;break}d=wAa(b)|0;if(!d){a=f[a+36>>2]|0;gKa(a)|0;VBa(m,a);f[h>>2]=f[e>>2];if(!(f[k>>2]|0))c=0;else{f[l>>2]=f[k>>2];f[l+4>>2]=f[k+4>>2];f[l+8>>2]=f[k+8>>2];f[l+12>>2]=f[k+12>>2];c=FO(m,l)|0}f[l>>2]=f[h>>2];m=q3(m,l,c,0)|0;jva(f[i>>2]|0,m)|0;break}f[d+8>>2]=g;f[d+16>>2]=0;c=d+12|0;if(!(f[k>>2]|0))f[c>>2]=0;else{b=f[c>>2]|0;if(b|0?(j=pAa(b)|0,j|0):0){m=j+8|0;f[m>>2]=f[k>>2];f[m+4>>2]=f[k+4>>2];f[m+8>>2]=f[k+8>>2];f[m+12>>2]=f[k+12>>2];iDa(j);$5(d);break}a=f[a+36>>2]|0;gKa(a)|0;VBa(m,a);f[l>>2]=f[k>>2];f[l+4>>2]=f[k+4>>2];f[l+8>>2]=f[k+8>>2];f[l+12>>2]=f[k+12>>2];m=FO(m,l)|0;f[c>>2]=m}$5(d)}}while(0)}u=n;return}function vg(){var a=0,c=0,d=0,e=0,g=0;e=u;u=u+16|0;d=e+4|0;c=e;b[d>>0]=0;f[c>>2]=0;a=f[18846]|0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72374,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(72374,d,c);a=f[18846]|0}b[d>>0]=1;f[c>>2]=1;if(a>>>0<(f[18847]|0)>>>0){wma(a,28607,1,1);a=(f[18846]|0)+40|0;f[18846]=a}else{av(d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,28615,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28615,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,28621,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28621,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,28625,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28625,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,28635,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28635,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,28645,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28645,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72105,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(72105,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72183,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(72183,d,c);a=f[18846]|0}b[d>>0]=0;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72230,0,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(72230,d,c);a=f[18846]|0}b[d>>0]=1;f[c>>2]=3;if(a>>>0<(f[18847]|0)>>>0){wma(a,28651,1,3);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(28651,d,c);a=f[18846]|0}b[d>>0]=1;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72151,1,0);a=(f[18846]|0)+40|0;f[18846]=a}else{Ku(72151,d,c);a=f[18846]|0}b[d>>0]=1;f[c>>2]=0;if(a>>>0<(f[18847]|0)>>>0){wma(a,72153,1,0);f[18846]=(f[18846]|0)+40}else Ku(72153,d,c);oF();c=0;while(1){a=f[18845]|0;if(c>>>0>=(((f[18846]|0)-a|0)/40|0)>>>0)break;a=a+(c*40|0)+8|0;while(1){a=f[a>>2]|0;if(!a)break;f[d>>2]=f[a+8>>2];g=ej((f[18848]|0)+((f[(f[18845]|0)+(c*40|0)+36>>2]|0)*20|0)|0,d)|0;f[g>>2]=c}c=c+1|0}u=e;return}function wg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;k=o+16|0;p=o+24|0;n=o+8|0;m=o;f[k>>2]=b;YY(p,a,k);k=f[p>>2]|0;f[k+8>>2]=b;d=gKa(f[a+84>>2]|0)|0;c=k+12|0;f[c>>2]=d;y=0;d=la(171,a|0)|0;l=y;y=0;a:do if(l&1)c=Pa()|0;else{y=0;ya(82,f[c>>2]|0,d|0,f[b+8>>2]|0);l=y;y=0;if(l&1){c=Pa()|0;break}e=b+16|0;l=a+100|0;b:do if(!(f[e>>2]|0))j=f[p+4>>2]|0;else{f[n>>2]=k;c=n+4|0;j=f[p+4>>2]|0;f[c>>2]=j;if(j|0)cza(j);h=a+104|0;d=f[h>>2]|0;i=a+108|0;do if(d>>>0>=(f[i>>2]|0)>>>0){y=0;ja(547,l|0,n|0);g=y;y=0;if(g&1){o=Pa()|0;tva(f[c>>2]|0);c=o;break a}else{c=f[c>>2]|0;break}}else{f[d>>2]=k;f[d+4>>2]=j;f[n>>2]=0;f[c>>2]=0;f[h>>2]=d+8;c=0}while(0);tva(c);y=0;ya(83,m|0,a|0,e|0);g=y;y=0;c:do if(g&1)c=Pa()|0;else{c=f[m>>2]|0;f[n>>2]=c;d=n+4|0;g=m+4|0;e=f[g>>2]|0;f[d>>2]=e;f[m>>2]=0;f[g>>2]=0;g=f[h>>2]|0;do if(g>>>0>=(f[i>>2]|0)>>>0){y=0;ja(547,l|0,n|0);i=y;y=0;if(i&1){c=Pa()|0;tva(f[d>>2]|0);tva(0);break c}else{c=f[d>>2]|0;break}}else{f[g>>2]=c;f[g+4>>2]=e;f[n>>2]=0;f[d>>2]=0;f[h>>2]=g+8;c=0}while(0);tva(c);tva(0);break b}while(0);break a}while(0);f[n>>2]=k;c=n+4|0;f[c>>2]=j;if(j|0)cza(j);h=a+104|0;d=f[h>>2]|0;i=a+108|0;do if(d>>>0>=(f[i>>2]|0)>>>0){y=0;ja(547,l|0,n|0);k=y;y=0;if(k&1){o=Pa()|0;tva(f[c>>2]|0);c=o;break a}else{c=f[c>>2]|0;break}}else{f[d>>2]=k;f[d+4>>2]=j;f[n>>2]=0;f[c>>2]=0;f[h>>2]=d+8;c=0}while(0);tva(c);y=0;ya(83,m|0,a|0,b+12|0);b=y;y=0;d:do if(b&1)c=Pa()|0;else{d=f[m>>2]|0;f[n>>2]=d;e=n+4|0;c=m+4|0;g=f[c>>2]|0;f[e>>2]=g;f[m>>2]=0;f[c>>2]=0;c=f[h>>2]|0;do if(c>>>0>=(f[i>>2]|0)>>>0){y=0;ja(547,l|0,n|0);n=y;y=0;if(n&1){c=Pa()|0;tva(f[e>>2]|0);tva(0);break d}else{c=f[e>>2]|0;break}}else{f[c>>2]=d;f[c+4>>2]=g;f[n>>2]=0;f[e>>2]=0;f[h>>2]=c+8;c=0}while(0);tva(c);tva(0);tva(j);u=o;return}while(0)}while(0);tva(f[p+4>>2]|0);$a(c|0)}function xg(a,c,e,g,h){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=f[a>>2]|0;do if(i){j=f[i+12>>2]|0;if((j|0)==(f[i+16>>2]|0))i=Ob[f[(f[i>>2]|0)+36>>2]&255](i)|0;else i=oHa(b[j>>0]|0)|0;if(bDa(i,-1)|0){f[a>>2]=0;j=1;break}else{j=(f[a>>2]|0)==0;break}}else j=1;while(0);if(c){i=f[c+12>>2]|0;if((i|0)==(f[c+16>>2]|0))i=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else i=oHa(b[i>>0]|0)|0;if(!(bDa(i,-1)|0))if(j){l=c;r=16}else r=15;else r=13}else r=13;if((r|0)==13)if(j)r=15;else{l=0;r=16}a:do if((r|0)==15){f[e>>2]=f[e>>2]|6;i=0}else if((r|0)==16){i=f[a>>2]|0;j=f[i+12>>2]|0;if((j|0)==(f[i+16>>2]|0))i=Ob[f[(f[i>>2]|0)+36>>2]&255](i)|0;else i=oHa(b[j>>0]|0)|0;j=i&255;if(j<<24>>24>-1?(q=g+8|0,d[(f[q>>2]|0)+(i<<24>>24<<1)>>1]&2048):0){i=(Rb[f[(f[g>>2]|0)+36>>2]&127](g,j,0)|0)<<24>>24;j=f[a>>2]|0;c=j+12|0;k=f[c>>2]|0;if((k|0)==(f[j+16>>2]|0)){Ob[f[(f[j>>2]|0)+40>>2]&255](j)|0;m=l;k=l}else{f[c>>2]=k+1;m=l;k=l}while(1){i=i+-48|0;p=h+-1|0;j=f[a>>2]|0;do if(j){c=f[j+12>>2]|0;if((c|0)==(f[j+16>>2]|0))j=Ob[f[(f[j>>2]|0)+36>>2]&255](j)|0;else j=oHa(b[c>>0]|0)|0;if(bDa(j,-1)|0){f[a>>2]=0;l=1;break}else{l=(f[a>>2]|0)==0;break}}else l=1;while(0);if(!k){o=m;j=1;n=0}else{j=f[k+12>>2]|0;if((j|0)==(f[k+16>>2]|0))j=Ob[f[(f[k>>2]|0)+36>>2]&255](k)|0;else j=oHa(b[j>>0]|0)|0;n=bDa(j,-1)|0;o=n?0:m;j=n|(m|0)==0;n=n?0:m}c=f[a>>2]|0;if(!((h|0)>1&(l^j)))break;j=f[c+12>>2]|0;if((j|0)==(f[c+16>>2]|0))j=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else j=oHa(b[j>>0]|0)|0;c=j&255;if(c<<24>>24<=-1)break a;if(!(d[(f[q>>2]|0)+(j<<24>>24<<1)>>1]&2048))break a;i=((Rb[f[(f[g>>2]|0)+36>>2]&127](g,c,0)|0)<<24>>24)+(i*10|0)|0;j=f[a>>2]|0;c=j+12|0;k=f[c>>2]|0;if((k|0)==(f[j+16>>2]|0)){Ob[f[(f[j>>2]|0)+40>>2]&255](j)|0;h=p;m=o;k=n;continue}else{f[c>>2]=k+1;h=p;m=o;k=n;continue}}do if(c){j=f[c+12>>2]|0;if((j|0)==(f[c+16>>2]|0))j=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else j=oHa(b[j>>0]|0)|0;if(bDa(j,-1)|0){f[a>>2]=0;c=1;break}else{c=(f[a>>2]|0)==0;break}}else c=1;while(0);if(o){j=f[o+12>>2]|0;if((j|0)==(f[o+16>>2]|0))j=Ob[f[(f[o>>2]|0)+36>>2]&255](o)|0;else j=oHa(b[j>>0]|0)|0;if(!(bDa(j,-1)|0)){if(c)break}else r=58}else r=58;if((r|0)==58?!c:0)break;f[e>>2]=f[e>>2]|2;break}f[e>>2]=f[e>>2]|4;i=0}while(0);return i|0}function yg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=u;u=u+48|0;d=h+40|0;i=h+28|0;j=h+16|0;e=h+12|0;k=h;g=a+84|0;m=c+32|0;l=c+28|0;a:do if(!(f[g>>2]|0)){e=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=uHa(52820)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[i+11>>0]=d;a=i}else{c=d+16&-16;y=0;a=la(150,c|0)|0;k=y;y=0;if(k&1){n=10;break}f[i>>2]=a;f[i+8>>2]=c|-2147483648;f[i+4>>2]=d}Pta(a,52820,d)|0;SBa(a+d|0,0);y=0;Ca(79,e|0,i|0,f[l>>2]|0,f[m>>2]|0);m=y;y=0;if(m&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(i);if(!c)break a}else{y=0;za(3);y=0;n=10}while(0);if((n|0)==10)a=Pa()|0;Oa(e|0)}else{do if(!(Hra(c)|0)){a=PH(rr(c)|0)|0;if(a>>>0>=(Pqa(f[g>>2]|0)|0)>>>0){e=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(52870)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[k+11>>0]=d;a=k}else{c=d+16&-16;y=0;a=la(150,c|0)|0;j=y;y=0;if(j&1){n=36;break}f[k>>2]=a;f[k+8>>2]=c|-2147483648;f[k+4>>2]=d}Pta(a,52870,d)|0;SBa(a+d|0,0);y=0;Ca(79,e|0,k|0,f[l>>2]|0,f[m>>2]|0);m=y;y=0;if(m&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(k);if(!c)break a}else{y=0;za(3);y=0;n=36}while(0);if((n|0)==36)a=Pa()|0;Oa(e|0);break a}}else{a=rr(c)|0;k=f[g>>2]|0;FCa(d,a);if(WS(k+52|0,d)|0){n=f[g>>2]|0;FCa(e,a);f[d>>2]=f[e>>2];a=XX(n,d)|0;break}e=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(52855)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[j+11>>0]=d;a=j}else{c=d+16&-16;y=0;a=la(150,c|0)|0;k=y;y=0;if(k&1){n=23;break}f[j>>2]=a;f[j+8>>2]=c|-2147483648;f[j+4>>2]=d}Pta(a,52855,d)|0;SBa(a+d|0,0);y=0;Ca(79,e|0,j|0,f[l>>2]|0,f[m>>2]|0);m=y;y=0;if(m&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(j);if(!c)break a}else{y=0;za(3);y=0;n=23}while(0);if((n|0)==23)a=Pa()|0;Oa(e|0);break a}while(0);u=h;return a|0}while(0);$a(a|0);return 0}function zg(a,c){a=a|0;c=c|0;var d=0,e=0;e=f[c>>2]|0;d=f[e>>2]|0;a:do if(!(b[a+104>>0]|0)){a=a+44|0;do switch(d|0){case 23:break a;case 1:{M2(a,e);Gwa(f[c>>2]|0)|0;break a}case 2:{M2(a,e);dDa(f[c>>2]|0);break a}case 3:{M2(a,e);dDa(f[c>>2]|0);break a}case 4:{M2(a,e);dDa(f[c>>2]|0);break a}case 5:{M2(a,e);dDa(f[c>>2]|0);break a}case 6:{M2(a,e);dDa(f[c>>2]|0);break a}case 7:{M2(a,e);dDa(f[c>>2]|0);break a}case 8:{M2(a,e);dDa(f[c>>2]|0);break a}case 9:{M2(a,e);Gwa(f[c>>2]|0)|0;break a}case 10:{M2(a,e);dDa(f[c>>2]|0);break a}case 11:{M2(a,e);dDa(f[c>>2]|0);break a}case 12:{M2(a,e);dDa(f[c>>2]|0);break a}case 13:{M2(a,e);dDa(f[c>>2]|0);break a}case 14:{M2(a,e);dDa(f[c>>2]|0);break a}case 15:{M2(a,e);dDa(f[c>>2]|0);break a}case 16:{M2(a,e);dDa(f[c>>2]|0);break a}case 17:{M2(a,e);dDa(f[c>>2]|0);break a}case 18:{M2(a,e);dDa(f[c>>2]|0);break a}case 19:{M2(a,e);dDa(f[c>>2]|0);break a}case 20:{M2(a,e);dDa(f[c>>2]|0);break a}case 21:{M2(a,e);dDa(f[c>>2]|0);break a}case 22:{M2(a,e);Gwa(f[c>>2]|0)|0;break a}default:Ka()}while(0)}else{if(!(hJa(d)|0)){yd(a,c);break}a=a+16|0;JJ(a,1692,c);d=(Asa(e)|0)+16|0;if(f[d>>2]|0){JJ(a,1691,(Asa(e)|0)+16|0);JJ(a,1693,c)}JJ(a,1691,(Asa(e)|0)+12|0);JJ(a,1694,c);JJ(a,1691,(Asa(e)|0)+8|0)}while(0);return}function Ag(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,i=0,j=0,k=0,l=0;g=f[c>>2]|0;if((e|0)!=0?(i=f[e>>2]|0,(i|0)!=0):0)if(!a){j=g;e=d;l=24}else{f[e>>2]=0;e=d;k=g;l=41}else l=5;a:do if((l|0)==5){e=(a|0)!=0;if(f[f[2650]>>2]|0)if(e){i=a;e=d;l=15;break}else{e=d;l=14;break}if(!e){d=iJ(g)|0;l=58;break}b:do if(d){j=a;e=d;while(1){i=b[g>>0]|0;if(!(i<<24>>24))break;g=g+1|0;f[j>>2]=i<<24>>24&57343;e=e+-1|0;if(!e)break b;else j=j+4|0}f[j>>2]=0;f[c>>2]=0;d=d-e|0;l=58;break a}while(0);f[c>>2]=g;l=58}while(0);c:while(1){d:do if((l|0)==14){while(1){i=b[g>>0]|0;if(((i&255)+-1|0)>>>0<127?(g&3|0)==0:0){l=f[g>>2]|0;i=l&255;if(!((l+-16843009|l)&-2139062144)){do{g=g+4|0;e=e+-4|0;i=f[g>>2]|0}while(((i+-16843009|i)&-2139062144|0)==0);i=i&255}}j=i&255;if((j+-1|0)>>>0>=127)break;g=g+1|0;e=e+-1|0}j=j+-194|0;if(j>>>0>50)l=52;else{i=f[10084+(j<<2)>>2]|0;j=g+1|0;l=24;continue c}}else if((l|0)==15){e:do if(e){while(1){j=b[g>>0]|0;f:do if(((j&255)+-1|0)>>>0<127?e>>>0>4&(g&3|0)==0:0){j=g;do{a=f[j>>2]|0;if((a+-16843009|a)&-2139062144|0){k=i;g=j;j=a&255;break f}f[i>>2]=a&255;f[i+4>>2]=h[j+1>>0];f[i+8>>2]=h[j+2>>0];k=j;j=j+4|0;l=i;i=i+16|0;f[l+12>>2]=h[k+3>>0];e=e+-4|0}while(e>>>0>4);k=i;g=j;j=b[j>>0]|0}else k=i;while(0);i=j&255;if((i+-1|0)>>>0>=127)break;g=g+1|0;f[k>>2]=i;e=e+-1|0;if(!e)break e;else i=k+4|0}i=i+-194|0;if(i>>>0>50){a=k;i=j;l=52;break d}i=f[10084+(i<<2)>>2]|0;a=k;k=g+1|0;l=41;continue c}while(0);f[c>>2]=g;l=58;continue c}else if((l|0)==24){l=(h[j>>0]|0)>>>3;if((l+-16|l+(i>>26))>>>0>7){g=j;l=50}else{g=j+1|0;if(i&33554432){if((b[g>>0]&-64)<<24>>24!=-128){g=j;l=50;break}g=j+2|0;if(i&524288){if((b[g>>0]&-64)<<24>>24!=-128){g=j;l=50;break}g=j+3|0}}e=e+-1|0;l=14;continue c}}else if((l|0)==41){l=0;j=h[k>>0]|0;g=j>>>3;if((g+-16|g+(i>>26))>>>0>7){g=k;l=50}else{g=k+1|0;i=j+-128|i<<6;do if((i|0)<0){j=(h[g>>0]|0)+-128|0;if(j>>>0>63){g=k+-1|0;d=a;break d}g=k+2|0;i=j|i<<6;if((i|0)<0){j=(h[g>>0]|0)+-128|0;if(j>>>0>63){g=k+-1|0;d=a;break d}else{g=k+3|0;i=j|i<<6;break}}}while(0);f[a>>2]=i;i=a+4|0;e=e+-1|0;l=15;continue c}}else if((l|0)==58)return d|0;while(0);if((l|0)==50){l=0;j=g+-1|0;if(!i){g=j;i=b[j>>0]|0;l=52}else{g=j;d=a}}if((l|0)==52)if(!(i<<24>>24)){if(a|0){f[a>>2]=0;f[c>>2]=0}d=d-e|0;l=58;continue}else d=a;f[2619]=84;if(!d){d=-1;l=58;continue}f[c>>2]=g;d=-1;l=58}return 0}function Bg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+240|0;k=s+32|0;t=s+144|0;r=s+52|0;q=s+48|0;m=s+16|0;n=s;e=a+40|0;g=f[e>>2]|0;gKa(g)|0;a:do if((f[g+24>>2]|0)>=2?(f[g+28>>2]|0)<=0:0){l=b+8|0;if(((f[l>>2]|0)+-7|0)>>>0>=2)Na(41702,41407,879,41750);i=f[b+16>>2]|0;d=i;if((!(yFa(f[i>>2]|0)|0)?(j=f[b+12>>2]|0,h=j,sT(h)|0):0)?sT(i)|0:0){Ot(t,uya(g)|0,h);b=uya(f[e>>2]|0)|0;y=0;ya(75,r|0,b|0,i|0);b=y;y=0;b:do if(b&1)c=Pa()|0;else{e=jca(t)|0;g=jca(r)|0;c:do if(e&g)c=0;else{do if(g){y=0;ja(1139,k|0,h|0);i=y;y=0;if(i&1){c=Pa()|0;break}if((f[k>>2]|0)>>>0<7){c=0;break c}if(oh(t,r)|0){c=0;break c}else{g=j;o=26}}else{if(e){y=0;ja(1139,k|0,i|0);i=y;y=0;if(!(i&1))if((f[k>>2]|0)>>>0<7){c=0;break c}else{g=d;d=j;o=26;break}else{c=Pa()|0;break}}y=0;ja(1139,k|0,h|0);h=y;y=0;if(h&1){c=Pa()|0;break}g=f[k>>2]|0;y=0;ja(1139,k|0,i|0);i=y;y=0;if(i&1){c=Pa()|0;break}e=f[k>>2]|0;if((g>>>0<e>>>0?e:g)>>>0<7){c=0;break c}o=g>>>0>e>>>0;g=o?j:d;d=o?d:j;o=26}while(0);do if((o|0)==26){e=f[a+36>>2]|0;gKa(e)|0;VBa(q,e);e=d;if((f[l>>2]|0)==8){uAa(m,1);y=0;f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];f[k+12>>2]=f[m+12>>2];d=ua(102,q|0,k|0)|0;p=y;y=0;if(!(p&1)?(y=0,c=xa(9,f[q>>2]|0,e|0,d|0,g|0)|0,q=y,y=0,!(q&1)):0)o=32;else o=29}else{uAa(n,0);y=0;f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];f[k+12>>2]=f[n+12>>2];c=ua(102,q|0,k|0)|0;o=y;y=0;if(!(o&1)?(y=0,p=xa(9,f[q>>2]|0,e|0,g|0,c|0)|0,q=y,y=0,!(q&1)):0){c=p;o=32}else o=29}if((o|0)==29){c=Pa()|0;break}else if((o|0)==32)break c}while(0);hT(r);break b}while(0);hT(r);hT(t);break a}while(0);hT(t);$a(c|0)}else c=0}else c=0;while(0);u=s;return c|0}function Cg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;e=g;GD(a,100);gKa(c)|0;d=f[c>>2]|0;a:do if(tJa(d)|0)Esa(a,c);else{if(aJa(d)|0){cea(a,c);break}if(gIa(d)|0){XQ(a,c);break}if(bJa(d)|0){RQ(a,c);break}d=UAa(c,0)|0;d=uqa(gKa(f[d>>2]|0)|0)|0;d=f[d>>2]|0;do switch(b[d>>0]|0){case 97:{if(bDa(d,f[18862]|0)|0){ZI(a,c);break a}else Ka();break}case 98:{if(bDa(d,f[18938]|0)|0){VO(a,c);break a}if(bDa(d,f[18942]|0)|0){CI(a,c);break a}if(bDa(d,f[18927]|0)|0){fX(a,c);break a}else Ka();break}case 99:{if(bDa(d,f[18929]|0)|0){JE(a,c);break a}if(bDa(d,f[18939]|0)|0){BJ(a,c);break a}if(bDa(d,f[18926]|0)|0){UW(a,c);break a}else Ka();break}case 100:{if(bDa(d,f[18943]|0)|0){Gr(a,c);break a}if(bDa(d,f[18933]|0)|0){TN(a,c);break a}if(bDa(d,f[18865]|0)|0){o0(a,c);break a}else Ka();break}case 105:{if(bDa(d,f[18936]|0)|0){to(a,c);break a}else Ka();break}case 108:{if(bDa(d,f[18928]|0)|0){iV(a,c);break a}else Ka();break}case 110:{if(bDa(d,f[18863]|0)|0){ola(a,c);break a}else Ka();break}case 111:{if(!(bDa(d,f[18861]|0)|0))break a;sq(a,c);break a}case 114:{if(bDa(d,f[18937]|0)|0){_$(a,c);break a}else Ka();break}case 115:{if(bDa(d,f[18930]|0)|0){K_(a,c);break a}if(bDa(d,f[18931]|0)|0){ZY(a,c);break a}if(bDa(d,f[18925]|0)|0){iq(a,c);break a}if(bDa(d,f[18924]|0)|0){u7(a,c);break a}else Ka();break}case 116:{if(bDa(d,f[18944]|0)|0){B5(a,c);break a}if(bDa(d,f[18923]|0)|0){tP(a,c);break a}else Ka();break}case 117:{if(bDa(d,f[18916]|0)|0){al(a,c);break a}else Ka();break}case 118:{if(bDa(d,f[18941]|0)|0){Yw(a,c);break a}else Ka();break}case 119:{if(bDa(d,f[18934]|0)|0){iS(a,c);break a}else Ka();break}default:{f[e>>2]=d;Zna(0,24424,e);Ka()}}while(0)}while(0);u=g;return}function Dg(a,c,e,g,h,i,j,k,l,m,n,o,p,q,r){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f[e>>2]=a;z=q+11|0;H=q+4|0;A=p+11|0;B=p+4|0;C=(g&512|0)==0;D=j+8|0;E=(r|0)>0;F=o+11|0;G=o+4|0;y=0;while(1){if((y|0)==4)break;a:do switch(b[l+y>>0]|0){case 0:{f[c>>2]=f[e>>2];break}case 1:{f[c>>2]=f[e>>2];w=Xb[f[(f[j>>2]|0)+28>>2]&255](j,32)|0;x=f[e>>2]|0;f[e>>2]=x+1;b[x>>0]=w;break}case 3:{x=b[z>>0]|0;s=x<<24>>24<0;if((s?f[H>>2]|0:x&255)|0){w=b[(s?f[q>>2]|0:q)>>0]|0;x=f[e>>2]|0;f[e>>2]=x+1;b[x>>0]=w}break}case 2:{w=b[A>>0]|0;s=w<<24>>24<0;w=s?f[B>>2]|0:w&255;if(!(C|(w|0)==0)){t=s?f[p>>2]|0:p;u=t+w|0;v=f[e>>2]|0;s=v;while(1){if((t|0)==(u|0))break;b[s>>0]=b[t>>0]|0;s=s+1|0;t=t+1|0}f[e>>2]=v+w}break}case 4:{t=f[e>>2]|0;h=k?h+1|0:h;u=h;while(1){if(u>>>0>=i>>>0)break;s=b[u>>0]|0;if(s<<24>>24<=-1)break;if(!(d[(f[D>>2]|0)+(s<<24>>24<<1)>>1]&2048))break;u=u+1|0}if(E){v=r;while(1){s=(v|0)>0;if(!(u>>>0>h>>>0&s))break;x=u+-1|0;s=b[x>>0]|0;w=f[e>>2]|0;f[e>>2]=w+1;b[w>>0]=s;v=v+-1|0;u=x}if(s)w=Xb[f[(f[j>>2]|0)+28>>2]&255](j,48)|0;else w=0;s=v;while(1){v=f[e>>2]|0;f[e>>2]=v+1;if((s|0)<=0)break;b[v>>0]=w;s=s+-1|0}b[v>>0]=m}b:do if((u|0)==(h|0)){w=Xb[f[(f[j>>2]|0)+28>>2]&255](j,48)|0;x=f[e>>2]|0;f[e>>2]=x+1;b[x>>0]=w}else{x=b[F>>0]|0;s=x<<24>>24<0;if(!((s?f[G>>2]|0:x&255)|0)){w=-1;v=0;x=0}else{w=b[(s?f[o>>2]|0:o)>>0]|0;v=0;x=0}while(1){if((u|0)==(h|0))break b;if((x|0)==(w|0)){w=f[e>>2]|0;f[e>>2]=w+1;b[w>>0]=n;v=v+1|0;w=b[F>>0]|0;s=w<<24>>24<0;if(v>>>0<(s?f[G>>2]|0:w&255)>>>0){w=b[(s?f[o>>2]|0:o)+v>>0]|0;w=w<<24>>24==127?-1:w<<24>>24;s=0}else{w=x;s=0}}else s=x;I=u+-1|0;J=b[I>>0]|0;x=f[e>>2]|0;f[e>>2]=x+1;b[x>>0]=J;x=s+1|0;u=I}}while(0);s=f[e>>2]|0;if((t|0)!=(s|0))while(1){s=s+-1|0;if(t>>>0>=s>>>0)break a;J=b[t>>0]|0;b[t>>0]=b[s>>0]|0;b[s>>0]=J;t=t+1|0}break}default:{}}while(0);y=y+1|0}s=b[z>>0]|0;h=s<<24>>24<0;s=h?f[H>>2]|0:s&255;if(s>>>0>1){h=h?f[q>>2]|0:q;u=h+s|0;v=f[e>>2]|0;t=s+-1|0;s=v;while(1){h=h+1|0;if((h|0)==(u|0))break;b[s>>0]=b[h>>0]|0;s=s+1|0}f[e>>2]=v+t}switch((g&176)<<24>>24){case 32:{f[c>>2]=f[e>>2];break}case 16:break;default:f[c>>2]=a}return}function Eg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=u;u=u+64|0;o=q+48|0;k=q;r=q+36|0;p=q+24|0;l=q+20|0;m=q+8|0;n=q+4|0;j=a+136|0;d=f[j>>2]|0;a:do switch(d|0){case 0:break;case 1:{f[o>>2]=0;d=b+4|0;c=f[d>>2]|0;if(c>>>0<(f[b+8>>2]|0)>>>0){f[c>>2]=0;f[d>>2]=c+4}else XC(b,o);break}default:{c=a+32|0;if((Vya(gKa(f[c>>2]|0)|0)|0)>>>0<2){TP(o,d);jX(b,o);E4(o);break a}YH(r,a+184|0);h=Rya(gKa(f[c>>2]|0)|0)|0;d=f[r>>2]|0;c=0;while(1){if((c|0)==(h|0))break;f[d+(c<<2)>>2]=-1;c=c+1|0}y=0;ja(1933,p|0,f[j>>2]|0);i=y;y=0;if(i&1)c=Pa()|0;else{y=0;ya(103,o|0,p|0,r|0);i=y;y=0;if(i&1)c=Pa()|0;else{jX(p,o);E4(o);y=0;Ca(76,a|0,p|0,b|0,l|0);i=y;y=0;do if(i&1)c=Pa()|0;else{c=f[b>>2]|0;e=f[b+4>>2]|0;f[k>>2]=c;if((c|0)!=(e|0)){c=k;d=o;b:while(1){f[d>>2]=f[c>>2];c=f[k>>2]|0;d=f[o>>2]|0;do{d=d+4|0;if((d|0)==(e|0))break b}while((f[c>>2]|0)>>>0>=(f[d>>2]|0)>>>0);f[o>>2]=d;c=o;d=k}}i=f[c>>2]|0;y=0;ia(376,p|0);g=y;y=0;if(g&1){c=Pa()|0;break}e=h+-1|0;g=f[p>>2]|0;c=h;while(1){d=f[j>>2]|0;if(c>>>0>=d>>>0)break;f[g+(c<<2)>>2]=e-c+d;c=c+1|0}y=0;ya(103,o|0,p|0,r|0);j=y;y=0;if(j&1){c=Pa()|0;break}jX(p,o);E4(o);f[m>>2]=0;d=m+4|0;f[d>>2]=0;f[m+8>>2]=0;y=0;Ca(76,a|0,p|0,m|0,n|0);a=y;y=0;if(a&1){c=Pa()|0;E4(m);break}c=f[m>>2]|0;e=f[d>>2]|0;f[k>>2]=c;if((c|0)!=(e|0)){c=k;d=o;c:while(1){f[d>>2]=f[c>>2];c=f[k>>2]|0;d=f[o>>2]|0;do{d=d+4|0;if((d|0)==(e|0))break c}while((f[c>>2]|0)>>>0>=(f[d>>2]|0)>>>0);f[o>>2]=d;c=o;d=k}}n=f[n>>2]|0;o=f[l>>2]|0;if(!(n>>>0<=o>>>0?!((n|0)==(o|0)?(f[c>>2]|0)>>>0<i>>>0:0):0))LV(b,m);E4(m);E4(p);E4(r);break a}while(0)}E4(p)}E4(r);$a(c|0)}}while(0);u=q;return}function Fg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;A=u;u=u+80|0;v=A+48|0;n=A+40|0;B=A+24|0;e=A+8|0;l=A;m=A+20|0;t=A+16|0;z=c+32|0;d=f[z>>2]|0;a:do if(!d)g=29;else{if((f[d+4>>2]|0)==5){jva(f[a+16>>2]|0,d)|0;g=32;break}o=QM(a,d)|0;p=a+44|0;q=u1(gKa(f[a+32>>2]|0)|0,o)|0;j=Rx(a,f[z>>2]|0,q)|0;f[z>>2]=0;r=kaa(f[f[p>>2]>>2]|0,0)|0;s=r+12|0;AW(s,j);gua(B);j=c+8|0;Bwa(n,j);iua(e,j);j=v+4|0;k=n+4|0;i=f[e>>2]|0;h=f[e+4>>2]|0;while(1){if(!(Cpa(f[n>>2]|0,f[k>>2]|0,i,h)|0)){g=5;break}y=0;d=la(164,n|0)|0;g=y;y=0;if(g&1){g=6;break}d=f[d>>2]|0;f[l>>2]=d;y=0;Ca(59,v|0,B|0,l|0,l|0);g=y;y=0;if(g&1){g=15;break}if(b[j>>0]|0){g=f[p>>2]|0;f[m>>2]=d;y=0;f[v>>2]=f[m>>2];d=va(22,a|0,v|0,o|0,0,-1)|0;e=y;y=0;if(e&1){g=15;break}y=0;e=oa(47,f[p>>2]|0,q|0,o|0)|0;C=y;y=0;if(C&1){g=15;break}y=0;d=oa(48,f[g>>2]|0,d|0,e|0)|0;C=y;y=0;if(C&1){g=15;break}y=0;ja(596,s|0,d|0);C=y;y=0;if(C&1){g=15;break}}bva(n)}do if((g|0)==5){d=c+24|0;y=0;Ca(59,n|0,B|0,d|0,d|0);C=y;y=0;if(C&1){d=Pa()|0;break}if(b[n+4>>0]|0){e=f[p>>2]|0;f[t>>2]=f[d>>2];y=0;f[v>>2]=f[t>>2];d=va(22,a|0,v|0,o|0,0,-1)|0;C=y;y=0;if(((!(C&1)?(y=0,w=oa(47,f[p>>2]|0,q|0,o|0)|0,C=y,y=0,!(C&1)):0)?(y=0,x=oa(48,f[e>>2]|0,d|0,w|0)|0,C=y,y=0,!(C&1)):0)?(y=0,ja(596,s|0,x|0),C=y,y=0,!(C&1)):0)g=24}else g=24;if(((g|0)==24?(y=0,ja(596,s|0,c|0),C=y,y=0,!(C&1)):0)?(y=0,ia(373,r|0),C=y,y=0,!(C&1)):0){jva(f[a+16>>2]|0,r)|0;Cta(B);g=29;break a}d=Pa()|0}else if((g|0)==6){d=Pa()|0;g=16}else if((g|0)==15){d=Pa()|0;g=16}while(0);Cta(B);g=34}while(0);do if((g|0)==29){Pca(v,a,c);y=0;ja(1629,v|0,z|0);C=y;y=0;if(!(C&1)?(y=0,ja(1629,v|0,c+28|0),C=y,y=0,!(C&1)):0){E$(v);g=32;break}d=Pa()|0;E$(v);g=34}while(0);if((g|0)==32){u=A;return}else if((g|0)==34)$a(d|0)}function Gg(a,c,d,e,g,h,i,j,k,l,m,n,o,p,q){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f[d>>2]=a;B=p+8+3|0;I=p+4|0;C=o+8+3|0;D=o+4|0;E=(e&512|0)==0;F=(q|0)>0;G=n+11|0;H=n+4|0;A=0;while(1){if((A|0)==4)break;a:do switch(b[k+A>>0]|0){case 0:{f[c>>2]=f[d>>2];break}case 1:{f[c>>2]=f[d>>2];y=Xb[f[(f[i>>2]|0)+44>>2]&255](i,32)|0;z=f[d>>2]|0;f[d>>2]=z+4;f[z>>2]=y;break}case 3:{z=b[B>>0]|0;r=z<<24>>24<0;if((r?f[I>>2]|0:z&255)|0){y=f[(r?f[p>>2]|0:p)>>2]|0;z=f[d>>2]|0;f[d>>2]=z+4;f[z>>2]=y}break}case 2:{v=b[C>>0]|0;r=v<<24>>24<0;v=r?f[D>>2]|0:v&255;if(!(E|(v|0)==0)){u=r?f[o>>2]|0:o;s=u+(v<<2)|0;t=f[d>>2]|0;r=t;while(1){if((u|0)==(s|0))break;f[r>>2]=f[u>>2];r=r+4|0;u=u+4|0}f[d>>2]=t+(v<<2)}break}case 4:{s=f[d>>2]|0;g=j?g+4|0:g;r=g;while(1){if(r>>>0>=h>>>0)break;if(!(Rb[f[(f[i>>2]|0)+12>>2]&127](i,2048,f[r>>2]|0)|0))break;r=r+4|0}if(F){u=q;while(1){t=(u|0)>0;if(!(r>>>0>g>>>0&t))break;z=r+-4|0;x=f[z>>2]|0;y=f[d>>2]|0;f[d>>2]=y+4;f[y>>2]=x;u=u+-1|0;r=z}if(t)w=Xb[f[(f[i>>2]|0)+44>>2]&255](i,48)|0;else w=0;v=f[d>>2]|0;while(1){t=v+4|0;if((u|0)<=0)break;f[v>>2]=w;u=u+-1|0;v=t}f[d>>2]=t;f[v>>2]=l}if((r|0)==(g|0)){y=Xb[f[(f[i>>2]|0)+44>>2]&255](i,48)|0;z=f[d>>2]|0;r=z+4|0;f[d>>2]=r;f[z>>2]=y}else{z=b[G>>0]|0;y=z<<24>>24<0;z=z&255;if(!((y?f[H>>2]|0:z)|0)){v=-1;t=0;w=0}else{v=b[(y?f[n>>2]|0:n)>>0]|0;t=0;w=0}while(1){if((r|0)==(g|0))break;u=f[d>>2]|0;if((w|0)==(v|0)){x=u+4|0;f[d>>2]=x;f[u>>2]=m;t=t+1|0;if(t>>>0<(y?f[H>>2]|0:z)>>>0){v=b[(y?f[n>>2]|0:n)+t>>0]|0;v=v<<24>>24==127?-1:v<<24>>24;w=0;u=x}else{v=w;w=0;u=x}}x=r+-4|0;J=f[x>>2]|0;f[d>>2]=u+4;f[u>>2]=J;w=w+1|0;r=x}r=f[d>>2]|0}if((s|0)!=(r|0))while(1){r=r+-4|0;if(s>>>0>=r>>>0)break a;J=f[s>>2]|0;f[s>>2]=f[r>>2];f[r>>2]=J;s=s+4|0}break}default:{}}while(0);A=A+1|0}r=b[B>>0]|0;g=r<<24>>24<0;r=g?f[I>>2]|0:r&255;if(r>>>0>1){s=g?f[p>>2]|0:p;v=s+4|0;r=s+(r<<2)|0;s=f[d>>2]|0;t=r;g=s;u=v;while(1){if((u|0)==(r|0))break;f[g>>2]=f[u>>2];g=g+4|0;u=u+4|0}f[d>>2]=s+((t-v|0)>>>2<<2)}switch((e&176)<<24>>24){case 32:{f[c>>2]=f[d>>2];break}case 16:break;default:f[c>>2]=a}return}function Hg(a,c,d){a=a|0;c=c|0;d=d|0;var e=0.0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;switch(c|0){case 0:{l=-149;m=24;j=4;break}case 1:{l=-1074;m=53;j=4;break}case 2:{l=-1074;m=53;j=4;break}default:e=0.0}a:do if((j|0)==4){o=a+4|0;n=a+100|0;do{c=f[o>>2]|0;if(c>>>0<(f[n>>2]|0)>>>0){f[o>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0}while((kEa(c)|0)!=0);b:do switch(c|0){case 43:case 45:{i=1-(((c|0)==45&1)<<1)|0;c=f[o>>2]|0;if(c>>>0<(f[n>>2]|0)>>>0){f[o>>2]=c+1;g=h[c>>0]|0;break b}else{g=kz(a)|0;break b}}default:{g=c;i=1}}while(0);c=0;do{if((g|32|0)!=(b[67300+c>>0]|0))break;do if(c>>>0<7){g=f[o>>2]|0;if(g>>>0<(f[n>>2]|0)>>>0){f[o>>2]=g+1;g=h[g>>0]|0;break}else{g=kz(a)|0;break}}while(0);c=c+1|0}while(c>>>0<8);c:do switch(c|0){case 8:break;case 3:{j=23;break}default:{k=(d|0)!=0;if(k&c>>>0>3)if((c|0)==8)break c;else{j=23;break c}d:do if(!c){c=0;do{if((g|32|0)!=(b[67309+c>>0]|0))break d;do if(c>>>0<2){g=f[o>>2]|0;if(g>>>0<(f[n>>2]|0)>>>0){f[o>>2]=g+1;g=h[g>>0]|0;break}else{g=kz(a)|0;break}}while(0);c=c+1|0}while(c>>>0<3)}while(0);switch(c|0){case 3:{c=f[o>>2]|0;if(c>>>0<(f[n>>2]|0)>>>0){f[o>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;if((c|0)==40)c=1;else{if(!(f[n>>2]|0)){e=C;break a}f[o>>2]=(f[o>>2]|0)+-1;e=C;break a}while(1){g=f[o>>2]|0;if(g>>>0<(f[n>>2]|0)>>>0){f[o>>2]=g+1;g=h[g>>0]|0}else g=kz(a)|0;if(!((g+-48|0)>>>0<10|(g+-65|0)>>>0<26)?!((g|0)==95|(g+-97|0)>>>0<26):0)break;c=c+1|0}if((g|0)==41){e=C;break a}g=(f[n>>2]|0)==0;if(!g)f[o>>2]=(f[o>>2]|0)+-1;if(!k){f[2619]=22;z9(a,0);e=0.0;break a}if(!c){e=C;break a}while(1){c=c+-1|0;if(!g)f[o>>2]=(f[o>>2]|0)+-1;if(!c){e=C;break a}}}case 0:{if((g|0)==48){c=f[o>>2]|0;if(c>>>0<(f[n>>2]|0)>>>0){f[o>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;if((c|32|0)==120){e=+Zf(a,m,l,i,d);break a}if(!(f[n>>2]|0))c=48;else{f[o>>2]=(f[o>>2]|0)+-1;c=48}}else c=g;e=+$c(a,c,m,l,i,d);break a}default:{if(f[n>>2]|0)f[o>>2]=(f[o>>2]|0)+-1;f[2619]=22;z9(a,0);e=0.0;break a}}}}while(0);if((j|0)==23){g=(f[n>>2]|0)==0;if(!g)f[o>>2]=(f[o>>2]|0)+-1;if((d|0)!=0&c>>>0>3)do{if(!g)f[o>>2]=(f[o>>2]|0)+-1;c=c+-1|0}while(c>>>0>3)}e=+(i|0)*D}while(0);return +e}function Ig(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=+h;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;z=u;u=u+992|0;i=z+8|0;E=z;k=z+880|0;m=z+872|0;a=z+472|0;x=z+876|0;s=z+468|0;t=z+464|0;B=z+452|0;C=z+440|0;D=z+428|0;n=z+424|0;l=z+24|0;v=z+20|0;w=z+16|0;f[m>>2]=k;p[E>>3]=h;j=uha(k,100,69865,E)|0;a:do if(j>>>0>99){k=gpa()|0;y=0;p[i>>3]=h;k=xa(24,m|0,k|0,69865,i|0)|0;r=y;y=0;do if(r&1){j=0;i=0}else{m=f[m>>2]|0;if(!m){y=0;za(9);y=0;j=0;i=0;break}i=m;a=rc(k<<2)|0;j=a;if(a|0){r=k;k=m;F=8;break a}y=0;za(9);y=0}while(0);a=Pa()|0}else{r=j;j=0;i=0;F=8}while(0);if((F|0)==8){Axa(E,e);m=f[E>>2]|0;y=0;q=ua(46,m|0,77588)|0;o=y;y=0;do if(o&1)a=Pa()|0;else{y=0;xa(f[(f[q>>2]|0)+48>>2]|0,q|0,k|0,k+r|0,a|0)|0;o=y;y=0;if(o&1){a=Pa()|0;break}if(!r)o=0;else o=(b[k>>0]|0)==45;f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[B+(k<<2)>>2]=0;k=k+1|0}f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[C+(k<<2)>>2]=0;k=k+1|0}f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[D+(k<<2)>>2]=0;k=k+1|0}y=0;ta(4,d|0,o|0,m|0,x|0,s|0,t|0,B|0,C|0,D|0,n|0);d=y;y=0;if(d&1)a=Pa()|0;else{d=f[n>>2]|0;if((r|0)>(d|0)){m=b[D+8+3>>0]|0;n=b[C+8+3>>0]|0;k=1;m=(m<<24>>24<0?f[D+4>>2]|0:m&255)+(r-d<<1)|0;n=n<<24>>24<0?f[C+4>>2]|0:n&255}else{n=b[D+8+3>>0]|0;m=b[C+8+3>>0]|0;k=2;m=m<<24>>24<0?f[C+4>>2]|0:m&255;n=n<<24>>24<0?f[D+4>>2]|0:n&255}k=n+d+m+k|0;if(k>>>0>100){l=rc(k<<2)|0;k=l;if(!l){y=0;za(9);y=0;a=Pa()|0}else F=31}else{k=0;F=31}if((F|0)==31){y=0;pa(2,l|0,v|0,w|0,f[e+4>>2]|0,a|0,a+(r<<2)|0,q|0,o|0,x|0,f[s>>2]|0,f[t>>2]|0,B|0,C|0,D|0,d|0);F=y;y=0;if(!(F&1)?(y=0,A=ka(43,f[c>>2]|0,l|0,f[v>>2]|0,f[w>>2]|0,e|0,g|0)|0,F=y,y=0,!(F&1)):0){if(k|0)Xe(k);jta(D);jta(C);zta(B);pza(E);if(j|0)Xe(j);if(i|0)Xe(i);u=z;return A|0}a=Pa()|0}if(k|0)Xe(k)}jta(D);jta(C);zta(B)}while(0);pza(E)}if(j|0)Xe(j);if(i|0)Xe(i);$a(a|0);return 0}function Jg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=u;u=u+48|0;d=p+32|0;l=p+28|0;r=p+16|0;g=p+12|0;q=p;c=Hi(a)|0;f[d>>2]=c;a:do if(!(f[c+4>>2]|0)){VBa(l,f[a>>2]|0);f[r>>2]=0;j=r+4|0;f[j>>2]=0;f[r+8>>2]=0;e=r+8|0;y=0;ja(497,r|0,d|0);i=y;y=0;b:do if(!(i&1)){do{y=0;c=la(219,a|0)|0;i=y;y=0;if(i&1){s=9;break b}f[g>>2]=c;d=f[j>>2]|0;if((d|0)==(f[e>>2]|0)){y=0;ja(497,r|0,g|0);i=y;y=0;if(i&1){s=10;break}}else{f[d>>2]=c;f[j>>2]=(f[j>>2]|0)+4}}while(!(f[c+4>>2]|0));if((s|0)==10){c=Pa()|0;break}h=f[l>>2]|0;y=0;c=ua(87,h|0,0)|0;i=y;y=0;if(!(i&1)){i=c+12|0;d=f[j>>2]|0;while(1){if((f[r>>2]|0)==(d|0)){s=20;break}y=0;ja(596,i|0,f[d+-4>>2]|0);g=y;y=0;if(g&1)break;e=f[j>>2]|0;d=0;while(1){if((d|0)==-1)break;g=d+-1|0;f[j>>2]=e+(g<<2);d=g}d=e+-4|0}if((s|0)==20?(y=0,k=ua(64,i|0,0)|0,j=y,y=0,!(j&1)):0){g=f[(f[k>>2]|0)+4>>2]|0;d=f[a+112>>2]|0;if(d|0){y=0;d=ua(114,d|0,g|0)|0;q=y;y=0;if(q&1){c=Pa()|0;break}y=0;e=ua(64,i|0,0)|0;q=y;y=0;if(((((!(q&1)?(y=0,m=oa(48,h|0,d|0,f[e>>2]|0)|0,q=y,y=0,!(q&1)):0)?(y=0,n=ua(64,i|0,0)|0,q=y,y=0,!(q&1)):0)?(f[n>>2]=m,y=0,o=oa(47,l|0,d|0,g|0)|0,q=y,y=0,!(q&1)):0)?(y=0,ja(596,i|0,o|0),q=y,y=0,!(q&1)):0)?(y=0,ia(373,c|0),q=y,y=0,!(q&1)):0){E4(r);break a}c=Pa()|0;break}g=zb(20)|0;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;e=uHa(55832)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[q+11>>0]=e;c=q}else{d=e+16&-16;y=0;c=la(150,d|0)|0;p=y;y=0;if(p&1){s=30;break}f[q>>2]=c;f[q+8>>2]=d|-2147483648;f[q+4>>2]=e}Pta(c,55832,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,q|0);p=y;y=0;if(p&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(q);if(!d)break b}else{y=0;za(3);y=0;s=30}while(0);if((s|0)==30)c=Pa()|0;Oa(g|0);break}c=Pa()|0}else s=9}else s=9;while(0);if((s|0)==9)c=Pa()|0;E4(r);$a(c|0)}while(0);u=p;return c|0}function Kg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+32|0;m=o+28|0;h=o+16|0;p=o;n=o+12|0;do if(b[a+12>>0]|0){e=Vea(76852,57278)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,l=y,y=0,!(l&1)):0){pza(m);jn(e,d)|0;Yp(e)|0;break}q=Pa()|0;pza(m);$a(q|0)}while(0);l=Nm(a)|0;a:do if((l|0)==-1){g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(57299)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;c=h}else{d=e+16&-16;y=0;c=la(150,d|0)|0;p=y;y=0;if(p&1){q=15;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(c,57299,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,h|0);p=y;y=0;if(p&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(!d)break a}else{y=0;za(3);y=0;q=15}while(0);if((q|0)==15)c=Pa()|0;Oa(g|0)}else{k=a+192|0;c=0;while(1){f[m>>2]=c;if(c>>>0>=l>>>0){q=20;break}if(Nm(a)|0)break;c=f[a>>2]|0;d=Dp(a)|0;f[n>>2]=d;e=c+80|0;g=f[e>>2]|0;if(g>>>0<(f[c+84>>2]|0)>>>0){Yqa(g,d);f[e>>2]=(f[e>>2]|0)+16}else Vy(c+76|0,n);d=EL(k,m)|0;e=Nm(a)|0;g=d+4|0;h=d+8|0;c=0;while(1){if((c|0)==(e|0))break;i=Nm(a)|0;f[n>>2]=i;j=f[g>>2]|0;if(j>>>0<(f[h>>2]|0)>>>0){f[j>>2]=i;f[g>>2]=j+4}else XC(d,n);c=c+1|0}c=(f[m>>2]|0)+1|0}if((q|0)==20){u=o;return}g=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;e=uHa(57317)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[p+11>>0]=e;c=p}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){q=30;break}f[p>>2]=c;f[p+8>>2]=d|-2147483648;f[p+4>>2]=e}Pta(c,57317,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,p|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(p);if(d)q=32}else{y=0;za(3);y=0;q=30}while(0);if((q|0)==30){c=Pa()|0;q=32}if((q|0)==32)Oa(g|0)}while(0);$a(c|0)}function Lg(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=+h;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;z=u;u=u+384|0;i=z+8|0;E=z;k=z+276|0;m=z+64|0;a=z+176|0;x=z+172|0;s=z+169|0;t=z+168|0;B=z+52|0;C=z+40|0;D=z+28|0;n=z+24|0;l=z+68|0;v=z+20|0;w=z+16|0;f[m>>2]=k;p[E>>3]=h;j=uha(k,100,69865,E)|0;a:do if(j>>>0>99){k=gpa()|0;y=0;p[i>>3]=h;k=xa(24,m|0,k|0,69865,i|0)|0;r=y;y=0;do if(r&1){j=0;i=0}else{m=f[m>>2]|0;if(!m){y=0;za(9);y=0;j=0;i=0;break}i=m;a=rc(k)|0;j=a;if(a|0){r=k;k=m;F=8;break a}y=0;za(9);y=0}while(0);a=Pa()|0}else{r=j;j=0;i=0;F=8}while(0);if((F|0)==8){Axa(E,e);m=f[E>>2]|0;y=0;q=ua(46,m|0,77556)|0;o=y;y=0;do if(o&1)a=Pa()|0;else{y=0;xa(f[(f[q>>2]|0)+32>>2]|0,q|0,k|0,k+r|0,a|0)|0;o=y;y=0;if(o&1){a=Pa()|0;break}if(!r)o=0;else o=(b[k>>0]|0)==45;f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[B+(k<<2)>>2]=0;k=k+1|0}f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[C+(k<<2)>>2]=0;k=k+1|0}f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;k=0;while(1){if((k|0)==3)break;f[D+(k<<2)>>2]=0;k=k+1|0}y=0;ta(3,d|0,o|0,m|0,x|0,s|0,t|0,B|0,C|0,D|0,n|0);d=y;y=0;if(d&1)a=Pa()|0;else{d=f[n>>2]|0;if((r|0)>(d|0)){m=b[D+11>>0]|0;n=b[C+11>>0]|0;k=1;m=(m<<24>>24<0?f[D+4>>2]|0:m&255)+(r-d<<1)|0;n=n<<24>>24<0?f[C+4>>2]|0:n&255}else{n=b[D+11>>0]|0;m=b[C+11>>0]|0;k=2;m=m<<24>>24<0?f[C+4>>2]|0:m&255;n=n<<24>>24<0?f[D+4>>2]|0:n&255}k=n+d+m+k|0;if(k>>>0>100){l=rc(k)|0;k=l;if(!l){y=0;za(9);y=0;a=Pa()|0}else F=31}else{k=0;F=31}if((F|0)==31){y=0;pa(1,l|0,v|0,w|0,f[e+4>>2]|0,a|0,a+r|0,q|0,o|0,x|0,b[s>>0]|0,b[t>>0]|0,B|0,C|0,D|0,d|0);F=y;y=0;if(!(F&1)?(y=0,A=ka(41,f[c>>2]|0,l|0,f[v>>2]|0,f[w>>2]|0,e|0,g|0)|0,F=y,y=0,!(F&1)):0){if(k|0)Xe(k);zta(D);zta(C);zta(B);pza(E);if(j|0)Xe(j);if(i|0)Xe(i);u=z;return A|0}a=Pa()|0}if(k|0)Xe(k)}zta(D);zta(C);zta(B)}while(0);pza(E)}if(j|0)Xe(j);if(i|0)Xe(i);$a(a|0);return 0}function Mg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;m=u;u=u+128|0;h=m+112|0;n=m+116|0;o=m+100|0;p=m+64|0;i=m+60|0;k=m+48|0;l=m+36|0;j=m;f[h>>2]=c;gua(n);gua(o);g=a+80|0;h6(p,f[g>>2]|0,n,o);y=0;ja(901,p|0,h|0);h=y;y=0;a:do if(h&1)a=8;else{h=a+56|0;e=a+68|0;while(1){if(!b){c=0;a=31;break}y=0;c=la(174,f[b+8>>2]|0)|0;d=y;y=0;if(d&1){a=8;break a}f[i>>2]=c;y=0;c=ua(92,h|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}if(!(f[c>>2]|0)){a=7;break}y=0;c=ua(92,h|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}if((f[c>>2]|0)>>>0>1){a=28;break}y=0;c=ua(92,n|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}if(f[c>>2]|0){a=14;break}y=0;c=ua(92,o|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}c=f[c>>2]|0;y=0;a=ua(92,e|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}if((c|0)!=(f[a>>2]|0)){y=0;c=ua(92,o|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}c=f[c>>2]|0;y=0;a=ua(92,e|0,i|0)|0;d=y;y=0;if(d&1){a=9;break}if(c>>>0>=(f[a>>2]|0)>>>0){a=21;break}gua(k);gua(l);h6(j,f[g>>2]|0,k,l);y=0;ja(901,j|0,b+12|0);d=y;y=0;if(d&1){a=27;break}y=0;c=ua(92,o|0,i|0)|0;d=y;y=0;if(d&1){a=27;break}d=f[c>>2]|0;y=0;c=ua(92,l|0,i|0)|0;a=y;y=0;if(a&1){a=27;break}c=f[c>>2]|0;y=0;a=ua(92,e|0,i|0)|0;q=y;y=0;if(q&1){a=27;break}q=(c+d|0)>>>0<(f[a>>2]|0)>>>0;Rua(j);uoa(l);uoa(k);if(q){a=28;break}}b=lR(f[b+16>>2]|0,f[g>>2]|0)|0}if((a|0)==7){y=0;Ca(52,36320,36256,171,36341);y=0;a=9}else if((a|0)==14){y=0;Ca(52,36367,36256,173,36341);y=0;a=9}else if((a|0)==21){y=0;Ca(52,36397,36256,175,36341);y=0;a=9}else if((a|0)==27){c=Pa()|0;Rua(j);uoa(l);uoa(k)}else if((a|0)==28){c=1;a=31}if((a|0)==9)c=Pa()|0;else if((a|0)==31){Rua(p);uoa(o);uoa(n);u=m;return c|0}}while(0);if((a|0)==8)c=Pa()|0;Rua(p);uoa(o);uoa(n);$a(c|0);return 0}function Ng(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+32|0;m=n+16|0;i=n;o=n+4|0;k=a+12|0;do if(b[k>>0]|0){e=Vea(76852,55416)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(m);jn(e,d)|0;Yp(e)|0;break}o=Pa()|0;pza(m);$a(o|0)}while(0);b[a+172>>0]=0;d=a+164|0;e=a+168|0;g=a+160|0;while(1){c=Mc(a,i)|0;h=f[i>>2]|0;if(!h){i=8;break}c=f[d>>2]|0;if((c|0)==(f[e>>2]|0))XC(g,i);else{f[c>>2]=h;f[d>>2]=(f[d>>2]|0)+4}if((f[(f[i>>2]|0)+4>>2]|0)==5){i=17;break}}a:do if((i|0)==8){f[a+176>>2]=c;if(!(b[k>>0]|0))break;c=Vea(76852,55438)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[m>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,j=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,o=y,y=0,!(o&1)):0){pza(m);jn(c,j)|0;Yp(c)|0;break}o=Pa()|0;pza(m);$a(o|0)}else if((i|0)==17){g=a+176|0;h=a+36|0;c=f[h>>2]|0;if((c|0)!=(f[a+116>>2]|0)){o=b[(f[f[a+8>>2]>>2]|0)+c>>0]|0;e=o<<24>>24;switch(o<<24>>24){case 5:case 11:break;default:{Ji(a);break a}}do if(b[k>>0]|0){d=Vea(76852,55516)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,l=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,o=y,y=0,!(o&1)):0){pza(m);jn(d,l)|0;Yp(d)|0;c=f[h>>2]|0;break}o=Pa()|0;pza(m);$a(o|0)}while(0);f[g>>2]=e;f[h>>2]=c+1;break}g=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;e=uHa(55469)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[o+11>>0]=e;c=o}else{d=e+16&-16;y=0;c=la(150,d|0)|0;n=y;y=0;if(n&1){i=26;break}f[o>>2]=c;f[o+8>>2]=d|-2147483648;f[o+4>>2]=e}Pta(c,55469,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,o|0);n=y;y=0;if(n&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(o);if(d)i=28}else{y=0;za(3);y=0;i=26}while(0);if((i|0)==26){c=Pa()|0;i=28}if((i|0)==28)Oa(g|0);$a(c|0)}while(0);u=n;return}function Og(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;l=u;u=u+160|0;g=l+48|0;h=l+132|0;x=l+124|0;r=l+120|0;t=l+148|0;v=l+32|0;A=l+16|0;z=l+144|0;s=l+140|0;q=l+136|0;p=l;i=l+128|0;m=l+108|0;c=l+96|0;o=l+104|0;j=l+80|0;d=l+72|0;e=l+64|0;PDa(h,a);FCa(i,f[18777]|0);dCa(x,73350);dCa(r,23237);r=f[r>>2]|0;f[t>>2]=r;a=gia(h,1,1)|0;w=gia(h,0,1)|0;w=dea(f[h>>2]|0,20,w)|0;f[g>>2]=f[t>>2];w=q3(h,g,a,w)|0;a=gia(h,0,1)|0;t=gia(h,0,1)|0;uAa(v,1);f[g>>2]=f[v>>2];f[g+4>>2]=f[v+4>>2];f[g+8>>2]=f[v+8>>2];f[g+12>>2]=f[v+12>>2];v=FO(h,g)|0;b=f[h>>2]|0;v=iea(b,0,s5(b,7,a,s5(b,1,t,v)|0)|0)|0;t=gia(h,1,1)|0;uAa(A,1);f[g>>2]=f[A>>2];f[g+4>>2]=f[A+4>>2];f[g+8>>2]=f[A+8>>2];f[g+12>>2]=f[A+12>>2];t=iea(b,1,s5(b,0,t,FO(h,g)|0)|0)|0;x=f[x>>2]|0;f[z>>2]=x;f[g>>2]=f[z>>2];a=q3(h,g,0,0)|0;f[s>>2]=x;a=r3(h,w,v,t,a)|0;f[g>>2]=f[s>>2];a=Gaa(h,g,a)|0;f[q>>2]=r;f[g>>2]=f[q>>2];a=IM(h,a,g,0)|0;uAa(p,0);f[g>>2]=f[p>>2];f[g+4>>2]=f[p+4>>2];f[g+8>>2]=f[p+8>>2];f[g+12>>2]=f[p+12>>2];b=iea(b,1,FO(h,g)|0)|0;dCa(o,19346);f[g>>2]=f[o>>2];qta(c,g,1);f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;y=0;ja(56,m|0,1);o=y;y=0;if(o&1){A=Pa()|0;a3(m);$a(A|0)}kR(m,c,c+8|0);y=0;ja(57,e|0,23239);A=y;y=0;do if(A&1){a=Pa()|0;n=10}else{f[g>>2]=f[e>>2];qta(d,g,1);f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;y=0;ja(56,j|0,1);A=y;y=0;if(A&1){a=Pa()|0;a3(j);n=10;break}kR(j,d,d+8|0);y=0;a=oa(36,h|0,b|0,a|0)|0;A=y;y=0;if(!(A&1)?(y=0,f[g>>2]=f[i>>2],k=ka(39,h|0,g|0,m|0,1,j|0,a|0)|0,A=y,y=0,!(A&1)):0){a3(j);a3(m);u=l;return k|0}a=Pa()|0;a3(j)}while(0);a3(m);$a(a|0);return 0}function Pg(a,b){a=a|0;b=b|0;var c=0;if(!b)Na(59079,64509,76,59084);do switch(f[b>>2]|0){case 1:{c=RC(a,b)|0;break}case 2:{c=AG(a,b)|0;break}case 3:{c=IL(a,b)|0;break}case 4:{c=wF(a,b)|0;break}case 5:{c=_D(a,b)|0;break}case 6:{c=Du(a,b)|0;break}case 7:{c=uu(a,b)|0;break}case 8:{c=Ms(a,b)|0;break}case 9:{c=eda(a,f[b+4>>2]|0,f[b+8>>2]|0)|0;break}case 10:{c=dL(a,f[b+4>>2]|0,f[b+8>>2]|0,f[b+12>>2]|0)|0;break}case 11:{c=KR(a,b)|0;break}case 12:{c=VK(a,b)|0;break}case 13:{c=Xy(a,b)|0;break}case 14:{c=fu(a,b)|0;break}case 25:{c=_E(a,b)|0;break}case 24:{c=iB(a,b)|0;break}case 27:case 26:{c=0;break}case 15:{c=_P(a,b)|0;break}case 16:{c=vW(a,f[b+8>>2]|0,f[b+12>>2]|0)|0;break}case 17:{c=mK(a,b)|0;break}case 18:{c=sH(a,b)|0;break}case 19:{c=e_(a,f[b+8>>2]|0)|0;break}case 20:{c=hZ(a,f[b+8>>2]|0)|0;break}case 21:{c=CB(a,b)|0;break}case 22:{c=apa(a)|0;break}case 23:{c=gla(a)|0;break}default:Ka()}while(0);return c|0}function Qg(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;r=u;u=u+240|0;q=r;j=r+136|0;v=r+16|0;p=r+8|0;t=r+4|0;l=r+134|0;n=r+124|0;o=r+24|0;f[v>>2]=j;w=v+4|0;f[w>>2]=399;Axa(t,g);a=f[t>>2]|0;y=0;k=ua(46,a|0,77556)|0;m=y;y=0;if(m&1){a=Pa()|0;k=v}else{b[l>>0]=0;y=0;a=na(1,c|0,f[d>>2]|0,e|0,a|0,f[g+4>>2]|0,h|0,l|0,k|0,v|0,p|0,j+100|0)|0;m=y;y=0;a:do if(m&1)s=9;else{b:do if(a){y=0;xa(f[(f[k>>2]|0)+32>>2]|0,k|0,69633,69643,n|0)|0;m=y;y=0;if(m&1)a=Pa()|0;else{k=f[p>>2]|0;g=f[v>>2]|0;a=k-g|0;if((a|0)>98){a=rc(a+2|0)|0;j=a;if(!a){y=0;za(9);y=0}else s=14}else{a=o;j=0;s=14}do if((s|0)==14){if(b[l>>0]|0){b[a>>0]=45;a=a+1|0}l=n+10|0;m=n;while(1){if(g>>>0>=k>>>0)break;e=b[g>>0]|0;k=n;while(1){if((k|0)==(l|0)){k=l;break}if((b[k>>0]|0)==e<<24>>24)break;k=k+1|0}b[a>>0]=b[69633+(k-m)>>0]|0;g=g+1|0;a=a+1|0;k=f[p>>2]|0}b[a>>0]=0;f[q>>2]=i;if((Tla(o,69644,q)|0)!=1){y=0;ia(400,69648);y=0;break}if(j|0)Xe(j);break b}while(0);a=Pa()|0;if(j|0)Xe(j)}break a}while(0);a=f[c>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){s=9;break a}}else a=oHa(b[j>>0]|0)|0;if(bDa(a,-1)|0){f[c>>2]=0;k=1;break}else{k=(f[c>>2]|0)==0;break}}else k=1;while(0);a=f[d>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){s=9;break a}}else a=oHa(b[j>>0]|0)|0;if(!(bDa(a,-1)|0))if(k)break;else{s=44;break}else{f[d>>2]=0;s=42;break}}else s=42;while(0);if((s|0)==42?k:0)s=44;if((s|0)==44)f[h>>2]=f[h>>2]|2;j=f[c>>2]|0;pza(t);a=f[v>>2]|0;f[v>>2]=0;if(a|0?(y=0,ia(f[w>>2]|0,a|0),w=y,y=0,w&1):0){w=ab(0)|0;lDa(w)}u=r;return j|0}while(0);if((s|0)==9)a=Pa()|0;k=v;j=f[v>>2]|0}pza(t);f[k>>2]=0;if(j|0?(y=0,ia(f[w>>2]|0,j|0),w=y,y=0,w&1):0){w=ab(0)|0;lDa(w)}$a(a|0);return 0}function Rg(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;r=u;u=u+576|0;q=r;j=r+64|0;v=r+56|0;p=r+52|0;t=r+48|0;l=r+564|0;n=r+8|0;o=r+464|0;f[v>>2]=j;w=v+4|0;f[w>>2]=399;Axa(t,g);a=f[t>>2]|0;y=0;k=ua(46,a|0,77588)|0;m=y;y=0;if(m&1){a=Pa()|0;k=v}else{b[l>>0]=0;y=0;a=na(2,c|0,f[d>>2]|0,e|0,a|0,f[g+4>>2]|0,h|0,l|0,k|0,v|0,p|0,j+400|0)|0;m=y;y=0;a:do if(m&1)s=9;else{b:do if(a){y=0;xa(f[(f[k>>2]|0)+48>>2]|0,k|0,69759,69769,n|0)|0;m=y;y=0;if(m&1)a=Pa()|0;else{k=f[p>>2]|0;g=f[v>>2]|0;a=k-g|0;if((a|0)>392){a=rc((a>>>2)+2|0)|0;j=a;if(!a){y=0;za(9);y=0}else s=14}else{a=o;j=0;s=14}do if((s|0)==14){if(b[l>>0]|0){b[a>>0]=45;a=a+1|0}l=n+40|0;m=n;while(1){if(g>>>0>=k>>>0)break;e=f[g>>2]|0;k=n;while(1){if((k|0)==(l|0)){k=l;break}if((f[k>>2]|0)==(e|0))break;k=k+4|0}b[a>>0]=b[69759+(k-m>>2)>>0]|0;g=g+4|0;a=a+1|0;k=f[p>>2]|0}b[a>>0]=0;f[q>>2]=i;if((Tla(o,69644,q)|0)!=1){y=0;ia(400,69648);y=0;break}if(j|0)Xe(j);break b}while(0);a=Pa()|0;if(j|0)Xe(j)}break a}while(0);a=f[c>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){s=9;break a}}else a=gKa(f[j>>2]|0)|0;if(TDa(a)|0){f[c>>2]=0;k=1;break}else{k=(f[c>>2]|0)==0;break}}else k=1;while(0);a=f[d>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){s=9;break a}}else a=gKa(f[j>>2]|0)|0;if(!(TDa(a)|0))if(k)break;else{s=44;break}else{f[d>>2]=0;s=42;break}}else s=42;while(0);if((s|0)==42?k:0)s=44;if((s|0)==44)f[h>>2]=f[h>>2]|2;j=f[c>>2]|0;pza(t);a=f[v>>2]|0;f[v>>2]=0;if(a|0?(y=0,ia(f[w>>2]|0,a|0),w=y,y=0,w&1):0){w=ab(0)|0;lDa(w)}u=r;return j|0}while(0);if((s|0)==9)a=Pa()|0;k=v;j=f[v>>2]|0}pza(t);f[k>>2]=0;if(j|0?(y=0,ia(f[w>>2]|0,j|0),w=y,y=0,w&1):0){w=ab(0)|0;lDa(w)}$a(a|0);return 0}function Sg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;s=u;u=u+64|0;n=s+56|0;o=s+52|0;w=s+40|0;v=s+24|0;p=s+20|0;q=s+16|0;t=s+4|0;r=s;do if(b[a+12>>0]|0){c=Vea(76852,55177)|0;Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[n>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(n);jn(c,e)|0;Yp(c)|0;break}w=Pa()|0;pza(n);$a(w|0)}while(0);i=Nm(a)|0;j=t+4|0;k=t+8|0;h=0;a:while(1){if(h>>>0>=i>>>0){h=8;break}if(Nm(a)|0){h=10;break}oxa(v);y=0;l=la(216,a|0)|0;m=y;y=0;if(m&1){h=30;break}f[p>>2]=l;y=0;m=la(212,a|0)|0;g=y;y=0;if(g&1){h=31;break}f[q>>2]=m;f[t>>2]=0;f[j>>2]=0;f[k>>2]=0;y=0;ja(71,t|0,m|0);g=y;y=0;if(g&1){h=32;break}else c=0;while(1){if(c>>>0>=m>>>0)break;y=0;d=la(217,a|0)|0;g=y;y=0;if(g&1){h=35;break a}b[(f[t>>2]|0)+c>>0]=d;c=c+1|0}c=f[a>>2]|0;g=f[t>>2]|0;f[r>>2]=g;d=c+104|0;e=f[d>>2]|0;if(e>>>0>=(f[c+108>>2]|0)>>>0){y=0;Ca(82,c+100|0,p|0,r|0,q|0);m=y;y=0;if(m&1){h=37;break}}else{y=0;ya(71,o|0,m|0,0);m=y;y=0;if(m&1){h=37;break}y=0;f[n>>2]=f[o>>2];Ca(56,e|0,l|0,g|0,n|0);m=y;y=0;if(m&1){h=37;break}f[d>>2]=(f[d>>2]|0)+16}F4(t);Gza(v);h=h+1|0}b:do if((h|0)==8){u=s;return}else if((h|0)==10){g=zb(20)|0;f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;e=uHa(55197)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[w+11>>0]=e;c=w}else{d=e+16&-16;y=0;c=la(150,d|0)|0;v=y;y=0;if(v&1){h=18;break}f[w>>2]=c;f[w+8>>2]=d|-2147483648;f[w+4>>2]=e}Pta(c,55197,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,w|0);v=y;y=0;if(v&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(w);if(!d)break b}else{y=0;za(3);y=0;h=18}while(0);if((h|0)==18)c=Pa()|0;Oa(g|0)}else if((h|0)==30){c=Pa()|0;h=40}else if((h|0)==31){c=Pa()|0;h=39}else if((h|0)==32){c=Pa()|0;h=38}else if((h|0)==35){c=Pa()|0;h=38}else if((h|0)==37){c=Pa()|0;h=38}while(0);if((h|0)==38){F4(t);h=39}if((h|0)==39)h=40;if((h|0)==40)Gza(v);$a(c|0)}function Tg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+32|0;m=l+12|0;h=l+8|0;i=l+4|0;j=l;k=a+72|0;c=a+80|0;d=0;while(1){f[m>>2]=d;if(d>>>0>=(Rya(b)|0)>>>0)break;g=f[c>>2]|0;d=EN(k,m)|0;f[d>>2]=g;d=(f[m>>2]|0)+1|0}d=f[b+24>>2]|0;g=a+84|0;c=f[b+20>>2]|0;while(1){if((c|0)==(d|0))break;f[m>>2]=f[c>>2];e=sM(g,m)|0;f[e>>2]=(f[e>>2]|0)+1;c=c+4|0}gua(m);c=Rya(b)|0;a:while(1){f[h>>2]=c;if(c>>>0>=(Pqa(b)|0)>>>0){d=9;break}a=Rya(b)|0;y=0;c=ua(69,b|0,c|0)|0;e=y;y=0;if(e&1){d=16;break}f[i>>2]=c;y=0;c=ua(159,m|0,i|0)|0;e=y;y=0;if(e&1){d=17;break}f[c>>2]=(f[c>>2]|0)+1;do if((f[i>>2]|0)==1){f[j>>2]=1;y=0;c=ua(160,m|0,j|0)|0;e=y;y=0;if(e&1){d=18;break a}c=f[c>>2]|0;y=0;d=ua(92,k|0,h|0)|0;e=y;y=0;if(e&1){d=18;break a}f[d>>2]=a+-1+c}else{f[j>>2]=1;y=0;c=ua(160,g|0,j|0)|0;e=y;y=0;if(e&1){d=24;break a}a=(f[c>>2]|0)+a|0;if((f[i>>2]|0)==2){f[j>>2]=2;y=0;c=ua(160,m|0,j|0)|0;e=y;y=0;if(e&1){d=25;break a}c=f[c>>2]|0;y=0;d=ua(92,k|0,h|0)|0;e=y;y=0;if(e&1){d=25;break a}f[d>>2]=a+-1+c;break}f[j>>2]=2;y=0;c=ua(160,g|0,j|0)|0;e=y;y=0;if(e&1){d=31;break a}e=(f[c>>2]|0)+a|0;if((f[i>>2]|0)==3){f[j>>2]=3;y=0;c=ua(160,m|0,j|0)|0;a=y;y=0;if(a&1){d=32;break a}c=f[c>>2]|0;y=0;d=ua(92,k|0,h|0)|0;a=y;y=0;if(a&1){d=32;break a}f[d>>2]=e+-1+c;break}f[j>>2]=3;y=0;c=ua(160,g|0,j|0)|0;a=y;y=0;if(a&1){d=38;break a}a=f[c>>2]|0;if((f[i>>2]|0)!=4){d=40;break a}f[j>>2]=4;y=0;c=ua(160,m|0,j|0)|0;d=y;y=0;if(d&1){d=39;break a}c=f[c>>2]|0;y=0;d=ua(92,k|0,h|0)|0;n=y;y=0;if(n&1){d=39;break a}f[d>>2]=e+-1+a+c}while(0);c=(f[h>>2]|0)+1|0}switch(d|0){case 9:{nia(m);u=l;return}case 16:{c=Pa()|0;break}case 18:{c=Pa()|0;d=42;break}case 24:{c=Pa()|0;d=42;break}case 25:{c=Pa()|0;d=42;break}case 31:{c=Pa()|0;d=42;break}case 32:{c=Pa()|0;d=42;break}case 38:{c=Pa()|0;d=42;break}case 39:{c=Pa()|0;d=42;break}case 40:{y=0;za(6);y=0;d=17;break}}if((d|0)==17){c=Pa()|0;d=42}nia(m);$a(c|0)}
function rx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;c=i+8|0;e=i+4|0;g=i;j=f[a+44>>2]|0;h=SN(j,b+24|0)|0;if((h|0)!=(j+4|0)?(d=h+20|0,j=f[a+32>>2]|0,gKa(j)|0,!(bDa(f[d>>2]|0,f[j>>2]|0)|0)):0){j=f[a+36>>2]|0;gKa(j)|0;VBa(e,j);f[g>>2]=f[d>>2];j=f[b+4>>2]|0;f[c>>2]=f[g>>2];j=EY(e,c,b+8|0,j)|0;jva(f[a+16>>2]|0,j)|0}u=i;return}function sx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(kP(c,a)|0){e=a;d=5;break}a=a+4|0}a:do if((d|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=e;break a}}while(kP(c,a)|0);g=f[a>>2]|0;f[a>>2]=0;d=f[e>>2]|0;f[e>>2]=g;if(d|0)$Ja(d);e=e+4|0;d=5}while(0);return b|0}function tx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+32|0;c=e+12|0;d=e;f[d>>2]=f[b+8>>2];f[d+4>>2]=f[b+12>>2];f[d+8>>2]=f[b+16>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,3);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+12|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function ux(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56364)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);j=Jg(a)|0;f[c+8>>2]=j;_wa(c);u=i;return}function vx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>2;g=e+1|0;if(g>>>0>1073741823)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>1;fF(c,i>>2>>>0<536870911?(d>>>0<g>>>0?g:d):1073741823,e,a+8|0);g=c+8|0;e=f[g>>2]|0;d=f[b>>2]|0;f[b>>2]=0;f[e>>2]=d;f[g>>2]=e+4;$B(a,c);MO(c);u=h;return}}function wx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;c=f[c>>2]|0;while(1){a=f[e+16>>2]|0;if(Iva(c,a)|0){a=f[e>>2]|0;if(!a){a=6;break}else d=e}else{if(!(Iva(a,c)|0)){a=10;break}d=e+4|0;a=f[d>>2]|0;if(!a){a=9;break}}e=a}if((a|0)==6){f[b>>2]=e;d=e;break}else if((a|0)==9){f[b>>2]=e;break}else if((a|0)==10){f[b>>2]=e;break}}else f[b>>2]=d;while(0);return d|0}function xx(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=uHa(70717)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[e+11>>0]=d;c=e}else{h=d+16&-16;c=nV(h)|0;f[e>>2]=c;f[e+8>>2]=h|-2147483648;f[e+4>>2]=d}Pta(c,70717,d)|0;SBa(c+d|0,0);y=0;c=ua(163,e|0,a|0)|0;h=y;y=0;if(h&1){h=Pa()|0;zta(e);$a(h|0)}else{zta(e);u=g;return c|0}return 0}function yx(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;i=k+8|0;e=k;h=a+36|0;g=a+40|0;if(!(bDa(f[c+24>>2]|0,f[h>>2]|0)|0)){d=c+8|0;Bwa(i,d);iua(e,d);d=i+4|0;c=f[e>>2]|0;a=f[e+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[d>>2]|0,c,a)|0))break;e=ppa(i)|0;if(bDa(f[e>>2]|0,f[h>>2]|0)|0){j=6;break}bva(i)}if((j|0)==6)b[g>>0]=1}else b[g>>0]=1;u=k;return}function zx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;Axa(i,b);b=f[i>>2]|0;y=0;e=ua(46,b|0,77588)|0;k=y;y=0;if((((!(k&1)?(y=0,xa(f[(f[e>>2]|0)+48>>2]|0,e|0,68313,68339,c|0)|0,k=y,y=0,!(k&1)):0)?(y=0,g=ua(46,b|0,77596)|0,k=y,y=0,!(k&1)):0)?(y=0,h=la(f[(f[g>>2]|0)+16>>2]|0,g|0)|0,k=y,y=0,!(k&1)):0)?(f[d>>2]=h,y=0,ja(f[(f[g>>2]|0)+20>>2]|0,a|0,g|0),k=y,y=0,!(k&1)):0){pza(i);u=j;return}k=Pa()|0;pza(i);$a(k|0)}function Ax(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;j=k;Axa(j,c);c=f[j>>2]|0;y=0;g=ua(46,c|0,77556)|0;l=y;y=0;if((((!(l&1)?(y=0,xa(f[(f[g>>2]|0)+32>>2]|0,g|0,68313,68339,d|0)|0,l=y,y=0,!(l&1)):0)?(y=0,h=ua(46,c|0,77572)|0,l=y,y=0,!(l&1)):0)?(y=0,i=la(f[(f[h>>2]|0)+16>>2]|0,h|0)|0,l=y,y=0,!(l&1)):0)?(b[e>>0]=i,y=0,ja(f[(f[h>>2]|0)+20>>2]|0,a|0,h|0),l=y,y=0,!(l&1)):0){pza(j);u=k;return}l=Pa()|0;pza(j);$a(l|0)}function Bx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=a+160|0;g=a+16|0;if(!(f[e>>2]|0))d=0;else{Vea(f[g>>2]|0,72153)|0;d=f[e>>2]|0}UI(f[g>>2]|0,b-d|0);d=a+148|0;UI(f[g>>2]|0,(f[c>>2]|0)-(f[d>>2]|0)|0);UI(f[g>>2]|0,(f[c+4>>2]|0)-(f[a+152>>2]|0)|0);UI(f[g>>2]|0,(f[c+8>>2]|0)-(f[a+156>>2]|0)|0);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];f[e>>2]=b;return}function Cx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;g=j;h=f[a>>2]|0;i=(f[a+4>>2]|0)-h>>4;e=i+1|0;if(e>>>0>268435455)SZ();else{k=(f[a+8>>2]|0)-h|0;h=k>>3;TE(g,k>>4>>>0<134217727?(h>>>0<e>>>0?e:h):268435455,i,a+8|0);i=g+8|0;h=f[i>>2]|0;dla(h,f[b>>2]|0,f[c>>2]|0,f[d>>2]|0);f[i>>2]=h+16;QE(a,g);z0(g);u=j;return}}function Dx(a,c){a=a|0;c=c|0;var d=0,e=0;c3(f[a>>2]|0,40)|0;Zy(f[a>>2]|0,f[c+4>>2]|0,b[c+8>>0]|0);Vea(f[a>>2]|0,53353)|0;d=c+12|0;if(gKa(f[d>>2]|0)|0){e=Vea(f[a>>2]|0,39083)|0;vj(e,gKa(f[d>>2]|0)|0)|0}zea(a);kF(a,f[c+16>>2]|0);kF(a,f[c+20>>2]|0);kF(a,f[c+24>>2]|0);x_(a);return}function Ex(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=u;u=u+16|0;e=h;f[e>>2]=c;f[e+4>>2]=d;while(1){if((a|0)==(b|0))break;if(dE(e,f[a>>2]|0)|0){c=a;g=5;break}a=a+4|0}a:do if((g|0)==5)while(1){do{c=c+4|0;if((c|0)==(b|0)){b=a;break a}}while(dE(e,f[c>>2]|0)|0);f[a>>2]=f[c>>2];a=a+4|0;g=5}while(0);u=h;return b|0}function Fx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>2;g=e+1|0;if(g>>>0>1073741823)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>1;fF(c,i>>2>>>0<536870911?(d>>>0<g>>>0?g:d):1073741823,e,a+8|0);g=c+8|0;e=f[g>>2]|0;d=f[b>>2]|0;f[b>>2]=0;f[e>>2]=d;f[g>>2]=e+4;$B(a,c);lP(c);u=h;return}}function Gx(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0;j=u;u=u+112|0;d=j+4|0;e=j;f[e>>2]=d+100;sK(a+8|0,d,e,g,h,i);i=f[e>>2]|0;h=d;d=f[c>>2]|0;while(1){if((h|0)==(i|0))break;e=b[h>>0]|0;if(!d)d=0;else{a=d+24|0;g=f[a>>2]|0;if((g|0)==(f[d+28>>2]|0)){c=f[(f[d>>2]|0)+52>>2]|0;e=oHa(e)|0;e=Xb[c&255](d,e)|0}else{f[a>>2]=g+1;b[g>>0]=e;e=oHa(e)|0}c=bDa(e,-1)|0;d=c?0:d}h=h+1|0}u=j;return d|0}function Hx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;c=f[c>>2]|0;while(1){a=f[e+16>>2]|0;if(c>>>0<a>>>0){a=f[e>>2]|0;if(!a){a=6;break}else{d=e;e=a}}else{if(a>>>0>=c>>>0){a=10;break}d=e+4|0;a=f[d>>2]|0;if(!a){a=9;break}else e=a}}if((a|0)==6){f[b>>2]=e;d=e;break}else if((a|0)==9){f[b>>2]=e;break}else if((a|0)==10){f[b>>2]=e;break}}else f[b>>2]=d;while(0);return d|0}function Ix(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>2;g=e+1|0;if(g>>>0>1073741823)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>1;fF(c,i>>2>>>0<536870911?(d>>>0<g>>>0?g:d):1073741823,e,a+8|0);g=c+8|0;e=f[g>>2]|0;d=f[b>>2]|0;f[b>>2]=0;f[e>>2]=d;f[g>>2]=e+4;$B(a,c);nR(c);u=h;return}}function Jx(a){a=a|0;CY(a+216|0);mha(a+192|0);Oka(a+180|0);E4(a+160|0);a3(a+144|0);E4(a+132|0);Qia(a+120|0);Lca(a+100|0);E4(a+88|0);E4(a+72|0);E4(a+60|0);vpa(a+48|0);return}function Kx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/12|0;g=e+1|0;if(g>>>0>357913941)SZ();else{i=((f[a+8>>2]|0)-d|0)/12|0;d=i<<1;oE(c,i>>>0<178956970?(d>>>0<g>>>0?g:d):357913941,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=f[b>>2];f[e+4>>2]=f[b+4>>2];f[e+8>>2]=f[b+8>>2];f[g>>2]=e+12;lE(a,c);g$(c);u=h;return}}function Lx(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;k=a+56|0;qL(k,Pqa(c)|0);sla(a+16|0,c);a=a+76|0;while(1){a=f[a>>2]|0;if(!a)break;d=a;g=f[d+8>>2]|0;d=f[d+12>>2]|0;e=f[k>>2]|0;c=f[e+(d*20|0)+16>>2]|0;do if(c|0?(i=f[e+(d*20|0)>>2]|0,j=f[e+(d*20|0)+8>>2]|0,(j+i|0)==(c|0)):0){c=g+8|0;if(i|0?(f[e+(d*20|0)+4>>2]|0)!=((h[c>>0]|0)<<3|0):0)break;if(j|0?(f[e+(d*20|0)+12>>2]|0)!=((h[c>>0]|0)<<3|0):0)break;b[g+9>>0]=i<<1>>>0>=j>>>0&1}while(0)}return}function Mx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j+8|0;d=j;e=b+16|0;Bwa(h,e);iua(d,e);e=a+24|0;a=h+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[a>>2]|0,c,d)|0))break;k=ppa(h)|0;g=f[e>>2]|0;if(U3(g,f[k>>2]|0)|0){i=4;break}bva(h)}if((i|0)==4)_Y(g,b);u=j;return}function Nx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j+8|0;d=j;e=b+8|0;Bwa(h,e);iua(d,e);e=a+24|0;a=h+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[a>>2]|0,c,d)|0))break;k=ppa(h)|0;g=f[e>>2]|0;if(U3(g,f[k>>2]|0)|0){i=4;break}bva(h)}if((i|0)==4)_Y(g,b);u=j;return}function Ox(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=u;u=u+16|0;c=d;b=(Asa(f[b>>2]|0)|0)+16|0;if(!(f[b>>2]|0))xo(a);else{e=a+68|0;h=f[e>>2]|0;b=h+-12|0;f[c>>2]=f[b>>2];g=h+-8|0;f[c+4>>2]=f[g>>2];h=h+-4|0;f[c+8>>2]=f[h>>2];f[h>>2]=0;f[g>>2]=0;f[b>>2]=0;b=a+48|0;qQ((f[e>>2]|0)+-12|0,b);qQ(b,c);mU(c)}u=d;return}function Px(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>2>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>2;d=c+b|0;if(d>>>0>1073741823)SZ();else{e=h-e|0;h=e>>1;fF(g,e>>2>>>0<536870911?(h>>>0<d>>>0?d:h):1073741823,c,a+8|0);m2(g,b);jF(a,g);M1(g);break}}else d3(a,b);while(0);u=i;return}function Qx(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=(f[a>>2]|0)+16|0;k=a+4|0;e=0;g=0;a:while(1){i=c+e|0;while(1){h=On(f[j>>2]|0)|0;switch(h|0){case 34:{e=0;g=1;continue a}case -1:{e=0;break a}default:{}}if(!g){g=0;continue}if((b[i>>0]|0)==(h|0))break;else g=0}e=e+1|0;if((e|0)!=(d|0)){g=1;continue}if(N1(f[f[k>>2]>>2]|0,34)|0){l=8;break}else{e=d;g=1}}if((l|0)==8){yr(f[(f[f[a+8>>2]>>2]|0)+16>>2]|0,58);e=1}return e|0}function Rx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=OO(a+60|0,b)|0;g=a+44|0;do if((e|0)==(a+64|0))if((f[b+4>>2]|0)!=5)if(s6(b)|0)Na(47573,47491,175,47604);else{d=iea(f[f[g>>2]>>2]|0,c,b)|0;break}else d=b;else{g=f[g>>2]|0;d=f[e+20>>2]|0;d=gia(g,d,YV(gKa(f[a+32>>2]|0)|0,d)|0)|0;d=p5(g,b,iea(f[g>>2]|0,c,d)|0)|0}while(0);return d|0}function Sx(a){a=a|0;var b=0,c=0,d=0;f[a+148>>2]=0;f[a+152>>2]=1;f[a+156>>2]=0;f[a+160>>2]=0;c=a+16|0;Vea(f[c>>2]|0,59675)|0;b=0;while(1){d=f[a>>2]|0;if(b>>>0>=(((f[d+136>>2]|0)-(f[d+132>>2]|0)|0)/12|0)>>>0)break;if(b|0)Vea(f[c>>2]|0,72153)|0;d=Vea(f[c>>2]|0,59726)|0;Vea(BY(d,(f[(f[a>>2]|0)+132>>2]|0)+(b*12|0)|0)|0,59726)|0;b=b+1|0}Vea(f[c>>2]|0,59700)|0;return}function Tx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>4;g=e+1|0;if(g>>>0>268435455)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>3;TE(c,i>>4>>>0<134217727?(d>>>0<g>>>0?g:d):268435455,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=f[b>>2];f[e+4>>2]=f[b+4>>2];f[e+8>>2]=f[b+8>>2];f[e+12>>2]=f[b+12>>2];f[g>>2]=e+16;QE(a,c);z0(c);u=h;return}}function Ux(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>2>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>2;d=c+b|0;if(d>>>0>1073741823)SZ();else{e=h-e|0;h=e>>1;fF(g,e>>2>>>0<536870911?(h>>>0<d>>>0?d:h):1073741823,c,a+8|0);V1(g,b);jF(a,g);M1(g);break}}else W2(a,b);while(0);u=i;return}function Vx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/24|0;g=e+1|0;if(g>>>0>178956970)SZ();else{i=((f[a+8>>2]|0)-d|0)/24|0;d=i<<1;CE(c,i>>>0<89478485?(d>>>0<g>>>0?g:d):178956970,e,a+8|0);g=c+8|0;e=f[g>>2]|0;sI(e,b);f[g>>2]=e+24;yD(a,c);lX(c);u=h;return}}function Wx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;while(1){a=f[e+16>>2]|0;if((a|0)>(c|0)){a=f[e>>2]|0;if(!a){a=6;break}else{d=e;e=a}}else{if((a|0)>=(c|0)){a=10;break}d=e+4|0;a=f[d>>2]|0;if(!a){a=9;break}else e=a}}if((a|0)==6){f[b>>2]=e;d=e;break}else if((a|0)==9){f[b>>2]=e;break}else if((a|0)==10){f[b>>2]=e;break}}else f[b>>2]=d;while(0);return d|0}function Xx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;d=f[a+40>>2]|0;e=a+44|0;while(1){c=f[e>>2]|0;if((c|0)==(d|0))break;g=c+-4|0;f[e>>2]=g;c=f[g>>2]|0;f[g>>2]=0;if(!c)continue;Kda(c);$Ja(c)}Yv(a);f[a+36>>2]=f[a+64>>2];bla(a,b);if(f[a+76>>2]|0)Na(50347,50368,246,50392);if((f[a+84>>2]|0)!=(f[a+80>>2]|0))Na(50407,50368,247,50392);if((f[a+96>>2]|0)==(f[a+92>>2]|0))return;else Na(50427,50368,248,50392)}function Yx(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;e=c&255;a:do if(!e)a=a+(iJ(a)|0)|0;else{if(a&3){d=c&255;do{g=b[a>>0]|0;if(g<<24>>24==0?1:g<<24>>24==d<<24>>24)break a;a=a+1|0}while((a&3|0)!=0)}e=Y(e,16843009)|0;d=f[a>>2]|0;b:do if(!((d&-2139062144^-2139062144)&d+-16843009))do{g=d^e;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;a=a+4|0;d=f[a>>2]|0}while(!((d&-2139062144^-2139062144)&d+-16843009|0));while(0);d=c&255;while(1){g=b[a>>0]|0;if(g<<24>>24==0?1:g<<24>>24==d<<24>>24)break;else a=a+1|0}}while(0);return a|0}function Zx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[a+(c<<2)>>2]=0;c=c+1|0}y=0;c=la(172,f[b+4>>2]|0)|0;d=y;y=0;a:do if(!(d&1)?(y=0,ja(82,a|0,c|0),d=y,y=0,!(d&1)):0){d=f[b+12>>2]|0;c=f[b+8>>2]|0;while(1){if((c|0)==(d|0))break;y=0;b=la(172,f[c>>2]|0)|0;e=y;y=0;if(e&1)break a;y=0;ja(82,a|0,b|0);e=y;y=0;if(e&1)break a;c=c+4|0}return}while(0);e=Pa()|0;zta(a);$a(e|0)}function _x(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,58470)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);Kr(a,1836278016);Kr(a,1);u=h;return}function $x(a,c){a=a|0;c=c|0;var d=0,e=0;a:do if((a|0)!=(c|0)){e=b[a>>0]|0;d=a+1|0;if(e<<24>>24!=95){if(((e<<24>>24)+-48|0)>>>0>=10){d=a;break}while(1){if((d|0)==(c|0)){d=c;break a}if(((b[d>>0]|0)+-48|0)>>>0>=10)break a;d=d+1|0}}if((d|0)!=(c|0)){e=b[d>>0]|0;d=a+2|0;if(((e<<24>>24)+-48|0)>>>0>=10)if(e<<24>>24==95){do{e=d;d=d+1|0;if((e|0)==(c|0)){d=a;break a}e=b[e>>0]|0}while(((e<<24>>24)+-48|0)>>>0<10);return (e<<24>>24==95?d:a)|0}else d=a}else d=a}else d=a;while(0);return d|0}function ay(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=a+11|0;e=b[k>>0]|0;i=e<<24>>24<0;if(i){g=(f[a+8>>2]&2147483647)+-1|0;h=f[a+4>>2]|0}else{g=10;h=e&255}j=h+d|0;if((g-h|0)>>>0>=d>>>0){if(d|0){if(i)e=f[a>>2]|0;else e=a;if(h){Ita(e+d|0,e,h)|0;c=e>>>0<=c>>>0&(e+h|0)>>>0>c>>>0?c+d|0:c}Ita(e,c,d)|0;if((b[k>>0]|0)<0)f[a+4>>2]=j;else b[k>>0]=j;SBa(e+j|0,0)}}else Bw(a,g,j-g|0,h,0,0,d,c);return a|0}function by(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+32|0;c=e+8|0;d=e;f[d>>2]=f[b+20>>2];f[d+4>>2]=f[b+24>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,2);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+8|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function cy(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;d=a+36|0;e=f[d>>2]|0;g=kg(a)|0;a:do if(EDa(g)|0)Ae(a,e+c-(f[d>>2]|0)|0);else{i=f[a>>2]|0;h=i+120|0;OJ(h,(((f[i+124>>2]|0)-(f[h>>2]|0)|0)/24|0)+1|0);h=f[(f[a>>2]|0)+124>>2]|0;Tga(h+-24|0,g)|0;d=e-(f[d>>2]|0)+c|0;e=h+-12|0;WO(e,d);c=0;while(1){if((c|0)==(d|0))break a;i=Tk(a)|0;b[(f[e>>2]|0)+c>>0]=i;c=c+1|0}}while(0);return}function dy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=a+24|0;c=f[h>>2]|0;ZM(c,Pqa(b)|0);c=0;while(1){if(c>>>0>=(Pqa(b)|0)>>>0)break;g=f[f[h>>2]>>2]|0;if(qva(b,c)|0){d=Lxa(YV(b,c)|0)|0;e=-1}else{d=0;e=0}f[g+(c<<3)+4>>2]=e;f[g+(c<<3)>>2]=d;c=c+1|0}Kla(a,b);c=0;while(1){if(c>>>0>=(Pqa(b)|0)>>>0)break;d=(f[f[h>>2]>>2]|0)+(c<<3)+4|0;if((f[d>>2]|0)==-1)f[d>>2]=0;c=c+1|0}return}function ey(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+32|0;c=e+8|0;d=e;f[d>>2]=f[b+12>>2];f[d+4>>2]=f[b+16>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,2);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+8|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function fy(a,b){a=a|0;b=b|0;var c=0,d=0;d=dua(f[a+4>>2]|0)|0;c=Pe(a,lj(b,1)|0)|0;f[d+8>>2]=c;if((lxa(b)|0)!=2){c=rr(lj(b,0)|0)|0;if(bDa(c,f[18747]|0)|0){if((lxa(b)|0)>>>0>3){c=sra(a,lj(b,2)|0)|0;f[d+12>>2]=c;c=3}else c=2;b=sra(a,lj(b,c)|0)|0;f[d+16>>2]=b}else{b=sra(a,lj(b,2)|0)|0;f[d+12>>2]=b}$5(d)}return d|0}function gy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>2>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>2;d=c+b|0;if(d>>>0>1073741823)SZ();else{e=h-e|0;h=e>>1;fF(g,e>>2>>>0<536870911?(h>>>0<d>>>0?d:h):1073741823,c,a+8|0);P2(g,b);jF(a,g);M1(g);break}}else C3(a,b);while(0);u=i;return}function hy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+32|0;c=e+8|0;d=e;f[d>>2]=f[b+24>>2];f[d+4>>2]=f[b+28>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,2);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+8|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function iy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;d=b+64|0;do if((f[d>>2]|0)!=0?(Ob[f[(f[b>>2]|0)+24>>2]&255](b)|0)==0:0)if(!(KBa(f[d>>2]|0,f[c+8>>2]|0,0)|0)){g=c;d=f[g+4>>2]|0;b=b+72|0;f[b>>2]=f[g>>2];f[b+4>>2]=d;f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];f[a+12>>2]=f[c+12>>2];break}else{g=a;f[g>>2]=0;f[g+4>>2]=0;g=a+8|0;f[g>>2]=-1;f[g+4>>2]=-1;break}else e=3;while(0);if((e|0)==3){g=a;f[g>>2]=0;f[g+4>>2]=0;g=a+8|0;f[g>>2]=-1;f[g+4>>2]=-1}return}function jy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;d=e;b=f[b+24>>2]|0;f[d>>2]=b;c=a+32|0;if(!(WS(c,d)|0)){jz(e+8|0,c,d,d);d=Vea(76684,37323)|0;Vea(K2(Vea(K2(d,f[f[a+28>>2]>>2]|0)|0,37520)|0,b)|0,37527)|0}u=e;return}function ky(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0;j=a+8|0;j=Ob[f[(f[j>>2]|0)+8>>2]&255](j)|0;a=b[j+8+3>>0]|0;if(a<<24>>24<0)i=f[j+4>>2]|0;else i=a&255;a=b[j+20+3>>0]|0;if(a<<24>>24<0)a=f[j+16>>2]|0;else a=a&255;do if((i|0)!=(0-a|0)){a=(kf(d,e,j,j+24|0,h,g,0)|0)-j|0;i=f[c>>2]|0;if((i|0)==12&(a|0)==0){f[c>>2]=0;break}if((i|0)<12&(a|0)==12)f[c>>2]=i+12}else f[g>>2]=f[g>>2]|4;while(0);return}function ly(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;d=g;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;e=uHa(29566)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[d+11>>0]=e;c=d}else{h=e+16&-16;c=nV(h)|0;f[d>>2]=c;f[d+8>>2]=h|-2147483648;f[d+4>>2]=e}Pta(c,29566,e)|0;SBa(c+e|0,0);y=0;ja(1516,a|0,d|0);h=y;y=0;if(h&1){h=Pa()|0;zta(d);$a(h|0)}else{zta(d);u=g;return}}function my(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;j=a+160|0;g=b+12|0;h=d+-1|0;b=c;while(1){if(b>>>0>=d>>>0)break;e=f[(f[j>>2]|0)+(b<<2)>>2]|0;AW(g,e);if(b>>>0<h>>>0?rCa(f[e+4>>2]|0)|0:0){VBa(i,f[a>>2]|0);l=efa(g)|0;l=Una(f[i>>2]|0,f[l>>2]|0)|0;e=efa(g)|0;f[e>>2]=l}b=b+1|0}JM(j,c);u=k;return}function ny(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0;j=a+8|0;j=Ob[f[(f[j>>2]|0)+8>>2]&255](j)|0;a=b[j+11>>0]|0;if(a<<24>>24<0)i=f[j+4>>2]|0;else i=a&255;a=b[j+12+11>>0]|0;if(a<<24>>24<0)a=f[j+16>>2]|0;else a=a&255;do if((i|0)!=(0-a|0)){a=(ef(d,e,j,j+24|0,h,g,0)|0)-j|0;i=f[c>>2]|0;if((i|0)==12&(a|0)==0){f[c>>2]=0;break}if((i|0)<12&(a|0)==12)f[c>>2]=i+12}else f[g>>2]=f[g>>2]|4;while(0);return}function oy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+48|0;c=e+4|0;d=e;do if(WS(b+52|0,75780)|0){f[d>>2]=f[18945];f[c>>2]=f[d>>2];d=XX(b,c)|0;f[a+80>>2]=d;h6(c,d,a+56|0,a+68|0);y=0;ja(901,c|0,b+36|0);d=y;y=0;if(!(d&1)?(y=0,ja(902,a+16|0,b|0),d=y,y=0,!(d&1)):0){Rua(c);break}e=Pa()|0;Rua(c);$a(e|0)}while(0);u=e;return}function py(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+16|0;k=m;d=a;l=c+4|0;j=c+8|0;e=f[d>>2]|0;d=f[d+4>>2]|0;while(1){g=e&255;i=g&127;b[k>>0]=i;h=Lka(e|0,d|0,7)|0;d=J;if(!(S3(a,h,d,i)|0))break;e=g|-128;b[k>>0]=e;g=f[l>>2]|0;if((g|0)==(f[j>>2]|0))hD(c,k);else{b[g>>0]=e;f[l>>2]=(f[l>>2]|0)+1}e=h}d=f[l>>2]|0;if((d|0)==(f[j>>2]|0))hD(c,k);else{b[d>>0]=i;f[l>>2]=(f[l>>2]|0)+1}u=m;return}function qy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=u;u=u+64|0;e=f+24|0;d=f;MM(d,c);y=0;ya(98,e|0,b|0,d|0);c=y;y=0;do if(!(c&1)){D8(d);y=0;a=ua(119,e|0,a|0)|0;d=y;y=0;if(d&1){a=Pa()|0;hra(e);break}else{hra(e);u=f;return a|0}}else{a=Pa()|0;D8(d)}while(0);$a(a|0);return 0}function ry(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>3;g=e+1|0;if(g>>>0>536870911)SZ();else{d=(f[a+8>>2]|0)-d|0;i=d>>2;PE(c,d>>3>>>0<268435455?(i>>>0<g>>>0?g:i):536870911,e,a+8|0);g=c+8|0;e=f[g>>2]|0;i=b;b=f[i+4>>2]|0;d=e;f[d>>2]=f[i>>2];f[d+4>>2]=b;f[g>>2]=e+8;NE(a,c);x0(c);u=h;return}}function sy(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,56378)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);Zq(f[a+4>>2]|0,0)|0;u=h;return}function ty(a){a=a|0;if(f[18711]|0){Vea(76684,19686)|0;Vea(76684,19724)|0;Vea(76684,19750)|0;Vea(76684,19774)|0;Vea(76684,19796)|0;TX(74796);TX(74808);TX(74820);TX(74832)}if(a|0){Js(a);$Ja(a)}return}function uy(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;h=nV(12)|0;e=f[c>>2]|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=uHa(e)|0;do if(g>>>0>4294967279){y=0;za(3);y=0}else{if(g>>>0<11){b[h+11>>0]=g;c=h}else{d=g+16&-16;y=0;c=la(150,d|0)|0;i=y;y=0;if(i&1)break;f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=g}Pta(c,e,g)|0;SBa(c+g|0,0);f[a>>2]=h;return}while(0);i=Pa()|0;$Ja(h);$a(i|0)}function vy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;d=a+8|0;Gs(a,a+4|0,d,c)|0;h=c+4|0;g=a+12|0;while(1){if((g|0)==(b|0))break;if(er(f[c>>2]|0,f[h>>2]|0,f[g>>2]|0,f[d>>2]|0)|0){i=f[g>>2]|0;e=g;while(1){f[e>>2]=f[d>>2];if((d|0)==(a|0)){d=a;break}e=d+-4|0;if(er(f[c>>2]|0,f[h>>2]|0,i,f[e>>2]|0)|0){j=d;d=e;e=j}else break}f[d>>2]=i}d=g;g=g+4|0}return}function wy(a,c){a=a|0;c=c|0;var d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=tHa(17596)|0;if(d>>>0>1073741807)JZ();do if(d>>>0>=2){c=d+4&-4;if(c>>>0<=1073741823){e=nV(c<<2)|0;f[a>>2]=e;f[a+8>>2]=c|-2147483648;f[a+4>>2]=d;a=e;break}a=zb(8)|0;y=0;ja(76,a|0,70649);e=y;y=0;if(e&1){e=Pa()|0;Oa(a|0);$a(e|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else b[a+8+3>>0]=d;while(0);awa(a,17596,d);FCa(a+(d<<2)|0,0);return}function xy(a,c){a=a|0;c=c|0;var d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=tHa(17620)|0;if(d>>>0>1073741807)JZ();do if(d>>>0>=2){c=d+4&-4;if(c>>>0<=1073741823){e=nV(c<<2)|0;f[a>>2]=e;f[a+8>>2]=c|-2147483648;f[a+4>>2]=d;a=e;break}a=zb(8)|0;y=0;ja(76,a|0,70649);e=y;y=0;if(e&1){e=Pa()|0;Oa(a|0);$a(e|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else b[a+8+3>>0]=d;while(0);awa(a,17620,d);FCa(a+(d<<2)|0,0);return}function yy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;e=f[a>>2]|0;g=a+4|0;h=b+4|0;c=f[g>>2]|0;while(1){if((c|0)==(e|0))break;d=(f[h>>2]|0)+-12|0;c=c+-12|0;f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];d=0;while(1){if((d|0)==3)break;f[c+(d<<2)>>2]=0;d=d+1|0}f[h>>2]=(f[h>>2]|0)+-12}e=f[a>>2]|0;f[a>>2]=f[h>>2];f[h>>2]=e;e=b+8|0;d=f[g>>2]|0;f[g>>2]=f[e>>2];f[e>>2]=d;a=a+8|0;g=b+12|0;e=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=e;f[b>>2]=f[h>>2];return}function zy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;d=i;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e>>3;h=g+1|0;if(h>>>0>536870911)SZ();else{j=(f[a+8>>2]|0)-e|0;e=j>>2;PE(d,j>>3>>>0<268435455?(e>>>0<h>>>0?h:e):536870911,g,a+8|0);h=d+8|0;g=f[h>>2]|0;pxa(g,f[b>>2]|0,f[c>>2]|0);f[h>>2]=g+8;NE(a,d);x0(d);u=i;return}}function Ay(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;while(1){a=f[e+16>>2]|0;if(a>>>0>c>>>0){a=f[e>>2]|0;if(!a){a=6;break}else{d=e;e=a}}else{if(a>>>0>=c>>>0){a=10;break}d=e+4|0;a=f[d>>2]|0;if(!a){a=9;break}else e=a}}if((a|0)==6){f[b>>2]=e;d=e;break}else if((a|0)==9){f[b>>2]=e;break}else if((a|0)==10){f[b>>2]=e;break}}else f[b>>2]=d;while(0);return d|0}function By(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+80|0;d=f[e>>2]|0;Yv(a+16|0);Yz(d,f[e>>2]|0);d=(Asa(f[b>>2]|0)|0)+16|0;d=(f[d>>2]|0)==0;c=a+100|0;Yz(f[(f[c>>2]|0)+-4>>2]|0,f[e>>2]|0);b=f[c>>2]|0;if(!d){a=0;while(1){if((a|0)==-1)break;e=a+-1|0;f[c>>2]=b+(e<<2);a=e}b=b+-4|0}a=0;while(1){if((a|0)==-1)break;e=a+-1|0;f[c>>2]=b+(e<<2);a=e}return}function Cy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;g=h+4|0;e=h;f[g>>2]=b;f[e>>2]=c;b=a+48|0;d=EN(b,g)|0;d=f[d>>2]|0;N2(a,f[g>>2]|0);if((OO(b,c)|0)!=(a+52|0)){b=EN(b,e)|0;f[b>>2]=d;b=f[e>>2]|0;if((f[(f[g>>2]|0)+4>>2]|0)!=(f[b+4>>2]|0))wm(a,b)}else wM(a,c,d,f[g>>2]|0);u=h;return}function Dy(a,b,c,d,e,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0;i=u;u=u+416|0;c=i+8|0;d=i;f[d>>2]=c+400;yE(a+8|0,c,d,e,g,h);h=f[d>>2]|0;g=c;c=f[b>>2]|0;while(1){if((g|0)==(h|0))break;d=f[g>>2]|0;if(!c)c=0;else{a=c+24|0;e=f[a>>2]|0;if((e|0)==(f[c+28>>2]|0)){b=f[(f[c>>2]|0)+52>>2]|0;d=gKa(d)|0;d=Xb[b&255](c,d)|0}else{f[a>>2]=e+4;f[e>>2]=d;d=gKa(d)|0}b=TDa(d)|0;c=b?0:c}g=g+4|0}u=i;return c|0}function Ey(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;d=i;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e>>3;h=g+1|0;if(h>>>0>536870911)SZ();else{j=(f[a+8>>2]|0)-e|0;e=j>>2;PE(d,j>>3>>>0<268435455?(e>>>0<h>>>0?h:e):536870911,g,a+8|0);h=d+8|0;g=f[h>>2]|0;f[g>>2]=f[b>>2];f[g+4>>2]=f[c>>2];f[h>>2]=g+8;NE(a,d);x0(d);u=i;return}}function Fy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g+12|0;d=g;e=nV(24)|0;Spa(e);b=f[b>>2]|0;f[e>>2]=b;FCa(h,f[18789]|0);f[e+4>>2]=f[h>>2];f[e+8>>2]=b;zD(d,c);y=0;b=ua(106,d|0,a|0)|0;c=y;y=0;if(c&1){h=Pa()|0;zta(d);$a(h|0)}else{f[e+16>>2]=f[b>>2];zta(d);f[e+12>>2]=0;cu(a,e);u=g;return}}function Gy(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,58124)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);i=Nm(a)|0;f[a+40>>2]=i;u=h;return}function Hy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h+8|0;e=h;c=f[b>>2]|0;g=OO(a,c)|0;if((g|0)==(a+4|0)){g=a+12|0;f[d>>2]=c;f[d+4>>2]=0;xS(g,d);c=f[g>>2]|0;g=f[b>>2]|0;f[e>>2]=g;f[e+4>>2]=c;Pv(d,a,g,e)}else c=f[g+20>>2]|0;u=h;return c+12|0}function Iy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+32|0;h=j;a:do if(!(eBa(c)|0)){i=(c|0)==0;e=0;g=0;do{d=(1<<g&a|0)!=0;if(i|d)d=Pi(g,d?b:83563)|0;else d=f[c+(g<<2)>>2]|0;e=((d|0)!=0&1)+e|0;f[h+(g<<2)>>2]=d;g=g+1|0}while((g|0)!=6);switch(e|0){case 0:{c=76452;break a}case 1:{if((f[h>>2]|0)==10012){c=10060;break a}break}default:{}}}else{d=0;do{if(1<<d&a|0){i=Pi(d,b)|0;f[c+(d<<2)>>2]=i}d=d+1|0}while((d|0)!=6)}while(0);u=j;return c|0}function Jy(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;e=b[a+11>>0]|0;d=e<<24>>24<0;g=d?f[a>>2]|0:a;e=d?f[a+4>>2]|0:e&255;d=75860;a=c;a:while(1){while(1){if(!a)break a;c=a+16|0;h=b[c+11>>0]|0;i=h<<24>>24<0;h=i?f[a+20>>2]|0:h&255;c=ara(i?f[c>>2]|0:c,g,e>>>0<h>>>0?e:h)|0;if((((c|0)==0?(h>>>0<e>>>0?-2147483648:0):c)|0)>=0)break;a=f[a+4>>2]|0}d=a;a=f[a>>2]|0}return d|0}function Ky(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=a+4|0;d=(f[j>>2]|0)!=399;h=f[a>>2]|0;e=(f[c>>2]|0)-h|0;e=e>>>0<2147483647?e<<1:-1;e=(e|0)==0?4:e;g=(f[b>>2]|0)-h>>2;h=LM(d?h:0,e)|0;if(!h)Jwa();do if(!d){d=f[a>>2]|0;f[a>>2]=h;if(d){y=0;ia(f[j>>2]|0,d|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}else{i=f[a>>2]|0;break}}else i=h}else{f[a>>2]=h;i=h}while(0);f[j>>2]=401;f[b>>2]=i+(g<<2);f[c>>2]=(f[a>>2]|0)+(e>>>2<<2);return}function Ly(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;if((((f[c+16>>2]|0)==0?(h=wAa(f[c+12>>2]|0)|0,h|0):0)?(d=h+16|0,(f[d>>2]|0)==0):0)?(e=c+8|0,j=f[e>>2]|0,c=f[h+12>>2]|0,bA(j,c,uya(f[a+40>>2]|0)|0)|0):0){f[d>>2]=f[e>>2];$5(h);j=f[a+36>>2]|0;gKa(j)|0;VBa(g,j);j=uda(g,h)|0;jva(f[a+16>>2]|0,j)|0;b[a+44>>0]=1}u=i;return}function My(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Wx(c,h,d)|0;d=f[g>>2]|0;if(!d){N0(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Ny(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);uaa(b+16|0);$Ja(b);return}function Oy(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,56399)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);Zq(f[a+4>>2]|0,1)|0;u=h;return}function Py(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;e=i+8|0;c=i;if((f[b+4>>2]|0)!=5){g=b+12|0;Bwa(e,g);iua(c,g);g=e+4|0;d=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[g>>2]|0,d,c)|0))break;j=ppa(e)|0;if((f[(f[j>>2]|0)+4>>2]|0)==5){h=5;break}bva(e)}if((h|0)==5)faa(a,b,5)}u=i;return}function Qy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=i+4|0;f[e>>2]=b;c=Lra(f[b>>2]|0)|0;h=f[a+80>>2]|0;if(h){f[g>>2]=0;a=c+8|0;c=h+28|0;d=f[c>>2]|0;if(d>>>0<(f[h+32>>2]|0)>>>0){dla(d,0,f[a>>2]|0,b);f[c>>2]=(f[c>>2]|0)+16}else Cx(h+24|0,g,a,e)}else{h=f[a+36>>2]|0;gKa(h)|0;VBa(g,h);h=jq(g,c)|0;f[b>>2]=h}u=i;return}function Ry(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;eea(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;tZ(d,f[a>>2]|0);a=a+4|0}p2(d,f[b+76>>2]|0,f[b+80>>2]|0);p2(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function Sy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;NBa(a);c=f[c+8>>2]|0;if(!((c|0)!=0?(NM(d,b,c),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],FBa(a)|0):0))f[a+16>>2]=f[18770];u=e;return}function Ty(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>2>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>2;d=c+b|0;if(d>>>0>1073741823)SZ();else{e=h-e|0;h=e>>1;fF(g,e>>2>>>0<536870911?(h>>>0<d>>>0?d:h):1073741823,c,a+8|0);Tia(g,b);jF(a,g);M1(g);break}}else uka(a,b);while(0);u=i;return}function Uy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>4;g=e+1|0;if(g>>>0>268435455)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>3;TE(c,i>>4>>>0<134217727?(d>>>0<g>>>0?g:d):268435455,e,a+8|0);g=c+8|0;e=f[g>>2]|0;Ioa(e,b);f[g>>2]=e+16;UD(a,c);PW(c);u=h;return}}function Vy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>4;g=e+1|0;if(g>>>0>268435455)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>3;TE(c,i>>4>>>0<134217727?(d>>>0<g>>>0?g:d):268435455,e,a+8|0);g=c+8|0;e=f[g>>2]|0;Yqa(e,f[b>>2]|0);f[g>>2]=e+16;wE(a,c);oZ(c);u=h;return}}function Wy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e+4|0;d=e;f[d>>2]=f[b+12>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,1);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+4|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function Xy(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;k=(b[c+20>>0]|0)==0;i=a+32|0;j=h[c+8>>0]|0;d=(b[c+9>>0]|0)!=0;e=gKa(f[c+12>>2]|0)|0;g=c+24|0;if(k){k=gKa(f[c+16>>2]|0)|0;a=DR(a,f[g>>2]|0)|0;a=RR(i,j,d,e,k,a,f[c+4>>2]|0)|0}else{a=DR(a,f[g>>2]|0)|0;a=W1(i,j,d,e,a,f[c+4>>2]|0)|0}return a|0}function Yy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(NJ(c,a)|0){d=a;e=a;g=5;break}a=a+12|0}a:do if((g|0)==5)while(1){a=d;do{a=a+12|0;if((a|0)==(b|0)){b=e;break a}}while(NJ(c,a)|0);f[e>>2]=f[a>>2];f[e+4>>2]=f[a+4>>2];f[e+8>>2]=f[a+8>>2];d=a;e=e+12|0;g=5}while(0);return b|0}function Zy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=gKa(a)|0;Vea(Vea(d,F$(b)|0)|0,39092)|0;if((c&255|0)!=(y9(b)|0)){switch(c<<24>>24){case 1:{c3(a,56)|0;break}case 2:{Vea(a,39104)|0;break}case 4:{Vea(a,39107)|0;break}default:Ka()}Vea(a,39110)|0}c3(a,46)|0;return}function _y(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;g=h+8|0;d=h;i=(Cn(a,f[b+28>>2]|0)|0)+6|0;e=b+8|0;Bwa(g,e);iua(d,e);e=g+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;b=i;while(1){if(!(Cpa(f[g>>2]|0,f[e>>2]|0,c,d)|0))break;i=ppa(g)|0;i=(Cn(a,f[i>>2]|0)|0)+b|0;bva(g);b=i}u=h;return b|0}function $y(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=a+4|0;d=(f[j>>2]|0)!=399;h=f[a>>2]|0;e=(f[c>>2]|0)-h|0;e=e>>>0<2147483647?e<<1:-1;e=(e|0)==0?1:e;g=(f[b>>2]|0)-h|0;h=LM(d?h:0,e)|0;if(!h)Jwa();do if(!d){d=f[a>>2]|0;f[a>>2]=h;if(d){y=0;ia(f[j>>2]|0,d|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}else{i=f[a>>2]|0;break}}else i=h}else{f[a>>2]=h;i=h}while(0);f[j>>2]=401;f[b>>2]=i+g;f[c>>2]=(f[a>>2]|0)+e;return}function az(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e+4|0;d=e;f[d>>2]=f[b+24>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,1);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+4|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function bz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e+4|0;d=e;f[d>>2]=f[b+8>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,1);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+4|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function cz(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Hx(c,h,d)|0;d=f[g>>2]|0;if(!d){N0(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function dz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;g=e+4|0;f[d>>2]=c;VBa(g,a);a=dea(f[g>>2]|0,b,c)|0;if(f[18711]|0){g=qN(a)|0;b=Vea(wj(Vea(vj(Vea(76684,20507)|0,g)|0,20982)|0,b)|0,20179)|0;g=EN(74808,d)|0;Vea(vj(b,f[g>>2]|0)|0,20144)|0}u=e;return a|0}function ez(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;e=i;g=f[a+8>>2]|0;c=f[a+4>>2]|0;do if((g-c|0)>>>0<b>>>0){h=f[a>>2]|0;c=c-h|0;d=c+b|0;if((d|0)<0)SZ();else{g=g-h|0;h=g<<1;M$(e,g>>>0<1073741823?(h>>>0<d>>>0?d:h):2147483647,c,a+8|0);j4(e,b);BF(a,e);m4(e);break}}else c5(a,b);while(0);u=i;return}function fz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=u;u=u+32|0;e=h+16|0;g=h;b=tm(a,b,e,h+12|0,c)|0;if(!(f[b>>2]|0)){N0(g,a,d);lN(a,f[e>>2]|0,b,f[g>>2]|0)}u=h;return}function gz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;e=h;f[e>>2]=b;if(((f[a+16>>2]|0?(g=f[a+8>>2]|0,g|0):0)?(c=Vs(g+64|0,e)|0,c|0):0)?(d=c+12|0,tqa(d,f[a+148>>2]|0,f[a+152>>2]|0,f[a+156>>2]|0)|0):0){g=f[a+4>>2]|0;Bx(a,(f[g+4>>2]|0)-(f[g>>2]|0)|0,d)}il(a,b);u=h;return}function hz(a,c){a=a|0;c=c|0;do if(a){if(c>>>0<128){b[a>>0]=c;a=1;break}if(!(f[f[2650]>>2]|0))if((c&-128|0)==57216){b[a>>0]=c;a=1;break}else{f[2619]=84;a=-1;break}if(c>>>0<2048){b[a>>0]=c>>>6|192;b[a+1>>0]=c&63|128;a=2;break}if(c>>>0<55296|(c&-8192|0)==57344){b[a>>0]=c>>>12|224;b[a+1>>0]=c>>>6&63|128;b[a+2>>0]=c&63|128;a=3;break}if((c+-65536|0)>>>0<1048576){b[a>>0]=c>>>18|240;b[a+1>>0]=c>>>12&63|128;b[a+2>>0]=c>>>6&63|128;b[a+3>>0]=c&63|128;a=4;break}else{f[2619]=84;a=-1;break}}else a=1;while(0);return a|0}function iz(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;e=a+44|0;d=f[e>>2]|0;g=f[a+24>>2]|0;if(d>>>0<g>>>0){f[e>>2]=g;d=g}h=a+12|0;e=f[h>>2]|0;do if((f[a+8>>2]|0)>>>0<e>>>0){if(bDa(c,-1)|0){f[h>>2]=e+-1;f[a+16>>2]=d;c=Awa(c)|0;break}if(!(f[a+48>>2]&16)){g=oHa(c)|0;e=e+-1|0;if(!(CAa(g,b[e>>0]|0)|0)){c=-1;break}}else{g=oHa(c)|0;e=e+-1|0}f[h>>2]=e;f[a+16>>2]=d;b[e>>0]=g}else c=-1;while(0);return c|0}function jz(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){N0(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function kz(a){a=a|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0;d=a+104|0;j=f[d>>2]|0;if((j|0)!=0?(f[a+108>>2]|0)>=(j|0):0)k=4;else{c=Caa(a)|0;if((c|0)>=0){e=f[d>>2]|0;d=a+8|0;if(e){i=f[d>>2]|0;d=f[a+4>>2]|0;g=a+108|0;e=e-(f[g>>2]|0)|0;j=i;if((i-d|0)<(e|0)){i=j;e=j}else{i=d+(e+-1)|0;e=j}}else{e=f[d>>2]|0;g=a+108|0;i=e;d=f[a+4>>2]|0}f[a+100>>2]=i;if(e|0)f[g>>2]=e+1-d+(f[g>>2]|0);d=d+-1|0;if((h[d>>0]|0|0)!=(c|0))b[d>>0]=c}else k=4}if((k|0)==4){f[a+100>>2]=0;c=-1}return c|0}function lz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;d=u;u=u+16|0;e=d+8|0;g=d+4|0;h=d;c=Mqa(f[a+4>>2]|0)|0;FCa(e,rr(lj(b,1)|0)|0);j=f[e>>2]|0;f[c+24>>2]=j;i=f[a>>2]|0;f[g>>2]=j;f[e>>2]=f[g>>2];i=QY(i,e)|0;g=f[a>>2]|0;f[h>>2]=f[i+16>>2];f[e>>2]=f[h>>2];e=(UX(g,e)|0)+4|0;f[c+4>>2]=f[e>>2];xU(a,b,lxa(b)|0,c);$Aa(c);u=d;return c|0}function mz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+32|0;d=g;e=g+16|0;f[e>>2]=f[c+8>>2];if((SN(b+4|0,e)|0)==(b+8|0))Na(26744,39631,814,26798);else{e=GL(b+4|0,e)|0;f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];oda(a,d);u=g;return}}function nz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;a=g;b=lb(47995)|0;if(!b){Vea(76852,48005)|0;Ka()}dCa(a,b);b=Vea(76852,48038)|0;e=f[a>>2]|0;Vea(K2(b,e)|0,60408)|0;b=f[c+40>>2]|0;d=c+144|0;a=f[c+36>>2]|0;while(1){if((a|0)==(b|0))break;if(aDa(f[f[a>>2]>>2]|0,e)|0){c=Gsa(d)|0;f[(f[a>>2]|0)+36>>2]=c}a=a+4|0}u=g;return}function oz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=u;u=u+32|0;e=h+16|0;g=h;b=cm(a,b,e,h+12|0,c)|0;if(!(f[b>>2]|0)){N0(g,a,d);lN(a,f[e>>2]|0,b,f[g>>2]|0)}u=h;return}function pz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+48|0;c=i+32|0;d=i+24|0;e=i+16|0;g=i+8|0;h=i;if(hJa(f[a>>2]|0)|0){j=a+8|0;a=f[j>>2]|0;Bva(d,a);PP(c,d,b);Bva(g,f[j>>2]|0);PP(h,g,b);PP(e,h,1);hJ(a,f[c>>2]|0,f[c+4>>2]|0,f[e>>2]|0,f[e+4>>2]|0);u=i;return}else Na(51333,51343,432,23520)}function qz(a){a=a|0;var b=0,c=0,d=0,e=0;d=a+20|0;b=a+4|0;switch(f[d>>2]|0){case 0:{c=f[b>>2]|0;e=gKa(f[c+84>>2]|0)|0;b=a+16|0;f[b>>2]=e;c=Wta(c)|0;Ypa(f[a+12>>2]|0,c,0);if(!(f[(f[a+8>>2]|0)+16>>2]|0))Ypa(f[b>>2]|0,c,0);f[d>>2]=(f[d>>2]|0)+1;break}case 1:{e=f[b>>2]|0;d=gKa(f[e+84>>2]|0)|0;e=Wta(e)|0;Ypa(f[a+16>>2]|0,e,0);Ypa(d,e,0);break}default:Ka()}return}function rz(a,c){a=a|0;c=c|0;var d=0,e=0;e=lxa(a)|0;d=f[c>>2]|0;do if((e|0)!=(d|0)){e=lj(a,d)|0;e=qIa(b[e>>0]|0)|0;d=f[c>>2]|0;if(e){f[c>>2]=d+1;d=cra(rr(lj(a,d)|0)|0,0)|0;break}d=lj(a,d)|0;e=rr(lj(d,0)|0)|0;if(!(aDa(e,f[18761]|0)|0)){f[c>>2]=(f[c>>2]|0)+1;d=cra(rr(lj(d,1)|0)|0,0)|0}else d=0}else d=0;while(0);return d|0}function sz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;NM(d,b,c);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else NBa(a);u=e;return}function tz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;e=a+4|0;do if((lxa(b)|0)==(c|0))e=ewa(f[e>>2]|0)|0;else{if((lxa(b)|0)==(c+1|0)){e=sra(a,lj(b,c)|0)|0;break}e=osa(f[e>>2]|0)|0;g=e+12|0;while(1){if(!((c|0)!=-1&c>>>0<(lxa(b)|0)>>>0))break;AW(g,sra(a,lj(b,c)|0)|0);c=c+1|0}Ela(e,d)}while(0);return e|0}function uz(a,b){a=a|0;b=b|0;var c=0,d=0;c=Rya(a)|0;a:do if((c|0)==(Rya(b)|0)?(c=Vya(a)|0,(c|0)==(Vya(b)|0)):0){c=0;while(1){if(c>>>0>=(Pqa(a)|0)>>>0)break;d=YV(a,c)|0;if((d|0)==(YV(b,c)|0))c=c+1|0;else{c=0;break a}}if((f[a+4>>2]|0)==(f[b+4>>2]|0)?!(aDa(f[a+32>>2]|0,f[b+32>>2]|0)|0):0)c=bN(f[a+36>>2]|0,f[b+36>>2]|0)|0;else c=0}else c=0;while(0);return c|0}function vz(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+128|0;g=m+124|0;l=m;h=l;i=10908;j=h+124|0;do{f[h>>2]=f[i>>2];h=h+4|0;i=i+4|0}while((h|0)<(j|0));if((c+-1|0)>>>0>2147483646)if(!c){a=g;c=1;k=4}else{f[2619]=75;c=-1}else k=4;if((k|0)==4){k=-2-a|0;k=c>>>0>k>>>0?k:c;f[l+48>>2]=k;g=l+20|0;f[g>>2]=a;f[l+44>>2]=a;c=a+k|0;a=l+16|0;f[a>>2]=c;f[l+28>>2]=c;c=jt(l,d,e)|0;if(k){l=f[g>>2]|0;b[l+(((l|0)==(f[a>>2]|0))<<31>>31)>>0]=0}}u=m;return c|0}function wz(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;e=k;i=k+16|0;f[i>>2]=c;g=i+4|0;j=a+48|0;l=f[j>>2]|0;f[g>>2]=d-((l|0)!=0&1);h=a+44|0;f[i+8>>2]=f[h>>2];f[i+12>>2]=l;f[e>>2]=f[a+60>>2];f[e+4>>2]=i;f[e+8>>2]=2;e=Qza(Eb(145,e|0)|0)|0;if((e|0)>=1){i=f[g>>2]|0;if(e>>>0>i>>>0){g=f[h>>2]|0;h=a+4|0;f[h>>2]=g;f[a+8>>2]=g+(e-i);if(!(f[j>>2]|0))e=d;else{f[h>>2]=g+1;b[c+(d+-1)>>0]=b[g>>0]|0;e=d}}}else f[a>>2]=f[a>>2]|e&48^16;u=k;return e|0}function xz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+32|0;g=j;h=j+8|0;i=F8(4)|0;f[h>>2]=b;f[h+4>>2]=c;f[h+8>>2]=d;f[h+12>>2]=e;c=0;while(1){if((c|0)==4)break;b=gKa(i)|0;l6(b,f[h+(c<<2)>>2]|0)|0;c=c+1|0}h=gKa(F8(3)|0)|0;h=l6(h,y4(75716)|0)|0;PDa(g,l6(l6(h,Bea(a)|0)|0,i)|0);u=j;return f[g>>2]|0}function yz(a,b){a=a|0;b=b|0;if(!b)Na(59079,64509,76,59084);switch(f[b>>2]|0){case 1:{vDa(a);break}case 2:{vDa(a);break}case 3:{vDa(a);break}case 4:{vDa(a);break}case 5:{vDa(a);break}case 22:case 21:case 19:case 18:case 17:case 16:case 15:case 27:case 26:case 24:case 25:case 14:case 13:case 12:case 11:case 10:case 9:case 8:case 7:case 6:break;case 20:{vDa(a);break}case 23:{vDa(a);break}default:Ka()}return}function zz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;a=Jz(a,b,1)|0;Axa(e,b+(f[(f[b>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[e>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(e);jn(a,d)|0;Yp(a)|0;u=g;return b|0}h=Pa()|0;pza(e);$a(h|0);return 0}function Az(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;rha(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;HQ(d,f[a>>2]|0);a=a+4|0}_3(d,f[b+76>>2]|0,f[b+80>>2]|0);_3(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function Bz(a){a=a|0;f[a>>2]=6692;Yba(a+124|0);i4(a+112|0);E4(a+100|0);oW(a+88|0);fZ(a+76|0);OQ(a+64|0);mU(a+48|0);Uqa(a);return}function Cz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+96|0;h=j;i=b+8|0;e=b+12|0;g=a+40|0;c=0;d=0;while(1){if(d>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break;l=uya(f[g>>2]|0)|0;k=bga(i,d)|0;Ot(h,l,f[k>>2]|0);k=jca(h)|0;hT(h);if(k)break;c=wk(a,b,bga(i,d)|0,c,0)|0;d=d+1|0}u=j;return}function Dz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;d=g+4|0;f[c>>2]=b;e=nV(116)|0;yU(e,b,0);if(f[18711]|0){b=f[18710]|0;f[d>>2]=e;d=EN(74832,d)|0;f[d>>2]=b;b=Vea(vj(Vea(76684,22375)|0,b)|0,22393)|0;d=EN(74808,c)|0;Vea(vj(b,f[d>>2]|0)|0,20144)|0}MW(a,e,-1);u=g;return e|0}function Ez(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>3;g=e+1|0;if(g>>>0>536870911)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>2;PE(c,i>>3>>>0<268435455?(d>>>0<g>>>0?g:d):536870911,e,a+8|0);g=c+8|0;e=f[g>>2]|0;Aua(e,b);f[g>>2]=e+8;iE(a,c);x0(c);u=h;return}}function Fz(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);Ula(b+16|0);$Ja(b);return}function Gz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+80|0;b=f[e>>2]|0;Yv(a+16|0);c=a+72|0;d=f[c>>2]|0;if((d|0)==(f[a+76>>2]|0))XC(a+68|0,e);else{f[d>>2]=f[e>>2];f[c>>2]=(f[c>>2]|0)+4}Yz(b,f[e>>2]|0);b=a+112|0;c=f[b>>2]|0;if((c|0)==(f[a+116>>2]|0))XC(a+108|0,e);else{f[c>>2]=f[e>>2];f[b>>2]=(f[b>>2]|0)+4}return}function Hz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;f[a>>2]=0;g=a+12|0;f[g>>2]=0;f[a+16>>2]=c;do if((f[b+4>>2]|0)!=(f[b>>2]|0)){y=0;ja(597,d|0,b|0);c=y;y=0;if(c&1){a=Pa()|0;b=f[g>>2]|0;f[g>>2]=0;if(b|0){E4(b);$Ja(b)}$a(a|0)}else{c=f[d>>2]|0;f[d>>2]=0;a=f[g>>2]|0;f[g>>2]=c;if(a|0){E4(a);$Ja(a)}f[d>>2]=0;break}}while(0);u=e;return}function Iz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h;do if(pJa(f[b+4>>2]|0)|0){d=b+12|0;e=f[d>>2]|0;g=a+16|0;if((f[e+4>>2]|0)==5){jva(f[g>>2]|0,e)|0;break}else{e=f[a+36>>2]|0;gKa(e)|0;VBa(c,e);e=p5(c,b,gia(c,f[b+8>>2]|0,f[(f[d>>2]|0)+4>>2]|0)|0)|0;jva(f[g>>2]|0,e)|0;_la(b,0);break}}while(0);u=h;return}function Jz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+48|0;d=e;if(!a)Vea(b,51315)|0;else{vX(d,b);mpa(d,0);if(!(!c?!(gw()|0):0)){NDa(d);c=Vea(b,37658)|0;Vea(Vea(c,F$(f[a+4>>2]|0)|0)|0,59873)|0}Mm(d,a)}u=e;return b|0}function Kz(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;h=a+d|0;c=c&255;if((d|0)>=67){while(a&3){b[a>>0]=c;a=a+1|0}e=h&-4|0;g=e-64|0;i=c|c<<8|c<<16|c<<24;while((a|0)<=(g|0)){f[a>>2]=i;f[a+4>>2]=i;f[a+8>>2]=i;f[a+12>>2]=i;f[a+16>>2]=i;f[a+20>>2]=i;f[a+24>>2]=i;f[a+28>>2]=i;f[a+32>>2]=i;f[a+36>>2]=i;f[a+40>>2]=i;f[a+44>>2]=i;f[a+48>>2]=i;f[a+52>>2]=i;f[a+56>>2]=i;f[a+60>>2]=i;a=a+64|0}while((a|0)<(e|0)){f[a>>2]=i;a=a+4|0}}while((a|0)<(h|0)){b[a>>0]=c;a=a+1|0}return h-d|0}function Lz(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;d=u;u=u+112|0;e=d+32|0;c=d;if(f[18711]|0)Vea(76684,22086)|0;h0(e,0);y=0;a=ua(54,e|0,a|0)|0;g=y;y=0;if(g&1)a=Pa()|0;else{Y7(c,a);y=0;ia(339,c|0);g=y;y=0;if(!(g&1)?(b=c+4|0,y=0,ua(53,76684,f[b>>2]|0)|0,g=y,y=0,!(g&1)):0){$Ja(f[b>>2]|0);L3(e);u=d;return}a=Pa()|0;$Ja(f[c+4>>2]|0)}L3(e);$a(a|0)}function Mz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;a=K2(b,f[a>>2]|0)|0;Axa(e,b+(f[(f[b>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[e>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(e);jn(a,d)|0;Yp(a)|0;u=g;return b|0}h=Pa()|0;pza(e);$a(h|0);return 0}function Nz(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e;do if(a<<24>>24){a=Vea(76852,56378)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;b=ua(46,f[c>>2]|0,77556)|0;g=y;y=0;if(!(g&1)?(y=0,d=ua(f[(f[b>>2]|0)+28>>2]|0,b|0,10)|0,g=y,y=0,!(g&1)):0){pza(c);jn(a,d)|0;Yp(a)|0;break}g=Pa()|0;pza(c);$a(g|0)}while(0);u=e;return}function Oz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=qw(a,b,c)|0;e=f[d>>2]|0;g=f[c>>2]|0;if(Iwa(e,g)|0){f[c>>2]=e;f[d>>2]=g;d=h+1|0;e=f[c>>2]|0;g=f[b>>2]|0;if(Iwa(e,g)|0){f[b>>2]=e;f[c>>2]=g;d=f[b>>2]|0;e=f[a>>2]|0;if(Iwa(d,e)|0){f[a>>2]=d;f[b>>2]=e;d=h+3|0}else d=h+2|0}}else d=h;return d|0}function Pz(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){N0(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Qz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1479,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function Rz(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;c=f[a>>2]|0;d=f[c+40>>2]|0;c=f[c+36>>2]|0;while(1){if((c|0)==(d|0)){b=3;break}b=f[c>>2]|0;if(tJa(f[b+32>>2]|0)|0){Zx(e,b);y=0;b=ua(106,e|0,f[a>>2]|0)|0;h=y;y=0;if(h&1){b=7;break}f[(f[c>>2]|0)+32>>2]=f[b>>2];zta(e)}c=c+4|0}if((b|0)==3){u=g;return}else if((b|0)==7){h=Pa()|0;zta(e);$a(h|0)}}function Sz(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;d=Asa(f[c>>2]|0)|0;if(!(f[d+16>>2]|0))Na(32768,32558,171,32781);e=a+88|0;if(b[a+45>>0]|0)mi(a,d,c,(f[e>>2]|0)+-12|0);d=f[e>>2]|0;c=d+-12|0;while(1){if((d|0)==(c|0))break;g=d+-12|0;f[e>>2]=g;zca(g);d=f[e>>2]|0}LT(a+48|0);return}function Tz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=UAa(a,0)|0;if(!(jha(f[d>>2]|0,f[18925]|0)|0))Na(23722,51343,1568,23762);d=UAa(b,0)|0;if(jha(f[d>>2]|0,f[18942]|0)|0)c=0;else Na(23781,51343,1569,23762);while(1){d=UAa(b,1)|0;if(c>>>0>=(yja(gKa(f[d>>2]|0)|0)|0)>>>0)break;e=UAa(a,2)|0;e=gKa(vP(gKa(vP(gKa(f[e>>2]|0)|0)|0)|0)|0)|0;d=UAa(b,1)|0;d=UAa(f[d>>2]|0,c)|0;l6(e,f[d>>2]|0)|0;c=c+1|0}return}function Uz(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;c=a+20|0;e=a+16|0;g=a+4|0;b=0;while(1){if(b>>>0>=(f[c>>2]|0)>>>0)break;d=(f[e>>2]|0)+b|0;d=f[(f[(f[g>>2]|0)+(d>>>10<<2)>>2]|0)+((d&1023)<<2)>>2]|0;if(d|0){zv(d);$Ja(d)}b=b+1|0}d=a+44|0;e=a+40|0;g=a+28|0;b=0;while(1){if(b>>>0>=(f[d>>2]|0)>>>0)break;c=(f[e>>2]|0)+b|0;c=f[(f[(f[g>>2]|0)+(c>>>10<<2)>>2]|0)+((c&1023)<<2)>>2]|0;if(c|0)Lb[f[(f[c>>2]|0)+4>>2]&511](c);b=b+1|0}DY(a+24|0);DY(a);return}function Vz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;h=i+8|0;e=i+4|0;g=i;b=f[b>>2]|0;c=xAa(b)|0;a=a+36|0;if(!c){b=IAa(b)|0;if(b|0?(d=f[b+8>>2]|0,pJa(d)|0):0){f[g>>2]=d;f[h>>2]=f[g>>2];h=Tv(a,h)|0;f[b+8>>2]=h}}else{b=f[c+8>>2]|0;if(pJa(b)|0){f[e>>2]=b;f[h>>2]=f[e>>2];h=Tv(a,h)|0;f[c+8>>2]=h}}u=i;return}function Wz(a){a=a|0;if(!a)return;else{Wz(f[a>>2]|0);Wz(f[a+4>>2]|0);uaa(a+16|0);$Ja(a);return}}function Xz(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);goa(b+16|0);$Ja(b);return}function Yz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+4|0;c=j;f[h>>2]=a;f[c>>2]=b;d=b;i=a;do if((a|0)!=0&(b|0)!=0){e=a+40|0;g=f[e>>2]|0;if((g|0)==(f[a+44>>2]|0))XC(a+36|0,c);else{f[g>>2]=d;f[e>>2]=(f[e>>2]|0)+4}a=b+52|0;c=f[a>>2]|0;if((c|0)==(f[b+56>>2]|0)){XC(b+48|0,h);break}else{f[c>>2]=i;f[a>>2]=(f[a>>2]|0)+4;break}}while(0);u=j;return}function Zz(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Yia(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;YW(d,f[a>>2]|0);a=a+4|0}O4(d,f[b+76>>2]|0,f[b+80>>2]|0);O4(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function _z(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;e=g;d=f[a+44>>2]|0;if(((f[a+40>>2]|0)!=(d|0)?(c=xAa(f[d+-4>>2]|0)|0,c|0):0)?(d=efa(c+12|0)|0,(b|0)==(f[d>>2]|0)):0){vja(e,b,c);b=a+76|0;c=f[b>>2]|0;if(c>>>0<(f[a+80>>2]|0)>>>0){f[c>>2]=f[e>>2];f[c+4>>2]=f[e+4>>2];f[c+8>>2]=f[e+8>>2];f[b>>2]=(f[b>>2]|0)+12}else Kx(a+72|0,e)}u=g;return}function $z(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,i=0;f=~b;f=(f>>>0>4294967292?f:-4)+b+4&-4;d=b;e=a;c=b;while(1){if(d>>>0<=3)break;i=Y(h[e>>0]|h[e+1>>0]<<8|h[e+2>>0]<<16|h[e+3>>0]<<24,1540483477)|0;d=d+-4|0;e=e+4|0;c=(Y(i>>>24^i,1540483477)|0)^(Y(c,1540483477)|0)}d=a+f|0;switch(b-f|0){case 3:{c=(h[d+2>>0]|0)<<16^c;g=6;break}case 2:{g=6;break}case 1:{g=7;break}default:{}}if((g|0)==6){c=(h[d+1>>0]|0)<<8^c;g=7}if((g|0)==7)c=Y((h[d>>0]|0)^c,1540483477)|0;i=Y(c>>>13^c,1540483477)|0;return i>>>15^i|0}function aA(a){a=a|0;var b=0,c=0;Vea(76852,37658)|0;Vea(76852,24385)|0;BY(76852,a)|0;b=a+12|0;if((f[b>>2]|0)!=-1){c=Vea(76852,54382)|0;b=Vea(vj(c,f[b>>2]|0)|0,58655)|0;Vea(vj(b,f[a+16>>2]|0)|0,72083)|0}Vea(76852,72132)|0;return}function bA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+192|0;e=g+92|0;d=g;if((f[a+4>>2]|0)!=5)if(!b)a=1;else{Ot(e,c,b);do if(!(jca(e)|0)){y=0;ya(75,d|0,c|0,a|0);c=y;y=0;if(c&1){g=Pa()|0;hT(e);$a(g|0)}else{a=(oh(d,e)|0)^1;hT(d);break}}else a=0;while(0);hT(e)}else a=0;u=g;return a|0}function cA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,2016,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function dA(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0;if((-17-c|0)>>>0<d>>>0)JZ();if((b[a+11>>0]|0)<0)k=f[a>>2]|0;else k=a;if(c>>>0<2147483623){i=d+c|0;j=c<<1;i=i>>>0<j>>>0?j:i;i=i>>>0<11?11:i+16&-16}else i=-17;j=QCa(i)|0;if(g|0)Pta(j,k,g)|0;d=e-g|0;if(d|0)Pta(j+g+h|0,k+g|0,d)|0;if((c|0)!=10)$Ja(k);f[a>>2]=j;f[a+8>>2]=i|-2147483648;return}function eA(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=a+11|0;e=b[k>>0]|0;j=e<<24>>24<0;if(j){g=(f[a+8>>2]&2147483647)+-1|0;h=f[a+4>>2]|0}else{g=10;h=e&255}i=h+d|0;if((g-h|0)>>>0>=d>>>0){if(d|0){if(j)e=f[a>>2]|0;else e=a;Pta(e+h|0,c,d)|0;if((b[k>>0]|0)<0)f[a+4>>2]=i;else b[k>>0]=i;SBa(e+i|0,0)}}else qv(a,g,i-g|0,h,h,0,d,c);return a|0}function fA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;b=SN(a+36|0,b)|0;do if((b|0)!=(a+40|0)){g=b+24|0;e=(f[g>>2]|0)+c|0;f[g>>2]=e;if((e|0)<=-1)Na(31656,31619,165,31676);g=f[b+20>>2]|0;if(g|0){if(!e){Py(a,g);break}if((c|0)==1&(e|0)==1?(f[g+4>>2]|0)==5:0){if(!d)b=0;else b=f[d+4>>2]|0;faa(a,g,b)}}}while(0);return}function gA(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=a+11|0;e=b[i>>0]|0;g=e<<24>>24<0;if(g)h=(f[a+8>>2]&2147483647)+-1|0;else h=10;do if(h>>>0>=d>>>0){if(g)e=f[a>>2]|0;else e=a;Ita(e,c,d)|0;SBa(e+d|0,0);if((b[i>>0]|0)<0){f[a+4>>2]=d;break}else{b[i>>0]=d;break}}else{if(g)e=f[a+4>>2]|0;else e=e&255;qv(a,h,d-h|0,e,0,e,d,c)}while(0);return}function hA(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;b[a+53>>0]=1;do if((f[a+4>>2]|0)==(d|0)){b[a+52>>0]=1;h=a+16|0;g=f[h>>2]|0;j=a+54|0;k=a+48|0;i=a+24|0;d=a+36|0;if(!g){f[h>>2]=c;f[i>>2]=e;f[d>>2]=1;if(!((f[k>>2]|0)==1&(e|0)==1))break;b[j>>0]=1;break}if((g|0)!=(c|0)){f[d>>2]=(f[d>>2]|0)+1;b[j>>0]=1;break}d=f[i>>2]|0;if((d|0)==2){f[i>>2]=e;d=e}if((f[k>>2]|0)==1&(d|0)==1)b[j>>0]=1}while(0);return}function iA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;a=qma(b,a)|0;Axa(e,b+(f[(f[b>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[e>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(e);jn(a,d)|0;Yp(a)|0;u=g;return b|0}h=Pa()|0;pza(e);$a(h|0);return 0}function jA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;j=f[g>>2]|0;h=c+-8|0;f[j+-8>>2]=f[h>>2];i=c+-4|0;f[j+-4>>2]=f[i>>2];f[h>>2]=0;f[i>>2]=0;f[g>>2]=(f[g>>2]|0)+-8;c=h}h=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=h;h=b+8|0;j=f[e>>2]|0;f[e>>2]=f[h>>2];f[h>>2]=j;h=a+8|0;j=b+12|0;i=f[h>>2]|0;f[h>>2]=f[j>>2];f[j>>2]=i;f[b>>2]=f[g>>2];return}function kA(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;g=a+11|0;d=b[g>>0]|0;e=d<<24>>24<0;if(e){h=f[a+4>>2]|0;d=(f[a+8>>2]&2147483647)+-1|0}else{h=d&255;d=10}if((h|0)==(d|0)){dA(a,d,1,d,d,0);d=d+1|0;if((b[g>>0]|0)<0)e=8;else e=7}else{d=h+1|0;if(e)e=8;else e=7}if((e|0)==7)b[g>>0]=d;else if((e|0)==8){g=f[a>>2]|0;f[a+4>>2]=d;a=g}h=a+h|0;SBa(h,c);SBa(h+1|0,0);return}function lA(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;e=u;u=u+16|0;c=e;do if(a<<24>>24){a=Vea(76852,56399)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;b=ua(46,f[c>>2]|0,77556)|0;g=y;y=0;if(!(g&1)?(y=0,d=ua(f[(f[b>>2]|0)+28>>2]|0,b|0,10)|0,g=y,y=0,!(g&1)):0){pza(c);jn(a,d)|0;Yp(a)|0;break}g=Pa()|0;pza(c);$a(g|0)}while(0);u=e;return}function mA(a){a=a|0;if(!a)return;else{mA(f[a>>2]|0);mA(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function nA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Pja(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;hU(d,f[a>>2]|0);a=a+4|0}t5(d,f[b+76>>2]|0,f[b+80>>2]|0);t5(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function oA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=a+12|0;d=a+16|0;if((gKa(f[d>>2]|0)|0)==(b|0))AW(g,c);else{AW(g,0);e=gKa(f[d>>2]|0)|0;while(1){d=e+-1|0;if(d>>>0<=b>>>0)break;i=bga(g,e+-2|0)|0;i=f[i>>2]|0;h=bga(g,d)|0;f[h>>2]=i;e=d}i=bga(g,b)|0;f[i>>2]=c}Ela(a,f[a+4>>2]|0);return}function pA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,935,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function qA(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;d=j;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e|0;h=g+1|0;i=mJa()|0;if(i>>>0<h>>>0)SZ();else{k=(f[a+8>>2]|0)-e|0;e=k<<1;M$(d,k>>>0<i>>>1>>>0?(e>>>0<h>>>0?h:e):i,g,a+8|0);i=d+8|0;h=f[i>>2]|0;b[h>>0]=b[c>>0]|0;f[i>>2]=h+1;BF(a,d);m4(d);u=j;return}}function rA(a,b){a=a|0;b=b|0;b=gq(a,b)|0;if(b|0)ID(a,b);return}function sA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1140,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function tA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;d=b+12|0;if(f[d>>2]|0?bDa(f[b+8>>2]|0,f[a+36>>2]|0)|0:0){e=f[a+20>>2]|0;gKa(e)|0;VBa(c,e);e=f[d>>2]|0;if((f[e+4>>2]|0)==5)jva(f[a>>2]|0,e)|0;else{f[d>>2]=0;$5(b);e=p5(c,Una(f[c>>2]|0,e)|0,b)|0;jva(f[a>>2]|0,e)|0}u=g;return}u=g;return}function uA(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;e=g;d=f[a>>2]|0;f[e>>2]=f[f[c>>2]>>2];d=aj(d+20|0,e)|0;c=f[a+4>>2]|0;if((bv(c,e)|0)!=0?(e=gj(c,e)|0,(f[e>>2]|0)==(f[d>>2]|0)):0)c=(b[d+9>>0]|0)==0;else c=0;u=g;return c|0}function vA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1517,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function wA(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g+4|0;d=g;b=wAa(a)|0;if(!b){a=xAa(a)|0;if((((a|0)!=0?(gKa(f[a+16>>2]|0)|0)!=0:0)?(b=efa(a+12|0)|0,wA(f[b>>2]|0)|0):0)?(f[d>>2]=f[a+8>>2],f[c>>2]=f[d>>2],!(VC(a,c)|0)):0)a=1;else e=7}else if(!(f[b+16>>2]|0))a=1;else e=7;if((e|0)==7)a=0;u=g;return a|0}function xA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1110,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function yA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;yka(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;pR(d,f[a>>2]|0);a=a+4|0}T5(d,f[b+76>>2]|0,f[b+80>>2]|0);T5(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function zA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;zka(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;qS(d,f[a>>2]|0);a=a+4|0}U5(d,f[b+76>>2]|0,f[b+80>>2]|0);U5(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function AA(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;if((b[c+11>>0]|0)<0){d=f[c>>2]|0;c=f[c+4>>2]|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{g=c+16&-16;e=QCa(g)|0;f[a>>2]=e;f[a+8>>2]=g|-2147483648;f[a+4>>2]=c;a=e}Pta(a,d,c)|0;SBa(a+c|0,0)}else{f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2]}return}function BA(a,b){a=a|0;b=+b;var c=0,d=0,e=0;c=JAa(b)|0;if((c&2147483647)>>>0>2139095040){Vea(Vea(a,(c|0)<0?72207:83563)|0,67309)|0;c=F0(b)|0;if(c|0){d=Vea(a,39002)|0;e=a+(f[(f[a>>2]|0)+-12>>2]|0)+4|0;f[e>>2]=f[e>>2]&-75|8;vj(d,c)|0;a=a+(f[(f[a>>2]|0)+-12>>2]|0)+4|0;f[a>>2]=f[a>>2]&-75|2}}else Ip(a,b);return}function CA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,299,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function DA(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;b=g;d=Vea(a,64085)|0;Axa(b,a+(f[(f[a>>2]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[b>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,c=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,h=y,y=0,!(h&1)):0){pza(b);jn(d,c)|0;Yp(d)|0;u=g;return a|0}h=Pa()|0;pza(b);$a(h|0);return 0}function EA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,784,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function FA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+16|0;e=h+4|0;g=h;d=a+20|0;while(1){if((b|0)==(c|0))break;i=f[b>>2]|0;Uj(a,f[i+4>>2]|0,1,i,64140)|0;i=f[b>>2]|0;$la(e,(f[b+8>>2]|0)-(f[b+4>>2]|0)>>2,0);j=f[d>>2]|0;gKa(j)|0;$la(g,gKa(f[j+68>>2]|0)|0,0);i=WD(i,f[e>>2]|0,f[g>>2]|0)|0;Po(a,i,f[b>>2]|0,64169)|0;b=b+16|0}u=h;return}function GA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;d=a+44|0;g=KM(d,f[b>>2]|0)|0;g=f[g>>2]|0;e=KM(d,f[c>>2]|0)|0;a=f[b>>2]|0;if((g|0)==(f[e>>2]|0))a=(yV(f[a>>2]|0,f[f[c>>2]>>2]|0)|0)>0;else{g=KM(d,a)|0;g=f[g>>2]|0;a=KM(d,f[c>>2]|0)|0;a=g>>>0>(f[a>>2]|0)>>>0}return a|0}function HA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=f[e>>2]|0;f[e>>2]=0;if(c|0){E4(c);$Ja(c)}c=f[g>>2]|0}}}else Zr(a,b-d|0);while(0);return}function IA(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0;do if(!(bDa(a,f[c+8>>2]|0)|0)){if(bDa(a,f[c>>2]|0)|0){a=c+32|0;if((f[c+16>>2]|0)!=(d|0)?(h=c+20|0,(f[h>>2]|0)!=(d|0)):0){f[a>>2]=e;f[h>>2]=d;e=c+40|0;f[e>>2]=(f[e>>2]|0)+1;if((f[c+36>>2]|0)==1?(f[c+24>>2]|0)==2:0)b[c+54>>0]=1;f[c+44>>2]=4;break}if((e|0)==1)f[a>>2]=1}}else _9(c,d,e);while(0);return}function JA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,991,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function KA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Pka(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;u0(d,f[a>>2]|0);a=a+4|0}f6(d,f[b+76>>2]|0,f[b+80>>2]|0);f6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function LA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,812,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function MA(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)Ul(a,b)}}else Ul(a,b);return}function NA(a){a=a|0;if(!a)return;else{NA(f[a>>2]|0);NA(f[a+4>>2]|0);Xba(a+16|0);$Ja(a);return}}function OA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;jla(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;wQ(d,f[a>>2]|0);a=a+4|0}z6(d,f[b+76>>2]|0,f[b+80>>2]|0);z6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function PA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1022,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function QA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,63,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function RA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;a=vj(b,a)|0;Axa(e,b+(f[(f[b>>2]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[e>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,h=y,y=0,!(h&1)):0){pza(e);jn(a,d)|0;Yp(a)|0;u=g;return b|0}h=Pa()|0;pza(e);$a(h|0);return 0}function SA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,609,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function TA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1225,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function UA(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;e=a+8|0;j=e+3|0;h=b[j>>0]|0;i=h<<24>>24<0;if(i)g=(f[e>>2]&2147483647)+-1|0;else g=1;do if(g>>>0>=d>>>0){if(i)e=f[a>>2]|0;else e=a;_va(e,c,d);FCa(e+(d<<2)|0,0);if((b[j>>0]|0)<0){f[a+4>>2]=d;break}else{b[j>>0]=d;break}}else{if(i)e=f[a+4>>2]|0;else e=h&255;Nr(a,g,d-g|0,e,0,e,d,c)}while(0);return a|0}function VA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Ala(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;rY(d,f[a>>2]|0);a=a+4|0}L6(d,f[b+76>>2]|0,f[b+80>>2]|0);L6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function WA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Bla(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;sY(d,f[a>>2]|0);a=a+4|0}M6(d,f[b+76>>2]|0,f[b+80>>2]|0);M6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function XA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Cla(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;tY(d,f[a>>2]|0);a=a+4|0}N6(d,f[b+76>>2]|0,f[b+80>>2]|0);N6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function YA(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Dla(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;uY(d,f[a>>2]|0);a=a+4|0}O6(d,f[b+76>>2]|0,f[b+80>>2]|0);O6(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function ZA(a){a=a|0;var c=0,d=0,e=0,f=0,g=0;while(1){c=b[a>>0]|0;d=c<<24>>24;e=a+1|0;if(!(kEa(d)|0))break;else a=e}switch(d|0){case 45:{a=1;f=5;break}case 43:{a=0;f=5;break}default:g=0}if((f|0)==5){g=a;a=e;c=b[e>>0]|0}e=(c<<24>>24)+-48|0;if(e>>>0<10){c=0;d=0;do{c=oea(c|0,d|0,10,0)|0;a=a+1|0;c=Aoa(c|0,J|0,e|0,((e|0)<0)<<31>>31|0)|0;d=J;e=(b[a>>0]|0)+-48|0}while(e>>>0<10);a=d}else{c=0;a=0}f=(g|0)!=0;g=Aoa(0,0,c|0,a|0)|0;J=f?a:J;return (f?c:g)|0}function _A(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;e=g;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=0;f[e+16>>2]=0;f[e+20>>2]=0;f[e+24>>2]=0;f[e+28>>2]=0;d=39410;c=40;while(1){h=e+(((c&255)>>>5&255)<<2)|0;f[h>>2]=f[h>>2]|1<<(c&31);c=d+1|0;if((c|0)==39412)break;else{d=c;c=b[c>>0]|0}}d=b[a>>0]|0;a:do if(!(d<<24>>24))c=a;else{c=a;do{if(f[e+(((d&255)>>>5&255)<<2)>>2]&1<<(d&31)|0)break a;c=c+1|0;d=b[c>>0]|0}while(d<<24>>24!=0)}while(0);u=g;return c-a|0}function $A(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j;do if((a|0)==(c|0)){f[d>>2]=4;a=0}else{if((b[a>>0]|0)==45){f[d>>2]=4;a=0;break}i=f[2619]|0;f[2619]=0;gpa()|0;g=AAa(a,h,e)|0;a=J;e=f[2619]|0;if(!e)f[2619]=i;do if((f[h>>2]|0)==(c|0))if(a>>>0>0|(a|0)==0&g>>>0>65535|(e|0)==34){f[d>>2]=4;a=-1;break}else{a=g&65535;break}else{f[d>>2]=4;a=0}while(0)}while(0);u=j;return a|0}function aB(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)pm(a,b)}}else pm(a,b);return}function bB(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)Sl(a,b)}}else Sl(a,b);return}function cB(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;a:do if(!(bDa(a,f[c+8>>2]|0)|0)){h=f[a+12>>2]|0;g=a+16+(h<<3)|0;wU(a+16|0,c,d,e);if((h|0)>1){h=c+54|0;a=a+24|0;do{wU(a,c,d,e);if(b[h>>0]|0)break a;a=a+8|0}while(a>>>0<g>>>0)}}else YL(c,d,e);while(0);return}function dB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,904,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function eB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1573,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function fB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1691,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function gB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1601,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function hB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Pla(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;P0(d,f[a>>2]|0);a=a+4|0}d7(d,f[b+76>>2]|0,f[b+80>>2]|0);d7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function iB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0;i=h[b+8>>0]|0;g=gKa(f[b+12>>2]|0)|0;e=DR(a,f[b+16>>2]|0)|0;d=DR(a,f[b+20>>2]|0)|0;c=DR(a,f[b+24>>2]|0)|0;return NR(f[a+32>>2]|0,i,g,e,d,c,f[b+4>>2]|0)|0}function jB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1788,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function kB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,693,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function lB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1347,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function mB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1377,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function nB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1635,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function oB(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+64|0;d=i+48|0;e=i+4|0;g=i+8|0;h=i;f[e>>2]=a;a=f[c>>2]|0;do if(pJa(a)|0){f[h>>2]=a;f[d>>2]=f[h>>2];fia(g,d);b[g+28>>0]=1;y=0;ja(269,g|0,e|0);h=y;y=0;if(h&1){i=Pa()|0;Rua(g);$a(i|0)}else{a=(f[g+32>>2]|0)!=0;Rua(g);break}}else a=0;while(0);u=i;return a|0}function pB(){var a=0,b=0,c=0,d=0,e=0;a=u;u=u+16|0;b=Vea(76852,23820)|0;Axa(a,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[a>>2]|0,77556)|0;e=y;y=0;if(!(e&1)?(y=0,c=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,e=y,y=0,!(e&1)):0){pza(a);jn(b,c)|0;Yp(b)|0;Ka()}e=Pa()|0;pza(a);$a(e|0)}function qB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,665,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function rB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1816,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function sB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,842,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function tB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1050,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function uB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1663,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function vB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1947,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function wB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,482,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function xB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;ama(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;_0(d,f[a>>2]|0);a=a+4|0}v7(d,f[b+76>>2]|0,f[b+80>>2]|0);v7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function yB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;bma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;VY(d,f[a>>2]|0);a=a+4|0}w7(d,f[b+76>>2]|0,f[b+80>>2]|0);w7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function zB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;cma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;$0(d,f[a>>2]|0);a=a+4|0}x7(d,f[b+76>>2]|0,f[b+80>>2]|0);x7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function AB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;dma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;a1(d,f[a>>2]|0);a=a+4|0}y7(d,f[b+76>>2]|0,f[b+80>>2]|0);y7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function BB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1078,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function CB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;c=g+16|0;d=g;e=g+4|0;if(gKa(f[b+20>>2]|0)|0)Na(46408,46435,139,46469);h=f[b+8>>2]|0;f[d>>2]=f[b+12>>2];f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;y=0;f[c>>2]=f[d>>2];c=xa(20,a+32|0,h|0,c|0,e|0)|0;d=y;y=0;if(d&1){h=Pa()|0;E4(e);$a(h|0)}else{E4(e);u=g;return c|0}return 0}function DB(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if(d&2048){b[a>>0]=43;a=a+1|0}if(d&1024){b[a>>0]=35;a=a+1|0}h=d&260;e=(d&16384|0)!=0;f=(h|0)==260;if(f)g=0;else{b[a>>0]=46;b[a+1>>0]=42;g=1;a=a+2|0}while(1){d=b[c>>0]|0;if(!(d<<24>>24))break;b[a>>0]=d;c=c+1|0;a=a+1|0}a:do switch(h&511){case 4:{d=e?70:102;break}case 256:{d=e?69:101;break}default:if(f){d=e?65:97;break a}else{d=e?71:103;break a}}while(0);b[a>>0]=d;return g|0}function EB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,637,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function FB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,873,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function GB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1405,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function HB(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+64|0;d=i+48|0;e=i+4|0;g=i+8|0;h=i;f[e>>2]=a;a=f[c>>2]|0;do if(pJa(a)|0){f[h>>2]=a;f[d>>2]=f[h>>2];fia(g,d);b[g+28>>0]=1;y=0;ja(269,g|0,e|0);h=y;y=0;if(h&1){i=Pa()|0;Rua(g);$a(i|0)}else{a=f[g+32>>2]|0;Rua(g);break}}else a=0;while(0);u=i;return a|0}function IB(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(24)|0;f[a>>2]=g;f[a+4>>2]=c+8;c=a+8|0;b[c>>0]=0;y=0;ja(120,g+8|0,f[e>>2]|0);e=y;y=0;if(e&1){e=Pa()|0;f[a>>2]=0;$Ja(g);$a(e|0)}else{f[g+20>>2]=0;b[c>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}}function JB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1255,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function KB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1874,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function LB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1844,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function MB(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;h=k;i=c+4|0;j=c+8|0;d=f[a>>2]|0;while(1){e=d&127;b[h>>0]=e;d=d>>7;if(!(Ija(a,d,e)|0))break;e=e|-128;b[h>>0]=e;g=f[i>>2]|0;if((g|0)==(f[j>>2]|0))hD(c,h);else{b[g>>0]=e;f[i>>2]=(f[i>>2]|0)+1}}d=f[i>>2]|0;if((d|0)==(f[j>>2]|0))hD(c,h);else{b[d>>0]=e;f[i>>2]=(f[i>>2]|0)+1}u=k;return}function NB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a:do if((b|0)!=(c|0)){e=a+4|0;d=f[e>>2]|0;a=c;while(1){if((a|0)==(d|0))break;g=f[a>>2]|0;f[a>>2]=0;c=f[b>>2]|0;f[b>>2]=g;if(c|0){Nza(c);$Ja(c)}b=b+4|0;a=a+4|0}while(1){a=f[e>>2]|0;if((a|0)==(b|0))break a;g=a+-4|0;f[e>>2]=g;a=f[g>>2]|0;f[g>>2]=0;if(!a)continue;Nza(a);$Ja(a)}}while(0);return}function OB(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;e=a+8|0;h=e+3|0;d=b[h>>0]|0;g=d<<24>>24<0;if(g){i=f[a+4>>2]|0;d=(f[e>>2]&2147483647)+-1|0}else{i=d&255;d=1}if((i|0)==(d|0)){Zu(a,d,1,d,d);d=d+1|0;if((b[h>>0]|0)<0)e=8;else e=7}else{d=i+1|0;if(g)e=8;else e=7}if((e|0)==7)b[h>>0]=d;else if((e|0)==8){h=f[a>>2]|0;f[a+4>>2]=d;a=h}i=a+(i<<2)|0;FCa(i,c);FCa(i+4|0,0);return}function PB(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;e=a+8|0;j=e+3|0;g=b[j>>0]|0;i=g<<24>>24<0;if(i){e=(f[e>>2]&2147483647)+-1|0;g=f[a+4>>2]|0}else{e=1;g=g&255}h=g+d|0;if((e-g|0)>>>0>=d>>>0){if(d|0){if(i)e=f[a>>2]|0;else e=a;awa(e+(g<<2)|0,c,d);if((b[j>>0]|0)<0)f[a+4>>2]=h;else b[j>>0]=h;FCa(e+(h<<2)|0,0)}}else Nr(a,e,h-e|0,g,g,0,d,c);return a|0}function QB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,180,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function RB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;f[d>>2]=b;e=Uva(a+144|0)|0;if(!(f[18711]|0)){c=e;a=b}else{a=qN(e)|0;a=Vea(vj(Vea(76684,20507)|0,a)|0,21089)|0;c=EN(74808,d)|0;Vea(vj(a,f[c>>2]|0)|0,20144)|0;c=e;a=f[d>>2]|0}f[e+8>>2]=a;_wa(e);u=g;return c|0}function SB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,552,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function TB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;yma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;gS(d,f[a>>2]|0);a=a+4|0}Z7(d,f[b+76>>2]|0,f[b+80>>2]|0);Z7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function UB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;zma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;cZ(d,f[a>>2]|0);a=a+4|0}_7(d,f[b+76>>2]|0,f[b+80>>2]|0);_7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function VB(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Ama(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;k1(d,f[a>>2]|0);a=a+4|0}$7(d,f[b+76>>2]|0,f[b+80>>2]|0);$7(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function WB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1433,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function XB(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)Xl(a,b)}}else Xl(a,b);return}function YB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,148,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function ZB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,1545,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function _B(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1729,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function $B(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;i=(f[g>>2]|0)+-4|0;h=c+-4|0;j=f[h>>2]|0;f[h>>2]=0;f[i>>2]=j;f[g>>2]=(f[g>>2]|0)+-4;c=h}h=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=h;h=b+8|0;j=f[e>>2]|0;f[e>>2]=f[h>>2];f[h>>2]=j;h=a+8|0;j=b+12|0;i=f[h>>2]|0;f[h>>2]=f[j>>2];f[j>>2]=i;f[b>>2]=f[g>>2];return}function aC(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=a+11|0;e=b[i>>0]|0;g=e<<24>>24<0;if(g)h=(f[a+8>>2]&2147483647)+-1|0;else h=10;do if(h>>>0>=d>>>0){if(g)e=f[a>>2]|0;else e=a;Ita(e,c,d)|0;SBa(e+d|0,0);if((b[i>>0]|0)<0){f[a+4>>2]=d;break}else{b[i>>0]=d;break}}else{if(g)e=f[a+4>>2]|0;else e=e&255;Bw(a,h,d-h|0,e,0,e,d,c)}while(0);return a|0}function bC(a){a=a|0;var b=0,c=0,d=0;c=a+12|0;if(f[c>>2]|0){d=a+8|0;fP(f[d>>2]|0);f[d>>2]=0;d=f[a+4>>2]|0;b=0;while(1){if((b|0)==(d|0))break;f[(f[a>>2]|0)+(b<<2)>>2]=0;b=b+1|0}f[c>>2]=0}return}function cC(a,c){a=a|0;c=c|0;var d=0;d=f[a+20>>2]|0;gKa(d)|0;if(!(b[d+114>>0]|0))HS(a,c);d=c+4|0;fO(a,b[c+12>>0]|0,f[d>>2]|0,c);Xj(a,f[(f[c+20>>2]|0)+4>>2]|0,1,c,62082);Xj(a,f[(f[c+24>>2]|0)+4>>2]|0,f[d>>2]|0,c,62117);q1(a,f[d>>2]|0,c,62158);return}function dC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;a=gta(a+144|0)|0;if(f[18711]|0){g=qN(a)|0;Vea(vj(Vea(Vea(Vea(vj(Vea(76684,20507)|0,g)|0,20624)|0,b)|0,20660)|0,c)|0,19943)|0}dCa(d,b);f[a+8>>2]=f[d>>2];f[a+4>>2]=c;u=e;return a|0}function eC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,241,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function fC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,413,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function gC(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j;do if((a|0)==(c|0)){f[d>>2]=4;a=0}else{if((b[a>>0]|0)==45){f[d>>2]=4;a=0;break}i=f[2619]|0;f[2619]=0;gpa()|0;a=AAa(a,h,e)|0;e=J;g=f[2619]|0;if(!g)f[2619]=i;do if((f[h>>2]|0)==(c|0))if(e>>>0>0|(e|0)==0&a>>>0>4294967295|(g|0)==34){f[d>>2]=4;a=-1;break}else break;else{f[d>>2]=4;a=0}while(0)}while(0);u=j;return a|0}function hC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=a+4|0;h=a+8|0;if((f[h>>2]|0)!=(f[g>>2]|0))Na(64491,64509,292,64530);JJ(a,356,b);c=e+4|0;d=a+-16|0;while(1){if((f[h>>2]|0)==(f[g>>2]|0)){b=8;break}EW(e,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[e>>2]&4095](d,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=i;return}}function iC(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Wma(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;rS(d,f[a>>2]|0);a=a+4|0}w8(d,f[b+76>>2]|0,f[b+80>>2]|0);w8(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function jC(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);rwa(b+16|0);$Ja(b);return}function kC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;g=h+8|0;d=h;e=b+8|0;Bwa(g,e);iua(d,e);e=g+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;b=15;while(1){if(!(Cpa(f[g>>2]|0,f[e>>2]|0,c,d)|0))break;i=ppa(g)|0;i=(Cn(a,f[i>>2]|0)|0)+b|0;bva(g);b=i}u=h;return b|0}function lC(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=a+11|0;e=b[k>>0]|0;j=e<<24>>24<0;if(j){g=(f[a+8>>2]&2147483647)+-1|0;h=f[a+4>>2]|0}else{g=10;h=e&255}i=h+d|0;if((g-h|0)>>>0>=d>>>0){if(d|0){if(j)e=f[a>>2]|0;else e=a;Pta(e+h|0,c,d)|0;if((b[k>>0]|0)<0)f[a+4>>2]=i;else b[k>>0]=i;SBa(e+i|0,0)}}else Bw(a,g,i-g|0,h,h,0,d,c);return a|0}function mC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,240,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function nC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=u;u=u+32|0;g=d+16|0;h=d;b=dea(f[a>>2]|0,23,b)|0;e=dea(f[a>>2]|0,23,c)|0;Ysa(h,32,0);f[g>>2]=f[h>>2];f[g+4>>2]=f[h+4>>2];f[g+8>>2]=f[h+8>>2];f[g+12>>2]=f[h+12>>2];c=FO(a,g)|0;c=s5(f[a>>2]|0,35,e,c)|0;c=s5(f[a>>2]|0,33,b,c)|0;u=d;return c|0}function oC(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;jna(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;uZ(d,f[a>>2]|0);a=a+4|0}O8(d,f[b+76>>2]|0,f[b+80>>2]|0);O8(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function pC(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;kna(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;w1(d,f[a>>2]|0);a=a+4|0}P8(d,f[b+76>>2]|0,f[b+80>>2]|0);P8(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function qC(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;lna(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;x1(d,f[a>>2]|0);a=a+4|0}Q8(d,f[b+76>>2]|0,f[b+80>>2]|0);Q8(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function rC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1197,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function sC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,270,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function tC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1757,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function uC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a:do if((b|0)!=(c|0)){e=a+4|0;d=f[e>>2]|0;a=c;while(1){if((a|0)==(d|0))break;g=f[a>>2]|0;f[a>>2]=0;c=f[b>>2]|0;f[b>>2]=g;if(c|0){XV(c);$Ja(c)}b=b+4|0;a=a+4|0}while(1){a=f[e>>2]|0;if((a|0)==(b|0))break a;g=a+-4|0;f[e>>2]=g;a=f[g>>2]|0;f[g>>2]=0;if(!a)continue;XV(a);$Ja(a)}}while(0);return}function vC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=h+8|0;g=F8(2)|0;f[e>>2]=b;f[e+4>>2]=c;c=0;while(1){if((c|0)==2)break;b=gKa(g)|0;l6(b,f[e+(c<<2)>>2]|0)|0;c=c+1|0}e=gKa(F8(3)|0)|0;e=l6(e,y4(75716)|0)|0;PDa(d,l6(l6(e,Bea(a)|0)|0,g)|0);u=h;return f[d>>2]|0}function wC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i;h=a+4|0;f[h>>2]=b;e=Pza(b)|0;do if(!e){e=Iza(b)|0;if(!e){c=u1(c,f[b+4>>2]|0)|0;f[a>>2]=c;VBa(g,d);g=Mba(g,f[a>>2]|0,f[h>>2]|0)|0;f[h>>2]=g;break}else{f[a>>2]=f[e+8>>2];break}}else f[a>>2]=f[e+8>>2];while(0);u=i;return}function xC(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;sna(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;NZ(d,f[a>>2]|0);a=a+4|0}c9(d,f[b+76>>2]|0,f[b+80>>2]|0);c9(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function yC(a,c){a=a|0;c=c|0;var d=0,e=0,f=0;a:do if((a|0)!=(c|0)){f=a+1|0;switch(b[a>>0]|0){case 104:{d=pL(f,c)|0;if((d|0)==(f|0)|(d|0)==(c|0))break a;return ((b[d>>0]|0)==95?d+1|0:a)|0}case 118:break;default:break a}d=pL(f,c)|0;if((!((d|0)==(f|0)|(d|0)==(c|0))?(b[d>>0]|0)==95:0)?(f=d+1|0,e=pL(f,c)|0,!((e|0)==(f|0)|(e|0)==(c|0))):0)a=(b[e>>0]|0)==95?e+1|0:a}while(0);return a|0}function zC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;c=a+8|0;qw(a,a+4|0,c)|0;e=a+12|0;while(1){if((e|0)==(b|0))break;g=f[e>>2]|0;h=g;if(Iwa(g,f[c>>2]|0)|0){d=e;while(1){f[d>>2]=f[c>>2];if((c|0)==(a|0))break;d=c+-4|0;if(Iwa(g,f[d>>2]|0)|0){i=c;c=d;d=i}else break}f[c>>2]=h}c=e;e=e+4|0}return}function AC(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;g=a+11|0;d=b[g>>0]|0;e=d<<24>>24<0;if(e){h=f[a+4>>2]|0;d=(f[a+8>>2]&2147483647)+-1|0}else{h=d&255;d=10}if((h|0)==(d|0)){ED(a,d,1,d,d);d=d+1|0;if((b[g>>0]|0)<0)e=8;else e=7}else{d=h+1|0;if(e)e=8;else e=7}if((e|0)==7)b[g>>0]=d;else if((e|0)==8){g=f[a>>2]|0;f[a+4>>2]=d;a=g}h=a+h|0;SBa(h,c);SBa(h+1|0,0);return}function BC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,753,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function CC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,724,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function DC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;g=h+8|0;d=h;e=b+12|0;Bwa(g,e);iua(d,e);e=g+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;b=0;while(1){if(!(Cpa(f[g>>2]|0,f[e>>2]|0,c,d)|0))break;i=ppa(g)|0;i=(Cn(a,f[i>>2]|0)|0)+b|0;bva(g);b=i}u=h;return b|0}function EC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1286,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function FC(a){a=a|0;if(!a)return;else{FC(f[a>>2]|0);FC(f[a+4>>2]|0);zfa(a+16|0);$Ja(a);return}}function GC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;h=i+8|0;e=i+4|0;g=i;b=f[b>>2]|0;c=xAa(b)|0;a=a+36|0;if(!c){b=IAa(b)|0;if(b|0?(d=f[b+8>>2]|0,pJa(d)|0):0){f[g>>2]=d;f[h>>2]=f[g>>2];tE(a,h)}}else{b=f[c+8>>2]|0;if(pJa(b)|0){f[e>>2]=b;f[h>>2]=f[e>>2];tE(a,h)}}u=i;return}function HC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+96|0;d=g;e=b+36|0;b=b+4|0;c=Oe(a,f[e>>2]|0,(f[b>>2]|0)!=0)|0;if(!c)_ua(f[e>>2]|0);else f[e>>2]=c;if((f[b>>2]|0)==0?(a=uya(f[a+40>>2]|0)|0,Ot(d,a,f[e>>2]|0),a=jca(d)|0,hT(d),!a):0)_ua(f[e>>2]|0);u=g;return}function IC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;g=h+8|0;d=h;e=b+8|0;Bwa(g,e);iua(d,e);e=g+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;b=4;while(1){if(!(Cpa(f[g>>2]|0,f[e>>2]|0,c,d)|0))break;i=ppa(g)|0;i=(Cn(a,f[i>>2]|0)|0)+b|0;bva(g);b=i}u=h;return b|0}function JC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g+8|0;d=g+4|0;e=g;if((f[b+8>>2]|0)==(f[a+24>>2]|0)?(b=csa((_ra(f[b+12>>2]|0)|0)+8|0)|0,(b|0)==(f[a+28>>2]|0)):0){b=f[a+20>>2]|0;gKa(b)|0;VBa(d,b);f[e>>2]=f[a+32>>2];f[c>>2]=f[e>>2];e=q3(d,c,0,0)|0;jva(f[a>>2]|0,e)|0}u=g;return}function KC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,454,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function LC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,519,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function MC(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);Kza(b+16|0);$Ja(b);return}function NC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,903,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function OC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,212,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function PC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1285,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function QC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1905,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function RC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;e=kaa(f[a+32>>2]|0,0)|0;g=b+12|0;h=e+12|0;d=b+16|0;c=0;while(1){if(c>>>0>=(gKa(f[d>>2]|0)|0)>>>0)break;i=bga(g,c)|0;AW(h,DR(a,f[i>>2]|0)|0);c=c+1|0}f[e+8>>2]=f[b+8>>2];Ela(e,f[b+4>>2]|0);return e|0}function SC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,1168,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function TC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,85,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function UC(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;d=h+8|0;c=h;e=a+8|0;Bwa(d,e);iua(c,e);e=d+4|0;b=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[d>>2]|0,f[e>>2]|0,b,c)|0))break;i=ppa(d)|0;if((f[(f[i>>2]|0)+4>>2]|0)==5){g=4;break}bva(d)}if((g|0)==4)f[a+4>>2]=5;u=h;return}function VC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+64|0;c=h+48|0;d=h+4|0;e=h+8|0;g=h;f[d>>2]=a;a=f[b>>2]|0;do if(pJa(a)|0){f[g>>2]=a;f[c>>2]=f[g>>2];fia(e,c);y=0;ja(269,e|0,d|0);g=y;y=0;if(g&1){h=Pa()|0;Rua(e);$a(h|0)}else{a=(f[e+32>>2]|0)!=0;Rua(e);break}}else a=0;while(0);u=h;return a|0}function WC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;f[a+12>>2]=0;f[a+16>>2]=75400;do if(b){if(b>>>0<=214748364){d=nV(b*20|0)|0;break}a=zb(8)|0;y=0;ja(76,a|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(a|0);$a(c|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c*20|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*20|0);return}function XC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>2;g=e+1|0;if(g>>>0>1073741823)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>1;fF(c,i>>2>>>0<536870911?(d>>>0<g>>>0?g:d):1073741823,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=f[b>>2];f[g>>2]=e+4;jF(a,c);M1(c);u=h;return}}function YC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;e=a+4|0;g=a+8|0;if((f[g>>2]|0)!=(f[e>>2]|0))Na(64491,64509,292,64530);JJ(a,385,b);c=d+4|0;while(1){if((f[g>>2]|0)==(f[e>>2]|0)){b=8;break}EW(d,a);b=f[c>>2]|0;f[a>>2]=b;if(!(f[b>>2]|0)){b=6;break}Mb[f[d>>2]&4095](a,b)}if((b|0)==6)Na(64535,64509,297,64530);else if((b|0)==8){u=h;return}}function ZC(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;e=u;u=u+48|0;c=e+16|0;g=e+32|0;d=e;f[g>>2]=f[18953];f[c>>2]=f[g>>2];if(!(J$(a,c)|0)){g=nV(16)|0;iJa(g);f[g>>2]=f[18953];f[g+4>>2]=1;h=cua(a+144|0)|0;uAa(d,0);f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];J5(h,c)|0;f[g+8>>2]=h;b[g+12>>0]=1;du(a,g)}u=e;return}function _C(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;if(f[18711]|0)Vea(Vea(Vea(Vea(Vea(76684,21537)|0,b)|0,21495)|0,c)|0,20502)|0;g=nV(12)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;cCa(g);dCa(d,b);f[g+4>>2]=f[d>>2];dCa(d,c);f[g>>2]=f[d>>2];eu(a,g);u=e;return g|0}function $C(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;e=k+4|0;h=k;f[b+16>>2]=0;i=f[b+20>>2]|0;j=b+24|0;g=f[j>>2]|0;while(1){if((g|0)==(i|0))break;l=g+-4|0;f[j>>2]=l;g=l}f[h>>2]=f[c>>2];f[e>>2]=f[h>>2];Vh(a,b,e,d);u=k;return}function aD(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;g=b[c+11>>0]|0;e=g<<24>>24<0;g=e?f[c+4>>2]|0:g&255;e=e?f[c>>2]|0:c;c=g>>>0<d>>>0?g:d;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{d=c+16&-16;g=QCa(d)|0;f[a>>2]=g;f[a+8>>2]=d|-2147483648;f[a+4>>2]=c;a=g}Pta(a,e,c)|0;SBa(a+c|0,0);return}function bD(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[18848]|0;d=a+4|0;b=f[18849]|0;while(1){if((b|0)==(c|0))break;e=b+-20|0;eE((f[d>>2]|0)+-20|0,e);f[d>>2]=(f[d>>2]|0)+-20;b=e}e=f[18848]|0;f[18848]=f[d>>2];f[d>>2]=e;e=a+8|0;c=f[18849]|0;f[18849]=f[e>>2];f[e>>2]=c;e=a+12|0;c=f[18850]|0;f[18850]=f[e>>2];f[e>>2]=c;f[a>>2]=f[d>>2];return}function cD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;$na(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;D_(d,f[a>>2]|0);a=a+4|0}laa(d,f[b+76>>2]|0,f[b+80>>2]|0);laa(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function dD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;aoa(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;f2(d,f[a>>2]|0);a=a+4|0}maa(d,f[b+76>>2]|0,f[b+80>>2]|0);maa(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function eD(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;h=k;do if((a|0)==(c|0)){f[d>>2]=4;e=0;a=0}else{if((b[a>>0]|0)==45){f[d>>2]=4;e=0;a=0;break}i=f[2619]|0;f[2619]=0;gpa()|0;a=AAa(a,h,e)|0;e=J;g=f[2619]|0;if(!g)f[2619]=i;if((f[h>>2]|0)==(c|0)){if((g|0)==34){a=-1;e=-1;j=8}}else{a=0;e=0;j=8}if((j|0)==8)f[d>>2]=4}while(0);J=e;u=k;return a|0}function fD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;c=g+4|0;d=g;e=b+4|0;if(rCa(f[e>>2]|0)|0){h=b+12|0;i=efa(h)|0;i=f[i>>2]|0;f[d>>2]=f[b+8>>2];e=f[e>>2]|0;f[c>>2]=f[d>>2];d=Rx(a,i,Ho(a,c,e,b,-1)|0)|0;e=efa(h)|0;f[e>>2]=d;Do(b)}u=g;return}function gD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;xoa(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;v2(d,f[a>>2]|0);a=a+4|0}Laa(d,f[b+76>>2]|0,f[b+80>>2]|0);Laa(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function hD(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;d=i;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e|0;h=g+1|0;if((h|0)<0)SZ();else{j=(f[a+8>>2]|0)-e|0;e=j<<1;M$(d,j>>>0<1073741823?(e>>>0<h>>>0?h:e):2147483647,g,a+8|0);h=d+8|0;g=f[h>>2]|0;b[g>>0]=b[c>>0]|0;f[h>>2]=g+1;BF(a,d);m4(d);u=i;return}}function iD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;f[a+12>>2]=0;f[a+16>>2]=74924;do if(b){if(b>>>0<=1073741823){d=nV(b<<2)|0;break}a=zb(8)|0;y=0;ja(76,a|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(a|0);$a(c|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c<<2)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b<<2);return}function jD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-12|0;uS((f[g>>2]|0)+-12|0,h);f[g>>2]=(f[g>>2]|0)+-12;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function kD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Loa(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;xW(d,f[a>>2]|0);a=a+4|0}aba(d,f[b+76>>2]|0,f[b+80>>2]|0);aba(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function lD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Moa(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;D2(d,f[a>>2]|0);a=a+4|0}bba(d,f[b+76>>2]|0,f[b+80>>2]|0);bba(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function mD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;f[d>>2]=b;b=e+4|0;g=UAa(a,0)|0;if(!(jha(f[g>>2]|0,f[18941]|0)|0))Na(23287,51343,1476,23301);g=gKa(F8(1)|0)|0;PDa(b,l6(g,y4(d)|0)|0);g=Ata(c)|0;b=f[b>>2]|0;if(!g)l6(gKa(b)|0,c)|0;g=UAa(a,1)|0;l6(gKa(f[g>>2]|0)|0,b)|0;u=e;return}function nD(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;if(c|0){i=a+11|0;d=b[i>>0]|0;if(d<<24>>24<0){e=(f[a+8>>2]&2147483647)+-1|0;g=f[a+4>>2]|0}else{e=10;g=d&255}h=g+c|0;if((e-g|0)>>>0<c>>>0){ED(a,e,h-e|0,g,g);d=b[i>>0]|0}if(d<<24>>24<0)d=f[a>>2]|0;else d=a;_ma(d+g|0,c,0)|0;if((b[i>>0]|0)<0)f[a+4>>2]=h;else b[i>>0]=h;SBa(d+h|0,0)}return a|0}function oD(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;g=j;h=c+4|0;i=c+8|0;while(1){d=a&127;b[g>>0]=d;a=a>>>7;if(!(pJa(a)|0))break;d=d|-128;b[g>>0]=d;e=f[h>>2]|0;if((e|0)==(f[i>>2]|0))hD(c,g);else{b[e>>0]=d;f[h>>2]=(f[h>>2]|0)+1}}a=f[h>>2]|0;if((a|0)==(f[i>>2]|0))hD(c,g);else{b[a>>0]=d;f[h>>2]=(f[h>>2]|0)+1}u=j;return}function pD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;e=u;u=u+16|0;g=e+4|0;h=e;d=fl(f[a+4>>2]|0)|0;f[h>>2]=d;d=f[a+20>>2]|0;d=Rb[f[(f[d>>2]|0)+8>>2]&127](d,b,1)|0;f[g>>2]=f[h>>2];d=ok(Gaa(b,g,d)|0,a,b,c)|0;a=f[a+8>>2]|0;if(a)d=p5(b,d,Rb[f[(f[a>>2]|0)+8>>2]&127](a,b,c)|0)|0;u=e;return d|0}function qD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-24|0;ZL((f[g>>2]|0)+-24|0,h);f[g>>2]=(f[g>>2]|0)+-24;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function rD(a){a=a|0;W$(a+104|0);E4(a+92|0);E4(a+80|0);CU(a+68|0);E4(a+52|0);yJ(a+40|0);wsa(a);return}function sD(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;Yoa(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;n$(d,f[a>>2]|0);a=a+4|0}rba(d,f[b+76>>2]|0,f[b+80>>2]|0);rba(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function tD(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;c=f[18729]|0;d=a+4|0;b=f[18730]|0;while(1){if((b|0)==(c|0))break;g=(f[d>>2]|0)+-4|0;e=b+-4|0;h=f[e>>2]|0;f[e>>2]=0;f[g>>2]=h;f[d>>2]=(f[d>>2]|0)+-4;b=e}h=f[18729]|0;f[18729]=f[d>>2];f[d>>2]=h;h=a+8|0;g=f[18730]|0;f[18730]=f[h>>2];f[h>>2]=g;h=a+12|0;g=f[18731]|0;f[18731]=f[h>>2];f[h>>2]=g;f[a>>2]=f[d>>2];return}function uD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+64|0;e=h;if(!(bDa(a,b)|0))if((b|0)!=0?(g=cs(b,5696)|0,(g|0)!=0):0){b=e+4|0;d=b+52|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(d|0));f[e>>2]=g;f[e+8>>2]=a;f[e+12>>2]=-1;f[e+48>>2]=1;dc[f[(f[g>>2]|0)+28>>2]&127](g,e,f[c>>2]|0,1);if((f[e+24>>2]|0)==1){f[c>>2]=f[e+16>>2];b=1}else b=0}else b=0;else b=1;u=h;return b|0}function vD(a,c,d){a=a|0;c=c|0;d=d|0;a:do if((a|0)!=(c|0))switch(b[a>>0]|0){case 68:case 67:{a=zi(a,c,d)|0;break a}case 85:{a=Vc(a,c,d)|0;break a}case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{a=Zh(a,c,d)|0;break a}default:return mc(a,c,d)|0}while(0);return a|0}function wD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;a=f[d>>2]|0;do if(a){e=f[c>>2]|0;while(1)if(e>>>0<(f[a+16>>2]|0)>>>0){d=f[a>>2]|0;if(!d){d=5;break}else a=d}else{c=a+4|0;d=f[c>>2]|0;if(!d){d=8;break}else a=d}if((d|0)==5){f[b>>2]=a;break}else if((d|0)==8){f[b>>2]=a;a=c;break}}else{f[b>>2]=d;a=d}while(0);return a|0}function xD(a){a=a|0;f[a>>2]=6764;E4(a+160|0);E4(a+148|0);E4(a+136|0);wsa(a+100|0);jQ(a+84|0);Cta(a+72|0);e3(a+60|0);zca(a+48|0);Uqa(a);return}function yD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-24|0;sI((f[g>>2]|0)+-24|0,h);f[g>>2]=(f[g>>2]|0)+-24;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function zD(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;if((b[c+11>>0]|0)<0){d=f[c>>2]|0;c=f[c+4>>2]|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{g=c+16&-16;e=nV(g)|0;f[a>>2]=e;f[a+8>>2]=g|-2147483648;f[a+4>>2]=c;a=e}Pta(a,d,c)|0;SBa(a+c|0,0)}else{f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2]}return}function AD(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(40)|0;f[a>>2]=e;f[a+4>>2]=c+4;c=a+8|0;b[c>>0]=0;y=0;ja(120,e+16|0,f[d>>2]|0);d=y;y=0;if(d&1){d=Pa()|0;f[a>>2]=0;$Ja(e);$a(d|0)}else{f[e+28>>2]=0;f[e+32>>2]=0;f[e+36>>2]=0;b[c>>0]=1;return}}function BD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;if((OO(a,f[b>>2]|0)|0)==(a+4|0)){e=a+12|0;W0(e,b);e=f[e>>2]|0;b=f[b>>2]|0;f[c>>2]=b;f[c+4>>2]=e;Pv(d+8|0,a,b,c)}u=d;return}function CD(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;i=u;u=u+16|0;h=i;f[g>>2]=d;c=psa(f[a+8>>2]|0)|0;a=hz(h,0)|0;if(c|0)psa(c)|0;a:do switch(a|0){case 0:case -1:{c=2;break}default:{c=a+-1|0;if(c>>>0>(e-(f[g>>2]|0)|0)>>>0)c=1;else while(1){if(!c){c=0;break a}d=b[h>>0]|0;e=f[g>>2]|0;f[g>>2]=e+1;b[e>>0]=d;h=h+1|0;c=c+-1|0}}}while(0);u=i;return c|0}function DD(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0;d=c+20|0;if(b[d>>0]|0?(e=f[a+20>>2]|0,gKa(e)|0,(b[e+114>>0]|0)==0):0)HS(a,c);e=c+8|0;g=c+4|0;fO(a,b[e>>0]|0,f[g>>2]|0,c);i=gKa(f[c+16>>2]|0)|0;vn(a,i,f[g>>2]|0,h[e>>0]|0,(b[d>>0]|0)!=0,c);pk(a,f[(f[c+24>>2]|0)+4>>2]|0,c);return}function ED(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;if((-17-c|0)>>>0<d>>>0)JZ();if((b[a+11>>0]|0)<0)j=f[a>>2]|0;else j=a;if(c>>>0<2147483623){h=d+c|0;i=c<<1;h=h>>>0<i>>>0?i:h;h=h>>>0<11?11:h+16&-16}else h=-17;i=nV(h)|0;if(g|0)Pta(i,j,g)|0;d=e-g|0;if(d|0)Pta(i+g|0,j+g|0,d)|0;if((c|0)!=10)$Ja(j);f[a>>2]=i;f[a+8>>2]=h|-2147483648;return}function FD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=b+8|0;h=f[g>>2]|0;c=a+16|0;fp(a,h>>>0<(Pqa(gKa(f[c>>2]|0)|0)|0)>>>0,b);h=b+12|0;d=f[(f[h>>2]|0)+4>>2]|0;if((d|0)!=5){e=f[b+4>>2]|0;if(e|0)ck(a,d,e,b);e=gKa(f[c>>2]|0)|0;g=YV(e,f[g>>2]|0)|0;jk(a,g,f[(f[h>>2]|0)+4>>2]|0,b)}return}function GD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;g=h+8|0;d=h;e=a+8|0;c=f[e>>2]|0;do if(c>>>0<((f[a+12>>2]|0)+b|0)>>>0){c=c<<1;c=(c>>>0>1024?c:1024)+b|0;f[e>>2]=c;a=a+4|0;b=f[a>>2]|0;if(!b){i=rc(c)|0;f[a>>2]=i;if(i|0)break;f[d>>2]=c;Zna(0,24446,d);Ka()}b=LM(b,c)|0;if(!b){Xe(f[a>>2]|0);f[g>>2]=f[e>>2];Zna(0,24446,g);Ka()}else{f[a>>2]=b;break}}while(0);u=h;return}function HD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+16|0;c=f[e>>2]|0;if((c|0)!=(a|0)){if(c|0)Lb[f[(f[c>>2]|0)+20>>2]&511](c)}else Lb[f[(f[c>>2]|0)+16>>2]&511](c);f[e>>2]=0;c=b+16|0;d=f[c>>2]|0;do if(d|0){if((d|0)!=(b|0)){f[e>>2]=d;f[c>>2]=0;break}b=gKa(a)|0;f[e>>2]=b;e=f[c>>2]|0;y=0;ja(f[(f[e>>2]|0)+12>>2]|0,e|0,b|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}}while(0);return a|0}function ID(a,c){a=a|0;c=c|0;var d=0,e=0;e=u;u=u+16|0;d=e;sp(d,a,c);c=f[d>>2]|0;f[d>>2]=0;if(c|0){if(b[d+8>>0]|0)Zva(c+8|0);$Ja(c)}u=e;return}function JD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;d=f[a>>2]|0;a:do if((d|0)==(f[b>>2]|0)){e=a+8|0;g=b+8|0;switch(d|0){case 0:{c=1;break a}case 1:{c=(f[e>>2]|0)==(f[g>>2]|0);break a}case 3:{c=+Hoa(a)==+Hoa(b);break a}case 2:{c=g;c=(f[e>>2]|0)==(f[c>>2]|0)?(f[e+4>>2]|0)==(f[c+4>>2]|0):0;break a}case 4:{c=+Goa(a)==+Goa(b);break a}default:Ka()}}else c=0;while(0);return c|0}function KD(a,c){a=a|0;c=c|0;var d=0,e=0;e=nV(72)|0;f[a>>2]=e;f[a+4>>2]=75860;d=a+8|0;b[d>>0]=0;a=e+16|0;c=f[c>>2]|0;f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}sba(e+32|0);b[d>>0]=1;return}function LD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;while(1){if((a|0)==(b|0))break;if(P5(f[f[a>>2]>>2]|0)|0){c=a;d=a;e=5;break}a=a+4|0}a:do if((e|0)==5)while(1){a=c;do{a=a+4|0;if((a|0)==(b|0)){b=d;break a}}while((P5(f[f[a>>2]>>2]|0)|0)!=0);f[d>>2]=f[a>>2];c=a;d=d+4|0;e=5}while(0);return b|0}function MD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;NBa(a);c=f[c+8>>2]|0;if(!((c|0)!=0?(YX(d,b,c),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],FBa(a)|0):0))f[a+16>>2]=f[18770];u=e;return}function ND(a){a=a|0;if(!a)return;else{ND(f[a>>2]|0);ND(f[a+4>>2]|0);Ula(a+16|0);$Ja(a);return}}function OD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=d+4|0;f[c>>2]=b;VBa(e,a);a=yra(f[e>>2]|0,b)|0;if(f[18711]|0){b=qN(a)|0;b=Vea(vj(Vea(76684,20507)|0,b)|0,21131)|0;e=EN(74808,c)|0;Vea(vj(b,f[e>>2]|0)|0,20144)|0}u=d;return a|0}function PD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=f[a+48>>2]|0;h=((f[a+52>>2]|0)-g|0)/12|0;if((h|0)!=(f[a+44>>2]|0))Na(32216,32248,235,32270);c=b+8|0;d=f[c>>2]|0;if(d>>>0<h>>>0){f[e>>2]=b;lu(g+(d*12|0)|0,e,e+4|0);h=gKa(f[a+32>>2]|0)|0;h=zra(a,YV(h,f[c>>2]|0)|0)|0;f[c>>2]=h;u=i;return}else Na(32284,32248,236,32270)}function QD(a,c){a=a|0;c=c|0;var d=0,e=0;d=a+44|0;e=f[d>>2]|0;c=c+24|0;if(!(bv(e,c)|0))Na(47141,46231,89,46915);else{e=aj(e,c)|0;f[e>>2]=(f[e>>2]|0)+1;d=f[d>>2]|0;e=f[a+32>>2]|0;gKa(e)|0;e=(aj(d,e)|0)+8|0;b[e>>0]=0;return}}function RD(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;if((c-a|0)>1){if((b[a>>0]|0)==83?(b[a+1>>0]|0)==116:0){e=a+2|0;if((e|0)==(c|0)){g=0;e=c}else{g=0;e=(b[e>>0]|0)==76?a+3|0:e}}else{g=1;e=a}c=vD(e,c,d)|0;e=(c|0)==(e|0);if(!(g|e)){e=f[d+4>>2]|0;if((f[d>>2]|0)!=(e|0)){x4(e+-24|0,0,72379)|0;a=c}}else a=e?a:c}return a|0}function SD(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=u;u=u+16|0;e=g;V6(a);f[a>>2]=14860;f[a+32>>2]=c;zwa(e,f[a+4>>2]|0);y=0;c=ua(46,f[e>>2]|0,79356)|0;h=y;y=0;if(h&1){h=Pa()|0;pza(e);uwa(a);$a(h|0)}else{pza(e);f[a+36>>2]=c;f[a+40>>2]=d;h=(Ob[f[(f[c>>2]|0)+28>>2]&255](c)|0)&1;b[a+44>>0]=h;u=g;return}}function TD(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=u;u=u+16|0;e=g;W6(a);f[a>>2]=14924;f[a+32>>2]=c;zwa(e,f[a+4>>2]|0);y=0;c=ua(46,f[e>>2]|0,79348)|0;h=y;y=0;if(h&1){h=Pa()|0;pza(e);vwa(a);$a(h|0)}else{pza(e);f[a+36>>2]=c;f[a+40>>2]=d;h=(Ob[f[(f[c>>2]|0)+28>>2]&255](c)|0)&1;b[a+44>>0]=h;u=g;return}}function UD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-16|0;Ioa((f[g>>2]|0)+-16|0,h);f[g>>2]=(f[g>>2]|0)+-16;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function VD(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;switch(f[b+12>>2]|0){case 0:{f[c>>2]=0;f[c+4>>2]=f[b>>2];b=(aI(a+40|0,c)|0)==0;break}case 3:{f[c>>2]=1;f[c+4>>2]=f[b>>2];b=(aI(a+40|0,c)|0)==0;break}default:b=0}u=d;return b|0}function WD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i;if(!(RDa(f[a>>2]|0)|0)){a=pAa(a)|0;if(((a|0)!=0?(g=Y$(a+8|0)|0,h=J,!(h>>>0>0|(h|0)==0&g>>>0>4294967295)):0)?(e=gKa(b)|0,b=Hsa(e|0,0,g|0,h|0)|0,a=J,!(a>>>0>0|(a|0)==0&b>>>0>4294967295)):0){$la(d,g,h);a=e+(gKa(f[d>>2]|0)|0)|0;a=a>>>0<=(gKa(c)|0)>>>0}else a=0}else a=1;u=i;return a|0}function XD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+32|0;a:do if((b|0)==(f[a+24>>2]|0)){c=(f[b+12>>2]|0)+4|0;d=a+36|0;b=f[d>>2]|0;if((b|0)==(f[a+40>>2]|0)){XC(e,c);break}else{f[b>>2]=f[c>>2];f[d>>2]=b+4;break}}else if(bDa(f[b+8>>2]|0,f[a+28>>2]|0)|0){d=f[e>>2]|0;b=a+36|0;c=f[b>>2]|0;while(1){if((c|0)==(d|0))break a;a=c+-4|0;f[b>>2]=a;c=a}}while(0);return}function YD(a){a=a|0;var b=0,c=0,d=0;a=eAa(a)|0;if((((((((a|0)!=0?(f[a+8>>2]|0)==12:0)?(d=pAa(f[a+16>>2]|0)|0,(d|0)!=0):0)?(csa(d+8|0)|0)!=0:0)?(b=eAa(f[a+12>>2]|0)|0,(b|0)!=0):0)?(f[b+8>>2]|0)==10:0)?(c=pAa(f[b+16>>2]|0)|0,(c|0)!=0):0)?(d=FR(d)|0,d>>>0<=(FR(c)|0)>>>0):0)a=f[b+12>>2]|0;else a=0;return a|0}function ZD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=c+12|0;d=a+16|0;c=c+8|0;do{NM(a,b,f[e>>2]|0);if(!(FBa(a)|0))break}while(bDa(f[d>>2]|0,f[c>>2]|0)|0);return}function _D(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;c=u;u=u+16|0;g=c+4|0;h=c;f[h>>2]=f[b+24>>2];e=DR(a,f[b+28>>2]|0)|0;d=DR(a,f[b+32>>2]|0)|0;f[g>>2]=f[h>>2];b=jV(a+32|0,b+8|0,g,e,d)|0;u=c;return b|0}function $D(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a:do if((b|0)!=(c|0)){e=a+4|0;d=f[e>>2]|0;a=c;while(1){if((a|0)==(d|0))break;g=f[a>>2]|0;f[a>>2]=0;c=f[b>>2]|0;f[b>>2]=g;if(c|0)$Ja(c);b=b+4|0;a=a+4|0}while(1){a=f[e>>2]|0;if((a|0)==(b|0))break a;g=a+-4|0;f[e>>2]=g;a=f[g>>2]|0;f[g>>2]=0;if(!a)continue;$Ja(a)}}while(0);return}function aE(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;e=u;u=u+16|0;d=e+8|0;b=e;c=a+12|0;Bwa(d,c);iua(b,c);c=d+4|0;a=f[b>>2]|0;b=f[b+4>>2]|0;while(1){if(!(Cpa(f[d>>2]|0,f[c>>2]|0,a,b)|0)){a=0;break}g=ppa(d)|0;if((f[(f[g>>2]|0)+4>>2]|0)==5){a=1;break}bva(d)}u=e;return a|0}function bE(a){a=a|0;if(!a)return;else{bE(f[a>>2]|0);bE(f[a+4>>2]|0);toa(a+16|0);$Ja(a);return}}function cE(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;c=k+8|0;d=k;e=a+36|0;g=a+40|0;h=c+8|0;i=c;b=a+32|0;a:while(1){a=f[e>>2]|0;a=Yb[f[(f[a>>2]|0)+20>>2]&31](a,f[g>>2]|0,c,h,d)|0;l=(f[d>>2]|0)-i|0;if((Jca(c,1,l,f[b>>2]|0)|0)!=(l|0)){a=-1;break}switch(a|0){case 1:break;case 2:{a=-1;break a}default:{j=4;break a}}}if((j|0)==4)a=((ZP(f[b>>2]|0)|0)!=0)<<31>>31;u=k;return a|0}function dE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;f[d>>2]=b;c=f[f[a>>2]>>2]|0;e=b;do if((c|0)!=(b|0)?!(bN(b,c)|0):0){c=f[a+4>>2]|0;a=c+4|0;b=f[a>>2]|0;if((b|0)==(f[c+8>>2]|0)){XC(c,d);a=1;break}else{f[b>>2]=e;f[a>>2]=(f[a>>2]|0)+4;a=1;break}}else a=0;while(0);u=g;return a|0}function eE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;d=f[b>>2]|0;f[b>>2]=0;g=b+4|0;e=f[g>>2]|0;f[g>>2]=0;f[a>>2]=d;f[a+4>>2]=e;g=a+8|0;h=b+8|0;c=f[h>>2]|0;f[g>>2]=c;i=b+12|0;j=f[i>>2]|0;f[a+12>>2]=j;f[a+16>>2]=f[b+16>>2];if(j|0){a=f[c+4>>2]|0;b=e+-1|0;if(b&e){if(a>>>0>=e>>>0)a=(a>>>0)%(e>>>0)|0}else a=b&a;f[d+(a<<2)>>2]=g;f[h>>2]=0;f[i>>2]=0}return}function fE(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+16|0;g=h;f[g>>2]=0;d=(b[c+11>>0]|0)<0?f[c>>2]|0:c;j=f[2619]|0;f[2619]=0;e=Rxa(d,g,0)|0;c=J;i=f[2619]|0;f[2619]=j;if((i|0)==34)SJ(a);if((f[g>>2]|0)==(d|0))$J(a);J=c;u=h;return e|0}function gE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(((e|0)/-20|0)*20|0)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function hE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;e=g;c=b+8|0;f[e>>2]=1;f[e+4>>2]=f[c>>2];if(!(aI(a+40|0,e)|0)){f[e>>2]=1;d=a+32|0;b=f[d>>2]|0;if(b>>>0<(f[a+36>>2]|0)>>>0){f[b>>2]=1;f[b+4>>2]=f[c>>2];f[d>>2]=(f[d>>2]|0)+8}else Ey(a+28|0,e,c)}u=g;return}function iE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-8|0;Aua((f[g>>2]|0)+-8|0,h);f[g>>2]=(f[g>>2]|0)+-8;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function jE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=214748364){d=nV(b*20|0)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c*20|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*20|0);return}function kE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+96|0;c=g;b=Iza(b)|0;if((b|0?(d=f[b+8>>2]|0,e=f[a+4>>2]|0,xwa(f[e+24>>2]|0,d)|0):0)?(h=f[(f[f[a+8>>2]>>2]|0)+(d<<2)>>2]|0,(h|0)==(vAa(f[e+48>>2]|0,d)|0)):0){Ot(c,f[a+12>>2]|0,f[b+12>>2]|0);h=jca(c)|0;hT(c);u=g;return (h?0:b)|0}u=g;return 0}function lE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(((e|0)/-12|0)*12|0)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function mE(a){a=a|0;if(!a)return;else{mE(f[a>>2]|0);mE(f[a+4>>2]|0);goa(a+16|0);$Ja(a);return}}function nE(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;i=a+12|0;j=a+16|0;h=0;while(1){if((h|0)>=(d|0))break;e=f[i>>2]|0;g=f[j>>2]|0;if(e>>>0<g>>>0){g=g-e|0;k=d-h|0;g=(k|0)<(g|0)?k:g;Pta(c,e,g)|0;f[i>>2]=(f[i>>2]|0)+g;c=c+g|0;h=g+h|0;continue}e=Ob[f[(f[a>>2]|0)+40>>2]&255](a)|0;if((e|0)==-1)break;k=oHa(e)|0;b[c>>0]=k;c=c+1|0;h=h+1|0}return h|0}function oE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=357913941){d=nV(b*12|0)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c*12|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*12|0);return}function pE(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;i=a+24|0;j=a+28|0;e=0;while(1){if((e|0)>=(d|0))break;g=f[i>>2]|0;h=f[j>>2]|0;if(g>>>0<h>>>0){h=h-g|0;k=d-e|0;h=(k|0)<(h|0)?k:h;Pta(g,c,h)|0;f[i>>2]=(f[i>>2]|0)+h;c=c+h|0;e=h+e|0;continue}h=f[(f[a>>2]|0)+52>>2]|0;k=oHa(b[c>>0]|0)|0;if((Xb[h&255](a,k)|0)==-1)break;c=c+1|0;e=e+1|0}return e|0}function qE(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;do if((f[a+64>>2]|0)!=0?(g=a+12|0,e=f[g>>2]|0,(f[a+8>>2]|0)>>>0<e>>>0):0){if(bDa(c,-1)|0){f[g>>2]=e+-1;c=Awa(c)|0;break}if(!(f[a+88>>2]&16)){d=oHa(c)|0;a=e+-1|0;if(!(CAa(d,b[a>>0]|0)|0)){c=-1;break}}else{d=oHa(c)|0;a=e+-1|0}f[g>>2]=a;b[a>>0]=d}else c=-1;while(0);return c|0}function rE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;f[d>>2]=b;b=e+4|0;g=UAa(a,0)|0;if(jha(f[g>>2]|0,f[18861]|0)|0){g=UAa(a,1)|0;g=gKa(f[g>>2]|0)|0;a=gKa(F8(2)|0)|0;PDa(b,l6(l6(a,y4(d)|0)|0,c)|0);l6(g,f[b>>2]|0)|0;u=e;return}else Na(23348,51343,1625,23367)}function sE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;N0(d,a,b);b=f[d>>2]|0;d=wD(a,e,b+16|0)|0;lN(a,f[e>>2]|0,d,b);u=c;return}function tE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;d=a+4|0;e=f[d>>2]|0;if(bDa(f[e+-4>>2]|0,f[b>>2]|0)|0)c=0;else Na(33360,33386,247,33400);while(1){if((c|0)==-1)break;g=c+-1|0;f[d>>2]=e+(g<<2);c=g}a=(NK(a+12|0,CM(a+24|0,b)|0)|0)+4|0;b=f[a>>2]|0;c=0;while(1){if((c|0)==-1)break;g=c+-1|0;f[a>>2]=b+(g<<2);c=g}return}function uE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;YX(d,b,c);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else NBa(a);u=e;return}function vE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+4|0;g=j;d=f[a+16>>2]|0;gKa(d)|0;i=(c|0)==0;e=EFa(a)|0;a=d;d=h;while(1){f[d>>2]=a;a=f[h>>2]|0;d=a;if((d|0)==(e|0))break;a=a+8|0;if(!(!i?!(_qa(c,f[a>>2]|0)|0):0))BD(b,a);f[h>>2]=f[d+4>>2];a=d;d=g}u=j;return}function wE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-16|0;OT((f[g>>2]|0)+-16|0,h);f[g>>2]=(f[g>>2]|0)+-16;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function xE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;f[a+12>>2]=0;f[a+16>>2]=75388;do if(b){if(b>>>0<=107374182){d=nV(b*40|0)|0;break}a=zb(8)|0;y=0;ja(76,a|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(a|0);$a(c|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c*40|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*40|0);return}function yE(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=u;u=u+128|0;k=h+16|0;l=h+12|0;i=h;j=h+8|0;f[l>>2]=k+100;sK(a,k,l,d,e,g);d=i;f[d>>2]=0;f[d+4>>2]=0;f[j>>2]=k;d=RBa(b,f[c>>2]|0)|0;a=psa(f[a>>2]|0)|0;d=Ag(b,j,d,i)|0;if(a|0)psa(a)|0;if((d|0)==-1)l2(69410);else{f[c>>2]=b+(d<<2);u=h;return}}function zE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;c=i;a=pAa(a)|0;if((a|0?(e=a+8|0,g=csa(e)|0,h=gKa(f[b>>2]|0)|0,(h|g|0)>=0):0)?(d=Hsa(h|0,0,g|0,((g|0)<0)<<31>>31|0)|0,h=J,!(h>>>0>0|(h|0)==0&d>>>0>2147483647)):0){uAa(c,d);f[e>>2]=f[c>>2];f[e+4>>2]=f[c+4>>2];f[e+8>>2]=f[c+8>>2];f[e+12>>2]=f[c+12>>2];eja(b,0,0)|0}u=i;return}function AE(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=d+74|0;g=b[e>>0]|0;b[e>>0]=g+255|g;e=d+4|0;g=f[e>>2]|0;i=(f[d+8>>2]|0)-g|0;h=i>>>0<c>>>0?i:c;if((i|0)>0){rq(a|0,g|0,h|0)|0;f[e>>2]=g+h;e=c-h|0;a=a+h|0}else e=c;a:do if(e){h=d+32|0;while(1){if(yL(d)|0)break;g=Rb[f[h>>2]&127](d,a,e)|0;if((g+1|0)>>>0<2)break;e=e-g|0;if(!e)break a;else a=a+g|0}c=c-e|0}while(0);return c|0}function BE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;h=c+-24|0;wJ((f[g>>2]|0)+-24|0,h);f[g>>2]=(f[g>>2]|0)+-24;c=h}d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=b+8|0;h=f[e>>2]|0;f[e>>2]=f[d>>2];f[d>>2]=h;d=a+8|0;h=b+12|0;e=f[d>>2]|0;f[d>>2]=f[h>>2];f[h>>2]=e;f[b>>2]=f[g>>2];return}function CE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=178956970){d=nV(b*24|0)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c*24|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*24|0);return}function DE(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0;b=u;u=u+16|0;h=b+8|0;i=b+4|0;j=b;c=f[a>>2]|0;VBa(i,f[c>>2]|0);f[j>>2]=f[f[a+4>>2]>>2];g=f[a+8>>2]|0;e=f[f[a+12>>2]>>2]|0;d=f[a+16>>2]|0;f[h>>2]=f[j>>2];d=sn(i,h,g,e,d,0)|0;c=c+84|0;a=f[c>>2]|0;f[c>>2]=d;if(a|0){XV(a);$Ja(a)}u=b;return}function EE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;g=u;u=u+32|0;d=g;e=g+8|0;YH(a,b);y=0;ja(1940,e|0,b|0);b=y;y=0;if(b&1){g=Pa()|0;E4(a);$a(g|0)}else{h=f[a>>2]|0;b=f[a+4>>2]|0;f[d>>2]=c;f[d+4>>2]=e;zf(h,b,d);E4(e);u=g;return}}function FE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;e=g;c=b+24|0;f[e>>2]=0;f[e+4>>2]=f[c>>2];if(!(aI(a+40|0,e)|0)){f[e>>2]=0;d=a+32|0;b=f[d>>2]|0;if(b>>>0<(f[a+36>>2]|0)>>>0){f[b>>2]=0;f[b+4>>2]=f[c>>2];f[d>>2]=(f[d>>2]|0)+8}else Ey(a+28|0,e,c)}u=g;return}function GE(a,c){a=a|0;c=c|0;var d=0,e=0;e=nV(72)|0;f[a>>2]=e;f[a+4>>2]=75860;d=a+8|0;b[d>>0]=0;y=0;ja(120,e+16|0,f[c>>2]|0);c=y;y=0;if(c&1){c=Pa()|0;f[a>>2]=0;$Ja(e);$a(c|0)}else{sba(e+32|0);b[d>>0]=1;return}}function HE(a){a=a|0;if(!a)return;else{HE(f[a>>2]|0);HE(f[a+4>>2]|0);Toa(a+16|0);$Ja(a);return}}function IE(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)|0;do if(d|0){y=0;ja(1726,a|0,(d|0)/12|0|0);d=y;y=0;if(d&1){d=Pa()|0;e2(a);$a(d|0)}else{zX(a,f[b>>2]|0,f[c>>2]|0);break}}while(0);return}function JE(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;e=UAa(c,1)|0;X$(a,f[e>>2]|0,c,0);gP(a,40);e=UAa(c,2)|0;e=f[e>>2]|0;d=0;while(1){if(d>>>0>=(yja(gKa(e)|0)|0)>>>0)break;do if(d|0)if(!(b[a>>0]|0)){gP(a,44);break}else{l$(a,72307);break}while(0);g=UAa(e,d)|0;X$(a,f[g>>2]|0,c,0);d=d+1|0}gP(a,41);return}function KE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;g=h;e=a+4|0;d=f[e>>2]|0;c=-5-b+((f[d+4>>2]|0)-(f[d>>2]|0))|0;PDa(g,c);g=Et(d,b,f[g>>2]|0)|0;if((g|0)!=5){if(g>>>0>=5)Na(58914,54283,99,58944);a=f[e>>2]|0;d=f[a>>2]|0;if(c){S0(d+(g+b)|0,d+(b+5)|0,c|0)|0;a=f[e>>2]|0}WO(a,g+-5+(f[a+4>>2]|0)-(f[a>>2]|0)|0)}u=h;return}function LE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=2016;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,2016,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function ME(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;c=g+8|0;e=g;d=f[b>>2]|0;if(pJa(d)|0){h=a+68|0;i=(SN(h,b)|0)==(a+72|0);f[e>>2]=d;f[c>>2]=f[e>>2];eo(a,i,c,59743)|0;jz(c,h,b,b)}u=g;return}function NE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(0-(e>>3)<<3)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function OE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;h=a+12|0;i=a+16|0;g=0;while(1){if((g|0)>=(c|0))break;d=f[h>>2]|0;e=f[i>>2]|0;if(d>>>0<e>>>0){e=e-d>>2;j=c-g|0;e=(j|0)<(e|0)?j:e;awa(b,d,e);f[h>>2]=(f[h>>2]|0)+(e<<2);b=b+(e<<2)|0;g=e+g|0;continue}d=Ob[f[(f[a>>2]|0)+40>>2]&255](a)|0;if((d|0)==-1)break;j=gKa(d)|0;f[b>>2]=j;b=b+4|0;g=g+1|0}return g|0}function PE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=536870911){d=nV(b<<3)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c<<3)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b<<3);return}function QE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(0-(e>>4)<<4)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function RE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;h=a+24|0;i=a+28|0;d=0;while(1){if((d|0)>=(c|0))break;e=f[h>>2]|0;g=f[i>>2]|0;if(e>>>0<g>>>0){g=g-e>>2;j=c-d|0;g=(j|0)<(g|0)?j:g;awa(e,b,g);f[h>>2]=(f[h>>2]|0)+(g<<2);b=b+(g<<2)|0;d=g+d|0;continue}g=f[(f[a>>2]|0)+52>>2]|0;j=gKa(f[b>>2]|0)|0;if((Xb[g&255](a,j)|0)==-1)break;b=b+4|0;d=d+1|0}return d|0}function SE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h+4|0;e=h;g=wAa(b)|0;if(!g){d=mAa(b)|0;if(d|0?aea(d)|0:0)zm(a,d,c)}else if(R4(g)|0){f[e>>2]=f[g+8>>2];g=f[g+12>>2]|0;f[d>>2]=f[e>>2];fA(a,d,c,g)}u=h;return}function TE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=268435455){d=nV(b<<4)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c<<4)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b<<4);return}function UE(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;d=ua(46,f[h>>2]|0,77588)|0;j=y;y=0;if(j&1){j=Pa()|0;pza(h);$a(j|0)}else{pza(h);UL(a,g+16|0,b,f[c>>2]|0,e,d);u=i;return f[b>>2]|0}return 0}function VE(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;d=ua(46,f[h>>2]|0,77588)|0;j=y;y=0;if(j&1){j=Pa()|0;pza(h);$a(j|0)}else{pza(h);pM(a,g+24|0,b,f[c>>2]|0,e,d);u=i;return f[b>>2]|0}return 0}function WE(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;d=ua(46,f[h>>2]|0,77556)|0;j=y;y=0;if(j&1){j=Pa()|0;pza(h);$a(j|0)}else{pza(h);VL(a,g+16|0,b,f[c>>2]|0,e,d);u=i;return f[b>>2]|0}return 0}function XE(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;d=ua(46,f[h>>2]|0,77556)|0;j=y;y=0;if(j&1){j=Pa()|0;pza(h);$a(j|0)}else{pza(h);qM(a,g+24|0,b,f[c>>2]|0,e,d);u=i;return f[b>>2]|0}return 0}function YE(a,b){a=a|0;b=b|0;var c=0;c3(f[a>>2]|0,40)|0;c=f[a>>2]|0;Vea(Vea(c,F$(f[b+20>>2]|0)|0)|0,39077)|0;zea(a);kF(a,f[b+8>>2]|0);kF(a,f[b+12>>2]|0);kF(a,f[b+16>>2]|0);x_(a);return}function ZE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;b=g;d=a+80|0;c=f[d>>2]|0;f[b>>2]=c;Yv(a+16|0);Yz(c,f[d>>2]|0);d=a+100|0;e=f[d>>2]|0;if((e|0)==(f[a+104>>2]|0))XC(a+96|0,b);else{f[e>>2]=c;f[d>>2]=(f[d>>2]|0)+4}u=g;return}function _E(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0;i=f[b+8>>2]|0;g=h[b+12>>0]|0;e=gKa(f[b+16>>2]|0)|0;d=DR(a,f[b+20>>2]|0)|0;c=DR(a,f[b+24>>2]|0)|0;return OR(f[a+32>>2]|0,i,g,e,d,c,f[b+4>>2]|0)|0}function $E(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+80|0;d=e;KP(d,a,b);y=0;c=oa(38,d|0,f[b+36>>2]|0,c|0)|0;b=y;y=0;if(b&1){e=Pa()|0;e$(d);$a(e|0)}else{e$(d);u=e;return c|0}return 0}function aF(a){a=a|0;if(!a)return;else{aF(f[a>>2]|0);aF(f[a+4>>2]|0);$Ja(a);return}}function bF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=935;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,935,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function cF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1140;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1140,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function dF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1517;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1517,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function eF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i;if((a|0)==(b|0)){f[c>>2]=4;d=0;a=0}else{h=f[2619]|0;f[2619]=0;gpa()|0;a=SAa(a,g,d)|0;d=J;e=f[2619]|0;if(!e)f[2619]=h;if((f[g>>2]|0)==(b|0)){if((e|0)==34){f[c>>2]=4;d=(d|0)>0|(d|0)==0&a>>>0>0;a=d?-1:0;d=d?2147483647:-2147483648}}else{f[c>>2]=4;a=0;d=0}}J=d;u=i;return a|0}function fF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;do if(b){if(b>>>0<=1073741823){d=nV(b<<2)|0;break}d=zb(8)|0;y=0;ja(76,d|0,70649);c=y;y=0;if(c&1){c=Pa()|0;Oa(d|0);$a(c|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}else d=0;while(0);f[a>>2]=d;c=d+(c<<2)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b<<2);return}function gF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1479;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1479,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function hF(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;e=g;f[e>>2]=0;c=(b[c+11>>0]|0)<0?f[c>>2]|0:c;i=f[2619]|0;f[2619]=0;d=dBa(c,e)|0;h=f[2619]|0;f[2619]=i;if((h|0)==34)SJ(a);if((f[e>>2]|0)==(c|0))$J(a);u=g;return d|0}function iF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;h=u;u=u+16|0;j=h+8|0;i=h+4|0;g=h;a=a+4|0;k=f[a>>2]|0;PDa(j,(e?2:0)|d&1);Un(k,f[j>>2]|0)|0;e=f[a>>2]|0;PDa(i,gKa(b)|0);Un(e,f[i>>2]|0)|0;if(d){k=f[a>>2]|0;PDa(g,gKa(c)|0);Un(k,f[g>>2]|0)|0}u=h;return}function jF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(0-(e>>2)<<2)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function kF(a,c){a=a|0;c=c|0;var d=0;if(!(b[a+8>>0]|0))zaa(f[a>>2]|0,f[a+4>>2]|0)|0;if(b[a+20>>0]|0){d=Vea(f[a>>2]|0,37658)|0;Vea(Vea(d,F$(f[c+4>>2]|0)|0)|0,59873)|0}Mm(a,c);Vea(f[a>>2]|0,f[a+16>>2]|0)|0;return}function lF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=b+8|0;uk(a,f[(f[c>>2]|0)+4>>2]|0,b,63263);e=b+12|0;uk(a,f[(f[e>>2]|0)+4>>2]|0,b,63289);ip(a,(f[(f[b+16>>2]|0)+4>>2]|4|0)==5,b);c=f[(f[c>>2]|0)+4>>2]|0;if((c|0)!=5?(d=f[(f[e>>2]|0)+4>>2]|0,(d|0)!=5):0)kk(a,c,d,b);return}function mF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=299;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,299,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function nF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;b=a+96|0;c=a+80|0;d=a+100|0;e=f[d>>2]|0;if((e|0)==(f[a+104>>2]|0))XC(b,c);else{f[e>>2]=f[c>>2];f[d>>2]=(f[d>>2]|0)+4}Yv(a+16|0);a=f[b>>2]|0;Yz(f[a+(((f[d>>2]|0)-a>>2)+-2<<2)>>2]|0,f[c>>2]|0);return}function oF(){var a=0,b=0,c=0,d=0;a=f[18849]|0;d=f[18848]|0;b=a-d|0;c=(b|0)/20|0;a:do if(c>>>0>=4){if((b|0)!=80){b=d+80|0;while(1){if((a|0)==(b|0))break a;d=a+-20|0;f[18849]=d;Sma(d);a=f[18849]|0}}}else Rr(4-c|0);while(0);return}function pF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=784;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,784,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function qF(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+48|0;h=i+32|0;g=i+16|0;d=i;if(Nt(67424,b[c>>0]|0,4)|0){e=hX(c)|0;f[d>>2]=a;f[d+4>>2]=e|32768;f[d+8>>2]=438;d=Qza(xb(5,d|0)|0)|0;if((d|0)>=0){if(e&524288|0){f[g>>2]=d;f[g+4>>2]=2;f[g+8>>2]=1;Da(221,g|0)|0}a=eq(d,c)|0;if(!a){f[h>>2]=d;wb(6,h|0)|0;a=0}}else a=0}else{f[2619]=22;a=0}u=i;return a|0}function rF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=991;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,991,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function sF(a,c){a=a|0;c=c|0;var d=0;d=a+11|0;if((b[d>>0]|0)<0){SBa(f[a>>2]|0,0);f[a+4>>2]=0}else{SBa(a,0);b[d>>0]=0}y=0;ia(377,a|0);d=y;y=0;if(d&1){d=ab(0)|0;lDa(d)}f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];d=0;while(1){if((d|0)==3)break;f[c+(d<<2)>>2]=0;d=d+1|0}HD(a+16|0,c+16|0)|0;return a|0}function tF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=812;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,812,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function uF(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;a=ua(46,f[h>>2]|0,77588)|0;d=y;y=0;if(d&1){g=Pa()|0;pza(h);$a(g|0)}else{pza(h);CQ(g+20|0,b,f[c>>2]|0,e,a);u=i;return f[b>>2]|0}return 0}function vF(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;i=u;u=u+16|0;h=i;Axa(h,d);y=0;a=ua(46,f[h>>2]|0,77556)|0;d=y;y=0;if(d&1){g=Pa()|0;pza(h);$a(g|0)}else{pza(h);DQ(g+20|0,b,f[c>>2]|0,e,a);u=i;return f[b>>2]|0}return 0}function wF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+16|0;e=c+4|0;g=c;f[g>>2]=f[b+8>>2];d=DR(a,f[b+12>>2]|0)|0;b=DR(a,f[b+16>>2]|0)|0;f[e>>2]=f[g>>2];b=q3(a+32|0,e,d,b)|0;u=c;return b|0}function xF(a){a=a|0;if(!a)return;else{xF(f[a>>2]|0);xF(f[a+4>>2]|0);$Ja(a);return}}function yF(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(24)|0;f[a>>2]=g;f[a+4>>2]=c+8;f[g+8>>2]=f[f[e>>2]>>2];e=g+12|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;wCa(e);b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function zF(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;d=UAa(a,0)|0;if(jha(f[d>>2]|0,f[18925]|0)|0){d=UAa(a,2)|0;d=gKa(f[d>>2]|0)|0;a=gKa(F8(2)|0)|0;a=l6(a,Fca()|0)|0;PDa(b,l6(a,F8(0)|0)|0);l6(d,f[b>>2]|0)|0;u=c;return}else Na(23722,51343,1562,23798)}function AF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=63;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,63,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function BF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;d=f[a>>2]|0;h=a+4|0;g=b+4|0;e=(f[h>>2]|0)-d|0;c=(f[g>>2]|0)+(0-e)|0;f[g>>2]=c;if((e|0)>0){rq(c|0,d|0,e|0)|0;d=g;c=f[g>>2]|0}else d=g;g=f[a>>2]|0;f[a>>2]=c;f[d>>2]=g;g=b+8|0;e=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=e;g=a+8|0;h=b+12|0;a=f[g>>2]|0;f[g>>2]=f[h>>2];f[h>>2]=a;f[b>>2]=f[d>>2];return}function CF(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)|0;do if(d|0){y=0;ja(448,a|0,(d|0)/12|0|0);d=y;y=0;if(!(d&1)?(y=0,ya(76,a|0,f[b>>2]|0,f[c>>2]|0),d=y,y=0,!(d&1)):0)break;d=Pa()|0;mU(a);$a(d|0)}while(0);return}function DF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=609;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,609,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function EF(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;e=Sra(f[a+12>>2]|0)|0;b=_ra(f[a+16>>2]|0)|0;c=_ra(f[e+16>>2]|0)|0;a=f[e+12>>2]|0;b=b+8|0;c=c+8|0;if(!(JD(b,c)|0)){NG(d,c,b);f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];a=e}u=g;return a|0}function FF(a,c){a=a|0;c=c|0;var d=0;d=f[a+20>>2]|0;gKa(d)|0;if(!(b[d+114>>0]|0))HS(a,c);gk(a,f[c+4>>2]|0,c,62536);gk(a,f[(f[c+8>>2]|0)+4>>2]|0,c,62566);gk(a,f[(f[c+12>>2]|0)+4>>2]|0,c,62602);return}function GF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1788;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1788,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function HF(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;e=u;u=u+16|0;g=e+4|0;h=e;b[a+24>>0]=0;rO(a);c=Vea(BY(76852,c)|0,59831)|0;f[h>>2]=f[d>>2];f[g>>2]=f[h>>2];Mz(g,c)|0;u=e;return}function IF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=pta(a+144|0)|0;if(f[18711]|0){d=qN(a)|0;Vea(vj(Vea(vj(Vea(vj(Vea(76684,20507)|0,d)|0,20522)|0,b)|0,72307)|0,c)|0,19943)|0}f[a+8>>2]=b;f[a+4>>2]=c;return a|0}function JF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=AT(a,b,c)|0;if(!(Xha(f[a>>2]|0,b)|0)?aDa(c,f[18679]|0)|0:0){b=Bea(c)|0;d=Nq(b,f[18859]|0,d)|0;gKa(d)|0}return d|0}function KF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)>>2;do if(d|0){y=0;ja(608,a|0,d|0);e=y;y=0;if(e&1){e=Pa()|0;E4(a);$a(e|0)}else{PZ(a,f[b>>2]|0,f[c>>2]|0,d);break}}while(0);return}function LF(a){a=a|0;var b=0;if((Qw(a)|0)==75860)a=0;else{b=(FI(a)|0)+32|0;b=$6(f[b>>2]|0)|0;M_(b+4|0,a)|0;a=b}return a|0}function MF(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;e=a+4|0;g=f[e>>2]|0;h=f[a+8>>2]|0;do if((g|0)==(h<<5|0))if((g+1|0)<0)SZ();else{d=h<<6;h=g+32&-32;Rw(a,g>>>0<1073741823?(d>>>0<h>>>0?h:d):2147483647);d=f[e>>2]|0;break}else d=g;while(0);f[e>>2]=d+1;h=(f[a>>2]|0)+(d>>>5<<2)|0;g=1<<(d&31);e=f[h>>2]|0;f[h>>2]=b[c>>0]|0?e|g:e&~g;return}function NF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1816;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1816,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function OF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h+4|0;e=h;g=b+8|0;if(pJa(f[g>>2]|0)|0)WU(a+108|0,g);b=b+12|0;c=f[b>>2]|0;if(xFa(f[c+4>>2]|0)|0?(f[e>>2]=f[g>>2],f[d>>2]=f[e>>2],!(oB(c,d)|0)):0)g1(a,f[b>>2]|0)|0;u=h;return}function PF(a,b){a=a|0;b=b|0;var c=0;switch(f[b+8>>2]|0){case 42:case 40:case 38:case 36:case 46:case 41:case 39:case 37:case 35:case 45:case 34:case 32:case 30:case 28:case 26:case 33:case 31:case 29:case 27:case 25:case 44:case 43:case 24:case 23:case 22:case 21:case 20:case 17:case 15:case 13:case 11:case 9:case 7:case 5:case 3:case 1:case 16:case 14:case 12:case 10:case 8:case 6:case 4:case 2:case 0:{c=1;break}case 19:case 18:{c=2;break}default:Ka()}return (Cn(a,f[b+12>>2]|0)|0)+c|0}function QF(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((d|0)!=1&(d|0)<257)Cxa(a,d);else{f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=uHa(67998)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;d=nV(e)|0;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=d}Pta(a,67998,c)|0;SBa(a+c|0,0)}return}function RF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e;do if(pJa(f[b>>2]|0)|0){d=a+44|0;if((SN(d,b)|0)==(a+48|0)){cJa(c);f[b>>2]=f[c>>2];break}else{dK(d,b);break}}while(0);u=e;return}function SF(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;f[b>>2]=a;if(f[18711]|0){d=Vea(76684,21260)|0;a=EN(74808,b)|0;Vea(vj(d,f[a>>2]|0)|0,20144)|0;a=f[b>>2]|0}Jz(a,76684,0)|0;c3(76684,10)|0;u=c;return}function TF(a,b){a=a|0;b=b|0;var c=0;c3(Aaa(f[a>>2]|0,39287,0)|0,32)|0;c=f[a>>2]|0;vj(c,gKa(f[b+8>>2]|0)|0)|0;b=b+12|0;if((gKa(f[b>>2]|0)|0)!=-1){c=c3(f[a>>2]|0,32)|0;vj(c,gKa(f[b>>2]|0)|0)|0}Vea(f[a>>2]|0,39357)|0;return}function UF(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(24)|0;f[a>>2]=g;f[a+4>>2]=c+8;f[g+8>>2]=f[f[e>>2]>>2];e=g+12|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function VF(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;h=e-d|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[a+11>>0]=h;g=a}else{c=h+16&-16;g=nV(c)|0;f[a>>2]=g;f[a+8>>2]=c|-2147483648;f[a+4>>2]=h}c=d;a=g;while(1){if((c|0)==(e|0))break;SBa(a,b[c>>0]|0);c=c+1|0;a=a+1|0}SBa(g+h|0,0);return}function WF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1110;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1110,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function XF(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b+4>>2]|0;a:do if(!c){d=b;while(1){c=f[d+8>>2]|0;if((f[c>>2]|0)==(d|0))break a;d=c}}else while(1){d=f[c>>2]|0;if(!d)break;else c=d}while(0);if((f[a>>2]|0)==(b|0))f[a>>2]=c;d=a+8|0;f[d>>2]=(f[d>>2]|0)+-1;nh(f[a+4>>2]|0,b);$Ja(b);return}function YF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=552;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,552,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function ZF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;gua(a);while(1){if(!b){b=6;break}e=b+8|0;y=0;Ca(61,c|0,a|0,f[e>>2]|0,e|0);e=y;y=0;if(e&1){b=5;break}b=Iza(f[b+12>>2]|0)|0}if((b|0)==5){e=Pa()|0;bxa(a);$a(e|0)}else if((b|0)==6){u=d;return}}function _F(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1729;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1729,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function $F(a){a=a|0;var b=0,c=0,d=0,e=0;a=eAa(a)|0;if((((((((a|0)!=0?(f[a+8>>2]|0)==12:0)?(e=pAa(f[a+16>>2]|0)|0,(e|0)!=0):0)?(b=e+8|0,(csa(b)|0)!=0):0)?(c=eAa(f[a+12>>2]|0)|0,(c|0)!=0):0)?(f[c+8>>2]|0)==10:0)?(d=pAa(f[c+16>>2]|0)|0,(d|0)!=0):0)?JD(b,d+8|0)|0:0)a=f[c+12>>2]|0;else a=0;return a|0}function aG(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;b=u;u=u+16|0;g=b;e=f[a>>2]|0;d=f[f[a+4>>2]>>2]|0;c=gia(e,1,f[f[a+8>>2]>>2]|0)|0;h=f[a>>2]|0;a=f[a+12>>2]|0;f[g>>2]=f[a>>2];f[g+4>>2]=f[a+4>>2];f[g+8>>2]=f[a+8>>2];f[g+12>>2]=f[a+12>>2];a=FO(h,g)|0;a=s5(f[e>>2]|0,d,c,a)|0;u=b;return a|0}function bG(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(24)|0;f[a>>2]=g;f[a+4>>2]=c+8;f[g+8>>2]=f[f[e>>2]>>2];f[g+12>>2]=0;f[g+16>>2]=0;f[g+20>>2]=0;b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function cG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=tT()|0;d=f[b+28>>2]|0;b=f[b+24>>2]|0;while(1){if((b|0)==(d|0))break;e=Vn(f[f[b>>2]>>2]|0)|0;rE(c,e,Bea(Vn(f[(f[b>>2]|0)+4>>2]|0)|0)|0);b=b+4|0}e=gKa(a)|0;l6(e,gKa(hP(c)|0)|0)|0;return}function dG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(!(Ob[f[(f[b>>2]|0)+20>>2]&255](b)|0))Na(45369,45396,306,45416);d=Ob[f[(f[b>>2]|0)+24>>2]&255](b)|0;y=0;Ca(f[(f[d>>2]|0)+16>>2]|0,d|0,a|0,f[a>>2]|0,c|0);c=y;y=0;if(c&1){b=Pa()|0;if(d|0)Lb[f[(f[d>>2]|0)+4>>2]&511](d);$a(b|0)}else{if(d|0)Lb[f[(f[d>>2]|0)+4>>2]&511](d);return}}function eG(a){a=a|0;E4(a+136|0);e2(a+120|0);Kja(a+108|0);Kja(a+96|0);nia(a+84|0);uoa(a+72|0);Rba(a+44|0);zta(a+32|0);zta(a+20|0);return}function fG(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((d|0)>256){f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=uHa(70765)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;d=nV(e)|0;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=d}Pta(a,70765,c)|0;SBa(a+c|0,0)}else Cxa(a,d);return}function gG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;f[a>>2]=0;d=a+4|0;f[d>>2]=0;c=f[c>>2]|0;f[a+8>>2]=0;f[a+12>>2]=c;F3(a);y=0;ja(2058,f[d>>2]|0,b|0);c=y;y=0;if(c&1){d=Pa()|0;tM(a);$a(d|0)}else{f[d>>2]=(f[d>>2]|0)+24;return}}function hG(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;wI(d)}b=f[a>>2]|0;if(b|0)lfa(f[f[a+16>>2]>>2]|0,b,(f[a+12>>2]|0)-b>>4);return}function iG(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((d|0)>256){f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=uHa(71025)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;d=nV(e)|0;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=d}Pta(a,71025,c)|0;SBa(a+c|0,0)}else Cxa(a,d);return}function jG(a){a=a|0;var b=0,c=0;J4(a+112|0);Wea(a+88|0);c=a+84|0;b=f[c>>2]|0;f[c>>2]=0;if(b|0){XV(b);$Ja(b)}Sma(a+64|0);Wea(a+52|0);E4(a+32|0);E4(a+20|0);E4(a+8|0);return}function kG(a,b){a=a|0;b=b|0;var c=0,d=0;d=pJa(f[b+4>>2]|0)|0;c=f[a>>2]|0;if(d)Aaa(c,39169,0)|0;else Aaa(c,39180,0)|0;d=f[a>>2]|0;K2(d,SP(a,f[b+8>>2]|0)|0)|0;zea(a);kF(a,f[b+12>>2]|0);x_(a);return}function lG(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[18845]|0;d=a+4|0;b=f[18846]|0;while(1){if((b|0)==(c|0))break;e=b+-40|0;hea((f[d>>2]|0)+-40|0,e);f[d>>2]=(f[d>>2]|0)+-40;b=e}e=f[18845]|0;f[18845]=f[d>>2];f[d>>2]=e;e=a+8|0;c=f[18846]|0;f[18846]=f[e>>2];f[e>>2]=c;e=a+12|0;c=f[18847]|0;f[18847]=f[e>>2];f[e>>2]=c;f[a>>2]=f[d>>2];return}function mG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1022;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1022,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function nG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=240;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,240,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function oG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=(c-e|0)/12|0;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b*12|0)|0;while(1){if((c|0)==(a|0))break a;e=c+-12|0;f[g>>2]=e;Csa(e);c=f[g>>2]|0}}}else Vt(a,b-d|0);while(0);return}function pG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1197;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1197,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function qG(a,b,c){a=a|0;b=b|0;c=c|0;b=f[c+40>>2]|0;a=f[c+36>>2]|0;while(1){if((a|0)==(b|0))break;c=Vea(76684,42555)|0;c=Vea(K2(c,f[f[a>>2]>>2]|0)|0,59105)|0;c3(vj(c,jN(f[(f[a>>2]|0)+36>>2]|0)|0)|0,10)|0;a=a+4|0}return}function rG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1225;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1225,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function sG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1757;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1757,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function tG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=270;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,270,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function uG(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;a:do switch((d&176)<<24>>24){case 16:{d=b[a>>0]|0;e=a+1|0;switch(d<<24>>24){case 43:case 45:{a=e;break a}default:{}}if((c-a|0)>1&d<<24>>24==48){switch(b[e>>0]|0){case 88:case 120:break;default:{f=6;break a}}a=a+2|0}else f=6;break}case 32:{a=c;break}default:f=6}while(0);return a|0}function vG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=c+8|0;e=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[e>>2]|0)!=(f[d>>2]|0)&1);break}case 2:{c=e;e=d;uAa(a,((f[c>>2]|0)!=(f[e>>2]|0)?1:(f[c+4>>2]|0)!=(f[e+4>>2]|0))&1);break}case 3:{uAa(a,+Hoa(b)!=+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)!=+Goa(c)&1);break}default:Ka()}return}function wG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=c+8|0;e=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[e>>2]|0)==(f[d>>2]|0)&1);break}case 2:{c=e;e=d;uAa(a,((f[c>>2]|0)==(f[e>>2]|0)?(f[c+4>>2]|0)==(f[e+4>>2]|0):0)&1);break}case 3:{uAa(a,+Hoa(b)==+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)==+Goa(c)&1);break}default:Ka()}return}function xG(a){a=a|0;if(!a)return;else{xG(f[a>>2]|0);xG(f[a+4>>2]|0);Hta(a+16|0);$Ja(a);return}}function yG(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;wI(d)}d=f[a>>2]|0;lfa(f[a+12>>2]|0,d,(f[a+8>>2]|0)-d>>4)}return}function zG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=UAa(a,0)|0;if(jha(f[e>>2]|0,f[18925]|0)|0){e=UAa(a,2)|0;e=gKa(f[e>>2]|0)|0;b=l6(gKa(F8(2)|0)|0,b)|0;PDa(c,l6(b,F8(0)|0)|0);l6(e,f[c>>2]|0)|0;u=d;return}else Na(23722,51343,1556,23743)}function AG(a,b){a=a|0;b=b|0;var c=0,d=0;d=DR(a,f[b+8>>2]|0)|0;c=DR(a,f[b+12>>2]|0)|0;b=DR(a,f[b+16>>2]|0)|0;return j9(f[a+32>>2]|0,d,c,b)|0}function BG(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[18632]|0;e=a+4|0;d=(f[18633]|0)-c|0;b=(f[e>>2]|0)+(0-(d>>2)<<2)|0;f[e>>2]=b;if((d|0)>0){rq(b|0,c|0,d|0)|0;c=e;b=f[e>>2]|0}else c=e;e=f[18632]|0;f[18632]=b;f[c>>2]=e;e=a+8|0;d=f[18633]|0;f[18633]=f[e>>2];f[e>>2]=d;e=a+12|0;d=f[18634]|0;f[18634]=f[e>>2];f[e>>2]=d;f[a>>2]=f[c>>2];return}function CG(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;e=f[a>>2]|0;a:do if((e|0)==(f[c>>2]|0)){g=a+8|0;h=c+8|0;switch(e|0){case 5:case 2:{d=(a|0)==(c|0);break a}case 0:{d=bDa(f[g>>2]|0,f[h>>2]|0)|0;break a}case 1:{d=+p[g>>3]==+p[h>>3];break a}case 3:{d=1;break a}case 4:{d=(b[g>>0]|0)==(b[h>>0]|0);break a}default:Ka()}}else d=0;while(0);return d|0}function DG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=904;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,904,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function EG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1573;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1573,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function FG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1691;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1691,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function GG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=u;u=u+48|0;g=d+16|0;e=d+32|0;h=d;a=f[a+36>>2]|0;gKa(a)|0;VBa(e,a);uAa(h,BCa(c)|0);f[g>>2]=f[h>>2];f[g+4>>2]=f[h+4>>2];f[g+8>>2]=f[h+8>>2];f[g+12>>2]=f[h+12>>2];c=FO(e,g)|0;c=s5(f[e>>2]|0,7,b,c)|0;u=d;return c|0}function HG(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;g=Hx(c,e,d+16|0)|0;h=f[g>>2]|0;if(!h){lN(c,f[e>>2]|0,g,d);c=1}else{d=h;c=0}f[a>>2]=d;b[a+4>>0]=c;u=i;return}function IG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=753;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,753,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function JG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=724;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,724,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function KG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1601;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1601,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function LG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1286;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1286,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function MG(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)>>2;do if(d|0){y=0;ja(179,a|0,d|0);d=y;y=0;if(d&1){d=Pa()|0;E4(a);$a(d|0)}else{J0(a,f[b>>2]|0,f[c>>2]|0);break}}while(0);return}function NG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=c+8|0;e=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[e>>2]|0)-(f[d>>2]|0)|0);break}case 2:{c=e;e=d;Ysa(a,Aoa(f[c>>2]|0,f[c+4>>2]|0,f[e>>2]|0,f[e+4>>2]|0)|0,J);break}case 3:{tda(a,+Hoa(b)-+Hoa(c));break}case 4:{S5(a,+Goa(b)-+Goa(c));break}default:Ka()}return}function OG(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;c=b;f[c>>2]=a;a=b+4|0;d=gKa(F8(4)|0)|0;d=l6(d,y4(75772)|0)|0;c=l6(d,y4(c)|0)|0;c=l6(c,F8(0)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function PG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1347;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1347,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function QG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1377;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1377,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function RG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1635;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1635,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function SG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0;i=u;u=u+16|0;g=i;if(f[18711]|0)Vea(76684,21175)|0;h=xsa(a+144|0)|0;f[h+8>>2]=b;if(c|0){dCa(g,c);f[h+12>>2]=f[g>>2]}b=h+16|0;a=0;while(1){if((a|0)==(e|0))break;AW(b,f[d+(a<<2)>>2]|0);a=a+1|0}nZ(h);u=i;return h|0}function TG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;e=u;u=u+16|0;i=e|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=d>>31|((d|0)<0?-1:0)<<1;j=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=Aoa(h^a|0,g^b|0,h|0,g|0)|0;b=J;bi(a,b,Aoa(k^c|0,j^d|0,k|0,j|0)|0,J,i)|0;d=Aoa(f[i>>2]^h|0,f[i+4>>2]^g|0,h|0,g|0)|0;c=J;u=e;return (J=c,d)|0}function UG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=693;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,693,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function VG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=665;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,665,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function WG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1050;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1050,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function XG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1663;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1663,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function YG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1947;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1947,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function ZG(a){a=a|0;var c=0,d=0;if((b[74048]|0)==0?twa(74048)|0:0){f[19410]=0;f[19411]=0;f[19412]=0;c=uHa(68784)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[77651]=c;a=77640}else{d=c+16&-16;a=nV(d)|0;f[19410]=a;f[19412]=d|-2147483648;f[19411]=c}Pta(a,68784,c)|0;SBa(a+c|0,0);tb(391,77640,x|0)|0}return 77640}function _G(a){a=a|0;var c=0,d=0;if((b[74056]|0)==0?twa(74056)|0:0){f[19413]=0;f[19414]=0;f[19415]=0;c=uHa(68793)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[77663]=c;a=77652}else{d=c+16&-16;a=nV(d)|0;f[19413]=a;f[19415]=d|-2147483648;f[19414]=c}Pta(a,68793,c)|0;SBa(a+c|0,0);tb(391,77652,x|0)|0}return 77652}function $G(a){a=a|0;var c=0,d=0;if((b[74064]|0)==0?twa(74064)|0:0){f[19416]=0;f[19417]=0;f[19418]=0;c=uHa(68805)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[77675]=c;a=77664}else{d=c+16&-16;a=nV(d)|0;f[19416]=a;f[19418]=d|-2147483648;f[19417]=c}Pta(a,68805,c)|0;SBa(a+c|0,0);tb(391,77664,x|0)|0}return 77664}function aH(a){a=a|0;var c=0,d=0;if((b[74040]|0)==0?twa(74040)|0:0){f[19407]=0;f[19408]=0;f[19409]=0;c=uHa(68775)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11){b[77639]=c;a=77628}else{d=c+16&-16;a=nV(d)|0;f[19407]=a;f[19409]=d|-2147483648;f[19408]=c}Pta(a,68775,c)|0;SBa(a+c|0,0);tb(391,77628,x|0)|0}return 77628}function bH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=454;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,454,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function cH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=842;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,842,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function dH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=519;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,519,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function eH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1285;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1285,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function fH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1078;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1078,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function gH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1905;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1905,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function hH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=482;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,482,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function iH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=903;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,903,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function jH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=212;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,212,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function kH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1405;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1405,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function lH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1168;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1168,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function mH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+32|0;e=c+16|0;g=c;d=gia(a,b,2)|0;Ysa(g,32,0);f[e>>2]=f[g>>2];f[e+4>>2]=f[g+4>>2];f[e+8>>2]=f[g+8>>2];f[e+12>>2]=f[g+12>>2];b=FO(a,e)|0;b=s5(f[a>>2]|0,36,d,b)|0;b=dea(f[a>>2]|0,24,b)|0;u=c;return b|0}function nH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=637;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,637,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function oH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=873;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,873,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function pH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1255;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1255,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function qH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1874;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1874,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function rH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1844;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1844,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function sH(a,b){a=a|0;b=b|0;var c=0,d=0;d=DR(a,f[b+16>>2]|0)|0;c=DR(a,f[b+8>>2]|0)|0;return K4(a+32|0,d,c,DR(a,f[b+12>>2]|0)|0)|0}function tH(a){a=a|0;if(!a)return;else{tH(f[a>>2]|0);tH(f[a+4>>2]|0);$Ja(a);return}}function uH(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;a=bua(f[a>>2]|0)|0;b[a+20>>0]=0;b[a+8>>0]=c;eja(a+12|0,d,0)|0;eja(a+16|0,e,0)|0;f[a+24>>2]=g;g=a+28|0;f[g>>2]=h;f[a+32>>2]=i;r4(a);h=f[(f[g>>2]|0)+4>>2]|0;if((h|0)==(i|0)|(rCa(h)|0)^1)return a|0;else Na(46479,46550,224,46569);return 0}function vH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=85;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,85,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function wH(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;d=f[a+8>>2]|0;g=f[a>>2]|0;e=f[g>>2]|0;f[g>>2]=e+1;g=a+4|0;if(e>>>0<(f[f[g>>2]>>2]|0)>>>0){c=f[(f[(f[d>>2]|0)+36>>2]|0)+(e<<2)>>2]|0;a=f[a+12>>2]|0;b=f[a+4>>2]|0;a=f[a>>2]|0;while(1){if((a|0)==(b|0))break;dG(d,f[a>>2]|0,c);a=a+4|0}a=(e+1|0)==(f[f[g>>2]>>2]|0)&1}else a=1;return a|0}function xH(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)>>2;do if(d|0){y=0;ja(119,a|0,d|0);d=y;y=0;if(d&1){d=Pa()|0;E4(a);$a(d|0)}else{J0(a,f[b>>2]|0,f[c>>2]|0);break}}while(0);return}function yH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=385;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,385,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function zH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=180;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,180,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function AH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1433;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1433,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function BH(a){a=a|0;var b=0,c=0,d=0;d=u;u=u+80|0;b=d+40|0;c=d;if(f[18711]|0)Vea(76684,22299)|0;l1(b);y=0;ya(67,c|0,a|0,b|0);a=y;y=0;if(a&1){d=Pa()|0;Mna(b);$a(d|0)}else{$3(c);Mna(b);u=d;return}}
function Ug(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=f[a>>2]|0;do if(g){h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=gKa(f[h>>2]|0)|0;if(TDa(g)|0){f[a>>2]=0;h=1;break}else{h=(f[a>>2]|0)==0;break}}else h=1;while(0);if(b){g=f[b+12>>2]|0;if((g|0)==(f[b+16>>2]|0))g=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else g=gKa(f[g>>2]|0)|0;if(!(TDa(g)|0))if(h){j=b;o=16}else o=15;else o=13}else o=13;if((o|0)==13)if(h)o=15;else{j=0;o=16}a:do if((o|0)==15){f[c>>2]=f[c>>2]|6;g=0}else if((o|0)==16){g=f[a>>2]|0;h=f[g+12>>2]|0;if((h|0)==(f[g+16>>2]|0))g=Ob[f[(f[g>>2]|0)+36>>2]&255](g)|0;else g=gKa(f[h>>2]|0)|0;if(!(Rb[f[(f[d>>2]|0)+12>>2]&127](d,2048,g)|0)){f[c>>2]=f[c>>2]|4;g=0;break}g=(Rb[f[(f[d>>2]|0)+52>>2]&127](d,g,0)|0)<<24>>24;h=f[a>>2]|0;b=h+12|0;i=f[b>>2]|0;if((i|0)==(f[h+16>>2]|0)){Ob[f[(f[h>>2]|0)+40>>2]&255](h)|0;k=j;i=j}else{f[b>>2]=i+4;k=j;i=j}while(1){g=g+-48|0;n=e+-1|0;h=f[a>>2]|0;do if(h){b=f[h+12>>2]|0;if((b|0)==(f[h+16>>2]|0))h=Ob[f[(f[h>>2]|0)+36>>2]&255](h)|0;else h=gKa(f[b>>2]|0)|0;if(TDa(h)|0){f[a>>2]=0;j=1;break}else{j=(f[a>>2]|0)==0;break}}else j=1;while(0);if(!i){m=k;l=0;h=1}else{h=f[i+12>>2]|0;if((h|0)==(f[i+16>>2]|0))h=Ob[f[(f[i>>2]|0)+36>>2]&255](i)|0;else h=gKa(f[h>>2]|0)|0;h=TDa(h)|0;m=h?0:k;l=h?0:k;h=h|(k|0)==0}b=f[a>>2]|0;if(!((e|0)>1&(j^h)))break;h=f[b+12>>2]|0;if((h|0)==(f[b+16>>2]|0))h=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else h=gKa(f[h>>2]|0)|0;if(!(Rb[f[(f[d>>2]|0)+12>>2]&127](d,2048,h)|0))break a;g=((Rb[f[(f[d>>2]|0)+52>>2]&127](d,h,0)|0)<<24>>24)+(g*10|0)|0;h=f[a>>2]|0;b=h+12|0;i=f[b>>2]|0;if((i|0)==(f[h+16>>2]|0)){Ob[f[(f[h>>2]|0)+40>>2]&255](h)|0;e=n;k=m;i=l;continue}else{f[b>>2]=i+4;e=n;k=m;i=l;continue}}do if(b){h=f[b+12>>2]|0;if((h|0)==(f[b+16>>2]|0))h=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else h=gKa(f[h>>2]|0)|0;if(TDa(h)|0){f[a>>2]=0;b=1;break}else{b=(f[a>>2]|0)==0;break}}else b=1;while(0);if(m){h=f[m+12>>2]|0;if((h|0)==(f[m+16>>2]|0))h=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0;else h=gKa(f[h>>2]|0)|0;if(!(TDa(h)|0)){if(b)break}else o=56}else o=56;if((o|0)==56?!b:0)break;f[c>>2]=f[c>>2]|2}while(0);return g|0}function Vg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0;j=u;u=u+16|0;e=j;d=pAa(a)|0;i=a+4|0;a:do if(!d){e=eAa(a)|0;b:do if(!e){d=nAa(a)|0;if(d|0)switch(f[d+8>>2]|0){case 4:case 2:case 0:{g=6;break a}case 5:case 3:case 1:{g=7;break a}case 21:case 20:{g=1;break a}case 24:{g=Vg(f[d+12>>2]|0,c)|0;g=g>>>0<32?g:32;break a}default:break b}d=Iza(a)|0;if(d|0){g=Vg(f[d+12>>2]|0,c)|0;break a}d=Pza(a)|0;if(d|0){g=wwa(f[c+44>>2]|0,f[d+8>>2]|0)|0;break a}d=yAa(a)|0;if(d|0?(b[d+9>>0]|0)==0:0){g=h[d+8>>0]<<3;break a}}else{d=e+16|0;a=e+12|0;switch(f[e+8>>2]|0){case 14:case 13:case 6:case 5:case 4:case 3:case 2:case 1:case 0:{g=32;break a}case 7:{g=Vg(f[a>>2]|0,c)|0;c=Vg(f[d>>2]|0,c)|0;g=c>>>0<g>>>0?c:g;break a}case 9:case 8:{g=Vg(f[a>>2]|0,c)|0;c=Vg(f[d>>2]|0,c)|0;g=g>>>0<c>>>0?c:g;break a}case 10:{d=pAa(f[d>>2]|0)|0;if(!d){g=32;break a}g=(Vg(f[a>>2]|0,c)|0)+(FR(d)|0)|0;g=g>>>0<32?g:32;break a}case 11:{d=pAa(f[d>>2]|0)|0;if(!d){g=32;break a}c=Vg(f[a>>2]|0,c)|0;g=FR(d)|0;g=c-(c>>>0<g>>>0?c:g)|0;break a}case 12:{e=pAa(f[d>>2]|0)|0;if(!e){g=32;break a}d=Vg(f[a>>2]|0,c)|0;if((d|0)==32){g=32;break a}g=FR(e)|0;g=d-(d>>>0<g>>>0?d:g)|0;break a}case 75:case 74:case 73:case 72:case 71:case 70:case 62:case 61:case 60:case 59:case 58:case 57:case 49:case 48:case 47:case 46:case 45:case 44:case 43:case 42:case 41:case 40:case 24:case 23:case 22:case 21:case 20:case 19:case 18:case 17:case 16:case 15:{g=1;break a}default:break b}}while(0);switch(f[i>>2]|0){case 1:{g=32;break a}case 2:{g=64;break a}case 5:{g=64;break a}default:Ka()}}else{d=d+8|0;switch(f[i>>2]|0){case 1:{rT(e,d);g=32-(csa(e)|0)|0;break a}case 2:{rT(e,d);g=Aoa(64,0,Eka(e)|0,J|0)|0;break a}default:Ka()}}while(0);u=j;return g|0}function Wg(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=u;u=u+48|0;p=n+28|0;o=n+16|0;l=n+4|0;m=n;d=(f[a>>2]|0)+3|0;while(1){c=b[d>>0]|0;if(c<<24>>24==32)d=d+1|0;else{k=d;break}}a:while(1){switch(c<<24>>24){case 10:case 0:{g=d;break a}default:{}}c=k+1|0;k=c;c=b[c>>0]|0}while(1){if(g>>>0>=k>>>0)break;if((b[g>>0]|0)==58){q=8;break}g=g+1|0}b:do if((q|0)==8){f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;h=g-d|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[p+11>>0]=h;e=p}else{j=h+16&-16;e=nV(j)|0;f[p>>2]=e;f[p+8>>2]=j|-2147483648;f[p+4>>2]=h}c=d;d=e;while(1){if((c|0)==(g|0))break;SBa(d,b[c>>0]|0);c=c+1|0;d=d+1|0}SBa(e+h|0,0);d=g+1|0;h=d;while(1){c=h+1|0;if(h>>>0>=k>>>0){i=0;break}if((b[h>>0]|0)==58){i=1;break}else h=c}f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;j=h-d|0;c:do if(j>>>0>4294967279){y=0;za(3);y=0;q=29}else{if(j>>>0<11){b[o+11>>0]=j;g=o}else{e=j+16&-16;y=0;g=la(150,e|0)|0;r=y;y=0;if(r&1){q=29;break}f[o>>2]=g;f[o+8>>2]=e|-2147483648;f[o+4>>2]=j}e=g;while(1){if((d|0)==(h|0))break;SBa(e,b[d>>0]|0);d=d+1|0;e=e+1|0}SBa(g+j|0,0);d:do if(i){f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;g=k-c|0;do if(g>>>0>4294967279){y=0;za(3);y=0;q=44}else{if(g>>>0<11){b[l+11>>0]=g;e=l}else{d=g+16&-16;y=0;e=la(150,d|0)|0;r=y;y=0;if(r&1){q=44;break}f[l>>2]=e;f[l+8>>2]=d|-2147483648;f[l+4>>2]=g}d=e;while(1){if((c|0)==(k|0))break;SBa(d,b[c>>0]|0);c=c+1|0;d=d+1|0}SBa(e+g|0,0);y=0;c=ua(135,a+16|0,12)|0;r=y;y=0;if(!(r&1)?(y=0,ya(64,m|0,((b[p+11>>0]|0)<0?f[p>>2]|0:p)|0,0),r=y,y=0,!(r&1)):0){q=PH((b[o+11>>0]|0)<0?f[o>>2]|0:o)|0;r=PH((b[l+11>>0]|0)<0?f[l>>2]|0:l)|0;Zoa(c,f[m>>2]|0,q,r);f[a+12>>2]=c;zta(l);break d}c=Pa()|0;zta(l)}while(0);if((q|0)==44)c=Pa()|0;zta(o);break c}while(0);zta(o);zta(p);break b}while(0);if((q|0)==29)c=Pa()|0;zta(p);$a(c|0)}while(0);u=n;return}function Xg(a,b){a=a|0;b=b|0;var c=0;c=b+12|0;Ak(a,f[(f[c>>2]|0)+4>>2]|0,b);c=f[(f[c>>2]|0)+4>>2]|0;a:do if((c|0)!=5)do switch(f[b+8>>2]|0){case 4:case 2:case 0:{dk(a,c,1,b,62748);break a}case 5:case 3:case 1:{dk(a,c,2,b,62785);break a}case 18:case 16:case 14:case 12:case 10:case 8:case 6:{dk(a,c,3,b,62822);break a}case 19:case 17:case 15:case 13:case 11:case 9:case 7:{dk(a,c,4,b,62859);break a}case 20:{ap(a,(c|0)==1,b,62896);break a}case 21:{ap(a,(c|0)==2,b,62922);break a}case 22:{dk(a,c,1,b,62948);break a}case 23:{dk(a,c,1,b,62948);break a}case 24:{dk(a,c,2,b,62976);break a}case 25:{dk(a,c,3,b,63002);break a}case 26:{dk(a,c,3,b,63002);break a}case 27:{dk(a,c,3,b,63002);break a}case 28:{dk(a,c,3,b,63002);break a}case 29:{dk(a,c,4,b,63002);break a}case 30:{dk(a,c,4,b,63002);break a}case 31:{dk(a,c,4,b,63002);break a}case 32:{dk(a,c,4,b,63002);break a}case 33:{dk(a,c,3,b,63029);break a}case 34:{dk(a,c,4,b,63066);break a}case 37:{dk(a,c,1,b,63103);break a}case 38:{dk(a,c,1,b,63103);break a}case 35:{dk(a,c,1,b,63103);break a}case 36:{dk(a,c,1,b,63103);break a}case 41:{dk(a,c,2,b,63103);break a}case 42:{dk(a,c,2,b,63103);break a}case 39:{dk(a,c,2,b,63103);break a}case 40:{dk(a,c,2,b,63103);break a}case 43:{dk(a,c,3,b,63132);break a}case 44:{dk(a,c,4,b,63161);break a}case 45:{dk(a,c,1,b,63189);break a}case 46:{dk(a,c,2,b,63226);break a}default:Ka()}while(0);while(0);return}function Yg(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;k=l+8|0;h=l;a:do if((c-a|0)>1){g=(b[a>>0]|0)==76?a+1|0:a;switch(b[g>>0]|0){case 78:{k=xc(g,c,d)|0;a=(k|0)==(g|0)?a:k;break a}case 90:{k=Ph(g,c,d)|0;a=(k|0)==(g|0)?a:k;break a}default:{i=RD(g,c,d)|0;do if((i|0)==(g|0)){e=sf(g,c,d)|0;if((e|0)==(g|0)|(e|0)==(c|0))break a;if((b[e>>0]|0)!=73)break a;c=Ce(e,c,d)|0;if((c|0)==(e|0))break a;h=d+4|0;e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(k,e+-24|0);a=f[h>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;d=g+-24|0;f[h>>2]=d;Xka(d);g=f[h>>2]|0}d=b[k+11>>0]|0;j=d<<24>>24<0;y=0;oa(73,a+-48|0,(j?f[k>>2]|0:k)|0,(j?f[k+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(k);break}else{zta(k);a=c;break a}}else{if((i|0)==(c|0)){a=c;break a}if((b[i>>0]|0)!=73){a=i;break a}j=d+4|0;e=f[j>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[h>>2]=f[d+12>>2];gG(k,e+-24|0,h);e=d+20|0;g=f[e>>2]|0;if(g>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,d+16|0,k|0);h=y;y=0;if(h&1){a=Pa()|0;tM(k);break}}else{f[g+12>>2]=f[k+12>>2];f[g>>2]=f[k>>2];h=k+4|0;f[g+4>>2]=f[h>>2];m=k+8|0;f[g+8>>2]=f[m>>2];f[m>>2]=0;f[h>>2]=0;f[k>>2]=0;f[e>>2]=(f[e>>2]|0)+16}tM(k);h=Ce(i,c,d)|0;if((h|0)==(i|0))break a;e=f[j>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(k,e+-24|0);a=f[j>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;m=g+-24|0;f[j>>2]=m;Xka(m);g=f[j>>2]|0}m=b[k+11>>0]|0;d=m<<24>>24<0;y=0;oa(73,a+-48|0,(d?f[k>>2]|0:k)|0,(d?f[k+4>>2]|0:m&255)|0)|0;m=y;y=0;if(m&1){a=Pa()|0;zta(k);break}else{zta(k);a=h;break a}}while(0);$a(a|0)}}}while(0);u=l;return a|0}function Zg(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+48|0;m=k+24|0;i=k;j=k+12|0;e=f[a+8>>2]|0;f[m>>2]=0;h=m+4|0;f[h>>2]=0;f[m+8>>2]=0;y=0;ja(2011,f[(f[f[a>>2]>>2]|0)+16>>2]|0,34);g=y;y=0;a:do if(!(g&1)?(y=0,d=ua(157,f[f[a+4>>2]>>2]|0,34)|0,g=y,y=0,!(g&1)):0){b:do if(!d){e=e+16|0;g=m+8|0;c:while(1){y=0;a=la(220,f[e>>2]|0)|0;d=y;y=0;if(d&1){l=15;break a}switch(a|0){case 34:break b;case -1:break c;default:{}}a=a&255;b[j>>0]=a;d=f[h>>2]|0;if(d>>>0>=(f[g>>2]|0)>>>0){y=0;ja(2012,m|0,j|0);d=y;y=0;if(d&1){l=23;break}}else{b[d>>0]=a;f[h>>2]=(f[h>>2]|0)+1}}if((l|0)==23){a=Pa()|0;break a}g=zb(12)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(58415)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[i+11>>0]=e;a=i}else{d=e+16&-16;y=0;a=la(150,d|0)|0;k=y;y=0;if(k&1){l=16;break}f[i>>2]=a;f[i+8>>2]=d|-2147483648;f[i+4>>2]=e}Pta(a,58415,e)|0;SBa(a+e|0,0);y=0;ja(2001,g|0,i|0);k=y;y=0;if(k&1)d=1;else{y=0;ya(79,g|0,4016,384);y=0;d=0}a=Pa()|0;zta(i);if(!d)break a}else{y=0;za(3);y=0;l=16}while(0);if((l|0)==16)a=Pa()|0;Oa(g|0);break a}while(0);a=f[m>>2]|0;g=f[h>>2]|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;h=g-a|0;do if(h>>>0>4294967279){y=0;za(3);y=0}else{if(h>>>0<11){b[j+11>>0]=h;e=j}else{d=h+16&-16;y=0;e=la(150,d|0)|0;i=y;y=0;if(i&1)break;f[j>>2]=e;f[j+8>>2]=d|-2147483648;f[j+4>>2]=h}d=e;while(1){if((a|0)==(g|0))break;SBa(d,b[a>>0]|0);d=d+1|0;a=a+1|0}SBa(e+h|0,0);a=c+11|0;if((b[a>>0]|0)<0){SBa(f[c>>2]|0,0);f[c+4>>2]=0}else{SBa(c,0);b[a>>0]=0}y=0;ia(377,c|0);l=y;y=0;if(l&1){l=ab(0)|0;lDa(l)}f[c>>2]=f[j>>2];f[c+4>>2]=f[j+4>>2];f[c+8>>2]=f[j+8>>2];a=0;while(1){if((a|0)==3)break;f[j+(a<<2)>>2]=0;a=a+1|0}zta(j);F4(m);u=k;return}while(0);a=Pa()|0}else l=15;while(0);if((l|0)==15)a=Pa()|0;F4(m);$a(a|0)}function _g(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;j=u;u=u+48|0;k=j+24|0;l=j+12|0;m=j;f[a>>2]=0;d=c+16|0;h=0;while(1){i=($6(f[d>>2]|0)|0)<<24>>24;g=(i&128|0)==0;n=i&127;c=((h|0)==0?127:(1<<32-h)+127|0)&n;if(!(g|(c|0)==(n|0))){n=3;break}c=f[a>>2]|c<<h;f[a>>2]=c;e=h+7|0;if(g){n=27;break}if(e>>>0>31){n=16;break}else h=e}a:do if((n|0)==3){g=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(54899)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;c=k}else{d=e+16&-16;y=0;c=la(150,d|0)|0;m=y;y=0;if(m&1){n=11;break}f[k>>2]=c;f[k+8>>2]=d|-2147483648;f[k+4>>2]=e}Pta(c,54899,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,k|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(k);if(!d)break a}else{y=0;za(3);y=0;n=11}while(0);if((n|0)==11)c=Pa()|0;Oa(g|0)}else if((n|0)==16){g=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;e=uHa(54942)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[l+11>>0]=e;c=l}else{d=e+16&-16;y=0;c=la(150,d|0)|0;m=y;y=0;if(m&1){n=24;break}f[l>>2]=c;f[l+8>>2]=d|-2147483648;f[l+4>>2]=e}Pta(c,54942,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,l|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(l);if(!d)break a}else{y=0;za(3);y=0;n=24}while(0);if((n|0)==24)c=Pa()|0;Oa(g|0)}else if((n|0)==27){if(e>>>0<32&(i&64|0)!=0?(l=25-h|0,l=c<<l>>l,f[a>>2]=l,(l|0)>-1):0){g=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(54955)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[m+11>>0]=e;c=m}else{d=e+16&-16;y=0;c=la(150,d|0)|0;l=y;y=0;if(l&1){n=37;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(c,54955,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,m|0);l=y;y=0;if(l&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(!d)break a}else{y=0;za(3);y=0;n=37}while(0);if((n|0)==37)c=Pa()|0;Oa(g|0);break}u=j;return}while(0);$a(c|0)}function $g(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+64|0;m=l+52|0;j=l;f[m>>2]=0;k=m+4|0;f[k>>2]=0;f[m+8>>2]=0;b=a+116|0;do if(pJa(f[b>>2]|0)|0){f[j>>2]=0;y=0;ya(87,m|0,j|0,b|0);i=y;y=0;if(i&1){b=Pa()|0;break}else{i=m+8|0;h=7;break}}else{i=m+8|0;h=7}while(0);do if((h|0)==7){e=f[a+28>>2]|0;d=f[a+24>>2]|0;a:while(1){if((d|0)==(e|0)){h=9;break}b=f[d>>2]|0;switch(f[b+8>>2]|0){case 0:{f[j>>2]=0;b=b+4|0;c=f[k>>2]|0;if(c>>>0>=(f[i>>2]|0)>>>0){y=0;ya(87,m|0,j|0,b|0);h=y;y=0;if(h&1){h=15;break a}}else{f[c>>2]=0;f[c+4>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+8}break}case 3:{f[j>>2]=1;b=b+4|0;c=f[k>>2]|0;if(c>>>0>=(f[i>>2]|0)>>>0){y=0;ya(87,m|0,j|0,b|0);h=y;y=0;if(h&1){h=20;break a}}else{f[c>>2]=1;f[c+4>>2]=f[b>>2];f[k>>2]=(f[k>>2]|0)+8}break}default:{}}d=d+4|0}if((h|0)==9){d=f[a+80>>2]|0;b=f[a+76>>2]|0;b:while(1){if((b|0)==(d|0))break;e=f[b+8>>2]|0;c=f[b+4>>2]|0;while(1){if((c|0)==(e|0))break;f[j>>2]=0;g=f[k>>2]|0;if(g>>>0>=(f[i>>2]|0)>>>0){y=0;ya(87,m|0,j|0,c|0);g=y;y=0;if(g&1){h=31;break b}}else{f[g>>2]=0;f[g+4>>2]=f[c>>2];f[k>>2]=(f[k>>2]|0)+8}c=c+4|0}b=b+16|0}if((h|0)==31){b=Pa()|0;break}y=0;ya(88,j|0,a|0,m|0);k=y;y=0;if(k&1){b=Pa()|0;break}k=a+36|0;i=a+40|0;h=Cw(f[k>>2]|0,f[i>>2]|0,j)|0;uC(k,h,f[i>>2]|0);i=a+48|0;h=a+52|0;k=sx(f[i>>2]|0,f[h>>2]|0,j)|0;$D(i,k,f[h>>2]|0);h=a+12|0;k=a+16|0;i=Ww(f[h>>2]|0,f[k>>2]|0,j)|0;$D(h,i,f[k>>2]|0);y=0;ia(363,a|0);k=y;y=0;if(k&1){b=Pa()|0;U6(j);break}else{U6(j);a3(m);u=l;return}}else if((h|0)==15){b=Pa()|0;break}else if((h|0)==20){b=Pa()|0;break}}while(0);a3(m);$a(b|0)}function ah(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;B=u;u=u+64|0;n=B+16|0;s=B+60|0;C=B+48|0;t=B+44|0;v=B+40|0;w=B;x=B+36|0;z=B+32|0;do if(b[d+112>>0]|0){f[C>>2]=0;p=C+4|0;f[p>>2]=0;f[C+8>>2]=0;A=d+100|0;q=f[d+104>>2]|0;r=C+8|0;o=f[A>>2]|0;a:while(1){if((o|0)==(q|0)){c=5;break}l=o+4|0;m=o+8|0;a=f[m>>2]|0;c=f[l>>2]|0;e=a;while(1){if((a|0)==(c|0))break;if(!(b[e+-1>>0]|0))a=0;else break;while(1){if((a|0)==-1)break;k=a+-1|0;f[m>>2]=e+k;a=k}a=e+-1|0;e=a}a=pAa(f[o>>2]|0)|0;b:do if(!a){a=f[p>>2]|0;if((a|0)==(f[r>>2]|0)){y=0;ja(1346,C|0,o|0);m=y;y=0;if(m&1){c=38;break a}else break}y=0;ja(1345,a|0,o|0);m=y;y=0;if(m&1){c=38;break a}f[p>>2]=(f[p>>2]|0)+16}else{y=0;k=la(161,a+8|0)|0;j=y;y=0;if(j&1){c=18;break a}a=0;while(1){e=f[l>>2]|0;c=(f[m>>2]|0)-e|0;if(a>>>0<c>>>0)h=a;else break b;while(1){if(h>>>0>=c>>>0){a=h;g=h;break}if(b[e+h>>0]|0){a=h;g=h;break}h=h+1|0}while(1){if(!((a-g|0)>>>0<8&a>>>0<c>>>0))break;if(!(b[e+g>>0]|0)){i=(b[e+a>>0]|0)==0;j=i?g:a;a=(i&1)+a|0;g=j;continue}else{j=g+1|0;a=j;g=j;continue}}if((g|0)==(h|0))continue;VBa(v,d);uAa(w,h+k|0);y=0;f[n>>2]=f[w>>2];f[n+4>>2]=f[w+4>>2];f[n+8>>2]=f[w+8>>2];f[n+12>>2]=f[w+12>>2];i=ua(102,v|0,n|0)|0;j=y;y=0;if(j&1){c=31;break a}f[t>>2]=i;j=(f[l>>2]|0)+h|0;f[x>>2]=j;c=g-h|0;f[z>>2]=c;e=f[p>>2]|0;if(e>>>0>=(f[r>>2]|0)>>>0){y=0;Ca(69,C|0,t|0,x|0,z|0);j=y;y=0;if(j&1){c=32;break a}}else{y=0;ya(71,s|0,c|0,0);h=y;y=0;if(h&1){c=32;break a}y=0;f[n>>2]=f[s>>2];Ca(56,e|0,i|0,j|0,n|0);j=y;y=0;if(j&1){c=32;break a}f[p>>2]=(f[p>>2]|0)+16}}}while(0);o=o+16|0}if((c|0)==5){LV(A,C);VZ(C);break}else if((c|0)==18)a=Pa()|0;else if((c|0)==31){a=Pa()|0;c=33}else if((c|0)==32){a=Pa()|0;c=33}else if((c|0)==38)a=Pa()|0;VZ(C);$a(a|0)}while(0);u=B;return}function bh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+16|0;i=r;k=r+4|0;f[i>>2]=c;g=f[c>>2]|0;q=a+48|0;d=f[g>>2]|0;h=c;a:do if(!(CFa(d)|0)){if(gFa(d)|0){c=f[q>>2]|0;d=a+52|0;e=f[d>>2]|0;while(1){if((e|0)==(c|0))break;p=e+-4|0;f[d>>2]=p;e=p}if((c|0)==(f[a+56>>2]|0))XC(q,i);else{f[c>>2]=h;f[d>>2]=(f[d>>2]|0)+4}b[a+45>>0]=1;break}if(hJa(d)|0){c=Asa(g)|0;if((f[(f[c+8>>2]|0)+4>>2]|0)==5){t6(a);break}if(!(f[c+16>>2]|0)){ZU(a);break}j=a+64|0;p=f[j>>2]|0;c=p;if((p|0)==(f[a+60>>2]|0))Na(35630,35457,91,35655);h=f[c+-8>>2]|0;i=a+52|0;g=a+56|0;c=f[c+-12>>2]|0;while(1){if((c|0)==(h|0))break;d=f[c>>2]|0;f[k>>2]=d;e=f[i>>2]|0;if((e|0)==(f[g>>2]|0))XC(q,k);else{f[e>>2]=d;f[i>>2]=(f[i>>2]|0)+4}c=c+4|0}d=f[j>>2]|0;c=d+-12|0;while(1){if((d|0)==(c|0))break a;q=d+-12|0;f[j>>2]=q;E4(q);d=f[j>>2]|0}}if(!(aJa(d)|0)){if(sGa(d)|0){ZU(a);break}if(nJa(d)|0)break;t6(a);break}n=ksa(g)|0;l=f[n+8>>2]|0;if(pJa(l)|0){m=(f[a+52>>2]|0)-(f[q>>2]|0)>>2;o=a+44|0;k=a+45|0;j=0;c=0;while(1){d=(c|0)!=0;if((j|0)==(m|0))break;e=f[q>>2]|0;h=f[e+(j<<2)>>2]|0;i=wAa(f[h>>2]|0)|0;g=h;do if((i|0)!=0?bDa(f[i+8>>2]|0,l)|0:0){d=f[i+12>>2]|0;if(!d)_ua(i);else{if(!(b[k>>0]|0))break;f[h>>2]=d}b[o>>0]=1;c=c+1|0}else p=47;while(0);if((p|0)==47){p=0;if(d)f[e+(j-c<<2)>>2]=g;else c=0}j=j+1|0}if(d)JM(q,m-c|0);d=n+12|0;c=n+16|0;while(1){if(!(gKa(f[c>>2]|0)|0))break a;q=efa(d)|0;if(!(sGa(f[f[q>>2]>>2]|0)|0))break a;lU(d,(gKa(f[c>>2]|0)|0)+-1|0);b[o>>0]=1}}}else{d=f[q>>2]|0;e=a+52|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;p=c+-4|0;f[e>>2]=p;c=p}p=(jsa(g)|0)+16|0;if(f[p>>2]|0){ZU(a);break}c=f[e>>2]|0;if((c|0)==(f[a+56>>2]|0))XC(q,i);else{f[c>>2]=h;f[e>>2]=(f[e>>2]|0)+4}b[a+45>>0]=1}while(0);u=r;return}function ch(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=u;u=u+80|0;n=q+68|0;e=q+64|0;j=q+52|0;l=q+40|0;m=q+28|0;o=q+16|0;k=q+4|0;p=q;rJa(e);g=f[a+44>>2]|0;h=g+(c*12|0)+4|0;r=f[h>>2]|0;i=r;a:do if((r|0)==(f[g+(c*12|0)>>2]|0)){g=(f[a+32>>2]|0)+(c<<2)|0;h=f[g>>2]|0;f[g>>2]=h+1;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;g=uHa(23432)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[o+11>>0]=g;a=o}else{r=g+16&-16;a=nV(r)|0;f[o>>2]=a;f[o+8>>2]=r|-2147483648;f[o+4>>2]=g}Pta(a,23432,g)|0;SBa(a+g|0,0);y=0;a=la(152,c|0)|0;r=y;y=0;if(!(r&1)?(y=0,ua(50,o|0,a|0)|0,r=y,y=0,!(r&1)):0){f[m>>2]=f[o>>2];f[m+4>>2]=f[o+4>>2];f[m+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}y=0;ua(50,m|0,23442)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ja(62,k|0,h|0);r=y;y=0;if(r&1)a=Pa()|0;else{r=b[k+11>>0]|0;i=r<<24>>24<0;y=0;oa(37,l|0,(i?f[k>>2]|0:k)|0,(i?f[k+4>>2]|0:r&255)|0)|0;r=y;y=0;do if(!(r&1)){f[j>>2]=f[l>>2];f[j+4>>2]=f[l+4>>2];f[j+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ya(64,n|0,((b[j+11>>0]|0)<0?f[j>>2]|0:j)|0,0);r=y;y=0;if(r&1){a=Pa()|0;zta(j);break}else{a=f[n>>2]|0;f[e>>2]=a;zta(j);zta(k);zta(l);zta(m);zta(o);break a}}else a=Pa()|0;while(0);zta(k)}zta(l)}zta(m)}else a=Pa()|0;zta(o);$a(a|0)}else{a=f[i+-4>>2]|0;f[e>>2]=a;g=0;while(1){if((g|0)==-1)break a;r=g+-1|0;f[h>>2]=i+(r<<2);g=r}}while(0);FCa(n,a);if((SN(d+52|0,n)|0)==(d+56|0)){a=f[e>>2]|0;FCa(p,a);f[n>>2]=f[p>>2];Xt(d,n,c)|0}u=q;return a|0}function dh(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+4192|0;o=s+4176|0;q=s;r=s+4112|0;p=(e|0)!=0;a:do if((a|0)!=0?(g=(c|0)!=0,n=(d|0)==0,!(g&n)):0){if(g)m=f[d>>2]|0;else m=0;$Ba(q);rI(r,q);i=r+48|0;h=r+61|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;b[i+12>>0]=0;b[h>>0]=1;i=r+32|0;j=r+36|0;g=f[j>>2]|0;if(g>>>0>=(f[r+40>>2]|0)>>>0){y=0;ja(2052,i|0,q|0);l=y;y=0;if(l&1)c=Pa()|0;else t=10}else{PDa(o,q);f[g>>2]=0;f[g+4>>2]=0;t=f[o>>2]|0;f[g+8>>2]=0;f[g+12>>2]=t;f[j>>2]=(f[j>>2]|0)+16;t=10}if((t|0)==10){k=r+62|0;b[k>>0]=0;b[r+63>>0]=1;f[o>>2]=0;l=a+(iJ(a)|0)|0;y=0;Ca(86,a|0,l|0,r|0,o|0);g=y;y=0;b:do if(!(g&1)){g=f[o>>2]|0;do if(!((g|0)!=0|(b[k>>0]|0)==0)){i=f[i>>2]|0;if((i|0)!=(f[j>>2]|0)?(f[i>>2]|0)!=(f[i+4>>2]|0):0){b[k>>0]=0;b[h>>0]=0;g=f[r>>2]|0;h=r+4|0;while(1){i=f[h>>2]|0;if((i|0)==(g|0))break;j=i+-24|0;f[h>>2]=j;Xka(j)}g=f[r+16>>2]|0;h=r+20|0;while(1){i=f[h>>2]|0;if((i|0)==(g|0))break;j=i+-16|0;f[h>>2]=j;tM(j)}y=0;Ca(86,a|0,l|0,r|0,o|0);a=y;y=0;if(a&1)break b;if(!(b[k>>0]|0)){g=f[o>>2]|0;t=25;break}else{f[o>>2]=-2;c=0;g=-2;break}}else t=26}else t=25;while(0);if((t|0)==25)if(!g)t=26;else c=0;do if((t|0)==26){h=r+4|0;i=J2((f[h>>2]|0)+-24|0)|0;g=i+1|0;if(g>>>0>m>>>0){c=LM(c,g)|0;if(!c){f[o>>2]=-1;c=0;g=-1;break}if(!n)f[d>>2]=g}else if(!c){c=0;g=0;break}d=f[h>>2]|0;m=d+-12|0;o=b[m+11>>0]|0;n=o<<24>>24<0;y=0;oa(73,d+-24|0,(n?f[m>>2]|0:m)|0,(n?f[d+-8>>2]|0:o&255)|0)|0;o=y;y=0;if(o&1)break b;g=(f[h>>2]|0)+-24|0;if((b[g+11>>0]|0)<0)g=f[g>>2]|0;rq(c|0,g|0,i|0)|0;b[c+i>>0]=0;g=0}while(0);if(p)f[e>>2]=g;RS(r);lCa(q);break a}while(0);c=Pa()|0}RS(r);lCa(q);$a(c|0)}else t=3;while(0);if((t|0)==3)if(p){f[e>>2]=-3;c=0}else c=0;u=s;return c|0}function eh(a,b){a=a|0;b=b|0;var c=0;if(!b)Na(59079,64509,76,59084);do switch(f[b>>2]|0){case 1:{c=rp(a,b)|0;break}case 2:{c=fr(a,b)|0;break}case 3:{c=gi(a,b)|0;break}case 4:{c=bn(a,b)|0;break}case 5:{c=bj(a,b)|0;break}case 6:{c=An(a,b)|0;break}case 7:{pB();break}case 8:{c=cg(a,b)|0;break}case 9:{c=tL(a,f[b+8>>2]|0)|0;break}case 10:{c=Lk(a,b)|0;break}case 11:{c=E7()|0;break}case 12:{c=E7()|0;break}case 13:{c=Yc(a,b)|0;break}case 14:{c=Tc(a,b)|0;break}case 25:{c=E7()|0;break}case 24:{c=E7()|0;break}case 26:{c=E7()|0;break}case 27:{c=E7()|0;break}case 15:{c=dq(a,b)|0;break}case 16:{c=xe(a,b)|0;break}case 17:{c=Sd(a,b)|0;break}case 18:{c=Je(a,b)|0;break}case 19:{c=HM(a,b)|0;break}case 20:{KLa();break}case 21:{KLa();break}case 22:{c=asa()|0;break}case 23:{c=Hma()|0;break}default:Ka()}while(0);return c|0}function fh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+32|0;s=v+20|0;c=v+12|0;r=v+16|0;w=v;k=f[f[a>>2]>>2]|0;f[r>>2]=f[b>>2];f[s>>2]=f[r>>2];k=UX(k,s)|0;f[c>>2]=k;Zx(w,k);r=a+4|0;b=f[r>>2]|0;t=k;d=Qn(b,w)|0;do if(!d){q=f[a+8>>2]|0;f[s>>2]=t;p=$z(s,4)|0;l=q+4|0;m=f[l>>2]|0;o=(m|0)==0;a:do if(!o){i=m+-1|0;j=(i&m|0)==0;if(!j)if(p>>>0<m>>>0)d=p;else d=(p>>>0)%(m>>>0)|0;else d=i&p;a=f[(f[q>>2]|0)+(d<<2)>>2]|0;if(!a)a=16;else while(1){a=f[a>>2]|0;if(!a){a=16;break a}h=f[a+4>>2]|0;if((h|0)!=(p|0)){if(!j){if(h>>>0>=m>>>0)h=(h>>>0)%(m>>>0)|0}else h=h&i;if((h|0)!=(d|0)){a=16;break a}}if((f[a+8>>2]|0)==(k|0)){a=35;break}}}else{d=0;a=16}while(0);b:do if((a|0)==16){y=0;Ca(67,s|0,q|0,p|0,c|0);k=y;y=0;if(k&1)a=37;else{i=q+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[q+16>>2];do if(o|e>+(m>>>0)*g){o=(m>>>0<3|(m+-1&m|0)!=0)&1|m<<1;m=~~+X(+(e/g))>>>0;y=0;ja(722,q|0,(o>>>0<m>>>0?m:o)|0);o=y;y=0;if(o&1){c=Pa()|0;b=f[s>>2]|0;f[s>>2]=0;if(b|0)$Ja(b);break b}b=f[l>>2]|0;d=b+-1|0;if(!(d&b)){h=b;d=d&p;break}if(p>>>0<b>>>0){h=b;d=p}else{h=b;d=(p>>>0)%(b>>>0)|0}}else h=m;while(0);b=f[(f[q>>2]|0)+(d<<2)>>2]|0;if(!b){b=q+8|0;a=f[s>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=a;f[(f[q>>2]|0)+(d<<2)>>2]=b;b=f[a>>2]|0;if(!b)b=s;else{b=f[b+4>>2]|0;d=h+-1|0;if(d&h){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&d;f[(f[q>>2]|0)+(b<<2)>>2]=a;b=s}}else{q=f[s>>2]|0;f[q>>2]=f[b>>2];f[b>>2]=q;b=s}f[i>>2]=(f[i>>2]|0)+1;f[b>>2]=0;b=f[r>>2]|0;a=35}}while(0);if((a|0)==35){y=0;b=ua(95,b|0,w|0)|0;s=y;y=0;if(s&1)a=37;else{f[b>>2]=t;break}}if((a|0)==37)c=Pa()|0;zta(w);$a(c|0)}else c=d+20|0;while(0);t=f[f[c>>2]>>2]|0;zta(w);u=v;return t|0}function gh(a){a=a|0;var c=0,d=0,e=0,g=0,i=0;i=u;u=u+16|0;d=i;c=pAa(a)|0;g=a+4|0;a:do if(!c){d=eAa(a)|0;b:do if(!d){c=nAa(a)|0;if(c|0)switch(f[c+8>>2]|0){case 4:case 2:case 0:{e=6;break a}case 5:case 3:case 1:{e=7;break a}case 21:case 20:{e=1;break a}case 24:{e=gh(f[c+12>>2]|0)|0;e=e>>>0<32?e:32;break a}default:break b}c=Iza(a)|0;if(c|0){e=gh(f[c+12>>2]|0)|0;break a}c=Pza(a)|0;if(c|0){e=dwa(f[c+4>>2]|0)|0;break a}c=yAa(a)|0;if(c|0?(b[c+9>>0]|0)==0:0){e=h[c+8>>0]<<3;break a}}else{c=d+16|0;a=d+12|0;switch(f[d+8>>2]|0){case 14:case 13:case 6:case 5:case 4:case 3:case 2:case 1:case 0:{e=32;break a}case 7:{e=gh(f[a>>2]|0)|0;g=gh(f[c>>2]|0)|0;e=g>>>0<e>>>0?g:e;break a}case 9:case 8:{e=gh(f[a>>2]|0)|0;g=gh(f[c>>2]|0)|0;e=e>>>0<g>>>0?g:e;break a}case 10:{c=pAa(f[c>>2]|0)|0;if(!c){e=32;break a}e=(gh(f[a>>2]|0)|0)+(FR(c)|0)|0;e=e>>>0<32?e:32;break a}case 11:{c=pAa(f[c>>2]|0)|0;if(!c){e=32;break a}g=gh(f[a>>2]|0)|0;e=FR(c)|0;e=g-(g>>>0<e>>>0?g:e)|0;break a}case 12:{d=pAa(f[c>>2]|0)|0;if(!d){e=32;break a}c=gh(f[a>>2]|0)|0;if((c|0)==32){e=32;break a}e=FR(d)|0;e=c-(c>>>0<e>>>0?c:e)|0;break a}case 75:case 74:case 73:case 72:case 71:case 70:case 62:case 61:case 60:case 59:case 58:case 57:case 49:case 48:case 47:case 46:case 45:case 44:case 43:case 42:case 41:case 40:case 24:case 23:case 22:case 21:case 20:case 19:case 18:case 17:case 16:case 15:{e=1;break a}default:break b}}while(0);switch(f[g>>2]|0){case 1:{e=32;break a}case 2:{e=64;break a}case 5:{e=64;break a}default:Ka()}}else{c=c+8|0;switch(f[g>>2]|0){case 1:{rT(d,c);e=32-(csa(d)|0)|0;break a}case 2:{rT(d,c);e=Aoa(64,0,Eka(d)|0,J|0)|0;break a}default:Ka()}}while(0);u=i;return e|0}function hh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;l=o;m=o+4|0;f[l>>2]=c;f[m>>2]=0;n=m+4|0;f[n>>2]=0;f[m+8>>2]=0;h=m+8|0;i=a+20|0;j=a+4|0;e=0;g=0;d=0;while(1){if((e|0)!=(g|0)){y=0;ua(98,f[a>>2]|0,f[j>>2]|0)|0;g=y;y=0;if(g&1)break;d=f[n>>2]|0}if((d|0)==(f[h>>2]|0)){y=0;ja(115,m|0,l|0);g=y;y=0;if(g&1)break}else{f[d>>2]=c;f[n>>2]=(f[n>>2]|0)+4}if(b[i>>0]|0){y=0;d=ua(53,f[a>>2]|0,37658)|0;g=y;y=0;if(g&1)break;y=0;c=la(152,f[(f[l>>2]|0)+4>>2]|0)|0;g=y;y=0;if(g&1)break;y=0;d=ua(53,d|0,c|0)|0;g=y;y=0;if(g&1)break;y=0;ua(53,d|0,59873)|0;g=y;y=0;if(g&1)break}y=0;oa(53,f[a>>2]|0,53179,0)|0;g=y;y=0;if(g&1)break;e=f[l>>2]|0;d=e+8|0;if(pJa(f[d>>2]|0)|0){y=0;ua(67,f[a>>2]|0,32)|0;g=y;y=0;if(g&1)break;y=0;ua(101,a|0,f[d>>2]|0)|0;g=y;y=0;if(g&1)break}d=e+4|0;if(rCa(f[d>>2]|0)|0){y=0;c=ua(53,f[a>>2]|0,39243)|0;g=y;y=0;if(g&1)break;y=0;d=la(152,f[d>>2]|0)|0;g=y;y=0;if(g&1)break;y=0;d=ua(53,c|0,d|0)|0;g=y;y=0;if(g&1)break;y=0;ua(67,d|0,41)|0;g=y;y=0;if(g&1)break}y=0;ia(365,a|0);g=y;y=0;if(g&1)break;if(!(gKa(f[e+16>>2]|0)|0)){k=29;break}d=e+12|0;y=0;c=ua(64,d|0,0)|0;g=y;y=0;if(g&1)break;if(!(aJa(f[f[c>>2]>>2]|0)|0)){k=29;break}y=0;d=ua(64,d|0,0)|0;g=y;y=0;if(g&1)break;y=0;c=la(160,f[d>>2]|0)|0;g=y;y=0;if(g&1)break;f[l>>2]=c;d=f[n>>2]|0;e=d;g=f[m>>2]|0}a:do if((k|0)==29){e=f[n>>2]|0;i=f[e+-4>>2]|0;d=e;while(1){if((d|0)==(f[m>>2]|0))break;c=f[e+-4>>2]|0;f[l>>2]=c;d=0;while(1){if((d|0)==-1)break;k=d+-1|0;f[n>>2]=e+(k<<2);d=k}g=c+12|0;e=c+16|0;d=0;while(1){if(d>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break;if((d|0)==0&(c|0)!=(i|0)){y=0;ia(366,a|0);k=y;y=0;if(k&1)break a;y=0;ua(67,f[a>>2]|0,10)|0;k=y;y=0;if(k&1)break a}else{y=0;h=ua(64,g|0,d|0)|0;k=y;y=0;if(k&1)break a;y=0;ja(1020,a|0,f[h>>2]|0);k=y;y=0;if(k&1)break a}d=d+1|0}e=f[n>>2]|0;d=e}y=0;ia(366,a|0);n=y;y=0;if(!(n&1)){E4(m);u=o;return}}while(0);o=Pa()|0;E4(m);$a(o|0)}function ih(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+48|0;n=o+16|0;k=o;j=a;a:do if((c-j|0)>1?(b[a>>0]|0)==84:0){e=b[a+1>>0]|0;m=d+62|0;i=d+32|0;do if(e<<24>>24==95){e=f[d+36>>2]|0;if((f[i>>2]|0)==(e|0))break a;g=f[e+-16>>2]|0;a=a+2|0;if((g|0)==(f[e+-12>>2]|0)){cR(n);e=d+4|0;g=f[e>>2]|0;if(g>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,n|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(n);break}}else{ZL(g,n);f[e>>2]=(f[e>>2]|0)+24}Xka(n);b[m>>0]=1;break a}h=f[g+4>>2]|0;c=d+4|0;i=d+8|0;e=f[g>>2]|0;while(1){if((e|0)==(h|0))break a;g=f[c>>2]|0;if((g|0)==(f[i>>2]|0))Lt(d,e);else{VT(g,e);f[c>>2]=(f[c>>2]|0)+24}e=e+24|0}}else{e=(e<<24>>24)+-48|0;if(e>>>0>=10)break a;g=a+2|0;while(1){l=g+1|0;if((g|0)==(c|0))break a;g=b[g>>0]|0;h=(g<<24>>24)+-48|0;if(h>>>0>=10)break;e=h+(e*10|0)|0;g=l}if(g<<24>>24!=95)break a;g=f[d+36>>2]|0;if((f[i>>2]|0)==(g|0))break a;e=e+1|0;c=f[g+-16>>2]|0;i=c;if(e>>>0<(f[g+-12>>2]|0)-c>>4>>>0){g=f[i+(e<<4)+4>>2]|0;h=d+4|0;c=d+8|0;a=f[i+(e<<4)>>2]|0;while(1){if((a|0)==(g|0)){a=l;break a}e=f[h>>2]|0;if((e|0)==(f[c>>2]|0))Lt(d,a);else{VT(e,a);f[h>>2]=(f[h>>2]|0)+24}a=a+24|0}}f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;h=l-j|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[k+11>>0]=h;g=k}else{j=h+16&-16;g=QCa(j)|0;f[k>>2]=g;f[k+8>>2]=j|-2147483648;f[k+4>>2]=h}e=g;while(1){if((a|0)==(l|0))break;SBa(e,b[a>>0]|0);a=a+1|0;e=e+1|0}SBa(g+h|0,0);hM(n,k);e=d+4|0;a=f[e>>2]|0;if(a>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,n|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(n);zta(k);break}}else{ZL(a,n);f[e>>2]=(f[e>>2]|0)+24}Xka(n);zta(k);b[m>>0]=1;a=l;break a}while(0);$a(a|0)}while(0);u=o;return a|0}function jh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;v=u;u=u+112|0;q=v+12|0;s=v+4|0;n=v+8|0;o=v;k=c+8|0;if(((((pJa(f[k>>2]|0)|0?(t=xAa(f[c+12>>2]|0)|0,(t|0)!=0):0)?(m=t+12|0,r=t+16|0,(gKa(f[r>>2]|0)|0)>>>0>=2):0)?(d=efa(m)|0,d=wAa(f[d>>2]|0)|0,(d|0)!=0):0)?nra(d)|0:0)?(j=d+8|0,!(aDa(f[j>>2]|0,f[k>>2]|0)|0)):0){h=(gKa(f[r>>2]|0)|0)+-2|0;e=f[a+36>>2]|0;gKa(e)|0;VBa(s,e);e=q+26|0;c=a+40|0;while(1){d=bga(m,h)|0;d=f[d>>2]|0;g=YAa(d)|0;if(g|0){i=9;break}a=wAa(d)|0;if(a|0){i=21;break}Ot(q,uya(f[c>>2]|0)|0,d);g=(b[e>>0]|0)!=0;hT(q);if((h|0)==0|g){c=0;break}else h=h+-1|0}a:do if((i|0)==9){e=g+16|0;c=h+1|0;d=g+12|0;if(!(f[e>>2]|0)){if(!(wA(f[d>>2]|0)|0)){c=0;break}c=Rv(s,t,c,gKa(f[r>>2]|0)|0)|0;f[e>>2]=c;qO(g);Do(t);c=1;break}if(rCa(f[g+4>>2]|0)|0)Na(35553,35457,262,35584);f[q>>2]=s;p=wA(f[d>>2]|0)|0;a=f[e>>2]|0;do if(!p)if(wA(a)|0){p=f[d>>2]|0;s=Jr(q,p,Rv(s,t,c,gKa(f[r>>2]|0)|0)|0)|0;f[d>>2]=s;qO(g);Do(t);break}else{c=0;break a}else{s=Jr(q,a,Rv(s,t,c,gKa(f[r>>2]|0)|0)|0)|0;f[e>>2]=s;qO(g);Do(t)}while(0);c=1}else if((i|0)==21){d=a+16|0;c=f[d>>2]|0;if(((c|0)!=0?(f[a+12>>2]|0)==0:0)?(p=a+8|0,l=f[p>>2]|0,aDa(l,f[k>>2]|0)|0):0){if((h|0)==((gKa(f[r>>2]|0)|0)+-2|0)){c=dea(f[s>>2]|0,20,c)|0;f[d>>2]=c;f[j>>2]=f[p>>2];f[p>>2]=f[k>>2];c=1;break}c=f[t+8>>2]|0;if(bDa(l,c)|0?(f[n>>2]=c,f[q>>2]=f[n>>2],(HB(t,q)|0)==1):0){n=f[d>>2]|0;f[o>>2]=f[p>>2];f[q>>2]=f[o>>2];c=q3(s,q,0,0)|0;t=Rv(s,t,h+1|0,gKa(f[r>>2]|0)|0)|0;t=j9(f[s>>2]|0,n,c,t)|0;c=bga(m,h)|0;f[c>>2]=t;c=1}else c=0}else c=0}while(0)}else c=0;u=v;return c|0}function kh(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+48|0;w=v+24|0;q=v+16|0;n=v+8|0;r=v;f[w>>2]=0;t=w+4|0;f[t>>2]=0;f[w+8>>2]=0;Bwa(q,b);iua(n,b);p=a+8|0;o=w+8|0;l=q+4|0;m=f[n>>2]|0;n=f[n+4>>2]|0;while(1){if(!(Cpa(f[q>>2]|0,f[l>>2]|0,m,n)|0)){i=3;break}y=0;k=la(156,q|0)|0;j=y;y=0;if(j&1){i=4;break}y=0;j=la(150,16)|0;i=y;y=0;if(i&1){i=20;break}y=0;ga(4,j|0,f[(f[k>>2]|0)+4>>2]|0,f[a>>2]|0,f[p>>2]|0,f[18679]|0);i=y;y=0;if(i&1){i=21;break}f[r>>2]=j;b=f[t>>2]|0;if(b>>>0<(f[o>>2]|0)>>>0){f[b>>2]=j;b=(f[t>>2]|0)+4|0;f[t>>2]=b}else{y=0;ja(79,w|0,r|0);j=y;y=0;if(j&1){i=20;break}b=f[t>>2]|0}i=f[(f[b+-4>>2]|0)+8>>2]|0;y=0;b=oa(43,a|0,f[k>>2]|0,i|0)|0;j=y;y=0;if(j&1){i=23;break}y=0;ja(78,c|0,b|0);j=y;y=0;if(j&1){i=23;break}y=0;b=ua(56,d|0,2)|0;j=y;y=0;if(j&1){i=23;break}j=gKa(f[b>>2]|0)|0;y=0;i=la(151,i|0)|0;b=y;y=0;if(b&1){i=23;break}y=0;b=la(155,f[(f[k>>2]|0)+4>>2]|0)|0;k=y;y=0;if(k&1){i=23;break}y=0;b=ua(58,i|0,b|0)|0;k=y;y=0;if(k&1){i=23;break}y=0;ua(49,j|0,b|0)|0;k=y;y=0;if(k&1){i=23;break}bva(q)}a:do if((i|0)==3){y=0;b=la(155,g|0)|0;g=y;y=0;if(!(g&1)?(y=0,h=ua(58,d|0,b|0)|0,d=y,y=0,!(d&1)):0){do if(aDa(e,f[18679]|0)|0){y=0;b=la(151,e|0)|0;e=y;y=0;if(!(e&1)?(y=0,s=oa(41,b|0,f[18859]|0,h|0)|0,e=y,y=0,!(e&1)):0){gKa(s)|0;h=s;break}h=Pa()|0;break a}while(0);y=0;ja(78,c|0,h|0);s=y;y=0;if(s&1){h=Pa()|0;break}b=f[t>>2]|0;h=f[w>>2]|0;while(1){if((h|0)==(b|0))break;i=f[h>>2]|0;if(i|0){iX(i);$Ja(i)}h=h+4|0}E4(w);u=v;return c|0}h=Pa()|0}else if((i|0)==4){h=Pa()|0;i=24}else if((i|0)==20){h=Pa()|0;i=22}else if((i|0)==21){h=Pa()|0;$Ja(j);i=22}else if((i|0)==23){h=Pa()|0;i=24}while(0);if((i|0)==22)i=24;E4(w);$a(h|0);return 0}function lh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;e=l+4|0;d=l;j=b+8|0;c=f[j>>2]|0;if(pJa(c)|0){f[d>>2]=c;f[e>>2]=f[d>>2];ME(a,e);c=a+40|0;if(QZ(c,b)|0){f[e>>2]=b;h=$I(c,e)|0;d=b+4|0;m=rCa(f[d>>2]|0)|0;e=h+4|0;c=f[e>>2]|0;if(m)So(a,(c|0)!=0,b,59910)|0;else So(a,(c|0)==0,b,59957)|0;c=f[h>>2]|0;if(rCa(c)|0?(g=f[d>>2]|0,rCa(g)|0):0)ek(a,g,c,b,60003);d=f[d>>2]|0;m=(rCa(d)|0)^1;c=f[e>>2]|0;if(!((c|0)==0|m)?(i=f[h>>2]|0,(i|0)!=5):0){ek(a,d,i,b,60062);c=f[e>>2]|0}So(a,(c|0)!=-1,b,60117)|0;if(gKa(f[b+16>>2]|0)|0){c=efa(b+12|0)|0;c=f[(f[c>>2]|0)+4>>2]|0;if(rCa(c)|0?(k=f[h>>2]|0,(k|0)!=5):0)ek(a,c,k,b,60142);if(!c)So(a,(f[e>>2]|0)==0,b,60213)|0}}WU(a+28|0,j);WU(a+52|0,j)}e=b+12|0;h=b+16|0;c=f[h>>2]|0;a:do if((gKa(c)|0)>>>0>1){d=0;while(1){if(d>>>0>=(c+-1|0)>>>0)break a;m=bga(e,d)|0;if(!(So(a,(rCa(f[(f[m>>2]|0)+4>>2]|0)|0)^1,b,60279)|0)){m=Vea(vj(Vea(76852,60383)|0,d)|0,60394)|0;k=bga(e,d)|0;k=Vea(wja(m,f[k>>2]|0)|0,60397)|0;m=bga(e,d)|0;Vea(wj(k,f[(f[m>>2]|0)+4>>2]|0)|0,60408)|0}d=d+1|0;c=f[h>>2]|0}}while(0);do if(gKa(c)|0){d=efa(e)|0;d=f[(f[d>>2]|0)+4>>2]|0;c=b+4|0;e=f[c>>2]|0;m=rCa(e)|0;g=rCa(d)|0;if(!m){if(!g)break;So(a,(e|0)==5,b,60410)|0;break}if(g){ek(a,e,d,b,60482);break}else{Ck(a,d,b);break}}else c=b+4|0;while(0);if(rCa(f[c>>2]|0)|0)So(a,(gKa(f[h>>2]|0)|0)!=0,b,60601)|0;u=l;return}function mh(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+16|0;l=m+12|0;n=m;k=a+12|0;do if(b[k>>0]|0){e=Vea(76852,57722)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[l>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,j=y,y=0,!(j&1)):0){pza(l);jn(e,d)|0;Yp(e)|0;break}n=Pa()|0;pza(l);$a(n|0)}while(0);j=Nm(a)|0;do if(b[k>>0]|0){c=vj(Vea(76852,57222)|0,j)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[l>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(l);jn(c,g)|0;Yp(c)|0;break}n=Pa()|0;pza(l);$a(n|0)}while(0);g=a+76|0;h=a+80|0;i=a+72|0;e=0;while(1){if(e>>>0>=j>>>0){h=13;break}if(b[k>>0]|0){d=Vea(76852,57228)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[l>>2]|0,77556)|0;o=y;y=0;if(o&1){h=17;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;o=y;y=0;if(o&1){h=17;break}pza(l);jn(d,c)|0;Yp(d)|0}c=Nm(a)|0;o=f[a>>2]|0;d=f[o>>2]|0;if(c>>>0>=(f[o+4>>2]|0)-d>>2>>>0){h=20;break}c=f[d+(c<<2)>>2]|0;f[l>>2]=c;d=f[g>>2]|0;if(d>>>0<(f[h>>2]|0)>>>0){f[d>>2]=c;f[g>>2]=(f[g>>2]|0)+4}else XC(i,l);e=e+1|0}if((h|0)==13){u=m;return}else if((h|0)==17){o=Pa()|0;pza(l);$a(o|0)}else if((h|0)==20){g=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;e=uHa(57748)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[n+11>>0]=e;c=n}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){h=28;break}f[n>>2]=c;f[n+8>>2]=d|-2147483648;f[n+4>>2]=e}Pta(c,57748,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,n|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(n);if(d)h=30}else{y=0;za(3);y=0;h=28}while(0);if((h|0)==28){c=Pa()|0;h=30}if((h|0)==30)Oa(g|0);$a(c|0)}}function nh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=f[c>>2]|0;m=c+4|0;if(d)if(!(f[m>>2]|0))n=c;else{d=VX(c)|0;n=d;d=f[d>>2]|0}else{n=c;d=0}j=n+4|0;k=f[(d|0?n:j)>>2]|0;l=(k|0)!=0;i=n+8|0;if(l)f[k+8>>2]=f[i>>2];e=f[i>>2]|0;h=f[e>>2]|0;if((h|0)==(n|0)){f[e>>2]=k;if((n|0)==(a|0)){d=k;h=0}else{d=a;h=f[e+4>>2]|0}}else{f[e+4>>2]=k;d=a}a=n+12|0;g=(b[a>>0]|0)!=0;if((n|0)!=(c|0)){p=c+8|0;e=f[p>>2]|0;f[i>>2]=e;f[((f[f[p>>2]>>2]|0)==(c|0)?e:e+4|0)>>2]=n;e=f[c>>2]|0;f[n>>2]=e;f[e+8>>2]=n;e=f[m>>2]|0;f[j>>2]=e;if(e|0)f[e+8>>2]=n;b[a>>0]=b[c+12>>0]|0;d=(d|0)==(c|0)?n:d}a:do if(g&(d|0)!=0){if(l){b[k+12>>0]=1;break}else g=d;while(1){d=f[h+8>>2]|0;e=h+12|0;a=(b[e>>0]|0)!=0;if((f[d>>2]|0)==(h|0)){if(a)e=h;else{b[e>>0]=1;b[d+12>>0]=0;iU(d);p=f[h+4>>2]|0;e=f[p>>2]|0;g=(g|0)==(p|0)?h:g}d=f[e>>2]|0;i=(d|0)==0;j=e+12|0;a=e+4|0;h=d+12|0;if(!i?(b[h>>0]|0)==0:0){g=43;break}a=f[a>>2]|0;if(a|0?(o=a+12|0,(b[o>>0]|0)==0):0){g=40;break}b[j>>0]=0;d=f[e+8>>2]|0;e=d+12|0;if((d|0)==(g|0)|(b[e>>0]|0)==0){g=39;break}else e=g}else{if(a)e=h;else{b[e>>0]=1;b[d+12>>0]=0;SU(d);p=f[h>>2]|0;e=f[p+4>>2]|0;g=(g|0)==(p|0)?h:g}p=f[e>>2]|0;a=e+12|0;d=f[e+4>>2]|0;h=d+12|0;i=p+12|0;j=(d|0)==0;if(p|0?(b[i>>0]|0)==0:0){g=28;break}if(!j?(b[h>>0]|0)==0:0){g=31;break}b[a>>0]=0;d=f[e+8>>2]|0;e=d+12|0;if((d|0)==(g|0)){g=27;break}if(!(b[e>>0]|0)){g=27;break}else e=g}h=f[d+8>>2]|0;h=f[((f[h>>2]|0)==(d|0)?h+4|0:h)>>2]|0;g=e}do if((g|0)==27){b[e>>0]=1;break a}else if((g|0)==28){if(!j?(b[h>>0]|0)==0:0){g=31;break}b[i>>0]=1;b[a>>0]=0;iU(e);d=f[e+8>>2]|0;e=d;d=f[d+4>>2]|0;g=31}else if((g|0)==39){b[e>>0]=1;break a}else if((g|0)==40){if(!i?(b[h>>0]|0)==0:0){g=43;break}b[o>>0]=1;b[j>>0]=0;SU(e);d=f[e+8>>2]|0;e=d;d=f[d>>2]|0;g=43}while(0);if((g|0)==31){p=f[e+8>>2]|0;o=p+12|0;b[e+12>>0]=b[o>>0]|0;b[o>>0]=1;b[d+12>>0]=1;SU(p);break}else if((g|0)==43){p=f[e+8>>2]|0;o=p+12|0;b[e+12>>0]=b[o>>0]|0;b[o>>0]=1;b[d+12>>0]=1;iU(p);break}}while(0);return}function oh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n;a:do if((b[a+26>>0]|0)==0?(b[c+26>>0]|0)==0:0){i=a+27|0;if(!((b[a+77>>0]|0)==0?!(b[i>>0]|0):0))l=5;if((l|0)==5?Dna(c)|0:0){d=1;break}j=c+27|0;if(Dna(a)|0?(b[j>>0]|b[c+77>>0])<<24>>24:0){d=1;break}if(b[a+79>>0]|0?Dna(c)|0:0){d=1;break}if(b[c+79>>0]|0?Dna(a)|0:0){d=1;break}g=a+44|0;k=c+40|0;h=c+28|0;d=f[a+40>>2]|0;b:while(1){if((d|0)==(g|0))break;e=f[d+16>>2]|0;if(QZ(k,e)|0){d=1;break a}if(QZ(h,e)|0){d=1;break a}e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue b}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}g=a+32|0;d=f[a+28>>2]|0;c:while(1){if((d|0)==(g|0))break;if(QZ(k,f[d+16>>2]|0)|0){d=1;break a}e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue c}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}k=(lAa(f[a+60>>2]|0,f[a+72>>2]|0)|0)^1;if((b[j>>0]|0)==0|k){if(lAa(f[c+60>>2]|0,f[c+72>>2]|0)|0?b[i>>0]|0:0){d=1;break}g=a+68|0;i=c+64|0;h=c+52|0;d=f[a+64>>2]|0;d:while(1){if((d|0)==(g|0))break;f[m>>2]=f[d+16>>2];if(WS(i,m)|0){l=38;break}if(WS(h,m)|0){l=38;break}e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue d}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}if((l|0)==38){d=1;break}g=a+56|0;d=f[a+52>>2]|0;e:while(1){if((d|0)==(g|0))break;f[m>>2]=f[d+16>>2];if(WS(i,m)|0){d=1;break a}e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue e}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}d=(b[c+78>>0]|0)==0;if(b[a+78>>0]|0?dga(c)|0:0){d=1;break}if(!d?dga(a)|0:0){d=1;break}d=0}else d=1}else d=1;while(0);u=n;return d|0}function ph(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;A=u;u=u+144|0;p=A+132|0;v=A+128|0;j=A+124|0;k=A+120|0;w=A+116|0;l=A+16|0;m=A;n=A+96|0;o=A+80|0;q=A+112|0;x=A+68|0;r=A+48|0;s=A+64|0;t=A+32|0;z=A+36|0;switch(c|0){case 13:case 14:case 38:case 39:break;default:Na(19246,19319,318,19334)}h=(c|0)==13;i=(c|0)==38;PDa(v,a);e=(c+-13|0)>>>0<2;g=e&1;a=h|i;if((b[73968]|0)==0?twa(73968)|0:0){FCa(74724,f[18772]|0);FCa(74728,f[18773]|0);FCa(74732,f[18774]|0);FCa(74736,f[18775]|0)}c=a&1;a=e&1;d=f[74724+(c<<3)+(a<<2)>>2]|0;c=f[5976+(c<<3)+(a<<2)>>2]|0;a=f[5976+(((h^(i^1))&1)<<3)+(a<<2)>>2]|0;f[j>>2]=e?7:32;f[k>>2]=e?1:26;f[w>>2]=e?1:2;if(e){uAa(l,31);uAa(m,32)}else{Ysa(l,63,0);Ysa(m,64,0)}f[n>>2]=v;f[n+4>>2]=j;f[n+8>>2]=w;f[n+12>>2]=l;f[o>>2]=v;f[o+4>>2]=k;f[o+8>>2]=m;f[o+12>>2]=n;m=aO(v,g)|0;l=aG(n)|0;l=s5(f[v>>2]|0,a,m,l)|0;m=f[j>>2]|0;k=gia(v,0,f[w>>2]|0)|0;k=s5(f[v>>2]|0,m,l,k)|0;n=aG(n)|0;n=s5(f[v>>2]|0,c,k,n)|0;k=aO(v,g)|0;l=$H(o)|0;l=s5(f[v>>2]|0,c,k,l)|0;k=f[j>>2]|0;m=gia(v,0,f[w>>2]|0)|0;m=s5(f[v>>2]|0,k,l,m)|0;o=$H(o)|0;a=s5(f[v>>2]|0,a,m,o)|0;a=s5(f[v>>2]|0,e?8:33,n,a)|0;f[q>>2]=d;dCa(s,19346);o=f[w>>2]|0;f[p>>2]=f[s>>2];qta(r,p,o);dCa(t,19348);s=f[w>>2]|0;f[p>>2]=f[t>>2];qta(r+8|0,p,s);f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;y=0;ja(56,x|0,2);t=y;y=0;if(t&1){A=Pa()|0;a3(x);$a(A|0)}kR(x,r,r+16|0);w=f[w>>2]|0;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;y=0;f[p>>2]=f[q>>2];a=ka(39,v|0,p|0,x|0,w|0,z|0,a|0)|0;w=y;y=0;if(w&1){A=Pa()|0;a3(z);a3(x);$a(A|0)}else{a3(z);a3(x);u=A;return a|0}return 0}function qh(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=u;u=u+112|0;q=n+88|0;j=n+64|0;k=n+36|0;l=n+48|0;m=n+24|0;o=n+12|0;p=n;a:do if((((((c-a|0)>2?(b[a>>0]|0)==114:0)?(b[a+1>>0]|0)==99:0)?(r=a+2|0,e=ic(r,c,d)|0,(e|0)!=(r|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(q,g+-24|0);a=f[i>>2]|0;c=a+-24|0;d=a;while(1){if((d|0)==(c|0))break;r=d+-24|0;f[i>>2]=r;Xka(r);d=f[i>>2]|0}y=0;ja(2054,p|0,a+-48|0);r=y;y=0;if(r&1)a=Pa()|0;else{y=0;oa(77,p|0,0,72335)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,o|0,72332)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[m>>2]=f[o>>2];f[m+4>>2]=f[o+4>>2];f[m+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}r=b[q+11>>0]|0;g=r<<24>>24<0;y=0;oa(73,m|0,(g?f[q>>2]|0:q)|0,(g?f[q+4>>2]|0:r&255)|0)|0;r=y;y=0;do if(r&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,72083)|0;r=y;y=0;if(r&1){a=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);zta(o);zta(p);zta(q);a=h;break a}while(0);zta(m)}zta(o)}zta(p)}zta(q);$a(a|0)}while(0);u=n;return a|0}function rh(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=u;u=u+112|0;q=n+88|0;j=n+64|0;k=n+36|0;l=n+48|0;m=n+24|0;o=n+12|0;p=n;a:do if((((((c-a|0)>2?(b[a>>0]|0)==100:0)?(b[a+1>>0]|0)==99:0)?(r=a+2|0,e=ic(r,c,d)|0,(e|0)!=(r|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(q,g+-24|0);a=f[i>>2]|0;c=a+-24|0;d=a;while(1){if((d|0)==(c|0))break;r=d+-24|0;f[i>>2]=r;Xka(r);d=f[i>>2]|0}y=0;ja(2054,p|0,a+-48|0);r=y;y=0;if(r&1)a=Pa()|0;else{y=0;oa(77,p|0,0,73235)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,o|0,72332)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[m>>2]=f[o>>2];f[m+4>>2]=f[o+4>>2];f[m+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}r=b[q+11>>0]|0;g=r<<24>>24<0;y=0;oa(73,m|0,(g?f[q>>2]|0:q)|0,(g?f[q+4>>2]|0:r&255)|0)|0;r=y;y=0;do if(r&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,72083)|0;r=y;y=0;if(r&1){a=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);zta(o);zta(p);zta(q);a=h;break a}while(0);zta(m)}zta(o)}zta(p)}zta(q);$a(a|0)}while(0);u=n;return a|0}function sh(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=u;u=u+32|0;p=q+24|0;g=q+20|0;k=q+16|0;l=q+12|0;m=q+8|0;n=q+4|0;o=q;j=f[a>>2]|0;do if((f[j+16>>2]|0)!=(f[j+12>>2]|0)){j=a+12|0;do if(b[j>>0]|0){c=Vea(76852,59645)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[p>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(p);jn(c,e)|0;Yp(c)|0;break}q=Pa()|0;pza(p);$a(q|0)}while(0);i=uW(a,2)|0;h=a+4|0;e=f[h>>2]|0;d=f[a>>2]|0;PDa(g,(f[d+16>>2]|0)-(f[d+12>>2]|0)>>2);Un(e,f[g>>2]|0)|0;e=f[a>>2]|0;g=f[e+16>>2]|0;e=f[e+12>>2]|0;a:while(1){if((e|0)==(g|0)){c=9;break}if(b[j>>0]|0){d=Vea(76852,59544)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[p>>2]|0,77556)|0;r=y;y=0;if(r&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;r=y;y=0;if(r&1){c=13;break}pza(p);jn(d,c)|0;Yp(d)|0}JO(a,f[(f[e>>2]|0)+4>>2]|0);JO(a,f[(f[e>>2]|0)+8>>2]|0);c=f[h>>2]|0;PDa(k,f[(f[e>>2]|0)+12>>2]|0);Un(c,f[k>>2]|0)|0;c=f[e>>2]|0;switch(f[c+12>>2]|0){case 0:{r=f[h>>2]|0;f[m>>2]=f[c+16>>2];f[p>>2]=f[m>>2];PDa(l,xP(a,p)|0);Un(r,f[l>>2]|0)|0;break}case 1:{d=f[h>>2]|0;PDa(n,-16);Ln(d,f[n>>2]|0)|0;d=f[a>>2]|0;r=f[d+72>>2]|0;iF(a,f[d+68>>2]|0,r,(gKa(r)|0)!=-1,0);break}case 2:{r=f[a>>2]|0;c=f[r+92>>2]|0;d=f[r+96>>2]|0;iF(a,c,d,(gKa(d)|0)!=65535,(b[r+114>>0]|0)!=0);break}case 3:{Ln(f[h>>2]|0,GU(f[c+20>>2]|0)|0)|0;r=f[h>>2]|0;PDa(o,0);Un(r,f[o>>2]|0)|0;break}default:{c=20;break a}}e=e+4|0}if((c|0)==9){KE(a,i);break}else if((c|0)==13){r=Pa()|0;pza(p);$a(r|0)}else if((c|0)==20)Ka()}while(0);u=q;return}function th(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=u;u=u+112|0;q=n+88|0;j=n+64|0;k=n+36|0;l=n+48|0;m=n+24|0;o=n+12|0;p=n;a:do if((((((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==99:0)?(r=a+2|0,e=ic(r,c,d)|0,(e|0)!=(r|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(q,g+-24|0);a=f[i>>2]|0;c=a+-24|0;d=a;while(1){if((d|0)==(c|0))break;r=d+-24|0;f[i>>2]=r;Xka(r);d=f[i>>2]|0}y=0;ja(2054,p|0,a+-48|0);r=y;y=0;if(r&1)a=Pa()|0;else{y=0;oa(77,p|0,0,72319)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,o|0,72332)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[m>>2]=f[o>>2];f[m+4>>2]=f[o+4>>2];f[m+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}r=b[q+11>>0]|0;g=r<<24>>24<0;y=0;oa(73,m|0,(g?f[q>>2]|0:q)|0,(g?f[q+4>>2]|0:r&255)|0)|0;r=y;y=0;do if(r&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,72083)|0;r=y;y=0;if(r&1){a=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);zta(o);zta(p);zta(q);a=h;break a}while(0);zta(m)}zta(o)}zta(p)}zta(q);$a(a|0)}while(0);u=n;return a|0}function uh(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=u;u=u+112|0;q=n+88|0;j=n+64|0;k=n+36|0;l=n+48|0;m=n+24|0;o=n+12|0;p=n;a:do if((((((c-a|0)>2?(b[a>>0]|0)==99:0)?(b[a+1>>0]|0)==99:0)?(r=a+2|0,e=ic(r,c,d)|0,(e|0)!=(r|0)):0)?(h=fc(e,c,d)|0,(h|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){HL(q,g+-24|0);a=f[i>>2]|0;c=a+-24|0;d=a;while(1){if((d|0)==(c|0))break;r=d+-24|0;f[i>>2]=r;Xka(r);d=f[i>>2]|0}y=0;ja(2054,p|0,a+-48|0);r=y;y=0;if(r&1)a=Pa()|0;else{y=0;oa(77,p|0,0,73252)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,o|0,72332)|0;r=y;y=0;if(r&1)a=Pa()|0;else{f[m>>2]=f[o>>2];f[m+4>>2]=f[o+4>>2];f[m+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}r=b[q+11>>0]|0;g=r<<24>>24<0;y=0;oa(73,m|0,(g?f[q>>2]|0:q)|0,(g?f[q+4>>2]|0:r&255)|0)|0;r=y;y=0;do if(r&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,72083)|0;r=y;y=0;if(r&1){a=Pa()|0;zta(l);break}f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}hM(j,k);nu((f[i>>2]|0)+-24|0,j);Xka(j);zta(k);zta(l);zta(m);zta(o);zta(p);zta(q);a=h;break a}while(0);zta(m)}zta(o)}zta(p)}zta(q);$a(a|0)}while(0);u=n;return a|0}function vh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;j=u;u=u+32|0;g=j+24|0;i=j+12|0;k=j;do if(b[a+12>>0]|0){h=Vea(76852,56666)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}m=Pa()|0;pza(g);$a(m|0)}while(0);d=Nm(a)|0;m=f[a>>2]|0;e=f[m>>2]|0;a:do if(d>>>0<(f[m+4>>2]|0)-e>>2>>>0){i=f[e+(d<<2)>>2]|0;if(!(Nm(a)|0)){f[c+24>>2]=f[i>>2];e=(f[i+12>>2]|0)-(f[i+8>>2]|0)>>2;g=c+8|0;lU(g,e);h=Jg(a)|0;f[c+28>>2]=h;h=e+-1|0;d=0;while(1){if((d|0)==(e|0))break;l=Jg(a)|0;m=bga(g,h-d|0)|0;f[m>>2]=l;d=d+1|0}f[c+4>>2]=f[i+4>>2];Ona(c);u=j;return}h=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;g=uHa(56721)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[k+11>>0]=g;d=k}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=27;break}f[k>>2]=d;f[k+8>>2]=e|-2147483648;f[k+4>>2]=g}Pta(d,56721,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,k|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(k);if(!e)break a}else{y=0;za(3);y=0;l=27}while(0);if((l|0)==27)d=Pa()|0;Oa(h|0)}else{h=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(56688)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[i+11>>0]=g;d=i}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=15;break}f[i>>2]=d;f[i+8>>2]=e|-2147483648;f[i+4>>2]=g}Pta(d,56688,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,i|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(i);if(!e)break a}else{y=0;za(3);y=0;l=15}while(0);if((l|0)==15)d=Pa()|0;Oa(h|0)}while(0);$a(d|0)}function wh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+16|0;o=p;if(!(b[c+25>>0]|0)){k=a+4|0;zaa(f[a>>2]|0,f[k>>2]|0)|0;Eu(a,c);c3(f[a>>2]|0,10)|0}else k=a+4|0;l=f[c+16>>2]|0;m=o+4|0;n=o+8|0;h=f[c+12>>2]|0;a:while(1){if((h|0)==(l|0)){c=6;break}Ara(o,h);y=0;ua(98,f[a>>2]|0,f[k>>2]|0)|0;j=y;y=0;if(j&1){c=31;break}y=0;oa(53,f[a>>2]|0,39303,1)|0;j=y;y=0;if(j&1){c=31;break}y=0;ja(1019,a|0,f[o>>2]|0);j=y;y=0;if(j&1){c=31;break}y=0;ua(53,f[a>>2]|0,39309)|0;j=y;y=0;if(j&1){c=31;break}e=f[n>>2]|0;g=f[m>>2]|0;d=0;while(1){if(d>>>0>=(e-g|0)>>>0)break;i=b[g+d>>0]|0;b:do switch(i<<24>>24){case 10:{y=0;ua(53,f[a>>2]|0,39316)|0;j=y;y=0;if(j&1){c=31;break a}break}case 13:{y=0;ua(53,f[a>>2]|0,39319)|0;j=y;y=0;if(j&1){c=31;break a}break}case 9:{y=0;ua(53,f[a>>2]|0,39323)|0;j=y;y=0;if(j&1){c=31;break a}break}case 12:{y=0;ua(53,f[a>>2]|0,39326)|0;j=y;y=0;if(j&1){c=31;break a}break}case 8:{y=0;ua(53,f[a>>2]|0,39330)|0;j=y;y=0;if(j&1){c=31;break a}break}case 92:{y=0;ua(53,f[a>>2]|0,39334)|0;j=y;y=0;if(j&1){c=31;break a}break}case 34:{y=0;ua(53,f[a>>2]|0,39337)|0;j=y;y=0;if(j&1){c=31;break a}break}case 39:{y=0;ua(53,f[a>>2]|0,39340)|0;j=y;y=0;if(j&1){c=31;break a}break}default:{j=f[a>>2]|0;if((i+-32&255)<95){y=0;ua(99,j|0,i|0)|0;j=y;y=0;if(j&1){c=31;break a}else break b}c=j+(f[(f[j>>2]|0)+-12>>2]|0)+4|0;f[c>>2]=f[c>>2]&-75|8;y=0;c=ua(67,j|0,92)|0;q=y;y=0;if(q&1){c=31;break a}y=0;c=ua(62,c|0,(i&255)>>>4&255|0)|0;q=y;y=0;if(q&1){c=31;break a}y=0;ua(62,c|0,i&15|0)|0;q=y;y=0;if(q&1){c=31;break a}q=j+(f[(f[j>>2]|0)+-12>>2]|0)+4|0;f[q>>2]=f[q>>2]&-75|2}}while(0);d=d+1|0}y=0;ua(53,f[a>>2]|0,39312)|0;q=y;y=0;if(q&1){c=31;break}Gza(o);h=h+16|0}if((c|0)==6){u=p;return}else if((c|0)==31){q=Pa()|0;Gza(o);$a(q|0)}}function xh(a,c){a=+a;c=c|0;var d=0.0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0;F=u;u=u+96|0;y=F+80|0;x=F+72|0;w=F+64|0;A=F+56|0;z=F+48|0;v=F+40|0;t=F+32|0;D=F+24|0;B=F+16|0;r=F+8|0;s=F;E=a<0.0;a=E?-a:a;q=+Ri(a,1.0)==0.0;p[D>>3]=C;p[B>>3]=C;o=!(a>=0.0);n=c^1;m=0;a:while(1){if((m|0)>=2){c=3;break}k=(m|0)!=0;l=k?80485:79485;b:do if(q){if(o){c=11;break a}if(!(Roa(a)|0)){p[x>>3]=a;uha(l,999,k?24552:24555,x)|0;f[y>>2]=r;Tla(l,24512,y)|0;break}h=rW(a)|0;j=k&n;i=z;f[i>>2]=h;f[i+4>>2]=J;uha(l,999,j?24535:24542,z)|0;if(j){f[A>>2]=s;Tla(l,24547,A)|0;j=s;p[r>>3]=+((f[j>>2]|0)>>>0)+4294967296.0*+((f[j+4>>2]|0)>>>0);break}else{f[w>>2]=r;Tla(l,24512,w)|0;break}}else{j=k?101:102;c=0;while(1){if((c|0)>=19)break b;b[81484]=37;b[81485]=46;if((c|0)<10){e=81488;g=81486;h=48;i=81487}else{b[81486]=49;e=81489;g=81487;h=38;i=81488}b[g>>0]=h+c;b[i>>0]=j;b[e>>0]=0;p[t>>3]=a;uha(l,999,81484,t)|0;f[v>>2]=r;Tla(l,24512,v)|0;if(+p[r>>3]==a)break;else c=c+1|0}}while(0);d=+L(+(+p[r>>3]-a));p[(k?B:D)>>3]=d;e=fwa(l,46)|0;c:do if(!e){if(!(q&k)){c=l+(iJ(l)|0)+-1|0;e=l;j=c;while(1){g=j;if((b[j>>0]|0)==48){if(j>>>0<=l>>>0)break}else if(!(j>>>0>l>>>0&(g-e|0)>24))break;j=j+-1|0}e=c-g|0;if((e|0)>2){b[j+1>>0]=101;c=j+3|0;g=j+2|0;do if((e|0)<10)b[g>>0]=e+48;else{h=j+4|0;i=((e>>>0)%10|0|48)&255;if((e|0)<100){b[g>>0]=((e>>>0)/10|0)+48;b[c>>0]=i;c=h;break}if((e|0)>=1e3){c=36;break a}b[g>>0]=((e>>>0)/100|0)+48;b[c>>0]=(((e>>>0)%100|0)>>>0)/10|0|48;b[h>>0]=i;c=j+5|0}while(0);b[c>>0]=0}}}else{while(1){c=e+1|0;if(((b[c>>0]|0)+-48&255)<10)e=c;else break}while(1){if((b[e>>0]|0)==48)c=e;else break;do{j=c;c=c+1|0;k=b[c>>0]|0;b[j>>0]=k}while(k<<24>>24!=0);e=e+-1|0}d:while(1){if((b[l>>0]|0)==48)c=l;else break c;while(1){e=c+1|0;k=b[e>>0]|0;b[c>>0]=k;if(!(k<<24>>24))continue d;else c=e}}}while(0);m=m+1|0}if((c|0)==3){d=+p[B>>3];a=+p[D>>3];if(d==a){c=iJ(80485)|0;c=c>>>0<(iJ(79485)|0)>>>0}else c=d<a;c=c?80485:79485;if(E){c=c+-1|0;b[c>>0]=45}u=F;return c|0}else if((c|0)==11)Na(24516,51343,873,24523);else if((c|0)==36)Na(24560,51343,936,24523);return 0}function yh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;g=a+24|0;f[g>>2]=c;Aaa(f[a>>2]|0,37581,1)|0;zea(a);e=f[c+4>>2]|0;h=a+4|0;i=a+16|0;d=f[c>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;c3(Aaa(f[a>>2]|0,56787,0)|0,32)|0;c3(sQ(a,f[f[d>>2]>>2]|0)|0,32)|0;Qp(a,f[d>>2]|0,0);j=Vea(f[a>>2]|0,72083)|0;Vea(j,f[i>>2]|0)|0;d=d+4|0}e=f[c+16>>2]|0;d=f[c+12>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;Jo(a,f[d>>2]|0);Vea(f[a>>2]|0,f[i>>2]|0)|0;d=d+4|0}e=f[c+52>>2]|0;d=f[c+48>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;qx(a,f[d>>2]|0);Vea(f[a>>2]|0,f[i>>2]|0)|0;d=d+4|0}d=c+60|0;if(b[d>>0]|0)Yq(a,d);wh(a,c+88|0);e=f[c+28>>2]|0;d=f[c+24>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;Wv(a,f[d>>2]|0);Vea(f[a>>2]|0,f[i>>2]|0)|0;d=d+4|0}d=c+116|0;if(pJa(f[d>>2]|0)|0){zaa(f[a>>2]|0,f[h>>2]|0)|0;j=c3(Aaa(f[a>>2]|0,37588,0)|0,32)|0;c3(K2(j,f[d>>2]|0)|0,41)|0;Vea(f[a>>2]|0,f[i>>2]|0)|0}e=f[c+40>>2]|0;d=f[c+36>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;Eh(a,f[d>>2]|0);Vea(f[a>>2]|0,f[i>>2]|0)|0;d=d+4|0}e=f[c+124>>2]|0;d=f[c+120>>2]|0;while(1){if((d|0)==(e|0))break;zaa(f[a>>2]|0,f[h>>2]|0)|0;j=Vea(BY(Vea(f[a>>2]|0,37594)|0,d)|0,37614)|0;vj(j,(f[d+16>>2]|0)-(f[d+12>>2]|0)|0)|0;Vea(f[a>>2]|0,f[i>>2]|0)|0;d=d+24|0}x_(a);Vea(f[a>>2]|0,f[i>>2]|0)|0;f[g>>2]=0;return}function zh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+160|0;k=q+120|0;j=q+144|0;g=q+104|0;h=q+88|0;m=q+24|0;i=q;n=q+140|0;o=q+136|0;p=q+72|0;d=q+56|0;e=q+40|0;l=b+4|0;a:do switch(f[c+8>>2]|0){case 0:{uAa(g,65536);f[k>>2]=f[g>>2];f[k+4>>2]=f[g+4>>2];f[k+8>>2]=f[g+8>>2];f[k+12>>2]=f[g+12>>2];oda(a,k);break}case 1:{uAa(h,gKa(f[(f[l>>2]|0)+32>>2]|0)|0);f[k>>2]=f[h>>2];f[k+4>>2]=f[h+4>>2];f[k+8>>2]=f[h+8>>2];f[k+12>>2]=f[h+12>>2];oda(a,k);break}case 2:{uAa(m,-1);h=bga(c+16|0,0)|0;NM(i,b,f[h>>2]|0);do if(!(FBa(i)|0)){c=gKa(f[(f[l>>2]|0)+32>>2]|0)|0;b=csa(i)|0;if(b>>>0>65535){f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];f[k+12>>2]=f[m+12>>2];oda(a,k);break}d=f[l>>2]|0;e=gKa(f[d+32>>2]|0)|0;if(e>>>0>=~b>>>0){f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];f[k+12>>2]=f[m+12>>2];oda(a,k);break}b=e+b|0;if(b>>>0>(gKa(f[(f[d>>2]|0)+96>>2]|0)|0)>>>0){f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];f[k+12>>2]=f[m+12>>2];oda(a,k);break}else{m=f[d+36>>2]|0;i=f[(f[m>>2]|0)+16>>2]|0;$la(n,e<<16,0);$la(o,b<<16,0);f[j>>2]=f[n>>2];f[k>>2]=f[o>>2];$b[i&255](m,j,k);eja((f[l>>2]|0)+32|0,b,0)|0;uAa(p,c);f[k>>2]=f[p>>2];f[k+4>>2]=f[p+4>>2];f[k+8>>2]=f[p+8>>2];f[k+12>>2]=f[p+12>>2];oda(a,k);break}}else{f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];f[a+12>>2]=f[i+12>>2];f[a+16>>2]=f[i+16>>2];f[a+20>>2]=f[i+20>>2]}while(0);break}case 3:if(bDa(f[c+12>>2]|0,f[18771]|0)|0){uAa(d,1);f[k>>2]=f[d>>2];f[k+4>>2]=f[d+4>>2];f[k+8>>2]=f[d+8>>2];f[k+12>>2]=f[d+12>>2];oda(a,k);break a}else{uAa(e,0);f[k>>2]=f[e>>2];f[k+4>>2]=f[e+4>>2];f[k+8>>2]=f[e+8>>2];f[k+12>>2]=f[e+12>>2];oda(a,k);break a}default:Ka()}while(0);u=q;return}function Ah(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=u;u=u+128|0;a=p+20|0;q=p+8|0;m=p+4|0;s=p;k=p+16|0;f[q>>2]=a;t=q+4|0;f[t>>2]=399;Axa(s,g);j=f[s>>2]|0;y=0;l=ua(46,j|0,77556)|0;o=y;y=0;if(o&1){j=Pa()|0;e=q}else{b[k>>0]=0;n=f[d>>2]|0;o=n;y=0;a=na(1,c|0,o|0,e|0,j|0,f[g+4>>2]|0,h|0,k|0,l|0,q|0,m|0,a+100|0)|0;g=y;y=0;a:do if(g&1)r=11;else{if(a){a=i+11|0;if((b[a>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[a>>0]=0}if(b[k>>0]|0){y=0;a=ua(f[(f[l>>2]|0)+28>>2]|0,l|0,45)|0;k=y;y=0;if(k&1){r=11;break}y=0;ja(82,i|0,a|0);k=y;y=0;if(k&1){r=11;break}}y=0;k=ua(f[(f[l>>2]|0)+28>>2]|0,l|0,48)|0;l=y;y=0;if(l&1){r=11;break}a=f[q>>2]|0;e=f[m>>2]|0;g=e+-1|0;j=a;while(1){if(j>>>0>=g>>>0)break;if((b[j>>0]|0)!=k<<24>>24)break;j=j+1|0}y=0;oa(70,i|0,j|0,e|0)|0;i=y;y=0;if(i&1){j=Pa()|0;e=q;break}}a=f[c>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){r=11;break a}}else a=oHa(b[j>>0]|0)|0;if(bDa(a,-1)|0){f[c>>2]=0;j=1;break}else{j=(f[c>>2]|0)==0;break}}else j=1;while(0);do if(n){a=f[o+12>>2]|0;if((a|0)==(f[o+16>>2]|0)){y=0;a=la(f[(f[n>>2]|0)+36>>2]|0,o|0)|0;o=y;y=0;if(o&1){r=11;break a}}else a=oHa(b[a>>0]|0)|0;if(!(bDa(a,-1)|0))if(j)break;else{r=34;break}else{f[d>>2]=0;r=32;break}}else r=32;while(0);if((r|0)==32?j:0)r=34;if((r|0)==34)f[h>>2]=f[h>>2]|2;j=f[c>>2]|0;pza(s);a=f[q>>2]|0;f[q>>2]=0;if(a|0?(y=0,ia(f[t>>2]|0,a|0),t=y,y=0,t&1):0){t=ab(0)|0;lDa(t)}u=p;return j|0}while(0);if((r|0)==11){j=Pa()|0;e=q;a=f[q>>2]|0}}pza(s);f[e>>2]=0;if(a|0?(y=0,ia(f[t>>2]|0,a|0),t=y,y=0,t&1):0){t=ab(0)|0;lDa(t)}$a(j|0);return 0}function Bh(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=u;u=u+32|0;n=m+16|0;l=m+28|0;j=m+12|0;o=m;k=hta(f[a+4>>2]|0)|0;f[k+4>>2]=d;i=k+12|0;b[i>>0]=e;a:do if(CJ(g,53361,3)|0)if(CJ(g,53365,3)|0)if(CJ(g,53369,2)|0)if(CJ(g,53372,3)|0)if(CJ(g,53376,3)|0)if(!(CJ(g,53380,4)|0)){d=5;p=18}else{i=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(53385)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;d=n}else{e=g+16&-16;y=0;d=la(150,e|0)|0;o=y;y=0;if(o&1){p=15;break}f[n>>2]=d;f[n+8>>2]=e|-2147483648;f[n+4>>2]=g}Pta(d,53385,g)|0;SBa(d+g|0,0);y=0;ja(583,i|0,n|0);o=y;y=0;if(o&1)e=1;else{y=0;ya(79,i|0,64,361);y=0;e=0}d=Pa()|0;zta(n);if(!e)break a}else{y=0;za(3);y=0;p=15}while(0);if((p|0)==15)d=Pa()|0;Oa(i|0)}else{d=4;p=18}else{d=1;p=18}else{d=3;p=18}else{d=2;p=18}else{d=0;p=18}while(0);if((p|0)==18){f[k+8>>2]=d;rJa(l);$la(j,h[i>>0]|0,0);d=wf(c,k+16|0,l,f[j>>2]|0)|0;n=gKa(f[l>>2]|0)|0;if((n|0)==(h[i>>0]|0|0)){p=sra(a,lj(c,d)|0)|0;f[k+20>>2]=p;p=sra(a,lj(c,d+1|0)|0)|0;f[k+24>>2]=p;Fna(k);u=m;return k|0}i=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;g=uHa(53409)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[o+11>>0]=g;d=o}else{e=g+16&-16;y=0;d=la(150,e|0)|0;n=y;y=0;if(n&1){p=27;break}f[o>>2]=d;f[o+8>>2]=e|-2147483648;f[o+4>>2]=g}Pta(d,53409,g)|0;SBa(d+g|0,0);y=0;ja(583,i|0,o|0);n=y;y=0;if(n&1)e=1;else{y=0;ya(79,i|0,64,361);y=0;e=0}d=Pa()|0;zta(o);if(e)p=29}else{y=0;za(3);y=0;p=27}while(0);if((p|0)==27){d=Pa()|0;p=29}if((p|0)==29)Oa(i|0)}$a(d|0);return 0}function Ch(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;j=k;g=a+4|0;do switch(d<<24>>24){case 103:{d=1;e=0;h=48;break}case 121:{d=2;e=1;h=48;break}case 104:{d=1;e=2;h=48;break}case 122:{d=2;e=3;h=48;break}case 105:{d=1;e=4;h=48;break}case 123:{d=2;e=5;h=48;break}case 69:{d=1;e=20;h=48;break}case 80:{d=1;e=21;h=48;break}case -116:{d=3;e=6;h=48;break}case -102:{d=4;e=7;h=48;break}case -117:{d=3;e=8;h=48;break}case -103:{d=4;e=9;h=48;break}case -115:{d=3;e=10;h=48;break}case -101:{d=4;e=11;h=48;break}case -114:{d=3;e=12;h=48;break}case -100:{d=4;e=13;h=48;break}case -112:{d=3;e=16;h=48;break}case -98:{d=4;e=17;h=48;break}case -111:{d=3;e=18;h=48;break}case -97:{d=4;e=19;h=48;break}case -77:{d=3;e=37;h=48;break}case -72:{d=4;e=38;h=48;break}case -78:{d=3;e=35;h=48;break}case -73:{d=4;e=36;h=48;break}case -75:{d=3;e=41;h=48;break}case -70:{d=4;e=42;h=48;break}case -76:{d=3;e=39;h=48;break}case -71:{d=4;e=40;h=48;break}case -84:{d=2;e=22;h=48;break}case -83:{d=2;e=23;h=48;break}case -89:{d=1;e=24;h=48;break}case -87:{d=1;e=27;h=48;break}case -85:{d=1;e=31;h=48;break}case -88:{d=1;e=25;h=48;break}case -86:{d=1;e=29;h=48;break}case -81:{d=2;e=28;h=48;break}case -79:{d=2;e=32;h=48;break}case -82:{d=2;e=26;h=48;break}case -80:{d=2;e=30;h=48;break}case -113:{d=3;e=14;h=48;break}case -99:{d=4;e=15;h=48;break}case -74:{d=3;e=44;h=48;break}case -69:{d=4;e=43;h=48;break}case -68:{d=1;e=33;h=48;break}case -67:{d=2;e=34;h=48;break}case -66:{d=3;e=45;h=48;break}case -65:{d=4;e=46;h=48;break}default:d=0}while(0);if((h|0)==48){g=aua(f[g>>2]|0)|0;f[g+8>>2]=e;f[g+4>>2]=d;do if(b[a+12>>0]|0){d=Vea(76852,56129)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[j>>2]|0,77556)|0;h=y;y=0;if(!(h&1)?(y=0,i=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,h=y,y=0,!(h&1)):0){pza(j);jn(d,i)|0;Yp(d)|0;break}k=Pa()|0;pza(j);$a(k|0)}while(0);d=Jg(a)|0;f[g+12>>2]=d;qt(g);f[c>>2]=g;d=1}u=k;return d|0}function Dh(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=u;u=u+432|0;a=p+16|0;q=p+8|0;m=p+4|0;s=p;k=p+416|0;f[q>>2]=a;t=q+4|0;f[t>>2]=399;Axa(s,g);j=f[s>>2]|0;y=0;l=ua(46,j|0,77588)|0;o=y;y=0;if(o&1){j=Pa()|0;e=q}else{b[k>>0]=0;n=f[d>>2]|0;o=n;y=0;a=na(2,c|0,o|0,e|0,j|0,f[g+4>>2]|0,h|0,k|0,l|0,q|0,m|0,a+400|0)|0;g=y;y=0;a:do if(g&1)r=11;else{if(a){a=i+8+3|0;if((b[a>>0]|0)<0){FCa(f[i>>2]|0,0);f[i+4>>2]=0}else{FCa(i,0);b[a>>0]=0}if(b[k>>0]|0){y=0;a=ua(f[(f[l>>2]|0)+44>>2]|0,l|0,45)|0;k=y;y=0;if(k&1){r=11;break}y=0;ja(2048,i|0,a|0);k=y;y=0;if(k&1){r=11;break}}y=0;k=ua(f[(f[l>>2]|0)+44>>2]|0,l|0,48)|0;l=y;y=0;if(l&1){r=11;break}a=f[q>>2]|0;e=f[m>>2]|0;g=e+-4|0;j=a;while(1){if(j>>>0>=g>>>0)break;if((f[j>>2]|0)!=(k|0))break;j=j+4|0}y=0;oa(71,i|0,j|0,e|0)|0;i=y;y=0;if(i&1){j=Pa()|0;e=q;break}}a=f[c>>2]|0;do if(a){j=f[a+12>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;a=la(f[(f[a>>2]|0)+36>>2]|0,a|0)|0;i=y;y=0;if(i&1){r=11;break a}}else a=gKa(f[j>>2]|0)|0;if(TDa(a)|0){f[c>>2]=0;j=1;break}else{j=(f[c>>2]|0)==0;break}}else j=1;while(0);do if(n){a=f[o+12>>2]|0;if((a|0)==(f[o+16>>2]|0)){y=0;a=la(f[(f[n>>2]|0)+36>>2]|0,o|0)|0;o=y;y=0;if(o&1){r=11;break a}}else a=gKa(f[a>>2]|0)|0;if(!(TDa(a)|0))if(j)break;else{r=34;break}else{f[d>>2]=0;r=32;break}}else r=32;while(0);if((r|0)==32?j:0)r=34;if((r|0)==34)f[h>>2]=f[h>>2]|2;j=f[c>>2]|0;pza(s);a=f[q>>2]|0;f[q>>2]=0;if(a|0?(y=0,ia(f[t>>2]|0,a|0),t=y,y=0,t&1):0){t=ab(0)|0;lDa(t)}u=p;return j|0}while(0);if((r|0)==11){j=Pa()|0;e=q;a=f[q>>2]|0}}pza(s);f[e>>2]=0;if(a|0?(y=0,ia(f[t>>2]|0,a|0),t=y,y=0,t&1):0){t=ab(0)|0;lDa(t)}$a(j|0);return 0}function Eh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;m=n+8|0;l=n;f[a+28>>2]=c;f[a+32>>2]=0;f[a+36>>2]=0;f[a+40>>2]=0;Aaa(f[a>>2]|0,37623,1)|0;sQ(a,f[c>>2]|0)|0;d=c+32|0;j=a+12|0;if(pJa(f[d>>2]|0)|0){i=Vea(Vea(f[a>>2]|0,f[j>>2]|0)|0,37629)|0;c3(K2(i,f[d>>2]|0)|0,41)|0}h=c+8|0;i=c+12|0;d=f[i>>2]|0;e=f[h>>2]|0;a:do if((d|0)!=(e|0)){g=0;while(1){if(g>>>0>=d-e>>2>>>0)break a;Vea(f[a>>2]|0,f[j>>2]|0)|0;d=xca(f[a>>2]|0,37636)|0;d=c3(K2(d,SP(a,g)|0)|0,32)|0;c3(Vea(d,F$(YV(c,g)|0)|0)|0,41)|0;g=g+1|0;d=f[i>>2]|0;e=f[h>>2]|0}}while(0);d=c+4|0;if(f[d>>2]|0){Vea(f[a>>2]|0,f[j>>2]|0)|0;j=xca(f[a>>2]|0,37643)|0;c3(Vea(j,F$(f[d>>2]|0)|0)|0,41)|0}zea(a);e=a+4|0;g=a+16|0;d=Rya(c)|0;while(1){if(d>>>0>=(Pqa(c)|0)>>>0)break;zaa(f[a>>2]|0,f[e>>2]|0)|0;j=xca(f[a>>2]|0,37651)|0;j=c3(K2(j,SP(a,d)|0)|0,32)|0;c3(Vea(j,F$(YV(c,d)|0)|0)|0,41)|0;Vea(f[a>>2]|0,f[g>>2]|0)|0;d=d+1|0}d=c+36|0;if(((b[a+20>>0]|0)==0?(k=f[d>>2]|0,aJa(f[k>>2]|0)|0):0)?(k=(ksa(k)|0)+8|0,tJa(f[k>>2]|0)|0):0){g=(ksa(f[d>>2]|0)|0)+12|0;Bwa(m,g);iua(l,g);g=m+4|0;e=f[l>>2]|0;d=f[l+4>>2]|0;while(1){if(!(Cpa(f[m>>2]|0,f[g>>2]|0,e,d)|0))break;l=ppa(m)|0;kF(a,f[l>>2]|0);bva(m)}}else kF(a,f[d>>2]|0);x_(a);u=n;return}function Fh(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+1056|0;o=q+1024|0;p=q;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;f[o+12>>2]=0;f[o+16>>2]=0;f[o+20>>2]=0;f[o+24>>2]=0;f[o+28>>2]=0;d=0;e=115;c=115;while(1){if(!(b[a+d>>0]|0)){c=0;break}n=o+(((c&255)>>>5&255)<<2)|0;f[n>>2]=f[n>>2]|1<<(c&31);d=d+1|0;f[p+(e<<2)>>2]=d;c=b[52548+d>>0]|0;if((d|0)==6){d=0;j=-1;e=1;g=12;break}else e=c&255}a:do if((g|0)==12){b:while(1){g=1;c=d;while(1){d=e;c:while(1){i=1;while(1){e=b[52548+(i+j)>>0]|0;h=b[52548+d>>0]|0;if(e<<24>>24!=h<<24>>24)break c;if((i|0)==(g|0))break;i=i+1|0;d=i+c|0;if(d>>>0>=6){l=g;c=j;break b}}c=g+c|0;d=c+1|0;if(d>>>0>=6){l=g;c=j;break b}}g=d-j|0;if((e&255)<=(h&255))break;e=d+1|0;if(e>>>0>=6){l=g;c=j;break b}else c=d}e=c+2|0;if(e>>>0>=6){l=1;break}else{d=c+1|0;j=c;g=12}}g=0;k=-1;h=1;d:while(1){e=1;d=g;while(1){g=h;e:while(1){j=1;while(1){h=b[52548+(j+k)>>0]|0;i=b[52548+g>>0]|0;if(h<<24>>24!=i<<24>>24)break e;if((j|0)==(e|0))break;j=j+1|0;g=j+d|0;if(g>>>0>=6){d=k;break d}}d=e+d|0;g=d+1|0;if(g>>>0>=6){d=k;break d}}e=g-k|0;if((h&255)>=(i&255))break;h=g+1|0;if(h>>>0>=6){d=k;break d}else d=g}h=d+2|0;if(h>>>0>=6){e=1;break}else{g=d+1|0;k=d}}m=(d+1|0)>>>0>(c+1|0)>>>0;e=m?e:l;m=m?d:c;n=m+1|0;if(!(jT(52548,52548+e|0,n)|0))l=6-e|0;else{e=6-m+-1|0;l=0;e=(m>>>0>e>>>0?m:e)+1|0}j=(l|0)!=0;k=6-e|0;c=a;i=0;d=a;while(1){g=c;do if((d-g|0)>>>0<6){h=Nt(d,0,63)|0;if(h)if((h-g|0)>>>0<6){c=0;break a}else break;else{h=d+63|0;break}}else h=d;while(0);d=b[c+5>>0]|0;f:do if(!(1<<(d&31)&f[o+(((d&255)>>>5&255)<<2)>>2])){g=0;d=6}else{d=6-(f[p+((d&255)<<2)>>2]|0)|0;if(d|0){g=0;d=j&(i|0)!=0&d>>>0<e>>>0?k:d;break}d=n>>>0>i>>>0?n:i;g:do if((d|0)==6)d=n;else{while(1){if((b[52548+d>>0]|0)!=(b[c+d>>0]|0))break;d=d+1|0;if((d|0)==6){d=n;break g}}g=0;d=d-m|0;break f}while(0);while(1){if(d>>>0<=i>>>0)break a;d=d+-1|0;if((b[52548+d>>0]|0)!=(b[c+d>>0]|0)){g=l;d=e;break}}}while(0);c=c+d|0;i=g;d=h}}while(0);u=q;return c|0}function Gh(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;x=u;u=u+464|0;E=x+456|0;t=x+460|0;v=x+452|0;w=x+448|0;A=x+436|0;B=x+424|0;C=x+412|0;m=x+408|0;o=x+8|0;q=x+4|0;r=x;Axa(E,e);j=f[E>>2]|0;y=0;s=ua(46,j|0,77588)|0;p=y;y=0;a:do if(p&1)a=Pa()|0;else{k=h+8+3|0;p=b[k>>0]|0;a=p<<24>>24<0;l=h+4|0;do if((a?f[l>>2]|0:p&255)|0){a=f[(a?f[h>>2]|0:h)>>2]|0;y=0;i=ua(f[(f[s>>2]|0)+44>>2]|0,s|0,45)|0;p=y;y=0;if(p&1){a=Pa()|0;break a}else{p=(a|0)==(i|0);break}}else p=0;while(0);f[A>>2]=0;f[A+4>>2]=0;f[A+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[A+(a<<2)>>2]=0;a=a+1|0}f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[C+(a<<2)>>2]=0;a=a+1|0}y=0;ta(4,d|0,p|0,j|0,t|0,v|0,w|0,A|0,B|0,C|0,m|0);n=y;y=0;if(n&1)a=Pa()|0;else{d=b[k>>0]|0;n=d<<24>>24<0;d=n?f[l>>2]|0:d&255;k=f[m>>2]|0;if((d|0)>(k|0)){i=b[C+8+3>>0]|0;j=b[B+8+3>>0]|0;a=1;i=(i<<24>>24<0?f[C+4>>2]|0:i&255)+(d-k<<1)|0;j=j<<24>>24<0?f[B+4>>2]|0:j&255}else{j=b[C+8+3>>0]|0;i=b[B+8+3>>0]|0;a=2;i=i<<24>>24<0?f[B+4>>2]|0:i&255;j=j<<24>>24<0?f[C+4>>2]|0:j&255}a=j+k+i+a|0;if(a>>>0>100){a=rc(a<<2)|0;i=a;if(!a){y=0;za(9);y=0;a=Pa()|0}else D=24}else{a=o;i=0;D=24}if((D|0)==24){D=n?f[h>>2]|0:h;y=0;pa(2,a|0,q|0,r|0,f[e+4>>2]|0,D|0,D+(d<<2)|0,s|0,p|0,t|0,f[v>>2]|0,f[w>>2]|0,A|0,B|0,C|0,k|0);D=y;y=0;if(!(D&1)?(y=0,z=ka(43,f[c>>2]|0,a|0,f[q>>2]|0,f[r>>2]|0,e|0,g|0)|0,D=y,y=0,!(D&1)):0){if(i|0)Xe(i);jta(C);jta(B);zta(A);pza(E);u=x;return z|0}a=Pa()|0}if(i|0)Xe(i)}jta(C);jta(B);zta(A)}while(0);pza(E);$a(a|0);return 0}function Hh(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;x=u;u=u+160|0;E=x+48|0;t=x+156|0;v=x+153|0;w=x+152|0;A=x+36|0;B=x+24|0;C=x+12|0;m=x+8|0;o=x+52|0;q=x+4|0;r=x;Axa(E,e);j=f[E>>2]|0;y=0;s=ua(46,j|0,77556)|0;p=y;y=0;a:do if(p&1)a=Pa()|0;else{k=h+11|0;p=b[k>>0]|0;a=p<<24>>24<0;l=h+4|0;do if((a?f[l>>2]|0:p&255)|0){a=b[(a?f[h>>2]|0:h)>>0]|0;y=0;i=ua(f[(f[s>>2]|0)+28>>2]|0,s|0,45)|0;p=y;y=0;if(p&1){a=Pa()|0;break a}else{p=a<<24>>24==i<<24>>24;break}}else p=0;while(0);f[A>>2]=0;f[A+4>>2]=0;f[A+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[A+(a<<2)>>2]=0;a=a+1|0}f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[C+(a<<2)>>2]=0;a=a+1|0}y=0;ta(3,d|0,p|0,j|0,t|0,v|0,w|0,A|0,B|0,C|0,m|0);n=y;y=0;if(n&1)a=Pa()|0;else{d=b[k>>0]|0;n=d<<24>>24<0;d=n?f[l>>2]|0:d&255;k=f[m>>2]|0;if((d|0)>(k|0)){i=b[C+11>>0]|0;j=b[B+11>>0]|0;a=1;i=(i<<24>>24<0?f[C+4>>2]|0:i&255)+(d-k<<1)|0;j=j<<24>>24<0?f[B+4>>2]|0:j&255}else{j=b[C+11>>0]|0;i=b[B+11>>0]|0;a=2;i=i<<24>>24<0?f[B+4>>2]|0:i&255;j=j<<24>>24<0?f[C+4>>2]|0:j&255}a=j+k+i+a|0;if(a>>>0>100){a=rc(a)|0;i=a;if(!a){y=0;za(9);y=0;a=Pa()|0}else D=24}else{a=o;i=0;D=24}if((D|0)==24){D=n?f[h>>2]|0:h;y=0;pa(1,a|0,q|0,r|0,f[e+4>>2]|0,D|0,D+d|0,s|0,p|0,t|0,b[v>>0]|0,b[w>>0]|0,A|0,B|0,C|0,k|0);D=y;y=0;if(!(D&1)?(y=0,z=ka(41,f[c>>2]|0,a|0,f[q>>2]|0,f[r>>2]|0,e|0,g|0)|0,D=y,y=0,!(D&1)):0){if(i|0)Xe(i);zta(C);zta(B);zta(A);pza(E);u=x;return z|0}a=Pa()|0}if(i|0)Xe(i)}zta(C);zta(B);zta(A)}while(0);pza(E);$a(a|0);return 0}function Ih(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+48|0;l=n+28|0;o=n+8|0;h=n;i=n+24|0;j=n+20|0;k=n+4|0;c=f[a+84>>2]|0;m=gKa(c)|0;c=c+108|0;if(f[c>>2]|0)Na(33968,33993,227,34017);f[c>>2]=f[b+28>>2];gua(o);d=b+8|0;e=gKa(f[b+12>>2]|0)|0;g=0;while(1){f[h>>2]=g;if(g>>>0>=e>>>0){g=5;break}y=0;c=ua(89,d|0,g|0)|0;p=y;y=0;if(p&1){g=10;break}y=0;c=ua(90,o|0,c|0)|0;p=y;y=0;if(p&1){g=10;break}y=0;Ca(61,l|0,c|0,g|0,h|0);p=y;y=0;if(p&1){g=10;break}g=g+1|0}a:do if((g|0)==5){e=o+4|0;c=f[o>>2]|0;b:while(1){if((c|0)==(e|0))break;f[i>>2]=f[c+16>>2];y=0;f[l>>2]=f[i>>2];d=ua(91,a|0,l|0)|0;p=y;y=0;if(p&1){g=18;break}y=0;ya(84,m|0,d|0,c+20|0);p=y;y=0;if(p&1){g=18;break}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue b}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}if((g|0)==18){c=Pa()|0;break}c=b+24|0;do if(!(WS(o,c)|0)){f[j>>2]=f[c>>2];y=0;f[l>>2]=f[j>>2];c=ua(91,a|0,l|0)|0;p=y;y=0;if(!(p&1)){gua(l);y=0;ya(84,m|0,c|0,l|0);p=y;y=0;if(p&1){c=Pa()|0;bxa(l);break a}else{bxa(l);g=31;break}}}else{y=0;d=la(171,a|0)|0;p=y;y=0;if(!(p&1)){gua(l);y=0;ya(84,m|0,d|0,l|0);p=y;y=0;if(p&1){c=Pa()|0;bxa(l);break a}bxa(l);f[k>>2]=f[c>>2];y=0;f[l>>2]=f[k>>2];c=ua(91,a|0,l|0)|0;p=y;y=0;if(!(p&1)?(y=0,ya(82,d|0,c|0,0),p=y,y=0,!(p&1)):0){g=31;break}c=Pa()|0;break a}}while(0);if((g|0)==31?(y=0,ia(362,a|0),p=y,y=0,!(p&1)):0){lba(o);u=n;return}c=Pa()|0}else if((g|0)==10)c=Pa()|0;while(0);lba(o);$a(c|0)}function Jh(a,c){a=a|0;c=c|0;var d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;x=u;u=u+16|0;A=x+4|0;v=x;w=a+16|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;n[w>>2]=1.0;B=a+20|0;f[B>>2]=0;f[a+24>>2]=0;f[a+28>>2]=0;d=(iJ(c)|0)+1|0;y=0;ja(71,B|0,d|0);t=y;y=0;if(t&1)c=Pa()|0;else{t=f[B>>2]|0;yCa(t,c,d)|0;p=a+4|0;q=a+12|0;r=a+8|0;c=t;a:while(1){s=fwa(c,32)|0;t=(s|0)!=0;if(t)b[s>>0]=0;y=0;ya(64,v|0,c|0,1);o=y;y=0;if(o&1){z=42;break}o=CBa(v)|0;i=f[p>>2]|0;m=(i|0)==0;b:do if(!m){k=i+-1|0;l=(k&i|0)==0;if(!l)if(o>>>0<i>>>0)d=o;else d=(o>>>0)%(i>>>0)|0;else d=k&o;c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c)z=22;else{j=f[v>>2]|0;do{c=f[c>>2]|0;if(!c){z=22;break b}h=f[c+4>>2]|0;if((h|0)!=(o|0)){if(!l){if(h>>>0>=i>>>0)h=(h>>>0)%(i>>>0)|0}else h=h&k;if((h|0)!=(d|0)){z=22;break b}}}while(!(fxa(f[c+8>>2]|0,j)|0))}}else{d=0;z=22}while(0);if((z|0)==22){z=0;y=0;Ca(58,A|0,a|0,o|0,v|0);l=y;y=0;if(l&1){z=42;break}e=+(((f[q>>2]|0)+1|0)>>>0);g=+n[w>>2];do if(m|e>+(i>>>0)*g){m=(i>>>0<3|(i+-1&i|0)!=0)&1|i<<1;l=~~+X(+(e/g))>>>0;y=0;ja(209,a|0,(m>>>0<l>>>0?l:m)|0);m=y;y=0;if(m&1){z=29;break a}c=f[p>>2]|0;d=c+-1|0;if(!(d&c)){i=c;d=d&o;break}if(o>>>0<c>>>0){i=c;d=o}else{i=c;d=(o>>>0)%(c>>>0)|0}}while(0);c=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(!c){h=f[A>>2]|0;f[h>>2]=f[r>>2];f[r>>2]=h;f[(f[a>>2]|0)+(d<<2)>>2]=r;c=f[h>>2]|0;if(c|0){c=f[c+4>>2]|0;d=i+-1|0;if(d&i){if(c>>>0>=i>>>0)c=(c>>>0)%(i>>>0)|0}else c=c&d;f[(f[a>>2]|0)+(c<<2)>>2]=h}}else{o=f[A>>2]|0;f[o>>2]=f[c>>2];f[c>>2]=o}f[q>>2]=(f[q>>2]|0)+1}if(t)c=s+1|0;else{z=44;break}}if((z|0)==29){c=Pa()|0;d=f[A>>2]|0;f[A>>2]=0;if(d|0)$Ja(d)}else if((z|0)==42)c=Pa()|0;else if((z|0)==44){u=x;return}}F4(B);Sma(a);$a(c|0)}function Kh(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;t=u;u=u+16|0;s=t;q=Jta(f[i>>2]|0,77588)|0;k=Jta(f[i>>2]|0,77596)|0;Mb[f[(f[k>>2]|0)+20>>2]&4095](s,k);o=s+11|0;n=b[o>>0]|0;p=s+4|0;j=d;r=a;a:do if(!((n<<24>>24<0?f[p>>2]|0:n&255)|0)){y=0;xa(f[(f[q>>2]|0)+48>>2]|0,q|0,a|0,d|0,e|0)|0;q=y;y=0;if(q&1)j=28;else{i=e+(j-r<<2)|0;f[h>>2]=i;j=27}}else{f[h>>2]=e;i=b[a>>0]|0;switch(i<<24>>24){case 43:case 45:{y=0;i=ua(f[(f[q>>2]|0)+44>>2]|0,q|0,i|0)|0;n=y;y=0;if(n&1){j=28;break a}n=f[h>>2]|0;f[h>>2]=n+4;f[n>>2]=i;a=a+1|0;break}default:{}}b:do if((j-a|0)>1?(b[a>>0]|0)==48:0){i=a+1|0;switch(b[i>>0]|0){case 88:case 120:break;default:break b}y=0;j=ua(f[(f[q>>2]|0)+44>>2]|0,q|0,48)|0;n=y;y=0;if(n&1){j=28;break a}n=f[h>>2]|0;f[h>>2]=n+4;f[n>>2]=j;y=0;i=ua(f[(f[q>>2]|0)+44>>2]|0,q|0,b[i>>0]|0)|0;n=y;y=0;if(n&1){j=28;break a}n=f[h>>2]|0;f[h>>2]=n+4;f[n>>2]=i;a=a+2|0}while(0);c:do if((a|0)!=(d|0)){i=d;j=a;while(1){i=i+-1|0;if(j>>>0>=i>>>0)break c;n=b[j>>0]|0;b[j>>0]=b[i>>0]|0;b[i>>0]=n;j=j+1|0}}while(0);y=0;n=la(f[(f[k>>2]|0)+16>>2]|0,k|0)|0;m=y;y=0;if(!(m&1)){m=a;j=0;k=0;while(1){if(m>>>0>=d>>>0)break;i=b[o>>0]|0;l=i<<24>>24<0;v=b[(l?f[s>>2]|0:s)+j>>0]|0;if(v<<24>>24!=0&(k|0)==(v<<24>>24|0)){k=f[h>>2]|0;f[h>>2]=k+4;f[k>>2]=n;j=(j>>>0<((l?f[p>>2]|0:i&255)+-1|0)>>>0&1)+j|0;k=0}y=0;i=ua(f[(f[q>>2]|0)+44>>2]|0,q|0,b[m>>0]|0)|0;v=y;y=0;if(v&1){j=28;break a}v=f[h>>2]|0;f[h>>2]=v+4;f[v>>2]=i;m=m+1|0;k=k+1|0}i=e+(a-r<<2)|0;j=f[h>>2]|0;if((i|0)==(j|0))j=27;else{while(1){j=j+-4|0;if(i>>>0>=j>>>0)break;v=f[i>>2]|0;f[i>>2]=f[j>>2];f[j>>2]=v;i=i+4|0}i=f[h>>2]|0;j=27}}else j=28}while(0);if((j|0)==27){f[g>>2]=(c|0)==(d|0)?i:e+(c-r<<2)|0;zta(s);u=t;return}else if((j|0)==28){v=Pa()|0;zta(s);$a(v|0)}}function Lh(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;i=u;u=u+32|0;c=i+28|0;j=i+16|0;k=i+4|0;h=i;do if(b[a+12>>0]|0){g=Vea(76852,58042)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}m=Pa()|0;pza(c);$a(m|0)}while(0);a:do switch(Nm(a)|0){case 0:{l=31;break}case 1:{c=(f[a>>2]|0)+112|0;if(!(b[c>>0]|0)){b[c>>0]=1;l=f[a>>2]|0;$la(h,65535,0);op(a,l+92|0,l+96|0,l+114|0,f[h>>2]|0);l=31;break a}g=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(58081)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;c=k}else{d=e+16&-16;y=0;c=la(150,d|0)|0;m=y;y=0;if(m&1){l=27;break}f[k>>2]=c;f[k+8>>2]=d|-2147483648;f[k+4>>2]=e}Pta(c,58081,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,k|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(k);if(!d){l=32;break a}}else{y=0;za(3);y=0;l=27}while(0);if((l|0)==27)c=Pa()|0;Oa(g|0);l=32;break}default:{g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(58056)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;m=y;y=0;if(m&1){l=15;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,58056,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,j|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(j);if(!d){l=32;break a}}else{y=0;za(3);y=0;l=15}while(0);if((l|0)==15)c=Pa()|0;Oa(g|0);l=32}}while(0);if((l|0)==31){u=i;return}else if((l|0)==32)$a(c|0)}function Mh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+16|0;r=s;p=c+4|0;q=a+136|0;if(((f[p>>2]|0)-(f[c>>2]|0)>>2|0)!=(f[q>>2]|0))Na(50183,50016,617,50211);m=f[a+60>>2]|0;j=a+36|0;l=f[a+56>>2]|0;while(1){if((l|0)==(m|0))break;k=f[l>>2]|0;n=f[k+28>>2]|0;k=f[k+24>>2]|0;while(1){if((k|0)==(n|0))break;i=tJa(f[k>>2]|0)|0;o=k+8|0;d=f[f[o>>2]>>2]|0;do if(!i){h=Era(d)|0;d=h+8|0;i=f[(f[c>>2]|0)+(f[d>>2]<<2)>>2]|0;f[d>>2]=i;d=f[h+12>>2]|0;e=Pza(d)|0;if(e|0?(f[e+8>>2]|0)==(i|0):0)if(pJa(f[h+4>>2]|0)|0){f[f[o>>2]>>2]=e;break}else{_ua(h);break}if(!(b[k+12>>0]|0)){f[f[o>>2]>>2]=d;if(pJa(f[h+4>>2]|0)|0)break;i=Jxa(h)|0;o=f[o>>2]|0;f[i+8>>2]=f[o>>2];f[o>>2]=i;break}d=YAa(d)|0;if(d|0){e=d+12|0;t=Pza(f[e>>2]|0)|0;g=d+16|0;if(t|0?(f[t+8>>2]|0)==(i|0):0){t=f[o>>2]|0;mJ(t,h,d,e,g,gKa(f[j>>2]|0)|0);break}t=Pza(f[g>>2]|0)|0;if(t|0?(f[t+8>>2]|0)==(i|0):0){t=f[o>>2]|0;mJ(t,h,d,g,e,gKa(f[j>>2]|0)|0)}}}else{t=(Lra(d)|0)+8|0;f[t>>2]=f[(f[c>>2]|0)+(f[t>>2]<<2)>>2]}while(0);k=k+16|0}l=l+4|0}j=a+32|0;h=f[j>>2]|0;k=Rya(gKa(h)|0)|0;g=f[p>>2]|0;d=0;e=f[c>>2]|0;while(1){if((e|0)==(g|0))break;t=(f[e>>2]|0)+1|0;d=d>>>0<t>>>0?t:d;e=e+4|0}KF(r,h+20|0);t=f[j>>2]|0;gKa(t)|0;y=0;ja(1935,t+20|0,d-k|0);t=y;y=0;if(t&1){t=Pa()|0;E4(r);$a(t|0)}i=f[q>>2]|0;g=f[c>>2]|0;h=f[r>>2]|0;d=k;while(1){if(d>>>0>=i>>>0)break;e=f[g+(d<<2)>>2]|0;if(e>>>0>=k>>>0){c=f[h+(d-k<<2)>>2]|0;t=f[j>>2]|0;gKa(t)|0;f[(f[t+20>>2]|0)+(e-k<<2)>>2]=c}d=d+1|0}d=f[j>>2]|0;gKa(d)|0;e=f[d+40>>2]|0;g=d+44|0;h=f[g>>2]|0;while(1){if((h|0)==(e|0))break;t=h+-4|0;f[g>>2]=t;h=t}hW(d+52|0);E4(r);u=s;return}function Nh(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;v=u;u=u+16|0;x=v;b2(a,b);y=0;ja(1942,a|0,f[b+4>>2]|0);t=y;y=0;do if(!(t&1)){c=f[b+8>>2]|0;t=a+4|0;p=a+12|0;r=a+16|0;s=a+8|0;q=c;b=c;a:while(1){if(!b){w=38;break}l=c+8|0;i=f[l>>2]|0;f[x>>2]=i;o=$z(x,4)|0;h=f[t>>2]|0;m=(h|0)==0;b:do if(!m){j=h+-1|0;k=(j&h|0)==0;if(!k)if(o>>>0<h>>>0)c=o;else c=(o>>>0)%(h>>>0)|0;else c=j&o;b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b)w=18;else do{b=f[b>>2]|0;if(!b){w=18;break b}g=f[b+4>>2]|0;if((g|0)!=(o|0)){if(!k){if(g>>>0>=h>>>0)g=(g>>>0)%(h>>>0)|0}else g=g&j;if((g|0)!=(c|0)){w=18;break b}}}while((f[b+8>>2]|0)!=(i|0))}else{c=0;w=18}while(0);if((w|0)==18){w=0;y=0;Ca(77,x|0,a|0,o|0,l|0);l=y;y=0;if(l&1){w=39;break}d=+(((f[p>>2]|0)+1|0)>>>0);e=+n[r>>2];do if(m|d>+(h>>>0)*e){m=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;l=~~+X(+(d/e))>>>0;y=0;ja(1942,a|0,(m>>>0<l>>>0?l:m)|0);m=y;y=0;if(m&1){w=25;break a}b=f[t>>2]|0;c=b+-1|0;if(!(c&b)){h=b;c=c&o;break}if(o>>>0<b>>>0){h=b;c=o}else{h=b;c=(o>>>0)%(b>>>0)|0}}while(0);b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b){g=f[x>>2]|0;f[g>>2]=f[s>>2];f[s>>2]=g;f[(f[a>>2]|0)+(c<<2)>>2]=s;b=f[g>>2]|0;if(b|0){b=f[b+4>>2]|0;c=h+-1|0;if(c&h){if(b>>>0>=h>>>0)b=(b>>>0)%(h>>>0)|0}else b=b&c;f[(f[a>>2]|0)+(b<<2)>>2]=g}}else{o=f[x>>2]|0;f[o>>2]=f[b>>2];f[b>>2]=o}f[p>>2]=(f[p>>2]|0)+1}c=f[q>>2]|0;q=c;b=c}if((w|0)==25){b=Pa()|0;c=f[x>>2]|0;f[x>>2]=0;if(c|0)$Ja(c);break}else if((w|0)==38){u=v;return}else if((w|0)==39){b=Pa()|0;break}}else b=Pa()|0;while(0);WZ(a);$a(b|0)}function Oh(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+16|0;r=s;p=Jta(f[i>>2]|0,77556)|0;k=Jta(f[i>>2]|0,77572)|0;Mb[f[(f[k>>2]|0)+20>>2]&4095](r,k);n=r+11|0;m=b[n>>0]|0;o=r+4|0;j=d;q=a;a:do if(!((m<<24>>24<0?f[o>>2]|0:m&255)|0)){y=0;xa(f[(f[p>>2]|0)+32>>2]|0,p|0,a|0,d|0,e|0)|0;p=y;y=0;if(p&1)j=28;else{i=e+(j-q)|0;f[h>>2]=i;j=27}}else{f[h>>2]=e;i=b[a>>0]|0;switch(i<<24>>24){case 43:case 45:{y=0;i=ua(f[(f[p>>2]|0)+28>>2]|0,p|0,i|0)|0;m=y;y=0;if(m&1){j=28;break a}m=f[h>>2]|0;f[h>>2]=m+1;b[m>>0]=i;a=a+1|0;break}default:{}}b:do if((j-a|0)>1?(b[a>>0]|0)==48:0){i=a+1|0;switch(b[i>>0]|0){case 88:case 120:break;default:break b}y=0;j=ua(f[(f[p>>2]|0)+28>>2]|0,p|0,48)|0;m=y;y=0;if(m&1){j=28;break a}m=f[h>>2]|0;f[h>>2]=m+1;b[m>>0]=j;y=0;i=ua(f[(f[p>>2]|0)+28>>2]|0,p|0,b[i>>0]|0)|0;m=y;y=0;if(m&1){j=28;break a}m=f[h>>2]|0;f[h>>2]=m+1;b[m>>0]=i;a=a+2|0}while(0);c:do if((a|0)!=(d|0)){i=d;j=a;while(1){i=i+-1|0;if(j>>>0>=i>>>0)break c;m=b[j>>0]|0;b[j>>0]=b[i>>0]|0;b[i>>0]=m;j=j+1|0}}while(0);y=0;m=la(f[(f[k>>2]|0)+16>>2]|0,k|0)|0;l=y;y=0;if(!(l&1)){l=a;i=0;j=0;while(1){if(l>>>0>=d>>>0)break;k=b[((b[n>>0]|0)<0?f[r>>2]|0:r)+i>>0]|0;if(k<<24>>24!=0&(j|0)==(k<<24>>24|0)){j=f[h>>2]|0;f[h>>2]=j+1;b[j>>0]=m;j=b[n>>0]|0;i=(i>>>0<((j<<24>>24<0?f[o>>2]|0:j&255)+-1|0)>>>0&1)+i|0;j=0}y=0;k=ua(f[(f[p>>2]|0)+28>>2]|0,p|0,b[l>>0]|0)|0;t=y;y=0;if(t&1){j=28;break a}t=f[h>>2]|0;f[h>>2]=t+1;b[t>>0]=k;l=l+1|0;j=j+1|0}i=e+(a-q)|0;j=f[h>>2]|0;if((i|0)==(j|0))j=27;else{while(1){j=j+-1|0;if(i>>>0>=j>>>0)break;t=b[i>>0]|0;b[i>>0]=b[j>>0]|0;b[j>>0]=t;i=i+1|0}i=f[h>>2]|0;j=27}}else j=28}while(0);if((j|0)==27){f[g>>2]=(c|0)==(d|0)?i:e+(c-q)|0;zta(r);u=s;return}else if((j|0)==28){t=Pa()|0;zta(r);$a(t|0)}}function Ph(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;a:do if(((((a|0)!=(c|0)?(b[a>>0]|0)==90:0)?(h=a+1|0,e=Fc(h,c,d)|0,!((e|0)==(h|0)|(e|0)==(c|0))):0)?(b[e>>0]|0)==69:0)?(g=e+1|0,(g|0)!=(c|0)):0){e=e+2|0;switch(b[g>>0]|0){case 115:{a=$x(e,c)|0;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;C7(e+-24|0,73444)|0;break a}case 100:{if((e|0)==(c|0))break a;e=pL(e,c)|0;if((e|0)==(c|0))break a;if((b[e>>0]|0)!=95)break a;g=e+1|0;c=Yg(g,c,d)|0;h=d+4|0;if((c|0)==(g|0)){g=f[h>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;i=g+-24|0;f[h>>2]=i;Xka(i);g=f[h>>2]|0}}e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(i,e+-24|0);a=f[h>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;d=g+-24|0;f[h>>2]=d;Xka(d);g=f[h>>2]|0}y=0;ua(165,a+-48|0,72157)|0;d=y;y=0;if(!(d&1)?(d=b[i+11>>0]|0,g=d<<24>>24<0,y=0,oa(73,(f[h>>2]|0)+-24|0,(g?f[i>>2]|0:i)|0,(g?f[i+4>>2]|0:d&255)|0)|0,d=y,y=0,!(d&1)):0){zta(i);a=c;break a}a=Pa()|0;zta(i);break}default:{e=Yg(g,c,d)|0;if((e|0)==(g|0)){e=d+4|0;c=f[e>>2]|0;g=c+-24|0;while(1){if((c|0)==(g|0))break a;i=c+-24|0;f[e>>2]=i;Xka(i);c=f[e>>2]|0}}a=$x(e,c)|0;h=d+4|0;e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(i,e+-24|0);e=f[h>>2]|0;g=e+-24|0;c=e;while(1){if((c|0)==(g|0))break;d=c+-24|0;f[h>>2]=d;Xka(d);c=f[h>>2]|0}y=0;ua(165,e+-48|0,72157)|0;d=y;y=0;if(!(d&1)?(d=b[i+11>>0]|0,c=d<<24>>24<0,y=0,oa(73,(f[h>>2]|0)+-24|0,(c?f[i>>2]|0:i)|0,(c?f[i+4>>2]|0:d&255)|0)|0,d=y,y=0,!(d&1)):0){zta(i);break a}a=Pa()|0;zta(i)}}$a(a|0)}while(0);u=j;return a|0}function Qh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;l=u;u=u+96|0;j=l+40|0;k=l+88|0;m=l+76|0;n=l+16|0;e=l+72|0;h=l+68|0;g=l;f[k>>2]=0;f[m>>2]=0;c=m+4|0;f[c>>2]=0;f[m+8>>2]=0;M3(n,k,m,n);y=0;ya(92,f[n+16>>2]|0,b|0,1);d=y;y=0;a:do if(d&1)c=Pa()|0;else{o=f[c>>2]|0;c=f[m>>2]|0;d=o;b:do if(o-c>>2>>>0<2){c=pAa(f[b+16>>2]|0)|0;if(c){y=0;c=la(161,c+8|0)|0;o=y;y=0;if(o&1){c=Pa()|0;break a}if(!c)c=f[b+12>>2]|0;else c=0}else c=0}else{while(1){if((c|0)==(d|0))break;o=f[c>>2]|0;uAa(j,0);o=o+8|0;f[o>>2]=f[j>>2];f[o+4>>2]=f[j+4>>2];f[o+8>>2]=f[j+8>>2];f[o+12>>2]=f[j+12>>2];c=c+4|0}f[e>>2]=b;Nna(j,uya(f[a+40>>2]|0)|0);y=0;ja(1138,j|0,e|0);o=y;y=0;c:do if(o&1){c=Pa()|0;Rua(j)}else{Rua(j);c=f[e>>2]|0;d:do if(f[k>>2]|0){c=pAa(c)|0;if(!c){d=f[a+36>>2]|0;gKa(d)|0;VBa(h,d);d=f[e>>2]|0;uAa(g,f[k>>2]|0);y=0;f[j>>2]=f[g>>2];f[j+4>>2]=f[g+4>>2];f[j+8>>2]=f[g+8>>2];f[j+12>>2]=f[g+12>>2];c=ua(102,h|0,j|0)|0;o=y;y=0;if(!(o&1)?(y=0,i=xa(12,f[h>>2]|0,0,d|0,c|0)|0,o=y,y=0,!(o&1)):0){c=i;break}c=Pa()|0;break c}d=c+8|0;y=0;a=la(161,d|0)|0;o=y;y=0;do if(!(o&1))if(!a){uAa(j,f[k>>2]|0);f[d>>2]=f[j>>2];f[d+4>>2]=f[j+4>>2];f[d+8>>2]=f[j+8>>2];f[d+12>>2]=f[j+12>>2];break d}else{y=0;Ca(52,41815,41407,860,41838);y=0;break}while(0);c=Pa()|0;break c}while(0);break b}while(0);break a}while(0);D8(n);E4(m);u=l;return c|0}while(0);D8(n);E4(m);$a(c|0);return 0}function Rh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;z=u;u=u+16|0;x=z+4|0;r=z;f[r>>2]=c;w=j7(c)|0;t=a+4|0;i=f[t>>2]|0;v=(i|0)==0;a:do if(!v){q=i+-1|0;o=(q&i|0)==0;if(!o)if(w>>>0<i>>>0)e=w;else e=(w>>>0)%(i>>>0)|0;else e=q&w;d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d)s=22;else{p=b[c+11>>0]|0;m=p<<24>>24<0;p=m?f[c+4>>2]|0:p&255;m=m?f[c>>2]|0:c;b:while(1){d=f[d>>2]|0;if(!d){s=22;break a}c=f[d+4>>2]|0;if((c|0)!=(w|0)){if(!o){if(c>>>0>=i>>>0)c=(c>>>0)%(i>>>0)|0}else c=c&q;if((c|0)!=(e|0)){s=22;break a}}k=d+8|0;c=b[k+11>>0]|0;j=c<<24>>24<0;c=c&255;if(((j?f[d+12>>2]|0:c)|0)!=(p|0))continue;if(j)if(!(ara(f[k>>2]|0,m,p)|0))break;else continue;l=m;j=k;while(1){if(!c)break a;if((b[j>>0]|0)!=(b[l>>0]|0))continue b;l=l+1|0;j=j+1|0;c=c+-1|0}}}}else{e=0;s=22}while(0);if((s|0)==22){IB(x,a,w,r);j=a+12|0;g=+(((f[j>>2]|0)+1|0)>>>0);h=+n[a+16>>2];do if(v|g>+(i>>>0)*h){v=(i>>>0<3|(i+-1&i|0)!=0)&1|i<<1;s=~~+X(+(g/h))>>>0;y=0;ja(723,a|0,(v>>>0<s>>>0?s:v)|0);v=y;y=0;if(!(v&1)){d=f[t>>2]|0;e=d+-1|0;if(!(e&d)){i=d;e=e&w;break}if(w>>>0<d>>>0){i=d;e=w;break}i=d;e=(w>>>0)%(d>>>0)|0;break}d=Pa()|0;e=f[x>>2]|0;f[x>>2]=0;if(e|0){if(b[x+8>>0]|0)Kxa(e+8|0);$Ja(e)}$a(d|0)}while(0);d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d){w=a+8|0;d=f[x>>2]|0;f[d>>2]=f[w>>2];f[w>>2]=d;f[(f[a>>2]|0)+(e<<2)>>2]=w;e=f[d>>2]|0;if(!e)e=x;else{e=f[e+4>>2]|0;c=i+-1|0;if(c&i){if(e>>>0>=i>>>0)e=(e>>>0)%(i>>>0)|0}else e=e&c;f[(f[a>>2]|0)+(e<<2)>>2]=d;e=x}}else{a=f[x>>2]|0;f[a>>2]=f[d>>2];f[d>>2]=a;e=x;d=a}f[j>>2]=(f[j>>2]|0)+1;f[e>>2]=0}u=z;return d+20|0}function Sh(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+48|0;r=s+32|0;g=s+28|0;k=s+24|0;l=s+20|0;m=s+16|0;n=s+12|0;o=s+8|0;p=s+4|0;q=s;j=f[a>>2]|0;do if((f[j+28>>2]|0)!=(f[j+24>>2]|0)){j=a+12|0;do if(b[j>>0]|0){c=Vea(76852,59528)|0;Axa(r,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[r>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(r);jn(c,e)|0;Yp(c)|0;break}s=Pa()|0;pza(r);$a(s|0)}while(0);i=uW(a,7)|0;h=a+4|0;e=f[h>>2]|0;d=f[a>>2]|0;PDa(g,(f[d+28>>2]|0)-(f[d+24>>2]|0)>>2);Un(e,f[g>>2]|0)|0;e=f[a>>2]|0;g=f[e+28>>2]|0;e=f[e+24>>2]|0;a:while(1){if((e|0)==(g|0)){c=9;break}if(b[j>>0]|0){d=Vea(76852,59544)|0;Axa(r,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[r>>2]|0,77556)|0;t=y;y=0;if(t&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;t=y;y=0;if(t&1){c=13;break}pza(r);jn(d,c)|0;Yp(d)|0}JO(a,f[f[e>>2]>>2]|0);c=f[h>>2]|0;PDa(k,f[(f[e>>2]|0)+8>>2]|0);Un(c,f[k>>2]|0)|0;c=f[e>>2]|0;switch(f[c+8>>2]|0){case 0:{t=f[h>>2]|0;f[m>>2]=f[c+4>>2];f[r>>2]=f[m>>2];PDa(l,Up(a,r)|0);Un(t,f[l>>2]|0)|0;break}case 1:{t=f[h>>2]|0;PDa(n,0);Un(t,f[n>>2]|0)|0;break}case 2:{t=f[h>>2]|0;PDa(o,0);Un(t,f[o>>2]|0)|0;break}case 3:{t=f[h>>2]|0;f[q>>2]=f[c+4>>2];f[r>>2]=f[q>>2];PDa(p,Vp(a,r)|0);Un(t,f[p>>2]|0)|0;break}default:{c=20;break a}}e=e+4|0}if((c|0)==9){KE(a,i);break}else if((c|0)==13){t=Pa()|0;pza(r);$a(t|0)}else if((c|0)==20)Ka()}while(0);u=s;return}function Th(a,c){a=a|0;c=c|0;var d=0,e=0,g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;z=u;u=u+16|0;x=z+4|0;r=z;f[r>>2]=c;w=j7(c)|0;t=a+4|0;i=f[t>>2]|0;v=(i|0)==0;a:do if(!v){q=i+-1|0;o=(q&i|0)==0;if(!o)if(w>>>0<i>>>0)e=w;else e=(w>>>0)%(i>>>0)|0;else e=q&w;d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d)s=22;else{p=b[c+11>>0]|0;m=p<<24>>24<0;p=m?f[c+4>>2]|0:p&255;m=m?f[c>>2]|0:c;b:while(1){d=f[d>>2]|0;if(!d){s=22;break a}c=f[d+4>>2]|0;if((c|0)!=(w|0)){if(!o){if(c>>>0>=i>>>0)c=(c>>>0)%(i>>>0)|0}else c=c&q;if((c|0)!=(e|0)){s=22;break a}}k=d+8|0;c=b[k+11>>0]|0;j=c<<24>>24<0;c=c&255;if(((j?f[d+12>>2]|0:c)|0)!=(p|0))continue;if(j)if(!(ara(f[k>>2]|0,m,p)|0))break;else continue;l=m;j=k;while(1){if(!c)break a;if((b[j>>0]|0)!=(b[l>>0]|0))continue b;l=l+1|0;j=j+1|0;c=c+-1|0}}}}else{e=0;s=22}while(0);if((s|0)==22){IB(x,a,w,r);j=a+12|0;g=+(((f[j>>2]|0)+1|0)>>>0);h=+n[a+16>>2];do if(v|g>+(i>>>0)*h){v=(i>>>0<3|(i+-1&i|0)!=0)&1|i<<1;s=~~+X(+(g/h))>>>0;y=0;ja(2013,a|0,(v>>>0<s>>>0?s:v)|0);v=y;y=0;if(!(v&1)){d=f[t>>2]|0;e=d+-1|0;if(!(e&d)){i=d;e=e&w;break}if(w>>>0<d>>>0){i=d;e=w;break}i=d;e=(w>>>0)%(d>>>0)|0;break}d=Pa()|0;e=f[x>>2]|0;f[x>>2]=0;if(e|0){if(b[x+8>>0]|0)Kxa(e+8|0);$Ja(e)}$a(d|0)}while(0);d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d){w=a+8|0;d=f[x>>2]|0;f[d>>2]=f[w>>2];f[w>>2]=d;f[(f[a>>2]|0)+(e<<2)>>2]=w;e=f[d>>2]|0;if(!e)e=x;else{e=f[e+4>>2]|0;c=i+-1|0;if(c&i){if(e>>>0>=i>>>0)e=(e>>>0)%(i>>>0)|0}else e=e&c;f[(f[a>>2]|0)+(e<<2)>>2]=d;e=x}}else{a=f[x>>2]|0;f[a>>2]=f[d>>2];f[d>>2]=a;e=x;d=a}f[j>>2]=(f[j>>2]|0)+1;f[e>>2]=0}u=z;return d+20|0}function Uh(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;g=k;do if(b[a+12>>0]|0){i=Vea(76852,56330)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(g);jn(i,e)|0;Yp(i)|0;break}l=Pa()|0;pza(g);$a(l|0)}while(0);Ql(a,c+24|0);d=a+4|0;e=c+8|0;a:do if(!(b[c+20>>0]|0)){g=c+9|0;switch(f[c+4>>2]|0){case 5:break a;case 1:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,b[g>>0]|0?44:45)|0;j=35;break a}case 2:{Zq(f[d>>2]|0,b[g>>0]|0?46:47)|0;j=35;break a}case 4:{Zq(f[d>>2]|0,40)|0;j=35;break a}default:Ka()}break}case 2:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,b[g>>0]|0?48:49)|0;j=35;break a}case 2:{Zq(f[d>>2]|0,b[g>>0]|0?50:51)|0;j=35;break a}case 4:{Zq(f[d>>2]|0,b[g>>0]|0?52:53)|0;j=35;break a}case 8:{Zq(f[d>>2]|0,41)|0;j=35;break a}default:Ka()}break}case 3:{Zq(f[d>>2]|0,42)|0;j=35;break a}case 4:{Zq(f[d>>2]|0,43)|0;j=35;break a}default:Ka()}}else{Zq(f[d>>2]|0,-2)|0;switch(f[c+4>>2]|0){case 5:break a;case 1:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,18)|0;j=35;break a}case 2:{Zq(f[d>>2]|0,19)|0;j=35;break a}case 4:{Zq(f[d>>2]|0,16)|0;j=35;break a}default:Ka()}break}case 2:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,20)|0;j=35;break a}case 2:{Zq(f[d>>2]|0,21)|0;j=35;break a}case 4:{Zq(f[d>>2]|0,22)|0;j=35;break a}case 8:{Zq(f[d>>2]|0,17)|0;j=35;break a}default:Ka()}break}default:Ka()}}while(0);if((j|0)==35){j=gKa(f[c+16>>2]|0)|0;l=h[e>>0]|0;AN(a,j,l,gKa(f[c+12>>2]|0)|0)}u=k;return}function Vh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;t=u;u=u+64|0;l=t+24|0;h=t+56|0;v=t+40|0;j=t;k=b+16|0;e=f[k>>2]|0;if(e>>>0>250){e=f[b+36>>2]|0;Mb[f[(f[e>>2]|0)+20>>2]&4095](e,25720);e=f[k>>2]|0}f[k>>2]=e+1;i=b+20|0;r=b+24|0;g=f[r>>2]|0;s=g-(f[i>>2]|0)|0;if((g|0)==(f[b+28>>2]|0))XC(i,c);else{f[g>>2]=f[c>>2];f[r>>2]=(f[r>>2]|0)+4}g=f[b>>2]|0;f[h>>2]=f[c>>2];f[l>>2]=f[h>>2];g=vY(g,l)|0;if(!g)Na(28819,39631,892,25732);tf(v,g,d);jK(l,b,v);y=0;ya(70,j|0,l|0,f[g+36>>2]|0);d=y;y=0;if(d&1)e=Pa()|0;else{if(FBa(j)|0?!(bDa(f[j+16>>2]|0,f[18770]|0)|0):0){y=0;Ca(52,25753,39631,904,25732);y=0}else{f[a>>2]=f[j>>2];f[a+4>>2]=f[j+4>>2];f[a+8>>2]=f[j+8>>2];f[a+12>>2]=f[j+12>>2];c=g+4|0;if((f[c>>2]|0)==(f[a>>2]|0)){f[k>>2]=e;c=f[i>>2]|0;e=f[r>>2]|0;g=e;while(1){if((e-c|0)>>>0>s>>>0)e=0;else break;while(1){if((e|0)==-1)break;q=e+-1|0;f[r>>2]=g+(q<<2);e=q}e=g+-4|0;g=e}T7(v);u=t;return}y=0;e=ua(53,76852,25801)|0;t=y;y=0;if((((((!(t&1)?(y=0,m=ua(65,e|0,f[g>>2]|0)|0,t=y,y=0,!(t&1)):0)?(y=0,n=ua(53,m|0,25810)|0,t=y,y=0,!(t&1)):0)?(y=0,f[l>>2]=f[a>>2],f[l+4>>2]=f[a+4>>2],f[l+8>>2]=f[a+8>>2],f[l+12>>2]=f[a+12>>2],o=ua(66,n|0,l|0)|0,t=y,y=0,!(t&1)):0)?(y=0,p=ua(53,o|0,25824)|0,t=y,y=0,!(t&1)):0)?(y=0,q=ua(62,p|0,f[c>>2]|0)|0,t=y,y=0,!(t&1)):0)?(y=0,ua(67,q|0,10)|0,t=y,y=0,!(t&1)):0){y=0;za(6);y=0}}e=Pa()|0}T7(v);$a(e|0)}function Wh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+32|0;l=o+16|0;h=o+12|0;m=o+8|0;j=o;i=o+4|0;f[h>>2]=b;e=b+12|0;k=a+48|0;n=a+36|0;switch(gKa(f[b+16>>2]|0)|0){case 1:{b=b+8|0;if(((pJa(f[b>>2]|0)|0?(d=bga(e,0)|0,d=xAa(f[d>>2]|0)|0,f[l>>2]=d,d|0):0)?(c=f[d+8>>2]|0,pJa(c)|0):0)?aDa(c,f[b>>2]|0)|0:0){b=EL(n,l)|0;c=f[b+4>>2]|0;b=f[b>>2]|0;while(1){if((b|0)==(c|0))break;f[m>>2]=f[b>>2];e=(f[h>>2]|0)+8|0;d=yM(k,m)|0;f[d>>2]=f[e>>2];d=EL(n,h)|0;e=d+4|0;g=f[e>>2]|0;if((g|0)==(f[d+8>>2]|0))XC(d,m);else{f[g>>2]=f[m>>2];f[e>>2]=(f[e>>2]|0)+4}b=b+4|0}FK(n,f[l>>2]|0)}break}case 2:{b=bga(e,0)|0;b=xAa(f[b>>2]|0)|0;f[m>>2]=b;c=bga(e,1)|0;c=wAa(f[c>>2]|0)|0;if((b|0?(c|0)!=0&(pJa(f[b+8>>2]|0)|0):0)?nra(c)|0:0){g=EL(n,m)|0;d=g+4|0;e=f[d>>2]|0;c=c+8|0;b=f[g>>2]|0;while(1){if((b|0)==(e|0))break;f[l>>2]=f[b>>2];h=yM(k,l)|0;f[h>>2]=f[c>>2];b=b+4|0}f[i>>2]=f[c>>2];h=f[a+24>>2]|0;k=f[a+28>>2]|0;f[l>>2]=f[i>>2];k=xAa(jx(h,k,l)|0)|0;f[j>>2]=k;a:do if(k|0){h=f[d>>2]|0;b=f[g>>2]|0;while(1){if((b|0)==(h|0))break a;c=f[b>>2]|0;f[l>>2]=c;d=EL(n,j)|0;e=d+4|0;g=f[e>>2]|0;if((g|0)==(f[d+8>>2]|0))XC(d,l);else{f[g>>2]=c;f[e>>2]=(f[e>>2]|0)+4}b=b+4|0}}while(0);FK(n,f[m>>2]|0)}break}default:{}}u=o;return}function Xh(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;j=u;u=u+32|0;h=j+24|0;k=j+12|0;l=j;do if(b[a+12>>0]|0){i=Vea(76852,56525)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[h>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,n=y,y=0,!(n&1)):0){pza(h);jn(i,g)|0;Yp(i)|0;break}n=Pa()|0;pza(h);$a(n|0)}while(0);e=a+112|0;a:do if(!(f[e>>2]|0)){i=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;h=uHa(56547)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[k+11>>0]=h;e=k}else{g=h+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){m=15;break}f[k>>2]=e;f[k+8>>2]=g|-2147483648;f[k+4>>2]=h}Pta(e,56547,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,k|0);n=y;y=0;if(n&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(k);if(!g)break a}else{y=0;za(3);y=0;m=15}while(0);if((m|0)==15)e=Pa()|0;Oa(i|0)}else{n=Nm(a)|0;f[c+8>>2]=n;if(n>>>0<(Pqa(f[e>>2]|0)|0)>>>0){n=Jg(a)|0;f[c+12>>2]=n;f[c+4>>2]=f[n+4>>2];_la(c,d<<24>>24==34);Faa(c);u=j;return}i=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;h=uHa(56577)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[l+11>>0]=h;e=l}else{g=h+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){m=27;break}f[l>>2]=e;f[l+8>>2]=g|-2147483648;f[l+4>>2]=h}Pta(e,56577,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,l|0);n=y;y=0;if(n&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(l);if(!g)break a}else{y=0;za(3);y=0;m=27}while(0);if((m|0)==27)e=Pa()|0;Oa(i|0)}while(0);$a(e|0)}function Yh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+64|0;r=s+24|0;g=s+20|0;t=s+8|0;p=s+4|0;q=s;d=f[c+28>>2]|0;b=f[c+24>>2]|0;while(1){if((b|0)==(d|0))break;e=f[b>>2]|0;if(((f[e+8>>2]|0)==0?(f[g>>2]=f[e+4>>2],f[r>>2]=f[g>>2],h=w$(c,r)|0,h|0):0)?AV(h)|0:0){o=eg(h,c)|0;f[(f[b>>2]|0)+4>>2]=o}b=b+4|0}f[t>>2]=0;n=t+4|0;f[n>>2]=0;f[t+8>>2]=0;j=f[c+16>>2]|0;o=a+16|0;k=t+8|0;l=c+76|0;m=c+80|0;i=f[c+12>>2]|0;while(1){if((i|0)==(j|0)){e=10;break}b=f[i>>2]|0;if(!(f[b+12>>2]|0)){f[p>>2]=f[b+16>>2];y=0;f[r>>2]=f[p>>2];b=ua(107,c|0,r|0)|0;h=y;y=0;if(h&1){e=22;break}if(AV(b)|0){cJa(r);y=0;b=oa(58,f[i>>2]|0,c|0,r|0)|0;h=y;y=0;if(h&1){e=23;break}f[q>>2]=b;y=0;d=ua(108,o|0,f[i>>2]|0)|0;h=y;y=0;if(h&1){e=24;break}h=f[r>>2]|0;f[d>>2]=h;d=f[n>>2]|0;if((d|0)==(f[k>>2]|0)){y=0;ja(1469,t|0,q|0);g=y;y=0;if(g&1){e=24;break}}else{f[d>>2]=b;f[n>>2]=(f[n>>2]|0)+4}e=f[m>>2]|0;d=f[l>>2]|0;while(1){if((d|0)==(e|0))break;g=f[d+8>>2]|0;b=f[d+4>>2]|0;while(1){if((b|0)==(g|0))break;if(bDa(f[b>>2]|0,f[f[i>>2]>>2]|0)|0)f[b>>2]=h;b=b+4|0}d=d+16|0}}}i=i+4|0}a:do if((e|0)==10){do if(f[a+24>>2]|0){d=f[n>>2]|0;b=f[t>>2]|0;while(1){if((b|0)==(d|0))break;y=0;ja(1471,c|0,f[b>>2]|0);a=y;y=0;if(a&1){e=38;break}b=b+4|0}if((e|0)==38){b=Pa()|0;break a}kca(r,c);XAa(r,1);y=0;ja(1470,r|0,o|0);c=y;y=0;if(!(c&1)?(y=0,ia(341,r|0),c=y,y=0,!(c&1)):0){SY(r);break}b=Pa()|0;SY(r);break a}while(0);E4(t);u=s;return}else if((e|0)==22)b=Pa()|0;else if((e|0)==23){b=Pa()|0;e=31}else if((e|0)==24){b=Pa()|0;e=31}while(0);E4(t);$a(b|0)}function Zh(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;m=n+40|0;l=n+16|0;j=n;a:do if(((a|0)!=(c|0)?(e=(b[a>>0]|0)+-48|0,e>>>0<10):0)?(g=a+1|0,(g|0)!=(c|0)):0){k=e;while(1){h=(b[g>>0]|0)+-48|0;if(h>>>0>=10)break;e=g+1|0;if((e|0)==(c|0))break a;k=h+(k*10|0)|0;g=e}if((c-g|0)>>>0>=k>>>0){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;if(k>>>0>4294967279)JZ();if(k>>>0<11){b[m+11>>0]=k;a=m}else{c=k+16&-16;a=QCa(c)|0;f[m>>2]=a;f[m+8>>2]=c|-2147483648;f[m+4>>2]=k}Pta(a,g,k)|0;SBa(a+k|0,0);y=0;ya(147,l|0,m|0,10);c=y;y=0;do if(c&1)a=Pa()|0;else{a=uHa(73465)|0;c=b[l+11>>0]|0;do if((a|0)==((c<<24>>24<0?f[l+4>>2]|0:c&255)|0)){y=0;a=oa(78,l|0,73465,a|0)|0;c=y;y=0;if(c&1){c=ab(0)|0;lDa(c)}else{i=(a|0)==0;break}}else i=0;while(0);zta(l);if(i){CK(l);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(l);break}}else{ZL(e,l);f[a>>2]=(f[a>>2]|0)+24}Xka(l)}else{f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}hM(l,j);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(l);zta(j);break}}else{ZL(e,l);f[a>>2]=(f[a>>2]|0)+24}Xka(l);zta(j)}zta(m);a=g+k|0;break a}while(0);zta(m);$a(a|0)}}while(0);u=n;return a|0}function _h(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,489,b);a=(ksa(c)|0)+8|0;if(pJa(f[a>>2]|0)|0)JJ(d,490,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 2:{JJ(d,491,b);JJ(d,490,b);hH(d,(Asa(c)|0)+16|0);JJ(d,490,b);JJ(d,482,(Asa(c)|0)+12|0);JJ(d,490,b);JJ(d,482,(Asa(c)|0)+8|0);break}case 3:{JJ(d,492,b);JJ(d,482,(rsa(c)|0)+12|0);JJ(d,490,b);break}case 4:{JJ(d,493,b);JJ(d,490,b);hH(d,(jsa(c)|0)+16|0);hH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,494,b);JJ(d,490,b);hH(d,(Xra(c)|0)+32|0);JJ(d,482,(Xra(c)|0)+28|0);break}case 20:{JJ(d,495,b);JJ(d,490,b);hH(d,(Rra(c)|0)+8|0);break}case 23:{JJ(d,496,b);JJ(d,490,b);break}default:_d(a,b)}while(0);return}function $h(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;i=u;u=u+32|0;g=i+24|0;j=i+12|0;k=i;do if(b[a+12>>0]|0){d=Vea(76852,56597)|0;d=vj(d,f[a+36>>2]|0)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[g>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,m=y,y=0,!(m&1)):0){pza(g);jn(d,h)|0;Yp(d)|0;break}m=Pa()|0;pza(g);$a(m|0)}while(0);d=a+112|0;a:do if(!(f[d>>2]|0)){h=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(56616)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[j+11>>0]=g;d=j}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=15;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=g}Pta(d,56616,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,j|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(!e)break a}else{y=0;za(3);y=0;l=15}while(0);if((l|0)==15)d=Pa()|0;Oa(h|0)}else{e=Nm(a)|0;f[c+8>>2]=e;d=f[d>>2]|0;if(e>>>0<(Pqa(d)|0)>>>0){m=YV(d,e)|0;f[c+4>>2]=m;u=i;return}h=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;g=uHa(56646)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[k+11>>0]=g;d=k}else{e=g+16&-16;y=0;d=la(150,e|0)|0;m=y;y=0;if(m&1){l=27;break}f[k>>2]=d;f[k+8>>2]=e|-2147483648;f[k+4>>2]=g}Pta(d,56646,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,k|0);m=y;y=0;if(m&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(k);if(!e)break a}else{y=0;za(3);y=0;l=27}while(0);if((l|0)==27)d=Pa()|0;Oa(h|0)}while(0);$a(d|0)}function ai(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1437,b);a=(ksa(c)|0)+8|0;if(pJa(f[a>>2]|0)|0)JJ(d,1438,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 2:{JJ(d,1439,b);JJ(d,1438,b);AH(d,(Asa(c)|0)+16|0);JJ(d,1438,b);JJ(d,1433,(Asa(c)|0)+12|0);JJ(d,1438,b);JJ(d,1433,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1440,b);JJ(d,1433,(rsa(c)|0)+12|0);JJ(d,1438,b);break}case 4:{JJ(d,1441,b);JJ(d,1438,b);AH(d,(jsa(c)|0)+16|0);AH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1442,b);JJ(d,1438,b);AH(d,(Xra(c)|0)+32|0);JJ(d,1433,(Xra(c)|0)+28|0);break}case 20:{JJ(d,1443,b);JJ(d,1438,b);AH(d,(Rra(c)|0)+8|0);break}case 23:{JJ(d,1444,b);JJ(d,1438,b);break}default:Ud(a,b)}while(0);return}function bi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=c;n=d;i=n;if(!k){g=(e|0)!=0;if(!i){if(g){f[e>>2]=(l>>>0)%(h>>>0);f[e+4>>2]=0}n=0;e=(l>>>0)/(h>>>0)>>>0;return (J=n,e)|0}else{if(!g){n=0;e=0;return (J=n,e)|0}f[e>>2]=a|0;f[e+4>>2]=b&0;n=0;e=0;return (J=n,e)|0}}g=(i|0)==0;do if(h){if(!g){g=($(i|0)|0)-($(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break}if(!e){n=0;e=0;return (J=n,e)|0}f[e>>2]=a|0;f[e+4>>2]=j|b&0;n=0;e=0;return (J=n,e)|0}g=h-1|0;if(g&h|0){i=($(h|0)|0)+33-($(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(e|0){f[e>>2]=g&l;f[e+4>>2]=0}if((h|0)==1){o=j|b&0;p=a|0|0;return (J=o,p)|0}else{p=F2(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (J=o,p)|0}}else{if(g){if(e|0){f[e>>2]=(k>>>0)%(h>>>0);f[e+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (J=o,p)|0}if(!l){if(e|0){f[e>>2]=0;f[e+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (J=o,p)|0}g=i-1|0;if(!(g&i)){if(e|0){f[e>>2]=a|0;f[e+4>>2]=g&k|b&0}o=0;p=k>>>((F2(i|0)|0)>>>0);return (J=o,p)|0}g=($(i|0)|0)-($(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break}if(!e){o=0;p=0;return (J=o,p)|0}f[e>>2]=a|0;f[e+4>>2]=j|b&0;o=0;p=0;return (J=o,p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=c|0|0;l=n|d&0;k=Hsa(m|0,l|0,-1,-1)|0;c=J;j=i;i=0;do{d=j;j=g>>>31|j<<1;g=i|g<<1;d=a<<1|d>>>31|0;n=a>>>31|b<<1|0;Aoa(k|0,c|0,d|0,n|0)|0;p=J;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=Aoa(d|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=J;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(e|0){f[e>>2]=a;f[e+4>>2]=b}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (J=o,p)|0}function ci(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;w=u;u=u+32|0;n=w;o=a+100|0;jqa(o,c);p=a+97|0;b[p>>0]=1;q=a+96|0;r=a+16|0;s=a+148|0;t=a+152|0;v=a+160|0;j=a+164|0;k=a+48|0;l=a+60|0;m=a+72|0;i=a+36|0;while(1){b[q>>0]=0;$ka(r,c);h=f[t>>2]|0;d=f[s>>2]|0;e=h;if((h|0)!=(d|0)){while(1){if((d|0)==(e|0))break;g=(f[d>>2]|0)+12|0;h=f[i>>2]|0;gKa(h)|0;AW(g,ewa(h+144|0)|0);d=d+4|0}d=f[s>>2]|0;e=f[t>>2]|0;while(1){if((e|0)==(d|0))break;h=e+-4|0;f[t>>2]=h;e=h}b[q>>0]=1}g=f[j>>2]|0;d=f[v>>2]|0;h=g;if((g|0)!=(d|0)){while(1){if((d|0)==(h|0))break;e=f[d>>2]|0;g=f[i>>2]|0;gKa(g)|0;VBa(n,g);g=e+12|0;x=JU(n,f[g>>2]|0,0)|0;f[g>>2]=x;g=x+12|0;if(!((gKa(f[x+16>>2]|0)|0)!=0?(x=efa(g)|0,sGa(f[f[x>>2]>>2]|0)|0):0)){x=f[i>>2]|0;gKa(x)|0;AW(g,ewa(x+144|0)|0)}x=f[i>>2]|0;gKa(x)|0;VBa(n,x);e=e+16|0;x=JU(n,f[e>>2]|0,0)|0;f[e>>2]=x;e=x+12|0;if(!((gKa(f[x+16>>2]|0)|0)!=0?(x=efa(e)|0,sGa(f[f[x>>2]>>2]|0)|0):0)){x=f[i>>2]|0;gKa(x)|0;AW(e,ewa(x+144|0)|0)}d=d+4|0}d=f[v>>2]|0;e=f[j>>2]|0;while(1){if((e|0)==(d|0))break;x=e+-4|0;f[j>>2]=x;e=x}b[q>>0]=1}LT(k);AP(l);r5(m);if(!(b[p>>0]|0))if(!(b[q>>0]|0))break;else continue;else{b[p>>0]=0;b[q>>0]=1;continue}}jqa(o,c);Hza(n);f[n+24>>2]=a+124;y=0;ja(453,n|0,c|0);x=y;y=0;if(x&1){x=Pa()|0;Rua(n);$a(x|0)}else{Rua(n);u=w;return}}function di(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;v=u;u=u+64|0;n=v+48|0;w=v+32|0;q=v+24|0;e=v+16|0;j=v+8|0;k=v;l=v+12|0;p=v+4|0;i=Xra(f[b>>2]|0)|0;gua(w);r=i+8|0;Bwa(q,r);iua(e,r);r=a+16|0;o=a+84|0;s=a+80|0;g=q+4|0;d=f[e>>2]|0;e=f[e+4>>2]|0;m=a+40|0;h=a+44|0;while(1){if(!(Cpa(f[q>>2]|0,f[g>>2]|0,d,e)|0)){c=18;break}y=0;b=la(164,q|0)|0;c=y;y=0;if(c&1){c=3;break}b=f[b>>2]|0;f[j>>2]=b;if(!(WS(w,j)|0)){f[l>>2]=b;c=f[m>>2]|0;b=f[h>>2]|0;y=0;f[n>>2]=f[l>>2];b=oa(67,c|0,b|0,n|0)|0;c=y;y=0;if(c&1){c=14;break}f[k>>2]=b;y=0;b=ua(134,o|0,k|0)|0;c=y;y=0;if(c&1){c=14;break}a=b+4|0;c=f[a>>2]|0;if((c|0)==(f[b+8>>2]|0)){y=0;ja(1957,b|0,s|0);c=y;y=0;if(c&1){c=14;break}}else{f[c>>2]=f[s>>2];f[a>>2]=(f[a>>2]|0)+4}y=0;Ca(59,n|0,w|0,j|0,j|0);c=y;y=0;if(c&1){c=13;break}}bva(q)}a:do if((c|0)==3){b=Pa()|0;c=17}else if((c|0)==13){b=Pa()|0;c=16}else if((c|0)==14){b=Pa()|0;c=16}else if((c|0)==18){b=i+24|0;b:do if(!(WS(w,b)|0)){f[p>>2]=f[b>>2];m=f[m>>2]|0;b=f[h>>2]|0;y=0;f[n>>2]=f[p>>2];b=oa(67,m|0,b|0,n|0)|0;p=y;y=0;do if(!(p&1)?(f[q>>2]=b,y=0,t=ua(134,o|0,q|0)|0,q=y,y=0,!(q&1)):0){b=t+4|0;a=f[b>>2]|0;if((a|0)==(f[t+8>>2]|0)){y=0;ja(1957,t|0,s|0);t=y;y=0;if(t&1)break}else{f[a>>2]=f[s>>2];f[b>>2]=(f[b>>2]|0)+4}break b}while(0);b=Pa()|0;break a}while(0);Jva(r);Cta(w);u=v;return}while(0);if((c|0)==16)c=17;Cta(w);$a(b|0)}function ei(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+48|0;d=k+36|0;g=k+24|0;i=k+12|0;j=k;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;e=uHa(29566)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[d+11>>0]=e;c=d}else{l=e+16&-16;c=nV(l)|0;f[d>>2]=c;f[d+8>>2]=l|-2147483648;f[d+4>>2]=e}Pta(c,29566,e)|0;SBa(c+e|0,0);y=0;ja(1516,a|0,d|0);l=y;y=0;a:do if(!(l&1)){zta(d);f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(30947)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[g+11>>0]=d;c=g}else{l=d+16&-16;c=nV(l)|0;f[g>>2]=c;f[g+8>>2]=l|-2147483648;f[g+4>>2]=d}Pta(c,30947,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,g|0);l=y;y=0;if(l&1){c=Pa()|0;zta(g);break}zta(g);if(!((f[a+24>>2]|0)<=1?(f[a+28>>2]|0)<=1:0))h=15;do if((h|0)==15){f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=uHa(29812)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[i+11>>0]=d;c=i}else{l=d+16&-16;c=nV(l)|0;f[i>>2]=c;f[i+8>>2]=l|-2147483648;f[i+4>>2]=d}Pta(c,29812,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,i|0);l=y;y=0;if(l&1){c=Pa()|0;zta(i);break a}else{zta(i);break}}while(0);f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(30189)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[j+11>>0]=d;c=j}else{l=d+16&-16;c=nV(l)|0;f[j>>2]=c;f[j+8>>2]=l|-2147483648;f[j+4>>2]=d}Pta(c,30189,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,j|0);l=y;y=0;if(l&1){c=Pa()|0;zta(j);break}else{zta(j);u=k;return}}else{c=Pa()|0;zta(d)}while(0);$a(c|0)}function fi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+32|0;k=l+24|0;h=l+20|0;i=l+16|0;j=l;m=l+4|0;do if(b[a+12>>0]|0){e=Vea(76852,56758)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[k>>2]|0,77556)|0;g=y;y=0;if(!(g&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,g=y,y=0,!(g&1)):0){pza(k);jn(e,d)|0;Yp(e)|0;break}n=Pa()|0;pza(k);$a(n|0)}while(0);d=Nm(a)|0;e=a+60|0;g=a+64|0;c=f[a+4>>2]|0;do if(d>>>0<(f[g>>2]|0)-(f[e>>2]|0)>>2>>>0){c=Mqa(c)|0;m=f[a>>2]|0;f[h>>2]=f[(f[e>>2]|0)+(d<<2)>>2];f[k>>2]=f[h>>2];m=QY(m,k)|0;f[c+24>>2]=f[m>>2];n=f[a>>2]|0;f[i>>2]=f[m+16>>2];f[k>>2]=f[i>>2];XH(a,c,UX(n,k)|0);$Aa(c)}else{c=ysa(c)|0;f[k>>2]=c;d=d-((f[g>>2]|0)-(f[e>>2]|0)>>2)|0;f[j>>2]=d;e=f[a+72>>2]|0;h=c;if(d>>>0<(f[a+76>>2]|0)-e>>2>>>0){XH(a,c,f[e+(d<<2)>>2]|0);d=EL(a+100|0,j)|0;e=d+4|0;g=f[e>>2]|0;if((g|0)==(f[d+8>>2]|0))XC(d,k);else{f[g>>2]=h;f[e>>2]=(f[e>>2]|0)+4}$Aa(c);break}g=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(56772)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[m+11>>0]=e;c=m}else{d=e+16&-16;y=0;c=la(150,d|0)|0;l=y;y=0;if(l&1){n=17;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(c,56772,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,m|0);l=y;y=0;if(l&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(d)n=19}else{y=0;za(3);y=0;n=17}while(0);if((n|0)==17){c=Pa()|0;n=19}if((n|0)==19)Oa(g|0);$a(c|0)}while(0);u=l;return c|0}function gi(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;w=u;u=u+32|0;x=w+8|0;l=w;t=w+4|0;v=f[b+8>>2]|0;f[l>>2]=v;r=a+52|0;q=CBa(l)|0;p=a+56|0;i=f[p>>2]|0;o=(i|0)==0;s=v;a:do if(!o){j=i+-1|0;k=(j&i|0)==0;if(!k)if(q>>>0<i>>>0)d=q;else d=(q>>>0)%(i>>>0)|0;else d=j&q;c=f[(f[r>>2]|0)+(d<<2)>>2]|0;if(!c)m=15;else do{c=f[c>>2]|0;if(!c){m=15;break a}h=f[c+4>>2]|0;if((h|0)!=(q|0)){if(!k){if(h>>>0>=i>>>0)h=(h>>>0)%(i>>>0)|0}else h=h&j;if((h|0)!=(d|0)){m=15;break a}}}while(!(bDa(f[c+8>>2]|0,s)|0))}else{d=0;m=15}while(0);if((m|0)==15){vS(x,r,q,l);j=a+64|0;e=+(((f[j>>2]|0)+1|0)>>>0);g=+n[a+68>>2];do if(o|e>+(i>>>0)*g){o=(i>>>0<3|(i+-1&i|0)!=0)&1|i<<1;m=~~+X(+(e/g))>>>0;y=0;ja(77,r|0,(o>>>0<m>>>0?m:o)|0);o=y;y=0;if(o&1){c=Pa()|0;d=f[x>>2]|0;f[x>>2]=0;if(d|0)$Ja(d);$a(c|0)}c=f[p>>2]|0;d=c+-1|0;if(!(d&c)){i=c;d=d&q;break}if(q>>>0<c>>>0){i=c;d=q}else{i=c;d=(q>>>0)%(c>>>0)|0}}while(0);c=f[(f[r>>2]|0)+(d<<2)>>2]|0;if(!c){c=a+60|0;h=f[x>>2]|0;f[h>>2]=f[c>>2];f[c>>2]=h;f[(f[r>>2]|0)+(d<<2)>>2]=c;c=f[h>>2]|0;if(!c)c=x;else{c=f[c+4>>2]|0;d=i+-1|0;if(d&i){if(c>>>0>=i>>>0)c=(c>>>0)%(i>>>0)|0}else c=c&d;f[(f[r>>2]|0)+(c<<2)>>2]=h;c=x}}else{r=f[x>>2]|0;f[r>>2]=f[c>>2];f[c>>2]=r;c=x}f[j>>2]=(f[j>>2]|0)+1;f[c>>2]=0}b=AT(a,f[b+12>>2]|0,f[a+4>>2]|0)|0;Dt(b,lJ(s)|0);s=ER(b,Fza(1)|0)|0;f[t>>2]=v;f[x>>2]=f[t>>2];x=vL(Yma(x)|0,s)|0;u=w;return x|0}function hi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+32|0;o=p+20|0;g=p+16|0;k=p+12|0;l=p+8|0;m=p+4|0;n=p;j=f[a>>2]|0;do if((f[j+4>>2]|0)!=(f[j>>2]|0)){j=a+12|0;do if(b[j>>0]|0){c=Vea(76852,59661)|0;Axa(o,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[o>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(o);jn(c,e)|0;Yp(c)|0;break}p=Pa()|0;pza(o);$a(p|0)}while(0);i=uW(a,1)|0;h=a+4|0;e=f[h>>2]|0;d=f[a>>2]|0;PDa(g,(f[d+4>>2]|0)-(f[d>>2]|0)>>2);Un(e,f[g>>2]|0)|0;e=f[a>>2]|0;g=f[e+4>>2]|0;e=f[e>>2]|0;while(1){if((e|0)==(g|0)){c=9;break}if(b[j>>0]|0){d=Vea(76852,59544)|0;Axa(o,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[o>>2]|0,77556)|0;q=y;y=0;if(q&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;q=y;y=0;if(q&1){c=13;break}pza(o);jn(d,c)|0;Yp(d)|0}c=f[h>>2]|0;PDa(k,-32);Ln(c,f[k>>2]|0)|0;c=f[h>>2]|0;d=f[e>>2]|0;PDa(l,(f[d+12>>2]|0)-(f[d+8>>2]|0)>>2);Un(c,f[l>>2]|0)|0;c=f[e>>2]|0;d=f[c+12>>2]|0;c=f[c+8>>2]|0;while(1){if((c|0)==(d|0))break;q=f[h>>2]|0;Ln(q,GU(f[c>>2]|0)|0)|0;c=c+4|0}c=f[h>>2]|0;if(!(f[(f[e>>2]|0)+4>>2]|0)){PDa(m,0);Un(c,f[m>>2]|0)|0}else{PDa(n,1);Un(c,f[n>>2]|0)|0;q=f[h>>2]|0;Ln(q,GU(f[(f[e>>2]|0)+4>>2]|0)|0)|0}e=e+4|0}if((c|0)==9){KE(a,i);break}else if((c|0)==13){q=Pa()|0;pza(o);$a(q|0)}}while(0);u=p;return}function ii(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+48|0;k=p;l=p+44|0;q=p+32|0;m=p+28|0;n=p+24|0;f[l>>2]=c;f[q>>2]=0;o=q+4|0;f[o>>2]=0;f[q+8>>2]=0;e=q+8|0;y=0;ja(115,q|0,l|0);j=y;y=0;a:do if(!(j&1)){while(1){if(!(gKa(f[c+16>>2]|0)|0))break;c=c+12|0;y=0;d=ua(64,c|0,0)|0;j=y;y=0;if(j&1){d=11;break a}if(!(aJa(f[f[d>>2]>>2]|0)|0))break;y=0;c=ua(64,c|0,0)|0;j=y;y=0;if(j&1){d=11;break a}y=0;c=la(160,f[c>>2]|0)|0;j=y;y=0;if(j&1){d=11;break a}f[l>>2]=c;d=f[o>>2]|0;if((d|0)==(f[e>>2]|0)){y=0;ja(115,q|0,l|0);j=y;y=0;if(j&1){d=11;break a}else continue}else{f[d>>2]=c;f[o>>2]=(f[o>>2]|0)+4;continue}}NBa(a);e=f[o>>2]|0;j=f[e+-4>>2]|0;c=e;b:while(1){if((c|0)==(f[q>>2]|0)){d=29;break}d=f[e+-4>>2]|0;f[l>>2]=d;c=0;while(1){if((c|0)==-1)break;i=c+-1|0;f[o>>2]=e+(i<<2);c=i}c:do if(FBa(a)|0){f[m>>2]=f[d+8>>2];f[k>>2]=f[m>>2];boa(a,k)}else{g=d+12|0;e=d+16|0;h=(d|0)!=(j|0);c=0;while(1){if(c>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break c;if(!((c|0)==0&h)){y=0;i=ua(64,g|0,c|0)|0;r=y;y=0;if(r&1){d=27;break b}y=0;ya(70,k|0,b|0,f[i>>2]|0);r=y;y=0;if(r&1){d=27;break b}f[a>>2]=f[k>>2];f[a+4>>2]=f[k+4>>2];f[a+8>>2]=f[k+8>>2];f[a+12>>2]=f[k+12>>2];f[a+16>>2]=f[k+16>>2];if(FBa(a)|0)break}c=c+1|0}f[n>>2]=f[d+8>>2];f[k>>2]=f[n>>2];boa(a,k)}while(0);e=f[o>>2]|0;c=e}if((d|0)==27){c=Pa()|0;break}else if((d|0)==29){E4(q);u=p;return}}else d=11;while(0);if((d|0)==11)c=Pa()|0;E4(q);$a(c|0)}function ji(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=a+4|0;l=f[m>>2]|0;c=l&-8;i=a+c|0;if(!(l&3)){if(b>>>0<256){a=0;return a|0}if(c>>>0>=(b+4|0)>>>0?(c-b|0)>>>0<=f[19093]<<1>>>0:0)return a|0;a=0;return a|0}if(c>>>0>=b>>>0){c=c-b|0;if(c>>>0<=15)return a|0;k=a+b|0;f[m>>2]=l&1|b|2;f[k+4>>2]=c|3;m=k+c+4|0;f[m>>2]=f[m>>2]|1;gf(k,c);return a|0}if((i|0)==(f[18979]|0)){k=(f[18976]|0)+c|0;c=k-b|0;d=a+b|0;if(k>>>0<=b>>>0){a=0;return a|0}f[m>>2]=l&1|b|2;f[d+4>>2]=c|1;f[18979]=d;f[18976]=c;return a|0}if((i|0)==(f[18978]|0)){e=(f[18975]|0)+c|0;if(e>>>0<b>>>0){a=0;return a|0}c=e-b|0;d=l&1;if(c>>>0>15){l=a+b|0;k=l+c|0;f[m>>2]=d|b|2;f[l+4>>2]=c|1;f[k>>2]=c;d=k+4|0;f[d>>2]=f[d>>2]&-2;d=l}else{f[m>>2]=d|e|2;d=a+e+4|0;f[d>>2]=f[d>>2]|1;d=0;c=0}f[18975]=c;f[18978]=d;return a|0}d=f[i+4>>2]|0;if(d&2|0){a=0;return a|0}j=(d&-8)+c|0;if(j>>>0<b>>>0){a=0;return a|0}k=j-b|0;e=d>>>3;do if(d>>>0<256){d=f[i+8>>2]|0;c=f[i+12>>2]|0;if((c|0)==(d|0)){f[18973]=f[18973]&~(1<<e);break}else{f[d+12>>2]=c;f[c+8>>2]=d;break}}else{h=f[i+24>>2]|0;c=f[i+12>>2]|0;do if((c|0)==(i|0)){e=i+16|0;d=e+4|0;c=f[d>>2]|0;if(!c){c=f[e>>2]|0;if(!c){e=0;break}else g=e}else g=d;while(1){e=c+20|0;d=f[e>>2]|0;if(d|0){c=d;g=e;continue}d=c+16|0;e=f[d>>2]|0;if(!e)break;else{c=e;g=d}}f[g>>2]=0;e=c}else{e=f[i+8>>2]|0;f[e+12>>2]=c;f[c+8>>2]=e;e=c}while(0);if(h|0){c=f[i+28>>2]|0;d=76196+(c<<2)|0;if((i|0)==(f[d>>2]|0)){f[d>>2]=e;if(!e){f[18974]=f[18974]&~(1<<c);break}}else{f[h+16+(((f[h+16>>2]|0)!=(i|0)&1)<<2)>>2]=e;if(!e)break}f[e+24>>2]=h;c=i+16|0;d=f[c>>2]|0;if(d|0){f[e+16>>2]=d;f[d+24>>2]=e}c=f[c+4>>2]|0;if(c|0){f[e+20>>2]=c;f[c+24>>2]=e}}}while(0);c=l&1;if(k>>>0<16){f[m>>2]=j|c|2;m=a+j+4|0;f[m>>2]=f[m>>2]|1;return a|0}else{l=a+b|0;f[m>>2]=c|b|2;f[l+4>>2]=k|3;m=l+k+4|0;f[m>>2]=f[m>>2]|1;gf(l,k);return a|0}return 0}function ki(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;m=l+16|0;i=l+36|0;g=l;k=l+32|0;a:do if(!(b[(f[a>>2]|0)+60>>0]|0)){h=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=uHa(52062)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[i+11>>0]=d;e=i}else{g=d+16&-16;y=0;e=la(150,g|0)|0;m=y;y=0;if(m&1){j=10;break}f[i>>2]=e;f[i+8>>2]=g|-2147483648;f[i+4>>2]=d}Pta(e,52062,d)|0;SBa(e+d|0,0);y=0;Ca(79,h|0,i|0,f[c+28>>2]|0,f[c+32>>2]|0);c=y;y=0;if(c&1)g=1;else{y=0;ya(79,h|0,64,361);y=0;g=0}e=Pa()|0;zta(i);if(!g)break a}else{y=0;za(3);y=0;j=10}while(0);if((j|0)==10)e=Pa()|0;Oa(h|0)}else{if(!e){e=cua(f[a+4>>2]|0)|0;uAa(g,0);f[m>>2]=f[g>>2];f[m+4>>2]=f[g+4>>2];f[m+8>>2]=f[g+8>>2];f[m+12>>2]=f[g+12>>2];J5(e,m)|0}Yqa(m,e);h=m+4|0;i=m+8|0;j=m+12|0;while(1){y=0;e=la(202,c|0)|0;g=y;y=0;if(g&1){j=24;break}if(d>>>0>=e>>>0){j=26;break}y=0;e=ua(51,c|0,d|0)|0;g=y;y=0;if(g&1){j=25;break}y=0;e=ua(146,a|0,e|0)|0;g=y;y=0;if(g&1){j=25;break}f[k>>2]=e;g=f[i>>2]|0;if(g>>>0>=(f[j>>2]|0)>>>0){y=0;ja(1995,h|0,k|0);g=y;y=0;if(g&1){j=25;break}}else{f[g>>2]=e;f[i>>2]=(f[i>>2]|0)+4}d=d+1|0}do if((j|0)==25)e=Pa()|0;else if((j|0)==26){e=f[a>>2]|0;g=e+80|0;d=f[g>>2]|0;if((d|0)==(f[e+84>>2]|0)){y=0;ja(67,e+76|0,m|0);c=y;y=0;if(c&1){j=24;break}}else{y=0;ja(66,d|0,m|0);c=y;y=0;if(c&1){j=24;break}f[g>>2]=(f[g>>2]|0)+16}Kza(m);u=l;return}while(0);if((j|0)==24)e=Pa()|0;Kza(m)}while(0);$a(e|0)}function li(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;v=u;u=u+96|0;w=v+32|0;t=v;n=a+44|0;o=a+16|0;p=a+60|0;q=a+64|0;r=a+48|0;s=a+52|0;k=a+45|0;l=a+72|0;m=a+76|0;j=0;while(1){b[n>>0]=0;Hka(o,c);if((f[p>>2]|0)==(f[q>>2]|0))i=0;else{x=3;break}while(1){d=f[s>>2]|0;g=f[r>>2]|0;e=g;if(i>>>0>=d-g>>2>>>0)break;d=f[e+(i<<2)>>2]|0;e=dAa(f[d>>2]|0)|0;do if(e|0){g=f[e+8>>2]|0;if(!g)_ua(e);else{if(!(b[k>>0]|0))break;f[d>>2]=g}b[n>>0]=1}while(0);i=i+1|0}while(1){if((d|0)==(e|0))break;i=d+-4|0;f[s>>2]=i;d=i}e=f[m>>2]|0;d=f[l>>2]|0;while(1){if((d|0)==(e|0))break;i=(jh(a,f[d>>2]|0)|0)&1;b[n>>0]=h[n>>0]|i;d=d+4|0}d=f[l>>2]|0;e=f[m>>2]|0;while(1){if((e|0)==(d|0))break;i=e+-4|0;f[m>>2]=i;e=i}if(!(b[n>>0]|0))break;else j=1}if((x|0)==3)Na(35441,35457,347,50392);do if(j){oL(w);d=a+36|0;s=f[d>>2]|0;gKa(s)|0;y=0;ya(72,w+16|0,c|0,s|0);s=y;y=0;if(s&1){d=Pa()|0;dfa(w);break}else{dfa(w);x=27;break}}else{d=a+36|0;x=27}while(0);if((x|0)==27){nka(w);Ewa(w,gKa(f[d>>2]|0)|0);y=0;ja(781,w|0,c|0);s=y;y=0;do if(!(s&1)?(y=0,ja(782,w|0,c|0),s=y,y=0,!(s&1)):0){a=a+40|0;Yka(t,uya(f[a>>2]|0)|0);Ewa(t,gKa(f[d>>2]|0)|0);a=f[a>>2]|0;gKa(a)|0;b[t+24>>0]=(f[a+28>>2]|0)>0&1;y=0;ja(783,t|0,c|0);c=y;y=0;if(c&1){d=Pa()|0;Rua(t);break}else{Rua(t);v0(w);u=v;return}}else x=31;while(0);if((x|0)==31)d=Pa()|0;v0(w)}$a(d|0)}function mi(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;v=u;u=u+16|0;s=v;r=v+4|0;f[s>>2]=c;k=f[c+16>>2]|0;t=c;if(!k)Na(32768,32558,374,32799);o=c+4|0;a:do if(!(rCa(f[o>>2]|0)|0)){p=a+48|0;j=e+4|0;g=f[e>>2]|0;b:while(1){if((g|0)==(j|0))break a;i=f[g+16>>2]|0;if(QZ(p,i)|0)break;h=f[g+4>>2]|0;if(!h)while(1){h=f[g+8>>2]|0;if((f[h>>2]|0)==(g|0)){g=h;continue b}else g=h}else g=h;while(1){h=f[g>>2]|0;if(!h)break;else g=h}}g=xAa(f[c+12>>2]|0)|0;h=xAa(k)|0;if((((g|0?(m=g+12|0,l=g+16|0,gKa(f[l>>2]|0)|0):0)?(k=efa(m)|0,(h|0)!=0&(sGa(f[f[k>>2]>>2]|0)|0)):0)?(q=h+12|0,n=h+16|0,gKa(f[n>>2]|0)|0):0)?(k=efa(q)|0,sGa(f[f[k>>2]>>2]|0)|0):0){e=fI(e,i)|0;e=f[e>>2]|0;k=(Era(f[e>>2]|0)|0)+12|0;k=f[k>>2]|0;m=bga(m,(gKa(f[l>>2]|0)|0)+-1|0)|0;f[m>>2]=k;_ua(f[e>>2]|0);Do(g);g=g+4|0;if(!(f[g>>2]|0))Na(32816,32558,405,32799);p=fI(p,i)|0;p=f[p>>2]|0;m=(Era(f[p>>2]|0)|0)+12|0;m=f[m>>2]|0;q=bga(q,(gKa(f[n>>2]|0)|0)+-1|0)|0;f[q>>2]=m;_ua(f[p>>2]|0);Do(h);if(!(f[g>>2]|0))Na(32816,32558,410,32799);qO(c);if(!(f[o>>2]|0))Na(32842,32558,412,32799);else{t=f[a+36>>2]|0;gKa(t)|0;VBa(r,t);t=iea(f[r>>2]|0,i,c)|0;f[d>>2]=t;b[a+96>>0]=1;break}}g=a+164|0;h=f[g>>2]|0;if((h|0)==(f[a+168>>2]|0)){XC(a+160|0,s);break}else{f[h>>2]=t;f[g>>2]=(f[g>>2]|0)+4;break}}while(0);u=v;return}function ni(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;i=u;u=u+96|0;j=i+24|0;m=i+76|0;l=i;h=i+64|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(a)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[j+11>>0]=g;e=j}else{n=g+16&-16;e=nV(n)|0;f[j>>2]=e;f[j+8>>2]=n|-2147483648;f[j+4>>2]=g}Pta(e,a,g)|0;SBa(e+g|0,0);if((Qw(j)|0)==75860){zta(j);f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;g=uHa(c)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[m+11>>0]=g;e=m}else{n=g+16&-16;e=nV(n)|0;f[m>>2]=e;f[m+8>>2]=n|-2147483648;f[m+4>>2]=g}Pta(e,c,g)|0;SBa(e+g|0,0);y=0;ja(210,l|0,d|0);n=y;y=0;if(n&1)e=Pa()|0;else{y=0;ya(74,j|0,m|0,l|0);n=y;y=0;if(n&1)e=Pa()|0;else{f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;c=uHa(a)|0;do if(c>>>0<=4294967279){if(c>>>0<11){b[h+11>>0]=c;e=h}else{g=c+16&-16;y=0;e=la(150,g|0)|0;n=y;y=0;if(n&1){k=25;break}f[h>>2]=e;f[h+8>>2]=g|-2147483648;f[h+4>>2]=c}Pta(e,a,c)|0;SBa(e+c|0,0);y=0;e=la(163,h|0)|0;n=y;y=0;if(n&1){e=Pa()|0;zta(h);break}else{sF(e,j)|0;zta(h);Pra(j);D8(l);zta(m);u=i;return}}else{y=0;za(3);y=0;k=25}while(0);if((k|0)==25)e=Pa()|0;Pra(j)}D8(l)}zta(m)}else{y=0;Ca(52,50956,45396,40,50996);y=0;e=Pa()|0;zta(j)}$a(e|0)}function oi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j;do if(b[a+12>>0]|0){i=Vea(76852,56315)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(g);jn(i,e)|0;Yp(i)|0;break}k=Pa()|0;pza(g);$a(k|0)}while(0);Ql(a,c+24|0);Ql(a,c+28|0);d=a+4|0;e=c+8|0;a:do if(!(b[c+20>>0]|0))switch(f[c+32>>2]|0){case 1:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,58)|0;break a}case 2:{Zq(f[d>>2]|0,59)|0;break a}case 4:{Zq(f[d>>2]|0,54)|0;break a}default:Ka()}break}case 2:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,60)|0;break a}case 2:{Zq(f[d>>2]|0,61)|0;break a}case 4:{Zq(f[d>>2]|0,62)|0;break a}case 8:{Zq(f[d>>2]|0,55)|0;break a}default:Ka()}break}case 3:{Zq(f[d>>2]|0,56)|0;break a}case 4:{Zq(f[d>>2]|0,57)|0;break a}default:Ka()}else{Zq(f[d>>2]|0,-2)|0;switch(f[c+32>>2]|0){case 1:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,25)|0;break a}case 2:{Zq(f[d>>2]|0,26)|0;break a}case 4:{Zq(f[d>>2]|0,23)|0;break a}default:Ka()}break}case 2:{switch(b[e>>0]|0){case 1:{Zq(f[d>>2]|0,27)|0;break a}case 2:{Zq(f[d>>2]|0,28)|0;break a}case 4:{Zq(f[d>>2]|0,29)|0;break a}case 8:{Zq(f[d>>2]|0,24)|0;break a}default:Ka()}break}default:Ka()}}while(0);i=gKa(f[c+16>>2]|0)|0;k=h[e>>0]|0;AN(a,i,k,gKa(f[c+12>>2]|0)|0);u=j;return}function pi(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;l=u;u=u+16|0;j=l+12|0;m=l;i=c+12|0;do if(b[i>>0]|0){h=wj(Vea(76852,56855)|0,d)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[j>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,o=y,y=0,!(o&1)):0){pza(j);jn(h,g)|0;Yp(h)|0;break}o=Pa()|0;pza(j);$a(o|0)}while(0);h=c+144|0;e=f[h>>2]|0;o=(f[c+148>>2]|0)-e>>3;d=o+~d|0;if(d>>>0<o>>>0){if(!d)b[c+156>>0]=1;do if(b[i>>0]|0){e=Vea(76852,56886)|0;e=Vea(K2(e,f[(f[h>>2]|0)+(d<<3)>>2]|0)|0,56899)|0;e=wj(e,f[(f[h>>2]|0)+(d<<3)+4>>2]|0)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[j>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,k=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,o=y,y=0,!(o&1)):0){pza(j);jn(e,k)|0;Yp(e)|0;e=f[h>>2]|0;break}o=Pa()|0;pza(j);$a(o|0)}while(0);m=e+(d<<3)|0;n=f[m+4>>2]|0;o=a;f[o>>2]=f[m>>2];f[o+4>>2]=n;u=l;return}d=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;h=uHa(56871)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[m+11>>0]=h;e=m}else{g=h+16&-16;y=0;e=la(150,g|0)|0;o=y;y=0;if(o&1){n=15;break}f[m>>2]=e;f[m+8>>2]=g|-2147483648;f[m+4>>2]=h}Pta(e,56871,h)|0;SBa(e+h|0,0);y=0;ja(583,d|0,m|0);o=y;y=0;if(o&1)g=1;else{y=0;ya(79,d|0,64,361);y=0;g=0}e=Pa()|0;zta(m);if(g)n=17}else{y=0;za(3);y=0;n=15}while(0);if((n|0)==15){e=Pa()|0;n=17}if((n|0)==17)Oa(d|0);$a(e|0)}function qi(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;C=u;u=u+64|0;D=C+32|0;z=C+24|0;A=C+20|0;s=C+16|0;w=C+12|0;r=C+8|0;q=C+4|0;x=C;B=nV(32)|0;Eqa(B);NW(f[a>>2]|0,B);ija(D);i=f[e+16>>2]|0;gKa(i)|0;t=B+20|0;v=EFa(e)|0;j=z;a:while(1){f[j>>2]=i;i=f[z>>2]|0;if((i|0)==(v|0)){j=3;break}p=f[i+8>>2]|0;f[A>>2]=p;n=i+12|0;D6(D);y=0;ja(550,D|0,A|0);o=y;y=0;if(o&1){j=8;break}j=f[n+16>>2]|0;gKa(j)|0;o=EFa(n)|0;k=s;while(1){f[k>>2]=j;j=f[s>>2]|0;if((j|0)==(o|0))break;m=f[j+8>>2]|0;IO(c,m);k=gKa(f[m+16>>2]|0)|0;m=EFa(m)|0;while(1){l=k;if((l|0)==(m|0))break;E=f[k+8>>2]|0;f[w>>2]=E;k=f[l+4>>2]|0;l=E;if(!(_qa(n,l)|0)){y=0;ja(550,g|0,w|0);E=y;y=0;if(E&1){j=16;break a}y=0;Ca(65,l|0,1,B|0,n|0);E=y;y=0;if(E&1){j=16;break a}}}f[s>>2]=f[j+4>>2];k=r}y=0;j=oa(49,a|0,n|0,D|0)|0;E=y;y=0;if(E&1){j=8;break}y=0;k=ua(85,t|0,p+100|0)|0;E=y;y=0;if(E&1){j=8;break}f[k>>2]=j;if(h)b[p+112>>0]=1;f[z>>2]=f[i+4>>2];j=q}do if((j|0)==3){i=f[d+16>>2]|0;gKa(i)|0;k=EFa(d)|0;j=z;while(1){f[j>>2]=i;i=f[z>>2]|0;if((i|0)==(k|0)){j=23;break}E=f[i+8>>2]|0;f[A>>2]=E;if(!(_qa(e,E)|0)?(y=0,ja(550,g|0,A|0),E=y,y=0,E&1):0){j=27;break}f[z>>2]=f[i+4>>2];j=x}if((j|0)==23){_fa(D);u=C;return B|0}else if((j|0)==27){i=Pa()|0;break}}else if((j|0)==8){i=Pa()|0;j=21}else if((j|0)==16){i=Pa()|0;j=21}while(0);_fa(D);$a(i|0);return 0}function ri(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;h=u;u=u+32|0;d=h+28|0;i=h+16|0;e=h+12|0;j=h;a:do if(!(b[(f[a>>2]|0)+60>>0]|0)){a=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(53028)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[i+11>>0]=g;d=i}else{e=g+16&-16;y=0;d=la(150,e|0)|0;j=y;y=0;if(j&1){k=10;break}f[i>>2]=d;f[i+8>>2]=e|-2147483648;f[i+4>>2]=g}Pta(d,53028,g)|0;SBa(d+g|0,0);y=0;ja(583,a|0,i|0);j=y;y=0;if(j&1)e=1;else{y=0;ya(79,a|0,64,361);y=0;e=0}d=Pa()|0;zta(i);if(!e)break a}else{y=0;za(3);y=0;k=10}while(0);if((k|0)==10)d=Pa()|0;Oa(a|0)}else{g=nqa(f[a+4>>2]|0)|0;l=rr(lj(c,1)|0)|0;i=f[a>>2]|0;FCa(e,l);f[d>>2]=f[e>>2];d=T_(i,d)|0;if(d|0){f[g+24>>2]=f[d>>2];f[g+4>>2]=f[d+4>>2];xU(a,c,(lxa(c)|0)+-1|0,g);l=sra(a,lj(c,(lxa(c)|0)+-1|0)|0)|0;f[g+28>>2]=l;Ona(g);u=h;return g|0}a=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(53037)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[j+11>>0]=g;d=j}else{e=g+16&-16;y=0;d=la(150,e|0)|0;l=y;y=0;if(l&1){k=22;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=g}Pta(d,53037,g)|0;SBa(d+g|0,0);y=0;Ca(79,a|0,j|0,f[c+28>>2]|0,f[c+32>>2]|0);l=y;y=0;if(l&1)e=1;else{y=0;ya(79,a|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(!e)break a}else{y=0;za(3);y=0;k=22}while(0);if((k|0)==22)d=Pa()|0;Oa(a|0)}while(0);$a(d|0);return 0}function si(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;j=k;do if(!(b[a+12>>0]|0))h=a+4|0;else{g=Vea(oj(Vea(76852,59130)|0,c,d)|0,54382)|0;e=a+4|0;g=Vea(vj(g,(f[e>>2]|0)-(f[a>>2]|0)|0)|0,72083)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;h=ua(46,f[j>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,i=ua(f[(f[h>>2]|0)+28>>2]|0,h|0,10)|0,l=y,y=0,!(l&1)):0){pza(j);jn(g,i)|0;Yp(g)|0;h=e;break}l=Pa()|0;pza(j);$a(l|0)}while(0);e=c&255;b[j>>0]=e;g=f[h>>2]|0;i=a+8|0;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,8)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,16)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,24)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=d&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,40)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,48)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;g=(f[h>>2]|0)+1|0;f[h>>2]=g}else{hD(a,j);g=f[h>>2]|0}e=Bna(c|0,d|0,56)|0;e=e&255;b[j>>0]=e;if(g>>>0<(f[i>>2]|0)>>>0){b[g>>0]=e;f[h>>2]=(f[h>>2]|0)+1}else hD(a,j);u=k;return a|0}function ti(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+48|0;k=p;l=p+44|0;q=p+32|0;m=p+28|0;n=p+24|0;f[l>>2]=c;f[q>>2]=0;o=q+4|0;f[o>>2]=0;f[q+8>>2]=0;e=q+8|0;y=0;ja(115,q|0,l|0);j=y;y=0;a:do if(!(j&1)){while(1){if(!(gKa(f[c+16>>2]|0)|0))break;c=c+12|0;y=0;d=ua(64,c|0,0)|0;j=y;y=0;if(j&1){d=11;break a}if(!(aJa(f[f[d>>2]>>2]|0)|0))break;y=0;c=ua(64,c|0,0)|0;j=y;y=0;if(j&1){d=11;break a}y=0;c=la(160,f[c>>2]|0)|0;j=y;y=0;if(j&1){d=11;break a}f[l>>2]=c;d=f[o>>2]|0;if((d|0)==(f[e>>2]|0)){y=0;ja(115,q|0,l|0);j=y;y=0;if(j&1){d=11;break a}else continue}else{f[d>>2]=c;f[o>>2]=(f[o>>2]|0)+4;continue}}NBa(a);e=f[o>>2]|0;j=f[e+-4>>2]|0;c=e;b:while(1){if((c|0)==(f[q>>2]|0)){d=29;break}d=f[e+-4>>2]|0;f[l>>2]=d;c=0;while(1){if((c|0)==-1)break;i=c+-1|0;f[o>>2]=e+(i<<2);c=i}c:do if(FBa(a)|0){f[m>>2]=f[d+8>>2];f[k>>2]=f[m>>2];boa(a,k)}else{g=d+12|0;e=d+16|0;h=(d|0)!=(j|0);c=0;while(1){if(c>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break c;if(!((c|0)==0&h)){y=0;i=ua(64,g|0,c|0)|0;r=y;y=0;if(r&1){d=27;break b}y=0;ya(69,k|0,b|0,f[i>>2]|0);r=y;y=0;if(r&1){d=27;break b}f[a>>2]=f[k>>2];f[a+4>>2]=f[k+4>>2];f[a+8>>2]=f[k+8>>2];f[a+12>>2]=f[k+12>>2];f[a+16>>2]=f[k+16>>2];if(FBa(a)|0)break}c=c+1|0}f[n>>2]=f[d+8>>2];f[k>>2]=f[n>>2];boa(a,k)}while(0);e=f[o>>2]|0;c=e}if((d|0)==27){c=Pa()|0;break}else if((d|0)==29){E4(q);u=p;return}}else d=11;while(0);if((d|0)==11)c=Pa()|0;E4(q);$a(c|0)}function ui(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a:do if(!(bDa(a,f[c+8>>2]|0)|0)){i=a+12|0;q=c+24|0;r=c+36|0;s=c+54|0;o=a+8|0;m=a+16|0;if(!(bDa(a,f[c>>2]|0)|0)){p=f[i>>2]|0;j=a+16+(p<<3)|0;IT(m,c,d,e,g);h=a+24|0;if((p|0)<=1)break;i=f[o>>2]|0;if((i&2|0)==0?(f[r>>2]|0)!=1:0){if(!(i&1))while(1){if(b[s>>0]|0)break a;if((f[r>>2]|0)==1)break a;IT(h,c,d,e,g);h=h+8|0;if(h>>>0>=j>>>0)break a}while(1){if(b[s>>0]|0)break a;if((f[r>>2]|0)==1?(f[q>>2]|0)==1:0)break a;IT(h,c,d,e,g);h=h+8|0;if(h>>>0>=j>>>0)break a}}while(1){if(b[s>>0]|0)break a;IT(h,c,d,e,g);h=h+8|0;if(h>>>0>=j>>>0)break a}}h=c+32|0;if((f[c+16>>2]|0)!=(d|0)?(p=c+20|0,(f[p>>2]|0)!=(d|0)):0){f[h>>2]=e;n=c+44|0;if((f[n>>2]|0)==4)break;e=a+16+(f[i>>2]<<3)|0;k=c+52|0;l=c+53|0;h=0;a=m;j=0;b:while(1){if(a>>>0>=e>>>0){i=18;break}b[k>>0]=0;b[l>>0]=0;QR(a,c,d,d,1,g);if(b[s>>0]|0){i=18;break}do if(b[l>>0]|0){if(!(b[k>>0]|0))if(!(f[o>>2]&1)){h=1;i=18;break b}else{h=1;i=j;break}if((f[q>>2]|0)==1){i=23;break b}if(!(f[o>>2]&2)){i=23;break b}else{h=1;i=1}}else i=j;while(0);a=a+8|0;j=i}do if((i|0)==18){if((!j?(f[p>>2]=d,d=c+40|0,f[d>>2]=(f[d>>2]|0)+1,(f[r>>2]|0)==1):0)?(f[q>>2]|0)==2:0){b[s>>0]=1;if(h){i=23;break}else{h=4;break}}if(h)i=23;else h=4}while(0);if((i|0)==23)h=3;f[n>>2]=h;break}if((e|0)==1)f[h>>2]=1}else _9(c,d,e);while(0);return}function vi(a,b,c){a=a|0;b=b|0;c=c|0;if(!c)Na(59079,64509,76,59084);do switch(f[c>>2]|0){case 1:{ti(a,b,c);break}case 2:{bq(a,b,c);break}case 3:{KLa();break}case 4:{nm(a,b,c);break}case 5:{Xn(a,b,c);break}case 6:{KLa();break}case 7:{KLa();break}case 8:{KLa();break}case 9:{KLa();break}case 10:{KLa();break}case 11:{cL(a,f[b+4>>2]|0,c);break}case 12:{KLa();break}case 13:{KLa();break}case 14:{KLa();break}case 25:{Hxa(a);break}case 24:{Hxa(a);break}case 26:{Hxa(a);break}case 27:{Hxa(a);break}case 15:{JV(a,c);break}case 16:{zc(a,b,c);break}case 17:{pc(a,b,c);break}case 18:{mn(a,b,c);break}case 19:{uE(a,b,f[c+8>>2]|0);break}case 20:{MD(a,b,c);break}case 21:{KLa();break}case 22:{Hxa(a);break}case 23:{cka(a,b);break}default:Ka()}while(0);return}function wi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+32|0;n=s+24|0;o=s+16|0;h=s+8|0;p=s;q=a+12|0;do if(b[q>>0]|0){g=Vea(76852,57035)|0;Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[n>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(n);jn(g,e)|0;Yp(g)|0;break}s=Pa()|0;pza(n);$a(s|0)}while(0);k=a+4|0;Zq(f[k>>2]|0,2)|0;m=f[k>>2]|0;l=c+4|0;d=f[l>>2]|0;Ln(m,GU((d|0)==5?0:d)|0)|0;d=c+8|0;m=a+140|0;e=f[m>>2]|0;if((e|0)==(f[a+144>>2]|0))XC(a+136|0,d);else{f[e>>2]=f[d>>2];f[m>>2]=(f[m>>2]|0)+4}j=c+12|0;Bwa(o,j);iua(h,j);j=o+4|0;i=f[h>>2]|0;h=f[h+4>>2]|0;d=0;while(1){if(!(Cpa(f[o>>2]|0,f[j>>2]|0,i,h)|0))break;g=ppa(o)|0;f[p>>2]=f[g>>2];if(b[q>>0]|0){g=vj(Vea(vj(Vea(76852,58988)|0,c)|0,59374)|0,d)|0;Axa(n,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[n>>2]|0,77556)|0;t=y;y=0;if(t&1){r=18;break}y=0;e=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0;t=y;y=0;if(t&1){r=18;break}pza(n);jn(g,e)|0;Yp(g)|0;d=d+1|0}Ql(a,p);bva(o)}if((r|0)==18){t=Pa()|0;pza(n);$a(t|0)}e=f[m>>2]|0;d=0;while(1){if((d|0)==-1)break;t=d+-1|0;f[m>>2]=e+(t<<2);d=t}if((f[l>>2]|0)==5)Zq(f[k>>2]|0,0)|0;Zq(f[k>>2]|0,11)|0;if((f[l>>2]|0)==5)Zq(f[k>>2]|0,0)|0;u=s;return}function xi(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;i=u;u=u+32|0;e=i+24|0;j=i+12|0;k=i;h=xsa(f[a+4>>2]|0)|0;g=h+8|0;f[g>>2]=d;if((d|0)==3){FCa(e,rr(lj(c,1)|0)|0);f[h+12>>2]=f[e>>2]}else tU(a,c,lxa(c)|0,h);g=(f[g>>2]|0)==2;a=gKa(f[h+20>>2]|0)|0;a:do if(g)if((a|0)==1)l=29;else{e=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(52973)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[j+11>>0]=d;a=j}else{c=d+16&-16;y=0;a=la(150,c|0)|0;k=y;y=0;if(k&1){l=14;break}f[j>>2]=a;f[j+8>>2]=c|-2147483648;f[j+4>>2]=d}Pta(a,52973,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,j|0);k=y;y=0;if(k&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(j);if(!c){l=30;break a}}else{y=0;za(3);y=0;l=14}while(0);if((l|0)==14)a=Pa()|0;Oa(e|0);l=30}else if(!a)l=29;else{e=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(53003)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[k+11>>0]=d;a=k}else{c=d+16&-16;y=0;a=la(150,c|0)|0;j=y;y=0;if(j&1){l=26;break}f[k>>2]=a;f[k+8>>2]=c|-2147483648;f[k+4>>2]=d}Pta(a,53003,d)|0;SBa(a+d|0,0);y=0;ja(583,e|0,k|0);j=y;y=0;if(j&1)c=1;else{y=0;ya(79,e|0,64,361);y=0;c=0}a=Pa()|0;zta(k);if(!c){l=30;break a}}else{y=0;za(3);y=0;l=26}while(0);if((l|0)==26)a=Pa()|0;Oa(e|0);l=30}while(0);if((l|0)==29){nZ(h);u=i;return h|0}else if((l|0)==30)$a(a|0);return 0}function yi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;i=u;u=u+32|0;j=i+12|0;k=i;g=0;h=0;a:while(1){d=On(a)|0;if((d|0)==-1){l=3;break}if((d+-65|0)>>>0<26|(d+-97|0)>>>0<6){l=33;break}c=d+-103|0;e=(d|0)>47;if(!(c>>>0>19&(d+-48|0)>>>0>9)){if((d|0)<=57){c=e?d+-28|0:(d|0)==43?30:31;l=30}}else{switch(d|0){case 43:case 47:break;default:{l=17;break a}}c=e?d+-28|0:(d|0)==43?30:31;l=30}if((l|0)==30)l=0;g=c<<h|g;h=h+5|0}b:do if((l|0)==3){g=zb(12)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(57104)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;k=y;y=0;if(k&1){l=11;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,57104,e)|0;SBa(c+e|0,0);y=0;ja(2001,g|0,j|0);k=y;y=0;if(k&1)d=1;else{y=0;ya(79,g|0,4016,384);y=0;d=0}c=Pa()|0;zta(j);if(!d)break b}else{y=0;za(3);y=0;l=11}while(0);if((l|0)==11)c=Pa()|0;Oa(g|0)}else if((l|0)==17){g=zb(12)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(57140)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;c=k}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){l=25;break}f[k>>2]=c;f[k+8>>2]=d|-2147483648;f[k+4>>2]=e}Pta(c,57140,e)|0;SBa(c+e|0,0);y=0;ja(2001,g|0,k|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,4016,384);y=0;d=0}c=Pa()|0;zta(k);if(!d)break b}else{y=0;za(3);y=0;l=25}while(0);if((l|0)==25)c=Pa()|0;Oa(g|0)}else if((l|0)==33){k=((d|0)<97?-65:-71)+d<<h|g;l=k>>>1;u=i;return (k&1|0?0-l|0:l)|0}while(0);$a(c|0);return 0}function zi(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+64|0;l=n+40|0;g=n+24|0;j=n;m=n+12|0;a:do if((c-a|0)>1?(k=d+4|0,e=f[k>>2]|0,(f[d>>2]|0)!=(e|0)):0){h=a+2|0;i=d+60|0;c=a+1|0;b:do switch(b[a>>0]|0){case 67:{switch(b[c>>0]|0){case 53:case 51:case 50:case 49:break;default:break a}_e(g,e+-24|0);hM(l,g);a=f[k>>2]|0;if(a>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);m=y;y=0;if(m&1){a=Pa()|0;Xka(l);zta(g);break b}}else{ZL(a,l);f[k>>2]=(f[k>>2]|0)+24}Xka(l);zta(g);b[i>>0]=1;a=h;break a}case 68:{switch(b[c>>0]|0){case 53:case 50:case 49:case 48:break;default:break a}_e(m,e+-24|0);y=0;oa(77,m|0,0,72155)|0;g=y;y=0;do if(g&1)a=Pa()|0;else{f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}hM(l,j);a=f[k>>2]|0;if(a>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,l|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(l);zta(j);break}}else{ZL(a,l);f[k>>2]=(f[k>>2]|0)+24}Xka(l);zta(j);zta(m);b[i>>0]=1;a=h;break a}while(0);zta(m);break}default:break a}while(0);$a(a|0)}while(0);u=n;return a|0}function Ai(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;n=o;a:do if(((((c-a|0)>3?(b[a>>0]|0)==99:0)?(b[a+1>>0]|0)==108:0)?(l=a+2|0,i=fc(l,c,d)|0,!((i|0)==(l|0)|(i|0)==(c|0))):0)?(m=d+4|0,e=f[m>>2]|0,(f[d>>2]|0)!=(e|0)):0){j=e+-12|0;l=b[j+11>>0]|0;k=l<<24>>24<0;eA(e+-24|0,k?f[j>>2]|0:j,k?f[e+-8>>2]|0:l&255)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[n+(e<<2)>>2]=0;e=e+1|0}e=f[m>>2]|0;h=e+-12|0;g=h+11|0;if((b[g>>0]|0)<0){SBa(f[h>>2]|0,0);f[e+-8>>2]=0;e=h}else{SBa(h,0);b[g>>0]=0;e=h}Sq(h);f[e>>2]=f[n>>2];f[e+4>>2]=f[n+4>>2];f[e+8>>2]=f[n+8>>2];e=0;while(1){if((e|0)==3)break;f[n+(e<<2)>>2]=0;e=e+1|0}zta(n);C7((f[m>>2]|0)+-24|0,72085)|0;k=n+11|0;l=n+4|0;g=i;while(1){if((b[g>>0]|0)==69){e=28;break}j=fc(g,c,d)|0;if((j|0)==(g|0)|(j|0)==(c|0))break a;e=f[m>>2]|0;if((f[d>>2]|0)==(e|0))break a;HL(n,e+-24|0);h=f[m>>2]|0;i=h+-24|0;e=h;while(1){if((e|0)==(i|0))break;g=e+-24|0;f[m>>2]=g;Xka(g);e=f[m>>2]|0}g=b[k>>0]|0;e=g<<24>>24<0;g=e?f[l>>2]|0:g&255;if(g|0){if((f[d>>2]|0)==(i|0)){e=27;break}y=0;oa(73,h+-48|0,(e?f[n>>2]|0:n)|0,g|0)|0;i=y;y=0;if(i&1){e=24;break}}zta(n);g=j}if((e|0)==24){o=Pa()|0;zta(n);$a(o|0)}else if((e|0)==27){zta(n);break}else if((e|0)==28){e=f[m>>2]|0;if((f[d>>2]|0)==(e|0))break;C7(e+-24|0,72083)|0;a=g+1|0;break}}while(0);u=o;return a|0}function Bi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;k=u;u=u+16|0;g=k+8|0;h=k+4|0;i=k;Xwa(a);f[a+24>>2]=b;l=a+28|0;f[l>>2]=0;j=a+32|0;f[j>>2]=0;f[a+36>>2]=0;m=a+40|0;gua(m);if((l|0)!=(c|0)?(y=0,ya(89,l|0,f[c>>2]|0,f[c+4>>2]|0),d=y,y=0,d&1):0)c=Pa()|0;else e=3;do if((e|0)==3){d=f[b+104>>2]|0;c=f[b+100>>2]|0;while(1){if((c|0)==(d|0))break;y=0;ja(752,a|0,c|0);n=y;y=0;if(n&1){e=9;break}c=c+16|0}if((e|0)==9){c=Pa()|0;break}d=f[b+80>>2]|0;c=f[b+76>>2]|0;while(1){if((c|0)==(d|0))break;y=0;ja(752,a|0,c|0);n=y;y=0;if(n&1){e=14;break}c=c+16|0}if((e|0)==14){c=Pa()|0;break}while(1){n=f[j>>2]|0;d=n;if((n|0)==(f[l>>2]|0)){e=30;break}else c=0;while(1){if((c|0)==-1)break;n=c+-1|0;f[j>>2]=d+(n<<3);c=n}e=d+-8|0;if(aI(m,e)|0)continue;y=0;Ca(68,g|0,m|0,e|0,e|0);n=y;y=0;if(n&1){e=24;break}c=f[d+-4>>2]|0;if(!(f[e>>2]|0)){f[h>>2]=c;y=0;f[g>>2]=f[h>>2];c=ua(96,b|0,g|0)|0;n=y;y=0;if(n&1){e=24;break}if(!c)continue;y=0;ja(752,a|0,c+36|0);n=y;y=0;if(n&1){e=25;break}else continue}else{f[i>>2]=c;y=0;f[g>>2]=f[i>>2];c=ua(97,b|0,g|0)|0;n=y;y=0;if(n&1){e=24;break}if(!c)continue;y=0;ja(752,a|0,c+8|0);n=y;y=0;if(n&1){e=29;break}else continue}}if((e|0)==24){c=Pa()|0;break}else if((e|0)==25){c=Pa()|0;break}else if((e|0)==29){c=Pa()|0;break}else if((e|0)==30){u=k;return}}while(0);_ja(m);a3(l);Rua(a);$a(c|0)}function Ci(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=u;u=u+16|0;k=m+12|0;n=m;do if((d+-72&255)>6)e=0;else{l=$ra(f[a+4>>2]|0)|0;g=l+4|0;switch(d<<24>>24){case 72:{i=4;e=1;break}case 73:{i=8;e=2;break}case 74:{i=1;e=1;break}case 75:{i=2;e=1;break}case 76:{i=1;e=2;break}case 77:{i=2;e=2;break}case 78:{i=4;e=2;break}default:Ka()}f[g>>2]=e;g=l+8|0;b[g>>0]=i;do if(b[a+12>>0]|0){e=Vea(76852,56200)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[k>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,j=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(k);jn(e,j)|0;Yp(e)|0;break}o=Pa()|0;pza(k);$a(o|0)}while(0);rJa(k);B6(a,k,l+12|0);k=gKa(f[k>>2]|0)|0;if((k|0)==(h[g>>0]|0)){e=Jg(a)|0;f[l+24>>2]=e;e=Jg(a)|0;f[l+20>>2]=e;e=Jg(a)|0;f[l+16>>2]=e;Ica(l);f[c>>2]=l;e=1;break}i=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(56223)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;e=n}else{d=g+16&-16;y=0;e=la(150,d|0)|0;m=y;y=0;if(m&1){o=24;break}f[n>>2]=e;f[n+8>>2]=d|-2147483648;f[n+4>>2]=g}Pta(e,56223,g)|0;SBa(e+g|0,0);y=0;ja(583,i|0,n|0);m=y;y=0;if(m&1)d=1;else{y=0;ya(79,i|0,64,361);y=0;d=0}e=Pa()|0;zta(n);if(d)o=26}else{y=0;za(3);y=0;o=24}while(0);if((o|0)==24){e=Pa()|0;o=26}if((o|0)==26)Oa(i|0);$a(e|0)}while(0);u=m;return e|0}function Di(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=u;u=u+48|0;k=p;l=p+44|0;q=p+32|0;m=p+28|0;n=p+24|0;f[l>>2]=c;f[q>>2]=0;o=q+4|0;f[o>>2]=0;f[q+8>>2]=0;e=q+8|0;y=0;ja(115,q|0,l|0);j=y;y=0;a:do if(!(j&1)){while(1){if(!(gKa(f[c+16>>2]|0)|0))break;y=0;d=ua(64,c+12|0,0)|0;j=y;y=0;if(j&1){d=11;break a}if(!(aJa(f[f[d>>2]>>2]|0)|0))break;y=0;c=ua(64,c+12|0,0)|0;j=y;y=0;if(j&1){d=11;break a}y=0;c=la(160,f[c>>2]|0)|0;j=y;y=0;if(j&1){d=11;break a}f[l>>2]=c;d=f[o>>2]|0;if((d|0)==(f[e>>2]|0)){y=0;ja(115,q|0,l|0);j=y;y=0;if(j&1){d=11;break a}else continue}else{f[d>>2]=c;f[o>>2]=(f[o>>2]|0)+4;continue}}NBa(a);e=f[o>>2]|0;j=f[e+-4>>2]|0;c=e;b:while(1){if((c|0)==(f[q>>2]|0)){d=29;break}d=f[e+-4>>2]|0;f[l>>2]=d;c=0;while(1){if((c|0)==-1)break;i=c+-1|0;f[o>>2]=e+(i<<2);c=i}c:do if(FBa(a)|0){f[m>>2]=f[d+8>>2];f[k>>2]=f[m>>2];boa(a,k)}else{g=d+12|0;e=d+16|0;h=(d|0)!=(j|0);c=0;while(1){if(c>>>0>=(gKa(f[e>>2]|0)|0)>>>0)break c;if(!((c|0)==0&h)){y=0;i=ua(64,g|0,c|0)|0;r=y;y=0;if(r&1){d=27;break b}y=0;ya(91,k|0,b|0,f[i>>2]|0);r=y;y=0;if(r&1){d=27;break b}f[a>>2]=f[k>>2];f[a+4>>2]=f[k+4>>2];f[a+8>>2]=f[k+8>>2];f[a+12>>2]=f[k+12>>2];f[a+16>>2]=f[k+16>>2];if(FBa(a)|0)break}c=c+1|0}f[n>>2]=f[d+8>>2];f[k>>2]=f[n>>2];boa(a,k)}while(0);e=f[o>>2]|0;c=e}if((d|0)==27){c=Pa()|0;break}else if((d|0)==29){E4(q);u=p;return}}else d=11;while(0);if((d|0)==11)c=Pa()|0;E4(q);$a(c|0)}function Ei(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;h=u;u=u+32|0;i=h+12|0;j=h;e=f[a>>2]|0;g=b[e>>0]|0;d=e+1|0;a:do if(g<<24>>24==56){c=1;k=27}else{e=e+2|0;b:do switch(g<<24>>24){case 49:{if((b[d>>0]|0)==54){c=2;d=e;k=27;break a}g=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(53557)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[i+11>>0]=e;c=i}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){k=12;break}f[i>>2]=c;f[i+8>>2]=d|-2147483648;f[i+4>>2]=e}Pta(c,53557,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,i|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(i);if(!d)break b}else{y=0;za(3);y=0;k=12}while(0);if((k|0)==12)c=Pa()|0;Oa(g|0);break}case 51:{if((b[d>>0]|0)==50){c=4;d=e;k=27;break a}g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(53584)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;i=y;y=0;if(i&1){k=24;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,53584,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,j|0);i=y;y=0;if(i&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(j);if(!d)break b}else{y=0;za(3);y=0;k=24}while(0);if((k|0)==24)c=Pa()|0;Oa(g|0);break}default:break a}while(0);$a(c|0)}while(0);if((k|0)==27)f[a>>2]=d;u=h;return c|0}function Fi(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;j=k;a:do if((c-a|0)>1){h=b[a>>0]|0;e=h<<24>>24==111;b:do switch(h<<24>>24){case 100:case 111:{if((b[a+1>>0]|0)==110){g=a+2|0;if(!e){j=NI(g,c,d)|0;a=(j|0)==(g|0)?a:j;break a}e=mc(g,c,d)|0;if((e|0)==(g|0))break a;a=Ce(e,c,d)|0;if((a|0)==(e|0)){a=e;break a}h=d+4|0;e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(j,e+-24|0);e=f[h>>2]|0;g=e+-24|0;c=e;while(1){if((c|0)==(g|0))break;d=c+-24|0;f[h>>2]=d;Xka(d);c=f[h>>2]|0}d=b[j+11>>0]|0;h=d<<24>>24<0;y=0;oa(73,e+-48|0,(h?f[j>>2]|0:j)|0,(h?f[j+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(j);break b}else{zta(j);break a}}else i=15;break}default:i=15}while(0);do if((i|0)==15){e=Ar(a,c,d)|0;if((e|0)!=(a|0)){a=e;break a}e=mc(a,c,d)|0;if((e|0)==(a|0))break a;a=Ce(e,c,d)|0;if((a|0)==(e|0)){a=e;break a}h=d+4|0;e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(j,e+-24|0);e=f[h>>2]|0;g=e+-24|0;c=e;while(1){if((c|0)==(g|0))break;d=c+-24|0;f[h>>2]=d;Xka(d);c=f[h>>2]|0}d=b[j+11>>0]|0;i=d<<24>>24<0;y=0;oa(73,e+-48|0,(i?f[j>>2]|0:j)|0,(i?f[j+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(j);break}else{zta(j);break a}}while(0);$a(a|0)}while(0);u=k;return a|0}function Gi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+64|0;i=s+48|0;k=s+8|0;l=s;o=c+8|0;d=Oe(a,f[o>>2]|0,0)|0;f[o>>2]=d;a:do if(d){e=Iza(d)|0;if(e|0)if(pJa(f[e+4>>2]|0)|0){_la(e,0);g1(a,e)|0;break}else Na(32545,31561,286,32588);e=xAa(d)|0;b:do if(((e|0?(m=e+12|0,g=efa(m)|0,g=f[g>>2]|0,h=f[g+4>>2]|0,rCa(h)|0):0)?(j=e+4|0,(f[j>>2]|0)==(h|0)):0)?(Oe(a,g,0)|0)==0:0){d=f[e+8>>2]|0;do if(pJa(d)|0){f[l>>2]=d;f[i>>2]=f[l>>2];fia(k,i);b[k+28>>0]=1;f[i>>2]=e;y=0;ja(269,k|0,i|0);l=y;y=0;if(l&1){s=Pa()|0;Rua(k);$a(s|0)}if(f[k+32>>2]|0){l=(f[k+36>>2]|0)==0;Rua(k);if(l)break;else break b}else{Rua(k);break}}while(0);d=efa(m)|0;f[d>>2]=0;Fga(m);f[j>>2]=0;d=gKa(f[e+16>>2]|0)|0;if(d>>>0>1){g1(a,e)|0;break a}if((d|0)==1){c=bga(m,0)|0;g1(a,f[c>>2]|0)|0;break a}else{_ua(c);break a}}while(0);e=YAa(f[o>>2]|0)|0;if((e|0?(p=e+16|0,n=f[p>>2]|0,q=n,n|0):0)?(r=e+4|0,rCa(f[r>>2]|0)|0):0){g=e+12|0;i=f[g>>2]|0;h=f[i+4>>2]|0;d=f[n+4>>2]|0;if((h|0)==5?rCa(d)|0:0){f[o>>2]=q;f[p>>2]=c;f[r>>2]=0;g1(a,e)|0;break}if((d|0)==5?rCa(h)|0:0){f[o>>2]=i;f[g>>2]=c;f[r>>2]=0;g1(a,e)|0}}}else _ua(c);while(0);u=s;return}function Hi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+32|0;l=k+12|0;j=k;h=a+12|0;do if(b[h>>0]|0){e=Vea(76852,55288)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[l>>2]|0,77556)|0;g=y;y=0;if(!(g&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,g=y,y=0,!(g&1)):0){pza(l);jn(e,d)|0;Yp(e)|0;break}m=Pa()|0;pza(l);$a(m|0)}while(0);e=a+164|0;g=f[e>>2]|0;a:do if((f[a+160>>2]|0)==(g|0)){if(b[a+172>>0]|0){do if(b[h>>0]|0){c=Vea(76852,55305)|0;Axa(l,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[l>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,i=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,m=y,y=0,!(m&1)):0){pza(l);jn(c,i)|0;Yp(c)|0;break}m=Pa()|0;pza(l);$a(m|0)}while(0);c=Gsa(f[a+4>>2]|0)|0;break}e=zb(20)|0;y=0;ja(62,l|0,f[a+36>>2]|0);k=y;y=0;do if(!(k&1)){y=0;ua(81,l|0,55351)|0;k=y;y=0;if(k&1){c=Pa()|0;zta(l);m=24;break}f[j>>2]=f[l>>2];f[j+4>>2]=f[l+4>>2];f[j+8>>2]=f[l+8>>2];c=0;while(1){if((c|0)==3)break;f[l+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,e|0,j|0);k=y;y=0;if(k&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(j);zta(l);if(d)m=24}else{c=Pa()|0;m=24}while(0);if((m|0)==24)Oa(e|0);$a(c|0)}else{c=f[g+-4>>2]|0;d=0;while(1){if((d|0)==-1)break a;m=d+-1|0;f[e>>2]=g+(m<<2);d=m}}while(0);u=k;return c|0}function Ii(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+16|0;l=n+12|0;h=n+8|0;m=n+4|0;i=n;f[h>>2]=c;f[m>>2]=g;k=nV(84)|0;dM(k);if(f[18711]|0){Vea(76684,19823)|0;Vea(76684,21299)|0;c=0;while(1){if((c|0)==(e|0))break;if(c|0)Vea(76684,72307)|0;vj(76684,f[d+(c<<2)>>2]|0)|0;c=c+1|0}if(!e)Vea(76684,64313)|0;Vea(76684,19863)|0;j=f[18707]|0;f[l>>2]=k;g=EN(74820,l)|0;f[g>>2]=j;j=Vea(Vea(Vea(vj(Vea(76684,21332)|0,j)|0,21347)|0,b)|0,21385)|0;g=EN(74796,h)|0;g=Vea(vj(Vea(vj(j,f[g>>2]|0)|0,21403)|0,e)|0,20179)|0;j=EN(74808,m)|0;Vea(vj(g,f[j>>2]|0)|0,20144)|0;Vea(76684,19947)|0}dCa(l,b);f[k>>2]=f[l>>2];c=f[f[h>>2]>>2]|0;f[k+32>>2]=c;f[i>>2]=c;f[l>>2]=f[i>>2];c=UX(a,l)|0;f[k+4>>2]=f[c+4>>2];g=c+8|0;b=k+8|0;if((b|0)!=(g|0))tq(b,f[g>>2]|0,f[c+12>>2]|0);g=k+24|0;b=k+28|0;h=k+20|0;c=0;while(1){if((c|0)==(e|0))break;i=f[d+(c<<2)>>2]|0;f[l>>2]=i;j=f[g>>2]|0;if(j>>>0<(f[b>>2]|0)>>>0){f[j>>2]=i;f[g>>2]=j+4}else XC(h,l);c=c+1|0}f[k+36>>2]=f[m>>2];Bsa(74740);y=0;ja(65,a|0,k|0);m=y;y=0;if(m&1){n=Pa()|0;$W(74740);$a(n|0)}else{$W(74740);u=n;return k|0}return 0}function Ji(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;m=o+16|0;p=o+4|0;k=o;l=a+12|0;do if(b[l>>0]|0){e=Vea(76852,55564)|0;Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[m>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,j=y,y=0,!(j&1)):0){pza(m);jn(e,d)|0;Yp(e)|0;break}p=Pa()|0;pza(m);$a(p|0)}while(0);j=a+160|0;MG(p,j);c=f[j>>2]|0;g=a+164|0;d=f[g>>2]|0;while(1){if((d|0)==(c|0))break;i=d+-4|0;f[g>>2]=i;d=i}i=a+172|0;d=a+168|0;while(1){b[i>>0]=1;y=0;h=ua(156,a|0,k|0)|0;e=y;y=0;if(e&1){e=19;break}c=f[k>>2]|0;e=c;if(!c){e=12;break}c=f[g>>2]|0;if((c|0)==(f[d>>2]|0)){y=0;ja(497,j|0,k|0);h=y;y=0;if(h&1){e=20;break}}else{f[c>>2]=e;f[g>>2]=(f[g>>2]|0)+4}}a:do if((e|0)==12){do if(b[l>>0]|0){y=0;c=ua(53,76852,55587)|0;l=y;y=0;if(!(l&1)){Axa(m,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[m>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,n=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(m);y=0;ua(63,c|0,n|0)|0;n=y;y=0;if(n&1)break;y=0;la(159,c|0)|0;n=y;y=0;if(n&1)break;else{e=22;break}}c=Pa()|0;pza(m);break a}}else e=22;while(0);do if((e|0)==22){f[a+176>>2]=h;b[i>>0]=0;if((j|0)!=(p|0)?(y=0,ya(111,j|0,f[p>>2]|0,f[p+4>>2]|0),n=y,y=0,n&1):0)break;E4(p);u=o;return}while(0);c=Pa()|0}else if((e|0)==19)c=Pa()|0;else if((e|0)==20)c=Pa()|0;while(0);E4(p);$a(c|0)}function Ki(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;c=a+4|0;d=a+8|0;e=b+-4|0;switch(b-a>>2|0){case 1:case 0:{c=1;break}case 2:{c=f[e>>2]|0;d=f[a>>2]|0;if(wR(+p[c+16>>3],+p[d+16>>3])|0){f[a>>2]=c;f[e>>2]=d;c=1}else c=1;break}case 3:{ao(a,c,e)|0;c=1;break}case 4:{Fp(a,c,d,e)|0;c=1;break}case 5:{gn(a,c,d,a+12|0,e)|0;c=1;break}default:{ao(a,c,d)|0;j=a+12|0;c=0;while(1){if((j|0)==(b|0)){d=1;c=0;break}i=f[j>>2]|0;h=i+16|0;if(!(wR(+p[h>>3],+p[(f[d>>2]|0)+16>>3])|0)){d=j;j=j+4|0;continue}f[j>>2]=0;e=j;while(1){k=f[d>>2]|0;f[d>>2]=0;g=f[e>>2]|0;f[e>>2]=k;if(g|0){E4(g);$Ja(g)}if((d|0)==(a|0))break;e=d+-4|0;if(wR(+p[h>>3],+p[(f[e>>2]|0)+16>>3])|0){k=d;d=e;e=k}else break}e=f[d>>2]|0;f[d>>2]=i;if(e|0){E4(e);$Ja(e)}c=c+1|0;e=j+4|0;if((c|0)==8){d=0;c=(e|0)==(b|0);break}else{d=j;j=e}}c=c|d}}return c|0}function Li(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;a:do if(c){if(c>>>0>1073741823){d=zb(8)|0;y=0;ja(76,d|0,70649);a=y;y=0;if(a&1){a=Pa()|0;Oa(d|0);$a(a|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}u=nV(c<<2)|0;d=f[a>>2]|0;f[a>>2]=u;if(d|0)$Ja(d);f[e>>2]=c;d=0;while(1){if((d|0)==(c|0))break;f[(f[a>>2]|0)+(d<<2)>>2]=0;d=d+1|0}g=a+8|0;d=f[g>>2]|0;if(d|0){e=f[d+4>>2]|0;t=c+-1|0;u=(t&c|0)==0;if(!u){if(e>>>0>=c>>>0)e=(e>>>0)%(c>>>0)|0}else e=e&t;f[(f[a>>2]|0)+(e<<2)>>2]=g;while(1){s=d;b:while(1)while(1){d=f[s>>2]|0;if(!d)break a;g=f[d+4>>2]|0;if(!u){if(g>>>0>=c>>>0)g=(g>>>0)%(c>>>0)|0}else g=g&t;if((g|0)==(e|0)){s=d;continue b}h=(f[a>>2]|0)+(g<<2)|0;if(!(f[h>>2]|0))break b;n=d+8|0;o=n+11|0;p=d+12|0;r=d;c:while(1){h=f[r>>2]|0;q=h;if(!h){h=0;v=35;break}j=h+8|0;i=b[o>>0]|0;l=i<<24>>24<0;i=i&255;m=l?f[p>>2]|0:i;w=b[j+11>>0]|0;k=w<<24>>24<0;if((m|0)!=((k?f[h+12>>2]|0:w&255)|0)){v=35;break}j=k?f[j>>2]|0:j;if(l)if(!(ara(f[n>>2]|0,j,m)|0)){r=h;continue}else{h=q;break}else k=n;while(1){if(!i){r=h;continue c}if((b[k>>0]|0)!=(b[j>>0]|0)){h=q;break c}j=j+1|0;k=k+1|0;i=i+-1|0}}if((v|0)==35)v=0;f[s>>2]=h;f[r>>2]=f[f[(f[a>>2]|0)+(g<<2)>>2]>>2];f[f[(f[a>>2]|0)+(g<<2)>>2]>>2]=d}f[h>>2]=s;e=g}}}else{d=f[a>>2]|0;f[a>>2]=0;if(d|0)$Ja(d);f[e>>2]=0}while(0);return}function Mi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+16|0;s=t+4|0;m=t;f[m>>2]=c;r=CBa(c)|0;p=a+4|0;i=f[p>>2]|0;q=(i|0)==0;a:do if(!q){l=i+-1|0;k=(l&i|0)==0;if(!k)if(r>>>0<i>>>0)e=r;else e=(r>>>0)%(i>>>0)|0;else e=l&r;d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d)o=16;else{j=f[c>>2]|0;do{d=f[d>>2]|0;if(!d){o=16;break a}c=f[d+4>>2]|0;if((c|0)!=(r|0)){if(!k){if(c>>>0>=i>>>0)c=(c>>>0)%(i>>>0)|0}else c=c&l;if((c|0)!=(e|0)){o=16;break a}}}while(!(bDa(f[d+8>>2]|0,j)|0))}}else{e=0;o=16}while(0);if((o|0)==16){bG(s,a,r,m);j=a+12|0;g=+(((f[j>>2]|0)+1|0)>>>0);h=+n[a+16>>2];do if(q|g>+(i>>>0)*h){q=(i>>>0<3|(i+-1&i|0)!=0)&1|i<<1;o=~~+X(+(g/h))>>>0;y=0;ja(1513,a|0,(q>>>0<o>>>0?o:q)|0);q=y;y=0;if(!(q&1)){d=f[p>>2]|0;e=d+-1|0;if(!(e&d)){i=d;e=e&r;break}if(r>>>0<d>>>0){i=d;e=r;break}i=d;e=(r>>>0)%(d>>>0)|0;break}d=Pa()|0;e=f[s>>2]|0;f[s>>2]=0;if(e|0){if(b[s+8>>0]|0)Rua(e+8|0);$Ja(e)}$a(d|0)}while(0);d=f[(f[a>>2]|0)+(e<<2)>>2]|0;if(!d){r=a+8|0;d=f[s>>2]|0;f[d>>2]=f[r>>2];f[r>>2]=d;f[(f[a>>2]|0)+(e<<2)>>2]=r;e=f[d>>2]|0;if(!e)e=s;else{e=f[e+4>>2]|0;c=i+-1|0;if(c&i){if(e>>>0>=i>>>0)e=(e>>>0)%(i>>>0)|0}else e=e&c;f[(f[a>>2]|0)+(e<<2)>>2]=d;e=s}}else{a=f[s>>2]|0;f[a>>2]=f[d>>2];f[d>>2]=a;e=s;d=a}f[j>>2]=(f[j>>2]|0)+1;f[e>>2]=0}u=t;return d+12|0}function Ni(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;m=o+16|0;c=o+4|0;p=o+8|0;e=o;f[c>>2]=b;n=a+100|0;a:do if(pJa(f[b+8>>2]|0)|0){JX(p,a,c);d=f[p>>2]|0;f[d+8>>2]=b;i=d;y=0;c=la(170,a|0)|0;l=y;y=0;b:do if(!(l&1)?(f[d+12>>2]=c,f[e>>2]=f[b+8>>2],y=0,f[m>>2]=f[e>>2],ya(81,a|0,m|0,c|0),l=y,y=0,!(l&1)):0){f[m>>2]=i;c=m+4|0;d=f[p+4>>2]|0;f[c>>2]=d;if(d|0)cza(d);h=a+104|0;e=f[h>>2]|0;g=a+108|0;do if(e>>>0>=(f[g>>2]|0)>>>0){y=0;ja(547,n|0,m|0);l=y;y=0;if(l&1){p=Pa()|0;tva(f[c>>2]|0);c=p;break b}else{c=f[c>>2]|0;break}}else{f[e>>2]=i;f[e+4>>2]=d;f[m>>2]=0;f[c>>2]=0;f[h>>2]=e+8;c=0}while(0);tva(c);tva(d);j=15;break a}else j=12;while(0);if((j|0)==12){c=Pa()|0;d=f[p+4>>2]|0}tva(d)}else{g=a+108|0;h=a+104|0;j=15}while(0);do if((j|0)==15){j=b+12|0;l=m+4|0;k=p+4|0;c=gKa(f[b+16>>2]|0)|0;while(1){i=c+-1|0;if((c|0)<=0){j=17;break}tW(p,a,bga(j,i)|0);c=f[p>>2]|0;f[m>>2]=c;d=f[k>>2]|0;f[l>>2]=d;f[p>>2]=0;f[k>>2]=0;e=f[h>>2]|0;if(e>>>0<(f[g>>2]|0)>>>0){f[e>>2]=c;f[e+4>>2]=d;f[m>>2]=0;f[l>>2]=0;f[h>>2]=e+8;c=0}else{y=0;ja(547,n|0,m|0);b=y;y=0;if(b&1){j=23;break}c=f[l>>2]|0}tva(c);tva(0);c=i}if((j|0)==17){u=o;return}else if((j|0)==23){c=Pa()|0;tva(f[l>>2]|0);tva(0);break}}while(0);$a(c|0)}function Oi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+16|0;k=n+12|0;i=n+8|0;l=n;j=a+12|0;do if(b[j>>0]|0){g=Vea(76852,56819)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[k>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,o=y,y=0,!(o&1)):0){pza(k);jn(g,e)|0;Yp(g)|0;break}o=Pa()|0;pza(k);$a(o|0)}while(0);g=Jg(a)|0;f[c+28>>2]=g;g=Nm(a)|0;do if(b[j>>0]|0){d=vj(Vea(76852,56835)|0,g)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[k>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,o=y,y=0,!(o&1)):0){pza(k);jn(d,h)|0;Yp(d)|0;break}o=Pa()|0;pza(k);$a(o|0)}while(0);e=c+8|0;d=0;while(1){if((d|0)==(g|0))break;pi(l,a,Nm(a)|0);f[i>>2]=f[l>>2];f[k>>2]=f[i>>2];eV(e,k);d=d+1|0}pi(l,a,Nm(a)|0);d=c+24|0;f[d>>2]=f[l>>2];do if(b[j>>0]|0){e=Vea(76852,56845)|0;d=K2(e,f[d>>2]|0)|0;Axa(k,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[k>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,m=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,o=y,y=0,!(o&1)):0){pza(k);jn(d,m)|0;Yp(d)|0;break}o=Pa()|0;pza(k);$a(o|0)}while(0);if(f[l+4>>2]|0){o=Jg(a)|0;f[c+32>>2]=o}vHa(c);u=n;return}function Pi(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+272|0;m=o+8|0;n=o;do if(!(b[c>>0]|0)){c=lb(67313)|0;if(c|0?b[c>>0]|0:0)break;c=lb(67320+(a*12|0)|0)|0;if(c|0?b[c>>0]|0:0)break;c=lb(67392)|0;if(c|0?b[c>>0]|0:0)break;c=67397}while(0);d=0;a:do{switch(b[c+d>>0]|0){case 47:case 0:break a;default:{}}d=d+1|0}while(d>>>0<15);e=b[c>>0]|0;if(e<<24>>24!=46?(b[c+d>>0]|0)==0:0)if(e<<24>>24==67)l=15;else{k=c;l=16}else{c=67397;l=15}if((l|0)==15)if(!(b[c+1>>0]|0))l=18;else{k=c;l=16}b:do if((l|0)==16)if((yV(k,67397)|0)!=0?(yV(k,67405)|0)!=0:0){c=f[19120]|0;if(c|0)do{if(!(yV(k,c+8|0)|0))break b;c=f[c+24>>2]|0}while((c|0)!=0);Ga(76484);c=f[19120]|0;c:do if(c|0){while(1){if(!(yV(k,c+8|0)|0))break;c=f[c+24>>2]|0;if(!c)break c}pb(76484);break b}while(0);d:do if(((f[19099]|0)==0?(g=lb(67411)|0,(g|0)!=0):0)?(b[g>>0]|0)!=0:0){i=254-d|0;j=d+1|0;e=g;while(1){h=Yx(e,58)|0;c=b[h>>0]|0;g=((c<<24>>24!=0)<<31>>31)+(h-e)|0;if(g>>>0<i>>>0){rq(m|0,e|0,g|0)|0;e=m+g|0;b[e>>0]=47;rq(e+1|0,k|0,d|0)|0;b[m+(j+g)>>0]=0;g=nb(m|0,n|0)|0;if(g|0)break;c=b[h>>0]|0}e=h+(c<<24>>24!=0&1)|0;if(!(b[e>>0]|0)){l=41;break d}}c=rc(28)|0;e=f[n>>2]|0;if(!c){Vha(g,e);l=41;break}else{f[c>>2]=g;f[c+4>>2]=e;n=c+8|0;rq(n|0,k|0,d|0)|0;b[n+d>>0]=0;f[c+24>>2]=f[19120];f[19120]=c;break}}else l=41;while(0);if((l|0)==41){c=rc(28)|0;if(c){f[c>>2]=10040;f[c+4>>2]=20;n=c+8|0;rq(n|0,k|0,d|0)|0;b[n+d>>0]=0;f[c+24>>2]=f[19120];f[19120]=c}}pb(76484);c=(a|0)==0&(c|0)==0?10012:c}else{c=k;l=18}while(0);do if((l|0)==18){if((a|0)==0?(b[c+1>>0]|0)==46:0){c=10012;break}c=0}while(0);u=o;return c|0}function Qi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;j=l;e=a+4|0;g=b+-4|0;d=a+8|0;a:do switch(b-a>>2|0){case 1:case 0:{d=1;break}case 2:{if(GA(f[c>>2]|0,g,a)|0){d=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=d;d=1}else d=1;break}case 3:{Ir(a,e,g,c)|0;d=1;break}case 4:{Tt(a,e,d,g,c)|0;d=1;break}case 5:{Rq(a,e,d,a+12|0,g,c)|0;d=1;break}default:{Ir(a,e,d,c)|0;i=a+12|0;h=0;b:while(1){if((i|0)==(b|0)){e=1;d=0;k=25;break}if(!(GA(f[c>>2]|0,i,d)|0)){d=i;i=i+4|0;continue}e=f[i>>2]|0;f[i>>2]=0;f[j>>2]=e;e=i;while(1){m=f[d>>2]|0;f[d>>2]=0;g=f[e>>2]|0;f[e>>2]=m;if(g|0){XV(g);$Ja(g)}if((d|0)==(a|0))break;e=d+-4|0;y=0;g=oa(52,f[c>>2]|0,j|0,e|0)|0;m=y;y=0;if(m&1)break b;if(g){m=d;d=e;e=m}else break}m=f[j>>2]|0;f[j>>2]=0;e=f[d>>2]|0;f[d>>2]=m;if(e|0){XV(e);$Ja(e)}d=h+1|0;g=i+4|0;e=f[j>>2]|0;f[j>>2]=0;if(e|0){XV(e);$Ja(e)}if((d|0)==8){e=0;d=(g|0)==(b|0);k=25;break}else{m=i;i=g;h=d;d=m}}if((k|0)==25){d=e|d;break a}d=Pa()|0;e=f[j>>2]|0;f[j>>2]=0;if(e|0){XV(e);$Ja(e)}$a(d|0)}}while(0);u=l;return d|0}function Ri(a,b){a=+a;b=+b;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;p[s>>3]=a;h=f[s>>2]|0;j=f[s+4>>2]|0;p[s>>3]=b;l=f[s>>2]|0;m=f[s+4>>2]|0;d=Bna(h|0,j|0,52)|0;d=d&2047;k=Bna(l|0,m|0,52)|0;k=k&2047;n=j&-2147483648;g=gna(l|0,m|0,1)|0;i=J;a:do if(!((g|0)==0&(i|0)==0)?(e=Mra(b)|0,c=J&2147483647,!((d|0)==2047|(c>>>0>2146435072|(c|0)==2146435072&e>>>0>0))):0){c=gna(h|0,j|0,1)|0;e=J;if(!(e>>>0>i>>>0|(e|0)==(i|0)&c>>>0>g>>>0))return +((c|0)==(g|0)&(e|0)==(i|0)?a*0.0:a);if(!d){c=gna(h|0,j|0,12)|0;e=J;if((e|0)>-1|(e|0)==-1&c>>>0>4294967295){d=0;do{d=d+-1|0;c=gna(c|0,e|0,1)|0;e=J}while((e|0)>-1|(e|0)==-1&c>>>0>4294967295)}else d=0;h=gna(h|0,j|0,1-d|0)|0;g=J}else g=j&1048575|1048576;if(!k){e=gna(l|0,m|0,12)|0;i=J;if((i|0)>-1|(i|0)==-1&e>>>0>4294967295){c=0;do{c=c+-1|0;e=gna(e|0,i|0,1)|0;i=J}while((i|0)>-1|(i|0)==-1&e>>>0>4294967295)}else c=0;l=gna(l|0,m|0,1-c|0)|0;k=c;j=J}else j=m&1048575|1048576;e=Aoa(h|0,g|0,l|0,j|0)|0;c=J;i=(c|0)>-1|(c|0)==-1&e>>>0>4294967295;b:do if((d|0)>(k|0)){while(1){if(i){if((e|0)==0&(c|0)==0)break}else{e=h;c=g}h=gna(e|0,c|0,1)|0;g=J;d=d+-1|0;e=Aoa(h|0,g|0,l|0,j|0)|0;c=J;i=(c|0)>-1|(c|0)==-1&e>>>0>4294967295;if((d|0)<=(k|0))break b}b=a*0.0;break a}while(0);if(i){if((e|0)==0&(c|0)==0){b=a*0.0;break}}else{c=g;e=h}if(c>>>0<1048576|(c|0)==1048576&e>>>0<0)do{e=gna(e|0,c|0,1)|0;c=J;d=d+-1|0}while(c>>>0<1048576|(c|0)==1048576&e>>>0<0);if((d|0)>0){m=Hsa(e|0,c|0,0,-1048576)|0;c=J;d=gna(d|0,0,52)|0;c=c|J;d=m|d}else{d=Bna(e|0,c|0,1-d|0)|0;c=J}f[s>>2]=d;f[s+4>>2]=c|n;b=+p[s>>3]}else o=3;while(0);if((o|0)==3){b=a*b;b=b/b}return +b}function Si(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=u;u=u+48|0;h=n+24|0;i=n;j=n+12|0;m=pL(a,c)|0;if(!((m|0)==(a|0)|(m|0)==(c|0))?(b[m>>0]|0)==69:0){k=d+11|0;g=b[k>>0]|0;l=d+4|0;a:do if((g<<24>>24<0?f[l>>2]|0:g&255)>>>0<=3){c=e+4|0;g=f[c>>2]|0;if(g>>>0<(f[e+8>>2]|0)>>>0){f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;f[g+12>>2]=0;f[g+16>>2]=0;f[g+20>>2]=0;vT(g);f[c>>2]=(f[c>>2]|0)+24;g=c;break}else{Lu(e);g=c;break}}else{Mt(j,72085,d);y=0;ua(165,j|0,72083)|0;g=y;y=0;do if(g&1)a=Pa()|0;else{f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];c=0;while(1){if((c|0)==3)break;f[j+(c<<2)>>2]=0;c=c+1|0}hM(h,i);g=e+4|0;c=f[g>>2]|0;if(c>>>0>=(f[e+8>>2]|0)>>>0){y=0;ja(2056,e|0,h|0);e=y;y=0;if(e&1){a=Pa()|0;Xka(h);zta(i);break}}else{ZL(c,h);f[g>>2]=(f[g>>2]|0)+24}Xka(h);zta(i);zta(j);break a}while(0);zta(j);$a(a|0)}while(0);if((b[a>>0]|0)==110){kA((f[g>>2]|0)+-24|0,45);a=a+1|0}jl((f[g>>2]|0)+-24|0,a,m);a=b[k>>0]|0;c=a<<24>>24<0;a=c?f[l>>2]|0:a&255;if(a>>>0<4)eA((f[g>>2]|0)+-24|0,c?f[d>>2]|0:d,a)|0;a=m+1|0}u=n;return a|0}function Ti(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=u;u=u+96|0;n=p+64|0;s=p+68|0;r=p+40|0;q=p+16|0;k=p+8|0;o=p+4|0;m=p;f[n>>2]=b;Upa(s,a);y=0;ja(549,s|0,b|0);j=y;y=0;do if(j&1)b=Pa()|0;else{i=a+20|0;j=s+4|0;g=a+16|0;h=a+4|0;d=0;a:while(1){if(d>>>0>=(f[i>>2]|0)>>>0)break;e=(f[g>>2]|0)+d|0;e=f[(f[(f[h>>2]|0)+(e>>>10<<2)>>2]|0)+((e&1023)<<2)>>2]|0;f[r>>2]=e;if(_qa(j,e)|0){b=f[e+16>>2]|0;gKa(b)|0;c=q;while(1){f[c>>2]=b;t=EFa(e)|0;c=f[q>>2]|0;b=c;if((b|0)==(t|0))break;y=0;ja(550,(f[c+8>>2]|0)+24|0,r|0);t=y;y=0;if(t&1){l=13;break a}f[q>>2]=f[b+4>>2];c=k}}d=d+1|0}if((l|0)==13){b=Pa()|0;break}ija(r);b=f[s+20>>2]|0;gKa(b)|0;d=EFa(j)|0;c=q;while(1){f[c>>2]=b;b=f[q>>2]|0;if((b|0)==(d|0)){l=15;break}f[o>>2]=f[b+8>>2];y=0;ja(550,r|0,o|0);t=y;y=0;if(t&1){l=18;break}f[q>>2]=f[b+4>>2];c=m}if((l|0)==15){ija(q);y=0;ja(550,q|0,n|0);t=y;y=0;do if(!(t&1)){ixa(o,a);y=0;b=oa(49,o|0,r|0,q|0)|0;t=y;y=0;if(t&1){b=Pa()|0;break}f[a+48>>2]=b;if(!b){y=0;Ca(52,33261,33266,970,33413);y=0;l=22;break}else{_fa(q);_fa(r);iwa(s);u=p;return}}else l=22;while(0);if((l|0)==22)b=Pa()|0;_fa(q)}else if((l|0)==18)b=Pa()|0;_fa(r)}while(0);iwa(s);$a(b|0)}function Ui(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+304|0;j=o+288|0;p=o+196|0;k=o+96|0;l=o;h=Iza(f[c>>2]|0)|0;i=(h|0)!=0;m=a+48|0;g=h+8|0;do if(i?(d=OO(m,f[g>>2]|0)|0,(d|0)!=(a+52|0)):0){e=Era(f[f[d+20>>2]>>2]|0)|0;if(pJa(f[e+4>>2]|0)|0)Na(32860,32558,268,32879);else{q=f[e+12>>2]|0;e=Jxa(e)|0;f[e+8>>2]=q;_wa(e);jC(m,d);b[a+96>>0]=1;break}}while(0);e=a+40|0;Ot(p,uya(f[e>>2]|0)|0,0);y=0;d=ua(78,p|0,f[c>>2]|0)|0;q=y;y=0;a:do if(q&1)n=9;else{if(d?(y=0,ja(488,a|0,p|0),q=y,y=0,q&1):0){n=9;break}b:do if(i?cU(a,h)|0:0){d=f[g>>2]|0;if(QZ(m,d)|0){y=0;Ca(52,32889,32558,285,32879);y=0;d=Pa()|0;break a}q=uya(f[e>>2]|0)|0;y=0;ya(78,l|0,c|0,q|0);q=y;y=0;do if(!(q&1)){f[k>>2]=d;tra(k+4|0,l);y=0;Ca(64,j|0,m|0,f[k>>2]|0,k|0);q=y;y=0;if(q&1){d=Pa()|0;rwa(k);GAa(l);break}else{rwa(k);GAa(l);break b}}else d=Pa()|0;while(0);break a}while(0);e=a+140|0;g=f[e>>2]|0;d=0;while(1){if((d|0)==-1)break;q=d+-1|0;f[e>>2]=g+(q<<2);d=q}hT(p);u=o;return}while(0);if((n|0)==9)d=Pa()|0;hT(p);$a(d|0)}function Vi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=u;u=u+32|0;r=q+12|0;l=q+8|0;n=q+4|0;k=q;f[r>>2]=0;p=r+4|0;f[p>>2]=0;f[r+8>>2]=0;o=a+24|0;m=r+8|0;i=0;g=0;d=f[a+20>>2]|0;e=l;while(1){f[e>>2]=d;j=f[l>>2]|0;if((j|0)==(o|0)){h=3;break}y=0;d=ua(86,b|0,f[j+16>>2]|0)|0;h=y;y=0;if(h&1){h=11;break}e=f[j+20>>2]|0;y=0;e=oa(f[(f[e>>2]|0)+8>>2]|0,e|0,b|0,c|0)|0;h=y;y=0;if(h&1){h=11;break}y=0;e=xa(9,f[b>>2]|0,d|0,e|0,0)|0;h=y;y=0;if(h&1){h=11;break}f[n>>2]=e;d=f[p>>2]|0;if((d|0)==(f[m>>2]|0)){y=0;ja(592,r|0,n|0);h=y;y=0;if(h&1){h=12;break}}else{f[d>>2]=e;f[p>>2]=(f[p>>2]|0)+4}if(!g){h=e;g=e}else{f[g+16>>2]=e;qO(g);h=i;g=f[n>>2]|0}d=f[j+4>>2]|0;if(!d){e=j;while(1){d=f[e+8>>2]|0;if((f[d>>2]|0)==(e|0))break;else e=d}}else while(1){e=f[d>>2]|0;if(!e)break;else d=e}f[l>>2]=d;i=h;d=j;e=k}do if((h|0)==3){while(1){o=f[p>>2]|0;e=o;if((o|0)==(f[r>>2]|0))break;g=f[e+-4>>2]|0;d=0;while(1){if((d|0)==-1)break;o=d+-1|0;f[p>>2]=e+(o<<2);d=o}qO(g)}y=0;d=ua(87,f[b>>2]|0,i|0)|0;p=y;y=0;if(p&1){d=Pa()|0;break}y=0;d=xa(10,d|0,a|0,b|0,c|0)|0;p=y;y=0;do if(!(p&1)){e=f[a+8>>2]|0;if(e){y=0;e=oa(f[(f[e>>2]|0)+8>>2]|0,e|0,b|0,c|0)|0;c=y;y=0;if(c&1)break;y=0;d=oa(50,b|0,d|0,e|0)|0;b=y;y=0;if(b&1)break}E4(r);u=q;return d|0}while(0);d=Pa()|0}else if((h|0)==11){d=Pa()|0;h=19}else if((h|0)==12){d=Pa()|0;h=19}while(0);E4(r);$a(d|0);return 0}function Wi(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=u;u=u+160|0;p=q+144|0;r=q;a:do if(d>>>0>g>>>0|(d|0)==(g|0)&c>>>0>e>>>0){j=r+64|0;k=r+8|0;f[k>>2]=6024;o=r+12|0;f[r>>2]=84;f[j>>2]=104;f[r+4>>2]=0;dX(r+64|0,o);f[r+136>>2]=0;f[r+140>>2]=-1;f[r>>2]=6004;f[j>>2]=6044;f[k>>2]=6024;W6(o);f[o>>2]=6060;k=r+44|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;i=0;while(1){if((i|0)==3)break;f[k+(i<<2)>>2]=0;i=i+1|0}f[r+56>>2]=0;f[r+60>>2]=24;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;i=0;while(1){if((i|0)==3)break;f[p+(i<<2)>>2]=0;i=i+1|0}y=0;ja(117,o|0,p|0);i=y;y=0;if(i&1){r=Pa()|0;zta(p);zta(k);vwa(o);oCa(j);$a(r|0)}zta(p);y=0;i=ua(53,r+8|0,h|0)|0;h=y;y=0;if((((!(h&1)?(y=0,l=ua(53,i|0,71123)|0,h=y,y=0,!(h&1)):0)?(y=0,m=oa(45,l|0,c|0,d|0)|0,l=y,y=0,!(l&1)):0)?(y=0,n=ua(53,m|0,26876)|0,m=y,y=0,!(m&1)):0)?(y=0,oa(45,n|0,e|0,g|0)|0,n=y,y=0,!(n&1)):0){i=f[a+36>>2]|0;j=f[(f[i>>2]|0)+20>>2]|0;y=0;ja(118,p|0,o|0);o=y;y=0;do if(!(o&1)){y=0;ja(j|0,i|0,((b[p+11>>0]|0)<0?f[p>>2]|0:p)|0);o=y;y=0;if(o&1){i=Pa()|0;zta(p);break}else{zta(p);Sia(r);break a}}else i=Pa()|0;while(0)}else i=Pa()|0;Sia(r);$a(i|0)}while(0);u=q;return}function Xi(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0;s=u;u=u+16|0;r=s+4|0;l=s;f[l>>2]=b;k=f[b>>2]|0;f[r>>2]=k;q=$z(r,4)|0;o=a+4|0;h=f[o>>2]|0;p=(h|0)==0;a:do if(!p){i=h+-1|0;j=(i&h|0)==0;if(!j)if(q>>>0<h>>>0)c=q;else c=(q>>>0)%(h>>>0)|0;else c=i&q;b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b)m=15;else do{b=f[b>>2]|0;if(!b){m=15;break a}d=f[b+4>>2]|0;if((d|0)!=(q|0)){if(!j){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&i;if((d|0)!=(c|0)){m=15;break a}}}while((f[b+8>>2]|0)!=(k|0))}else{c=0;m=15}while(0);if((m|0)==15){UF(r,a,q,l);i=a+12|0;e=+(((f[i>>2]|0)+1|0)>>>0);g=+n[a+16>>2];do if(p|e>+(h>>>0)*g){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;m=~~+X(+(e/g))>>>0;y=0;ja(1998,a|0,(p>>>0<m>>>0?m:p)|0);p=y;y=0;if(p&1){b=Pa()|0;c=f[r>>2]|0;f[r>>2]=0;if(c|0)$Ja(c);$a(b|0)}b=f[o>>2]|0;c=b+-1|0;if(!(c&b)){h=b;c=c&q;break}if(q>>>0<b>>>0){h=b;c=q}else{h=b;c=(q>>>0)%(b>>>0)|0}}while(0);b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b){q=a+8|0;b=f[r>>2]|0;f[b>>2]=f[q>>2];f[q>>2]=b;f[(f[a>>2]|0)+(c<<2)>>2]=q;c=f[b>>2]|0;if(!c)c=r;else{c=f[c+4>>2]|0;d=h+-1|0;if(d&h){if(c>>>0>=h>>>0)c=(c>>>0)%(h>>>0)|0}else c=c&d;f[(f[a>>2]|0)+(c<<2)>>2]=b;c=r}}else{a=f[r>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=a;c=r;b=a}f[i>>2]=(f[i>>2]|0)+1;f[c>>2]=0}u=s;return b+12|0}function Yi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+32|0;j=o+20|0;c=o+16|0;h=o+12|0;l=o+8|0;m=o+4|0;n=o;g=f[a>>2]|0;d=f[g+36>>2]|0;a:do if((f[g+40>>2]|0)==(d|0)){e=f[g+16>>2]|0;c=f[g+12>>2]|0;while(1){if((c|0)==(e|0))break a;d=f[c>>2]|0;if(!(f[d+12>>2]|0))break;else c=c+4|0}f[h>>2]=f[d>>2];f[j>>2]=f[h>>2];Up(a,j)|0;i=7}else{f[c>>2]=f[f[d>>2]>>2];f[j>>2]=f[c>>2];Up(a,j)|0;i=7}while(0);do if((i|0)==7){do if(b[a+12>>0]|0){c=Vea(76852,59004)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[j>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,k=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(j);jn(c,k)|0;Yp(c)|0;break}o=Pa()|0;pza(j);$a(o|0)}while(0);g=uW(a,0)|0;JO(a,51159);h=zna(a)|0;i=a+4|0;d=f[i>>2]|0;j=a+104|0;PDa(l,f[j>>2]|0);Un(d,f[l>>2]|0)|0;d=f[a>>2]|0;e=f[d+16>>2]|0;c=0;d=f[d+12>>2]|0;while(1){if((d|0)==(e|0))break;if(!(f[(f[d>>2]|0)+12>>2]|0)){l=f[i>>2]|0;PDa(m,c);Un(l,f[m>>2]|0)|0;JO(a,f[f[d>>2]>>2]|0);c=c+1|0}d=d+4|0}d=f[a>>2]|0;e=f[d+40>>2]|0;d=f[d+36>>2]|0;while(1){if((d|0)==(e|0))break;m=f[i>>2]|0;PDa(n,c);Un(m,f[n>>2]|0)|0;JO(a,f[f[d>>2]>>2]|0);c=c+1|0;d=d+4|0}if((c|0)==(f[j>>2]|0)){cwa(a,h);KE(a,g);break}else Na(59018,54283,444,59052)}while(0);u=o;return}function Zi(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;s=u;u=u+16|0;q=s+4|0;m=s;l=a+64|0;if(!(f[l>>2]|0))c=-1;else{d=YN(a)|0;r=a+12|0;c=f[r>>2]|0;if(!c){c=q+1|0;f[a+8>>2]=q;f[r>>2]=c;p=a+16|0;f[p>>2]=c}else p=a+16|0;if(d){d=f[p>>2]|0;n=0}else{d=f[p>>2]|0;n=(d-(f[a+8>>2]|0)|0)/2|0;n=n>>>0<4?n:4}do if((c|0)==(d|0)){d=a+8|0;S0(f[d>>2]|0,c+(0-n)|0,n|0)|0;if(b[a+98>>0]|0){c=f[d>>2]|0;c=AE(c+n|0,(f[p>>2]|0)-n-c|0,f[l>>2]|0)|0;if(!c){c=-1;break}o=(f[d>>2]|0)+n|0;f[r>>2]=o;f[p>>2]=o+c;c=oHa(b[o>>0]|0)|0;break}i=a+40|0;h=f[i>>2]|0;j=a+36|0;c=f[j>>2]|0;k=a+32|0;e=h;g=c;if((h|0)==(c|0))c=g;else{S0(f[k>>2]|0,c|0,e-g|0)|0;e=f[i>>2]|0;c=f[j>>2]|0}g=f[k>>2]|0;e=g+(e-c)|0;f[j>>2]=e;if((g|0)==(a+44|0))c=8;else c=f[a+52>>2]|0;t=g+c|0;f[i>>2]=t;g=a+60|0;c=(f[g>>2]|0)-n|0;t=t-e|0;h=a+72|0;x=h;w=f[x+4>>2]|0;v=a+80|0;f[v>>2]=f[x>>2];f[v+4>>2]=w;e=AE(e,t>>>0<c>>>0?t:c,f[l>>2]|0)|0;if(!e)c=-1;else{c=f[a+68>>2]|0;if(!c){x=zb(4)|0;fJa(x);ub(x|0,5864,326)}w=(f[j>>2]|0)+e|0;f[i>>2]=w;x=f[d>>2]|0;if((bc[f[(f[c>>2]|0)+16>>2]&15](c,h,f[k>>2]|0,w,j,x+n|0,x+(f[g>>2]|0)|0,m)|0)!=3){e=f[m>>2]|0;c=(f[d>>2]|0)+n|0;if((e|0)==(c|0))c=-1;else o=22}else{c=f[k>>2]|0;e=f[i>>2]|0;f[d>>2]=c;o=22}if((o|0)==22){f[r>>2]=c;f[p>>2]=e;c=oHa(b[c>>0]|0)|0}}}else{c=oHa(b[c>>0]|0)|0;d=a+8|0}while(0);if((f[d>>2]|0)==(q|0)){f[d>>2]=0;f[r>>2]=0;f[p>>2]=0}}u=s;return c|0}function _i(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;s=u;u=u+224|0;j=s+184|0;k=s+192|0;l=s+180|0;m=s+176|0;n=s+168|0;o=s+40|0;p=s+32|0;q=s+28|0;t=s+16|0;i=s+8|0;r=s;f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[t+(c<<2)>>2]=0;c=c+1|0}f[i+4>>2]=0;f[i>>2]=17308;g=b[h+8+3>>0]|0;c=g<<24>>24<0;d=c?f[h>>2]|0:h;g=d+((c?f[h+4>>2]|0:g&255)<<2)|0;h=k+32|0;c=0;a:while(1){if(!((c|0)!=2&d>>>0<g>>>0)){j=14;break}f[m>>2]=d;y=0;e=Aa(f[(f[i>>2]|0)+12>>2]|0,i|0,j|0,d|0,g|0,m|0,k|0,h|0,l|0)|0;c=y;y=0;if(c&1){j=13;break}if((e|0)==2?1:(f[m>>2]|0)==(d|0)){j=8;break}else c=k;while(1){if(c>>>0>=(f[l>>2]|0)>>>0)break;y=0;ja(82,t|0,b[c>>0]|0);d=y;y=0;if(d&1){j=13;break a}c=c+1|0}d=f[m>>2]|0;c=e}if((j|0)==8){y=0;ia(400,69410);y=0;j=13}else if((j|0)==14){d=(b[t+11>>0]|0)<0?f[t>>2]|0:t;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[a+(c<<2)>>2]=0;c=c+1|0}g=gKa(d)|0;f[r+4>>2]=0;f[r>>2]=17356;g=d+(iJ(g)|0)|0;h=g;i=o+128|0;c=0;b:while(1){if(!((c|0)!=2&d>>>0<g>>>0)){j=26;break}f[q>>2]=d;y=0;e=Aa(f[(f[r>>2]|0)+16>>2]|0,r|0,n|0,d|0,((h-d|0)>32?d+32|0:g)|0,q|0,o|0,i|0,p|0)|0;m=y;y=0;if(m&1)break;if((e|0)==2?1:(f[q>>2]|0)==(d|0)){j=21;break}else c=o;while(1){if(c>>>0>=(f[p>>2]|0)>>>0)break;y=0;ja(2048,a|0,f[c>>2]|0);m=y;y=0;if(m&1)break b;c=c+4|0}d=f[q>>2]|0;c=e}if((j|0)==21){y=0;ia(400,69410);y=0}else if((j|0)==26){zta(t);u=s;return}c=Pa()|0;jta(a)}if((j|0)==13)c=Pa()|0;zta(t);$a(c|0)}function $i(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;e=u;u=u+16|0;h=e;do if(!(QK(c)|0)){d=rr(lj(c,0)|0)|0;if(bDa(d,f[18764]|0)|0){fY(a,c);break}if(bDa(d,f[18763]|0)|0){jc(a,c,0);break}if(bDa(d,f[18760]|0)|0){Qc(a,c,0);break}if(bDa(d,f[18759]|0)|0){Ep(a,c);break}if(bDa(d,f[18757]|0)|0){Hc(a,c);break}if(!(bDa(d,f[18756]|0)|0)){if(bDa(d,f[18829]|0)|0){sc(a,c,0);break}if(bDa(d,f[18755]|0)|0){Nc(a,c,0);break}if(bDa(d,f[18754]|0)|0){eW(a,c);break}if(!(bDa(d,f[18752]|0)|0)){c3(Vea(Vea(76852,52019)|0,d)|0,10)|0;g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(52039)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;a=h}else{d=e+16&-16;y=0;a=la(150,d|0)|0;j=y;y=0;if(j&1){i=28;break}f[h>>2]=a;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(a,52039,e)|0;SBa(a+e|0,0);y=0;Ca(79,g|0,h|0,f[c+28>>2]|0,f[c+32>>2]|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}a=Pa()|0;zta(h);if(d)i=30}else{y=0;za(3);y=0;i=28}while(0);if((i|0)==28){a=Pa()|0;i=30}if((i|0)==30)Oa(g|0);$a(a|0)}}}while(0);u=e;return}
function ke(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,357,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,356,bga(c,a)|0);b=a}}case 2:{JJ(d,358,b);OH(d,(Asa(c)|0)+16|0);JJ(d,356,(Asa(c)|0)+12|0);JJ(d,356,(Asa(c)|0)+8|0);break}case 3:{JJ(d,359,b);JJ(d,356,(rsa(c)|0)+12|0);break}case 4:{JJ(d,360,b);OH(d,(jsa(c)|0)+16|0);OH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,361,b);JJ(d,356,(Xra(c)|0)+28|0);OH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,362,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,356,bga(c,a)|0);b=a}}case 7:{JJ(d,363,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,356,bga(c,a)|0);b=a}}case 8:{JJ(d,364,b);b=fra(c)|0;JJ(d,356,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,356,bga(c,a)|0);b=a}}case 9:{JJ(d,365,b);break}case 10:{JJ(d,366,b);JJ(d,356,(Era(c)|0)+12|0);break}case 11:{JJ(d,367,b);break}case 12:{JJ(d,368,b);JJ(d,356,(ura(c)|0)+12|0);break}case 13:{JJ(d,369,b);JJ(d,356,(lsa(c)|0)+24|0);break}case 14:{JJ(d,370,b);JJ(d,356,(Zra(c)|0)+28|0);JJ(d,356,(Zra(c)|0)+24|0);break}case 25:{JJ(d,371,b);JJ(d,356,(wra(c)|0)+24|0);JJ(d,356,(wra(c)|0)+20|0);break}case 24:{JJ(d,372,b);JJ(d,356,(Vqa(c)|0)+24|0);JJ(d,356,(Vqa(c)|0)+20|0);JJ(d,356,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,373,b);JJ(d,356,(lra(c)|0)+16|0);JJ(d,356,(lra(c)|0)+12|0);JJ(d,356,(lra(c)|0)+8|0);break}case 27:{JJ(d,374,b);JJ(d,356,(kra(c)|0)+12|0);JJ(d,356,(kra(c)|0)+8|0);break}case 15:{JJ(d,375,b);break}case 16:{JJ(d,376,b);JJ(d,356,(Yra(c)|0)+12|0);break}case 17:{JJ(d,377,b);JJ(d,356,(Sra(c)|0)+16|0);JJ(d,356,(Sra(c)|0)+12|0);break}case 18:{JJ(d,378,b);JJ(d,356,(Qra(c)|0)+16|0);JJ(d,356,(Qra(c)|0)+12|0);JJ(d,356,(Qra(c)|0)+8|0);break}case 19:{JJ(d,379,b);JJ(d,356,(nsa(c)|0)+8|0);break}case 20:{JJ(d,380,b);OH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,381,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,356,bga(c,a)|0);b=a}}case 22:{JJ(d,382,b);break}case 23:{JJ(d,383,b);break}default:Ka()}while(0);return}function le(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,88,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,85,bga(d,b)|0);c=b}}case 2:{JJ(a,89,b);vH(a,(Asa(c)|0)+16|0);JJ(a,85,(Asa(c)|0)+12|0);JJ(a,85,(Asa(c)|0)+8|0);break}case 3:{JJ(a,90,b);JJ(a,85,(rsa(c)|0)+12|0);break}case 4:{JJ(a,91,b);vH(a,(jsa(c)|0)+16|0);vH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,92,b);JJ(a,85,(Xra(c)|0)+28|0);vH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,93,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,85,bga(d,b)|0);c=b}}case 7:{JJ(a,94,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,85,bga(d,b)|0);c=b}}case 8:{JJ(a,95,b);b=fra(c)|0;JJ(a,85,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,85,bga(d,b)|0);c=b}}case 9:{JJ(a,96,b);break}case 10:{JJ(a,97,b);JJ(a,85,(Era(c)|0)+12|0);break}case 11:{JJ(a,98,b);break}case 12:{JJ(a,99,b);JJ(a,85,(ura(c)|0)+12|0);break}case 13:{JJ(a,100,b);JJ(a,85,(lsa(c)|0)+24|0);break}case 14:{JJ(a,101,b);JJ(a,85,(Zra(c)|0)+28|0);JJ(a,85,(Zra(c)|0)+24|0);break}case 25:{JJ(a,102,b);JJ(a,85,(wra(c)|0)+24|0);JJ(a,85,(wra(c)|0)+20|0);break}case 24:{JJ(a,103,b);JJ(a,85,(Vqa(c)|0)+24|0);JJ(a,85,(Vqa(c)|0)+20|0);JJ(a,85,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,104,b);JJ(a,85,(lra(c)|0)+16|0);JJ(a,85,(lra(c)|0)+12|0);JJ(a,85,(lra(c)|0)+8|0);break}case 27:{JJ(a,105,b);JJ(a,85,(kra(c)|0)+12|0);JJ(a,85,(kra(c)|0)+8|0);break}case 15:{JJ(a,106,b);break}case 16:{JJ(a,107,b);JJ(a,85,(Yra(c)|0)+12|0);break}case 17:{JJ(a,108,b);JJ(a,85,(Sra(c)|0)+16|0);JJ(a,85,(Sra(c)|0)+12|0);break}case 18:{JJ(a,109,b);JJ(a,85,(Qra(c)|0)+16|0);JJ(a,85,(Qra(c)|0)+12|0);JJ(a,85,(Qra(c)|0)+8|0);break}case 19:{JJ(a,110,b);JJ(a,85,(nsa(c)|0)+8|0);break}case 20:{JJ(a,111,b);vH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,112,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,85,bga(d,b)|0);c=b}}case 22:{JJ(a,113,b);break}case 23:{JJ(a,114,b);break}default:Ka()}while(0);return}function me(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;D=u;u=u+64|0;E=D+44|0;F=D+32|0;G=D+20|0;I=D;B=a+16|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;n[B>>2]=1.0;C=I+16|0;f[I>>2]=0;f[I+4>>2]=0;f[I+8>>2]=0;f[I+12>>2]=0;n[C>>2]=1.0;A=b+36|0;f[E>>2]=f[A>>2];b=$z(E,4)|0;z=I+4|0;y=0;Ca(77,G|0,I|0,b|0,A|0);A=y;y=0;do if(A&1){b=Pa()|0;H=57}else{A=I+12|0;x=~~+X(+(+(((f[A>>2]|0)+1|0)>>>0)/+n[C>>2]))>>>0;y=0;ja(1942,I|0,(x>>>0>1?x:1)|0);x=y;y=0;if(x&1){b=Pa()|0;c=f[G>>2]|0;f[G>>2]=0;if(c|0)$Ja(c);H=57;break}d=f[z>>2]|0;e=d+-1|0;g=(e&d|0)==0;if(!g){if(b>>>0>=d>>>0)b=(b>>>0)%(d>>>0)|0}else b=e&b;c=f[(f[I>>2]|0)+(b<<2)>>2]|0;if(!c){h=I+8|0;c=f[G>>2]|0;f[c>>2]=f[h>>2];f[h>>2]=c;f[(f[I>>2]|0)+(b<<2)>>2]=h;b=f[c>>2]|0;if(!b){b=G;w=h;x=h;v=h}else{b=f[b+4>>2]|0;if(!g){if(b>>>0>=d>>>0)b=(b>>>0)%(d>>>0)|0}else b=b&e;f[(f[I>>2]|0)+(b<<2)>>2]=c;b=G;w=h;x=h;v=h}}else{v=f[G>>2]|0;f[v>>2]=f[c>>2];f[c>>2]=v;v=I+8|0;b=G;w=v;x=v}p=(f[A>>2]|0)+1|0;f[A>>2]=p;f[b>>2]=0;q=I+8|0;r=a+4|0;s=a+12|0;t=a+8|0;b=p;a:while(1){if(!b){H=98;break}l=f[q>>2]|0;m=f[l+8>>2]|0;f[G>>2]=m;EJ(I,l);f[E>>2]=m;l=$z(E,4)|0;h=f[r>>2]|0;k=(h|0)==0;b:do if(!k){e=h+-1|0;g=(e&h|0)==0;if(!g)if(l>>>0<h>>>0)c=l;else c=(l>>>0)%(h>>>0)|0;else c=e&l;b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b)H=34;else do{b=f[b>>2]|0;if(!b){H=34;break b}d=f[b+4>>2]|0;if((d|0)!=(l|0)){if(!g){if(d>>>0>=h>>>0)d=(d>>>0)%(h>>>0)|0}else d=d&e;if((d|0)!=(c|0)){H=34;break b}}}while((f[b+8>>2]|0)!=(m|0))}else{c=0;H=34}while(0);if((H|0)==34){H=0;y=0;Ca(77,F|0,a|0,l|0,G|0);p=y;y=0;if(p&1){H=58;break}i=+(((f[s>>2]|0)+1|0)>>>0);j=+n[B>>2];do if(k|i>+(h>>>0)*j){p=(h>>>0<3|(h+-1&h|0)!=0)&1|h<<1;o=~~+X(+(i/j))>>>0;y=0;ja(1942,a|0,(p>>>0<o>>>0?o:p)|0);p=y;y=0;if(p&1){H=41;break a}b=f[r>>2]|0;c=b+-1|0;if(!(c&b)){e=b;c=c&l;break}if(l>>>0<b>>>0){e=b;c=l}else{e=b;c=(l>>>0)%(b>>>0)|0}}else e=h;while(0);b=f[(f[a>>2]|0)+(c<<2)>>2]|0;if(!b){d=f[F>>2]|0;f[d>>2]=f[t>>2];f[t>>2]=d;f[(f[a>>2]|0)+(c<<2)>>2]=t;b=f[d>>2]|0;if(b|0){b=f[b+4>>2]|0;c=e+-1|0;if(c&e){if(b>>>0>=e>>>0)b=(b>>>0)%(e>>>0)|0}else b=b&c;f[(f[a>>2]|0)+(b<<2)>>2]=d}}else{p=f[F>>2]|0;f[p>>2]=f[b>>2];f[b>>2]=p}f[s>>2]=(f[s>>2]|0)+1}p=f[m+40>>2]|0;o=f[m+36>>2]|0;while(1){if((o|0)==(p|0))break;b=f[o>>2]|0;f[F>>2]=b;k=b;c:do if(!(Qt(a,F)|0)){f[E>>2]=b;m=$z(E,4)|0;e=f[z>>2]|0;l=(e|0)==0;d:do if(!l){g=e+-1|0;h=(g&e|0)==0;if(!h)if(m>>>0<e>>>0)c=m;else c=(m>>>0)%(e>>>0)|0;else c=g&m;b=f[(f[I>>2]|0)+(c<<2)>>2]|0;if(b)while(1){b=f[b>>2]|0;if(!b)break d;d=f[b+4>>2]|0;if((d|0)!=(m|0)){do if(h)d=d&g;else{if(d>>>0<e>>>0)break;d=(d>>>0)%(e>>>0)|0}while(0);if((d|0)!=(c|0))break d}if((f[b+8>>2]|0)==(k|0))break c}}else c=0;while(0);y=0;Ca(77,E|0,I|0,m|0,F|0);k=y;y=0;if(k&1){H=94;break a}i=+(((f[A>>2]|0)+1|0)>>>0);j=+n[C>>2];do if(l|i>+(e>>>0)*j){l=(e>>>0<3|(e+-1&e|0)!=0)&1|e<<1;k=~~+X(+(i/j))>>>0;y=0;ja(1942,I|0,(l>>>0<k>>>0?k:l)|0);l=y;y=0;if(l&1){H=82;break a}b=f[z>>2]|0;c=b+-1|0;if(!(c&b)){e=b;c=c&m;break}if(m>>>0<b>>>0){e=b;c=m}else{e=b;c=(m>>>0)%(b>>>0)|0}}while(0);b=f[(f[I>>2]|0)+(c<<2)>>2]|0;if(!b){d=f[E>>2]|0;f[d>>2]=f[w>>2];f[x>>2]=d;f[(f[I>>2]|0)+(c<<2)>>2]=v;b=f[d>>2]|0;if(b|0){b=f[b+4>>2]|0;c=e+-1|0;do if(!(c&e))b=b&c;else{if(b>>>0<e>>>0)break;b=(b>>>0)%(e>>>0)|0}while(0);f[(f[I>>2]|0)+(b<<2)>>2]=d}}else{m=f[E>>2]|0;f[m>>2]=f[b>>2];f[b>>2]=m}f[A>>2]=(f[A>>2]|0)+1}while(0);o=o+4|0}b=f[A>>2]|0}if((H|0)==41){b=Pa()|0;c=f[F>>2]|0;f[F>>2]=0;if(c|0)$Ja(c);H=59}else if((H|0)==58){b=Pa()|0;H=59}else if((H|0)==82){b=Pa()|0;c=f[E>>2]|0;f[E>>2]=0;if(c|0)$Ja(c);H=95}else if((H|0)==94){b=Pa()|0;H=95}else if((H|0)==98){Sma(I);u=D;return}}while(0);Sma(I);Sma(a);$a(b|0)}function ne(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;n=u;u=u+96|0;o=n+72|0;p=n+48|0;l=n+36|0;h=n+24|0;k=n+12|0;j=n;do if(((((a|0)!=(c|0)?(b[a>>0]|0)==77:0)?(q=a+1|0,e=ic(q,c,d)|0,(e|0)!=(q|0)):0)?(m=ic(e,c,d)|0,(m|0)!=(e|0)):0)?(i=d+4|0,g=f[i>>2]|0,((g-(f[d>>2]|0)|0)/24|0)>>>0>=2):0){ZL(o,g+-24|0);a=f[i>>2]|0;c=a+-24|0;e=a;while(1){if((e|0)==(c|0))break;q=e+-24|0;f[i>>2]=q;Xka(q);e=f[i>>2]|0}ZL(p,a+-48|0);g=o+12|0;a:do if((b[((b[g+11>>0]|0)<0?f[g>>2]|0:g)>>0]|0)==40){y=0;ua(165,o|0,72085)|0;q=y;y=0;if(q&1)a=Pa()|0;else{f[k>>2]=f[o>>2];f[k+4>>2]=f[o+4>>2];f[k+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}y=0;ja(2054,j|0,p|0);q=y;y=0;if(q&1)a=Pa()|0;else{q=b[j+11>>0]|0;d=q<<24>>24<0;y=0;oa(73,k|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:q&255)|0)|0;q=y;y=0;do if(q&1)a=Pa()|0;else{f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,h|0,73507)|0;q=y;y=0;if(q&1){a=Pa()|0;zta(h);break}f[l>>2]=f[h>>2];f[l+4>>2]=f[h+4>>2];f[l+8>>2]=f[h+8>>2];a=0;while(1){if((a|0)==3)break;f[h+(a<<2)>>2]=0;a=a+1|0}a=f[i>>2]|0;e=a+-24|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-20>>2]=0;a=e}else{SBa(e,0);b[c>>0]=0;a=e}Sq(e);f[a>>2]=f[l>>2];f[a+4>>2]=f[l+4>>2];f[a+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}zta(l);zta(h);zta(j);zta(k);y=0;oa(77,g|0,0,72083)|0;q=y;y=0;if(q&1){a=Pa()|0;c=81;break a}f[l>>2]=f[g>>2];f[l+4>>2]=f[g+4>>2];f[l+8>>2]=f[g+8>>2];a=0;while(1){if((a|0)==3)break;f[g+(a<<2)>>2]=0;a=a+1|0}a=f[i>>2]|0;e=a+-12|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-8>>2]=0;a=e}else{SBa(e,0);b[c>>0]=0;a=e}Sq(e);f[a>>2]=f[l>>2];f[a+4>>2]=f[l+4>>2];f[a+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}zta(l);c=80;break a}while(0);zta(j)}zta(k)}c=81}else{y=0;ua(165,o|0,72117)|0;q=y;y=0;if(q&1)a=Pa()|0;else{f[k>>2]=f[o>>2];f[k+4>>2]=f[o+4>>2];f[k+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}y=0;ja(2054,j|0,p|0);q=y;y=0;if(q&1)a=Pa()|0;else{q=b[j+11>>0]|0;d=q<<24>>24<0;y=0;oa(73,k|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:q&255)|0)|0;q=y;y=0;do if(q&1)a=Pa()|0;else{f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,h|0,73507)|0;q=y;y=0;if(q&1){a=Pa()|0;zta(h);break}f[l>>2]=f[h>>2];f[l+4>>2]=f[h+4>>2];f[l+8>>2]=f[h+8>>2];a=0;while(1){if((a|0)==3)break;f[h+(a<<2)>>2]=0;a=a+1|0}a=f[i>>2]|0;e=a+-24|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-20>>2]=0;a=e}else{SBa(e,0);b[c>>0]=0;a=e}Sq(e);f[a>>2]=f[l>>2];f[a+4>>2]=f[l+4>>2];f[a+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}zta(l);zta(h);zta(j);zta(k);a=f[i>>2]|0;e=a+-12|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-8>>2]=0;a=e}else{SBa(e,0);b[c>>0]=0;a=e}Sq(e);f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];a=0;while(1){if((a|0)==3){c=80;break a}f[g+(a<<2)>>2]=0;a=a+1|0}}while(0);zta(j)}zta(k)}c=81}while(0);if((c|0)==80){Xka(p);Xka(o);a=m;break}else if((c|0)==81){Xka(p);Xka(o);$a(a|0)}}while(0);u=n;return a|0}function oe(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;z=u;u=u+48|0;A=z+24|0;w=z+16|0;s=z+4|0;r=z;t=c+4|0;v=f[t>>2]|0;e=f[c>>2]|0;h=v;a:do if(((v-e|0)/12|0)>>>0>=2){i=a+108|0;while(1){if((e|0)==(h|0))break;g=f[e>>2]|0;if(g|0?QZ(i,g)|0:0)break a;if(QZ(i,f[e+4>>2]|0)|0)break a;Z3(e);e=e+12|0}f[A>>2]=0;v=A+4|0;f[v>>2]=0;f[A+8>>2]=0;l=s+4|0;m=s+8|0;n=r+4|0;o=A+8|0;q=0;p=0;b:while(1){j=f[c>>2]|0;i=f[t>>2]|0;e=0;h=j;while(1){if((h|0)==(i|0))break;g=f[h+4>>2]|0;if(!g){k=12;break b}k=q>>>0<(yca(f[h>>2]|0,g)|0)>>>0;e=e|k^1;if(k)h=h+12|0;else break}if(e){k=38;break}y=0;j=oa(63,f[j>>2]|0,f[j+4>>2]|0,q|0)|0;k=y;y=0;if(k&1){k=18;break}f[w>>2]=j;i=f[t>>2]|0;k=j;e=0;h=f[c>>2]|0;while(1){if((h|0)==(i|0))break;y=0;g=oa(63,f[h>>2]|0,f[h+4>>2]|0,q|0)|0;B=y;y=0;if(B&1){k=22;break b}y=0;g=ua(130,j|0,g|0)|0;B=y;y=0;if(B&1){k=22;break b}e=e|g^1;if(g)h=h+12|0;else break}if(e){k=34;break}f[r>>2]=k;f[s>>2]=0;f[l>>2]=0;f[m>>2]=0;y=0;ja(179,s|0,1);B=y;y=0;if(B&1){k=27;break}aZ(s,r,n);y=0;e=ua(129,s|0,d|0)|0;B=y;y=0;if(B&1){k=28;break}E4(s);if(!e){k=34;break}e=f[v>>2]|0;if((e|0)==(f[o>>2]|0)){y=0;ja(497,A|0,w|0);B=y;y=0;if(B&1){k=36;break}}else{f[e>>2]=k;f[v>>2]=(f[v>>2]|0)+4}y=0;e=la(196,j|0)|0;B=y;y=0;if(B&1){k=36;break}q=q+1|0;p=e+p|0}if((k|0)==12){y=0;Ca(52,49237,49135,293,49248);y=0;e=Pa()|0}else if((k|0)==18)e=Pa()|0;else if((k|0)==22){e=Pa()|0;k=37}else if((k|0)==27){e=Pa()|0;E4(s);k=29}else if((k|0)==28){e=Pa()|0;E4(s);k=29}else if((k|0)==34)k=38;else if((k|0)==36){e=Pa()|0;k=37}c:do if((k|0)==29)k=37;else if((k|0)==38){d:do if(p|0){do if(p>>>0<3){h=f[t>>2]|0;e=0;g=f[c>>2]|0;while(1){if((g|0)==(h|0))break;B=q>>>0<((gKa(f[(f[g+4>>2]|0)+16>>2]|0)|0)+-1|0)>>>0;e=e|B^1;if(B)g=g+12|0;else break}if(!e){e=f[a+44>>2]|0;if((d|0)!=(f[e+-4>>2]|0)){y=0;Ca(52,49272,49135,334,49248);y=0;e=Pa()|0;break c}g=f[a+40>>2]|0;e=e-g>>2;if(e>>>0<2)break d;e=xAa(f[g+(e+-2<<2)>>2]|0)|0;if(!e)break d;j=e+12|0;Bwa(w,j);iua(s,j);j=w+4|0;i=f[s>>2]|0;h=f[s+4>>2]|0;e=0;while(1){if(!(Cpa(f[w>>2]|0,f[j>>2]|0,i,h)|0)){k=53;break}y=0;g=la(156,w|0)|0;B=y;y=0;if(B&1){k=54;break}B=(f[g>>2]|0)==(d|0);e=e|B;if(B){k=53;break}bva(w)}if((k|0)==53)if(e)break;else break d;else if((k|0)==54){e=Pa()|0;break c}}}while(0);j=f[t>>2]|0;h=f[c>>2]|0;e:while(1){if((h|0)==(j|0))break;i=h+4|0;y=0;ja(1724,a|0,f[i>>2]|0);B=y;y=0;if(B&1){k=70;break}if(!(tJa(f[h>>2]|0)|0)){y=0;e=la(166,(f[i>>2]|0)+12|0)|0;B=y;y=0;if(B&1){k=70;break}e=f[e>>2]|0;y=0;ia(374,(f[i>>2]|0)+12|0);B=y;y=0;if(B&1){k=70;break}}else e=0;g=0;while(1){if(g>>>0>=(f[v>>2]|0)-(f[A>>2]|0)>>2>>>0)break;y=0;ia(374,(f[i>>2]|0)+12|0);B=y;y=0;if(B&1){k=70;break e}g=g+1|0}if(!(tJa(f[h>>2]|0)|0)?(y=0,ja(596,(f[i>>2]|0)+12|0,e|0),B=y,y=0,B&1):0){k=70;break}y=0;ia(373,f[i>>2]|0);B=y;y=0;if(B&1){k=70;break}h=h+12|0}if((k|0)==70){e=Pa()|0;break c}b[a+56>>0]=1;h=f[a+36>>2]|0;gKa(h)|0;VBa(w,h);y=0;h=ua(87,f[w>>2]|0,0)|0;B=y;y=0;f:do if(!(B&1)?(x=h+12|0,y=0,ja(596,x|0,d|0),B=y,y=0,!(B&1)):0){e=f[v>>2]|0;while(1){if((f[A>>2]|0)==(e|0))break;y=0;ja(596,x|0,f[e+-4>>2]|0);B=y;y=0;if(B&1)break f;g=f[v>>2]|0;e=0;while(1){if((e|0)==-1)break;B=e+-1|0;f[v>>2]=g+(B<<2);e=B}e=g+-4|0}e=f[d+4>>2]|0;y=0;ia(373,d|0);B=y;y=0;if(!(B&1)?(y=0,ja(1725,h|0,e|0),B=y,y=0,!(B&1)):0){jva(f[a+16>>2]|0,h)|0;break d}}while(0);e=Pa()|0;break c}while(0);E4(A);break a}while(0);E4(A);$a(e|0)}while(0);u=z;return}function pe(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;z=u;u=u+48|0;A=z+24|0;w=z+16|0;s=z+4|0;r=z;t=c+4|0;v=f[t>>2]|0;e=f[c>>2]|0;h=v;a:do if(((v-e|0)/12|0)>>>0>=2){i=a+108|0;while(1){if((e|0)==(h|0))break;g=f[e>>2]|0;if(g|0?QZ(i,g)|0:0)break a;if(QZ(i,f[e+4>>2]|0)|0)break a;Z3(e);e=e+12|0}f[A>>2]=0;v=A+4|0;f[v>>2]=0;f[A+8>>2]=0;l=s+4|0;m=s+8|0;n=r+4|0;o=A+8|0;q=0;p=0;b:while(1){j=f[c>>2]|0;i=f[t>>2]|0;e=0;h=j;while(1){if((h|0)==(i|0))break;g=f[h+4>>2]|0;if(!g){k=12;break b}k=q>>>0<(yca(f[h>>2]|0,g)|0)>>>0;e=e|k^1;if(k)h=h+12|0;else break}if(e){k=38;break}y=0;j=oa(62,f[j>>2]|0,f[j+4>>2]|0,q|0)|0;k=y;y=0;if(k&1){k=18;break}f[w>>2]=j;i=f[t>>2]|0;k=j;e=0;h=f[c>>2]|0;while(1){if((h|0)==(i|0))break;y=0;g=oa(62,f[h>>2]|0,f[h+4>>2]|0,q|0)|0;B=y;y=0;if(B&1){k=22;break b}y=0;g=ua(130,j|0,g|0)|0;B=y;y=0;if(B&1){k=22;break b}e=e|g^1;if(g)h=h+12|0;else break}if(e){k=34;break}f[r>>2]=k;f[s>>2]=0;f[l>>2]=0;f[m>>2]=0;y=0;ja(179,s|0,1);B=y;y=0;if(B&1){k=27;break}aZ(s,r,n);y=0;e=ua(129,s|0,d|0)|0;B=y;y=0;if(B&1){k=28;break}E4(s);if(!e){k=34;break}e=f[v>>2]|0;if((e|0)==(f[o>>2]|0)){y=0;ja(497,A|0,w|0);B=y;y=0;if(B&1){k=36;break}}else{f[e>>2]=k;f[v>>2]=(f[v>>2]|0)+4}y=0;e=la(196,j|0)|0;B=y;y=0;if(B&1){k=36;break}q=q+1|0;p=e+p|0}if((k|0)==12){y=0;Ca(52,49237,49135,293,49248);y=0;e=Pa()|0}else if((k|0)==18)e=Pa()|0;else if((k|0)==22){e=Pa()|0;k=37}else if((k|0)==27){e=Pa()|0;E4(s);k=29}else if((k|0)==28){e=Pa()|0;E4(s);k=29}else if((k|0)==34)k=38;else if((k|0)==36){e=Pa()|0;k=37}c:do if((k|0)==29)k=37;else if((k|0)==38){d:do if(p|0){do if(p>>>0<3){h=f[t>>2]|0;e=0;g=f[c>>2]|0;while(1){if((g|0)==(h|0))break;B=q>>>0<((gKa(f[(f[g+4>>2]|0)+16>>2]|0)|0)+-1|0)>>>0;e=e|B^1;if(B)g=g+12|0;else break}if(!e){e=f[a+44>>2]|0;if((d|0)!=(f[e+-4>>2]|0)){y=0;Ca(52,49272,49135,334,49248);y=0;e=Pa()|0;break c}g=f[a+40>>2]|0;e=e-g>>2;if(e>>>0<2)break d;e=xAa(f[g+(e+-2<<2)>>2]|0)|0;if(!e)break d;j=e+12|0;Bwa(w,j);iua(s,j);j=w+4|0;i=f[s>>2]|0;h=f[s+4>>2]|0;e=0;while(1){if(!(Cpa(f[w>>2]|0,f[j>>2]|0,i,h)|0)){k=53;break}y=0;g=la(156,w|0)|0;B=y;y=0;if(B&1){k=54;break}B=(f[g>>2]|0)==(d|0);e=e|B;if(B){k=53;break}bva(w)}if((k|0)==53)if(e)break;else break d;else if((k|0)==54){e=Pa()|0;break c}}}while(0);j=f[t>>2]|0;h=f[c>>2]|0;e:while(1){if((h|0)==(j|0))break;i=h+4|0;y=0;ja(1724,a|0,f[i>>2]|0);B=y;y=0;if(B&1){k=70;break}if(!(tJa(f[h>>2]|0)|0)){y=0;e=la(166,(f[i>>2]|0)+12|0)|0;B=y;y=0;if(B&1){k=70;break}e=f[e>>2]|0;y=0;ia(374,(f[i>>2]|0)+12|0);B=y;y=0;if(B&1){k=70;break}}else e=0;g=0;while(1){if(g>>>0>=(f[v>>2]|0)-(f[A>>2]|0)>>2>>>0)break;y=0;ia(374,(f[i>>2]|0)+12|0);B=y;y=0;if(B&1){k=70;break e}g=g+1|0}if(!(tJa(f[h>>2]|0)|0)?(y=0,ja(596,(f[i>>2]|0)+12|0,e|0),B=y,y=0,B&1):0){k=70;break}y=0;ia(373,f[i>>2]|0);B=y;y=0;if(B&1){k=70;break}h=h+12|0}if((k|0)==70){e=Pa()|0;break c}b[a+56>>0]=1;h=f[a+36>>2]|0;gKa(h)|0;VBa(w,h);y=0;h=ua(87,f[w>>2]|0,0)|0;B=y;y=0;f:do if(!(B&1)?(x=h+12|0,y=0,ja(596,x|0,d|0),B=y,y=0,!(B&1)):0){e=f[v>>2]|0;while(1){if((f[A>>2]|0)==(e|0))break;y=0;ja(596,x|0,f[e+-4>>2]|0);B=y;y=0;if(B&1)break f;g=f[v>>2]|0;e=0;while(1){if((e|0)==-1)break;B=e+-1|0;f[v>>2]=g+(B<<2);e=B}e=g+-4|0}B=f[d+4>>2]|0;qO(d);y=0;ja(1725,h|0,B|0);B=y;y=0;if(!(B&1)){jva(f[a+16>>2]|0,h)|0;break d}}while(0);e=Pa()|0;break c}while(0);E4(A);break a}while(0);E4(A);$a(e|0)}while(0);u=z;return}function qe(a,b){a=a|0;b=b|0;c3(f[a>>2]|0,40)|0;do switch(f[b+8>>2]|0){case 0:{Vea(f[a>>2]|0,37713)|0;break}case 1:{Vea(f[a>>2]|0,37721)|0;break}case 2:{Vea(f[a>>2]|0,37729)|0;break}case 3:{Vea(f[a>>2]|0,37737)|0;break}case 4:{Vea(f[a>>2]|0,37747)|0;break}case 5:{Vea(f[a>>2]|0,37757)|0;break}case 6:{Vea(f[a>>2]|0,37767)|0;break}case 7:{Vea(f[a>>2]|0,37777)|0;break}case 8:{Vea(f[a>>2]|0,37785)|0;break}case 9:{Vea(f[a>>2]|0,37792)|0;break}case 10:{Vea(f[a>>2]|0,37800)|0;break}case 11:{Vea(f[a>>2]|0,37808)|0;break}case 12:{Vea(f[a>>2]|0,37818)|0;break}case 13:{Vea(f[a>>2]|0,37828)|0;break}case 14:{Vea(f[a>>2]|0,37837)|0;break}case 15:{Vea(f[a>>2]|0,37846)|0;break}case 16:{Vea(f[a>>2]|0,37853)|0;break}case 17:{Vea(f[a>>2]|0,37860)|0;break}case 18:{Vea(f[a>>2]|0,37869)|0;break}case 19:{Vea(f[a>>2]|0,37878)|0;break}case 20:{Vea(f[a>>2]|0,37887)|0;break}case 21:{Vea(f[a>>2]|0,37896)|0;break}case 22:{Vea(f[a>>2]|0,37905)|0;break}case 23:{Vea(f[a>>2]|0,37914)|0;break}case 24:{Vea(f[a>>2]|0,37923)|0;break}case 25:{Vea(f[a>>2]|0,37932)|0;break}case 26:{Vea(f[a>>2]|0,37940)|0;break}case 27:{Vea(f[a>>2]|0,37948)|0;break}case 28:{Vea(f[a>>2]|0,37956)|0;break}case 29:{Vea(f[a>>2]|0,37966)|0;break}case 30:{Vea(f[a>>2]|0,37976)|0;break}case 31:{Vea(f[a>>2]|0,37986)|0;break}case 32:{Vea(f[a>>2]|0,37996)|0;break}case 33:{Vea(f[a>>2]|0,38004)|0;break}case 34:{Vea(f[a>>2]|0,38011)|0;break}case 35:{Vea(f[a>>2]|0,38019)|0;break}case 36:{Vea(f[a>>2]|0,38027)|0;break}case 37:{Vea(f[a>>2]|0,38037)|0;break}case 38:{Vea(f[a>>2]|0,38047)|0;break}case 39:{Vea(f[a>>2]|0,38056)|0;break}case 40:{Vea(f[a>>2]|0,38065)|0;break}case 41:{Vea(f[a>>2]|0,38072)|0;break}case 42:{Vea(f[a>>2]|0,38079)|0;break}case 43:{Vea(f[a>>2]|0,38088)|0;break}case 44:{Vea(f[a>>2]|0,38097)|0;break}case 45:{Vea(f[a>>2]|0,38106)|0;break}case 46:{Vea(f[a>>2]|0,38115)|0;break}case 47:{Vea(f[a>>2]|0,38124)|0;break}case 48:{Vea(f[a>>2]|0,38133)|0;break}case 49:{Vea(f[a>>2]|0,38142)|0;break}case 50:{Vea(f[a>>2]|0,38151)|0;break}case 51:{Vea(f[a>>2]|0,38159)|0;break}case 52:{Vea(f[a>>2]|0,38167)|0;break}case 53:{Vea(f[a>>2]|0,38175)|0;break}case 54:{Vea(f[a>>2]|0,38183)|0;break}case 55:{Vea(f[a>>2]|0,38196)|0;break}case 56:{Vea(f[a>>2]|0,38204)|0;break}case 57:{Vea(f[a>>2]|0,38212)|0;break}case 58:{Vea(f[a>>2]|0,38219)|0;break}case 59:{Vea(f[a>>2]|0,38226)|0;break}case 60:{Vea(f[a>>2]|0,38233)|0;break}case 61:{Vea(f[a>>2]|0,38240)|0;break}case 62:{Vea(f[a>>2]|0,38247)|0;break}case 63:{Vea(f[a>>2]|0,38254)|0;break}case 64:{Vea(f[a>>2]|0,38262)|0;break}case 65:{Vea(f[a>>2]|0,38270)|0;break}case 66:{Vea(f[a>>2]|0,38278)|0;break}case 67:{Vea(f[a>>2]|0,38286)|0;break}case 68:{Vea(f[a>>2]|0,38299)|0;break}case 69:{Vea(f[a>>2]|0,38307)|0;break}case 70:{Vea(f[a>>2]|0,38315)|0;break}case 71:{Vea(f[a>>2]|0,38322)|0;break}case 72:{Vea(f[a>>2]|0,38329)|0;break}case 73:{Vea(f[a>>2]|0,38336)|0;break}case 74:{Vea(f[a>>2]|0,38343)|0;break}case 75:{Vea(f[a>>2]|0,38350)|0;break}default:Ka()}while(0);zea(a);kF(a,f[b+12>>2]|0);kF(a,f[b+16>>2]|0);x_(a);return}function re(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0.0,i=0.0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;v=u;u=u+32|0;r=v+16|0;t=v+4|0;s=v;f[s>>2]=c;if(!(b[73976]|0)){f[18712]=0;f[18713]=0;f[18714]=0;f[18715]=0;n[18716]=1.0;hb(348,74848,x|0)|0;p=73976;f[p>>2]=1;f[p+4>>2]=0}c=Vv(f[18712]|0,f[18713]|0,c)|0;a:do if(!c){if((b[73984]|0)==0?twa(73984)|0:0)tb(332,74868,x|0)|0;Bsa(74868);if((b[73992]|0)==0?twa(73992)|0:0){f[18724]=0;f[18725]=0;f[18726]=0;f[18727]=0;n[18728]=1.0;tb(348,74896,x|0)|0}g=f[18725]|0;c=f[s>>2]|0;e=Vv(f[18724]|0,g,c)|0;b:do if(!e){c:do if(d){k=c;o=g}else{if((b[74e3]|0)==0?twa(74e3)|0:0){f[18729]=0;f[18730]=0;f[18731]=0;tb(349,74916,x|0)|0}y=0;ja(74,r|0,s|0);p=y;y=0;d:do if(p&1)c=Pa()|0;else{c=f[18730]|0;do if(c>>>0>=(f[18731]|0)>>>0){y=0;ia(350,r|0);p=y;y=0;if(p&1){c=Pa()|0;e=f[r>>2]|0;f[r>>2]=0;if(!e)break d;zta(e);$Ja(e);break d}else{c=f[r>>2]|0;f[r>>2]=0;if(!c)break;zta(c);$Ja(c);break}}else{q=f[r>>2]|0;f[r>>2]=0;f[c>>2]=q;f[18730]=c+4;f[r>>2]=0}while(0);c=f[(f[18730]|0)+-4>>2]|0;if((b[c+11>>0]|0)<0)c=f[c>>2]|0;f[s>>2]=c;k=c;o=f[18725]|0;break c}while(0);break b}while(0);c=k;p=aCa(k)|0;m=(o|0)==0;e:do if(!m){j=o+-1|0;l=(j&o|0)==0;if(!l)if(p>>>0<o>>>0)g=p;else g=(p>>>0)%(o>>>0)|0;else g=j&p;e=f[(f[18724]|0)+(g<<2)>>2]|0;if(e)while(1){e=f[e>>2]|0;if(!e)break e;d=f[e+4>>2]|0;if((d|0)!=(p|0)){if(!l){if(d>>>0>=o>>>0)d=(d>>>0)%(o>>>0)|0}else d=d&j;if((d|0)!=(g|0))break e}if(Eza(f[e+8>>2]|0,k)|0){q=65;break b}}}else g=0;while(0);y=0;Ca(51,r|0,74896,p|0,s|0);q=y;y=0;if(q&1)q=29;else{h=+(((f[18727]|0)+1|0)>>>0);i=+n[18728];do if(m|h>+(o>>>0)*i){q=(o>>>0<3|(o+-1&o|0)!=0)&1|o<<1;o=~~+X(+(h/i))>>>0;y=0;ja(75,74896,(q>>>0<o>>>0?o:q)|0);q=y;y=0;if(q&1){c=Pa()|0;e=f[r>>2]|0;f[r>>2]=0;if(e|0)$Ja(e);q=30;break b}e=f[18725]|0;g=e+-1|0;if(!(g&e)){j=e;g=g&p;break}if(p>>>0<e>>>0){j=e;g=p}else{j=e;g=(p>>>0)%(e>>>0)|0}}else j=o;while(0);e=f[(f[18724]|0)+(g<<2)>>2]|0;if(!e){d=f[r>>2]|0;f[d>>2]=f[18726];f[18726]=d;f[(f[18724]|0)+(g<<2)>>2]=74904;e=f[d>>2]|0;if(!e)e=r;else{e=f[e+4>>2]|0;g=j+-1|0;if(g&j){if(e>>>0>=j>>>0)e=(e>>>0)%(j>>>0)|0}else e=e&g;f[(f[18724]|0)+(e<<2)>>2]=d;e=r}}else{q=f[r>>2]|0;f[q>>2]=f[e>>2];f[e>>2]=q;e=r}f[18727]=(f[18727]|0)+1;f[e>>2]=0;q=65}}else{k=f[e+8>>2]|0;f[s>>2]=k;c=k;q=65}while(0);f:do if((q|0)==65){p=aCa(k)|0;j=f[18713]|0;o=(j|0)==0;g:do if(!o){l=j+-1|0;m=(l&j|0)==0;if(!m)if(p>>>0<j>>>0)g=p;else g=(p>>>0)%(j>>>0)|0;else g=l&p;e=f[(f[18712]|0)+(g<<2)>>2]|0;if(!e)q=79;else do{e=f[e>>2]|0;if(!e){q=79;break g}d=f[e+4>>2]|0;if((d|0)!=(p|0)){if(!m){if(d>>>0>=j>>>0)d=(d>>>0)%(j>>>0)|0}else d=d&l;if((d|0)!=(g|0)){q=79;break g}}}while(!(Eza(f[e+8>>2]|0,k)|0))}else{g=0;q=79}while(0);if((q|0)==79){y=0;Ca(51,t|0,74848,p|0,s|0);s=y;y=0;if(s&1){q=29;break}h=+(((f[18715]|0)+1|0)>>>0);i=+n[18716];do if(o|h>+(j>>>0)*i){s=(j>>>0<3|(j+-1&j|0)!=0)&1|j<<1;r=~~+X(+(h/i))>>>0;y=0;ja(75,74848,(s>>>0<r>>>0?r:s)|0);s=y;y=0;if(s&1){c=Pa()|0;e=f[t>>2]|0;f[t>>2]=0;if(e|0)$Ja(e);q=30;break f}e=f[18713]|0;g=e+-1|0;if(!(g&e)){j=e;g=g&p;break}if(p>>>0<e>>>0){j=e;g=p}else{j=e;g=(p>>>0)%(e>>>0)|0}}while(0);e=f[(f[18712]|0)+(g<<2)>>2]|0;if(!e){d=f[t>>2]|0;f[d>>2]=f[18714];f[18714]=d;f[(f[18712]|0)+(g<<2)>>2]=74856;e=f[d>>2]|0;if(!e)e=t;else{e=f[e+4>>2]|0;g=j+-1|0;if(g&j){if(e>>>0>=j>>>0)e=(e>>>0)%(j>>>0)|0}else e=e&g;f[(f[18712]|0)+(e<<2)>>2]=d;e=t}}else{s=f[t>>2]|0;f[s>>2]=f[e>>2];f[e>>2]=s;e=t}f[18715]=(f[18715]|0)+1;f[e>>2]=0}$W(74868);break a}while(0);if((q|0)==29){c=Pa()|0;q=30}$W(74868);$a(c|0)}else{c=f[c+8>>2]|0;f[s>>2]=c}while(0);f[a>>2]=c;u=v;return}function se(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+64|0;m=o+48|0;i=o+36|0;k=o+24|0;l=o+12|0;j=o;a:do if((c-a|0)>2){h=a+2|0;e=a+1|0;switch(b[a>>0]|0){case 84:break;case 71:switch(b[e>>0]|0){case 86:{g=Yg(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73915)|0;a=g;n=71;break a}case 82:{g=Yg(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73935)|0;a=g;n=71;break a}default:{n=71;break a}}default:{n=71;break a}}switch(b[e>>0]|0){case 86:{g=ic(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73764)|0;a=g;n=71;break a}case 84:{g=ic(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73776)|0;a=g;n=71;break a}case 73:{g=ic(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73785)|0;a=g;n=71;break a}case 83:{g=ic(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73799)|0;a=g;n=71;break a}case 99:{e=yC(h,c)|0;if((e|0)==(h|0)){n=71;break a}h=yC(e,c)|0;if((h|0)==(e|0)){n=71;break a}g=Fc(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;x4(e+-24|0,0,73818)|0;a=g;n=71;break a}case 67:{g=ic(h,c,d)|0;if((g|0)==(h|0)){n=71;break a}e=pL(g,c)|0;if((e|0)==(g|0)|(e|0)==(c|0)){n=71;break a}if((b[e>>0]|0)!=95){n=71;break a}g=e+1|0;h=ic(g,c,d)|0;if((h|0)==(g|0)){n=71;break a}g=d+4|0;e=f[g>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(m,e+-24|0);e=f[g>>2]|0;a=e+-24|0;while(1){if((e|0)==(a|0))break;n=e+-24|0;f[g>>2]=n;Xka(n);e=f[g>>2]|0}y=0;oa(77,m|0,0,73845)|0;n=y;y=0;if(n&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,l|0,73870)|0;n=y;y=0;if(n&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ja(2054,j|0,(f[g>>2]|0)+-24|0);n=y;y=0;do if(n&1)a=Pa()|0;else{n=b[j+11>>0]|0;d=n<<24>>24<0;y=0;oa(73,k|0,(d?f[j>>2]|0:j)|0,(d?f[j+4>>2]|0:n&255)|0)|0;n=y;y=0;if(n&1){a=Pa()|0;zta(j);break}f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;g=a+-24|0;e=g+11|0;if((b[e>>0]|0)<0){SBa(f[g>>2]|0,0);f[a+-20>>2]=0;a=g}else{SBa(g,0);b[e>>0]=0;a=g}Sq(g);f[a>>2]=f[i>>2];f[a+4>>2]=f[i+4>>2];f[a+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}zta(i);zta(j);zta(k);zta(l);zta(m);a=h;n=71;break a}while(0);zta(k)}zta(l)}zta(m);$a(a|0)}default:{g=yC(e,c)|0;do if((g|0)!=(e|0)){e=Fc(g,c,d)|0;if((e|0)!=(g|0)){g=f[d+4>>2]|0;if((f[d>>2]|0)!=(g|0)){g=g+-24|0;if((b[h>>0]|0)==118){x4(g,0,73875)|0;g=0;break}else{x4(g,0,73893)|0;g=0;break}}else{g=1;e=a}}else{g=0;e=a}}else{g=3;e=a}while(0);switch(g&3){case 3:case 0:{a=e;n=71;break a}default:{}}if(!g){a=e;n=71;break a}else break a}}}else n=71;while(0);u=o;return a|0}function te(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;D=u;u=u+48|0;C=D+40|0;g=D+36|0;t=D+32|0;v=D+28|0;w=D+20|0;x=D+12|0;z=D+24|0;A=D+16|0;B=D+8|0;q=D+4|0;r=D;s=f[a>>2]|0;do if((f[s+40>>2]|0)!=(f[s+36>>2]|0)){s=a+12|0;do if(b[s>>0]|0){c=Vea(76852,59394)|0;Axa(C,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[C>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,p=y,y=0,!(p&1)):0){pza(C);jn(c,e)|0;Yp(c)|0;break}D=Pa()|0;pza(C);$a(D|0)}while(0);p=uW(a,10)|0;m=f[a>>2]|0;m=(f[m+40>>2]|0)-(f[m+36>>2]|0)>>2;n=a+4|0;o=f[n>>2]|0;PDa(g,m);Un(o,f[g>>2]|0)|0;o=a+8|0;k=a+72|0;l=a+84|0;j=0;while(1){if(j>>>0>=m>>>0){c=9;break}if(b[s>>0]|0){c=Vea(76852,59412)|0;d=f[n>>2]|0;d=vj(c,(f[d+4>>2]|0)-(f[d>>2]|0)|0)|0;Axa(C,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[C>>2]|0,77556)|0;i=y;y=0;if(i&1){c=13;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;i=y;y=0;if(i&1){c=13;break}pza(C);jn(d,c)|0;Yp(d)|0}h=P4(a)|0;i=f[n>>2]|0;i=(f[i+4>>2]|0)-(f[i>>2]|0)|0;d=f[(f[(f[a>>2]|0)+36>>2]|0)+(j<<2)>>2]|0;f[o>>2]=d;MY(k);NV(l);if(b[s>>0]|0){e=Vea(76852,59425)|0;e=K2(e,f[d>>2]|0)|0;Axa(C,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[C>>2]|0,77556)|0;g=y;y=0;if(g&1){c=18;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;g=y;y=0;if(g&1){c=18;break}pza(C);jn(e,c)|0;Yp(e)|0}Tg(a,d);g=f[n>>2]|0;f[C>>2]=1;e=sM(l,C)|0;e=(f[e>>2]|0)!=0&1;f[v>>2]=2;c=sM(l,v)|0;e=((f[c>>2]|0)!=0&1)+e|0;f[w>>2]=3;c=sM(l,w)|0;c=e+((f[c>>2]|0)!=0&1)|0;f[x>>2]=4;e=sM(l,x)|0;PDa(t,c+((f[e>>2]|0)!=0&1)|0);Un(g,f[t>>2]|0)|0;f[C>>2]=1;g=sM(l,C)|0;if(f[g>>2]|0){g=f[n>>2]|0;f[C>>2]=1;e=sM(l,C)|0;PDa(z,f[e>>2]|0);g=Un(g,f[z>>2]|0)|0;Ln(g,GU(1)|0)|0}f[C>>2]=2;g=sM(l,C)|0;if(f[g>>2]|0){g=f[n>>2]|0;f[C>>2]=2;e=sM(l,C)|0;PDa(A,f[e>>2]|0);g=Un(g,f[A>>2]|0)|0;Ln(g,GU(2)|0)|0}f[C>>2]=3;g=sM(l,C)|0;if(f[g>>2]|0){g=f[n>>2]|0;f[C>>2]=3;e=sM(l,C)|0;PDa(B,f[e>>2]|0);g=Un(g,f[B>>2]|0)|0;Ln(g,GU(3)|0)|0}f[C>>2]=4;g=sM(l,C)|0;if(f[g>>2]|0){g=f[n>>2]|0;f[C>>2]=4;e=sM(l,C)|0;PDa(q,f[e>>2]|0);g=Un(g,f[q>>2]|0)|0;Ln(g,GU(4)|0)|0}XT(a,f[d+36>>2]|0);Zq(f[n>>2]|0,11)|0;c=f[n>>2]|0;g=(f[c+4>>2]|0)-(f[c>>2]|0)-i|0;if(b[s>>0]|0){c=Vea(vj(Vea(vj(Vea(76852,59433)|0,g)|0,59445)|0,h)|0,59459)|0;d=f[n>>2]|0;d=vj(c,(f[d+4>>2]|0)-(f[d>>2]|0)|0)|0;Axa(C,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[C>>2]|0,77556)|0;e=y;y=0;if(e&1){c=31;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;e=y;y=0;if(e&1){c=31;break}pza(C);jn(d,c)|0;Yp(d)|0;c=f[n>>2]|0}PDa(r,g);e=Et(c,h,f[r>>2]|0)|0;if((e|0)!=5){if(e>>>0>=5){c=35;break}c=f[n>>2]|0;d=f[c>>2]|0;if(g){S0(d+(e+h)|0,d+i|0,g|0)|0;c=f[n>>2]|0}WO(c,e+-5+(f[c+4>>2]|0)-(f[c>>2]|0)|0)}j=j+1|0}if((c|0)==9){f[o>>2]=0;KE(a,p);break}else if((c|0)==13){D=Pa()|0;pza(C);$a(D|0)}else if((c|0)==18){D=Pa()|0;pza(C);$a(D|0)}else if((c|0)==31){D=Pa()|0;pza(C);$a(D|0)}else if((c|0)==35)Na(58914,54283,282,59477)}while(0);u=D;return}function ue(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;B=u;u=u+48|0;w=B+36|0;x=B+32|0;t=B+16|0;i=B;h=B+28|0;z=B+12|0;VBa(x,c);A=nV(20)|0;_pa(A);f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(45981)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;e=i}else{v=g+16&-16;e=nV(v)|0;f[i>>2]=e;f[i+8>>2]=v|-2147483648;f[i+4>>2]=g}Pta(e,45981,g)|0;SBa(e+g|0,0);y=0;ua(50,i|0,f[a>>2]|0)|0;v=y;y=0;a:do if(v&1){e=Pa()|0;j=36}else{f[t>>2]=f[i>>2];f[t+4>>2]=f[i+4>>2];f[t+8>>2]=f[i+8>>2];e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}y=0;ja(582,w|0,t|0);v=y;y=0;if(v&1){e=Pa()|0;zta(t);j=36;break}f[A>>2]=f[w>>2];zta(t);zta(i);v=nV(24)|0;Spa(v);f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(45992)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;e=i}else{s=g+16&-16;e=nV(s)|0;f[i>>2]=e;f[i+8>>2]=s|-2147483648;f[i+4>>2]=g}Pta(e,45992,g)|0;SBa(e+g|0,0);y=0;ua(50,i|0,f[a>>2]|0)|0;s=y;y=0;do if(s&1)e=Pa()|0;else{f[t>>2]=f[i>>2];f[t+4>>2]=f[i+4>>2];f[t+8>>2]=f[i+8>>2];e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}y=0;ja(582,w|0,t|0);s=y;y=0;if(s&1){e=Pa()|0;zta(t);break}f[v>>2]=f[w>>2];zta(t);zta(i);f[v+4>>2]=f[a+4>>2];f[v+8>>2]=f[a+8>>2];f[v+12>>2]=0;f[v+16>>2]=f[A>>2];s=nV(84)|0;dM(s);f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(46005)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;e=i}else{r=g+16&-16;e=nV(r)|0;f[i>>2]=e;f[i+8>>2]=r|-2147483648;f[i+4>>2]=g}Pta(e,46005,g)|0;SBa(e+g|0,0);y=0;ua(50,i|0,f[a>>2]|0)|0;r=y;y=0;do if(r&1)e=Pa()|0;else{f[t>>2]=f[i>>2];f[t+4>>2]=f[i+4>>2];f[t+8>>2]=f[i+8>>2];e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}y=0;ja(582,w|0,t|0);r=y;y=0;if(r&1){e=Pa()|0;zta(t);break}f[s>>2]=f[w>>2];zta(t);zta(i);f[d>>2]=f[s>>2];g=Mqa(c+144|0)|0;f[g+24>>2]=f[v>>2];f[h>>2]=f[a+16>>2];f[w>>2]=f[h>>2];l=UX(c,w)|0;m=f[l+12>>2]|0;n=s+8|0;o=g+8|0;p=s+12|0;q=A+8|0;r=A+12|0;i=A+16|0;j=s+16|0;h=f[l+8>>2]|0;while(1){if((h|0)==(m|0))break;k=f[h>>2]|0;f[w>>2]=k;do if((k|0)==2){AW(o,tha(x,(f[p>>2]|0)-(f[n>>2]|0)>>2)|0);AW(o,mH(x,(f[p>>2]|0)-(f[n>>2]|0)>>2)|0);f[t>>2]=1;e=f[r>>2]|0;d=f[i>>2]|0;if(e>>>0<d>>>0){f[e>>2]=1;a=e+4|0;f[r>>2]=a;e=d}else{XC(q,t);a=f[r>>2]|0;e=f[i>>2]|0}f[t>>2]=1;if(a>>>0<e>>>0){f[a>>2]=1;f[r>>2]=a+4}else XC(q,t)}else{e=(f[p>>2]|0)-(f[n>>2]|0)>>2;if((k|0)!=3){AW(o,gia(x,e,k)|0);e=f[r>>2]|0;if((e|0)==(f[i>>2]|0)){XC(q,w);break}else{f[e>>2]=k;f[r>>2]=e+4;break}}e=gia(x,e,3)|0;AW(o,dea(f[x>>2]|0,43,e)|0);f[t>>2]=4;e=f[r>>2]|0;if(e>>>0<(f[i>>2]|0)>>>0){f[e>>2]=4;f[r>>2]=e+4}else XC(q,t)}while(0);e=f[p>>2]|0;if((e|0)==(f[j>>2]|0))XC(n,w);else{f[e>>2]=k;f[p>>2]=e+4}h=h+4|0}a=l+4|0;e=f[a>>2]|0;d=g+4|0;switch(e|0){case 2:{f[d>>2]=1;ZC(c);f[z>>2]=f[18953];f[w>>2]=f[z>>2];g=nC(x,g,qea(x,w,1)|0)|0;e=1;break}case 3:{f[d>>2]=4;g=dea(f[x>>2]|0,44,g)|0;e=4;break}default:f[d>>2]=e}f[s+36>>2]=g;f[A+4>>2]=e;f[s+4>>2]=f[a>>2];zt(c,s);rt(c,A);u=B;return v|0}while(0);zta(i);break a}while(0);zta(i)}while(0);if((j|0)==36)zta(i);$a(e|0);return 0}function ve(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;s=u;u=u+48|0;p=s+32|0;w=s+28|0;t=s+16|0;r=s+12|0;v=s;fna(w);y=0;d=ua(51,c|0,1)|0;o=y;y=0;a:do if(!(o&1)){do if(qIa(b[d>>0]|0)|0){y=0;d=ua(51,c|0,1)|0;o=y;y=0;if(!(o&1)?(y=0,e=la(203,d|0)|0,o=y,y=0,!(o&1)):0){FCa(p,e);f[f[w>>2]>>2]=f[p>>2];d=2;break}e=Pa()|0;break a}else d=1;while(0);y=0;i=ua(51,c|0,d|0)|0;o=y;y=0;if(!(o&1)){o=f[w>>2]|0;j=o+4|0;k=o+8|0;l=o+12|0;m=o+16|0;h=1;b:while(1){y=0;d=la(202,i|0)|0;n=y;y=0;if(n&1){i=13;break}if(h>>>0>=d>>>0){i=12;break}y=0;n=ua(51,i|0,h|0)|0;g=y;y=0;if(g&1){i=13;break}y=0;d=ua(51,n|0,0)|0;g=y;y=0;if(g&1){i=21;break}y=0;d=la(203,d|0)|0;g=y;y=0;if(g&1){i=21;break}c:do if(!(bDa(d,f[18762]|0)|0)){y=0;d=ua(51,n|0,0)|0;g=y;y=0;if(g&1){i=21;break b}y=0;d=la(203,d|0)|0;g=y;y=0;if(g&1){i=21;break b}if(bDa(d,f[18761]|0)|0){y=0;d=la(202,n|0)|0;g=y;y=0;if(g&1){i=21;break b}if(d>>>0>2){i=36;break b}y=0;d=ua(51,n|0,1)|0;n=y;y=0;if(n&1){i=21;break b}y=0;d=la(203,d|0)|0;n=y;y=0;if(n&1){i=21;break b}y=0;d=ua(136,d|0,0)|0;n=y;y=0;if(n&1){i=21;break b}f[j>>2]=d}}else{g=1;while(1){y=0;d=la(202,n|0)|0;e=y;y=0;if(e&1){i=22;break b}if(g>>>0>=d>>>0)break c;y=0;d=ua(51,n|0,g|0)|0;e=y;y=0;if(e&1){i=30;break b}y=0;d=la(203,d|0)|0;e=y;y=0;if(e&1){i=30;break b}y=0;d=ua(136,d|0,0)|0;e=y;y=0;if(e&1){i=30;break b}f[p>>2]=d;e=f[l>>2]|0;if(e>>>0>=(f[m>>2]|0)>>>0){y=0;ja(73,k|0,p|0);e=y;y=0;if(e&1){i=30;break b}}else{f[e>>2]=d;f[l>>2]=e+4}g=g+1|0}}while(0);h=h+1|0}if((i|0)==12){d=f[o>>2]|0;do if(!(pJa(d)|0)){d=f[a>>2]|0;y=0;d=la(153,(f[d+4>>2]|0)-(f[d>>2]|0)>>2|0)|0;t=y;y=0;if(t&1){e=Pa()|0;break a}else{f[o>>2]=d;break}}while(0);e=a+24|0;g=f[e>>2]|0;if((g|0)==(f[a+28>>2]|0)){y=0;ja(68,a+20|0,o|0);t=y;y=0;if(!(t&1))i=59}else{f[g>>2]=d;f[e>>2]=(f[e>>2]|0)+4;i=59}do if((i|0)==59?(q=f[a>>2]|0,f[r>>2]=f[o>>2],y=0,f[p>>2]=f[r>>2],q=ua(139,q|0,p|0)|0,t=y,y=0,!(t&1)):0){if(!q){v=f[a>>2]|0;f[w>>2]=0;y=0;ja(64,v|0,o|0);v=y;y=0;if(v&1)break;f[w>>2]=0;u=s;return}h=zb(20)|0;f[v>>2]=0;f[v+4>>2]=0;f[v+8>>2]=0;g=uHa(53982)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[v+11>>0]=g;d=v}else{e=g+16&-16;y=0;d=la(150,e|0)|0;t=y;y=0;if(t&1){i=69;break}f[v>>2]=d;f[v+8>>2]=e|-2147483648;f[v+4>>2]=g}Pta(d,53982,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,v|0,f[c+28>>2]|0,f[c+32>>2]|0);c=y;y=0;if(c&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(v);if(!e){e=d;break a}}else{y=0;za(3);y=0;i=69}while(0);if((i|0)==69)d=Pa()|0;Oa(h|0);e=d;break a}while(0);e=Pa()|0;break}else if((i|0)==13){e=Pa()|0;break}else if((i|0)==21){e=Pa()|0;break}else if((i|0)==22){e=Pa()|0;break}else if((i|0)==30){e=Pa()|0;break}else if((i|0)==36){h=zb(20)|0;f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;g=uHa(52593)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[t+11>>0]=g;d=t}else{e=g+16&-16;y=0;d=la(150,e|0)|0;v=y;y=0;if(v&1){i=44;break}f[t>>2]=d;f[t+8>>2]=e|-2147483648;f[t+4>>2]=g}Pta(d,52593,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,t|0,f[n+28>>2]|0,f[n+32>>2]|0);v=y;y=0;if(v&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(t);if(!e){e=d;break a}}else{y=0;za(3);y=0;i=44}while(0);if((i|0)==44)d=Pa()|0;Oa(h|0);e=d;break}}else i=6}else i=6;while(0);if((i|0)==6)e=Pa()|0;d=f[w>>2]|0;f[w>>2]=0;if(d|0){Nza(d);$Ja(d)}$a(e|0)}function we(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0.0,i=0,j=0.0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0;a:while(1){n=b;r=b+-4|0;while(1){m=a;b:while(1){l=m;c=n-l|0;d=c>>2;a=m+4|0;switch(d|0){case 1:case 0:break a;case 2:{s=5;break a}case 3:{s=7;break a}case 4:{s=8;break a}case 5:{s=9;break a}default:{}}if((c|0)<28){s=11;break a}i=m+(((d|0)/2|0)<<2)|0;if((c|0)>3996){c=(d|0)/4|0;c=gn(m,m+(c<<2)|0,i,i+(c<<2)|0,r)|0}else c=ao(m,i,r)|0;g=f[m>>2]|0;j=+p[g+16>>3];h=+p[(f[i>>2]|0)+16>>3];if(wR(j,h)|0){d=r;break}else d=r;while(1){d=d+-4|0;if((m|0)==(d|0))break;e=f[d>>2]|0;if(wR(+p[e+16>>3],h)|0){s=28;break b}}l=f[r>>2]|0;e=l;if(!(wR(j,+p[l+16>>3])|0)){c=a;while(1){if((c|0)==(r|0))break a;d=f[c>>2]|0;a=c+4|0;if(wR(j,+p[d+16>>3])|0)break;else c=a}f[c>>2]=e;f[r>>2]=d}if((a|0)==(r|0))break a;else c=r;while(1){h=+p[(f[m>>2]|0)+16>>3];while(1){l=f[a>>2]|0;e=a+4|0;g=l;if(wR(h,+p[l+16>>3])|0)break;else a=e}do{c=c+-4|0;l=f[c>>2]|0;d=l}while(wR(h,+p[l+16>>3])|0);if(a>>>0>=c>>>0){m=a;continue b}f[a>>2]=d;f[c>>2]=g;a=e}}if((s|0)==28){s=0;f[m>>2]=e;f[d>>2]=g;c=c+1|0}c:do if(a>>>0<d>>>0){k=i;while(1){h=+p[(f[k>>2]|0)+16>>3];while(1){e=f[a>>2]|0;g=a+4|0;i=e;if(wR(+p[e+16>>3],h)|0)a=g;else break}do{d=d+-4|0;t=f[d>>2]|0;e=t}while(!(wR(+p[t+16>>3],h)|0));if(a>>>0>d>>>0){d=k;e=a;break c}f[a>>2]=e;f[d>>2]=i;k=(k|0)==(a|0)?d:k;a=g;c=c+1|0}}else{d=i;e=a}while(0);if((e|0)!=(d|0)?(o=f[d>>2]|0,q=f[e>>2]|0,wR(+p[o+16>>3],+p[q+16>>3])|0):0){f[e>>2]=o;f[d>>2]=q;a=c+1|0}else a=c;if(!a){c=Ki(m,e)|0;a=e+4|0;if(Ki(a,b)|0){s=44;break}if(c)continue}t=e;if((t-l|0)>=(n-t|0)){s=43;break}we(m,e);a=e+4|0}if((s|0)==43){s=0;we(e+4|0,b);a=m;b=e;continue}else if((s|0)==44){s=0;if(c)break;else{a=m;b=e;continue}}}if((s|0)==5){b=f[r>>2]|0;a=f[m>>2]|0;if(wR(+p[b+16>>3],+p[a+16>>3])|0){f[m>>2]=b;f[r>>2]=a}}else if((s|0)==7)ao(m,a,r)|0;else if((s|0)==8)Fp(m,a,m+8|0,r)|0;else if((s|0)==9)gn(m,a,m+8|0,m+12|0,r)|0;else if((s|0)==11)Xo(m,b);return}function xe(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+64|0;o=n+40|0;m=n+16|0;h=n;g=n+32|0;d=f[a>>2]|0;k=b+12|0;a:do if(Xha(d,b)|0){e=a+8|0;tI(m,f[(f[k>>2]|0)+4>>2]|0,d,f[e>>2]|0,f[18679]|0);Qya(h);d=f[e>>2]|0;e=f[m+8>>2]|0;FCa(g,gKa(e)|0);y=0;f[o>>2]=f[g>>2];d=ua(60,d|0,o|0)|0;l=y;y=0;if(l&1)c=Pa()|0;else{f[h+8>>2]=d;f[o>>2]=f[b>>2];f[o+4>>2]=f[b+4>>2];f[o+8>>2]=f[b+8>>2];f[o+12>>2]=h;y=0;d=oa(42,a|0,f[k>>2]|0,e|0)|0;l=y;y=0;if(((!(l&1)?(y=0,c=la(157,d|0)|0,l=y,y=0,!(l&1)):0)?(y=0,i=oa(43,a|0,o|0,f[a+4>>2]|0)|0,o=y,y=0,!(o&1)):0)?(y=0,ja(78,c|0,i|0),o=y,y=0,!(o&1)):0){iX(m);break}c=Pa()|0}iX(m);$a(c|0)}else{d=b+4|0;c=b+8|0;switch(f[d>>2]|0){case 1:switch(f[c>>2]|0){case 0:{c=DI(f[18913]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break a}case 2:{c=DI(f[18779]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break a}case 4:{c=DI(f[18777]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break a}case 20:{c=Nq(Fw(AT(a,f[k>>2]|0,f[18680]|0)|0,0)|0,f[18894]|0,Fw(Fza(0)|0,0)|0)|0;break a}default:{c=wja(Vea(76852,23975)|0,b)|0;Axa(o,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[o>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,l=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,n=y,y=0,!(n&1)):0){pza(o);jn(c,l)|0;Yp(c)|0;Ka()}n=Pa()|0;pza(o);$a(n|0)}}case 4:case 3:{PDa(m,0);switch(f[c>>2]|0){case 7:case 6:{c=uL(f[18904]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 9:case 8:{c=DI(f[18787]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 11:case 10:{c=DI(f[18786]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 13:case 12:{c=DI(f[18785]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 15:case 14:{c=DI(f[18784]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 17:case 16:{c=DI(f[18783]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}case 19:case 18:{c=DI(f[18782]|0,AT(a,f[k>>2]|0,f[18680]|0)|0)|0;break}default:{c=wja(Vea(76852,24006)|0,b)|0;Axa(o,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[o>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,n=y,y=0,!(n&1)):0){pza(o);jn(c,e)|0;Yp(c)|0;Ka()}n=Pa()|0;pza(o);$a(n|0)}}f[m>>2]=c;if((f[d>>2]|0)==3)c=Fw(c,2)|0;break a}default:{c=wja(Vea(76852,24039)|0,b)|0;Axa(o,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[o>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,j=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,n=y,y=0,!(n&1)):0){pza(o);jn(c,j)|0;Yp(c)|0;Ka()}n=Pa()|0;pza(o);$a(n|0)}}}while(0);u=n;return c|0}function ye(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;t=u;u=u+48|0;p=t+36|0;j=t+32|0;k=t+28|0;v=t+16|0;l=t+12|0;m=t+4|0;n=t+8|0;s=t;o=a+4|0;d=osa(f[o>>2]|0)|0;f[j>>2]=d;f[k>>2]=c;f[v>>2]=0;q=v+4|0;f[q>>2]=0;f[v+8>>2]=0;i=v+8|0;r=a+112|0;e=0;g=0;h=c;a:while(1){if(e>>>0>=g>>>0){y=0;ya(108,v|0,k|0,j|0);g=y;y=0;if(g&1){w=18;break}}else{f[e>>2]=h;f[e+4>>2]=d;f[q>>2]=e+8}f[l>>2]=1;cJa(m);y=0;c=la(202,h|0)|0;g=y;y=0;if(g&1){w=19;break}do if(c>>>0>1){y=0;c=ua(51,h|0,1)|0;g=y;y=0;if(g&1){w=19;break a}if(qIa(b[c>>0]|0)|0){y=0;c=ua(51,h|0,1)|0;g=y;y=0;if(g&1){w=19;break a}if(!(Hra(c)|0)){y=0;c=ua(51,h|0,1)|0;g=y;y=0;if(g&1){w=19;break a}y=0;c=la(203,c|0)|0;g=y;y=0;if(g&1){w=19;break a}y=0;c=ua(136,c|0,1)|0;g=y;y=0;if(g&1){w=19;break a}if(c|0){y=0;ja(57,p|0,53179);g=y;y=0;if(g&1){w=23;break a}c=f[p>>2]|0;f[m>>2]=c;break}}f[l>>2]=2;y=0;c=ua(51,h|0,1)|0;g=y;y=0;if(g&1){w=20;break a}y=0;c=la(203,c|0)|0;g=y;y=0;if(g&1){w=20;break a}FCa(p,c);c=f[p>>2]|0;f[m>>2]=c}else w=24}else w=24;while(0);if((w|0)==24){w=0;y=0;ja(57,p|0,53179);g=y;y=0;if(g&1){w=26;break}c=f[p>>2]|0;f[m>>2]=c}f[n>>2]=c;y=0;f[p>>2]=f[n>>2];c=ua(147,r|0,p|0)|0;g=y;y=0;if(g&1){w=31;break}f[d+8>>2]=c;y=0;c=ua(148,h|0,l|0)|0;g=y;y=0;if(g&1){w=19;break}f[d+4>>2]=c;d=f[l>>2]|0;y=0;c=la(202,h|0)|0;g=y;y=0;if(g&1){w=19;break}if(d>>>0>=c>>>0){w=40;break}y=0;c=ua(51,h|0,d|0)|0;h=y;y=0;if(h&1){w=19;break}y=0;d=ua(51,c|0,0)|0;h=y;y=0;if(h&1){w=37;break}y=0;d=la(203,d|0)|0;h=y;y=0;if(h&1){w=37;break}if(!(bDa(d,f[18748]|0)|0)){w=40;break}y=0;d=la(210,f[o>>2]|0)|0;h=y;y=0;if(h&1){w=37;break}f[j>>2]=d;f[k>>2]=c;e=f[q>>2]|0;g=f[i>>2]|0;h=c}do if((w|0)==18)d=Pa()|0;else if((w|0)==19){d=Pa()|0;w=39}else if((w|0)==20){d=Pa()|0;w=39}else if((w|0)==23){d=Pa()|0;w=39}else if((w|0)==26){d=Pa()|0;w=39}else if((w|0)==31){d=Pa()|0;w=39}else if((w|0)==37){d=Pa()|0;w=39}else if((w|0)==40){d=f[v>>2]|0;g=(f[q>>2]|0)-d>>3;b:while(1){i=g+-1|0;if((g|0)<=0){w=42;break}j=f[d+(i<<3)>>2]|0;h=f[d+(i<<3)+4>>2]|0;y=0;d=la(202,j|0)|0;o=y;y=0;if(o&1){w=50;break}c:do if(d>>>0>1){e=1;while(1){y=0;d=la(202,j|0)|0;o=y;y=0;if(o&1){w=50;break b}if(e>>>0>=d>>>0){w=47;break}y=0;d=ua(51,j|0,e|0)|0;o=y;y=0;if(o&1){w=50;break b}c=e+1|0;if(qIa(b[d>>0]|0)|0)e=c;else break}if((w|0)==47){w=0;c=e+1|0}y=0;d=la(202,j|0)|0;o=y;y=0;if(o&1){w=50;break b}if(e>>>0<d>>>0){y=0;d=ua(51,j|0,e|0)|0;o=y;y=0;if(o&1){w=50;break b}y=0;d=ua(51,d|0,0)|0;o=y;y=0;if(o&1){w=50;break b}y=0;d=la(203,d|0)|0;o=y;y=0;if(o&1){w=50;break b}d=bDa(d,f[18761]|0)|0;d=d?c:e}else d=e;c=f[v>>2]|0;e=h+12|0;if((g|0)<((f[q>>2]|0)-c>>3|0)){y=0;ja(596,e|0,f[c+(g<<3)+4>>2]|0);o=y;y=0;if(o&1){w=50;break b}c=d+1|0}else c=d;while(1){y=0;d=la(202,j|0)|0;o=y;y=0;if(o&1){w=50;break b}if(c>>>0>=d>>>0)break c;y=0;d=ua(51,j|0,c|0)|0;o=y;y=0;if(o&1){w=50;break b}y=0;d=ua(145,a|0,d|0)|0;o=y;y=0;if(o&1){w=50;break b}y=0;ja(596,e|0,d|0);o=y;y=0;if(o&1){w=50;break b}c=c+1|0}}while(0);f[s>>2]=f[h+8>>2];y=0;f[p>>2]=f[s>>2];ja(1999,r|0,p|0);o=y;y=0;if(o&1){w=50;break}y=0;ja(1725,h|0,f[h+4>>2]|0);o=y;y=0;if(o&1){w=50;break}g=i;d=f[v>>2]|0}if((w|0)==42){w=f[d+4>>2]|0;a3(v);u=t;return w|0}else if((w|0)==50){d=Pa()|0;break}}while(0);a3(v);$a(d|0);return 0}function ze(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56144)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+12|0);Ql(a,c+16|0);a=a+4|0;do switch(f[c+8>>2]|0){case 0:{Zq(f[a>>2]|0,106)|0;break}case 1:{Zq(f[a>>2]|0,107)|0;break}case 2:{Zq(f[a>>2]|0,108)|0;break}case 3:{Zq(f[a>>2]|0,109)|0;break}case 4:{Zq(f[a>>2]|0,110)|0;break}case 5:{Zq(f[a>>2]|0,111)|0;break}case 6:{Zq(f[a>>2]|0,112)|0;break}case 7:{Zq(f[a>>2]|0,113)|0;break}case 8:{Zq(f[a>>2]|0,114)|0;break}case 9:{Zq(f[a>>2]|0,115)|0;break}case 10:{Zq(f[a>>2]|0,116)|0;break}case 11:{Zq(f[a>>2]|0,118)|0;break}case 12:{Zq(f[a>>2]|0,117)|0;break}case 13:{Zq(f[a>>2]|0,119)|0;break}case 14:{Zq(f[a>>2]|0,120)|0;break}case 15:{Zq(f[a>>2]|0,70)|0;break}case 16:{Zq(f[a>>2]|0,71)|0;break}case 17:{Zq(f[a>>2]|0,72)|0;break}case 18:{Zq(f[a>>2]|0,73)|0;break}case 19:{Zq(f[a>>2]|0,76)|0;break}case 20:{Zq(f[a>>2]|0,77)|0;break}case 21:{Zq(f[a>>2]|0,74)|0;break}case 22:{Zq(f[a>>2]|0,75)|0;break}case 23:{Zq(f[a>>2]|0,78)|0;break}case 24:{Zq(f[a>>2]|0,79)|0;break}case 25:{Zq(f[a>>2]|0,124)|0;break}case 26:{Zq(f[a>>2]|0,125)|0;break}case 27:{Zq(f[a>>2]|0,126)|0;break}case 28:{Zq(f[a>>2]|0,127)|0;break}case 29:{Zq(f[a>>2]|0,-128)|0;break}case 30:{Zq(f[a>>2]|0,-127)|0;break}case 31:{Zq(f[a>>2]|0,-126)|0;break}case 32:{Zq(f[a>>2]|0,-125)|0;break}case 33:{Zq(f[a>>2]|0,-124)|0;break}case 34:{Zq(f[a>>2]|0,-123)|0;break}case 35:{Zq(f[a>>2]|0,-122)|0;break}case 36:{Zq(f[a>>2]|0,-120)|0;break}case 37:{Zq(f[a>>2]|0,-121)|0;break}case 38:{Zq(f[a>>2]|0,-119)|0;break}case 39:{Zq(f[a>>2]|0,-118)|0;break}case 40:{Zq(f[a>>2]|0,81)|0;break}case 41:{Zq(f[a>>2]|0,82)|0;break}case 42:{Zq(f[a>>2]|0,83)|0;break}case 43:{Zq(f[a>>2]|0,84)|0;break}case 44:{Zq(f[a>>2]|0,87)|0;break}case 45:{Zq(f[a>>2]|0,88)|0;break}case 46:{Zq(f[a>>2]|0,85)|0;break}case 47:{Zq(f[a>>2]|0,86)|0;break}case 48:{Zq(f[a>>2]|0,89)|0;break}case 49:{Zq(f[a>>2]|0,90)|0;break}case 50:{Zq(f[a>>2]|0,-110)|0;break}case 51:{Zq(f[a>>2]|0,-109)|0;break}case 52:{Zq(f[a>>2]|0,-108)|0;break}case 53:{Zq(f[a>>2]|0,-107)|0;break}case 54:{Zq(f[a>>2]|0,-104)|0;break}case 55:{Zq(f[a>>2]|0,-106)|0;break}case 56:{Zq(f[a>>2]|0,-105)|0;break}case 57:{Zq(f[a>>2]|0,91)|0;break}case 58:{Zq(f[a>>2]|0,92)|0;break}case 59:{Zq(f[a>>2]|0,93)|0;break}case 60:{Zq(f[a>>2]|0,95)|0;break}case 61:{Zq(f[a>>2]|0,94)|0;break}case 62:{Zq(f[a>>2]|0,96)|0;break}case 63:{Zq(f[a>>2]|0,-96)|0;break}case 64:{Zq(f[a>>2]|0,-95)|0;break}case 65:{Zq(f[a>>2]|0,-94)|0;break}case 66:{Zq(f[a>>2]|0,-93)|0;break}case 67:{Zq(f[a>>2]|0,-90)|0;break}case 68:{Zq(f[a>>2]|0,-92)|0;break}case 69:{Zq(f[a>>2]|0,-91)|0;break}case 70:{Zq(f[a>>2]|0,97)|0;break}case 71:{Zq(f[a>>2]|0,98)|0;break}case 72:{Zq(f[a>>2]|0,99)|0;break}case 73:{Zq(f[a>>2]|0,101)|0;break}case 74:{Zq(f[a>>2]|0,100)|0;break}case 75:{Zq(f[a>>2]|0,102)|0;break}default:Ka()}while(0);if((f[c+4>>2]|0)==5)Zq(f[a>>2]|0,0)|0;u=i;return}function Ae(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;o=u;u=u+64|0;r=o+48|0;t=o+12|0;s=o+36|0;p=o+24|0;q=o;do if(b[a+12>>0]|0){d=Vea(76852,54388)|0;Axa(r,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[r>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,n=y,y=0,!(n&1)):0){pza(r);jn(d,g)|0;Yp(d)|0;break}t=Pa()|0;pza(r);$a(t|0)}while(0);m=a+36|0;d=f[m>>2]|0;n=d+c|0;j=a+88|0;k=a+92|0;l=r+4|0;a:while(1){if(d>>>0>=n>>>0){i=57;break}c=Nm(a)|0;h=Nm(a)|0;i=f[m>>2]|0;if((c|0)!=1){e=Vea(76852,54401)|0;e=vj(e,f[m>>2]|0)|0;Axa(r,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[r>>2]|0,77556)|0;c=y;y=0;if(c&1){i=11;break}y=0;d=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0;c=y;y=0;if(c&1){i=11;break}pza(r);jn(e,d)|0;Yp(e)|0;d=i+h|0;f[m>>2]=d;continue}c=Nm(a)|0;d=f[a>>2]|0;e=f[d+16>>2]|0;g=0;d=f[d+12>>2]|0;while(1){if((d|0)==(e|0)){e=0;break}g=((f[(f[d>>2]|0)+12>>2]|0)==0&1)+g|0;d=d+4|0}while(1){if((e|0)==(c|0))break;d=Nm(a)|0;if(d>>>0>=g>>>0){d=d-g|0;if(d>>>0<(f[k>>2]|0)-(f[j>>2]|0)>>2>>>0){v=kg(a)|0;f[f[(f[j>>2]|0)+(d<<2)>>2]>>2]=v}}else kg(a)|0;e=e+1|0}gua(t);e=f[k>>2]|0;d=f[j>>2]|0;while(1){if((d|0)==(e|0))break;g=f[d>>2]|0;y=0;Ca(59,r|0,t|0,g|0,g|0);v=y;y=0;if(v&1){i=39;break a}if(!(b[l>>0]|0)){i=27;break a}else d=d+4|0}if((f[m>>2]|0)!=(i+h|0)){i=44;break}Cta(t);d=f[m>>2]|0}b:do if((i|0)==11){v=Pa()|0;pza(r);$a(v|0)}else if((i|0)==27){h=zb(20)|0;g=f[g>>2]|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;c=uHa(g)|0;do if(c>>>0<=4294967279){if(c>>>0<11){b[r+11>>0]=c;d=r}else{e=c+16&-16;y=0;d=la(150,e|0)|0;v=y;y=0;if(v&1){i=40;break}f[r>>2]=d;f[r+8>>2]=e|-2147483648;f[r+4>>2]=c}Pta(d,g,c)|0;SBa(d+c|0,0);y=0;ua(81,r|0,54429)|0;v=y;y=0;if(v&1){d=Pa()|0;zta(r);break}f[s>>2]=f[r>>2];f[s+4>>2]=f[r+4>>2];f[s+8>>2]=f[r+8>>2];d=0;while(1){if((d|0)==3)break;f[r+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,s|0);v=y;y=0;if(v&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(s);zta(r);if(!e){i=56;break b}}else{y=0;za(3);y=0;i=40}while(0);if((i|0)==40)d=Pa()|0;Oa(h|0);i=56}else if((i|0)==39){d=Pa()|0;i=56}else if((i|0)==44){c=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;g=uHa(54455)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[p+11>>0]=g;d=p}else{e=g+16&-16;y=0;d=la(150,e|0)|0;v=y;y=0;if(v&1){i=52;break}f[p>>2]=d;f[p+8>>2]=e|-2147483648;f[p+4>>2]=g}Pta(d,54455,g)|0;SBa(d+g|0,0);y=0;ja(583,c|0,p|0);v=y;y=0;if(v&1)e=1;else{y=0;ya(79,c|0,64,361);y=0;e=0}d=Pa()|0;zta(p);if(!e){i=56;break b}}else{y=0;za(3);y=0;i=52}while(0);if((i|0)==52)d=Pa()|0;Oa(c|0);i=56}else if((i|0)==57){if((d|0)==(n|0)){u=o;return}c=zb(20)|0;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(54492)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[q+11>>0]=g;d=q}else{e=g+16&-16;y=0;d=la(150,e|0)|0;v=y;y=0;if(v&1){i=66;break}f[q>>2]=d;f[q+8>>2]=e|-2147483648;f[q+4>>2]=g}Pta(d,54492,g)|0;SBa(d+g|0,0);y=0;ja(583,c|0,q|0);v=y;y=0;if(v&1)e=1;else{y=0;ya(79,c|0,64,361);y=0;e=0}d=Pa()|0;zta(q);if(!e)break b}else{y=0;za(3);y=0;i=66}while(0);if((i|0)==66)d=Pa()|0;Oa(c|0)}while(0);if((i|0)==56)Cta(t);$a(d|0)}function Be(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j;do if(b[a+12>>0]|0){i=Vea(76852,56261)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(g);jn(i,e)|0;Yp(i)|0;break}k=Pa()|0;pza(g);$a(k|0)}while(0);Ql(a,c+20|0);Ql(a,c+24|0);e=a+4|0;Zq(f[e>>2]|0,-2)|0;g=c+12|0;i=c+4|0;a:do switch(f[c+8>>2]|0){case 0:{switch(f[i>>2]|0){case 1:{switch(b[g>>0]|0){case 1:{Zq(f[e>>2]|0,32)|0;break a}case 2:{Zq(f[e>>2]|0,33)|0;break a}case 4:{Zq(f[e>>2]|0,30)|0;break a}default:Ka()}break}case 2:{switch(b[g>>0]|0){case 1:{Zq(f[e>>2]|0,34)|0;break a}case 2:{Zq(f[e>>2]|0,35)|0;break a}case 4:{Zq(f[e>>2]|0,36)|0;break a}case 8:{Zq(f[e>>2]|0,31)|0;break a}default:Ka()}break}default:Ka()}break}case 1:{d=b[g>>0]|0;switch(f[i>>2]|0){case 1:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,39)|0;break a}case 2:{Zq(f[e>>2]|0,40)|0;break a}case 4:{Zq(f[e>>2]|0,37)|0;break a}default:Ka()}break}case 2:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,41)|0;break a}case 2:{Zq(f[e>>2]|0,42)|0;break a}case 4:{Zq(f[e>>2]|0,43)|0;break a}case 8:{Zq(f[e>>2]|0,38)|0;break a}default:Ka()}break}default:Ka()}break}case 2:{d=b[g>>0]|0;switch(f[i>>2]|0){case 1:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,46)|0;break a}case 2:{Zq(f[e>>2]|0,47)|0;break a}case 4:{Zq(f[e>>2]|0,44)|0;break a}default:Ka()}break}case 2:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,48)|0;break a}case 2:{Zq(f[e>>2]|0,49)|0;break a}case 4:{Zq(f[e>>2]|0,50)|0;break a}case 8:{Zq(f[e>>2]|0,45)|0;break a}default:Ka()}break}default:Ka()}break}case 3:{d=b[g>>0]|0;switch(f[i>>2]|0){case 1:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,53)|0;break a}case 2:{Zq(f[e>>2]|0,54)|0;break a}case 4:{Zq(f[e>>2]|0,51)|0;break a}default:Ka()}break}case 2:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,55)|0;break a}case 2:{Zq(f[e>>2]|0,56)|0;break a}case 4:{Zq(f[e>>2]|0,57)|0;break a}case 8:{Zq(f[e>>2]|0,52)|0;break a}default:Ka()}break}default:Ka()}break}case 4:{d=b[g>>0]|0;switch(f[i>>2]|0){case 1:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,60)|0;break a}case 2:{Zq(f[e>>2]|0,61)|0;break a}case 4:{Zq(f[e>>2]|0,58)|0;break a}default:Ka()}break}case 2:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,62)|0;break a}case 2:{Zq(f[e>>2]|0,63)|0;break a}case 4:{Zq(f[e>>2]|0,64)|0;break a}case 8:{Zq(f[e>>2]|0,59)|0;break a}default:Ka()}break}default:Ka()}break}case 5:{d=b[g>>0]|0;switch(f[i>>2]|0){case 1:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,67)|0;break a}case 2:{Zq(f[e>>2]|0,68)|0;break a}case 4:{Zq(f[e>>2]|0,65)|0;break a}default:Ka()}break}case 2:{switch(d<<24>>24){case 1:{Zq(f[e>>2]|0,69)|0;break a}case 2:{Zq(f[e>>2]|0,70)|0;break a}case 4:{Zq(f[e>>2]|0,71)|0;break a}case 8:{Zq(f[e>>2]|0,66)|0;break a}default:Ka()}break}default:Ka()}break}default:Ka()}while(0);k=h[g>>0]|0;AN(a,k,k,gKa(f[c+16>>2]|0)|0);u=j;return}function Ce(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;C=u;u=u+64|0;A=C+32|0;D=C+16|0;z=C+12|0;B=C;a:do if((c-a|0)>1?(b[a>>0]|0)==73:0){w=d+61|0;x=d+32|0;b:do if(b[w>>0]|0){g=f[d+36>>2]|0;e=f[g+-16>>2]|0;g=g+-12|0;while(1){h=f[g>>2]|0;if((h|0)==(e|0))break b;v=h+-16|0;f[g>>2]=v;tM(v)}}while(0);f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;g=uHa(72119)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){s=D+11|0;b[s>>0]=g;e=D;t=D+4|0}else{t=g+16&-16;e=QCa(t)|0;f[D>>2]=e;f[D+8>>2]=t|-2147483648;t=D+4|0;f[t>>2]=g;s=D+11|0}Pta(e,72119,g)|0;SBa(e+g|0,0);v=d+4|0;o=d+36|0;n=d+12|0;p=A+11|0;q=A+4|0;r=d+40|0;h=a+1|0;c:while(1){if((b[h>>0]|0)==69){g=55;break}if(b[w>>0]|0){f[z>>2]=f[n>>2];e=f[o>>2]|0;if(e>>>0>=(f[r>>2]|0)>>>0){y=0;ja(2059,x|0,z|0);m=y;y=0;if(m&1){g=19;break}}else{jBa(A,z);f[e>>2]=0;f[e+4>>2]=0;m=f[A>>2]|0;f[e+8>>2]=0;f[e+12>>2]=m;f[o>>2]=(f[o>>2]|0)+16}}l=((f[v>>2]|0)-(f[d>>2]|0)|0)/24|0;y=0;m=oa(80,h|0,c|0,d|0)|0;k=y;y=0;if(k&1){g=25;break}k=((f[v>>2]|0)-(f[d>>2]|0)|0)/24|0;d:do if(b[w>>0]|0){g=f[o>>2]|0;e=g+-16|0;while(1){if((g|0)==(e|0))break d;j=g+-16|0;f[o>>2]=j;wI(j);g=f[o>>2]|0}}while(0);if((m|0)==(h|0)|(m|0)==(c|0)){g=66;break}e:do if(!(b[w>>0]|0))e=l;else{g=f[o>>2]|0;e=f[n>>2]|0;f[A>>2]=e;h=g+-12|0;i=f[h>>2]|0;if(i>>>0>=(f[g+-8>>2]|0)>>>0){y=0;ja(2060,g+-16|0,A|0);j=y;y=0;if(j&1){g=33;break c}}else{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;f[i+12>>2]=e;f[h>>2]=(f[h>>2]|0)+16}e=l;while(1){if(e>>>0>=k>>>0){e=l;break e}g=f[(f[o>>2]|0)+-12>>2]|0;h=(f[d>>2]|0)+(e*24|0)|0;i=g+-12|0;j=f[i>>2]|0;if((j|0)==(f[g+-8>>2]|0)){y=0;ja(2061,g+-16|0,h|0);j=y;y=0;if(j&1){g=39;break c}}else{y=0;ja(2058,j|0,h|0);j=y;y=0;if(j&1){g=39;break c}f[i>>2]=(f[i>>2]|0)+24}e=e+1|0}}while(0);while(1){if(e>>>0>=k>>>0){e=k;break}j=b[s>>0]|0;if((j<<24>>24<0?f[t>>2]|0:j&255)>>>0>1?(y=0,ua(165,D|0,72307)|0,j=y,y=0,j&1):0){g=43;break c}y=0;ja(2054,A|0,(f[d>>2]|0)+(e*24|0)|0);j=y;y=0;if(j&1){g=47;break c}j=b[p>>0]|0;i=j<<24>>24<0;y=0;oa(73,D|0,(i?f[A>>2]|0:A)|0,(i?f[q>>2]|0:j&255)|0)|0;j=y;y=0;if(j&1){g=48;break c}zta(A);e=e+1|0}while(1){if((e|0)==(l|0)){h=m;continue c}h=f[v>>2]|0;g=h+-24|0;while(1){if((h|0)==(g|0))break;k=h+-24|0;f[v>>2]=k;Xka(k);h=f[v>>2]|0}e=e+-1|0}}do if((g|0)==19)a=Pa()|0;else if((g|0)==25)a=Pa()|0;else if((g|0)==33)a=Pa()|0;else if((g|0)==39)a=Pa()|0;else if((g|0)==43)a=Pa()|0;else if((g|0)==47){a=Pa()|0;g=49}else if((g|0)==48){a=Pa()|0;zta(A);g=49}else if((g|0)==55){a=h+1|0;z=b[s>>0]|0;x=z<<24>>24<0;if((b[(x?f[D>>2]|0:D)+(x?f[t>>2]|0:z&255)+-1>>0]|0)==62){y=0;ua(165,D|0,73498)|0;z=y;y=0;if(z&1)g=57}else{y=0;ua(165,D|0,72121)|0;z=y;y=0;if(z&1)g=57}if((g|0)==57){a=Pa()|0;break}f[B>>2]=f[D>>2];f[B+4>>2]=f[D+4>>2];f[B+8>>2]=f[D+8>>2];e=0;while(1){if((e|0)==3)break;f[D+(e<<2)>>2]=0;e=e+1|0}hM(A,B);e=f[v>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,A|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(A);zta(B);break}}else{ZL(e,A);f[v>>2]=(f[v>>2]|0)+24}Xka(A);zta(B);zta(D);break a}else if((g|0)==66){zta(D);break a}while(0);zta(D);$a(a|0)}while(0);u=C;return a|0}function De(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;o=u;u=u+96|0;s=o;v=o+84|0;t=o+72|0;r=o+40|0;q=o+28|0;p=o+16|0;n=o+12|0;k=Pqa(b)|0;f[v>>2]=0;l=v+4|0;f[l>>2]=0;f[v+8>>2]=0;c=v+8|0;d=0;while(1){f[s>>2]=d;if(d>>>0>=k>>>0){i=3;break}e=f[l>>2]|0;if((e|0)==(f[c>>2]|0)){y=0;ja(72,v|0,s|0);j=y;y=0;if(j&1){i=9;break}}else{f[e>>2]=d;f[l>>2]=e+4}d=d+1|0}do if((i|0)==3){h=f[v>>2]|0;j=f[l>>2]|0;f[s>>2]=a;f[s+4>>2]=b;y=0;ya(86,h|0,j|0,s|0);j=y;y=0;if(!(j&1)){d=(f[b+12>>2]|0)-(f[b+8>>2]|0)>>2;e=f[v>>2]|0;c=0;while(1){if(c>>>0>=d>>>0){c=0;break}if((f[e+(c<<2)>>2]|0)>>>0<d>>>0)c=c+1|0;else{i=13;break}}if((i|0)==13){y=0;Ca(52,34437,34471,59,48775);y=0;c=Pa()|0;break}while(1){if((c|0)==(d|0))break;f[e+(c<<2)>>2]=c;c=c+1|0}i=b+20|0;y=0;ja(602,t|0,i|0);j=y;y=0;if(!(j&1)){c=f[i>>2]|0;j=b+24|0;d=f[j>>2]|0;while(1){if((d|0)==(c|0))break;h=d+-4|0;f[j>>2]=h;d=h}g=Rya(b)|0;h=a+44|0;e=b+28|0;a=f[t>>2]|0;while(1){c=f[v>>2]|0;if(g>>>0>=(f[l>>2]|0)-c>>2>>>0){i=31;break}f[s>>2]=f[c+(g<<2)>>2];y=0;c=ua(92,h|0,s|0)|0;d=y;y=0;if(d&1){i=27;break}if(!(f[c>>2]|0)){i=28;break}c=Rya(b)|0;c=a+((f[s>>2]|0)-c<<2)|0;d=f[j>>2]|0;if((d|0)==(f[e>>2]|0)){y=0;ja(603,i|0,c|0);d=y;y=0;if(d&1){i=27;break}}else{f[d>>2]=f[c>>2];f[j>>2]=d+4}g=g+1|0}if((i|0)==28){y=0;ja(604,v|0,g|0);j=y;y=0;if(j&1)i=27;else i=31}if((i|0)==27)c=Pa()|0;else if((i|0)==31){MY(h);f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;y=0;ja(604,s|0,k|0);k=y;y=0;if(k&1)c=Pa()|0;else{e=f[l>>2]|0;d=0;c=f[v>>2]|0;while(1){if(d>>>0>=e-c>>2>>>0)break;if(qva(b,d)|0)a=d;else{c=f[v>>2]|0;a=f[c+(d<<2)>>2]|0}f[(f[s>>2]|0)+(a<<2)>>2]=d;d=d+1|0}Cba(r,b,s);y=0;ja(605,r|0,b+36|0);k=y;y=0;if(!(k&1)?(m=b+40|0,y=0,ja(606,q|0,m|0),k=y,y=0,!(k&1)):0){g=b+52|0;gua(p);e=b+56|0;a=p+4|0;c=f[g>>2]|0;a:while(1){if((c|0)==(e|0)){i=47;break}k=c+16|0;y=0;Ca(66,p|0,a|0,k|0,k|0);k=y;y=0;if(k&1){i=55;break}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue a}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}if((i|0)==47){e=f[m>>2]|0;c=b+44|0;d=f[c>>2]|0;while(1){if((d|0)==(e|0))break;b=d+-4|0;f[c>>2]=b;d=b}y=0;ja(607,m|0,(f[l>>2]|0)-(f[v>>2]|0)>>2|0);b=y;y=0;do if(!(b&1)){hW(g);a=q+4|0;e=0;while(1){c=f[v>>2]|0;if(e>>>0>=(f[l>>2]|0)-c>>2>>>0){i=53;break}c=f[c+(e<<2)>>2]|0;d=f[q>>2]|0;if(c>>>0<(f[a>>2]|0)-d>>2>>>0){c=f[d+(c<<2)>>2]|0;f[n>>2]=c;f[(f[m>>2]|0)+(e<<2)>>2]=c;y=0;c=ua(93,g|0,n|0)|0;b=y;y=0;if(b&1){i=60;break}f[c>>2]=e}e=e+1|0}if((i|0)==53){Kja(p);E4(q);Rua(r);E4(s);E4(t);E4(v);u=o;return}else if((i|0)==60){c=Pa()|0;break}}else c=Pa()|0;while(0);Kja(p)}else if((i|0)==55){c=Pa()|0;V3(p)}E4(q)}else c=Pa()|0;Rua(r)}E4(s)}E4(t);break}}c=Pa()|0}else if((i|0)==9)c=Pa()|0;while(0);E4(v);$a(c|0)}function Ee(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;p=u;u=u+96|0;r=p+84|0;q=p+72|0;i=p+60|0;k=p+48|0;l=p+36|0;m=p+24|0;n=p+12|0;o=p;g=fc(a,c,e)|0;a:do if((g|0)!=(a|0)){j=fc(g,c,e)|0;h=e+4|0;if((j|0)==(g|0)){g=f[h>>2]|0;c=g+-24|0;while(1){if((g|0)==(c|0))break a;r=g+-24|0;f[h>>2]=r;Xka(r);g=f[h>>2]|0}}c=f[h>>2]|0;if(((c-(f[e>>2]|0)|0)/24|0)>>>0>=2){HL(r,c+-24|0);a=f[h>>2]|0;c=a+-24|0;g=a;while(1){if((g|0)==(c|0))break;e=g+-24|0;f[h>>2]=e;Xka(e);g=f[h>>2]|0}y=0;ja(2054,q|0,a+-48|0);e=y;y=0;if(e&1)a=Pa()|0;else{a=f[h>>2]|0;e=a+-24|0;c=e+11|0;if((b[c>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+-20>>2]=0}else{SBa(e,0);b[c>>0]=0}a=uHa(72121)|0;c=d+11|0;h=b[c>>0]|0;g=d+4|0;if((a|0)==((h<<24>>24<0?f[g>>2]|0:h&255)|0)){y=0;a=oa(78,d|0,72121,a|0)|0;h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}if((a|0)==0?(y=0,ja(2053,e|0,40),h=y,y=0,h&1):0)h=17;else h=18}else h=18;b:do if((h|0)==18){y=0;ya(149,o|0,72085,q|0);a=y;y=0;if(a&1)a=Pa()|0;else{y=0;ua(165,o|0,72371)|0;a=y;y=0;if(a&1)a=Pa()|0;else{f[n>>2]=f[o>>2];f[n+4>>2]=f[o+4>>2];f[n+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}a=b[c>>0]|0;s=a<<24>>24<0;y=0;oa(73,n|0,(s?f[d>>2]|0:d)|0,(s?f[g>>2]|0:a&255)|0)|0;a=y;y=0;if(a&1)a=Pa()|0;else{f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,m|0,72080)|0;s=y;y=0;if(s&1)a=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}s=b[r+11>>0]|0;a=s<<24>>24<0;y=0;oa(73,l|0,(a?f[r>>2]|0:r)|0,(a?f[r+4>>2]|0:s&255)|0)|0;s=y;y=0;if(s&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,k|0,72083)|0;s=y;y=0;do if(s&1)a=Pa()|0;else{f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}s=b[i+11>>0]|0;a=s<<24>>24<0;y=0;oa(73,e|0,(a?f[i>>2]|0:i)|0,(a?f[i+4>>2]|0:s&255)|0)|0;s=y;y=0;if(s&1){a=Pa()|0;zta(i);break}zta(i);zta(k);zta(l);zta(m);zta(n);zta(o);a=uHa(72121)|0;s=b[c>>0]|0;do if((a|0)==((s<<24>>24<0?f[g>>2]|0:s&255)|0)){y=0;a=oa(78,d|0,72121,a|0)|0;s=y;y=0;if(s&1){s=ab(0)|0;lDa(s)}if(a|0)break;y=0;ja(2053,e|0,41);s=y;y=0;if(s&1){h=17;break b}}while(0);zta(q);zta(r);a=j;break a}while(0);zta(k)}zta(l)}zta(m)}zta(n)}zta(o)}}while(0);if((h|0)==17)a=Pa()|0;zta(q)}zta(r);$a(a|0)}}while(0);u=p;return a|0}function Fe(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=u;u=u+16|0;n=o;if(a){m=Jta(d,79276)|0;if(c){Mb[f[(f[m>>2]|0)+44>>2]&4095](n,m);d=f[n>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[m>>2]|0)+32>>2]&4095](n,m);d=k+11|0;if((b[d>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[d>>0]=0}y=0;ia(377,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);a=m}else{Mb[f[(f[m>>2]|0)+40>>2]&4095](n,m);d=f[n>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[m>>2]|0)+28>>2]&4095](n,m);d=k+11|0;if((b[d>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[d>>0]=0}y=0;ia(377,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);a=m}d=Ob[f[(f[m>>2]|0)+12>>2]&255](m)|0;b[g>>0]=d;d=Ob[f[(f[m>>2]|0)+16>>2]&255](m)|0;b[h>>0]=d;Mb[f[(f[a>>2]|0)+20>>2]&4095](n,m);d=i+11|0;if((b[d>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[d>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[n>>2];f[i+4>>2]=f[n+4>>2];f[i+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);Mb[f[(f[a>>2]|0)+24>>2]&4095](n,m);d=j+11|0;if((b[d>>0]|0)<0){SBa(f[j>>2]|0,0);f[j+4>>2]=0}else{SBa(j,0);b[d>>0]=0}y=0;ia(377,j|0);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}f[j>>2]=f[n>>2];f[j+4>>2]=f[n+4>>2];f[j+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);d=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0}else{m=Jta(d,79268)|0;if(c){Mb[f[(f[m>>2]|0)+44>>2]&4095](n,m);d=f[n>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[m>>2]|0)+32>>2]&4095](n,m);d=k+11|0;if((b[d>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[d>>0]=0}y=0;ia(377,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);a=m}else{Mb[f[(f[m>>2]|0)+40>>2]&4095](n,m);d=f[n>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[m>>2]|0)+28>>2]&4095](n,m);d=k+11|0;if((b[d>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[d>>0]=0}y=0;ia(377,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[n>>2];f[k+4>>2]=f[n+4>>2];f[k+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);a=m}d=Ob[f[(f[m>>2]|0)+12>>2]&255](m)|0;b[g>>0]=d;d=Ob[f[(f[m>>2]|0)+16>>2]&255](m)|0;b[h>>0]=d;Mb[f[(f[a>>2]|0)+20>>2]&4095](n,m);d=i+11|0;if((b[d>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[d>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[n>>2];f[i+4>>2]=f[n+4>>2];f[i+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);Mb[f[(f[a>>2]|0)+24>>2]&4095](n,m);d=j+11|0;if((b[d>>0]|0)<0){SBa(f[j>>2]|0,0);f[j+4>>2]=0}else{SBa(j,0);b[d>>0]=0}y=0;ia(377,j|0);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}f[j>>2]=f[n>>2];f[j+4>>2]=f[n+4>>2];f[j+8>>2]=f[n+8>>2];d=0;while(1){if((d|0)==3)break;f[n+(d<<2)>>2]=0;d=d+1|0}zta(n);d=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0}f[l>>2]=d;u=o;return}function Ge(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;p=o+8|0;m=o;Vea(Vea(76684,42707)|0,60408)|0;f[p>>2]=0;l=p+4|0;f[l>>2]=0;f[p+8>>2]=0;n=a+44|0;j=a+48|0;k=p+8|0;i=0;d=f[n>>2]|0;a:while(1){if((d|0)==(j|0)){e=3;break}g=d+16|0;e=f[g>>2]|0;g=f[g+4>>2]|0;h=m;f[h>>2]=e;f[h+4>>2]=g;h=f[l>>2]|0;if((h|0)==(f[k>>2]|0)){y=0;ja(1254,p|0,m|0);h=y;y=0;if(h&1){e=13;break}}else{f[h>>2]=e;f[l>>2]=(f[l>>2]|0)+4}g=g+i|0;e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){i=g;d=e;continue a}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}i=g}b:do if((e|0)==3){f[m>>2]=42714;d=f[l>>2]|0;if(d>>>0>=(f[k>>2]|0)>>>0){y=0;ja(1253,p|0,m|0);j=y;y=0;if(j&1){d=Pa()|0;break}}else{f[d>>2]=42714;f[l>>2]=(f[l>>2]|0)+4}f[m>>2]=42714;y=0;d=ua(104,n|0,m|0)|0;j=y;y=0;if(j&1){d=Pa()|0;break}f[d>>2]=i;i=c+36|0;h=c+40|0;e=f[h>>2]|0;g=0;d=f[i>>2]|0;while(1){if((d|0)==(e|0))break;g=(Vya(f[d>>2]|0)|0)+g|0;d=d+4|0}f[m>>2]=42722;d=f[l>>2]|0;if(d>>>0>=(f[k>>2]|0)>>>0){y=0;ja(1253,p|0,m|0);j=y;y=0;if(j&1){d=Pa()|0;break}}else{f[d>>2]=42722;f[l>>2]=(f[l>>2]|0)+4}f[m>>2]=42722;y=0;d=ua(104,n|0,m|0)|0;j=y;y=0;if(j&1){d=Pa()|0;break}f[d>>2]=g;f[m>>2]=42729;d=f[l>>2]|0;if(d>>>0>=(f[k>>2]|0)>>>0){y=0;ja(1253,p|0,m|0);j=y;y=0;if(j&1){d=Pa()|0;break}}else{f[d>>2]=42729;f[l>>2]=(f[l>>2]|0)+4}g=f[h>>2]|0;d=f[i>>2]|0;f[m>>2]=42729;y=0;e=ua(104,n|0,m|0)|0;j=y;y=0;if(j&1){d=Pa()|0;break}f[e>>2]=g-d>>2;do if(b[c+112>>0]|0){e=f[c+104>>2]|0;g=0;d=f[c+100>>2]|0;while(1){if((d|0)==(e|0))break;g=(f[d+8>>2]|0)+g-(f[d+4>>2]|0)|0;d=d+16|0}f[m>>2]=42737;d=f[l>>2]|0;if(d>>>0>=(f[k>>2]|0)>>>0){y=0;ja(1253,p|0,m|0);j=y;y=0;if(j&1){d=Pa()|0;break b}}else{f[d>>2]=42737;f[l>>2]=(f[l>>2]|0)+4}f[m>>2]=42737;y=0;d=ua(104,n|0,m|0)|0;j=y;y=0;if(j&1){d=Pa()|0;break b}else{f[d>>2]=g;break}}while(0);do if(b[c+60>>0]|0){e=f[c+80>>2]|0;g=0;d=f[c+76>>2]|0;while(1){if((d|0)==(e|0))break;g=((f[d+8>>2]|0)-(f[d+4>>2]|0)>>2)+g|0;d=d+16|0}f[m>>2]=42751;d=f[l>>2]|0;if(d>>>0>=(f[k>>2]|0)>>>0){y=0;ja(1253,p|0,m|0);k=y;y=0;if(k&1){d=Pa()|0;break b}}else{f[d>>2]=42751;f[l>>2]=(f[l>>2]|0)+4}f[m>>2]=42751;y=0;d=ua(104,n|0,m|0)|0;k=y;y=0;if(k&1){d=Pa()|0;break b}else{f[d>>2]=g;break}}while(0);qg(f[p>>2]|0,f[l>>2]|0);h=f[l>>2]|0;g=f[p>>2]|0;c:while(1){if((g|0)==(h|0)){e=56;break}f[m>>2]=f[g>>2];y=0;d=ua(105,n|0,m|0)|0;l=y;y=0;if(l&1){e=70;break}e=f[d>>2]|0;y=0;d=ua(53,76684,72117)|0;l=y;y=0;if(l&1){e=70;break}l=76684+(f[(f[19171]|0)+-12>>2]|0)+4|0;f[l>>2]=f[l>>2]&-177|32;f[76684+(f[(f[19171]|0)+-12>>2]|0)+12>>2]=15;y=0;d=ua(53,d|0,f[m>>2]|0)|0;l=y;y=0;if(l&1){e=70;break}y=0;d=ua(53,d|0,71123)|0;l=y;y=0;if(l&1){e=70;break}f[76684+(f[(f[19171]|0)+-12>>2]|0)+12>>2]=8;y=0;ua(62,d|0,e|0)|0;l=y;y=0;if(l&1){e=70;break}d=f[18968]|0;do if(d|0?QZ(d+44|0,f[m>>2]|0)|0:0){y=0;d=ua(105,d+44|0,m|0)|0;l=y;y=0;if(l&1){e=70;break c}d=e-(f[d>>2]|0)|0;if(!d)break;l=76684+(f[(f[19171]|0)+-12>>2]|0)+4|0;f[l>>2]=f[l>>2]&-177|128;f[76684+(f[(f[19171]|0)+-12>>2]|0)+12>>2]=8;l=76684+(f[(f[19171]|0)+-12>>2]|0)+4|0;f[l>>2]=f[l>>2]|2048;y=0;ua(62,76684,d|0)|0;l=y;y=0;if(l&1){e=70;break c}l=76684+(f[(f[19171]|0)+-12>>2]|0)+4|0;f[l>>2]=f[l>>2]&-2049}while(0);y=0;ua(53,76684,60408)|0;l=y;y=0;if(l&1){e=70;break}g=g+4|0}if((e|0)==56){f[18968]=a;E4(p);u=o;return}else if((e|0)==70){d=Pa()|0;break}}else if((e|0)==13)d=Pa()|0;while(0);E4(p);$a(d|0)}function He(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;n=u;u=u+16|0;m=n;if(a){a=Jta(d,79292)|0;if(c){Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);d=f[m>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);d=k+8+3|0;if((b[d>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[d>>0]=0}y=0;ia(402,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m)}else{Mb[f[(f[a>>2]|0)+40>>2]&4095](m,a);d=f[m>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);d=k+8+3|0;if((b[d>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[d>>0]=0}y=0;ia(402,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m)}d=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;f[g>>2]=d;d=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;f[h>>2]=d;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);d=i+11|0;if((b[d>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[d>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);d=j+8+3|0;if((b[d>>0]|0)<0){FCa(f[j>>2]|0,0);f[j+4>>2]=0}else{FCa(j,0);b[d>>0]=0}y=0;ia(402,j|0);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m);d=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}else{a=Jta(d,79284)|0;if(c){Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);d=f[m>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);d=k+8+3|0;if((b[d>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[d>>0]=0}y=0;ia(402,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m)}else{Mb[f[(f[a>>2]|0)+40>>2]&4095](m,a);d=f[m>>2]|0;b[e>>0]=d;b[e+1>>0]=d>>8;b[e+2>>0]=d>>16;b[e+3>>0]=d>>24;Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);d=k+8+3|0;if((b[d>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[d>>0]=0}y=0;ia(402,k|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m)}d=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;f[g>>2]=d;d=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;f[h>>2]=d;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);d=i+11|0;if((b[d>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[d>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);d=j+8+3|0;if((b[d>>0]|0)<0){FCa(f[j>>2]|0,0);f[j+4>>2]=0}else{FCa(j,0);b[d>>0]=0}y=0;ia(402,j|0);i=y;y=0;if(i&1){i=ab(0)|0;lDa(i)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}jta(m);d=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}f[l>>2]=d;u=n;return}function Ie(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;x=u;u=u+144|0;t=x+128|0;d=x+124|0;g=x+112|0;h=x+108|0;i=x+96|0;j=x+92|0;k=x+80|0;l=x+76|0;m=x+64|0;o=x+60|0;n=x+48|0;p=x+44|0;q=x+32|0;r=x+28|0;s=x+16|0;v=x+12|0;w=x;f[d>>2]=f[18963];f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=uHa(43869)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[g+11>>0]=e;c=g}else{z=e+16&-16;c=nV(z)|0;f[g>>2]=c;f[g+8>>2]=z|-2147483648;f[g+4>>2]=e}Pta(c,43869,e)|0;SBa(c+e|0,0);y=0;f[t>>2]=f[d>>2];ya(94,a|0,t|0,g|0);z=y;y=0;do if(!(z&1)){zta(g);f[h>>2]=f[18962];f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=uHa(43874)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[i+11>>0]=d;c=i}else{z=d+16&-16;c=nV(z)|0;f[i>>2]=c;f[i+8>>2]=z|-2147483648;f[i+4>>2]=d}Pta(c,43874,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[h>>2];ya(94,a|0,t|0,i|0);z=y;y=0;if(z&1){c=Pa()|0;zta(i);break}zta(i);f[j>>2]=f[18961];f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(43879)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[k+11>>0]=d;c=k}else{z=d+16&-16;c=nV(z)|0;f[k>>2]=c;f[k+8>>2]=z|-2147483648;f[k+4>>2]=d}Pta(c,43879,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[j>>2];ya(94,a|0,t|0,k|0);z=y;y=0;if(z&1){c=Pa()|0;zta(k);break}zta(k);f[l>>2]=f[18960];f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;d=uHa(43884)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[m+11>>0]=d;c=m}else{z=d+16&-16;c=nV(z)|0;f[m>>2]=c;f[m+8>>2]=z|-2147483648;f[m+4>>2]=d}Pta(c,43884,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[l>>2];ya(94,a|0,t|0,m|0);z=y;y=0;if(z&1){c=Pa()|0;zta(m);break}zta(m);f[o>>2]=f[18959];f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;d=uHa(43869)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[n+11>>0]=d;c=n}else{z=d+16&-16;c=nV(z)|0;f[n>>2]=c;f[n+8>>2]=z|-2147483648;f[n+4>>2]=d}Pta(c,43869,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[o>>2];ya(94,a|0,t|0,n|0);z=y;y=0;if(z&1){c=Pa()|0;zta(n);break}zta(n);f[p>>2]=f[18958];f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;d=uHa(43874)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[q+11>>0]=d;c=q}else{z=d+16&-16;c=nV(z)|0;f[q>>2]=c;f[q+8>>2]=z|-2147483648;f[q+4>>2]=d}Pta(c,43874,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[p>>2];ya(94,a|0,t|0,q|0);z=y;y=0;if(z&1){c=Pa()|0;zta(q);break}zta(q);f[r>>2]=f[18957];f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;d=uHa(43879)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[s+11>>0]=d;c=s}else{z=d+16&-16;c=nV(z)|0;f[s>>2]=c;f[s+8>>2]=z|-2147483648;f[s+4>>2]=d}Pta(c,43879,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[r>>2];ya(94,a|0,t|0,s|0);z=y;y=0;if(z&1){c=Pa()|0;zta(s);break}zta(s);f[v>>2]=f[18956];f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;d=uHa(43884)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[w+11>>0]=d;c=w}else{z=d+16&-16;c=nV(z)|0;f[w>>2]=c;f[w+8>>2]=z|-2147483648;f[w+4>>2]=d}Pta(c,43884,d)|0;SBa(c+d|0,0);y=0;f[t>>2]=f[v>>2];ya(94,a|0,t|0,w|0);z=y;y=0;if(z&1){c=Pa()|0;zta(w);break}else{zta(w);u=x;return}}else{c=Pa()|0;zta(g)}while(0);$a(c|0)}function Je(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;J=u;u=u+128|0;I=J;K=J+104|0;H=J+88|0;h=J+120|0;G=J+72|0;x=J+56|0;i=J+68|0;F=J+40|0;z=J+24|0;v=J+20|0;e=f[a>>2]|0;w=b+8|0;do if(Xha(e,b)|0){d=a+8|0;tI(K,f[(f[w>>2]|0)+4>>2]|0,e,f[d>>2]|0,f[18679]|0);Qya(H);c=f[d>>2]|0;g=f[K+8>>2]|0;FCa(h,gKa(g)|0);y=0;f[I>>2]=f[h>>2];c=ua(60,c|0,I|0)|0;t=y;y=0;if(!(t&1)?(f[H+8>>2]=c,A=b+12|0,y=0,ga(4,G|0,f[(f[A>>2]|0)+4>>2]|0,f[a>>2]|0,f[d>>2]|0,f[18679]|0),t=y,y=0,!(t&1)):0){Qya(x);c=f[d>>2]|0;e=f[G+8>>2]|0;FCa(i,gKa(e)|0);y=0;f[I>>2]=f[i>>2];c=ua(60,c|0,I|0)|0;t=y;y=0;if(!(t&1)?(f[x+8>>2]=c,y=0,ga(4,F|0,1,f[a>>2]|0,f[d>>2]|0,f[18679]|0),t=y,y=0,!(t&1)):0){Qya(z);c=f[d>>2]|0;d=f[F+8>>2]|0;FCa(v,gKa(d)|0);y=0;f[I>>2]=f[v>>2];c=ua(60,c|0,I|0)|0;v=y;y=0;if(v&1)c=Pa()|0;else{f[z+8>>2]=c;t=b;v=f[t+4>>2]|0;c=I;f[c>>2]=f[t>>2];f[c+4>>2]=v;f[I+8>>2]=H;f[I+12>>2]=x;f[I+16>>2]=z;y=0;c=oa(42,a|0,f[w>>2]|0,g|0)|0;H=y;y=0;if(((((((!(H&1)?(y=0,B=la(157,c|0)|0,H=y,y=0,!(H&1)):0)?(y=0,C=oa(42,a|0,f[A>>2]|0,e|0)|0,H=y,y=0,!(H&1)):0)?(y=0,ja(78,B|0,C|0),H=y,y=0,!(H&1)):0)?(y=0,D=oa(42,a|0,f[b+16>>2]|0,d|0)|0,H=y,y=0,!(H&1)):0)?(y=0,ja(78,B|0,D|0),H=y,y=0,!(H&1)):0)?(y=0,E=oa(43,a|0,I|0,f[a+4>>2]|0)|0,I=y,y=0,!(I&1)):0)?(y=0,ja(78,B|0,E|0),I=y,y=0,!(I&1)):0){iX(F);iX(G);iX(K);c=B;d=44;break}c=Pa()|0}iX(F)}else c=Pa()|0;iX(G)}else c=Pa()|0;iX(K);d=45}else{e=AT(a,f[w>>2]|0,f[18680]|0)|0;g=AT(a,f[b+12>>2]|0,f[18680]|0)|0;h=AT(a,f[b+16>>2]|0,f[18680]|0)|0;b=b+4|0;d=a+8|0;tI(I,f[b>>2]|0,f[a>>2]|0,f[d>>2]|0,f[18679]|0);y=0;ga(4,K|0,f[b>>2]|0,f[a>>2]|0,f[d>>2]|0,f[18679]|0);b=y;y=0;if(b&1)c=Pa()|0;else{y=0;ga(4,H|0,1,f[a>>2]|0,f[d>>2]|0,f[18679]|0);a=y;y=0;if(a&1)c=Pa()|0;else{y=0;d=la(154,H|0)|0;a=y;y=0;if((((((((((((!(a&1)?(y=0,j=oa(41,d|0,f[18859]|0,h|0)|0,a=y,y=0,!(a&1)):0)?(y=0,k=la(154,I|0)|0,a=y,y=0,!(a&1)):0)?(y=0,l=oa(41,k|0,f[18859]|0,e|0)|0,a=y,y=0,!(a&1)):0)?(y=0,m=la(154,K|0)|0,a=y,y=0,!(a&1)):0)?(y=0,n=oa(41,m|0,f[18859]|0,g|0)|0,a=y,y=0,!(a&1)):0)?(y=0,o=la(154,H|0)|0,a=y,y=0,!(a&1)):0)?(y=0,p=la(154,I|0)|0,a=y,y=0,!(a&1)):0)?(y=0,q=la(154,K|0)|0,a=y,y=0,!(a&1)):0)?(y=0,r=oa(44,o|0,p|0,q|0)|0,a=y,y=0,!(a&1)):0)?(y=0,s=ua(61,n|0,r|0)|0,a=y,y=0,!(a&1)):0)?(y=0,t=ua(61,l|0,s|0)|0,a=y,y=0,!(a&1)):0)?(y=0,c=ua(61,j|0,t|0)|0,a=y,y=0,!(a&1)):0){iX(H);iX(K);iX(I);d=44;break}c=Pa()|0;iX(H)}iX(K)}iX(I);d=45}while(0);if((d|0)==44){u=J;return c|0}else if((d|0)==45)$a(c|0);return 0}function Ke(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:do if(c>>>0>36){f[2619]=22;g=0;e=0}else{r=a+4|0;q=a+100|0;do{i=f[r>>2]|0;if(i>>>0<(f[q>>2]|0)>>>0){f[r>>2]=i+1;i=h[i>>0]|0}else i=kz(a)|0}while((kEa(i)|0)!=0);b:do switch(i|0){case 43:case 45:{i=((i|0)==45)<<31>>31;j=f[r>>2]|0;if(j>>>0<(f[q>>2]|0)>>>0){f[r>>2]=j+1;p=i;i=h[j>>0]|0;break b}else{p=i;i=kz(a)|0;break b}}default:p=0}while(0);j=(c|0)==0;do if((c|16|0)==16&(i|0)==48){i=f[r>>2]|0;if(i>>>0<(f[q>>2]|0)>>>0){f[r>>2]=i+1;i=h[i>>0]|0}else i=kz(a)|0;if((i|32|0)!=120)if(j){c=8;n=46;break}else{n=32;break}i=f[r>>2]|0;if(i>>>0<(f[q>>2]|0)>>>0){f[r>>2]=i+1;i=h[i>>0]|0}else i=kz(a)|0;if((h[64615+i>>0]|0)>15){e=(f[q>>2]|0)!=0;if(e)f[r>>2]=(f[r>>2]|0)+-1;if(!d){z9(a,0);g=0;e=0;break a}if(!e){g=0;e=0;break a}f[r>>2]=(f[r>>2]|0)+-1;g=0;e=0;break a}else{c=16;n=46}}else{c=j?10:c;if((h[64615+i>>0]|0)>>>0<c>>>0)n=32;else{if(f[q>>2]|0)f[r>>2]=(f[r>>2]|0)+-1;z9(a,0);f[2619]=22;g=0;e=0;break a}}while(0);c:do if((n|0)==32)if((c|0)==10){c=i+-48|0;if(c>>>0<10){i=0;j=c;do{i=(i*10|0)+j|0;c=f[r>>2]|0;if(c>>>0<(f[q>>2]|0)>>>0){f[r>>2]=c+1;c=h[c>>0]|0}else c=kz(a)|0;j=c+-48|0}while(j>>>0<10&i>>>0<429496729);d=0}else{c=i;i=0;d=0}k=c+-48|0;if(k>>>0<10){j=c;do{c=oea(i|0,d|0,10,0)|0;l=J;m=((k|0)<0)<<31>>31;o=~m;if(l>>>0>o>>>0|(l|0)==(o|0)&c>>>0>~k>>>0){c=10;n=72;break c}i=Hsa(c|0,l|0,k|0,m|0)|0;d=J;c=f[r>>2]|0;if(c>>>0<(f[q>>2]|0)>>>0){f[r>>2]=c+1;j=h[c>>0]|0}else j=kz(a)|0;k=j+-48|0}while(k>>>0<10&(d>>>0<429496729|(d|0)==429496729&i>>>0<2576980378));if(k>>>0>9){j=p;c=d}else{c=10;n=72}}else{j=p;c=d}}else n=46;while(0);d:do if((n|0)==46){if(!(c+-1&c)){n=b[64871+((c*23|0)>>>5&7)>>0]|0;d=b[64615+i>>0]|0;j=d&255;if(j>>>0<c>>>0){i=0;k=j;do{i=k|i<<n;j=f[r>>2]|0;if(j>>>0<(f[q>>2]|0)>>>0){f[r>>2]=j+1;j=h[j>>0]|0}else j=kz(a)|0;d=b[64615+j>>0]|0;k=d&255}while(i>>>0<134217728&k>>>0<c>>>0);k=0}else{j=i;k=0;i=0}l=Bna(-1,-1,n|0)|0;m=J;if((d&255)>>>0>=c>>>0|(k>>>0>m>>>0|(k|0)==(m|0)&i>>>0>l>>>0)){d=k;n=72;break}else j=k;while(1){i=gna(i|0,j|0,n|0)|0;k=J;i=d&255|i;j=f[r>>2]|0;if(j>>>0<(f[q>>2]|0)>>>0){f[r>>2]=j+1;j=h[j>>0]|0}else j=kz(a)|0;d=b[64615+j>>0]|0;if((d&255)>>>0>=c>>>0|(k>>>0>m>>>0|(k|0)==(m|0)&i>>>0>l>>>0)){d=k;n=72;break d}else j=k}}d=b[64615+i>>0]|0;j=d&255;if(j>>>0<c>>>0){i=0;k=j;do{i=k+(Y(i,c)|0)|0;j=f[r>>2]|0;if(j>>>0<(f[q>>2]|0)>>>0){f[r>>2]=j+1;j=h[j>>0]|0}else j=kz(a)|0;d=b[64615+j>>0]|0;k=d&255}while(i>>>0<119304647&k>>>0<c>>>0);k=0}else{j=i;i=0;k=0}if((d&255)>>>0<c>>>0){n=Uxa(-1,-1,c|0,0)|0;o=J;m=k;while(1){if(m>>>0>o>>>0|(m|0)==(o|0)&i>>>0>n>>>0){d=m;n=72;break d}k=oea(i|0,m|0,c|0,0)|0;l=J;d=d&255;if(l>>>0>4294967295|(l|0)==-1&k>>>0>~d>>>0){d=m;n=72;break d}i=Hsa(d|0,0,k|0,l|0)|0;k=J;j=f[r>>2]|0;if(j>>>0<(f[q>>2]|0)>>>0){f[r>>2]=j+1;j=h[j>>0]|0}else j=kz(a)|0;d=b[64615+j>>0]|0;if((d&255)>>>0>=c>>>0){d=k;n=72;break}else m=k}}else{d=k;n=72}}while(0);if((n|0)==72)if((h[64615+j>>0]|0)>>>0<c>>>0){do{i=f[r>>2]|0;if(i>>>0<(f[q>>2]|0)>>>0){f[r>>2]=i+1;i=h[i>>0]|0}else i=kz(a)|0}while((h[64615+i>>0]|0)>>>0<c>>>0);f[2619]=34;j=(e&1|0)==0&0==0?p:0;c=g;i=e}else{j=p;c=d}if(f[q>>2]|0)f[r>>2]=(f[r>>2]|0)+-1;if(!(c>>>0<g>>>0|(c|0)==(g|0)&i>>>0<e>>>0)){if(!((e&1|0)!=0|0!=0|(j|0)!=0)){f[2619]=34;e=Hsa(e|0,g|0,-1,-1)|0;g=J;break}if(c>>>0>g>>>0|(c|0)==(g|0)&i>>>0>e>>>0){f[2619]=34;break}}e=((j|0)<0)<<31>>31;e=Aoa(i^j|0,c^e|0,j|0,e|0)|0;g=J}while(0);J=g;return e|0}function Le(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;A=u;u=u+96|0;B=A+72|0;C=A+56|0;z=A+52|0;v=A+40|0;e=A+36|0;q=A+32|0;s=A+24|0;i=A+28|0;p=A+8|0;t=A;o=A+20|0;n=A+16|0;m=A+12|0;x=A+4|0;Z9(B,b);f[C>>2]=C;j=C+4|0;f[j>>2]=C;k=C+8|0;f[k>>2]=0;l=a+16|0;c=f[l>>2]|0;gKa(c)|0;r=B+4|0;w=EFa(a)|0;a=c;c=z;while(1){f[c>>2]=a;a=f[z>>2]|0;if((a|0)==(w|0)){c=3;break}c=f[a+8>>2]|0;f[v>>2]=c;y=0;d=ua(84,r|0,v|0)|0;h=y;y=0;if(h&1){c=9;break}f[d>>2]=c;y=0;c=ua(82,b|0,v|0)|0;h=y;y=0;if(h&1){c=9;break}y=0;ja(550,c|0,v|0);h=y;y=0;if(h&1){c=9;break}y=0;ja(584,C|0,v|0);h=y;y=0;if(h&1){c=9;break}f[z>>2]=f[a+4>>2];c=e}do if((c|0)==3){h=B+8|0;a:while(1){if(!(f[k>>2]|0)){c=28;break}f[z>>2]=f[(f[j>>2]|0)+8>>2];u3(C);y=0;a=ua(84,r|0,z|0)|0;g=y;y=0;if(g&1){c=13;break}e=f[a>>2]|0;f[v>>2]=e;g=e;if(e|0){d=f[z>>2]|0;a=f[d+16>>2]|0;gKa(a)|0;c=q;while(1){f[c>>2]=a;c=EFa(d)|0;d=f[q>>2]|0;if((d|0)==(c|0))break;a=f[d+8>>2]|0;f[s>>2]=a;c=OO(r,a)|0;if((c|0)==(h|0)){y=0;a=ua(84,r|0,s|0)|0;c=y;y=0;if(c&1){c=25;break a}f[a>>2]=g;y=0;a=ua(82,b|0,v|0)|0;c=y;y=0;if(c&1){c=25;break a}y=0;ja(550,a|0,s|0);c=y;y=0;if(c&1){c=25;break a}y=0;ja(584,C|0,s|0);c=y;y=0;if(c&1){c=25;break a}}else{c=f[c+20>>2]|0;if(!((c|0)==0|(c|0)==(e|0))?(y=0,ja(588,B|0,a|0),c=y,y=0,c&1):0){c=25;break a}}f[q>>2]=f[d+4>>2];a=d;c=i;d=f[z>>2]|0}}}if((c|0)==13)a=Pa()|0;else if((c|0)==25)a=Pa()|0;else if((c|0)==28){a=f[l>>2]|0;gKa(a)|0;i=v+4|0;j=v+8|0;c=z;b:while(1){f[c>>2]=a;c=f[z>>2]|0;a=c;if((a|0)==(w|0)){c=30;break}y=0;c=ua(82,b|0,c+8|0)|0;k=y;y=0;if(k&1){c=35;break}f[v>>2]=v;f[i>>2]=v;f[j>>2]=0;d=f[c+16>>2]|0;gKa(d)|0;h=EFa(c)|0;c=d;d=q;while(1){f[d>>2]=c;c=f[q>>2]|0;if((c|0)==(h|0))break;g=f[c+8>>2]|0;f[s>>2]=g;d=f[g+40>>2]|0;gKa(d)|0;e=p;while(1){f[e>>2]=d;k=EFa(g+24|0)|0;g=f[p>>2]|0;if((g|0)==(k|0))break;f[t>>2]=f[g+8>>2];y=0;d=ua(84,r|0,t|0)|0;k=y;y=0;if(k&1){c=44;break b}d=f[d>>2]|0;y=0;e=ua(84,r|0,s|0)|0;k=y;y=0;if(k&1){c=44;break b}if((d|0)!=(f[e>>2]|0)?(y=0,ja(584,v|0,s|0),k=y,y=0,k&1):0){c=44;break b}f[p>>2]=f[g+4>>2];d=g;e=o;g=f[s>>2]|0}f[q>>2]=f[c+4>>2];d=n}while(1){if(!(f[j>>2]|0))break;k=f[(f[i>>2]|0)+8>>2]|0;u3(v);y=0;ja(588,B|0,k|0);k=y;y=0;if(k&1){c=47;break b}}Qua(v);f[z>>2]=f[a+4>>2];c=m}if((c|0)==30){a=f[l>>2]|0;gKa(a)|0;c=z;while(1){f[c>>2]=a;c=f[z>>2]|0;a=c;if((a|0)==(w|0)){c=52;break}c=c+8|0;y=0;d=ua(82,b|0,c|0)|0;v=y;y=0;if(v&1){c=57;break}if(!(gKa(f[d+8>>2]|0)|0))LL(b,f[c>>2]|0);f[z>>2]=f[a+4>>2];c=x}if((c|0)==52){Qua(C);lca(B);u=A;return}else if((c|0)==57){a=Pa()|0;break}}else if((c|0)==35)a=Pa()|0;else if((c|0)==44){a=Pa()|0;c=49}else if((c|0)==47){a=Pa()|0;c=49}if((c|0)==49)Qua(v);break}}else if((c|0)==9)a=Pa()|0;while(0);Qua(C);lca(B);$a(a|0)}function Me(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;l=u;u=u+64|0;q=l+44|0;m=l+32|0;n=l+20|0;i=l+16|0;j=l+4|0;g=l;e=f[a>>2]|0;c=b[e>>0]|0;if(c<<24>>24==36){e=e+1|0;f[a>>2]=e;k=1;c=b[e>>0]|0}else k=0;o=a+4|0;p=a+8|0;h=a+16|0;a:do if(c<<24>>24==34){d=e+1|0;f[a>>2]=d;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[q+(c<<2)>>2]=0;c=c+1|0}b:while(1){c=b[d>>0]|0;switch(c<<24>>24){case 0:{r=9;break b}case 34:{r=36;break b}case 92:{y=0;ja(82,q|0,92);r=y;y=0;if(r&1){r=30;break b}c=b[(f[a>>2]|0)+1>>0]|0;if(!(c<<24>>24)){r=22;break b}y=0;ja(82,q|0,c|0);r=y;y=0;if(r&1){r=30;break b}else c=2;break}default:{y=0;ja(82,q|0,c|0);r=y;y=0;if(r&1){r=30;break b}else c=1}}d=(f[a>>2]|0)+c|0;f[a>>2]=d}c:do if((r|0)==9){h=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;g=uHa(51904)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[m+11>>0]=g;c=m}else{d=g+16&-16;y=0;c=la(150,d|0)|0;a=y;y=0;if(a&1){r=17;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=g}Pta(c,51904,g)|0;SBa(c+g|0,0);y=0;Ca(79,h|0,m|0,f[o>>2]|0,e-(f[p>>2]|0)|0);p=y;y=0;if(p&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(!d)break c}else{y=0;za(3);y=0;r=17}while(0);if((r|0)==17)c=Pa()|0;Oa(h|0)}else if((r|0)==22){h=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(51924)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;c=n}else{d=g+16&-16;y=0;c=la(150,d|0)|0;a=y;y=0;if(a&1){r=31;break}f[n>>2]=c;f[n+8>>2]=d|-2147483648;f[n+4>>2]=g}Pta(c,51924,g)|0;SBa(c+g|0,0);y=0;Ca(79,h|0,n|0,f[o>>2]|0,e-(f[p>>2]|0)|0);p=y;y=0;if(p&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}c=Pa()|0;zta(n);if(!d)break c}else{y=0;za(3);y=0;r=31}while(0);if((r|0)==31)c=Pa()|0;Oa(h|0)}else if((r|0)==36){f[a>>2]=d+1;y=0;c=la(199,h|0)|0;r=y;y=0;if(!(r&1)?(y=0,ya(64,i|0,((b[q+11>>0]|0)<0?f[q>>2]|0:q)|0,0),r=y,y=0,!(r&1)):0){r=Dia(c,f[i>>2]|0,k,1)|0;Vla(r,f[o>>2]|0,e-(f[p>>2]|0)|0,f[a+12>>2]|0)|0;zta(q);r=57;break a}else r=30}while(0);if((r|0)==30)c=Pa()|0;zta(q);r=58}else{d=e;d:while(1){if(!(c<<24>>24)){c=0;break}if(kEa(c<<24>>24)|0)break;switch(c<<24>>24){case 40:case 41:case 59:break d;default:{}}q=d+1|0;f[a>>2]=q;c=b[q>>0]|0;d=q}if((e|0)!=(d|0)){b[d>>0]=0;r=Fra(h)|0;Tna(g,e,0);q=Dia(r,f[g>>2]|0,k,0)|0;Vla(q,f[o>>2]|0,e-(f[p>>2]|0)|0,f[a+12>>2]|0)|0;b[f[a>>2]>>0]=c;c=r;r=57;break}g=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(51784)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;q=y;y=0;if(q&1){r=53;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,51784,e)|0;SBa(c+e|0,0);y=0;Ca(79,g|0,j|0,f[o>>2]|0,(f[a>>2]|0)-(f[p>>2]|0)|0);q=y;y=0;if(q&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(j);if(!d){r=58;break a}}else{y=0;za(3);y=0;r=53}while(0);if((r|0)==53)c=Pa()|0;Oa(g|0);r=58}while(0);if((r|0)==57){u=l;return c|0}else if((r|0)==58)$a(c|0);return 0}function Ne(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;q=u;u=u+32|0;j=q+4|0;r=q+8|0;p=q;f[j>>2]=c;k=c;if(pJa(f[c+8>>2]|0)|0?(d=c+8|0,(WS(a+72|0,d)|0)==0):0){n=a+60|0;o=NK(n,d)|0;e=f[o>>2]|0;f[r>>2]=e;m=o+4|0;g=f[m>>2]|0;f[r+4>>2]=g;l=o+8|0;f[r+8>>2]=f[l>>2];f[l>>2]=0;f[m>>2]=0;f[o>>2]=0;oJ(n,d);n=e;a:do if((g|0)!=(e|0)){y=0;d=la(165,f[f[n>>2]>>2]|0)|0;o=y;y=0;do if(o&1)s=4;else{if(f[d+12>>2]|0){y=0;Ca(52,32669,32558,310,32709);y=0;s=4;break}o=a+48|0;h=a+52|0;m=g-e>>4;d=f[o>>2]|0;b:while(1){if((d|0)==(h|0))break a;l=f[d+16>>2]|0;e=0;while(1){if(e>>>0>=m>>>0)break b;if(!(QZ(n+(e<<4)+4|0,l)|0))break;else e=e+1|0}e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue b}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}h=c+16|0;if(gKa(f[h>>2]|0)|0){i=c+12|0;y=0;d=la(166,i|0)|0;g=y;y=0;if(!(g&1))if(sGa(f[f[d>>2]>>2]|0)|0){y=0;d=ua(79,o|0,l|0)|0;k=y;y=0;if(!(k&1)){g=f[d>>2]|0;y=0;d=la(167,f[g>>2]|0)|0;k=y;y=0;if(k&1){d=Pa()|0;break}e=f[d+12>>2]|0;d=(gKa(f[h>>2]|0)|0)+-1|0;y=0;d=ua(64,i|0,d|0)|0;k=y;y=0;if(k&1){d=Pa()|0;break}f[d>>2]=e;f[c+4>>2]=f[e+4>>2];_ua(f[g>>2]|0);k=a+36|0;j=0;while(1){if(j>>>0>=m>>>0){s=29;break}y=0;d=ua(79,n+(j<<4)+4|0,l|0)|0;i=y;y=0;if(i&1){s=36;break}g=f[d>>2]|0;i=f[n+(j<<4)>>2]|0;y=0;h=la(165,f[i>>2]|0)|0;e=y;y=0;if(e&1){s=37;break}d=h+12|0;if(f[d>>2]|0){s=35;break}y=0;e=la(167,f[g>>2]|0)|0;t=y;y=0;if(t&1)break;if(!(f[h+16>>2]|0)){f[d>>2]=f[e+12>>2];_ua(e)}else{f[d>>2]=e;_la(e,1);d=f[k>>2]|0;gKa(d)|0;y=0;d=la(168,d+144|0)|0;t=y;y=0;if(t&1){s=44;break}f[g>>2]=d;$5(h);d=f[k>>2]|0;gKa(d)|0;VBa(p,d);y=0;d=ua(80,f[p>>2]|0,h|0)|0;t=y;y=0;if(t&1){s=45;break}f[i>>2]=d}j=j+1|0}if((s|0)==29){d=f[k>>2]|0;gKa(d)|0;VBa(p,d);y=0;d=oa(48,f[p>>2]|0,l|0,c|0)|0;t=y;y=0;if(t&1){d=Pa()|0;break}else{jva(f[a+16>>2]|0,d)|0;LT(o);b[a+96>>0]=1;break a}}else if((s|0)==35){y=0;Ca(52,35542,32558,350,32709);y=0}else if((s|0)==36){d=Pa()|0;break}else if((s|0)==37){d=Pa()|0;break}else if((s|0)==44){d=Pa()|0;break}else if((s|0)==45){d=Pa()|0;break}d=Pa()|0;break}}else s=20}else s=20;do if((s|0)==20){d=a+152|0;e=f[d>>2]|0;if((e|0)==(f[a+156>>2]|0)){y=0;ja(115,a+148|0,j|0);t=y;y=0;if(t&1)break;else break a}else{f[e>>2]=k;f[d>>2]=(f[d>>2]|0)+4;break a}}while(0);d=Pa()|0}while(0);if((s|0)==4)d=Pa()|0;pX(r);$a(d|0)}while(0);pX(r)}u=q;return}function Oe(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+192|0;l=m+92|0;k=m;a:do if((f[b+4>>2]|0)!=5){i=a+40|0;h=0;b:while(1){while(1){switch(f[b>>2]|0){case 22:{b=0;break a}case 23:case 21:case 12:case 20:case 14:case 10:case 8:case 7:case 6:case 5:case 4:case 19:case 3:case 2:case 1:{g=41;break b}case 13:{g=5;break b}case 11:case 9:case 15:{g=8;break b}case 18:case 17:case 16:break;default:{g=40;break b}}if(c)break a;a=nAa(b)|0;if(a|0){g=11;break}a=eAa(b)|0;if(a|0){g=18;break}e=Qra(b)|0;g=uya(f[i>>2]|0)|0;a=e+8|0;Ot(l,g,f[a>>2]|0);g=jca(l)|0;hT(l);d=e+16|0;e=e+12|0;do if(g){g=uya(f[i>>2]|0)|0;Ot(l,g,f[e>>2]|0);g=jca(l)|0;hT(l);if(g)break a;g=uya(f[i>>2]|0)|0;Ot(l,g,f[d>>2]|0);g=jca(l)|0;hT(l);if(g)break a;else b=a}else{g=uya(f[i>>2]|0)|0;Ot(l,g,f[e>>2]|0);g=jca(l)|0;hT(l);if(g){g=uya(f[i>>2]|0)|0;Ot(l,g,f[d>>2]|0);g=jca(l)|0;hT(l);if(g)break a;else{b=e;break}}else{g=uya(f[i>>2]|0)|0;Ot(l,g,f[d>>2]|0);g=jca(l)|0;hT(l);if(g){b=d;break}else{b=0;break a}}}while(0);b=f[b>>2]|0}if((g|0)==11){Ot(l,uya(f[i>>2]|0)|0,0);tna(l,a);if(!(jca(l)|0)){g=uya(f[i>>2]|0)|0;a=a+12|0;y=0;ya(75,k|0,g|0,f[a>>2]|0);g=y;y=0;if(g&1){g=16;break}g=jca(k)|0;hT(k);if(g){d=2;e=h;b=f[a>>2]|0}else{d=1;e=0}}else{d=1;e=b}hT(l)}else if((g|0)==18){Ot(l,uya(f[i>>2]|0)|0,0);x$(l,a);do if(!(jca(l)|0)){e=uya(f[i>>2]|0)|0;g=a+12|0;y=0;ya(75,k|0,e|0,f[g>>2]|0);e=y;y=0;if(e&1){g=23;break b}e=jca(k)|0;hT(k);a=a+16|0;if(e){e=uya(f[i>>2]|0)|0;y=0;ya(75,k|0,e|0,f[a>>2]|0);e=y;y=0;if(e&1){g=24;break b}e=jca(k)|0;hT(k);if(e){d=1;e=b;break}d=2;e=h;b=f[g>>2]|0;break}else{g=uya(f[i>>2]|0)|0;y=0;ya(75,k|0,g|0,f[a>>2]|0);g=y;y=0;if(g&1){g=29;break b}g=jca(k)|0;hT(k);if(!g){d=1;e=0;break}d=2;e=h;b=f[a>>2]|0;break}}else{d=1;e=b}while(0);hT(l)}if((d|0)==1){b=e;break a}else h=e}if((g|0)==5){if(c)break;Ot(l,uya(f[i>>2]|0)|0,b);k=jca(l)|0;hT(l);if(k)break;b=(lsa(b)|0)+24|0;b=f[b>>2]|0;break}else if((g|0)==8){b=c?b:0;break}else if((g|0)==16){j=Pa()|0;hT(l)}else if((g|0)==23){b=Pa()|0;g=31}else if((g|0)==24){b=Pa()|0;g=31}else if((g|0)==29){b=Pa()|0;g=31}else if((g|0)==40)Ka();else if((g|0)==41)break;if((g|0)==31){hT(l);j=b}$a(j|0)}while(0);u=m;return b|0}function Pe(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=u;u=u+64|0;o=k+40|0;e=k+36|0;l=k+24|0;m=k+12|0;n=k;j=a+112|0;a:do if(Hra(c)|0){FCa(e,rr(c)|0);f[o>>2]=f[e>>2];d=hj(j,o)|0}else{y=0;h=la(204,c|0)|0;i=y;y=0;b:do if(i&1)p=12;else{f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;i=uHa(h)|0;if(i>>>0>4294967279){y=0;za(3);y=0;p=12;break}if(i>>>0<11){b[o+11>>0]=i;e=o}else{g=i+16&-16;y=0;e=la(150,g|0)|0;q=y;y=0;if(q&1){p=12;break}f[o>>2]=e;f[o+8>>2]=g|-2147483648;f[o+4>>2]=i}Pta(e,h,i)|0;SBa(e+i|0,0);y=0;g=la(211,o|0)|0;h=J;q=y;y=0;if(q&1){g=Ma(5800,5832)|0;e=J;zta(o);p=14;break}zta(o);e=f[j>>2]|0;d=(f[a+116>>2]|0)-e>>2;if(!(h>>>0>0|(h|0)==0&g>>>0>d>>>0)){if((g|0)==(d|0)&(h|0)==0){b[a+108>>0]=1;d=74948}else{d=Aoa(d+-1|0,0,g|0,h|0)|0;d=e+(d<<2)|0}d=f[d>>2]|0;break a}h=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(53111)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;d=n}else{e=g+16&-16;y=0;d=la(150,e|0)|0;q=y;y=0;if(q&1){p=48;break}f[n>>2]=d;f[n+8>>2]=e|-2147483648;f[n+4>>2]=g}Pta(d,53111,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,n|0,f[c+28>>2]|0,f[c+32>>2]|0);q=y;y=0;if(q&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(n);if(!e)break b}else{y=0;za(3);y=0;p=48}while(0);if((p|0)==48)d=Pa()|0;Oa(h|0)}while(0);if((p|0)==12){g=Ma(5800,5832)|0;e=J;p=14}do if((p|0)==14){if((e|0)==(Wa(5800)|0)){Vwa(o,jb(g|0)|0);Ya(g|0)|0;i=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;h=uHa(53064)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[m+11>>0]=h;e=m}else{g=h+16&-16;y=0;e=la(150,g|0)|0;q=y;y=0;if(q&1){p=36;break}f[m>>2]=e;f[m+8>>2]=g|-2147483648;f[m+4>>2]=h}Pta(e,53064,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,m|0);q=y;y=0;if(q&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(m);if(g)p=38}else{y=0;za(3);y=0;p=36}while(0);if((p|0)==36){e=Pa()|0;p=38}if((p|0)==38)Oa(i|0);Oya(o);y=0;za(5);q=y;y=0;if(!(q&1)){d=e;break}}else{if((e|0)!=(Wa(5832)|0)){d=g;break}kxa(o,jb(g|0)|0);Ya(g|0)|0;i=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;h=uHa(53085)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[l+11>>0]=h;e=l}else{g=h+16&-16;y=0;e=la(150,g|0)|0;q=y;y=0;if(q&1){p=32;break}f[l>>2]=e;f[l+8>>2]=g|-2147483648;f[l+4>>2]=h}Pta(e,53085,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,l|0);q=y;y=0;if(q&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(l);if(g)p=34}else{y=0;za(3);y=0;p=32}while(0);if((p|0)==32){e=Pa()|0;p=34}if((p|0)==34)Oa(i|0);Oya(o);y=0;za(5);q=y;y=0;if(!(q&1)){d=e;break}}q=ab(0)|0;lDa(q)}while(0);$a(d|0)}while(0);u=k;return d|0}function Qe(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;n=u;u=u+16|0;m=n;if(a){a=Jta(c,79276)|0;Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);c=f[m>>2]|0;b[d>>0]=c;b[d+1>>0]=c>>8;b[d+2>>0]=c>>16;b[d+3>>0]=c>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);c=k+11|0;if((b[c>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[c>>0]=0}y=0;ia(377,k|0);d=y;y=0;if(d&1){d=ab(0)|0;lDa(d)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);c=j+11|0;if((b[c>>0]|0)<0){SBa(f[j>>2]|0,0);f[j+4>>2]=0}else{SBa(j,0);b[c>>0]=0}y=0;ia(377,j|0);k=y;y=0;if(k&1){k=ab(0)|0;lDa(k)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);c=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;b[e>>0]=c;c=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;b[g>>0]=c;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);c=h+11|0;if((b[c>>0]|0)<0){SBa(f[h>>2]|0,0);f[h+4>>2]=0}else{SBa(h,0);b[c>>0]=0}y=0;ia(377,h|0);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);c=i+11|0;if((b[c>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[c>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);c=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}else{a=Jta(c,79268)|0;Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);c=f[m>>2]|0;b[d>>0]=c;b[d+1>>0]=c>>8;b[d+2>>0]=c>>16;b[d+3>>0]=c>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);c=k+11|0;if((b[c>>0]|0)<0){SBa(f[k>>2]|0,0);f[k+4>>2]=0}else{SBa(k,0);b[c>>0]=0}y=0;ia(377,k|0);d=y;y=0;if(d&1){d=ab(0)|0;lDa(d)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);c=j+11|0;if((b[c>>0]|0)<0){SBa(f[j>>2]|0,0);f[j+4>>2]=0}else{SBa(j,0);b[c>>0]=0}y=0;ia(377,j|0);k=y;y=0;if(k&1){k=ab(0)|0;lDa(k)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);c=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;b[e>>0]=c;c=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;b[g>>0]=c;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);c=h+11|0;if((b[c>>0]|0)<0){SBa(f[h>>2]|0,0);f[h+4>>2]=0}else{SBa(h,0);b[c>>0]=0}y=0;ia(377,h|0);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);c=i+11|0;if((b[c>>0]|0)<0){SBa(f[i>>2]|0,0);f[i+4>>2]=0}else{SBa(i,0);b[c>>0]=0}y=0;ia(377,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);c=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}f[l>>2]=c;u=n;return}function Re(a,c,d,e,g,h,i,j,k,l){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;n=u;u=u+16|0;m=n;if(a){a=Jta(c,79292)|0;Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);c=f[m>>2]|0;b[d>>0]=c;b[d+1>>0]=c>>8;b[d+2>>0]=c>>16;b[d+3>>0]=c>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);c=k+8+3|0;if((b[c>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[c>>0]=0}y=0;ia(402,k|0);d=y;y=0;if(d&1){d=ab(0)|0;lDa(d)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);c=j+8+3|0;if((b[c>>0]|0)<0){FCa(f[j>>2]|0,0);f[j+4>>2]=0}else{FCa(j,0);b[c>>0]=0}y=0;ia(402,j|0);k=y;y=0;if(k&1){k=ab(0)|0;lDa(k)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);c=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;f[e>>2]=c;c=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;f[g>>2]=c;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);c=h+11|0;if((b[c>>0]|0)<0){SBa(f[h>>2]|0,0);f[h+4>>2]=0}else{SBa(h,0);b[c>>0]=0}y=0;ia(377,h|0);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);c=i+8+3|0;if((b[c>>0]|0)<0){FCa(f[i>>2]|0,0);f[i+4>>2]=0}else{FCa(i,0);b[c>>0]=0}y=0;ia(402,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);c=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}else{a=Jta(c,79284)|0;Mb[f[(f[a>>2]|0)+44>>2]&4095](m,a);c=f[m>>2]|0;b[d>>0]=c;b[d+1>>0]=c>>8;b[d+2>>0]=c>>16;b[d+3>>0]=c>>24;Mb[f[(f[a>>2]|0)+32>>2]&4095](m,a);c=k+8+3|0;if((b[c>>0]|0)<0){FCa(f[k>>2]|0,0);f[k+4>>2]=0}else{FCa(k,0);b[c>>0]=0}y=0;ia(402,k|0);d=y;y=0;if(d&1){d=ab(0)|0;lDa(d)}f[k>>2]=f[m>>2];f[k+4>>2]=f[m+4>>2];f[k+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);Mb[f[(f[a>>2]|0)+28>>2]&4095](m,a);c=j+8+3|0;if((b[c>>0]|0)<0){FCa(f[j>>2]|0,0);f[j+4>>2]=0}else{FCa(j,0);b[c>>0]=0}y=0;ia(402,j|0);k=y;y=0;if(k&1){k=ab(0)|0;lDa(k)}f[j>>2]=f[m>>2];f[j+4>>2]=f[m+4>>2];f[j+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);c=Ob[f[(f[a>>2]|0)+12>>2]&255](a)|0;f[e>>2]=c;c=Ob[f[(f[a>>2]|0)+16>>2]&255](a)|0;f[g>>2]=c;Mb[f[(f[a>>2]|0)+20>>2]&4095](m,a);c=h+11|0;if((b[c>>0]|0)<0){SBa(f[h>>2]|0,0);f[h+4>>2]=0}else{SBa(h,0);b[c>>0]=0}y=0;ia(377,h|0);g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}zta(m);Mb[f[(f[a>>2]|0)+24>>2]&4095](m,a);c=i+8+3|0;if((b[c>>0]|0)<0){FCa(f[i>>2]|0,0);f[i+4>>2]=0}else{FCa(i,0);b[c>>0]=0}y=0;ia(402,i|0);h=y;y=0;if(h&1){h=ab(0)|0;lDa(h)}f[i>>2]=f[m>>2];f[i+4>>2]=f[m+4>>2];f[i+8>>2]=f[m+8>>2];c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}jta(m);c=Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0}f[l>>2]=c;u=n;return}function Se(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;r=u;u=u+64|0;w=r+40|0;x=r+28|0;s=r+24|0;t=r+12|0;v=r;f[w>>2]=0;q=w+4|0;f[q>>2]=0;f[w+8>>2]=0;f[x>>2]=0;p=x+4|0;f[p>>2]=0;f[x+8>>2]=0;j=a+16|0;y=0;c=la(199,j|0)|0;o=y;y=0;if(o&1)c=Pa()|0;else{f[s>>2]=c;k=a+12|0;l=w+8|0;m=a+4|0;n=a+8|0;o=x+8|0;i=c;g=c;e=c;a:while(1){y=0;ia(378,a|0);h=y;y=0;if(h&1){h=6;break}c=f[a>>2]|0;d=b[c>>0]|0;if(!(d<<24>>24)){h=43;break}c=c+1|0;switch(d<<24>>24){case 40:{f[a>>2]=c;c=f[q>>2]|0;if((c|0)==(f[l>>2]|0)){y=0;ja(1988,w|0,s|0);i=y;y=0;if(i&1){h=6;break a}}else{f[c>>2]=e;f[q>>2]=(f[q>>2]|0)+4}y=0;d=la(199,j|0)|0;i=y;y=0;if(i&1){h=6;break a}e=Vla(d,f[m>>2]|0,(f[a>>2]|0)+-1-(f[n>>2]|0)|0,f[k>>2]|0)|0;f[s>>2]=e;c=f[p>>2]|0;if((c|0)==(f[o>>2]|0)){y=0;ja(1989,x|0,k|0);i=y;y=0;if(i&1){h=6;break a}c=f[p>>2]|0}else{f[c>>2]=f[k>>2];c=(f[p>>2]|0)+4|0;f[p>>2]=c}if(((f[q>>2]|0)-(f[w>>2]|0)|0)==(c-(f[x>>2]|0)|0)){i=d;g=d;continue a}else{h=17;break a}}case 41:{f[a>>2]=c;c=f[w>>2]|0;d=f[q>>2]|0;if((c|0)==(d|0)){h=19;break a}e=f[d+-4>>2]|0;f[s>>2]=e;z=f[p>>2]|0;g=z;h=e;if((d-c|0)==(z-(f[x>>2]|0)|0))c=0;else{h=31;break a}while(1){if((c|0)==-1)break;z=c+-1|0;f[q>>2]=d+(z<<2);c=z}f[k>>2]=f[g+-4>>2];c=0;while(1){if((c|0)==-1)break;z=c+-1|0;f[p>>2]=g+(z<<2);c=z}y=0;c=la(200,h|0)|0;z=y;y=0;if(z&1){h=32;break a}y=0;ja(1990,c|0,i|0);z=y;y=0;if(z&1){h=32;break a}else{i=h;g=h;continue a}}default:{y=0;c=la(200,i|0)|0;z=y;y=0;if(z&1){h=6;break a}y=0;d=la(201,a|0)|0;z=y;y=0;if(z&1){h=6;break a}y=0;ja(1990,c|0,d|0);z=y;y=0;if(z&1){h=6;break a}else{e=i;continue a}}}}b:do if((h|0)==17){y=0;Ca(52,51800,51833,127,51860);y=0;h=6}else if((h|0)==19){g=zb(20)|0;f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;e=uHa(51866)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[t+11>>0]=e;c=t}else{d=e+16&-16;y=0;c=la(150,d|0)|0;z=y;y=0;if(z&1){h=27;break}f[t>>2]=c;f[t+8>>2]=d|-2147483648;f[t+4>>2]=e}Pta(c,51866,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,t|0);z=y;y=0;if(z&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(t);if(!d)break b}else{y=0;za(3);y=0;h=27}while(0);if((h|0)==27)c=Pa()|0;Oa(g|0)}else if((h|0)==31){y=0;Ca(52,51800,51833,135,51860);y=0;h=32}else if((h|0)==43){if((f[q>>2]|0)==(f[w>>2]|0)){E4(x);E4(w);u=r;return g|0}g=zb(20)|0;f[v>>2]=0;f[v+4>>2]=0;f[v+8>>2]=0;e=uHa(51885)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[v+11>>0]=e;c=v}else{d=e+16&-16;y=0;c=la(150,d|0)|0;z=y;y=0;if(z&1){h=52;break}f[v>>2]=c;f[v+8>>2]=d|-2147483648;f[v+4>>2]=e}Pta(c,51885,e)|0;SBa(c+e|0,0);z=f[s>>2]|0;y=0;Ca(79,g|0,v|0,f[z+28>>2]|0,f[z+32>>2]|0);z=y;y=0;if(z&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(v);if(!d)break b}else{y=0;za(3);y=0;h=52}while(0);if((h|0)==52)c=Pa()|0;Oa(g|0)}while(0);if((h|0)==6)c=Pa()|0;else if((h|0)==32)c=Pa()|0}E4(x);E4(w);$a(c|0);return 0}function Te(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;o=u;u=u+48|0;p=o+24|0;q=o+12|0;r=o;n=a+12|0;do if(b[n>>0]|0){e=Vea(76852,57962)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[p>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,d=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,m=y,y=0,!(m&1)):0){pza(p);jn(e,d)|0;Yp(e)|0;break}r=Pa()|0;pza(p);$a(r|0)}while(0);m=Nm(a)|0;do if(b[n>>0]|0){c=vj(Vea(76852,57222)|0,m)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[p>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,l=y,y=0,!(l&1)):0){pza(p);jn(c,g)|0;Yp(c)|0;break}r=Pa()|0;pza(p);$a(r|0)}while(0);l=0;a:while(1){if(l>>>0>=m>>>0){h=13;break}if(b[n>>0]|0){d=Vea(76852,57228)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[p>>2]|0,77556)|0;k=y;y=0;if(k&1){h=17;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;k=y;y=0;if(k&1){h=17;break}pza(p);jn(d,c)|0;Yp(d)|0}k=nV(20)|0;_pa(k);c=Om(a)|0;if((c|0)!=-32){h=20;break}j=Nm(a)|0;if(b[n>>0]|0){d=vj(Vea(76852,58e3)|0,j)|0;Axa(p,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[p>>2]|0,77556)|0;i=y;y=0;if(i&1){h=34;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;i=y;y=0;if(i&1){h=34;break}pza(p);jn(d,c)|0;Yp(d)|0}d=k+12|0;e=k+16|0;g=k+8|0;c=0;while(1){if((c|0)==(j|0))break;h=Op(a)|0;f[p>>2]=h;i=f[d>>2]|0;if(i>>>0<(f[e>>2]|0)>>>0){f[i>>2]=h;f[d>>2]=i+4}else XC(g,p);c=c+1|0}switch(Nm(a)|0){case 0:{c=0;break}case 1:{c=Op(a)|0;break}default:{h=43;break a}}f[k+4>>2]=c;j=f[a>>2]|0;j=EI((f[j+4>>2]|0)-(f[j>>2]|0)>>2)|0;f[k>>2]=j;rt(f[a>>2]|0,k);l=l+1|0}b:do if((h|0)==13){u=o;return}else if((h|0)==17){r=Pa()|0;pza(p);$a(r|0)}else if((h|0)==20){e=zb(20)|0;y=0;ja(593,p|0,c|0);r=y;y=0;do if(!(r&1)){y=0;ua(81,p|0,57980)|0;r=y;y=0;if(r&1){c=Pa()|0;zta(p);break}f[q>>2]=f[p>>2];f[q+4>>2]=f[p+4>>2];f[q+8>>2]=f[p+8>>2];c=0;while(1){if((c|0)==3)break;f[p+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,e|0,q|0);r=y;y=0;if(r&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(q);zta(p);if(!d)break b}else c=Pa()|0;while(0);Oa(e|0)}else if((h|0)==34){r=Pa()|0;pza(p);$a(r|0)}else if((h|0)==43){g=zb(20)|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;e=uHa(58013)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[r+11>>0]=e;c=r}else{d=e+16&-16;y=0;c=la(150,d|0)|0;q=y;y=0;if(q&1){h=51;break}f[r>>2]=c;f[r+8>>2]=d|-2147483648;f[r+4>>2]=e}Pta(c,58013,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,r|0);q=y;y=0;if(q&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(r);if(!d)break b}else{y=0;za(3);y=0;h=51}while(0);if((h|0)==51)c=Pa()|0;Oa(g|0)}while(0);$a(c|0)}function Ue(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;w=u;u=u+128|0;v=w+80|0;B=w+40|0;A=w+24|0;x=w+12|0;z=w;r=a+16|0;s=c+36|0;i=c+40|0;j=A+4|0;k=x+8|0;l=c+76|0;m=c+80|0;n=x+4|0;o=c+116|0;p=c+24|0;q=c+28|0;a:while(1){UV(r);a=f[i>>2]|0;b=f[s>>2]|0;while(1){if((b|0)==(a|0))break;f[v>>2]=f[b>>2];h=EN(r,v)|0;f[h>>2]=0;b=b+4|0}kca(B,c);XAa(B,1);y=0;ja(1632,B|0,r|0);h=y;y=0;if(h&1){a=10;break}y=0;ia(341,B|0);h=y;y=0;if(h&1){a=10;break}gua(A);h=f[i>>2]|0;g=f[s>>2]|0;while(1){if((g|0)==(h|0))break;f[v>>2]=f[g>>2];y=0;b=ua(122,r|0,v|0)|0;e=y;y=0;if(e&1){a=17;break a}y=0;b=ua(123,A|0,b|0)|0;e=y;y=0;if(e&1){a=17;break a}a=f[g>>2]|0;f[x>>2]=a;d=b+4|0;e=f[d>>2]|0;if(e>>>0>=(f[b+8>>2]|0)>>>0){y=0;ja(1633,b|0,x|0);e=y;y=0;if(e&1){a=18;break a}}else{f[e>>2]=a;f[d>>2]=(f[d>>2]|0)+4}g=g+4|0}gua(x);gua(z);b=f[A>>2]|0;b:while(1){if((b|0)==(j|0))break;e=f[b+24>>2]|0;h=f[b+20>>2]|0;a=h;g=e;c:do if((e-h|0)!=4){h=f[a>>2]|0;while(1){if((a|0)==(g|0))break c;e=f[a>>2]|0;if((e|0)!=(h|0)){y=0;d=ua(124,e|0,h|0)|0;C=y;y=0;if(C&1){a=36;break a}if(d){y=0;d=ua(108,x|0,e|0)|0;C=y;y=0;if(C&1){a=36;break a}f[d>>2]=f[h>>2];y=0;Ca(59,v|0,z|0,e|0,e|0);C=y;y=0;if(C&1){a=36;break a}}}a=a+4|0}}while(0);a=f[b+4>>2]|0;if(!a)while(1){a=f[b+8>>2]|0;if((f[a>>2]|0)==(b|0)){b=a;continue b}else b=a}else b=a;while(1){a=f[b>>2]|0;if(!a)break;else b=a}}if(!(f[k>>2]|0)){a=59;break}C=Aw(f[s>>2]|0,f[i>>2]|0,z)|0;uC(s,C,f[i>>2]|0);y=0;ia(363,c|0);C=y;y=0;if(C&1){a=43;break}kca(v,c);XAa(v,1);y=0;ja(1634,v|0,x|0);C=y;y=0;if(C&1){a=58;break}y=0;ia(341,v|0);C=y;y=0;if(C&1){a=58;break}d=f[m>>2]|0;a=f[l>>2]|0;while(1){if((a|0)==(d|0))break;e=f[a+8>>2]|0;b=f[a+4>>2]|0;while(1){if((b|0)==(e|0))break;g=SN(x,b)|0;if((g|0)!=(n|0))f[b>>2]=f[g+20>>2];b=b+4|0}a=a+16|0}if(pJa(f[o>>2]|0)|0?(t=SN(x,o)|0,(t|0)!=(n|0)):0)f[o>>2]=f[t+20>>2];a=f[q>>2]|0;b=f[p>>2]|0;while(1){if((b|0)==(a|0))break;d=(f[b>>2]|0)+4|0;e=SN(x,d)|0;if((e|0)!=(n|0))f[d>>2]=f[e+20>>2];b=b+4|0}SY(v);Cta(z);Ria(x);Qba(A);SY(B)}if((a|0)==10)b=Pa()|0;else if((a|0)==17){b=Pa()|0;a=19}else if((a|0)==18){b=Pa()|0;a=19}else if((a|0)==36){b=Pa()|0;a=60}else if((a|0)==43){b=Pa()|0;a=60}else if((a|0)==58){b=Pa()|0;SY(v);a=60}else if((a|0)==59){Cta(z);Ria(x);Qba(A);SY(B);u=w;return}if((a|0)==19)a=61;else if((a|0)==60){Cta(z);Ria(x);a=61}if((a|0)==61)Qba(A);SY(B);$a(b|0)}function Ve(a,c,e,g,h,i,j,k){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;C=u;u=u+16|0;t=C+12|0;s=C+8|0;w=C+4|0;x=C;Axa(t,g);y=0;A=ua(46,f[t>>2]|0,77556)|0;v=y;y=0;if(v&1){C=Pa()|0;pza(t);$a(C|0)}pza(t);f[h>>2]=0;v=A+8|0;l=0;a:while(1){o=(j|0)!=(k|0);while(1){if(!(o&(l|0)==0)){l=e;break a}m=c;if(!c){q=0;c=0;n=1;p=m}else{l=f[c+12>>2]|0;if((l|0)==(f[c+16>>2]|0))l=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else l=oHa(b[l>>0]|0)|0;p=bDa(l,-1)|0;q=p?0:c;c=p?0:c;n=p;p=p?0:m}l=e;if(e){m=f[e+12>>2]|0;if((m|0)==(f[e+16>>2]|0))m=Ob[f[(f[e>>2]|0)+36>>2]&255](e)|0;else m=oHa(b[m>>0]|0)|0;if(!(bDa(m,-1)|0)){if(!n){B=59;break a}}else{l=0;B=15}}else B=15;if((B|0)==15){B=0;if(n){e=0;B=59;break a}else e=0}if((Rb[f[(f[A>>2]|0)+36>>2]&127](A,b[j>>0]|0,0)|0)<<24>>24==37){B=19;break}l=b[j>>0]|0;if(l<<24>>24>-1?(z=f[v>>2]|0,d[z+(l<<24>>24<<1)>>1]&8192):0){B=27;break}m=c+12|0;l=f[m>>2]|0;n=c+16|0;if((l|0)==(f[n>>2]|0))l=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else l=oHa(b[l>>0]|0)|0;r=Xb[f[(f[A>>2]|0)+12>>2]&255](A,l&255)|0;if(r<<24>>24==(Xb[f[(f[A>>2]|0)+12>>2]&255](A,b[j>>0]|0)|0)<<24>>24){B=55;break}f[h>>2]=4;c=q;l=4}b:do if((B|0)==19){B=0;n=j+1|0;if((n|0)==(k|0)){B=59;break a}m=Rb[f[(f[A>>2]|0)+36>>2]&127](A,b[n>>0]|0,0)|0;switch(m<<24>>24){case 48:case 69:{j=j+2|0;if((j|0)==(k|0)){B=59;break a}o=m;c=Rb[f[(f[A>>2]|0)+36>>2]&127](A,b[j>>0]|0,0)|0;j=n;break}default:{o=0;c=m}}r=f[(f[a>>2]|0)+36>>2]|0;f[w>>2]=p;f[x>>2]=l;f[s>>2]=f[w>>2];f[t>>2]=f[x>>2];j=j+2|0;c=bc[r&15](a,s,t,g,h,i,c,o)|0}else if((B|0)==27){while(1){B=0;j=j+1|0;if((j|0)==(k|0)){j=k;break}l=b[j>>0]|0;if(l<<24>>24<=-1)break;if(!(d[z+(l<<24>>24<<1)>>1]&8192))break;else B=27}o=c;l=e;c=q;r=e;m=e;while(1){if(!o){n=1;o=0}else{e=f[o+12>>2]|0;if((e|0)==(f[o+16>>2]|0))e=Ob[f[(f[o>>2]|0)+36>>2]&255](o)|0;else e=oHa(b[e>>0]|0)|0;q=bDa(e,-1)|0;c=q?0:c;n=q;o=q?0:o}if(m){e=f[m+12>>2]|0;if((e|0)==(f[m+16>>2]|0))e=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0;else e=oHa(b[e>>0]|0)|0;if(!(bDa(e,-1)|0))if(n^(l|0)==0){p=l;e=r;q=l}else{e=r;break b}else{l=0;e=0;B=41}}else{e=r;B=41}if((B|0)==41){B=0;if(n)break b;else{p=l;q=0}}m=o+12|0;l=f[m>>2]|0;n=o+16|0;if((l|0)==(f[n>>2]|0))l=Ob[f[(f[o>>2]|0)+36>>2]&255](o)|0;else l=oHa(b[l>>0]|0)|0;if((l&255)<<24>>24<=-1)break b;if(!(d[(f[v>>2]|0)+(l<<24>>24<<1)>>1]&8192))break b;l=f[m>>2]|0;if((l|0)==(f[n>>2]|0)){Ob[f[(f[o>>2]|0)+40>>2]&255](o)|0;l=p;r=e;m=q;continue}else{f[m>>2]=l+1;l=p;r=e;m=q;continue}}}else if((B|0)==55){B=0;j=j+1|0;l=f[m>>2]|0;if((l|0)==(f[n>>2]|0)){Ob[f[(f[c>>2]|0)+40>>2]&255](c)|0;c=q;break}else{f[m>>2]=l+1;c=q;break}}while(0);l=f[h>>2]|0}if((B|0)==59){f[h>>2]=4;l=e}if(!c){c=0;j=1}else{e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0))e=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else e=oHa(b[e>>0]|0)|0;j=bDa(e,-1)|0;c=j?0:c}if(l){e=f[l+12>>2]|0;if((e|0)==(f[l+16>>2]|0))e=Ob[f[(f[l>>2]|0)+36>>2]&255](l)|0;else e=oHa(b[e>>0]|0)|0;if(!(bDa(e,-1)|0)){if(!j)B=72}else B=70}else B=70;if((B|0)==70?j:0)B=72;if((B|0)==72)f[h>>2]=f[h>>2]|2;u=C;return c|0}function We(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;B=u;u=u+64|0;m=B+48|0;x=B+40|0;F=B+28|0;C=B+16|0;D=B+4|0;z=B;A=a+116|0;n=a+124|0;o=D+4|0;p=D+8|0;q=F+4|0;r=C+4|0;s=F+8|0;t=a+104|0;v=a+108|0;w=a+100|0;l=a+36|0;k=a+32|0;b=f[a+112>>2]|0;a:while(1){if((b|0)==(A|0)){E=3;break}d=f[b+16>>2]|0;f[x>>2]=d;g=b+20|0;e=d;b:do switch(f[b+28>>2]|0){case 0:{E=54;break}case 1:{c=f[(f[g>>2]|0)+16>>2]|0;if(c|0){f[e+8>>2]=f[c+8>>2];E=54;break b}if(qva(gKa(f[k>>2]|0)|0,f[e+8>>2]|0)|0)E=54;else{j=f[d+4>>2]|0;j=hsa(j,gKa(f[l>>2]|0)|0)|0;E=EN(n,x)|0;f[f[E>>2]>>2]=j;E=54}break}default:{ZF(F,f[(f[g>>2]|0)+16>>2]|0);j=b+24|0;c=f[g>>2]|0;c:while(1){if((c|0)==(j|0))break;d=f[c+16>>2]|0;if((d|0)!=(f[(f[g>>2]|0)+16>>2]|0)){y=0;ja(414,C|0,d|0);i=y;y=0;if(i&1){E=12;break a}f[D>>2]=0;f[o>>2]=0;f[p>>2]=0;y=0;ga(5,f[F>>2]|0,q|0,f[C>>2]|0,r|0,D|0);i=y;y=0;if(i&1){E=16;break a}Dba(F);d=f[D>>2]|0;e=f[o>>2]|0;if((d|0)==(e|0)){E=27;break}while(1){if((d|0)==(e|0))break;i=f[d>>2]|0;f[z>>2]=i;y=0;Ca(61,m|0,F|0,i|0,z|0);i=y;y=0;if(i&1){E=20;break a}d=d+4|0}E4(D);bxa(C)}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue c}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}if((E|0)==27){E=0;E4(D);bxa(C)}if(!(f[s>>2]|0)){y=0;i=ua(74,a|0,f[(f[x>>2]|0)+4>>2]|0)|0;h=y;y=0;if(h&1){E=30;break a}c=(f[x>>2]|0)+8|0;h=f[c>>2]|0;f[c>>2]=i;c=f[l>>2]|0;gKa(c)|0;VBa(m,c);c=f[g>>2]|0;d:while(1){if((c|0)==(j|0))break;d=f[c+16>>2]|0;if(!d){d=gKa(f[k>>2]|0)|0;if(qva(d,h)|0){y=0;d=ua(69,d|0,h|0)|0;g=y;y=0;if(g&1){E=38;break a}y=0;d=oa(47,m|0,h|0,d|0)|0;g=y;y=0;if(g&1){E=38;break a}y=0;d=oa(48,f[m>>2]|0,i|0,d|0)|0;g=y;y=0;if(g&1){E=38;break a}f[C>>2]=d;e=f[t>>2]|0;if(e>>>0>=(f[v>>2]|0)>>>0){y=0;ja(415,w|0,C|0);g=y;y=0;if(g&1){E=47;break a}}else{f[e>>2]=d;f[t>>2]=(f[t>>2]|0)+4}}}else{d=d+12|0;y=0;e=oa(46,m|0,i|0,f[d>>2]|0)|0;g=y;y=0;if(g&1){E=38;break a}f[d>>2]=e}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue d}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}}else f[(f[x>>2]|0)+8>>2]=f[(f[F>>2]|0)+16>>2];bxa(F)}}while(0);if((E|0)==54)E=0;c=f[b+4>>2]|0;if(!c)while(1){c=f[b+8>>2]|0;if((f[c>>2]|0)==(b|0)){b=c;continue a}else b=c}else b=c;while(1){c=f[b>>2]|0;if(!c)break;else b=c}}if((E|0)==3){u=B;return}else if((E|0)==12)b=Pa()|0;else if((E|0)==16){b=Pa()|0;E=26}else if((E|0)==20){b=Pa()|0;E=26}else if((E|0)==30)b=Pa()|0;else if((E|0)==38){b=Pa()|0;E=52}else if((E|0)==47){b=Pa()|0;E=52}if((E|0)==26){E4(D);bxa(C)}bxa(F);$a(b|0)}function Xe(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0;if(!a)return;c=a+-8|0;e=f[18977]|0;a=f[a+-4>>2]|0;b=a&-8;j=c+b|0;do if(!(a&1)){d=f[c>>2]|0;if(!(a&3))return;h=c+(0-d)|0;g=d+b|0;if(h>>>0<e>>>0)return;if((h|0)==(f[18978]|0)){a=j+4|0;b=f[a>>2]|0;if((b&3|0)!=3){i=h;b=g;break}f[18975]=g;f[a>>2]=b&-2;f[h+4>>2]=g|1;f[h+g>>2]=g;return}c=d>>>3;if(d>>>0<256){a=f[h+8>>2]|0;b=f[h+12>>2]|0;if((b|0)==(a|0)){f[18973]=f[18973]&~(1<<c);i=h;b=g;break}else{f[a+12>>2]=b;f[b+8>>2]=a;i=h;b=g;break}}e=f[h+24>>2]|0;a=f[h+12>>2]|0;do if((a|0)==(h|0)){c=h+16|0;b=c+4|0;a=f[b>>2]|0;if(!a){a=f[c>>2]|0;if(!a){a=0;break}else b=c}while(1){c=a+20|0;d=f[c>>2]|0;if(d|0){a=d;b=c;continue}c=a+16|0;d=f[c>>2]|0;if(!d)break;else{a=d;b=c}}f[b>>2]=0}else{i=f[h+8>>2]|0;f[i+12>>2]=a;f[a+8>>2]=i}while(0);if(e){b=f[h+28>>2]|0;c=76196+(b<<2)|0;if((h|0)==(f[c>>2]|0)){f[c>>2]=a;if(!a){f[18974]=f[18974]&~(1<<b);i=h;b=g;break}}else{f[e+16+(((f[e+16>>2]|0)!=(h|0)&1)<<2)>>2]=a;if(!a){i=h;b=g;break}}f[a+24>>2]=e;b=h+16|0;c=f[b>>2]|0;if(c|0){f[a+16>>2]=c;f[c+24>>2]=a}b=f[b+4>>2]|0;if(b){f[a+20>>2]=b;f[b+24>>2]=a;i=h;b=g}else{i=h;b=g}}else{i=h;b=g}}else{i=c;h=c}while(0);if(h>>>0>=j>>>0)return;a=j+4|0;d=f[a>>2]|0;if(!(d&1))return;if(!(d&2)){a=f[18978]|0;if((j|0)==(f[18979]|0)){j=(f[18976]|0)+b|0;f[18976]=j;f[18979]=i;f[i+4>>2]=j|1;if((i|0)!=(a|0))return;f[18978]=0;f[18975]=0;return}if((j|0)==(a|0)){j=(f[18975]|0)+b|0;f[18975]=j;f[18978]=h;f[i+4>>2]=j|1;f[h+j>>2]=j;return}e=(d&-8)+b|0;c=d>>>3;do if(d>>>0<256){b=f[j+8>>2]|0;a=f[j+12>>2]|0;if((a|0)==(b|0)){f[18973]=f[18973]&~(1<<c);break}else{f[b+12>>2]=a;f[a+8>>2]=b;break}}else{g=f[j+24>>2]|0;a=f[j+12>>2]|0;do if((a|0)==(j|0)){c=j+16|0;b=c+4|0;a=f[b>>2]|0;if(!a){a=f[c>>2]|0;if(!a){c=0;break}else b=c}while(1){c=a+20|0;d=f[c>>2]|0;if(d|0){a=d;b=c;continue}c=a+16|0;d=f[c>>2]|0;if(!d)break;else{a=d;b=c}}f[b>>2]=0;c=a}else{c=f[j+8>>2]|0;f[c+12>>2]=a;f[a+8>>2]=c;c=a}while(0);if(g|0){a=f[j+28>>2]|0;b=76196+(a<<2)|0;if((j|0)==(f[b>>2]|0)){f[b>>2]=c;if(!c){f[18974]=f[18974]&~(1<<a);break}}else{f[g+16+(((f[g+16>>2]|0)!=(j|0)&1)<<2)>>2]=c;if(!c)break}f[c+24>>2]=g;a=j+16|0;b=f[a>>2]|0;if(b|0){f[c+16>>2]=b;f[b+24>>2]=c}a=f[a+4>>2]|0;if(a|0){f[c+20>>2]=a;f[a+24>>2]=c}}}while(0);f[i+4>>2]=e|1;f[h+e>>2]=e;if((i|0)==(f[18978]|0)){f[18975]=e;return}}else{f[a>>2]=d&-2;f[i+4>>2]=b|1;f[h+b>>2]=b;e=b}a=e>>>3;if(e>>>0<256){c=75932+(a<<1<<2)|0;b=f[18973]|0;a=1<<a;if(!(b&a)){f[18973]=b|a;a=c;b=c+8|0}else{b=c+8|0;a=f[b>>2]|0}f[b>>2]=i;f[a+12>>2]=i;f[i+8>>2]=a;f[i+12>>2]=c;return}a=e>>>8;if(a)if(e>>>0>16777215)a=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;a=(j+245760|0)>>>16&2;a=14-(g|h|a)+(j<<a>>>15)|0;a=e>>>(a+7|0)&1|a<<1}else a=0;d=76196+(a<<2)|0;f[i+28>>2]=a;f[i+20>>2]=0;f[i+16>>2]=0;b=f[18974]|0;c=1<<a;do if(b&c){b=e<<((a|0)==31?0:25-(a>>>1)|0);c=f[d>>2]|0;while(1){if((f[c+4>>2]&-8|0)==(e|0)){a=73;break}d=c+16+(b>>>31<<2)|0;a=f[d>>2]|0;if(!a){a=72;break}else{b=b<<1;c=a}}if((a|0)==72){f[d>>2]=i;f[i+24>>2]=c;f[i+12>>2]=i;f[i+8>>2]=i;break}else if((a|0)==73){h=c+8|0;j=f[h>>2]|0;f[j+12>>2]=i;f[h>>2]=i;f[i+8>>2]=j;f[i+12>>2]=c;f[i+24>>2]=0;break}}else{f[18974]=b|c;f[d>>2]=i;f[i+24>>2]=d;f[i+12>>2]=i;f[i+8>>2]=i}while(0);j=(f[18981]|0)+-1|0;f[18981]=j;if(!j)a=76348;else return;while(1){a=f[a>>2]|0;if(!a)break;else a=a+8|0}f[18981]=-1;return}function Ye(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;H=u;u=u+96|0;I=H+48|0;G=H+24|0;E=H+20|0;F=H+16|0;C=H+12|0;B=H+8|0;D=H+4|0;A=H;d=I+48|0;e=I;do{ija(e);e=e+24|0}while((e|0)!=(d|0));x=G+8|0;z=G+16|0;g=0;k=c;i=0;e=0;h=0;a:while(1){while(1){w=1-i|0;v=I+(w*24|0)|0;D6(v);i=gKa(f[k+8>>2]|0)|0;if(!i){q=60;break a}r=(h|0)!=0;s=(e|0)!=0;t=h+8|0;if((i|0)!=1)break;h=f[(f[k+16>>2]|0)+8>>2]|0;if(!(gKa(f[h+32>>2]|0)|0)){y=0;h=xa(7,a|0,b|0,h|0,v|0)|0;p=y;y=0;if(p&1){q=11;break a}if(r)f[t>>2]=h;e=s?e:h;if(!(gKa(f[I+(w*24|0)+8>>2]|0)|0)){q=60;break a}else{k=v;i=w;continue}}else{y=0;h=xa(8,a|0,b|0,k|0,v|0)|0;p=y;y=0;if(p&1){q=11;break a}if(r)f[t>>2]=h;e=s?e:h;if(!(gKa(f[I+(w*24|0)+8>>2]|0)|0)){q=60;break a}else{k=v;i=w;continue}}}ija(G);y=0;ja(585,k|0,G|0);p=y;y=0;if(p&1){q=22;break}if(gKa(f[x>>2]|0)|0){i=gKa(f[z>>2]|0)|0;o=EFa(G)|0;while(1){p=i;if((p|0)==(o|0))break;m=i;n=f[m+8>>2]|0;m=m+12|0;i=f[p+4>>2]|0;j=f[n+40>>2]|0;gKa(j)|0;n=EFa(n+24|0)|0;l=E;while(1){f[l>>2]=j;j=f[E>>2]|0;if((j|0)==(n|0))break;if(!(_qa(m,f[j+8>>2]|0)|0)){q=27;break}f[E>>2]=f[j+4>>2];l=F}if((q|0)==27){q=0;Hda(G,p)}}i=f[x>>2]|0;if((gKa(i)|0)==2){m=f[z>>2]|0;gKa(m)|0;i=f[m+8>>2]|0;f[E>>2]=i;j=gKa(f[m+12+8>>2]|0)|0;m=f[m+4>>2]|0;l=f[m+8>>2]|0;m=gKa(f[m+20>>2]|0)|0;do if((j|0)!=(m|0)){if((j|0)>(m|0)){f[E>>2]=l;l=i}y=0;p=ua(82,G|0,E|0)|0;q=y;y=0;if(q&1){q=44;break a}i=f[p+16>>2]|0;gKa(i)|0;q=EFa(p)|0;j=C;while(1){f[j>>2]=i;i=f[C>>2]|0;o=i;if((o|0)==(q|0)){q=42;break}n=f[i+8>>2]|0;j=f[n+16>>2]|0;gKa(j)|0;n=EFa(n)|0;i=1;m=B;while(1){f[m>>2]=j;j=f[B>>2]|0;if((j|0)==(n|0))break;m=_qa(p,f[j+8>>2]|0)|0;i=i&m;if(!m)break;f[B>>2]=f[j+4>>2];m=D}if(!i){q=41;break}f[C>>2]=f[o+4>>2];i=o;j=A}if((q|0)==41){q=0;break}else if((q|0)==42){q=0;LL(G,l);break}}while(0);i=f[x>>2]|0}if(gKa(i)|0){j=gKa(f[k+16>>2]|0)|0;l=EFa(k)|0;i=0;while(1){m=j;if((m|0)==(l|0))break;p=(xra(c,f[j+8>>2]|0)|0)==0;i=i|p^1;if(!p)break;j=f[m+4>>2]|0}y=0;l=ka(42,a|0,b|0,k|0,G|0,v|0,i|0)|0;p=y;y=0;if(p&1){q=53;break}if(r)f[t>>2]=l;e=s?e:l;j=(gKa(f[I+(w*24|0)+8>>2]|0)|0)==0;g=j?e:g;d2(G);if(j){e=g;q=60;break}else{k=j?k:v;i=w;h=j?h:l;continue}}}y=0;l=xa(8,a|0,b|0,k|0,v|0)|0;p=y;y=0;if(p&1){q=22;break}if(r)f[t>>2]=l;e=s?e:l;j=(gKa(f[I+(w*24|0)+8>>2]|0)|0)==0;g=j?e:g;d2(G);if(j){e=g;q=60;break}else{k=j?k:v;i=w;h=j?h:l}}if((q|0)==11)e=Pa()|0;else if((q|0)==22){e=Pa()|0;q=59}else if((q|0)==44){e=Pa()|0;q=59}else if((q|0)==53){e=Pa()|0;q=59}else if((q|0)==60){do{d=d+-24|0;_fa(d)}while((d|0)!=(I|0));u=H;return e|0}if((q|0)==59)d2(G);do{d=d+-24|0;_fa(d)}while((d|0)!=(I|0));$a(e|0);return 0}function Ze(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;A=u;u=u+240|0;t=A;r=A+204|0;D=A+192|0;B=A+180|0;s=A+176|0;o=A+16|0;p=A+8|0;q=A+4|0;f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[D+(a<<2)>>2]=0;a=a+1|0}Axa(B,e);y=0;a=ua(46,f[B>>2]|0,77556)|0;n=y;y=0;if(!(n&1)?(y=0,xa(f[(f[a>>2]|0)+32>>2]|0,a|0,68313,68339,r|0)|0,n=y,y=0,!(n&1)):0){pza(B);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}n=B+11|0;if((b[n>>0]|0)<0)a=(f[B+8>>2]&2147483647)+-1|0;else a=10;y=0;ja(83,B|0,a|0);m=y;y=0;if(m&1)a=Pa()|0;else{j=(b[n>>0]|0)<0?f[B>>2]|0:B;f[s>>2]=j;f[p>>2]=o;f[q>>2]=0;l=B+4|0;m=B+8|0;i=f[c>>2]|0;e=i;a:while(1){if(e){a=f[e+12>>2]|0;if((a|0)==(f[e+16>>2]|0)){y=0;a=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;k=y;y=0;if(k&1)break}else a=oHa(b[a>>0]|0)|0;if(bDa(a,-1)|0){f[c>>2]=0;w=0;x=0;e=1}else{w=e;x=i;e=0}}else{w=0;x=0;e=1}i=f[d>>2]|0;do if(i){a=f[i+12>>2]|0;if((a|0)==(f[i+16>>2]|0)){y=0;a=la(f[(f[i>>2]|0)+36>>2]|0,i|0)|0;k=y;y=0;if(k&1)break a}else a=oHa(b[a>>0]|0)|0;if(!(bDa(a,-1)|0))if(e)break;else{v=j;z=i;C=42;break a}else{f[d>>2]=0;C=25;break}}else C=25;while(0);if((C|0)==25){C=0;if(e){v=j;z=0;C=42;break}else i=0}e=b[n>>0]|0;e=e<<24>>24<0?f[l>>2]|0:e&255;if((f[s>>2]|0)==(j+e|0)){y=0;ja(83,B|0,e<<1|0);k=y;y=0;if(k&1)break;if((b[n>>0]|0)<0)a=(f[m>>2]&2147483647)+-1|0;else a=10;y=0;ja(83,B|0,a|0);k=y;y=0;if(k&1)break;k=(b[n>>0]|0)<0?f[B>>2]|0:B;f[s>>2]=k+e;e=k}else e=j;k=w+12|0;a=f[k>>2]|0;j=w+16|0;if((a|0)==(f[j>>2]|0)){y=0;a=la(f[(f[w>>2]|0)+36>>2]|0,w|0)|0;E=y;y=0;if(E&1)break}else a=oHa(b[a>>0]|0)|0;if(xn(a&255,16,e,s,q,0,D,o,p,r)|0){v=e;z=i;C=42;break}a=f[k>>2]|0;if((a|0)==(f[j>>2]|0)){y=0;la(f[(f[w>>2]|0)+40>>2]|0,w|0)|0;E=y;y=0;if(E&1)break;else{j=e;e=w;i=x;continue}}else{f[k>>2]=a+1;j=e;e=w;i=x;continue}}b:do if((C|0)==42?(y=0,ja(83,B|0,(f[s>>2]|0)-v|0),E=y,y=0,!(E&1)):0){s=b[n>>0]|0;v=f[B>>2]|0;E=gpa()|0;f[t>>2]=h;if((H2(s<<24>>24<0?v:B,E,0,t)|0)!=1)f[g>>2]=4;if(w){a=f[w+12>>2]|0;if((a|0)==(f[w+16>>2]|0)){y=0;a=la(f[(f[x>>2]|0)+36>>2]|0,w|0)|0;E=y;y=0;if(E&1)break}else a=oHa(b[a>>0]|0)|0;if(bDa(a,-1)|0){f[c>>2]=0;e=1}else e=0}else e=1;do if(z){a=f[z+12>>2]|0;if((a|0)==(f[z+16>>2]|0)){y=0;a=la(f[(f[z>>2]|0)+36>>2]|0,z|0)|0;E=y;y=0;if(E&1)break b}else a=oHa(b[a>>0]|0)|0;if(!(bDa(a,-1)|0))if(e)break;else{C=59;break}else{f[d>>2]=0;C=57;break}}else C=57;while(0);if((C|0)==57?e:0)C=59;if((C|0)==59)f[g>>2]=f[g>>2]|2;E=f[c>>2]|0;zta(B);zta(D);u=A;return E|0}while(0);a=Pa()|0}zta(B)}else{a=Pa()|0;pza(B)}zta(D);$a(a|0);return 0}function _e(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;h=c+11|0;e=b[h>>0]|0;i=c+4|0;d=f[i>>2]|0;g=e<<24>>24<0?d:e&255;a:do if(!g)AA(a,c);else{do if((uHa(72905)|0)==(g|0)){y=0;d=oa(78,c|0,72905,g|0)|0;g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}if(d|0){e=b[h>>0]|0;d=f[i>>2]|0;break}f8(c,72917);f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(72988)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{i=d+16&-16;c=QCa(i)|0;f[a>>2]=c;f[a+8>>2]=i|-2147483648;f[a+4>>2]=d;a=c}Pta(a,72988,d)|0;SBa(a+d|0,0);break a}while(0);g=uHa(73001)|0;do if((g|0)==((e<<24>>24<0?d:e&255)|0)){y=0;d=oa(78,c|0,73001,g|0)|0;g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}if(d|0){e=b[h>>0]|0;d=f[i>>2]|0;break}f8(c,73014);f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(73064)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{i=d+16&-16;c=QCa(i)|0;f[a>>2]=c;f[a+8>>2]=i|-2147483648;f[a+4>>2]=d;a=c}Pta(a,73064,d)|0;SBa(a+d|0,0);break a}while(0);g=uHa(73078)|0;do if((g|0)==((e<<24>>24<0?d:e&255)|0)){y=0;d=oa(78,c|0,73078,g|0)|0;g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}if(d|0){e=b[h>>0]|0;d=f[i>>2]|0;break}f8(c,73091);f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(73141)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{i=d+16&-16;c=QCa(i)|0;f[a>>2]=c;f[a+8>>2]=i|-2147483648;f[a+4>>2]=d;a=c}Pta(a,73141,d)|0;SBa(a+d|0,0);break a}while(0);g=uHa(73155)|0;do if((g|0)==((e<<24>>24<0?d:e&255)|0)){y=0;d=oa(78,c|0,73155,g|0)|0;g=y;y=0;if(g&1){g=ab(0)|0;lDa(g)}if(d|0){e=b[h>>0]|0;d=f[i>>2]|0;break}f8(c,73169);f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=uHa(73220)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11)b[a+11>>0]=d;else{i=d+16&-16;c=QCa(i)|0;f[a>>2]=c;f[a+8>>2]=i|-2147483648;f[a+4>>2]=d;a=c}Pta(a,73220,d)|0;SBa(a+d|0,0);break a}while(0);h=e<<24>>24<0;i=h?f[c>>2]|0:c;d=i+(h?d:e&255)|0;b:do if((b[d+-1>>0]|0)==62){e=1;c:while(1){d:while(1){h=d+-1|0;if((h|0)==(i|0))break c;d=d+-2|0;switch(b[d>>0]|0){case 60:{g=54;break d}case 62:{g=55;break d}default:d=h}}if((g|0)==54){e=e+-1|0;if(!e)break b;else{d=h;continue}}else if((g|0)==55){e=e+1|0;d=h;continue}}f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=0;while(1){if((d|0)==3)break a;f[a+(d<<2)>>2]=0;d=d+1|0}}while(0);g=d;while(1){e=g+-1|0;if((e|0)==(i|0)){e=i;break}if((b[e>>0]|0)==58){e=g;break}else g=e}f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;h=d-e|0;if(h>>>0>4294967279)JZ();if(h>>>0<11)b[a+11>>0]=h;else{i=h+16&-16;c=QCa(i)|0;f[a>>2]=c;f[a+8>>2]=i|-2147483648;f[a+4>>2]=h;a=c}g=a;while(1){if((e|0)==(d|0))break;SBa(g,b[e>>0]|0);e=e+1|0;g=g+1|0}SBa(a+h|0,0)}while(0);return}function $e(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0;A=u;u=u+320|0;t=A;r=A+208|0;D=A+192|0;B=A+180|0;s=A+176|0;o=A+16|0;p=A+8|0;q=A+4|0;f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[D+(a<<2)>>2]=0;a=a+1|0}Axa(B,e);y=0;a=ua(46,f[B>>2]|0,77588)|0;n=y;y=0;if(!(n&1)?(y=0,xa(f[(f[a>>2]|0)+48>>2]|0,a|0,68313,68339,r|0)|0,n=y,y=0,!(n&1)):0){pza(B);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}n=B+11|0;if((b[n>>0]|0)<0)a=(f[B+8>>2]&2147483647)+-1|0;else a=10;y=0;ja(83,B|0,a|0);m=y;y=0;if(m&1)a=Pa()|0;else{j=(b[n>>0]|0)<0?f[B>>2]|0:B;f[s>>2]=j;f[p>>2]=o;f[q>>2]=0;l=B+4|0;m=B+8|0;i=f[c>>2]|0;e=i;a:while(1){if(e){a=f[e+12>>2]|0;if((a|0)==(f[e+16>>2]|0)){y=0;a=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;k=y;y=0;if(k&1)break}else a=gKa(f[a>>2]|0)|0;if(TDa(a)|0){f[c>>2]=0;w=0;x=0;e=1}else{w=e;x=i;e=0}}else{w=0;x=0;e=1}i=f[d>>2]|0;do if(i){a=f[i+12>>2]|0;if((a|0)==(f[i+16>>2]|0)){y=0;a=la(f[(f[i>>2]|0)+36>>2]|0,i|0)|0;k=y;y=0;if(k&1)break a}else a=gKa(f[a>>2]|0)|0;if(!(TDa(a)|0))if(e)break;else{v=j;z=i;C=42;break a}else{f[d>>2]=0;C=25;break}}else C=25;while(0);if((C|0)==25){C=0;if(e){v=j;z=0;C=42;break}else i=0}e=b[n>>0]|0;e=e<<24>>24<0?f[l>>2]|0:e&255;if((f[s>>2]|0)==(j+e|0)){y=0;ja(83,B|0,e<<1|0);k=y;y=0;if(k&1)break;if((b[n>>0]|0)<0)a=(f[m>>2]&2147483647)+-1|0;else a=10;y=0;ja(83,B|0,a|0);k=y;y=0;if(k&1)break;k=(b[n>>0]|0)<0?f[B>>2]|0:B;f[s>>2]=k+e;e=k}else e=j;k=w+12|0;a=f[k>>2]|0;j=w+16|0;if((a|0)==(f[j>>2]|0)){y=0;a=la(f[(f[w>>2]|0)+36>>2]|0,w|0)|0;E=y;y=0;if(E&1)break}else a=gKa(f[a>>2]|0)|0;if(Bn(a,16,e,s,q,0,D,o,p,r)|0){v=e;z=i;C=42;break}a=f[k>>2]|0;if((a|0)==(f[j>>2]|0)){y=0;la(f[(f[w>>2]|0)+40>>2]|0,w|0)|0;E=y;y=0;if(E&1)break;else{j=e;e=w;i=x;continue}}else{f[k>>2]=a+4;j=e;e=w;i=x;continue}}b:do if((C|0)==42?(y=0,ja(83,B|0,(f[s>>2]|0)-v|0),E=y,y=0,!(E&1)):0){s=b[n>>0]|0;v=f[B>>2]|0;E=gpa()|0;f[t>>2]=h;if((H2(s<<24>>24<0?v:B,E,0,t)|0)!=1)f[g>>2]=4;if(w){a=f[w+12>>2]|0;if((a|0)==(f[w+16>>2]|0)){y=0;a=la(f[(f[x>>2]|0)+36>>2]|0,w|0)|0;E=y;y=0;if(E&1)break}else a=gKa(f[a>>2]|0)|0;if(TDa(a)|0){f[c>>2]=0;e=1}else e=0}else e=1;do if(z){a=f[z+12>>2]|0;if((a|0)==(f[z+16>>2]|0)){y=0;a=la(f[(f[z>>2]|0)+36>>2]|0,z|0)|0;E=y;y=0;if(E&1)break b}else a=gKa(f[a>>2]|0)|0;if(!(TDa(a)|0))if(e)break;else{C=59;break}else{f[d>>2]=0;C=57;break}}else C=57;while(0);if((C|0)==57?e:0)C=59;if((C|0)==59)f[g>>2]=f[g>>2]|2;E=f[c>>2]|0;zta(B);zta(D);u=A;return E|0}while(0);a=Pa()|0}zta(B)}else{a=Pa()|0;pza(B)}zta(D);$a(a|0);return 0}function af(a,b,c){a=a|0;b=b|0;c=c|0;if(!c)Na(59079,64509,76,59084);do switch(f[c>>2]|0){case 1:{ii(a,b,c);break}case 2:{Mn(a,b,c);break}case 3:{ZD(a,b,c);break}case 4:{rl(a,b,c);break}case 5:{Rm(a,b,c);break}case 6:{Jn(a,b,c);break}case 7:{$n(a,b,c);break}case 8:{yl(a,b,c);break}case 9:{iL(a,f[f[b+8>>2]>>2]|0,f[c+8>>2]|0);break}case 10:{zp(a,b,c);break}case 11:{mz(a,f[b+4>>2]|0,c);break}case 12:{wt(a,b,c);break}case 13:{bp(a,b,c);break}case 14:{gm(a,b,c);break}case 25:{Hxa(a);break}case 24:{Hxa(a);break}case 26:{Hxa(a);break}case 27:{Hxa(a);break}case 15:{JV(a,c);break}case 16:{yc(a,b,c);break}case 17:{oc(a,b,c);break}case 18:{Tl(a,b,c);break}case 19:{sz(a,b,f[c+8>>2]|0);break}case 20:{Sy(a,b,c);break}case 21:{zh(a,b,c);break}case 22:{Hxa(a);break}case 23:{cka(a,b);break}default:Ka()}while(0);return}function bf(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;x=u;u=u+16|0;r=x+12|0;q=x+8|0;s=x+4|0;t=x;Axa(r,d);y=0;v=ua(46,f[r>>2]|0,77588)|0;p=y;y=0;if(p&1){x=Pa()|0;pza(r);$a(x|0)}pza(r);f[e>>2]=0;j=0;a:while(1){m=(h|0)!=(i|0);while(1){if(!(m&(j|0)==0)){j=c;break a}k=b;if(!b){o=0;b=0;l=1;n=k}else{j=f[b+12>>2]|0;if((j|0)==(f[b+16>>2]|0))j=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else j=gKa(f[j>>2]|0)|0;n=TDa(j)|0;o=n?0:b;b=n?0:b;l=n;n=n?0:k}j=c;if(c){k=f[c+12>>2]|0;if((k|0)==(f[c+16>>2]|0))k=Ob[f[(f[c>>2]|0)+36>>2]&255](c)|0;else k=gKa(f[k>>2]|0)|0;if(!(TDa(k)|0)){if(!l){w=56;break a}}else{j=0;w=15}}else w=15;if((w|0)==15){w=0;if(l){c=0;w=56;break a}else c=0}if((Rb[f[(f[v>>2]|0)+52>>2]&127](v,f[h>>2]|0,0)|0)<<24>>24==37){w=19;break}if(Rb[f[(f[v>>2]|0)+12>>2]&127](v,8192,f[h>>2]|0)|0){w=26;break}k=b+12|0;j=f[k>>2]|0;l=b+16|0;if((j|0)==(f[l>>2]|0))j=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else j=gKa(f[j>>2]|0)|0;p=Xb[f[(f[v>>2]|0)+28>>2]&255](v,j)|0;if((p|0)==(Xb[f[(f[v>>2]|0)+28>>2]&255](v,f[h>>2]|0)|0)){w=52;break}f[e>>2]=4;b=o;j=4}b:do if((w|0)==19){w=0;l=h+4|0;if((l|0)==(i|0)){w=56;break a}k=Rb[f[(f[v>>2]|0)+52>>2]&127](v,f[l>>2]|0,0)|0;switch(k<<24>>24){case 48:case 69:{h=h+8|0;if((h|0)==(i|0)){w=56;break a}m=k;b=Rb[f[(f[v>>2]|0)+52>>2]&127](v,f[h>>2]|0,0)|0;h=l;break}default:{m=0;b=k}}p=f[(f[a>>2]|0)+36>>2]|0;f[s>>2]=n;f[t>>2]=j;f[q>>2]=f[s>>2];f[r>>2]=f[t>>2];h=h+8|0;b=bc[p&15](a,q,r,d,e,g,b,m)|0}else if((w|0)==26){while(1){w=0;h=h+4|0;if((h|0)==(i|0)){h=i;break}if(Rb[f[(f[v>>2]|0)+12>>2]&127](v,8192,f[h>>2]|0)|0)w=26;else break}m=b;j=c;b=o;p=c;l=c;while(1){if(!m){k=1;m=0}else{c=f[m+12>>2]|0;if((c|0)==(f[m+16>>2]|0))c=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0;else c=gKa(f[c>>2]|0)|0;o=TDa(c)|0;b=o?0:b;k=o;m=o?0:m}if(l){c=f[l+12>>2]|0;if((c|0)==(f[l+16>>2]|0))c=Ob[f[(f[l>>2]|0)+36>>2]&255](l)|0;else c=gKa(f[c>>2]|0)|0;if(!(TDa(c)|0))if(k^(j|0)==0){n=j;c=p;o=j}else{c=p;break b}else{j=0;c=0;w=39}}else{c=p;w=39}if((w|0)==39){w=0;if(k)break b;else{n=j;o=0}}k=m+12|0;j=f[k>>2]|0;l=m+16|0;if((j|0)==(f[l>>2]|0))j=Ob[f[(f[m>>2]|0)+36>>2]&255](m)|0;else j=gKa(f[j>>2]|0)|0;if(!(Rb[f[(f[v>>2]|0)+12>>2]&127](v,8192,j)|0))break b;j=f[k>>2]|0;if((j|0)==(f[l>>2]|0)){Ob[f[(f[m>>2]|0)+40>>2]&255](m)|0;j=n;p=c;l=o;continue}else{f[k>>2]=j+4;j=n;p=c;l=o;continue}}}else if((w|0)==52){w=0;h=h+4|0;j=f[k>>2]|0;if((j|0)==(f[l>>2]|0)){Ob[f[(f[b>>2]|0)+40>>2]&255](b)|0;b=o;break}else{f[k>>2]=j+4;b=o;break}}while(0);j=f[e>>2]|0}if((w|0)==56){f[e>>2]=4;j=c}if(!b){b=0;h=1}else{c=f[b+12>>2]|0;if((c|0)==(f[b+16>>2]|0))c=Ob[f[(f[b>>2]|0)+36>>2]&255](b)|0;else c=gKa(f[c>>2]|0)|0;h=TDa(c)|0;b=h?0:b}if(j){c=f[j+12>>2]|0;if((c|0)==(f[j+16>>2]|0))c=Ob[f[(f[j>>2]|0)+36>>2]&255](j)|0;else c=gKa(f[c>>2]|0)|0;if(!(TDa(c)|0)){if(!h)w=69}else w=67}else w=67;if((w|0)==67?h:0)w=69;if((w|0)==69)f[e>>2]=f[e>>2]|2;u=x;return b|0}function cf(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=u;u=u+64|0;g=i+52|0;j=i+40|0;k=i+28|0;l=i+16|0;h=i+12|0;m=i;do if(b[a+12>>0]|0){c=Vea(76852,54681)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;o=y;y=0;if(!(o&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,o=y,y=0,!(o&1)):0){pza(g);jn(c,e)|0;Yp(c)|0;break}o=Pa()|0;pza(g);$a(o|0)}while(0);a:do if((Nm(a)|0)==1){c=(f[a>>2]|0)+60|0;if(b[c>>0]|0){a=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(54752)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[k+11>>0]=e;c=k}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){n=27;break}f[k>>2]=c;f[k+8>>2]=d|-2147483648;f[k+4>>2]=e}Pta(c,54752,e)|0;SBa(c+e|0,0);y=0;ja(583,a|0,k|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}c=Pa()|0;zta(k);if(!d)break a}else{y=0;za(3);y=0;n=27}while(0);if((n|0)==27)c=Pa()|0;Oa(a|0);break}b[c>>0]=1;if((Om(a)|0)!=-16){a=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;e=uHa(54794)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[l+11>>0]=e;c=l}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){n=39;break}f[l>>2]=c;f[l+8>>2]=d|-2147483648;f[l+4>>2]=e}Pta(c,54794,e)|0;SBa(c+e|0,0);y=0;ja(583,a|0,l|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}c=Pa()|0;zta(l);if(!d)break a}else{y=0;za(3);y=0;n=39}while(0);if((n|0)==39)c=Pa()|0;Oa(a|0);break}o=f[a>>2]|0;$la(h,-1,0);op(a,o+68|0,o+72|0,g,f[h>>2]|0);if(!(b[g>>0]|0)){u=i;return}a=zb(20)|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(54829)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[m+11>>0]=e;c=m}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){n=51;break}f[m>>2]=c;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(c,54829,e)|0;SBa(c+e|0,0);y=0;ja(583,a|0,m|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}c=Pa()|0;zta(m);if(d)n=53}else{y=0;za(3);y=0;n=51}while(0);if((n|0)==51){c=Pa()|0;n=53}if((n|0)==53)Oa(a|0)}else{a=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(54713)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[j+11>>0]=e;c=j}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){n=15;break}f[j>>2]=c;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(c,54713,e)|0;SBa(c+e|0,0);y=0;ja(583,a|0,j|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,a|0,64,361);y=0;d=0}c=Pa()|0;zta(j);if(!d)break a}else{y=0;za(3);y=0;n=15}while(0);if((n|0)==15)c=Pa()|0;Oa(a|0)}while(0);$a(c|0)}function df(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;s=u;u=u+48|0;q=s+40|0;r=s+36|0;v=s+24|0;m=s;n=s+20|0;t=s+8|0;f[r>>2]=c;h=c;do if(b[a+12>>0]|0){d=Vea(76852,57035)|0;Axa(q,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[q>>2]|0,77556)|0;p=y;y=0;if(!(p&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,p=y,y=0,!(p&1)):0){pza(q);jn(d,g)|0;Yp(d)|0;break}v=Pa()|0;pza(q);$a(v|0)}while(0);f[v>>2]=0;o=v+4|0;f[o>>2]=0;f[v+8>>2]=0;p=a+148|0;i=a+152|0;j=v+8|0;k=a+4|0;l=a+144|0;e=c;g=c;while(1){y=0;d=la(214,a|0)|0;c=y;y=0;if(c&1){h=19;break}f[e+4>>2]=d;y=0;d=la(218,a|0)|0;c=y;y=0;if(c&1){h=20;break}f[g+8>>2]=d;f[n>>2]=d;d=(f[g+4>>2]|0)!=0&1;f[q>>2]=f[n>>2];qta(m,q,d);d=f[p>>2]|0;if(d>>>0>=(f[i>>2]|0)>>>0){y=0;ja(2009,l|0,m|0);c=y;y=0;if(c&1){h=21;break}}else{e=m;g=f[e+4>>2]|0;c=d;f[c>>2]=f[e>>2];f[c+4>>2]=g;f[p>>2]=(f[p>>2]|0)+8}d=f[o>>2]|0;if((d|0)==(f[j>>2]|0)){y=0;ja(115,v|0,r|0);h=y;y=0;if(h&1){h=19;break}}else{f[d>>2]=h;f[o>>2]=(f[o>>2]|0)+4}y=0;d=la(217,a|0)|0;h=y;y=0;if(h&1){h=19;break}if(d<<24>>24!=2){h=22;break}y=0;d=la(210,f[k>>2]|0)|0;h=y;y=0;if(h&1){h=19;break}f[r>>2]=d;e=d;g=d;h=d}a:do if((h|0)==20)d=Pa()|0;else if((h|0)==21)d=Pa()|0;else if((h|0)==22){y=0;ia(385,a|0);n=y;y=0;if(!(n&1)){h=a+160|0;i=a+164|0;j=a+168|0;c=0;b:while(1){n=f[o>>2]|0;g=n;if((n|0)==(f[v>>2]|0)){h=54;break}d=f[g+-4>>2]|0;f[r>>2]=d;e=0;while(1){if((e|0)==-1)break;n=e+-1|0;f[o>>2]=g+(n<<2);e=n}e=f[i>>2]|0;g=e-(f[h>>2]|0)>>2;if(c){f[q>>2]=c;if(e>>>0>=(f[j>>2]|0)>>>0){y=0;ja(415,h|0,q|0);n=y;y=0;if(n&1){h=33;break}}else{f[e>>2]=c;f[i>>2]=(f[i>>2]|0)+4;d=f[r>>2]|0}}y=0;ia(386,a|0);n=y;y=0;if(n&1){h=44;break}e=(f[i>>2]|0)-(f[h>>2]|0)>>2;if(e>>>0<g>>>0){h=36;break}y=0;Ca(83,a|0,d|0,g|0,e|0);n=y;y=0;if(n&1){h=53;break}n=f[r>>2]|0;y=0;ja(1725,n|0,f[n+4>>2]|0);n=y;y=0;if(n&1){h=53;break}g=f[p>>2]|0;e=0;while(1){if((e|0)==-1){c=d;continue b}n=e+-1|0;f[p>>2]=g+(n<<3);e=n}}if((h|0)==33){d=Pa()|0;break}else if((h|0)==36){c=zb(20)|0;f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;g=uHa(56943)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[t+11>>0]=g;d=t}else{e=g+16&-16;y=0;d=la(150,e|0)|0;s=y;y=0;if(s&1){h=45;break}f[t>>2]=d;f[t+8>>2]=e|-2147483648;f[t+4>>2]=g}Pta(d,56943,g)|0;SBa(d+g|0,0);y=0;ja(583,c|0,t|0);s=y;y=0;if(s&1)e=1;else{y=0;ya(79,c|0,64,361);y=0;e=0}d=Pa()|0;zta(t);if(!e)break a}else{y=0;za(3);y=0;h=45}while(0);if((h|0)==45)d=Pa()|0;Oa(c|0);break}else if((h|0)==44){d=Pa()|0;break}else if((h|0)==53){d=Pa()|0;break}else if((h|0)==54){E4(v);u=s;return}}else h=19}while(0);if((h|0)==19)d=Pa()|0;E4(v);$a(d|0)}function ef(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;x=u;u=u+112|0;j=x;l=(e-d|0)/12|0;do if(l>>>0>100){k=rc(l)|0;if(!k){y=0;za(9);y=0;d=Pa()|0;break}else{j=k;w=k;z=5;break}}else{w=0;z=5}while(0);if((z|0)==5){n=d;o=j;k=0;while(1){if((n|0)==(e|0))break;m=b[n+11>>0]|0;if(m<<24>>24<0)m=f[n+4>>2]|0;else m=m&255;if(!m){b[o>>0]=2;k=k+1|0;l=l+-1|0}else b[o>>0]=1;n=n+12|0;o=o+1|0}v=0;r=k;o=c;a:while(1){k=f[a>>2]|0;do if(k){m=f[k+12>>2]|0;if((m|0)==(f[k+16>>2]|0)){y=0;k=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;t=y;y=0;if(t&1)break a}else k=oHa(b[m>>0]|0)|0;if(bDa(k,-1)|0){f[a>>2]=0;n=1;break}else{n=(f[a>>2]|0)==0;break}}else n=1;while(0);if(!o){c=0;t=0;k=1}else{k=f[o+12>>2]|0;if((k|0)==(f[o+16>>2]|0)){y=0;k=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1)break}else k=oHa(b[k>>0]|0)|0;k=bDa(k,-1)|0;c=k?0:o;t=k?0:o}m=f[a>>2]|0;if(!((l|0)!=0&(n^k))){z=28;break}k=f[m+12>>2]|0;if((k|0)==(f[m+16>>2]|0)){y=0;k=la(f[(f[m>>2]|0)+36>>2]|0,m|0)|0;s=y;y=0;if(s&1)break}else k=oHa(b[k>>0]|0)|0;k=k&255;if(!i){y=0;k=ua(f[(f[g>>2]|0)+12>>2]|0,g|0,k|0)|0;s=y;y=0;if(s&1)break}s=v+1|0;p=d;c=0;q=j;while(1){if((p|0)==(e|0))break;do if((b[q>>0]|0)==1){n=p+11|0;if((b[n>>0]|0)<0)m=f[p>>2]|0;else m=p;m=b[m+v>>0]|0;if(!i){y=0;m=ua(f[(f[g>>2]|0)+12>>2]|0,g|0,m|0)|0;o=y;y=0;if(o&1)break a}o=l+-1|0;if(k<<24>>24!=m<<24>>24){b[q>>0]=0;m=c;n=r;l=o;break}m=b[n>>0]|0;if(m<<24>>24<0)m=f[p+4>>2]|0;else m=m&255;if((m|0)==(s|0)){b[q>>0]=2;m=1;n=r+1|0;l=o}else{m=1;n=r}}else{m=c;n=r}while(0);p=p+12|0;c=m;q=q+1|0;r=n}if(!c){v=s;o=t;continue}k=f[a>>2]|0;m=k+12|0;n=f[m>>2]|0;if((n|0)==(f[k+16>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;v=y;y=0;if(v&1)break}else f[m>>2]=n+1;if((r+l|0)>>>0>1){n=d;o=j;k=r}else{v=s;o=t;continue}while(1){if((n|0)==(e|0)){v=s;r=k;o=t;continue a}if((b[o>>0]|0)==2){m=b[n+11>>0]|0;if(m<<24>>24<0)m=f[n+4>>2]|0;else m=m&255;if((m|0)!=(s|0)){b[o>>0]=0;k=k+-1|0}}n=n+12|0;o=o+1|0}}b:do if((z|0)==28){do if(m){k=f[m+12>>2]|0;if((k|0)==(f[m+16>>2]|0)){y=0;k=la(f[(f[m>>2]|0)+36>>2]|0,m|0)|0;i=y;y=0;if(i&1)break b}else k=oHa(b[k>>0]|0)|0;if(bDa(k,-1)|0){f[a>>2]=0;l=1;break}else{l=(f[a>>2]|0)==0;break}}else l=1;while(0);if(c){k=f[c+12>>2]|0;if((k|0)==(f[c+16>>2]|0)){y=0;k=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;a=y;y=0;if(a&1)break}else k=oHa(b[k>>0]|0)|0;if(!(bDa(k,-1)|0)){if(!l)z=76}else z=74}else z=74;if((z|0)==74)if(l)z=76;if((z|0)==76)f[h>>2]=f[h>>2]|2;while(1){if((d|0)==(e|0)){z=80;break}if((b[j>>0]|0)==2)break;d=d+12|0;j=j+1|0}if((z|0)==80){f[h>>2]=f[h>>2]|4;d=e}if(w|0)Xe(w);u=x;return d|0}while(0);d=Pa()|0;if(w)Xe(w)}$a(d|0);return 0}function ff(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+16|0;o=n+4|0;m=n;j=a+8|0;b=f[j>>2]|0;k=a+12|0;d=f[k>>2]|0;a:do if((b|0)!=(d|0)){c=0;l=0;while(1){if((b|0)==(d|0))break;i=f[f[b>>2]>>2]|0;h=c|(s6(i)|0);c=h;l=l|(f[i+4>>2]|0)==5;b=b+4|0}if(!c){if(!l)break;Na(47470,47491,235,47525)}i=f[(f[a>>2]|0)+44>>2]|0;f[o>>2]=0;e=o+4|0;f[e>>2]=0;f[o+8>>2]=0;g=f[k>>2]|0;h=o+8|0;d=f[j>>2]|0;while(1){if((d|0)==(g|0)){g=9;break}b=f[(f[f[d>>2]>>2]|0)+4>>2]|0;if(rCa(b)|0){c=gKa(f[(f[a>>2]|0)+32>>2]|0)|0;y=0;b=ua(114,c|0,b|0)|0;c=y;y=0;if(c&1){g=17;break}f[m>>2]=b;c=f[e>>2]|0;if(c>>>0>=(f[h>>2]|0)>>>0){y=0;ja(1630,o|0,m|0);c=y;y=0;if(c&1){g=17;break}}else{f[c>>2]=b;f[e>>2]=c+4}}else{f[m>>2]=-1;b=f[e>>2]|0;if(b>>>0>=(f[h>>2]|0)>>>0){y=0;ja(1630,o|0,m|0);c=y;y=0;if(c&1){g=22;break}}else{f[b>>2]=-1;f[e>>2]=b+4}}d=d+4|0}b:do if((g|0)==9){y=0;h=ua(87,f[i>>2]|0,0)|0;e=y;y=0;if(e&1){b=Pa()|0;break}e=h+12|0;d=0;c:while(1){b=f[j>>2]|0;if(d>>>0>=(f[k>>2]|0)-b>>2>>>0)break;b=f[f[b+(d<<2)>>2]>>2]|0;f[m>>2]=b;c=f[b+4>>2]|0;if(rCa(c)|0){y=0;b=oa(48,f[i>>2]|0,f[(f[o>>2]|0)+(d<<2)>>2]|0,b|0)|0;p=y;y=0;if(p&1){g=41;break}y=0;ja(596,e|0,b|0);p=y;y=0;if(p&1){g=41;break}y=0;b=oa(47,i|0,f[(f[o>>2]|0)+(d<<2)>>2]|0,c|0)|0;p=y;y=0;if(p&1){g=41;break}}else{switch(c|0){case 5:{g=37;break c}case 0:break;default:{g=38;break c}}y=0;ja(596,e|0,b|0);p=y;y=0;if(p&1){g=41;break}b=f[a>>2]|0;if(!(QZ(b+60|0,f[m>>2]|0)|0)){g=33;break}y=0;b=ua(120,b+60|0,m|0)|0;p=y;y=0;if(p&1){g=41;break}b=f[b>>2]|0;c=gKa(f[(f[a>>2]|0)+32>>2]|0)|0;y=0;c=ua(69,c|0,b|0)|0;p=y;y=0;if(p&1){g=41;break}y=0;b=oa(47,i|0,b|0,c|0)|0;p=y;y=0;if(p&1){g=41;break}}f[f[(f[j>>2]|0)+(d<<2)>>2]>>2]=b;d=d+1|0}if((g|0)==33){y=0;Ca(52,47532,47491,263,47525);y=0;g=41}else if((g|0)==37){y=0;ja(596,e|0,b|0);p=y;y=0;if(p&1)g=41}else if((g|0)==38){y=0;za(6);y=0;g=41}if((g|0)==41){b=Pa()|0;break}c=a+4|0;if(!(!l?(y=0,ja(596,e|0,f[c>>2]|0),p=y,y=0,p&1):0))g=45;d:do if(((g|0)==45?(y=0,ia(373,h|0),p=y,y=0,!(p&1)):0)?(y=0,ja(1631,f[a>>2]|0,h|0),p=y,y=0,!(p&1)):0){jva(f[(f[a>>2]|0)+16>>2]|0,h)|0;b=f[a>>2]|0;do if((OO(b+60|0,f[c>>2]|0)|0)!=(b+64|0)){y=0;b=ua(120,b+60|0,c|0)|0;p=y;y=0;if(p&1)break d;c=f[b>>2]|0;b=(f[a>>2]|0)+60|0;f[m>>2]=h;y=0;b=ua(121,b|0,m|0)|0;p=y;y=0;if(p&1){b=Pa()|0;break b}else{f[b>>2]=c;break}}while(0);E4(o);break a}while(0);b=Pa()|0}else if((g|0)==17)b=Pa()|0;else if((g|0)==22)b=Pa()|0;while(0);E4(o);$a(b|0)}while(0);u=n;return}function gf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=a+b|0;c=f[a+4>>2]|0;do if(!(c&1)){d=f[a>>2]|0;if(!(c&3))return;g=a+(0-d)|0;h=d+b|0;if((g|0)==(f[18978]|0)){a=j+4|0;c=f[a>>2]|0;if((c&3|0)!=3){i=g;c=h;break}f[18975]=h;f[a>>2]=c&-2;f[g+4>>2]=h|1;f[g+h>>2]=h;return}b=d>>>3;if(d>>>0<256){a=f[g+8>>2]|0;c=f[g+12>>2]|0;if((c|0)==(a|0)){f[18973]=f[18973]&~(1<<b);i=g;c=h;break}else{f[a+12>>2]=c;f[c+8>>2]=a;i=g;c=h;break}}e=f[g+24>>2]|0;a=f[g+12>>2]|0;do if((a|0)==(g|0)){b=g+16|0;c=b+4|0;a=f[c>>2]|0;if(!a){a=f[b>>2]|0;if(!a){a=0;break}else c=b}while(1){b=a+20|0;d=f[b>>2]|0;if(d|0){a=d;c=b;continue}b=a+16|0;d=f[b>>2]|0;if(!d)break;else{a=d;c=b}}f[c>>2]=0}else{i=f[g+8>>2]|0;f[i+12>>2]=a;f[a+8>>2]=i}while(0);if(e){c=f[g+28>>2]|0;b=76196+(c<<2)|0;if((g|0)==(f[b>>2]|0)){f[b>>2]=a;if(!a){f[18974]=f[18974]&~(1<<c);i=g;c=h;break}}else{f[e+16+(((f[e+16>>2]|0)!=(g|0)&1)<<2)>>2]=a;if(!a){i=g;c=h;break}}f[a+24>>2]=e;c=g+16|0;b=f[c>>2]|0;if(b|0){f[a+16>>2]=b;f[b+24>>2]=a}c=f[c+4>>2]|0;if(c){f[a+20>>2]=c;f[c+24>>2]=a;i=g;c=h}else{i=g;c=h}}else{i=g;c=h}}else{i=a;c=b}while(0);a=j+4|0;d=f[a>>2]|0;if(!(d&2)){a=f[18978]|0;if((j|0)==(f[18979]|0)){j=(f[18976]|0)+c|0;f[18976]=j;f[18979]=i;f[i+4>>2]=j|1;if((i|0)!=(a|0))return;f[18978]=0;f[18975]=0;return}if((j|0)==(a|0)){j=(f[18975]|0)+c|0;f[18975]=j;f[18978]=i;f[i+4>>2]=j|1;f[i+j>>2]=j;return}g=(d&-8)+c|0;b=d>>>3;do if(d>>>0<256){c=f[j+8>>2]|0;a=f[j+12>>2]|0;if((a|0)==(c|0)){f[18973]=f[18973]&~(1<<b);break}else{f[c+12>>2]=a;f[a+8>>2]=c;break}}else{e=f[j+24>>2]|0;a=f[j+12>>2]|0;do if((a|0)==(j|0)){b=j+16|0;c=b+4|0;a=f[c>>2]|0;if(!a){a=f[b>>2]|0;if(!a){b=0;break}else c=b}while(1){b=a+20|0;d=f[b>>2]|0;if(d|0){a=d;c=b;continue}b=a+16|0;d=f[b>>2]|0;if(!d)break;else{a=d;c=b}}f[c>>2]=0;b=a}else{b=f[j+8>>2]|0;f[b+12>>2]=a;f[a+8>>2]=b;b=a}while(0);if(e|0){a=f[j+28>>2]|0;c=76196+(a<<2)|0;if((j|0)==(f[c>>2]|0)){f[c>>2]=b;if(!b){f[18974]=f[18974]&~(1<<a);break}}else{f[e+16+(((f[e+16>>2]|0)!=(j|0)&1)<<2)>>2]=b;if(!b)break}f[b+24>>2]=e;a=j+16|0;c=f[a>>2]|0;if(c|0){f[b+16>>2]=c;f[c+24>>2]=b}a=f[a+4>>2]|0;if(a|0){f[b+20>>2]=a;f[a+24>>2]=b}}}while(0);f[i+4>>2]=g|1;f[i+g>>2]=g;if((i|0)==(f[18978]|0)){f[18975]=g;return}else c=g}else{f[a>>2]=d&-2;f[i+4>>2]=c|1;f[i+c>>2]=c}a=c>>>3;if(c>>>0<256){b=75932+(a<<1<<2)|0;c=f[18973]|0;a=1<<a;if(!(c&a)){f[18973]=c|a;a=b;c=b+8|0}else{c=b+8|0;a=f[c>>2]|0}f[c>>2]=i;f[a+12>>2]=i;f[i+8>>2]=a;f[i+12>>2]=b;return}a=c>>>8;if(a)if(c>>>0>16777215)a=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;a=(j+245760|0)>>>16&2;a=14-(g|h|a)+(j<<a>>>15)|0;a=c>>>(a+7|0)&1|a<<1}else a=0;e=76196+(a<<2)|0;f[i+28>>2]=a;f[i+20>>2]=0;f[i+16>>2]=0;b=f[18974]|0;d=1<<a;if(!(b&d)){f[18974]=b|d;f[e>>2]=i;f[i+24>>2]=e;f[i+12>>2]=i;f[i+8>>2]=i;return}b=c<<((a|0)==31?0:25-(a>>>1)|0);d=f[e>>2]|0;while(1){if((f[d+4>>2]&-8|0)==(c|0)){a=69;break}e=d+16+(b>>>31<<2)|0;a=f[e>>2]|0;if(!a){a=68;break}else{b=b<<1;d=a}}if((a|0)==68){f[e>>2]=i;f[i+24>>2]=d;f[i+12>>2]=i;f[i+8>>2]=i;return}else if((a|0)==69){h=d+8|0;j=f[h>>2]|0;f[j+12>>2]=i;f[h>>2]=i;f[i+8>>2]=j;f[i+12>>2]=d;f[i+24>>2]=0;return}}function hf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:while(1){k=b;l=b+-4|0;while(1){b:while(1){j=a;e=k-j|0;g=e>>2;d=a+4|0;switch(g|0){case 1:case 0:break a;case 2:{m=5;break a}case 3:{m=7;break a}case 4:{m=8;break a}case 5:{m=9;break a}default:{}}if((e|0)<28){m=11;break a}i=a+(((g|0)/2|0)<<2)|0;if((e|0)>3996){e=(g|0)/4|0;e=Rq(a,a+(e<<2)|0,i,i+(e<<2)|0,l,c)|0}else e=Ir(a,i,l,c)|0;if(GA(f[c>>2]|0,a,i)|0){g=l;break}else g=l;while(1){g=g+-4|0;h=f[c>>2]|0;if((a|0)==(g|0))break;if(GA(h,g,i)|0){m=28;break b}}if(!(GA(h,a,l)|0)){while(1){if((d|0)==(l|0))break a;e=d+4|0;if(GA(f[c>>2]|0,a,d)|0)break;else d=e}j=f[d>>2]|0;f[d>>2]=f[l>>2];f[l>>2]=j;d=e}if((d|0)==(l|0))break a;else e=l;while(1){while(1){g=d+4|0;if(GA(f[c>>2]|0,a,d)|0)break;else d=g}do e=e+-4|0;while(GA(f[c>>2]|0,a,e)|0);if(d>>>0>=e>>>0){a=d;continue b}j=f[d>>2]|0;f[d>>2]=f[e>>2];f[e>>2]=j;d=g}}if((m|0)==28){m=0;h=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=h;e=e+1|0}c:do if(d>>>0<g>>>0)while(1){while(1){h=d+4|0;if(GA(f[c>>2]|0,d,i)|0)d=h;else break}do g=g+-4|0;while(!(GA(f[c>>2]|0,g,i)|0));if(d>>>0>g>>>0){g=i;break c}n=f[d>>2]|0;f[d>>2]=f[g>>2];f[g>>2]=n;i=(i|0)==(d|0)?g:i;d=h;e=e+1|0}else g=i;while(0);if((d|0)!=(g|0)?GA(f[c>>2]|0,g,d)|0:0){n=f[d>>2]|0;f[d>>2]=f[g>>2];f[g>>2]=n;e=e+1|0}if(!e){e=Qi(a,d,c)|0;g=d+4|0;if(Qi(g,b,c)|0){m=44;break}if(e){a=g;continue}}n=d;if((n-j|0)>=(k-n|0)){m=43;break}hf(a,d,c);a=d+4|0}if((m|0)==43){m=0;hf(d+4|0,b,c);b=d;continue}else if((m|0)==44){m=0;if(e)break;else{b=d;continue}}}if((m|0)==5){if(GA(f[c>>2]|0,l,a)|0){n=f[a>>2]|0;f[a>>2]=f[l>>2];f[l>>2]=n}}else if((m|0)==7)Ir(a,d,l,c)|0;else if((m|0)==8)Tt(a,d,a+8|0,l,c)|0;else if((m|0)==9)Rq(a,d,a+8|0,a+12|0,l,c)|0;else if((m|0)==11)Io(a,b,c);return}function jf(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;v=u;u=u+48|0;w=v+24|0;m=v+12|0;x=v;f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;f[m>>2]=0;g=m+4|0;f[g>>2]=0;f[m+8>>2]=0;f[x>>2]=0;l=x+4|0;f[l>>2]=0;f[x+8>>2]=0;s=a+136|0;y=0;ja(604,d|0,f[s>>2]|0);r=y;y=0;do if((!(r&1)?(y=0,ja(1935,w|0,f[s>>2]|0),r=y,y=0,!(r&1)):0)?(r=f[s>>2]|0,r=Y(r,r)|0,y=0,ja(1936,m|0,r|0),r=y,y=0,!(r&1)):0){j=f[m>>2]|0;i=f[g>>2]|0;g=j;i=(g+(i>>>5<<2)-j<<3)+(i&31)|0;k=0;while(1){if((i|0)<=0)break;q=j;f[q>>2]=f[q>>2]&~(1<<k);r=(k|0)==31;i=i+-1|0;j=r?q+4|0:j;k=r?0:k+1|0}r=a+32|0;n=Rya(gKa(f[r>>2]|0)|0)|0;q=Y(f[s>>2]|0,n)|0;y=0;ja(1937,x|0,q|0);q=y;y=0;if(q&1){i=Pa()|0;break}i=f[x>>2]|0;g=(f[l>>2]|0)-i|0;while(1){if((g|0)<=0)break;q=i;b[q>>0]=0;g=g+-1|0;i=q+1|0}f[e>>2]=0;q=a+140|0;g=f[m>>2]|0;p=a+172|0;k=0;while(1){if(k>>>0>=n>>>0){o=13;break}if((f[(f[c>>2]|0)+(k<<2)>>2]|0)!=(k|0)){o=15;break}f[(f[d>>2]|0)+(k<<2)>>2]=k;i=gKa(f[r>>2]|0)|0;y=0;i=ua(69,i|0,k|0)|0;o=y;y=0;if(o&1){o=18;break}f[(f[w>>2]|0)+(k<<2)>>2]=i;i=n;while(1){j=f[s>>2]|0;if(i>>>0>=j>>>0)break;l=Jba(j,f[q>>2]|0,k,i)|0;a=(Y(j,k)|0)+i|0;o=g+(a>>>5<<2)|0;a=1<<(a&31);m=f[o>>2]|0;f[o>>2]=l?a|m:m&~a;o=f[s>>2]|0;a=Aka(o,f[p>>2]|0,k,i)|0;o=(Y(o,k)|0)+i|0;b[(f[x>>2]|0)+o>>0]=a;i=i+1|0}k=k+1|0}if((o|0)==13){n=k;l=k;i=f[s>>2]|0;a:while(1){if(l>>>0>=i>>>0){o=42;break}o=f[(f[c>>2]|0)+(l<<2)>>2]|0;a=0;i=-1;j=-1;while(1){k=(j|0)==-1;if(a>>>0>=n>>>0)break;m=(Y(f[s>>2]|0,a)|0)+o|0;if(!(1<<(m&31)&f[g+(m>>>5<<2)>>2])){m=gKa(f[r>>2]|0)|0;y=0;m=ua(69,m|0,o|0)|0;z=y;y=0;if(z&1){o=33;break a}if((m|0)==(f[(f[w>>2]|0)+(a<<2)>>2]|0)?(t=(Y(f[s>>2]|0,a)|0)+o|0,t=b[(f[x>>2]|0)+t>>0]|0,k|(t&255)>(i&255)):0){f[(f[d>>2]|0)+(o<<2)>>2]=a;i=t;j=a}}a=a+1|0}if(k){f[(f[d>>2]|0)+(o<<2)>>2]=n;i=gKa(f[r>>2]|0)|0;y=0;i=ua(69,i|0,o|0)|0;z=y;y=0;if(z&1){o=37;break}f[(f[w>>2]|0)+(n<<2)>>2]=i;i=n+1|0;z=(Aka(f[s>>2]|0,f[p>>2]|0,n,o)|0)&255;f[e>>2]=(f[e>>2]|0)+z;z=Y(f[s>>2]|0,i)|0;y=0;ja(1937,x|0,z|0);z=y;y=0;if(z&1){o=37;break}else{m=i;k=n}}else{f[e>>2]=(f[e>>2]|0)+(i&255);m=n;k=j}l=l+1|0;j=l;while(1){i=f[s>>2]|0;if(j>>>0>=i>>>0){n=m;continue a}z=f[(f[c>>2]|0)+(j<<2)>>2]|0;n=z+(Y(i,k)|0)|0;A=Jba(i,f[q>>2]|0,o,z)|0;a=g+(n>>>5<<2)|0;i=f[a>>2]|0;n=1<<(n&31);f[a>>2]=A|(n&i|0)!=0?n|i:i&~n;a=f[s>>2]|0;n=(Aka(a,f[p>>2]|0,o,z)|0)&255;z=(Y(a,k)|0)+z|0;z=(f[x>>2]|0)+z|0;b[z>>0]=(h[z>>0]|0)+n;j=j+1|0}}if((o|0)==33){i=Pa()|0;break}else if((o|0)==37){i=Pa()|0;break}else if((o|0)==42){F4(x);HCa(g);E4(w);u=v;return}}else if((o|0)==15){y=0;Ca(52,50002,50016,498,50046);y=0;i=Pa()|0;break}else if((o|0)==18){i=Pa()|0;break}}else o=16;while(0);if((o|0)==16){i=Pa()|0;g=f[m>>2]|0}F4(x);HCa(g);E4(w);$a(i|0)}function kf(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;x=u;u=u+112|0;j=x;l=(e-d|0)/12|0;do if(l>>>0>100){k=rc(l)|0;if(!k){y=0;za(9);y=0;d=Pa()|0;break}else{j=k;w=k;z=5;break}}else{w=0;z=5}while(0);if((z|0)==5){n=d;o=j;k=0;while(1){if((n|0)==(e|0))break;m=b[n+8+3>>0]|0;if(m<<24>>24<0)m=f[n+4>>2]|0;else m=m&255;if(!m){b[o>>0]=2;k=k+1|0;l=l+-1|0}else b[o>>0]=1;n=n+12|0;o=o+1|0}v=0;r=k;o=c;a:while(1){k=f[a>>2]|0;do if(k){m=f[k+12>>2]|0;if((m|0)==(f[k+16>>2]|0)){y=0;k=la(f[(f[k>>2]|0)+36>>2]|0,k|0)|0;t=y;y=0;if(t&1)break a}else k=gKa(f[m>>2]|0)|0;if(TDa(k)|0){f[a>>2]=0;n=1;break}else{n=(f[a>>2]|0)==0;break}}else n=1;while(0);if(!o){c=0;t=0;k=1}else{k=f[o+12>>2]|0;if((k|0)==(f[o+16>>2]|0)){y=0;k=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1)break}else k=gKa(f[k>>2]|0)|0;k=TDa(k)|0;c=k?0:o;t=k?0:o}m=f[a>>2]|0;if(!((l|0)!=0&(n^k))){z=28;break}k=f[m+12>>2]|0;if((k|0)==(f[m+16>>2]|0)){y=0;k=la(f[(f[m>>2]|0)+36>>2]|0,m|0)|0;s=y;y=0;if(s&1)break}else k=gKa(f[k>>2]|0)|0;if(!i){y=0;k=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,k|0)|0;s=y;y=0;if(s&1)break}s=v+1|0;p=d;c=0;q=j;while(1){if((p|0)==(e|0))break;do if((b[q>>0]|0)==1){n=p+8+3|0;if((b[n>>0]|0)<0)m=f[p>>2]|0;else m=p;m=f[m+(v<<2)>>2]|0;if(!i){y=0;m=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,m|0)|0;o=y;y=0;if(o&1)break a}o=l+-1|0;if((k|0)!=(m|0)){b[q>>0]=0;m=c;n=r;l=o;break}m=b[n>>0]|0;if(m<<24>>24<0)m=f[p+4>>2]|0;else m=m&255;if((m|0)==(s|0)){b[q>>0]=2;m=1;n=r+1|0;l=o}else{m=1;n=r}}else{m=c;n=r}while(0);p=p+12|0;c=m;q=q+1|0;r=n}if(!c){v=s;o=t;continue}k=f[a>>2]|0;m=k+12|0;n=f[m>>2]|0;if((n|0)==(f[k+16>>2]|0)){y=0;la(f[(f[k>>2]|0)+40>>2]|0,k|0)|0;v=y;y=0;if(v&1)break}else f[m>>2]=n+4;if((r+l|0)>>>0>1){n=d;o=j;k=r}else{v=s;o=t;continue}while(1){if((n|0)==(e|0)){v=s;r=k;o=t;continue a}if((b[o>>0]|0)==2){m=b[n+8+3>>0]|0;if(m<<24>>24<0)m=f[n+4>>2]|0;else m=m&255;if((m|0)!=(s|0)){b[o>>0]=0;k=k+-1|0}}n=n+12|0;o=o+1|0}}b:do if((z|0)==28){do if(m){k=f[m+12>>2]|0;if((k|0)==(f[m+16>>2]|0)){y=0;k=la(f[(f[m>>2]|0)+36>>2]|0,m|0)|0;i=y;y=0;if(i&1)break b}else k=gKa(f[k>>2]|0)|0;if(TDa(k)|0){f[a>>2]=0;l=1;break}else{l=(f[a>>2]|0)==0;break}}else l=1;while(0);if(c){k=f[c+12>>2]|0;if((k|0)==(f[c+16>>2]|0)){y=0;k=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;a=y;y=0;if(a&1)break}else k=gKa(f[k>>2]|0)|0;if(!(TDa(k)|0)){if(!l)z=76}else z=74}else z=74;if((z|0)==74)if(l)z=76;if((z|0)==76)f[h>>2]=f[h>>2]|2;while(1){if((d|0)==(e|0)){z=80;break}if((b[j>>0]|0)==2)break;d=d+12|0;j=j+1|0}if((z|0)==80){f[h>>2]=f[h>>2]|4;d=e}if(w|0)Xe(w);u=x;return d|0}while(0);d=Pa()|0;if(w)Xe(w)}$a(d|0);return 0}function lf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;t=u;u=u+80|0;n=t+64|0;q=t+60|0;v=t+12|0;s=t;r=t+56|0;m=f[d+4>>2]|0;o=ssa(f[f[d>>2]>>2]|0)|0;VBa(q,a);VBa(n,a);p=kaa(f[n>>2]|0,0)|0;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;g=uHa(46392)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[s+11>>0]=g;e=s}else{l=g+16&-16;e=nV(l)|0;f[s>>2]=e;f[s+8>>2]=l|-2147483648;f[s+4>>2]=g}Pta(e,46392,g)|0;SBa(e+g|0,0);y=0;ua(50,s|0,f[m>>2]|0)|0;l=y;y=0;do if(l&1){e=Pa()|0;k=16}else{f[v>>2]=f[s>>2];f[v+4>>2]=f[s+4>>2];f[v+8>>2]=f[s+8>>2];e=0;while(1){if((e|0)==3)break;f[s+(e<<2)>>2]=0;e=e+1|0}y=0;ja(582,n|0,v|0);l=y;y=0;if(l&1){e=Pa()|0;zta(v);k=16;break}l=p+8|0;f[l>>2]=f[n>>2];zta(v);zta(s);f[f[d>>2]>>2]=p;Kca(v);f[v+36>>2]=f[l>>2];f[v+40>>2]=q;j=v+24|0;e=0;while(1){f[n>>2]=e;if(e>>>0>=(Pqa(m)|0)>>>0){k=13;break}y=0;e=ua(69,m|0,e|0)|0;k=y;y=0;if(k&1){k=17;break}y=0;e=ua(114,c|0,e|0)|0;k=y;y=0;if(k&1){k=17;break}y=0;g=ua(92,j|0,n|0)|0;k=y;y=0;if(k&1){k=17;break}f[g>>2]=e;e=(f[n>>2]|0)+1|0}do if((k|0)==13){d=m+8|0;c=m+12|0;i=p+12|0;h=o+8|0;e=0;while(1){f[n>>2]=e;if(e>>>0>=(f[c>>2]|0)-(f[d>>2]|0)>>2>>>0)break;y=0;e=ua(92,j|0,n|0)|0;g=y;y=0;if(g&1){k=29;break}e=f[e>>2]|0;y=0;g=ua(64,h|0,f[n>>2]|0)|0;w=y;y=0;if(w&1){k=29;break}y=0;e=oa(48,f[q>>2]|0,e|0,f[g>>2]|0)|0;w=y;y=0;if(w&1){k=29;break}y=0;ja(596,i|0,e|0);w=y;y=0;if(w&1){k=29;break}e=(f[n>>2]|0)+1|0}if((k|0)==29){e=Pa()|0;break}c=m+20|0;h=m+24|0;d=0;while(1){if(d>>>0>=(f[h>>2]|0)-(f[c>>2]|0)>>2>>>0)break;e=(Rya(m)|0)+d|0;f[n>>2]=e;y=0;e=ua(116,j|0,n|0)|0;w=y;y=0;if(w&1){k=37;break}e=f[e>>2]|0;y=0;g=ua(117,f[(f[c>>2]|0)+(d<<2)>>2]|0,a|0)|0;w=y;y=0;if(w&1){k=37;break}y=0;e=oa(48,f[q>>2]|0,e|0,g|0)|0;w=y;y=0;if(w&1){k=37;break}y=0;ja(596,i|0,e|0);w=y;y=0;if(w&1){k=37;break}d=d+1|0}if((k|0)==37){e=Pa()|0;break}y=0;e=ua(115,f[m+36>>2]|0,a|0)|0;w=y;y=0;if(w&1){e=Pa()|0;break}f[s>>2]=e;y=0;ja(1514,v|0,s|0);w=y;y=0;do if(!(w&1)?(y=0,ja(596,i|0,f[s>>2]|0),w=y,y=0,!(w&1)):0){w=f[o+4>>2]|0;f[p+4>>2]=w;if((w|0)==0?(f[(f[s>>2]|0)+4>>2]|0)==5:0){f[r>>2]=f[l>>2];y=0;f[n>>2]=f[r>>2];e=xa(14,q|0,n|0,0,0)|0;w=y;y=0;if(w&1)break;y=0;ja(596,i|0,e|0);w=y;y=0;if(w&1)break}Wha(v);u=t;return}while(0);e=Pa()|0}else if((k|0)==17)e=Pa()|0;while(0);Wha(v)}while(0);if((k|0)==16)zta(s);$a(e|0)}function mf(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=u;u=u+224|0;i=k+208|0;q=k+64|0;j=k+48|0;l=k+36|0;m=k+24|0;p=k+12|0;n=k;g=q+64|0;e=q+8|0;f[e>>2]=6024;h=q+12|0;f[q>>2]=84;f[g>>2]=104;f[q+4>>2]=0;dX(q+64|0,h);f[q+136>>2]=0;f[q+140>>2]=-1;f[q>>2]=6004;f[g>>2]=6044;f[e>>2]=6024;W6(h);f[h>>2]=6060;e=q+44|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[e+(d<<2)>>2]=0;d=d+1|0}f[q+56>>2]=0;f[q+60>>2]=24;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[i+(d<<2)>>2]=0;d=d+1|0}y=0;ja(117,h|0,i|0);d=y;y=0;if(d&1){q=Pa()|0;zta(i);zta(e);vwa(h);oCa(g);$a(q|0)}zta(i);y=0;ua(109,c|0,q+8|0)|0;g=y;y=0;a:do if(g&1)d=Pa()|0;else{f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;e=uHa(45434)|0;do if(e>>>0>4294967279){y=0;za(3);y=0;o=36}else{if(e>>>0<11){b[p+11>>0]=e;d=p}else{c=e+16&-16;y=0;d=la(150,c|0)|0;g=y;y=0;if(g&1){o=36;break}f[p>>2]=d;f[p+8>>2]=c|-2147483648;f[p+4>>2]=e}Pta(d,45434,e)|0;SBa(d+e|0,0);g=f[18971]|0;f[18971]=g+1;y=0;ja(593,n|0,g|0);g=y;y=0;if(g&1)d=Pa()|0;else{g=b[n+11>>0]|0;e=g<<24>>24<0;y=0;oa(37,p|0,(e?f[n>>2]|0:n)|0,(e?f[n+4>>2]|0:g&255)|0)|0;g=y;y=0;if(g&1)d=Pa()|0;else{f[m>>2]=f[p>>2];f[m+4>>2]=f[p+4>>2];f[m+8>>2]=f[p+8>>2];d=0;while(1){if((d|0)==3)break;f[p+(d<<2)>>2]=0;d=d+1|0}y=0;ua(50,m|0,72207)|0;g=y;y=0;if(g&1)d=Pa()|0;else{f[l>>2]=f[m>>2];f[l+4>>2]=f[m+4>>2];f[l+8>>2]=f[m+8>>2];d=0;while(1){if((d|0)==3)break;f[m+(d<<2)>>2]=0;d=d+1|0}y=0;ua(50,l|0,f[a>>2]|0)|0;a=y;y=0;do if(!(a&1)){f[j>>2]=f[l>>2];f[j+4>>2]=f[l+4>>2];f[j+8>>2]=f[l+8>>2];d=0;while(1){if((d|0)==3)break;f[l+(d<<2)>>2]=0;d=d+1|0}y=0;ua(50,j|0,45439)|0;a=y;y=0;if(a&1){d=Pa()|0;zta(j);break}f[i>>2]=f[j>>2];f[i+4>>2]=f[j+4>>2];f[i+8>>2]=f[j+8>>2];d=0;while(1){if((d|0)==3)break;f[j+(d<<2)>>2]=0;d=d+1|0}d=qF((b[i+11>>0]|0)<0?f[i>>2]|0:i,58843)|0;zta(i);zta(j);zta(l);zta(m);zta(n);zta(p);y=0;ja(118,i|0,h|0);p=y;y=0;if(p&1){d=Pa()|0;break a}else{xDa((b[i+11>>0]|0)<0?f[i>>2]|0:i,d);zta(i);ML(d)|0;Sia(q);u=k;return}}else d=Pa()|0;while(0);zta(l)}zta(m)}zta(n)}zta(p)}while(0);if((o|0)==36)d=Pa()|0}while(0);Sia(q);$a(d|0)}function nf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;r=u;u=u+48|0;p=r+32|0;t=r+20|0;n=r+16|0;s=r+4|0;q=r;gua(t);o=f[d+80>>2]|0;k=a+68|0;j=f[d+76>>2]|0;a:while(1){if((j|0)==(o|0)){e=4;break}l=j+4|0;m=j+8|0;i=0;while(1){a=f[l>>2]|0;if(i>>>0>=(f[m>>2]|0)-a>>2>>>0)break;e=f[a+(i<<2)>>2]|0;f[n>>2]=e;y=0;f[p>>2]=f[n>>2];a=ua(47,d|0,p|0)|0;h=y;y=0;if(h&1){e=14;break a}y=0;ja(58,p|0,a|0);h=y;y=0;if(h&1){e=15;break a}y=0;h=ua(48,t|0,p|0)|0;g=y;y=0;if(g&1){e=21;break a}b:do if((f[h+4>>2]|0)==(f[h>>2]|0)){y=0;ja(59,h|0,f[k>>2]|0);g=y;y=0;if(g&1){e=21;break a}a=0;while(1){if(a>>>0>=(f[k>>2]|0)>>>0)break b;y=0;g=la(149,e|0)|0;v=y;y=0;if(v&1){e=21;break a}f[(f[h>>2]|0)+(a<<2)>>2]=g;a=a+1|0}}else{y=0;a=la(149,e|0)|0;v=y;y=0;if(v&1){e=21;break a}f[(f[h>>2]|0)+(i<<2)>>2]=a}while(0);zta(p);i=i+1|0}j=j+16|0}do if((e|0)==4){k=t+4|0;l=p+11|0;m=s+11|0;d=p+8|0;n=p+4|0;a=f[t>>2]|0;c:while(1){if((a|0)==(k|0)){e=23;break}h=a+16|0;j=a+28|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;i=uHa(19350)|0;if(i>>>0>4294967279){e=25;break}if(i>>>0<11){b[l>>0]=i;e=p}else{g=i+16&-16;y=0;e=la(150,g|0)|0;v=y;y=0;if(v&1){e=45;break}f[p>>2]=e;f[d>>2]=g|-2147483648;f[n>>2]=i}Pta(e,19350,i)|0;SBa(e+i|0,0);v=b[h+11>>0]|0;o=v<<24>>24<0;y=0;oa(37,p|0,(o?f[h>>2]|0:h)|0,(o?f[a+20>>2]|0:v&255)|0)|0;v=y;y=0;if(v&1){e=46;break}f[s>>2]=f[p>>2];f[s+4>>2]=f[p+4>>2];f[s+8>>2]=f[p+8>>2];e=0;while(1){if((e|0)==3)break;f[p+(e<<2)>>2]=0;e=e+1|0}zta(p);y=0;ya(64,q|0,((b[m>>0]|0)<0?f[s>>2]|0:s)|0,0);v=y;y=0;if(v&1){e=48;break}y=0;e=wa(1)|0;v=y;y=0;if(v&1){e=52;break}v=gKa(c)|0;y=0;ua(49,v|0,e|0)|0;v=y;y=0;if(v&1){e=52;break}y=0;i=wa(2)|0;v=y;y=0;if(v&1){e=52;break}y=0;ya(65,e|0,f[q>>2]|0,i|0);v=y;y=0;if(v&1){e=52;break}h=f[a+32>>2]|0;e=f[j>>2]|0;while(1){if((e|0)==(h|0))break;y=0;g=la(151,f[e>>2]|0)|0;v=y;y=0;if(v&1){e=52;break c}y=0;ja(60,i|0,g|0);v=y;y=0;if(v&1){e=52;break c}e=e+4|0}zta(s);e=f[a+4>>2]|0;if(!e)while(1){e=f[a+8>>2]|0;if((f[e>>2]|0)==(a|0)){a=e;continue c}else a=e}else a=e;while(1){e=f[a>>2]|0;if(!e)break;else a=e}}if((e|0)==23){f$(t);u=r;return}else if((e|0)==25){y=0;za(3);y=0;e=45}else if((e|0)==46){a=Pa()|0;zta(p)}else if((e|0)==48){a=Pa()|0;e=53}else if((e|0)==52){a=Pa()|0;e=53}if((e|0)==45)a=Pa()|0;else if((e|0)==53){zta(s);break}}else if((e|0)==14)a=Pa()|0;else if((e|0)==15)a=Pa()|0;else if((e|0)==21){a=Pa()|0;zta(p)}while(0);f$(t);$a(a|0)}function of(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=u;u=u+80|0;i=o+64|0;j=o+60|0;k=o+48|0;l=o+36|0;h=o+12|0;m=o+24|0;p=o;n=a+16|0;a:do if(f[n>>2]|0){f[i>>2]=a;f[j>>2]=a;f[k>>2]=a;f[k+4>>2]=i;f[k+8>>2]=j;f[l>>2]=j;f[l+4>>2]=i;f[l+8>>2]=a;b:do if(Qx(k,58323,7)|0){yr(f[(f[j>>2]|0)+16>>2]|0,91);do if(!(N1(f[i>>2]|0,93)|0)){h=a+216|0;while(1){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[m+(c<<2)>>2]=0;c=c+1|0}y=0;ja(2002,l|0,m|0);q=y;y=0;if(q&1){q=27;break}q=f[a>>2]|0;d=q+132|0;e=q+136|0;c=f[e>>2]|0;g=(c-(f[d>>2]|0)|0)/12|0;if((c|0)==(f[q+140>>2]|0)){y=0;ja(2003,d|0,m|0);q=y;y=0;if(q&1){q=27;break}}else{y=0;ja(120,c|0,m|0);q=y;y=0;if(q&1){q=27;break}f[e>>2]=(f[e>>2]|0)+12}y=0;c=ua(153,h|0,m|0)|0;q=y;y=0;if(q&1){q=27;break}f[c>>2]=g;zta(m);if(!(N1(f[i>>2]|0,44)|0)){q=26;break}}if((q|0)==26){yr(f[(f[j>>2]|0)+16>>2]|0,93);break}else if((q|0)==27){c=Pa()|0;zta(m);break b}}while(0);if(Qx(k,58368,8)|0){yr(f[(f[j>>2]|0)+16>>2]|0,34);if(N1(f[i>>2]|0,34)|0)c=0;else{c=yi(f[n>>2]|0)|0;m=yi(f[n>>2]|0)|0;p=(yi(f[n>>2]|0)|0)+1|0;q=yi(f[n>>2]|0)|0;f[a+24>>2]=m;f[a+28>>2]=p;f[a+32>>2]=q}f[a+20>>2]=c;break a}g=zb(12)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;e=uHa(58377)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[p+11>>0]=e;c=p}else{d=e+16&-16;y=0;c=la(150,d|0)|0;o=y;y=0;if(o&1){q=37;break}f[p>>2]=c;f[p+8>>2]=d|-2147483648;f[p+4>>2]=e}Pta(c,58377,e)|0;SBa(c+e|0,0);y=0;ja(2001,g|0,p|0);o=y;y=0;if(o&1)d=1;else{y=0;ya(79,g|0,4016,384);y=0;d=0}c=Pa()|0;zta(p);if(!d)break b}else{y=0;za(3);y=0;q=37}while(0);if((q|0)==37)c=Pa()|0;Oa(g|0)}else{g=zb(12)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(58331)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;c=h}else{d=e+16&-16;y=0;c=la(150,d|0)|0;p=y;y=0;if(p&1){q=11;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(c,58331,e)|0;SBa(c+e|0,0);y=0;ja(2001,g|0,h|0);p=y;y=0;if(p&1)d=1;else{y=0;ya(79,g|0,4016,384);y=0;d=0}c=Pa()|0;zta(h);if(!d)break b}else{y=0;za(3);y=0;q=11}while(0);if((q|0)==11)c=Pa()|0;Oa(g|0)}while(0);$a(c|0)}while(0);u=o;return}function pf(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;t=u;u=u+144|0;s=t+128|0;n=t+120|0;w=t+28|0;v=t+16|0;o=t+12|0;p=t+8|0;q=t;if(!(c>>>0<d>>>0&((c|0)!=-1&(d|0)!=-1)))Na(49616,49698,149,49725);l=a+12|0;Ot(w,f[l>>2]|0,0);y=0;e=ua(64,f[a>>2]|0,d|0)|0;r=y;y=0;if(!(r&1)?(y=0,ja(211,w|0,f[e>>2]|0),r=y,y=0,!(r&1)):0){b[w+26>>0]=0;f[v>>2]=0;m=v+4|0;f[m>>2]=0;f[v+8>>2]=0;h=a+16|0;i=q+4|0;j=n+4|0;r=s+8|0;k=v+8|0;e=d;a:while(1){e=e+-1|0;y=0;g=ua(64,f[a>>2]|0,e|0)|0;x=y;y=0;if(x&1){k=23;break}y=0;g=ua(131,a|0,f[g>>2]|0)|0;x=y;y=0;if(x&1){k=23;break}f[o>>2]=g;if(!g){y=0;g=ua(64,f[a>>2]|0,e|0)|0;x=y;y=0;if(x&1){k=24;break}y=0;ja(211,w|0,f[g>>2]|0);x=y;y=0;if(x&1){k=24;break}}else{x=Vs(h,o)|0;g=x;if(!x){f[p>>2]=o;f[q>>2]=f[l>>2];f[i>>2]=o;y=0;Ca(75,s|0,h|0,p|0,q|0);x=y;y=0;if(x&1){k=25;break}g=f[s>>2]|0;y=0;ya(101,n|0,h|0,g|0);x=y;y=0;if(x&1){k=13;break}x=(b[j>>0]|0)!=0;f[s>>2]=0;if(!(x|(g|0)==0)){if(b[r>>0]|0)GAa(g+8|0);$Ja(g)}g=f[n>>2]|0}g=g+12|0;do if(oh(w,g)|0){y=0;ja(1902,w|0,g|0);x=y;y=0;if(x&1){k=29;break a}}else{g=f[m>>2]|0;if((g|0)==(f[k>>2]|0)){y=0;ja(1903,v|0,o|0);x=y;y=0;if(x&1){k=29;break a}else break}else{f[g>>2]=f[o>>2];f[m>>2]=(f[m>>2]|0)+4;break}}while(0);if((e|0)==(c|0)){k=40;break}}if(!e){k=37;break}}b:do if((k|0)==13){d=Pa()|0;f[s>>2]=0;if(g|0){if(b[r>>0]|0)GAa(g+8|0);$Ja(g)}k=26}else if((k|0)==23)d=Pa()|0;else if((k|0)==25){d=Pa()|0;k=26}else if((k|0)==29){d=Pa()|0;k=39}else if((k|0)==37){y=0;Ca(52,49741,49698,184,49725);y=0;k=24}else if((k|0)==40){j=(f[m>>2]|0)-(f[v>>2]|0)>>2;c:do if(j){i=j+-1|0;e=0;while(1){if(c>>>0>d>>>0){k=43;break}if(e>>>0<j>>>0){y=0;g=ua(64,f[a>>2]|0,c|0)|0;x=y;y=0;if(x&1)break;if((f[g>>2]|0)==(f[(f[v>>2]|0)+(i-e<<2)>>2]|0))e=e+1|0;else k=48}else k=48;if((k|0)==48){k=0;if(!e)e=0;else{y=0;g=ua(64,f[a>>2]|0,c|0)|0;x=y;y=0;if(x&1)break;g=f[g>>2]|0;y=0;h=ua(64,f[a>>2]|0,c-e|0)|0;x=y;y=0;if(x&1)break;f[h>>2]=g}}c=c+1|0}d:do if((k|0)==43){if((e|0)==(j|0))e=0;else{y=0;Ca(52,49747,49698,206,49725);y=0;break}while(1){if(e>>>0>=j>>>0)break;g=f[(f[v>>2]|0)+(e<<2)>>2]|0;y=0;h=ua(64,f[a>>2]|0,d-e|0)|0;x=y;y=0;if(x&1)break d;f[h>>2]=g;e=e+1|0}d=d-j|0;break c}while(0);d=Pa()|0;break b}while(0);E4(v);hT(w);u=t;return d+1|0}while(0);if((k|0)==24){d=Pa()|0;k=39}else if((k|0)==26)k=39;E4(v)}else d=Pa()|0;hT(w);$a(d|0);return 0}function qf(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0;t=u;u=u+16|0;k=t+12|0;j=t+8|0;r=t+4|0;s=t;f[g>>2]=0;Axa(k,e);y=0;l=ua(46,f[k>>2]|0,77588)|0;q=y;y=0;if(q&1){v=Pa()|0;pza(k);$a(v|0)}pza(k);m=h+16|0;n=h+8|0;o=h+20|0;p=h+24|0;q=a+8|0;do switch(i<<24>>24|0){case 65:case 97:{pM(a,p,c,f[d>>2]|0,g,l);v=28;break}case 104:case 66:case 98:{UL(a,m,c,f[d>>2]|0,g,l);v=28;break}case 99:{i=Ob[f[(f[q>>2]|0)+12>>2]&255](q)|0;v=b[i+8+3>>0]|0;s=v<<24>>24<0;r=s?f[i>>2]|0:i;v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,r,r+((s?f[i+4>>2]|0:v&255)<<2)|0)|0;f[c>>2]=v;v=28;break}case 101:case 100:{JS(h+12|0,c,f[d>>2]|0,g,l);v=28;break}case 68:{v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,16660,16692)|0;f[c>>2]=v;v=28;break}case 70:{v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,16692,16724)|0;f[c>>2]=v;v=28;break}case 72:{xT(n,c,f[d>>2]|0,g,l);v=28;break}case 73:{oS(n,c,f[d>>2]|0,g,l);v=28;break}case 106:{KS(h+28|0,c,f[d>>2]|0,g,l);v=28;break}case 109:{US(m,c,f[d>>2]|0,g,l);v=28;break}case 77:{nT(h+4|0,c,f[d>>2]|0,g,l);v=28;break}case 116:case 110:{ol(c,f[d>>2]|0,g,l);v=28;break}case 112:{ky(a,n,c,f[d>>2]|0,g,l);v=28;break}case 114:{v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,16724,16768)|0;f[c>>2]=v;v=28;break}case 82:{v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,16768,16788)|0;f[c>>2]=v;v=28;break}case 83:{mT(h,c,f[d>>2]|0,g,l);v=28;break}case 84:{v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,16788,16820)|0;f[c>>2]=v;v=28;break}case 119:{lT(p,c,f[d>>2]|0,g,l);v=28;break}case 120:{i=f[(f[a>>2]|0)+20>>2]|0;f[r>>2]=f[c>>2];f[s>>2]=f[d>>2];f[j>>2]=f[r>>2];f[k>>2]=f[s>>2];j=Nb[i&63](a,j,k,e,g,h)|0;break}case 88:{i=Ob[f[(f[q>>2]|0)+24>>2]&255](q)|0;v=b[i+8+3>>0]|0;s=v<<24>>24<0;r=s?f[i>>2]|0:i;v=bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,r,r+((s?f[i+4>>2]|0:v&255)<<2)|0)|0;f[c>>2]=v;v=28;break}case 121:{CQ(o,c,f[d>>2]|0,g,l);v=28;break}case 89:{wX(o,c,f[d>>2]|0,g,l);v=28;break}case 37:{Gk(c,f[d>>2]|0,g,l);v=28;break}default:{f[g>>2]=f[g>>2]|4;v=28}}while(0);if((v|0)==28)j=f[c>>2]|0;u=t;return j|0}
function nc(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0;z=u;u=u+128|0;g=z+116|0;i=z+112|0;t=z+108|0;q=z+104|0;r=z+100|0;v=z+88|0;e=z+84|0;w=z+72|0;s=z+64|0;x=z+44|0;j=z+20|0;k=z+8|0;l=z+56|0;m=z+40|0;n=z+16|0;o=z+4|0;p=z;f[i>>2]=a;f[t>>2]=0;f[q>>2]=t;f[r>>2]=t;f[v>>2]=0;f[v+4>>2]=0;f[v+8>>2]=0;f[e>>2]=0;gua(w);yBa(s);f[x>>2]=0;d=x+4|0;f[d>>2]=0;f[x+8>>2]=0;f[j>>2]=v;f[j+4>>2]=w;f[j+8>>2]=e;f[j+12>>2]=x;f[j+16>>2]=s;f[k>>2]=v;f[k+4>>2]=w;e=x+8|0;y=0;ja(497,x|0,i|0);c=y;y=0;a:do if(!(c&1)){b:while(1){c=f[d>>2]|0;b=c;if((c|0)==(f[x>>2]|0)){a=188;break}c=f[b+-4>>2]|0;f[i>>2]=c;a=0;while(1){if((a|0)==-1)break;A=a+-1|0;f[d>>2]=b+(A<<2);a=A}a=c;if(!c)continue;if((a|0)==(s|0)){y=0;ia(368,k|0);A=y;y=0;if(A&1)break a;else continue}ira(f[q>>2]|0,f[a>>2]|0);ira(f[q>>2]|0,f[(f[i>>2]|0)+4>>2]|0);a=f[i>>2]|0;do switch(f[a>>2]|0){case 23:case 22:continue b;case 1:{y=0;a=la(160,a|0)|0;A=y;y=0;if(A&1)break a;f[l>>2]=f[a+8>>2];y=0;f[g>>2]=f[l>>2];ja(1468,j|0,g|0);A=y;y=0;if(A&1)break a;y=0;a=la(160,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;c=gKa(f[a+16>>2]|0)|0;ira(f[q>>2]|0,c);c=0;while(1){y=0;a=la(160,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;if(c>>>0>=(gKa(f[a+16>>2]|0)|0)>>>0)continue b;y=0;a=la(160,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(64,a+12|0,c|0)|0;A=y;y=0;if(A&1)break a;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}c=c+1|0}}case 2:{y=0;a=la(169,a|0)|0;A=y;y=0;if(A&1)break a;a=a+8|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(169,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(169,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+16|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 3:{y=0;a=la(176,a|0)|0;A=y;y=0;if(A&1)break a;f[m>>2]=f[a+8>>2];y=0;f[g>>2]=f[m>>2];ja(1468,j|0,g|0);A=y;y=0;if(A&1)break a;y=0;a=la(176,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 4:{y=0;a=la(165,a|0)|0;A=y;y=0;if(A&1)break a;f[n>>2]=f[a+8>>2];f[g>>2]=f[n>>2];xM(w,r,q,g);y=0;a=la(165,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+16|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(165,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 5:{y=0;a=la(177,a|0)|0;A=y;y=0;if(A&1)break a;b=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,b);b=0;while(1){y=0;a=la(177,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;A=b>>>0<(gKa(f[a+12>>2]|0)|0)>>>0;a=f[i>>2]|0;if(!A)break;y=0;a=la(177,a|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(89,a+8|0,b|0)|0;A=y;y=0;if(A&1)break a;f[o>>2]=f[a>>2];f[g>>2]=f[o>>2];xM(w,r,q,g);b=b+1|0}y=0;a=la(177,a|0)|0;A=y;y=0;if(A&1)break a;f[p>>2]=f[a+24>>2];f[g>>2]=f[p>>2];xM(w,r,q,g);y=0;a=la(177,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+28|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(177,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+32|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 6:{y=0;a=la(178,a|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+24>>2]|0,0);y=0;a=la(178,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;c=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,c);c=0;while(1){y=0;a=la(178,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;if(c>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(178,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(64,a+8|0,c|0)|0;A=y;y=0;if(A&1)break a;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}c=c+1|0}}case 7:{y=0;a=la(179,a|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+24>>2]|0,0);y=0;a=la(179,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;c=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,c);c=0;while(1){y=0;a=la(179,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;if(c>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(179,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(64,a+8|0,c|0)|0;A=y;y=0;if(A&1)break a;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}c=c+1|0}}case 8:{y=0;a=la(180,a|0)|0;A=y;y=0;if(A&1)break a;a=a+28|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(180,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+24>>2]|0,0);y=0;a=la(180,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;c=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,c);c=0;while(1){y=0;a=la(180,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;if(c>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(180,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(64,a+8|0,c|0)|0;A=y;y=0;if(A&1)break a;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}c=c+1|0}}case 9:{y=0;a=la(181,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);continue b}case 10:{y=0;a=la(167,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);y=0;a=la(167,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 11:{y=0;a=la(182,a|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+8>>2]|0,0);continue b}case 12:{y=0;a=la(183,a|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+8>>2]|0,0);y=0;a=la(183,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 13:{y=0;a=la(184,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,h[a+8>>0]|0);y=0;a=la(184,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,h[a+9>>0]|0);y=0;a=la(184,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,a);y=0;a=la(184,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=gKa(f[a+16>>2]|0)|0;ira(f[q>>2]|0,a);y=0;a=la(184,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+24|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 14:{y=0;a=la(185,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,h[a+8>>0]|0);y=0;a=la(185,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=gKa(f[a+12>>2]|0)|0;ira(f[q>>2]|0,a);y=0;a=la(185,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=gKa(f[a+16>>2]|0)|0;ira(f[q>>2]|0,a);y=0;a=la(185,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+32>>2]|0);y=0;a=la(185,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+24|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(185,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+28|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 15:{y=0;a=la(186,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);y=0;a=la(186,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=la(193,a+8|0)|0;b=J;A=y;y=0;if(A&1)break a;ska(t,a,b);continue b}case 16:{y=0;a=la(187,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);y=0;a=la(187,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 17:{y=0;a=la(188,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);y=0;a=la(188,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(188,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+16|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 18:{y=0;a=la(189,a|0)|0;A=y;y=0;if(A&1)break a;a=a+8|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(189,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+12|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}y=0;a=la(189,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;a=a+16|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 19:{y=0;a=la(190,a|0)|0;A=y;y=0;if(A&1)break a;a=a+8|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 20:{y=0;a=la(191,a|0)|0;A=y;y=0;if(A&1)break a;a=a+8|0;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a;else continue b}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;continue b}}case 21:{y=0;a=la(192,a|0)|0;A=y;y=0;if(A&1)break a;ira(f[q>>2]|0,f[a+8>>2]|0);y=0;a=la(192,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;ska(t,f[a+12>>2]|0,0);y=0;a=la(192,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;c=gKa(f[a+20>>2]|0)|0;ira(f[q>>2]|0,c);c=0;while(1){y=0;a=la(192,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;if(c>>>0>=(gKa(f[a+20>>2]|0)|0)>>>0)continue b;y=0;a=la(192,f[i>>2]|0)|0;A=y;y=0;if(A&1)break a;y=0;a=ua(64,a+16|0,c|0)|0;A=y;y=0;if(A&1)break a;b=f[d>>2]|0;if((b|0)==(f[e>>2]|0)){y=0;ja(497,x|0,a|0);A=y;y=0;if(A&1)break a}else{f[b>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4}c=c+1|0}}default:{a=187;break b}}while(0)}if((a|0)==187){y=0;za(6);y=0;break}else if((a|0)==188){A=f[t>>2]|0;E4(x);Aca(w);E4(v);u=z;return A|0}}while(0);A=Pa()|0;E4(x);Aca(w);E4(v);$a(A|0);return 0}function oc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;za=u;u=u+1152|0;h=za+1128|0;d=za+144|0;O=za+112|0;Z=za+64|0;ia=za+1112|0;ta=za+1096|0;xa=za+1080|0;ya=za+1064|0;i=za+1048|0;j=za+1032|0;k=za+1016|0;l=za+1e3|0;m=za+984|0;n=za+968|0;o=za+952|0;p=za+936|0;q=za+32|0;r=za;s=za+920|0;t=za+904|0;v=za+888|0;w=za+872|0;x=za+856|0;y=za+840|0;z=za+824|0;A=za+808|0;B=za+792|0;C=za+776|0;D=za+760|0;E=za+744|0;F=za+728|0;G=za+712|0;H=za+696|0;I=za+680|0;K=za+664|0;L=za+648|0;M=za+632|0;N=za+616|0;P=za+600|0;Q=za+584|0;R=za+568|0;S=za+552|0;T=za+536|0;U=za+520|0;V=za+504|0;W=za+488|0;X=za+472|0;Y=za+456|0;_=za+440|0;$=za+424|0;aa=za+408|0;ba=za+392|0;ca=za+376|0;da=za+360|0;ea=za+344|0;fa=za+328|0;ga=za+312|0;ha=za+296|0;ja=za+280|0;ka=za+264|0;la=za+248|0;ma=za+232|0;na=za+216|0;oa=za+200|0;pa=za+184|0;qa=za+168|0;ra=za+128|0;sa=za+96|0;ua=za+80|0;va=za+48|0;wa=za+16|0;e=c+12|0;NM(d,b,f[e>>2]|0);if(!(FBa(d)|0)?(f[O>>2]=f[d>>2],f[O+4>>2]=f[d+4>>2],f[O+8>>2]=f[d+8>>2],f[O+12>>2]=f[d+12>>2],g=c+16|0,NM(h,b,f[g>>2]|0),f[d>>2]=f[h>>2],f[d+4>>2]=f[h+4>>2],f[d+8>>2]=f[h+8>>2],f[d+12>>2]=f[h+12>>2],f[d+16>>2]=f[h+16>>2],!(FBa(d)|0)):0){f[Z>>2]=f[d>>2];f[Z+4>>2]=f[d+4>>2];f[Z+8>>2]=f[d+8>>2];f[Z+12>>2]=f[d+12>>2];d=f[(f[e>>2]|0)+4>>2]|0;e=(rCa(d)|0)^1;if(!((f[O>>2]|0)==(d|0)|e))Na(39555,39631,321,39654);d=f[(f[g>>2]|0)+4>>2]|0;if(rCa(d)|0?(f[Z>>2]|0)!=(d|0):0)Na(39666,39631,322,39654);d=c+8|0;a:do switch(f[O>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{hI(ia,O,Z);f[h>>2]=f[ia>>2];f[h+4>>2]=f[ia+4>>2];f[h+8>>2]=f[ia+8>>2];f[h+12>>2]=f[ia+12>>2];oda(a,h);break a}case 1:{NG(ta,O,Z);f[h>>2]=f[ta>>2];f[h+4>>2]=f[ta+4>>2];f[h+8>>2]=f[ta+8>>2];f[h+12>>2]=f[ta+12>>2];oda(a,h);break a}case 2:{_H(xa,O,Z);f[h>>2]=f[xa>>2];f[h+4>>2]=f[xa+4>>2];f[h+8>>2]=f[xa+8>>2];f[h+12>>2]=f[xa+12>>2];oda(a,h);break a}case 3:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39745);if((Y$(O)|0)==-2147483648&(J|0)==-1?(xa=Y$(Z)|0,(xa|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39760);fS(ya,O,Z);f[h>>2]=f[ya>>2];f[h+4>>2]=f[ya+4>>2];f[h+8>>2]=f[ya+8>>2];f[h+12>>2]=f[ya+12>>2];oda(a,h);break a}case 4:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39779);sR(i,O,Z);f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];f[h+12>>2]=f[i+12>>2];oda(a,h);break a}case 5:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39794);if((Y$(O)|0)==-2147483648&(J|0)==-1?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){uAa(j,0);f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];f[h+12>>2]=f[j+12>>2];oda(a,h);break a}eS(k,O,Z);f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];f[h+12>>2]=f[k+12>>2];oda(a,h);break a}case 6:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39809);rR(l,O,Z);f[h>>2]=f[l>>2];f[h+4>>2]=f[l+4>>2];f[h+8>>2]=f[l+8>>2];f[h+12>>2]=f[l+12>>2];oda(a,h);break a}case 7:{sV(m,O,Z);f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];f[h+12>>2]=f[m+12>>2];oda(a,h);break a}case 8:{wV(n,O,Z);f[h>>2]=f[n>>2];f[h+4>>2]=f[n+4>>2];f[h+8>>2]=f[n+8>>2];f[h+12>>2]=f[n+12>>2];oda(a,h);break a}case 9:{rV(o,O,Z);f[h>>2]=f[o>>2];f[h+4>>2]=f[o+4>>2];f[h+8>>2]=f[o+8>>2];f[h+12>>2]=f[o+12>>2];oda(a,h);break a}case 10:{uAa(r,31);sV(q,Z,r);iM(p,O,q);f[h>>2]=f[p>>2];f[h+4>>2]=f[p+4>>2];f[h+8>>2]=f[p+8>>2];f[h+12>>2]=f[p+12>>2];oda(a,h);break a}case 11:{uAa(r,31);sV(q,Z,r);OL(s,O,q);f[h>>2]=f[s>>2];f[h+4>>2]=f[s+4>>2];f[h+8>>2]=f[s+8>>2];f[h+12>>2]=f[s+12>>2];oda(a,h);break a}case 12:{uAa(r,31);sV(q,Z,r);eM(t,O,q);f[h>>2]=f[t>>2];f[h+4>>2]=f[t+4>>2];f[h+8>>2]=f[t+8>>2];f[h+12>>2]=f[t+12>>2];oda(a,h);break a}case 13:{UO(v,O,Z);f[h>>2]=f[v>>2];f[h+4>>2]=f[v+4>>2];f[h+8>>2]=f[v+8>>2];f[h+12>>2]=f[v+12>>2];oda(a,h);break a}case 14:{QO(w,O,Z);f[h>>2]=f[w>>2];f[h+4>>2]=f[w+4>>2];f[h+8>>2]=f[w+8>>2];f[h+12>>2]=f[w+12>>2];oda(a,h);break a}case 15:{wG(x,O,Z);f[h>>2]=f[x>>2];f[h+4>>2]=f[x+4>>2];f[h+8>>2]=f[x+8>>2];f[h+12>>2]=f[x+12>>2];oda(a,h);break a}case 16:{vG(y,O,Z);f[h>>2]=f[y>>2];f[h+4>>2]=f[y+4>>2];f[h+8>>2]=f[y+8>>2];f[h+12>>2]=f[y+12>>2];oda(a,h);break a}case 17:{lO(z,O,Z);f[h>>2]=f[z>>2];f[h+4>>2]=f[z+4>>2];f[h+8>>2]=f[z+8>>2];f[h+12>>2]=f[z+12>>2];oda(a,h);break a}case 18:{MN(A,O,Z);f[h>>2]=f[A>>2];f[h+4>>2]=f[A+4>>2];f[h+8>>2]=f[A+8>>2];f[h+12>>2]=f[A+12>>2];oda(a,h);break a}case 19:{bO(B,O,Z);f[h>>2]=f[B>>2];f[h+4>>2]=f[B+4>>2];f[h+8>>2]=f[B+8>>2];f[h+12>>2]=f[B+12>>2];oda(a,h);break a}case 20:{HN(C,O,Z);f[h>>2]=f[C>>2];f[h+4>>2]=f[C+4>>2];f[h+8>>2]=f[C+8>>2];f[h+12>>2]=f[C+12>>2];oda(a,h);break a}case 21:{mO(D,O,Z);f[h>>2]=f[D>>2];f[h+4>>2]=f[D+4>>2];f[h+8>>2]=f[D+8>>2];f[h+12>>2]=f[D+12>>2];oda(a,h);break a}case 22:{NN(E,O,Z);f[h>>2]=f[E>>2];f[h+4>>2]=f[E+4>>2];f[h+8>>2]=f[E+8>>2];f[h+12>>2]=f[E+12>>2];oda(a,h);break a}case 23:{cO(F,O,Z);f[h>>2]=f[F>>2];f[h+4>>2]=f[F+4>>2];f[h+8>>2]=f[F+8>>2];f[h+12>>2]=f[F+12>>2];oda(a,h);break a}case 24:{IN(G,O,Z);f[h>>2]=f[G>>2];f[h+4>>2]=f[G+4>>2];f[h+8>>2]=f[G+8>>2];f[h+12>>2]=f[G+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 25:{hI(H,O,Z);f[h>>2]=f[H>>2];f[h+4>>2]=f[H+4>>2];f[h+8>>2]=f[H+8>>2];f[h+12>>2]=f[H+12>>2];oda(a,h);break a}case 26:{NG(I,O,Z);f[h>>2]=f[I>>2];f[h+4>>2]=f[I+4>>2];f[h+8>>2]=f[I+8>>2];f[h+12>>2]=f[I+12>>2];oda(a,h);break a}case 27:{_H(K,O,Z);f[h>>2]=f[K>>2];f[h+4>>2]=f[K+4>>2];f[h+8>>2]=f[K+8>>2];f[h+12>>2]=f[K+12>>2];oda(a,h);break a}case 28:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39824);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39839);fS(L,O,Z);f[h>>2]=f[L>>2];f[h+4>>2]=f[L+4>>2];f[h+8>>2]=f[L+8>>2];f[h+12>>2]=f[L+12>>2];oda(a,h);break a}case 29:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39858);sR(M,O,Z);f[h>>2]=f[M>>2];f[h+4>>2]=f[M+4>>2];f[h+8>>2]=f[M+8>>2];f[h+12>>2]=f[M+12>>2];oda(a,h);break a}case 30:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39873);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){Ysa(N,0,0);f[h>>2]=f[N>>2];f[h+4>>2]=f[N+4>>2];f[h+8>>2]=f[N+8>>2];f[h+12>>2]=f[N+12>>2];oda(a,h);break a}eS(P,O,Z);f[h>>2]=f[P>>2];f[h+4>>2]=f[P+4>>2];f[h+8>>2]=f[P+8>>2];f[h+12>>2]=f[P+12>>2];oda(a,h);break a}case 31:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39888);rR(Q,O,Z);f[h>>2]=f[Q>>2];f[h+4>>2]=f[Q+4>>2];f[h+8>>2]=f[Q+8>>2];f[h+12>>2]=f[Q+12>>2];oda(a,h);break a}case 32:{sV(R,O,Z);f[h>>2]=f[R>>2];f[h+4>>2]=f[R+4>>2];f[h+8>>2]=f[R+8>>2];f[h+12>>2]=f[R+12>>2];oda(a,h);break a}case 33:{wV(S,O,Z);f[h>>2]=f[S>>2];f[h+4>>2]=f[S+4>>2];f[h+8>>2]=f[S+8>>2];f[h+12>>2]=f[S+12>>2];oda(a,h);break a}case 34:{rV(T,O,Z);f[h>>2]=f[T>>2];f[h+4>>2]=f[T+4>>2];f[h+8>>2]=f[T+8>>2];f[h+12>>2]=f[T+12>>2];oda(a,h);break a}case 35:{Ysa(r,63,0);sV(q,Z,r);iM(U,O,q);f[h>>2]=f[U>>2];f[h+4>>2]=f[U+4>>2];f[h+8>>2]=f[U+8>>2];f[h+12>>2]=f[U+12>>2];oda(a,h);break a}case 36:{Ysa(r,63,0);sV(q,Z,r);OL(V,O,q);f[h>>2]=f[V>>2];f[h+4>>2]=f[V+4>>2];f[h+8>>2]=f[V+8>>2];f[h+12>>2]=f[V+12>>2];oda(a,h);break a}case 37:{Ysa(r,63,0);sV(q,Z,r);eM(W,O,q);f[h>>2]=f[W>>2];f[h+4>>2]=f[W+4>>2];f[h+8>>2]=f[W+8>>2];f[h+12>>2]=f[W+12>>2];oda(a,h);break a}case 38:{UO(X,O,Z);f[h>>2]=f[X>>2];f[h+4>>2]=f[X+4>>2];f[h+8>>2]=f[X+8>>2];f[h+12>>2]=f[X+12>>2];oda(a,h);break a}case 39:{QO(Y,O,Z);f[h>>2]=f[Y>>2];f[h+4>>2]=f[Y+4>>2];f[h+8>>2]=f[Y+8>>2];f[h+12>>2]=f[Y+12>>2];oda(a,h);break a}case 40:{wG(_,O,Z);f[h>>2]=f[_>>2];f[h+4>>2]=f[_+4>>2];f[h+8>>2]=f[_+8>>2];f[h+12>>2]=f[_+12>>2];oda(a,h);break a}case 41:{vG($,O,Z);f[h>>2]=f[$>>2];f[h+4>>2]=f[$+4>>2];f[h+8>>2]=f[$+8>>2];f[h+12>>2]=f[$+12>>2];oda(a,h);break a}case 42:{lO(aa,O,Z);f[h>>2]=f[aa>>2];f[h+4>>2]=f[aa+4>>2];f[h+8>>2]=f[aa+8>>2];f[h+12>>2]=f[aa+12>>2];oda(a,h);break a}case 43:{MN(ba,O,Z);f[h>>2]=f[ba>>2];f[h+4>>2]=f[ba+4>>2];f[h+8>>2]=f[ba+8>>2];f[h+12>>2]=f[ba+12>>2];oda(a,h);break a}case 44:{bO(ca,O,Z);f[h>>2]=f[ca>>2];f[h+4>>2]=f[ca+4>>2];f[h+8>>2]=f[ca+8>>2];f[h+12>>2]=f[ca+12>>2];oda(a,h);break a}case 45:{HN(da,O,Z);f[h>>2]=f[da>>2];f[h+4>>2]=f[da+4>>2];f[h+8>>2]=f[da+8>>2];f[h+12>>2]=f[da+12>>2];oda(a,h);break a}case 46:{mO(ea,O,Z);f[h>>2]=f[ea>>2];f[h+4>>2]=f[ea+4>>2];f[h+8>>2]=f[ea+8>>2];f[h+12>>2]=f[ea+12>>2];oda(a,h);break a}case 47:{NN(fa,O,Z);f[h>>2]=f[fa>>2];f[h+4>>2]=f[fa+4>>2];f[h+8>>2]=f[fa+8>>2];f[h+12>>2]=f[fa+12>>2];oda(a,h);break a}case 48:{cO(ga,O,Z);f[h>>2]=f[ga>>2];f[h+4>>2]=f[ga+4>>2];f[h+8>>2]=f[ga+8>>2];f[h+12>>2]=f[ga+12>>2];oda(a,h);break a}case 49:{IN(ha,O,Z);f[h>>2]=f[ha>>2];f[h+4>>2]=f[ha+4>>2];f[h+8>>2]=f[ha+8>>2];f[h+12>>2]=f[ha+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 4:case 3:{do switch(f[d>>2]|0){case 63:case 50:{hI(ja,O,Z);f[h>>2]=f[ja>>2];f[h+4>>2]=f[ja+4>>2];f[h+8>>2]=f[ja+8>>2];f[h+12>>2]=f[ja+12>>2];oda(a,h);break a}case 64:case 51:{NG(ka,O,Z);f[h>>2]=f[ka>>2];f[h+4>>2]=f[ka+4>>2];f[h+8>>2]=f[ka+8>>2];f[h+12>>2]=f[ka+12>>2];oda(a,h);break a}case 65:case 52:{_H(la,O,Z);f[h>>2]=f[la>>2];f[h+4>>2]=f[la+4>>2];f[h+8>>2]=f[la+8>>2];f[h+12>>2]=f[la+12>>2];oda(a,h);break a}case 66:case 53:{ro(ma,O,Z);f[h>>2]=f[ma>>2];f[h+4>>2]=f[ma+4>>2];f[h+8>>2]=f[ma+8>>2];f[h+12>>2]=f[ma+12>>2];oda(a,h);break a}case 67:case 54:{RK(na,O,Z);f[h>>2]=f[na>>2];f[h+4>>2]=f[na+4>>2];f[h+8>>2]=f[na+8>>2];f[h+12>>2]=f[na+12>>2];oda(a,h);break a}case 68:case 55:{lm(oa,O,Z);f[h>>2]=f[oa>>2];f[h+4>>2]=f[oa+4>>2];f[h+8>>2]=f[oa+8>>2];f[h+12>>2]=f[oa+12>>2];oda(a,h);break a}case 69:case 56:{mm(pa,O,Z);f[h>>2]=f[pa>>2];f[h+4>>2]=f[pa+4>>2];f[h+8>>2]=f[pa+8>>2];f[h+12>>2]=f[pa+12>>2];oda(a,h);break a}case 70:case 57:{wG(qa,O,Z);f[h>>2]=f[qa>>2];f[h+4>>2]=f[qa+4>>2];f[h+8>>2]=f[qa+8>>2];f[h+12>>2]=f[qa+12>>2];oda(a,h);break a}case 71:case 58:{vG(ra,O,Z);f[h>>2]=f[ra>>2];f[h+4>>2]=f[ra+4>>2];f[h+8>>2]=f[ra+8>>2];f[h+12>>2]=f[ra+12>>2];oda(a,h);break a}case 72:case 59:{jY(sa,O,Z);f[h>>2]=f[sa>>2];f[h+4>>2]=f[sa+4>>2];f[h+8>>2]=f[sa+8>>2];f[h+12>>2]=f[sa+12>>2];oda(a,h);break a}case 73:case 60:{$X(ua,O,Z);f[h>>2]=f[ua>>2];f[h+4>>2]=f[ua+4>>2];f[h+8>>2]=f[ua+8>>2];f[h+12>>2]=f[ua+12>>2];oda(a,h);break a}case 74:case 61:{kY(va,O,Z);f[h>>2]=f[va>>2];f[h+4>>2]=f[va+4>>2];f[h+8>>2]=f[va+8>>2];f[h+12>>2]=f[va+12>>2];oda(a,h);break a}case 75:case 62:{aY(wa,O,Z);f[h>>2]=f[wa>>2];f[h+4>>2]=f[wa+4>>2];f[h+8>>2]=f[wa+8>>2];f[h+12>>2]=f[wa+12>>2];oda(a,h);break a}default:Ka()}while(0);break}default:Ka()}while(0)}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=za;return}function pc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;za=u;u=u+1152|0;h=za+1128|0;d=za+144|0;O=za+112|0;Z=za+64|0;ia=za+1112|0;ta=za+1096|0;xa=za+1080|0;ya=za+1064|0;i=za+1048|0;j=za+1032|0;k=za+1016|0;l=za+1e3|0;m=za+984|0;n=za+968|0;o=za+952|0;p=za+936|0;q=za+32|0;r=za;s=za+920|0;t=za+904|0;v=za+888|0;w=za+872|0;x=za+856|0;y=za+840|0;z=za+824|0;A=za+808|0;B=za+792|0;C=za+776|0;D=za+760|0;E=za+744|0;F=za+728|0;G=za+712|0;H=za+696|0;I=za+680|0;K=za+664|0;L=za+648|0;M=za+632|0;N=za+616|0;P=za+600|0;Q=za+584|0;R=za+568|0;S=za+552|0;T=za+536|0;U=za+520|0;V=za+504|0;W=za+488|0;X=za+472|0;Y=za+456|0;_=za+440|0;$=za+424|0;aa=za+408|0;ba=za+392|0;ca=za+376|0;da=za+360|0;ea=za+344|0;fa=za+328|0;ga=za+312|0;ha=za+296|0;ja=za+280|0;ka=za+264|0;la=za+248|0;ma=za+232|0;na=za+216|0;oa=za+200|0;pa=za+184|0;qa=za+168|0;ra=za+128|0;sa=za+96|0;ua=za+80|0;va=za+48|0;wa=za+16|0;e=c+12|0;YX(d,b,f[e>>2]|0);if(!(FBa(d)|0)?(f[O>>2]=f[d>>2],f[O+4>>2]=f[d+4>>2],f[O+8>>2]=f[d+8>>2],f[O+12>>2]=f[d+12>>2],g=c+16|0,YX(h,b,f[g>>2]|0),f[d>>2]=f[h>>2],f[d+4>>2]=f[h+4>>2],f[d+8>>2]=f[h+8>>2],f[d+12>>2]=f[h+12>>2],f[d+16>>2]=f[h+16>>2],!(FBa(d)|0)):0){f[Z>>2]=f[d>>2];f[Z+4>>2]=f[d+4>>2];f[Z+8>>2]=f[d+8>>2];f[Z+12>>2]=f[d+12>>2];d=f[(f[e>>2]|0)+4>>2]|0;e=(rCa(d)|0)^1;if(!((f[O>>2]|0)==(d|0)|e))Na(39555,39631,321,39654);d=f[(f[g>>2]|0)+4>>2]|0;if(rCa(d)|0?(f[Z>>2]|0)!=(d|0):0)Na(39666,39631,322,39654);d=c+8|0;a:do switch(f[O>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{hI(ia,O,Z);f[h>>2]=f[ia>>2];f[h+4>>2]=f[ia+4>>2];f[h+8>>2]=f[ia+8>>2];f[h+12>>2]=f[ia+12>>2];oda(a,h);break a}case 1:{NG(ta,O,Z);f[h>>2]=f[ta>>2];f[h+4>>2]=f[ta+4>>2];f[h+8>>2]=f[ta+8>>2];f[h+12>>2]=f[ta+12>>2];oda(a,h);break a}case 2:{_H(xa,O,Z);f[h>>2]=f[xa>>2];f[h+4>>2]=f[xa+4>>2];f[h+8>>2]=f[xa+8>>2];f[h+12>>2]=f[xa+12>>2];oda(a,h);break a}case 3:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39745);if((Y$(O)|0)==-2147483648&(J|0)==-1?(xa=Y$(Z)|0,(xa|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39760);fS(ya,O,Z);f[h>>2]=f[ya>>2];f[h+4>>2]=f[ya+4>>2];f[h+8>>2]=f[ya+8>>2];f[h+12>>2]=f[ya+12>>2];oda(a,h);break a}case 4:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39779);sR(i,O,Z);f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];f[h+12>>2]=f[i+12>>2];oda(a,h);break a}case 5:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39794);if((Y$(O)|0)==-2147483648&(J|0)==-1?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){uAa(j,0);f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];f[h+12>>2]=f[j+12>>2];oda(a,h);break a}eS(k,O,Z);f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];f[h+12>>2]=f[k+12>>2];oda(a,h);break a}case 6:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39809);rR(l,O,Z);f[h>>2]=f[l>>2];f[h+4>>2]=f[l+4>>2];f[h+8>>2]=f[l+8>>2];f[h+12>>2]=f[l+12>>2];oda(a,h);break a}case 7:{sV(m,O,Z);f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];f[h+12>>2]=f[m+12>>2];oda(a,h);break a}case 8:{wV(n,O,Z);f[h>>2]=f[n>>2];f[h+4>>2]=f[n+4>>2];f[h+8>>2]=f[n+8>>2];f[h+12>>2]=f[n+12>>2];oda(a,h);break a}case 9:{rV(o,O,Z);f[h>>2]=f[o>>2];f[h+4>>2]=f[o+4>>2];f[h+8>>2]=f[o+8>>2];f[h+12>>2]=f[o+12>>2];oda(a,h);break a}case 10:{uAa(r,31);sV(q,Z,r);iM(p,O,q);f[h>>2]=f[p>>2];f[h+4>>2]=f[p+4>>2];f[h+8>>2]=f[p+8>>2];f[h+12>>2]=f[p+12>>2];oda(a,h);break a}case 11:{uAa(r,31);sV(q,Z,r);OL(s,O,q);f[h>>2]=f[s>>2];f[h+4>>2]=f[s+4>>2];f[h+8>>2]=f[s+8>>2];f[h+12>>2]=f[s+12>>2];oda(a,h);break a}case 12:{uAa(r,31);sV(q,Z,r);eM(t,O,q);f[h>>2]=f[t>>2];f[h+4>>2]=f[t+4>>2];f[h+8>>2]=f[t+8>>2];f[h+12>>2]=f[t+12>>2];oda(a,h);break a}case 13:{UO(v,O,Z);f[h>>2]=f[v>>2];f[h+4>>2]=f[v+4>>2];f[h+8>>2]=f[v+8>>2];f[h+12>>2]=f[v+12>>2];oda(a,h);break a}case 14:{QO(w,O,Z);f[h>>2]=f[w>>2];f[h+4>>2]=f[w+4>>2];f[h+8>>2]=f[w+8>>2];f[h+12>>2]=f[w+12>>2];oda(a,h);break a}case 15:{wG(x,O,Z);f[h>>2]=f[x>>2];f[h+4>>2]=f[x+4>>2];f[h+8>>2]=f[x+8>>2];f[h+12>>2]=f[x+12>>2];oda(a,h);break a}case 16:{vG(y,O,Z);f[h>>2]=f[y>>2];f[h+4>>2]=f[y+4>>2];f[h+8>>2]=f[y+8>>2];f[h+12>>2]=f[y+12>>2];oda(a,h);break a}case 17:{lO(z,O,Z);f[h>>2]=f[z>>2];f[h+4>>2]=f[z+4>>2];f[h+8>>2]=f[z+8>>2];f[h+12>>2]=f[z+12>>2];oda(a,h);break a}case 18:{MN(A,O,Z);f[h>>2]=f[A>>2];f[h+4>>2]=f[A+4>>2];f[h+8>>2]=f[A+8>>2];f[h+12>>2]=f[A+12>>2];oda(a,h);break a}case 19:{bO(B,O,Z);f[h>>2]=f[B>>2];f[h+4>>2]=f[B+4>>2];f[h+8>>2]=f[B+8>>2];f[h+12>>2]=f[B+12>>2];oda(a,h);break a}case 20:{HN(C,O,Z);f[h>>2]=f[C>>2];f[h+4>>2]=f[C+4>>2];f[h+8>>2]=f[C+8>>2];f[h+12>>2]=f[C+12>>2];oda(a,h);break a}case 21:{mO(D,O,Z);f[h>>2]=f[D>>2];f[h+4>>2]=f[D+4>>2];f[h+8>>2]=f[D+8>>2];f[h+12>>2]=f[D+12>>2];oda(a,h);break a}case 22:{NN(E,O,Z);f[h>>2]=f[E>>2];f[h+4>>2]=f[E+4>>2];f[h+8>>2]=f[E+8>>2];f[h+12>>2]=f[E+12>>2];oda(a,h);break a}case 23:{cO(F,O,Z);f[h>>2]=f[F>>2];f[h+4>>2]=f[F+4>>2];f[h+8>>2]=f[F+8>>2];f[h+12>>2]=f[F+12>>2];oda(a,h);break a}case 24:{IN(G,O,Z);f[h>>2]=f[G>>2];f[h+4>>2]=f[G+4>>2];f[h+8>>2]=f[G+8>>2];f[h+12>>2]=f[G+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 25:{hI(H,O,Z);f[h>>2]=f[H>>2];f[h+4>>2]=f[H+4>>2];f[h+8>>2]=f[H+8>>2];f[h+12>>2]=f[H+12>>2];oda(a,h);break a}case 26:{NG(I,O,Z);f[h>>2]=f[I>>2];f[h+4>>2]=f[I+4>>2];f[h+8>>2]=f[I+8>>2];f[h+12>>2]=f[I+12>>2];oda(a,h);break a}case 27:{_H(K,O,Z);f[h>>2]=f[K>>2];f[h+4>>2]=f[K+4>>2];f[h+8>>2]=f[K+8>>2];f[h+12>>2]=f[K+12>>2];oda(a,h);break a}case 28:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39824);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39839);fS(L,O,Z);f[h>>2]=f[L>>2];f[h+4>>2]=f[L+4>>2];f[h+8>>2]=f[L+8>>2];f[h+12>>2]=f[L+12>>2];oda(a,h);break a}case 29:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39858);sR(M,O,Z);f[h>>2]=f[M>>2];f[h+4>>2]=f[M+4>>2];f[h+8>>2]=f[M+8>>2];f[h+12>>2]=f[M+12>>2];oda(a,h);break a}case 30:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39873);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){Ysa(N,0,0);f[h>>2]=f[N>>2];f[h+4>>2]=f[N+4>>2];f[h+8>>2]=f[N+8>>2];f[h+12>>2]=f[N+12>>2];oda(a,h);break a}eS(P,O,Z);f[h>>2]=f[P>>2];f[h+4>>2]=f[P+4>>2];f[h+8>>2]=f[P+8>>2];f[h+12>>2]=f[P+12>>2];oda(a,h);break a}case 31:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39888);rR(Q,O,Z);f[h>>2]=f[Q>>2];f[h+4>>2]=f[Q+4>>2];f[h+8>>2]=f[Q+8>>2];f[h+12>>2]=f[Q+12>>2];oda(a,h);break a}case 32:{sV(R,O,Z);f[h>>2]=f[R>>2];f[h+4>>2]=f[R+4>>2];f[h+8>>2]=f[R+8>>2];f[h+12>>2]=f[R+12>>2];oda(a,h);break a}case 33:{wV(S,O,Z);f[h>>2]=f[S>>2];f[h+4>>2]=f[S+4>>2];f[h+8>>2]=f[S+8>>2];f[h+12>>2]=f[S+12>>2];oda(a,h);break a}case 34:{rV(T,O,Z);f[h>>2]=f[T>>2];f[h+4>>2]=f[T+4>>2];f[h+8>>2]=f[T+8>>2];f[h+12>>2]=f[T+12>>2];oda(a,h);break a}case 35:{Ysa(r,63,0);sV(q,Z,r);iM(U,O,q);f[h>>2]=f[U>>2];f[h+4>>2]=f[U+4>>2];f[h+8>>2]=f[U+8>>2];f[h+12>>2]=f[U+12>>2];oda(a,h);break a}case 36:{Ysa(r,63,0);sV(q,Z,r);OL(V,O,q);f[h>>2]=f[V>>2];f[h+4>>2]=f[V+4>>2];f[h+8>>2]=f[V+8>>2];f[h+12>>2]=f[V+12>>2];oda(a,h);break a}case 37:{Ysa(r,63,0);sV(q,Z,r);eM(W,O,q);f[h>>2]=f[W>>2];f[h+4>>2]=f[W+4>>2];f[h+8>>2]=f[W+8>>2];f[h+12>>2]=f[W+12>>2];oda(a,h);break a}case 38:{UO(X,O,Z);f[h>>2]=f[X>>2];f[h+4>>2]=f[X+4>>2];f[h+8>>2]=f[X+8>>2];f[h+12>>2]=f[X+12>>2];oda(a,h);break a}case 39:{QO(Y,O,Z);f[h>>2]=f[Y>>2];f[h+4>>2]=f[Y+4>>2];f[h+8>>2]=f[Y+8>>2];f[h+12>>2]=f[Y+12>>2];oda(a,h);break a}case 40:{wG(_,O,Z);f[h>>2]=f[_>>2];f[h+4>>2]=f[_+4>>2];f[h+8>>2]=f[_+8>>2];f[h+12>>2]=f[_+12>>2];oda(a,h);break a}case 41:{vG($,O,Z);f[h>>2]=f[$>>2];f[h+4>>2]=f[$+4>>2];f[h+8>>2]=f[$+8>>2];f[h+12>>2]=f[$+12>>2];oda(a,h);break a}case 42:{lO(aa,O,Z);f[h>>2]=f[aa>>2];f[h+4>>2]=f[aa+4>>2];f[h+8>>2]=f[aa+8>>2];f[h+12>>2]=f[aa+12>>2];oda(a,h);break a}case 43:{MN(ba,O,Z);f[h>>2]=f[ba>>2];f[h+4>>2]=f[ba+4>>2];f[h+8>>2]=f[ba+8>>2];f[h+12>>2]=f[ba+12>>2];oda(a,h);break a}case 44:{bO(ca,O,Z);f[h>>2]=f[ca>>2];f[h+4>>2]=f[ca+4>>2];f[h+8>>2]=f[ca+8>>2];f[h+12>>2]=f[ca+12>>2];oda(a,h);break a}case 45:{HN(da,O,Z);f[h>>2]=f[da>>2];f[h+4>>2]=f[da+4>>2];f[h+8>>2]=f[da+8>>2];f[h+12>>2]=f[da+12>>2];oda(a,h);break a}case 46:{mO(ea,O,Z);f[h>>2]=f[ea>>2];f[h+4>>2]=f[ea+4>>2];f[h+8>>2]=f[ea+8>>2];f[h+12>>2]=f[ea+12>>2];oda(a,h);break a}case 47:{NN(fa,O,Z);f[h>>2]=f[fa>>2];f[h+4>>2]=f[fa+4>>2];f[h+8>>2]=f[fa+8>>2];f[h+12>>2]=f[fa+12>>2];oda(a,h);break a}case 48:{cO(ga,O,Z);f[h>>2]=f[ga>>2];f[h+4>>2]=f[ga+4>>2];f[h+8>>2]=f[ga+8>>2];f[h+12>>2]=f[ga+12>>2];oda(a,h);break a}case 49:{IN(ha,O,Z);f[h>>2]=f[ha>>2];f[h+4>>2]=f[ha+4>>2];f[h+8>>2]=f[ha+8>>2];f[h+12>>2]=f[ha+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 4:case 3:{do switch(f[d>>2]|0){case 63:case 50:{hI(ja,O,Z);f[h>>2]=f[ja>>2];f[h+4>>2]=f[ja+4>>2];f[h+8>>2]=f[ja+8>>2];f[h+12>>2]=f[ja+12>>2];oda(a,h);break a}case 64:case 51:{NG(ka,O,Z);f[h>>2]=f[ka>>2];f[h+4>>2]=f[ka+4>>2];f[h+8>>2]=f[ka+8>>2];f[h+12>>2]=f[ka+12>>2];oda(a,h);break a}case 65:case 52:{_H(la,O,Z);f[h>>2]=f[la>>2];f[h+4>>2]=f[la+4>>2];f[h+8>>2]=f[la+8>>2];f[h+12>>2]=f[la+12>>2];oda(a,h);break a}case 66:case 53:{ro(ma,O,Z);f[h>>2]=f[ma>>2];f[h+4>>2]=f[ma+4>>2];f[h+8>>2]=f[ma+8>>2];f[h+12>>2]=f[ma+12>>2];oda(a,h);break a}case 67:case 54:{RK(na,O,Z);f[h>>2]=f[na>>2];f[h+4>>2]=f[na+4>>2];f[h+8>>2]=f[na+8>>2];f[h+12>>2]=f[na+12>>2];oda(a,h);break a}case 68:case 55:{lm(oa,O,Z);f[h>>2]=f[oa>>2];f[h+4>>2]=f[oa+4>>2];f[h+8>>2]=f[oa+8>>2];f[h+12>>2]=f[oa+12>>2];oda(a,h);break a}case 69:case 56:{mm(pa,O,Z);f[h>>2]=f[pa>>2];f[h+4>>2]=f[pa+4>>2];f[h+8>>2]=f[pa+8>>2];f[h+12>>2]=f[pa+12>>2];oda(a,h);break a}case 70:case 57:{wG(qa,O,Z);f[h>>2]=f[qa>>2];f[h+4>>2]=f[qa+4>>2];f[h+8>>2]=f[qa+8>>2];f[h+12>>2]=f[qa+12>>2];oda(a,h);break a}case 71:case 58:{vG(ra,O,Z);f[h>>2]=f[ra>>2];f[h+4>>2]=f[ra+4>>2];f[h+8>>2]=f[ra+8>>2];f[h+12>>2]=f[ra+12>>2];oda(a,h);break a}case 72:case 59:{jY(sa,O,Z);f[h>>2]=f[sa>>2];f[h+4>>2]=f[sa+4>>2];f[h+8>>2]=f[sa+8>>2];f[h+12>>2]=f[sa+12>>2];oda(a,h);break a}case 73:case 60:{$X(ua,O,Z);f[h>>2]=f[ua>>2];f[h+4>>2]=f[ua+4>>2];f[h+8>>2]=f[ua+8>>2];f[h+12>>2]=f[ua+12>>2];oda(a,h);break a}case 74:case 61:{kY(va,O,Z);f[h>>2]=f[va>>2];f[h+4>>2]=f[va+4>>2];f[h+8>>2]=f[va+8>>2];f[h+12>>2]=f[va+12>>2];oda(a,h);break a}case 75:case 62:{aY(wa,O,Z);f[h>>2]=f[wa>>2];f[h+4>>2]=f[wa+4>>2];f[h+8>>2]=f[wa+8>>2];f[h+12>>2]=f[wa+12>>2];oda(a,h);break a}default:Ka()}while(0);break}default:Ka()}while(0)}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=za;return}function qc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;za=u;u=u+1152|0;h=za+1128|0;d=za+144|0;O=za+112|0;Z=za+64|0;ia=za+1112|0;ta=za+1096|0;xa=za+1080|0;ya=za+1064|0;i=za+1048|0;j=za+1032|0;k=za+1016|0;l=za+1e3|0;m=za+984|0;n=za+968|0;o=za+952|0;p=za+936|0;q=za+32|0;r=za;s=za+920|0;t=za+904|0;v=za+888|0;w=za+872|0;x=za+856|0;y=za+840|0;z=za+824|0;A=za+808|0;B=za+792|0;C=za+776|0;D=za+760|0;E=za+744|0;F=za+728|0;G=za+712|0;H=za+696|0;I=za+680|0;K=za+664|0;L=za+648|0;M=za+632|0;N=za+616|0;P=za+600|0;Q=za+584|0;R=za+568|0;S=za+552|0;T=za+536|0;U=za+520|0;V=za+504|0;W=za+488|0;X=za+472|0;Y=za+456|0;_=za+440|0;$=za+424|0;aa=za+408|0;ba=za+392|0;ca=za+376|0;da=za+360|0;ea=za+344|0;fa=za+328|0;ga=za+312|0;ha=za+296|0;ja=za+280|0;ka=za+264|0;la=za+248|0;ma=za+232|0;na=za+216|0;oa=za+200|0;pa=za+184|0;qa=za+168|0;ra=za+128|0;sa=za+96|0;ua=za+80|0;va=za+48|0;wa=za+16|0;e=c+12|0;Aia(d,b,f[e>>2]|0);if(!(FBa(d)|0)?(f[O>>2]=f[d>>2],f[O+4>>2]=f[d+4>>2],f[O+8>>2]=f[d+8>>2],f[O+12>>2]=f[d+12>>2],g=c+16|0,Aia(h,b,f[g>>2]|0),f[d>>2]=f[h>>2],f[d+4>>2]=f[h+4>>2],f[d+8>>2]=f[h+8>>2],f[d+12>>2]=f[h+12>>2],f[d+16>>2]=f[h+16>>2],!(FBa(d)|0)):0){f[Z>>2]=f[d>>2];f[Z+4>>2]=f[d+4>>2];f[Z+8>>2]=f[d+8>>2];f[Z+12>>2]=f[d+12>>2];d=f[(f[e>>2]|0)+4>>2]|0;e=(rCa(d)|0)^1;if(!((f[O>>2]|0)==(d|0)|e))Na(39555,39631,321,39654);d=f[(f[g>>2]|0)+4>>2]|0;if(rCa(d)|0?(f[Z>>2]|0)!=(d|0):0)Na(39666,39631,322,39654);d=c+8|0;a:do switch(f[O>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{hI(ia,O,Z);f[h>>2]=f[ia>>2];f[h+4>>2]=f[ia+4>>2];f[h+8>>2]=f[ia+8>>2];f[h+12>>2]=f[ia+12>>2];oda(a,h);break a}case 1:{NG(ta,O,Z);f[h>>2]=f[ta>>2];f[h+4>>2]=f[ta+4>>2];f[h+8>>2]=f[ta+8>>2];f[h+12>>2]=f[ta+12>>2];oda(a,h);break a}case 2:{_H(xa,O,Z);f[h>>2]=f[xa>>2];f[h+4>>2]=f[xa+4>>2];f[h+8>>2]=f[xa+8>>2];f[h+12>>2]=f[xa+12>>2];oda(a,h);break a}case 3:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39745);if((Y$(O)|0)==-2147483648&(J|0)==-1?(xa=Y$(Z)|0,(xa|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39760);fS(ya,O,Z);f[h>>2]=f[ya>>2];f[h+4>>2]=f[ya+4>>2];f[h+8>>2]=f[ya+8>>2];f[h+12>>2]=f[ya+12>>2];oda(a,h);break a}case 4:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39779);sR(i,O,Z);f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];f[h+12>>2]=f[i+12>>2];oda(a,h);break a}case 5:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39794);if((Y$(O)|0)==-2147483648&(J|0)==-1?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){uAa(j,0);f[h>>2]=f[j>>2];f[h+4>>2]=f[j+4>>2];f[h+8>>2]=f[j+8>>2];f[h+12>>2]=f[j+12>>2];oda(a,h);break a}eS(k,O,Z);f[h>>2]=f[k>>2];f[h+4>>2]=f[k+4>>2];f[h+8>>2]=f[k+8>>2];f[h+12>>2]=f[k+12>>2];oda(a,h);break a}case 6:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39809);rR(l,O,Z);f[h>>2]=f[l>>2];f[h+4>>2]=f[l+4>>2];f[h+8>>2]=f[l+8>>2];f[h+12>>2]=f[l+12>>2];oda(a,h);break a}case 7:{sV(m,O,Z);f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];f[h+12>>2]=f[m+12>>2];oda(a,h);break a}case 8:{wV(n,O,Z);f[h>>2]=f[n>>2];f[h+4>>2]=f[n+4>>2];f[h+8>>2]=f[n+8>>2];f[h+12>>2]=f[n+12>>2];oda(a,h);break a}case 9:{rV(o,O,Z);f[h>>2]=f[o>>2];f[h+4>>2]=f[o+4>>2];f[h+8>>2]=f[o+8>>2];f[h+12>>2]=f[o+12>>2];oda(a,h);break a}case 10:{uAa(r,31);sV(q,Z,r);iM(p,O,q);f[h>>2]=f[p>>2];f[h+4>>2]=f[p+4>>2];f[h+8>>2]=f[p+8>>2];f[h+12>>2]=f[p+12>>2];oda(a,h);break a}case 11:{uAa(r,31);sV(q,Z,r);OL(s,O,q);f[h>>2]=f[s>>2];f[h+4>>2]=f[s+4>>2];f[h+8>>2]=f[s+8>>2];f[h+12>>2]=f[s+12>>2];oda(a,h);break a}case 12:{uAa(r,31);sV(q,Z,r);eM(t,O,q);f[h>>2]=f[t>>2];f[h+4>>2]=f[t+4>>2];f[h+8>>2]=f[t+8>>2];f[h+12>>2]=f[t+12>>2];oda(a,h);break a}case 13:{UO(v,O,Z);f[h>>2]=f[v>>2];f[h+4>>2]=f[v+4>>2];f[h+8>>2]=f[v+8>>2];f[h+12>>2]=f[v+12>>2];oda(a,h);break a}case 14:{QO(w,O,Z);f[h>>2]=f[w>>2];f[h+4>>2]=f[w+4>>2];f[h+8>>2]=f[w+8>>2];f[h+12>>2]=f[w+12>>2];oda(a,h);break a}case 15:{wG(x,O,Z);f[h>>2]=f[x>>2];f[h+4>>2]=f[x+4>>2];f[h+8>>2]=f[x+8>>2];f[h+12>>2]=f[x+12>>2];oda(a,h);break a}case 16:{vG(y,O,Z);f[h>>2]=f[y>>2];f[h+4>>2]=f[y+4>>2];f[h+8>>2]=f[y+8>>2];f[h+12>>2]=f[y+12>>2];oda(a,h);break a}case 17:{lO(z,O,Z);f[h>>2]=f[z>>2];f[h+4>>2]=f[z+4>>2];f[h+8>>2]=f[z+8>>2];f[h+12>>2]=f[z+12>>2];oda(a,h);break a}case 18:{MN(A,O,Z);f[h>>2]=f[A>>2];f[h+4>>2]=f[A+4>>2];f[h+8>>2]=f[A+8>>2];f[h+12>>2]=f[A+12>>2];oda(a,h);break a}case 19:{bO(B,O,Z);f[h>>2]=f[B>>2];f[h+4>>2]=f[B+4>>2];f[h+8>>2]=f[B+8>>2];f[h+12>>2]=f[B+12>>2];oda(a,h);break a}case 20:{HN(C,O,Z);f[h>>2]=f[C>>2];f[h+4>>2]=f[C+4>>2];f[h+8>>2]=f[C+8>>2];f[h+12>>2]=f[C+12>>2];oda(a,h);break a}case 21:{mO(D,O,Z);f[h>>2]=f[D>>2];f[h+4>>2]=f[D+4>>2];f[h+8>>2]=f[D+8>>2];f[h+12>>2]=f[D+12>>2];oda(a,h);break a}case 22:{NN(E,O,Z);f[h>>2]=f[E>>2];f[h+4>>2]=f[E+4>>2];f[h+8>>2]=f[E+8>>2];f[h+12>>2]=f[E+12>>2];oda(a,h);break a}case 23:{cO(F,O,Z);f[h>>2]=f[F>>2];f[h+4>>2]=f[F+4>>2];f[h+8>>2]=f[F+8>>2];f[h+12>>2]=f[F+12>>2];oda(a,h);break a}case 24:{IN(G,O,Z);f[h>>2]=f[G>>2];f[h+4>>2]=f[G+4>>2];f[h+8>>2]=f[G+8>>2];f[h+12>>2]=f[G+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 25:{hI(H,O,Z);f[h>>2]=f[H>>2];f[h+4>>2]=f[H+4>>2];f[h+8>>2]=f[H+8>>2];f[h+12>>2]=f[H+12>>2];oda(a,h);break a}case 26:{NG(I,O,Z);f[h>>2]=f[I>>2];f[h+4>>2]=f[I+4>>2];f[h+8>>2]=f[I+8>>2];f[h+12>>2]=f[I+12>>2];oda(a,h);break a}case 27:{_H(K,O,Z);f[h>>2]=f[K>>2];f[h+4>>2]=f[K+4>>2];f[h+8>>2]=f[K+8>>2];f[h+12>>2]=f[K+12>>2];oda(a,h);break a}case 28:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39824);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0)Mb[f[f[b>>2]>>2]&4095](b,39839);fS(L,O,Z);f[h>>2]=f[L>>2];f[h+4>>2]=f[L+4>>2];f[h+8>>2]=f[L+8>>2];f[h+12>>2]=f[L+12>>2];oda(a,h);break a}case 29:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39858);sR(M,O,Z);f[h>>2]=f[M>>2];f[h+4>>2]=f[M+4>>2];f[h+8>>2]=f[M+8>>2];f[h+12>>2]=f[M+12>>2];oda(a,h);break a}case 30:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39873);if((Y$(O)|0)==0&(J|0)==-2147483648?(ya=Y$(Z)|0,(ya|0)==-1&(J|0)==-1):0){Ysa(N,0,0);f[h>>2]=f[N>>2];f[h+4>>2]=f[N+4>>2];f[h+8>>2]=f[N+8>>2];f[h+12>>2]=f[N+12>>2];oda(a,h);break a}eS(P,O,Z);f[h>>2]=f[P>>2];f[h+4>>2]=f[P+4>>2];f[h+8>>2]=f[P+8>>2];f[h+12>>2]=f[P+12>>2];oda(a,h);break a}case 31:{if((Y$(Z)|0)==0&(J|0)==0)Mb[f[f[b>>2]>>2]&4095](b,39888);rR(Q,O,Z);f[h>>2]=f[Q>>2];f[h+4>>2]=f[Q+4>>2];f[h+8>>2]=f[Q+8>>2];f[h+12>>2]=f[Q+12>>2];oda(a,h);break a}case 32:{sV(R,O,Z);f[h>>2]=f[R>>2];f[h+4>>2]=f[R+4>>2];f[h+8>>2]=f[R+8>>2];f[h+12>>2]=f[R+12>>2];oda(a,h);break a}case 33:{wV(S,O,Z);f[h>>2]=f[S>>2];f[h+4>>2]=f[S+4>>2];f[h+8>>2]=f[S+8>>2];f[h+12>>2]=f[S+12>>2];oda(a,h);break a}case 34:{rV(T,O,Z);f[h>>2]=f[T>>2];f[h+4>>2]=f[T+4>>2];f[h+8>>2]=f[T+8>>2];f[h+12>>2]=f[T+12>>2];oda(a,h);break a}case 35:{Ysa(r,63,0);sV(q,Z,r);iM(U,O,q);f[h>>2]=f[U>>2];f[h+4>>2]=f[U+4>>2];f[h+8>>2]=f[U+8>>2];f[h+12>>2]=f[U+12>>2];oda(a,h);break a}case 36:{Ysa(r,63,0);sV(q,Z,r);OL(V,O,q);f[h>>2]=f[V>>2];f[h+4>>2]=f[V+4>>2];f[h+8>>2]=f[V+8>>2];f[h+12>>2]=f[V+12>>2];oda(a,h);break a}case 37:{Ysa(r,63,0);sV(q,Z,r);eM(W,O,q);f[h>>2]=f[W>>2];f[h+4>>2]=f[W+4>>2];f[h+8>>2]=f[W+8>>2];f[h+12>>2]=f[W+12>>2];oda(a,h);break a}case 38:{UO(X,O,Z);f[h>>2]=f[X>>2];f[h+4>>2]=f[X+4>>2];f[h+8>>2]=f[X+8>>2];f[h+12>>2]=f[X+12>>2];oda(a,h);break a}case 39:{QO(Y,O,Z);f[h>>2]=f[Y>>2];f[h+4>>2]=f[Y+4>>2];f[h+8>>2]=f[Y+8>>2];f[h+12>>2]=f[Y+12>>2];oda(a,h);break a}case 40:{wG(_,O,Z);f[h>>2]=f[_>>2];f[h+4>>2]=f[_+4>>2];f[h+8>>2]=f[_+8>>2];f[h+12>>2]=f[_+12>>2];oda(a,h);break a}case 41:{vG($,O,Z);f[h>>2]=f[$>>2];f[h+4>>2]=f[$+4>>2];f[h+8>>2]=f[$+8>>2];f[h+12>>2]=f[$+12>>2];oda(a,h);break a}case 42:{lO(aa,O,Z);f[h>>2]=f[aa>>2];f[h+4>>2]=f[aa+4>>2];f[h+8>>2]=f[aa+8>>2];f[h+12>>2]=f[aa+12>>2];oda(a,h);break a}case 43:{MN(ba,O,Z);f[h>>2]=f[ba>>2];f[h+4>>2]=f[ba+4>>2];f[h+8>>2]=f[ba+8>>2];f[h+12>>2]=f[ba+12>>2];oda(a,h);break a}case 44:{bO(ca,O,Z);f[h>>2]=f[ca>>2];f[h+4>>2]=f[ca+4>>2];f[h+8>>2]=f[ca+8>>2];f[h+12>>2]=f[ca+12>>2];oda(a,h);break a}case 45:{HN(da,O,Z);f[h>>2]=f[da>>2];f[h+4>>2]=f[da+4>>2];f[h+8>>2]=f[da+8>>2];f[h+12>>2]=f[da+12>>2];oda(a,h);break a}case 46:{mO(ea,O,Z);f[h>>2]=f[ea>>2];f[h+4>>2]=f[ea+4>>2];f[h+8>>2]=f[ea+8>>2];f[h+12>>2]=f[ea+12>>2];oda(a,h);break a}case 47:{NN(fa,O,Z);f[h>>2]=f[fa>>2];f[h+4>>2]=f[fa+4>>2];f[h+8>>2]=f[fa+8>>2];f[h+12>>2]=f[fa+12>>2];oda(a,h);break a}case 48:{cO(ga,O,Z);f[h>>2]=f[ga>>2];f[h+4>>2]=f[ga+4>>2];f[h+8>>2]=f[ga+8>>2];f[h+12>>2]=f[ga+12>>2];oda(a,h);break a}case 49:{IN(ha,O,Z);f[h>>2]=f[ha>>2];f[h+4>>2]=f[ha+4>>2];f[h+8>>2]=f[ha+8>>2];f[h+12>>2]=f[ha+12>>2];oda(a,h);break a}default:Ka()}while(0);break}case 4:case 3:{do switch(f[d>>2]|0){case 63:case 50:{hI(ja,O,Z);f[h>>2]=f[ja>>2];f[h+4>>2]=f[ja+4>>2];f[h+8>>2]=f[ja+8>>2];f[h+12>>2]=f[ja+12>>2];oda(a,h);break a}case 64:case 51:{NG(ka,O,Z);f[h>>2]=f[ka>>2];f[h+4>>2]=f[ka+4>>2];f[h+8>>2]=f[ka+8>>2];f[h+12>>2]=f[ka+12>>2];oda(a,h);break a}case 65:case 52:{_H(la,O,Z);f[h>>2]=f[la>>2];f[h+4>>2]=f[la+4>>2];f[h+8>>2]=f[la+8>>2];f[h+12>>2]=f[la+12>>2];oda(a,h);break a}case 66:case 53:{ro(ma,O,Z);f[h>>2]=f[ma>>2];f[h+4>>2]=f[ma+4>>2];f[h+8>>2]=f[ma+8>>2];f[h+12>>2]=f[ma+12>>2];oda(a,h);break a}case 67:case 54:{RK(na,O,Z);f[h>>2]=f[na>>2];f[h+4>>2]=f[na+4>>2];f[h+8>>2]=f[na+8>>2];f[h+12>>2]=f[na+12>>2];oda(a,h);break a}case 68:case 55:{lm(oa,O,Z);f[h>>2]=f[oa>>2];f[h+4>>2]=f[oa+4>>2];f[h+8>>2]=f[oa+8>>2];f[h+12>>2]=f[oa+12>>2];oda(a,h);break a}case 69:case 56:{mm(pa,O,Z);f[h>>2]=f[pa>>2];f[h+4>>2]=f[pa+4>>2];f[h+8>>2]=f[pa+8>>2];f[h+12>>2]=f[pa+12>>2];oda(a,h);break a}case 70:case 57:{wG(qa,O,Z);f[h>>2]=f[qa>>2];f[h+4>>2]=f[qa+4>>2];f[h+8>>2]=f[qa+8>>2];f[h+12>>2]=f[qa+12>>2];oda(a,h);break a}case 71:case 58:{vG(ra,O,Z);f[h>>2]=f[ra>>2];f[h+4>>2]=f[ra+4>>2];f[h+8>>2]=f[ra+8>>2];f[h+12>>2]=f[ra+12>>2];oda(a,h);break a}case 72:case 59:{jY(sa,O,Z);f[h>>2]=f[sa>>2];f[h+4>>2]=f[sa+4>>2];f[h+8>>2]=f[sa+8>>2];f[h+12>>2]=f[sa+12>>2];oda(a,h);break a}case 73:case 60:{$X(ua,O,Z);f[h>>2]=f[ua>>2];f[h+4>>2]=f[ua+4>>2];f[h+8>>2]=f[ua+8>>2];f[h+12>>2]=f[ua+12>>2];oda(a,h);break a}case 74:case 61:{kY(va,O,Z);f[h>>2]=f[va>>2];f[h+4>>2]=f[va+4>>2];f[h+8>>2]=f[va+8>>2];f[h+12>>2]=f[va+12>>2];oda(a,h);break a}case 75:case 62:{aY(wa,O,Z);f[h>>2]=f[wa>>2];f[h+4>>2]=f[wa+4>>2];f[h+8>>2]=f[wa+8>>2];f[h+12>>2]=f[wa+12>>2];oda(a,h);break a}default:Ka()}while(0);break}default:Ka()}while(0)}else{f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}u=za;return}function rc(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;x=u;u=u+16|0;n=x;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=f[18973]|0;c=m>>>a;if(c&3|0){b=(c&1^1)+a|0;a=75932+(b<<1<<2)|0;c=a+8|0;d=f[c>>2]|0;e=d+8|0;g=f[e>>2]|0;if((a|0)==(g|0))f[18973]=m&~(1<<b);else{f[g+12>>2]=a;f[c>>2]=g}w=b<<3;f[d+4>>2]=w|3;w=d+w+4|0;f[w>>2]=f[w>>2]|1;w=e;u=x;return w|0}l=f[18975]|0;if(k>>>0>l>>>0){if(c|0){b=2<<a;b=c<<a&(b|0-b);b=(b&0-b)+-1|0;h=b>>>12&16;b=b>>>h;c=b>>>5&8;b=b>>>c;e=b>>>2&4;b=b>>>e;a=b>>>1&2;b=b>>>a;d=b>>>1&1;d=(c|h|e|a|d)+(b>>>d)|0;b=75932+(d<<1<<2)|0;a=b+8|0;e=f[a>>2]|0;h=e+8|0;c=f[h>>2]|0;if((b|0)==(c|0)){a=m&~(1<<d);f[18973]=a}else{f[c+12>>2]=b;f[a>>2]=c;a=m}g=(d<<3)-k|0;f[e+4>>2]=k|3;d=e+k|0;f[d+4>>2]=g|1;f[d+g>>2]=g;if(l|0){e=f[18978]|0;b=l>>>3;c=75932+(b<<1<<2)|0;b=1<<b;if(!(a&b)){f[18973]=a|b;b=c;a=c+8|0}else{a=c+8|0;b=f[a>>2]|0}f[a>>2]=e;f[b+12>>2]=e;f[e+8>>2]=b;f[e+12>>2]=c}f[18975]=g;f[18978]=d;w=h;u=x;return w|0}i=f[18974]|0;if(i){c=(i&0-i)+-1|0;h=c>>>12&16;c=c>>>h;g=c>>>5&8;c=c>>>g;j=c>>>2&4;c=c>>>j;d=c>>>1&2;c=c>>>d;a=c>>>1&1;a=f[76196+((g|h|j|d|a)+(c>>>a)<<2)>>2]|0;c=(f[a+4>>2]&-8)-k|0;d=f[a+16+(((f[a+16>>2]|0)==0&1)<<2)>>2]|0;if(!d){j=a;g=c}else{do{h=(f[d+4>>2]&-8)-k|0;j=h>>>0<c>>>0;c=j?h:c;a=j?d:a;d=f[d+16+(((f[d+16>>2]|0)==0&1)<<2)>>2]|0}while((d|0)!=0);j=a;g=c}h=j+k|0;if(j>>>0<h>>>0){e=f[j+24>>2]|0;b=f[j+12>>2]|0;do if((b|0)==(j|0)){a=j+20|0;b=f[a>>2]|0;if(!b){a=j+16|0;b=f[a>>2]|0;if(!b){c=0;break}}while(1){c=b+20|0;d=f[c>>2]|0;if(d|0){b=d;a=c;continue}c=b+16|0;d=f[c>>2]|0;if(!d)break;else{b=d;a=c}}f[a>>2]=0;c=b}else{c=f[j+8>>2]|0;f[c+12>>2]=b;f[b+8>>2]=c;c=b}while(0);do if(e|0){b=f[j+28>>2]|0;a=76196+(b<<2)|0;if((j|0)==(f[a>>2]|0)){f[a>>2]=c;if(!c){f[18974]=i&~(1<<b);break}}else{f[e+16+(((f[e+16>>2]|0)!=(j|0)&1)<<2)>>2]=c;if(!c)break}f[c+24>>2]=e;b=f[j+16>>2]|0;if(b|0){f[c+16>>2]=b;f[b+24>>2]=c}b=f[j+20>>2]|0;if(b|0){f[c+20>>2]=b;f[b+24>>2]=c}}while(0);if(g>>>0<16){w=g+k|0;f[j+4>>2]=w|3;w=j+w+4|0;f[w>>2]=f[w>>2]|1}else{f[j+4>>2]=k|3;f[h+4>>2]=g|1;f[h+g>>2]=g;if(l|0){d=f[18978]|0;b=l>>>3;c=75932+(b<<1<<2)|0;b=1<<b;if(!(m&b)){f[18973]=m|b;b=c;a=c+8|0}else{a=c+8|0;b=f[a>>2]|0}f[a>>2]=d;f[b+12>>2]=d;f[d+8>>2]=b;f[d+12>>2]=c}f[18975]=g;f[18978]=h}w=j+8|0;u=x;return w|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;j=f[18974]|0;if(j){d=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)i=31;else{m=(a+1048320|0)>>>16&8;v=a<<m;l=(v+520192|0)>>>16&4;v=v<<l;i=(v+245760|0)>>>16&2;i=14-(l|m|i)+(v<<i>>>15)|0;i=k>>>(i+7|0)&1|i<<1}else i=0;c=f[76196+(i<<2)>>2]|0;a:do if(!c){c=0;a=0;v=57}else{a=0;h=k<<((i|0)==31?0:25-(i>>>1)|0);g=0;while(1){e=(f[c+4>>2]&-8)-k|0;if(e>>>0<d>>>0)if(!e){a=c;d=0;e=c;v=61;break a}else{a=c;d=e}e=f[c+20>>2]|0;c=f[c+16+(h>>>31<<2)>>2]|0;g=(e|0)==0|(e|0)==(c|0)?g:e;e=(c|0)==0;if(e){c=g;v=57;break}else h=h<<((e^1)&1)}}while(0);if((v|0)==57){if((c|0)==0&(a|0)==0){a=2<<i;a=j&(a|0-a);if(!a){m=k;break}m=(a&0-a)+-1|0;h=m>>>12&16;m=m>>>h;g=m>>>5&8;m=m>>>g;i=m>>>2&4;m=m>>>i;l=m>>>1&2;m=m>>>l;c=m>>>1&1;a=0;c=f[76196+((g|h|i|l|c)+(m>>>c)<<2)>>2]|0}if(!c){i=a;h=d}else{e=c;v=61}}if((v|0)==61)while(1){v=0;c=(f[e+4>>2]&-8)-k|0;m=c>>>0<d>>>0;c=m?c:d;a=m?e:a;e=f[e+16+(((f[e+16>>2]|0)==0&1)<<2)>>2]|0;if(!e){i=a;h=c;break}else{d=c;v=61}}if((i|0)!=0?h>>>0<((f[18975]|0)-k|0)>>>0:0){g=i+k|0;if(i>>>0>=g>>>0){w=0;u=x;return w|0}e=f[i+24>>2]|0;b=f[i+12>>2]|0;do if((b|0)==(i|0)){a=i+20|0;b=f[a>>2]|0;if(!b){a=i+16|0;b=f[a>>2]|0;if(!b){b=0;break}}while(1){c=b+20|0;d=f[c>>2]|0;if(d|0){b=d;a=c;continue}c=b+16|0;d=f[c>>2]|0;if(!d)break;else{b=d;a=c}}f[a>>2]=0}else{w=f[i+8>>2]|0;f[w+12>>2]=b;f[b+8>>2]=w}while(0);do if(e){a=f[i+28>>2]|0;c=76196+(a<<2)|0;if((i|0)==(f[c>>2]|0)){f[c>>2]=b;if(!b){d=j&~(1<<a);f[18974]=d;break}}else{f[e+16+(((f[e+16>>2]|0)!=(i|0)&1)<<2)>>2]=b;if(!b){d=j;break}}f[b+24>>2]=e;a=f[i+16>>2]|0;if(a|0){f[b+16>>2]=a;f[a+24>>2]=b}a=f[i+20>>2]|0;if(a){f[b+20>>2]=a;f[a+24>>2]=b;d=j}else d=j}else d=j;while(0);do if(h>>>0>=16){f[i+4>>2]=k|3;f[g+4>>2]=h|1;f[g+h>>2]=h;b=h>>>3;if(h>>>0<256){c=75932+(b<<1<<2)|0;a=f[18973]|0;b=1<<b;if(!(a&b)){f[18973]=a|b;b=c;a=c+8|0}else{a=c+8|0;b=f[a>>2]|0}f[a>>2]=g;f[b+12>>2]=g;f[g+8>>2]=b;f[g+12>>2]=c;break}b=h>>>8;if(b)if(h>>>0>16777215)b=31;else{v=(b+1048320|0)>>>16&8;w=b<<v;t=(w+520192|0)>>>16&4;w=w<<t;b=(w+245760|0)>>>16&2;b=14-(t|v|b)+(w<<b>>>15)|0;b=h>>>(b+7|0)&1|b<<1}else b=0;c=76196+(b<<2)|0;f[g+28>>2]=b;a=g+16|0;f[a+4>>2]=0;f[a>>2]=0;a=1<<b;if(!(d&a)){f[18974]=d|a;f[c>>2]=g;f[g+24>>2]=c;f[g+12>>2]=g;f[g+8>>2]=g;break}a=h<<((b|0)==31?0:25-(b>>>1)|0);c=f[c>>2]|0;while(1){if((f[c+4>>2]&-8|0)==(h|0)){v=97;break}d=c+16+(a>>>31<<2)|0;b=f[d>>2]|0;if(!b){v=96;break}else{a=a<<1;c=b}}if((v|0)==96){f[d>>2]=g;f[g+24>>2]=c;f[g+12>>2]=g;f[g+8>>2]=g;break}else if((v|0)==97){v=c+8|0;w=f[v>>2]|0;f[w+12>>2]=g;f[v>>2]=g;f[g+8>>2]=w;f[g+12>>2]=c;f[g+24>>2]=0;break}}else{w=h+k|0;f[i+4>>2]=w|3;w=i+w+4|0;f[w>>2]=f[w>>2]|1}while(0);w=i+8|0;u=x;return w|0}else m=k}else m=k}else m=-1;while(0);c=f[18975]|0;if(c>>>0>=m>>>0){b=c-m|0;a=f[18978]|0;if(b>>>0>15){w=a+m|0;f[18978]=w;f[18975]=b;f[w+4>>2]=b|1;f[w+b>>2]=b;f[a+4>>2]=m|3}else{f[18975]=0;f[18978]=0;f[a+4>>2]=c|3;w=a+c+4|0;f[w>>2]=f[w>>2]|1}w=a+8|0;u=x;return w|0}h=f[18976]|0;if(h>>>0>m>>>0){t=h-m|0;f[18976]=t;w=f[18979]|0;v=w+m|0;f[18979]=v;f[v+4>>2]=t|1;f[w+4>>2]=m|3;w=w+8|0;u=x;return w|0}if(!(f[19091]|0)){f[19093]=4096;f[19092]=4096;f[19094]=-1;f[19095]=-1;f[19096]=0;f[19084]=0;a=n&-16^1431655768;f[n>>2]=a;f[19091]=a;a=4096}else a=f[19093]|0;i=m+48|0;j=m+47|0;g=a+j|0;e=0-a|0;k=g&e;if(k>>>0<=m>>>0){w=0;u=x;return w|0}a=f[19083]|0;if(a|0?(l=f[19081]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){w=0;u=x;return w|0}b:do if(!(f[19084]&4)){c=f[18979]|0;c:do if(c){d=76340;while(1){a=f[d>>2]|0;if(a>>>0<=c>>>0?(q=d+4|0,(a+(f[q>>2]|0)|0)>>>0>c>>>0):0)break;a=f[d+8>>2]|0;if(!a){v=118;break c}else d=a}b=g-h&e;if(b>>>0<2147483647){a=PV(b|0)|0;if((a|0)==((f[d>>2]|0)+(f[q>>2]|0)|0)){if((a|0)!=(-1|0)){h=b;g=a;v=135;break b}}else{d=a;v=126}}else b=0}else v=118;while(0);do if((v|0)==118){c=PV(0)|0;if((c|0)!=(-1|0)?(b=c,o=f[19092]|0,p=o+-1|0,b=((p&b|0)==0?0:(p+b&0-o)-b|0)+k|0,o=f[19081]|0,p=b+o|0,b>>>0>m>>>0&b>>>0<2147483647):0){q=f[19083]|0;if(q|0?p>>>0<=o>>>0|p>>>0>q>>>0:0){b=0;break}a=PV(b|0)|0;if((a|0)==(c|0)){h=b;g=c;v=135;break b}else{d=a;v=126}}else b=0}while(0);do if((v|0)==126){c=0-b|0;if(!(i>>>0>b>>>0&(b>>>0<2147483647&(d|0)!=(-1|0))))if((d|0)==(-1|0)){b=0;break}else{h=b;g=d;v=135;break b}a=f[19093]|0;a=j-b+a&0-a;if(a>>>0>=2147483647){h=b;g=d;v=135;break b}if((PV(a|0)|0)==(-1|0)){PV(c|0)|0;b=0;break}else{h=a+b|0;g=d;v=135;break b}}while(0);f[19084]=f[19084]|4;v=133}else{b=0;v=133}while(0);if(((v|0)==133?k>>>0<2147483647:0)?(t=PV(k|0)|0,q=PV(0)|0,r=q-t|0,s=r>>>0>(m+40|0)>>>0,!((t|0)==(-1|0)|s^1|t>>>0<q>>>0&((t|0)!=(-1|0)&(q|0)!=(-1|0))^1)):0){h=s?r:b;g=t;v=135}if((v|0)==135){b=(f[19081]|0)+h|0;f[19081]=b;if(b>>>0>(f[19082]|0)>>>0)f[19082]=b;j=f[18979]|0;do if(j){b=76340;while(1){a=f[b>>2]|0;c=b+4|0;d=f[c>>2]|0;if((g|0)==(a+d|0)){v=145;break}e=f[b+8>>2]|0;if(!e)break;else b=e}if(((v|0)==145?(f[b+12>>2]&8|0)==0:0)?j>>>0<g>>>0&j>>>0>=a>>>0:0){f[c>>2]=d+h;w=j+8|0;w=(w&7|0)==0?0:0-w&7;v=j+w|0;w=(f[18976]|0)+(h-w)|0;f[18979]=v;f[18976]=w;f[v+4>>2]=w|1;f[v+w+4>>2]=40;f[18980]=f[19095];break}if(g>>>0<(f[18977]|0)>>>0)f[18977]=g;c=g+h|0;b=76340;while(1){if((f[b>>2]|0)==(c|0)){v=153;break}a=f[b+8>>2]|0;if(!a)break;else b=a}if((v|0)==153?(f[b+12>>2]&8|0)==0:0){f[b>>2]=g;l=b+4|0;f[l>>2]=(f[l>>2]|0)+h;l=g+8|0;l=g+((l&7|0)==0?0:0-l&7)|0;b=c+8|0;b=c+((b&7|0)==0?0:0-b&7)|0;k=l+m|0;i=b-l-m|0;f[l+4>>2]=m|3;do if((b|0)!=(j|0)){if((b|0)==(f[18978]|0)){w=(f[18975]|0)+i|0;f[18975]=w;f[18978]=k;f[k+4>>2]=w|1;f[k+w>>2]=w;break}a=f[b+4>>2]|0;if((a&3|0)==1){h=a&-8;d=a>>>3;d:do if(a>>>0<256){a=f[b+8>>2]|0;c=f[b+12>>2]|0;if((c|0)==(a|0)){f[18973]=f[18973]&~(1<<d);break}else{f[a+12>>2]=c;f[c+8>>2]=a;break}}else{g=f[b+24>>2]|0;a=f[b+12>>2]|0;do if((a|0)==(b|0)){d=b+16|0;c=d+4|0;a=f[c>>2]|0;if(!a){a=f[d>>2]|0;if(!a){a=0;break}else c=d}while(1){d=a+20|0;e=f[d>>2]|0;if(e|0){a=e;c=d;continue}d=a+16|0;e=f[d>>2]|0;if(!e)break;else{a=e;c=d}}f[c>>2]=0}else{w=f[b+8>>2]|0;f[w+12>>2]=a;f[a+8>>2]=w}while(0);if(!g)break;c=f[b+28>>2]|0;d=76196+(c<<2)|0;do if((b|0)!=(f[d>>2]|0)){f[g+16+(((f[g+16>>2]|0)!=(b|0)&1)<<2)>>2]=a;if(!a)break d}else{f[d>>2]=a;if(a|0)break;f[18974]=f[18974]&~(1<<c);break d}while(0);f[a+24>>2]=g;c=b+16|0;d=f[c>>2]|0;if(d|0){f[a+16>>2]=d;f[d+24>>2]=a}c=f[c+4>>2]|0;if(!c)break;f[a+20>>2]=c;f[c+24>>2]=a}while(0);b=b+h|0;e=h+i|0}else e=i;b=b+4|0;f[b>>2]=f[b>>2]&-2;f[k+4>>2]=e|1;f[k+e>>2]=e;b=e>>>3;if(e>>>0<256){c=75932+(b<<1<<2)|0;a=f[18973]|0;b=1<<b;if(!(a&b)){f[18973]=a|b;b=c;a=c+8|0}else{a=c+8|0;b=f[a>>2]|0}f[a>>2]=k;f[b+12>>2]=k;f[k+8>>2]=b;f[k+12>>2]=c;break}b=e>>>8;do if(!b)b=0;else{if(e>>>0>16777215){b=31;break}v=(b+1048320|0)>>>16&8;w=b<<v;t=(w+520192|0)>>>16&4;w=w<<t;b=(w+245760|0)>>>16&2;b=14-(t|v|b)+(w<<b>>>15)|0;b=e>>>(b+7|0)&1|b<<1}while(0);d=76196+(b<<2)|0;f[k+28>>2]=b;a=k+16|0;f[a+4>>2]=0;f[a>>2]=0;a=f[18974]|0;c=1<<b;if(!(a&c)){f[18974]=a|c;f[d>>2]=k;f[k+24>>2]=d;f[k+12>>2]=k;f[k+8>>2]=k;break}a=e<<((b|0)==31?0:25-(b>>>1)|0);c=f[d>>2]|0;while(1){if((f[c+4>>2]&-8|0)==(e|0)){v=194;break}d=c+16+(a>>>31<<2)|0;b=f[d>>2]|0;if(!b){v=193;break}else{a=a<<1;c=b}}if((v|0)==193){f[d>>2]=k;f[k+24>>2]=c;f[k+12>>2]=k;f[k+8>>2]=k;break}else if((v|0)==194){v=c+8|0;w=f[v>>2]|0;f[w+12>>2]=k;f[v>>2]=k;f[k+8>>2]=w;f[k+12>>2]=c;f[k+24>>2]=0;break}}else{w=(f[18976]|0)+i|0;f[18976]=w;f[18979]=k;f[k+4>>2]=w|1}while(0);w=l+8|0;u=x;return w|0}b=76340;while(1){a=f[b>>2]|0;if(a>>>0<=j>>>0?(w=a+(f[b+4>>2]|0)|0,w>>>0>j>>>0):0)break;b=f[b+8>>2]|0}e=w+-47|0;a=e+8|0;a=e+((a&7|0)==0?0:0-a&7)|0;e=j+16|0;a=a>>>0<e>>>0?j:a;b=a+8|0;c=g+8|0;c=(c&7|0)==0?0:0-c&7;v=g+c|0;c=h+-40-c|0;f[18979]=v;f[18976]=c;f[v+4>>2]=c|1;f[v+c+4>>2]=40;f[18980]=f[19095];c=a+4|0;f[c>>2]=27;f[b>>2]=f[19085];f[b+4>>2]=f[19086];f[b+8>>2]=f[19087];f[b+12>>2]=f[19088];f[19085]=g;f[19086]=h;f[19088]=0;f[19087]=b;b=a+24|0;do{v=b;b=b+4|0;f[b>>2]=7}while((v+8|0)>>>0<w>>>0);if((a|0)!=(j|0)){g=a-j|0;f[c>>2]=f[c>>2]&-2;f[j+4>>2]=g|1;f[a>>2]=g;b=g>>>3;if(g>>>0<256){c=75932+(b<<1<<2)|0;a=f[18973]|0;b=1<<b;if(!(a&b)){f[18973]=a|b;b=c;a=c+8|0}else{a=c+8|0;b=f[a>>2]|0}f[a>>2]=j;f[b+12>>2]=j;f[j+8>>2]=b;f[j+12>>2]=c;break}b=g>>>8;if(b)if(g>>>0>16777215)c=31;else{v=(b+1048320|0)>>>16&8;w=b<<v;t=(w+520192|0)>>>16&4;w=w<<t;c=(w+245760|0)>>>16&2;c=14-(t|v|c)+(w<<c>>>15)|0;c=g>>>(c+7|0)&1|c<<1}else c=0;d=76196+(c<<2)|0;f[j+28>>2]=c;f[j+20>>2]=0;f[e>>2]=0;b=f[18974]|0;a=1<<c;if(!(b&a)){f[18974]=b|a;f[d>>2]=j;f[j+24>>2]=d;f[j+12>>2]=j;f[j+8>>2]=j;break}a=g<<((c|0)==31?0:25-(c>>>1)|0);c=f[d>>2]|0;while(1){if((f[c+4>>2]&-8|0)==(g|0)){v=216;break}d=c+16+(a>>>31<<2)|0;b=f[d>>2]|0;if(!b){v=215;break}else{a=a<<1;c=b}}if((v|0)==215){f[d>>2]=j;f[j+24>>2]=c;f[j+12>>2]=j;f[j+8>>2]=j;break}else if((v|0)==216){v=c+8|0;w=f[v>>2]|0;f[w+12>>2]=j;f[v>>2]=j;f[j+8>>2]=w;f[j+12>>2]=c;f[j+24>>2]=0;break}}}else{w=f[18977]|0;if((w|0)==0|g>>>0<w>>>0)f[18977]=g;f[19085]=g;f[19086]=h;f[19088]=0;f[18982]=f[19091];f[18981]=-1;b=0;do{w=75932+(b<<1<<2)|0;f[w+12>>2]=w;f[w+8>>2]=w;b=b+1|0}while((b|0)!=32);w=g+8|0;w=(w&7|0)==0?0:0-w&7;v=g+w|0;w=h+-40-w|0;f[18979]=v;f[18976]=w;f[v+4>>2]=w|1;f[v+w+4>>2]=40;f[18980]=f[19095]}while(0);b=f[18976]|0;if(b>>>0>m>>>0){t=b-m|0;f[18976]=t;w=f[18979]|0;v=w+m|0;f[18979]=v;f[v+4>>2]=t|1;f[w+4>>2]=m|3;w=w+8|0;u=x;return w|0}}f[2619]=12;w=0;u=x;return w|0}function sc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;I=u;u=u+144|0;C=I+140|0;N=I+136|0;v=I+128|0;w=I+112|0;A=I+96|0;o=I+132|0;x=I+116|0;z=I+100|0;D=I+84|0;E=I+72|0;J=I+64|0;t=I+68|0;H=I+52|0;F=I+40|0;G=I+28|0;K=I+16|0;B=I+12|0;L=I;W8(N);y=0;e=ua(51,c|0,1)|0;s=y;y=0;a:do if(s&1)M=12;else{j=a+48|0;do if(Hra(e)|0){y=0;e=ua(51,c|0,1)|0;s=y;y=0;if(s&1){M=12;break a}if(qIa(b[e>>0]|0)|0){y=0;e=ua(51,c|0,1)|0;s=y;y=0;if(s&1){M=12;break a}y=0;e=la(203,e|0)|0;s=y;y=0;if(s&1){M=12;break a}y=0;e=la(207,e|0)|0;s=y;y=0;if(s&1){M=12;break a}if(e){M=14;break}}y=0;e=ua(51,c|0,1)|0;s=y;y=0;if(!(s&1)?(y=0,g=la(203,e|0)|0,s=y,y=0,!(s&1)):0){FCa(C,g);h=f[N>>2]|0;f[h>>2]=f[C>>2];i=2;s=N;p=h;break}e=Pa()|0;break a}else M=14;while(0);do if((M|0)==14){y=0;e=la(153,f[j>>2]|0)|0;s=y;y=0;if(s&1){e=Pa()|0;break a}else{h=f[N>>2]|0;f[h>>2]=e;i=1;s=N;p=h;break}}while(0);f[j>>2]=(f[j>>2]|0)+1;e=a+36|0;g=f[e>>2]|0;if((g|0)==(f[a+40>>2]|0)){y=0;ja(68,a+32|0,h|0);M=y;y=0;if(M&1){M=12;break}}else{f[g>>2]=f[h>>2];f[e>>2]=(f[e>>2]|0)+4}cJa(v);cJa(w);n=0;j=0;h=0;e=f[v>>2]|0;g=f[w>>2]|0;b:while(1){c:while(1){m=g;while(1){y=0;g=la(202,c|0)|0;M=y;y=0;if(M&1){M=44;break b}if(i>>>0>=g>>>0){M=74;break b}y=0;g=ua(51,c|0,i|0)|0;M=y;y=0;if(M&1){M=44;break b}if(!(fIa(b[g>>0]|0)|0)){M=74;break b}y=0;k=ua(51,c|0,i|0)|0;M=y;y=0;if(M&1){M=44;break b}y=0;g=ua(51,k|0,0)|0;M=y;y=0;if(M&1){M=47;break b}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=47;break b}l=i+1|0;if(bDa(g,f[18757]|0)|0)break;y=0;g=ua(51,k|0,0)|0;M=y;y=0;if(M&1){M=47;break b}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=47;break b}if(!(bDa(g,f[18756]|0)|0))break c;y=0;g=ua(51,k|0,1)|0;M=y;y=0;if(M&1){M=66;break b}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=66;break b}FCa(C,g);e=f[C>>2]|0;y=0;g=ua(51,k|0,2)|0;M=y;y=0;if(M&1){M=67;break b}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=67;break b}FCa(C,g);i=l;m=f[C>>2]|0}y=0;ia(383,A|0);M=y;y=0;if(M&1){M=47;break b}y=0;g=ua(51,k|0,1)|0;M=y;y=0;if(M&1){M=48;break b}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=48;break b}FCa(C,g);i=f[A>>2]|0;M=f[C>>2]|0;f[i>>2]=M;f[i+4>>2]=f[p>>2];f[i+8>>2]=3;g=f[a>>2]|0;f[o>>2]=M;y=0;f[C>>2]=f[o>>2];g=ua(140,g|0,C|0)|0;M=y;y=0;if(M&1){M=49;break b}if(g|0){M=36;break b}M=f[a>>2]|0;f[A>>2]=0;y=0;ja(69,M|0,i|0);M=y;y=0;if(M&1){M=49;break b}f[A>>2]=0;j=1;i=l;g=m}y=0;g=ua(51,k|0,0)|0;M=y;y=0;if(M&1){M=47;break}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=47;break}if(!(bDa(g,f[18736]|0)|0)){M=74;break}y=0;g=ua(51,k|0,1)|0;M=y;y=0;if(M&1){M=47;break}y=0;g=la(203,g|0)|0;M=y;y=0;if(M&1){M=47;break}y=0;h=ua(136,g|0,0)|0;M=y;y=0;if(M&1){M=47;break}else{n=1;i=l;g=m}}d:do if((M|0)==36){f[v>>2]=e;f[w>>2]=m;j=c+32|0;h=c+28|0;k=zb(20)|0;f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;i=uHa(52137)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[x+11>>0]=i;e=x}else{g=i+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=50;break}f[x>>2]=e;f[x+8>>2]=g|-2147483648;f[x+4>>2]=i}Pta(e,52137,i)|0;SBa(e+i|0,0);y=0;Ca(79,k|0,x|0,f[h>>2]|0,f[j>>2]|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,k|0,64,361);y=0;g=0}e=Pa()|0;zta(x);if(!g){M=55;break d}}else{y=0;za(3);y=0;M=50}while(0);if((M|0)==50)e=Pa()|0;Oa(k|0);M=55}else if((M|0)==44){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L;M=46}else if((M|0)==47){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L}else if((M|0)==48){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L;M=55}else if((M|0)==49){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L;M=55}else if((M|0)==66){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L}else if((M|0)==67){L=Pa()|0;f[v>>2]=e;f[w>>2]=m;e=L}else if((M|0)==74){f[v>>2]=e;f[w>>2]=m;k=c+32|0;l=c+28|0;if(n&j){i=zb(20)|0;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;h=uHa(52210)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[z+11>>0]=h;e=z}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=83;break}f[z>>2]=e;f[z+8>>2]=g|-2147483648;f[z+4>>2]=h}Pta(e,52210,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,z|0,f[l>>2]|0,f[k>>2]|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(z);if(!g)break d}else{y=0;za(3);y=0;M=83}while(0);if((M|0)==83)e=Pa()|0;Oa(i|0);break}if(!h){g=i+1|0;y=0;e=ua(51,c|0,i|0)|0;A=y;y=0;if((!(A&1)?(y=0,q=la(203,e|0)|0,A=y,y=0,!(A&1)):0)?(y=0,r=ua(136,q|0,0)|0,A=y,y=0,!(A&1)):0){h=r;i=g;e=f[v>>2]|0;M=91}}else M=91;e:do if((M|0)==91){f:do if(pJa(e)|0){if(!d){i=zb(20)|0;f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;h=uHa(52241)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[D+11>>0]=h;e=D}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=101;break}f[D>>2]=e;f[D+8>>2]=g|-2147483648;f[D+4>>2]=h}Pta(e,52241,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,D|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(D);if(!g)break d}else{y=0;za(3);y=0;M=101}while(0);if((M|0)==101)e=Pa()|0;Oa(i|0);break d}if(n){i=zb(20)|0;f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;h=uHa(52267)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[E+11>>0]=h;e=E}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=113;break}f[E>>2]=e;f[E+8>>2]=g|-2147483648;f[E+4>>2]=h}Pta(e,52267,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,E|0,f[l>>2]|0,f[k>>2]|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(E);if(!g)break d}else{y=0;za(3);y=0;M=113}while(0);if((M|0)==113)e=Pa()|0;Oa(i|0);break d}y=0;ia(382,J|0);L=y;y=0;if(L&1)break e;g=f[J>>2]|0;L=f[p>>2]|0;f[g>>2]=L;f[g+4>>2]=f[v>>2];f[g+8>>2]=f[w>>2];f[g+12>>2]=3;f[g+20>>2]=h;e=f[a>>2]|0;f[t>>2]=L;y=0;f[C>>2]=f[t>>2];e=ua(143,e|0,C|0)|0;L=y;y=0;g:do if(L&1)M=127;else{if(!e){M=f[a>>2]|0;f[J>>2]=0;y=0;ja(1471,M|0,g|0);M=y;y=0;if(M&1){M=127;break}f[J>>2]=0;break f}i=zb(20)|0;f[H>>2]=0;f[H+4>>2]=0;f[H+8>>2]=0;h=uHa(52179)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[H+11>>0]=h;e=H}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=128;break}f[H>>2]=e;f[H+8>>2]=g|-2147483648;f[H+4>>2]=h}Pta(e,52179,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,H|0,f[l>>2]|0,f[k>>2]|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(H);if(!g)break g}else{y=0;za(3);y=0;M=128}while(0);if((M|0)==128)e=Pa()|0;Oa(i|0)}while(0);if((M|0)==127)e=Pa()|0;g=f[J>>2]|0;f[J>>2]=0;if(g|0)$Ja(g);break d}else{if(d){i=zb(20)|0;f[F>>2]=0;f[F+4>>2]=0;f[F+8>>2]=0;h=uHa(52298)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[F+11>>0]=h;e=F}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=145;break}f[F>>2]=e;f[F+8>>2]=g|-2147483648;f[F+4>>2]=h}Pta(e,52298,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,F|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(F);if(!g)break d}else{y=0;za(3);y=0;M=145}while(0);if((M|0)==145)e=Pa()|0;Oa(i|0);break d}f[(f[s>>2]|0)+4>>2]=h;y=0;e=la(202,c|0)|0;J=y;y=0;if(J&1)break e;if(i>>>0>=e>>>0){i=zb(20)|0;f[G>>2]=0;f[G+4>>2]=0;f[G+8>>2]=0;h=uHa(52323)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[G+11>>0]=h;e=G}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=161;break}f[G>>2]=e;f[G+8>>2]=g|-2147483648;f[G+4>>2]=h}Pta(e,52323,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,G|0,f[l>>2]|0,f[k>>2]|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(G);if(!g)break d}else{y=0;za(3);y=0;M=161}while(0);if((M|0)==161)e=Pa()|0;Oa(i|0);break d}y=0;e=ua(51,c|0,i|0)|0;J=y;y=0;if(J&1)break e;y=0;e=ua(145,a|0,e|0)|0;J=y;y=0;if(J&1)break e;g=f[s>>2]|0;f[g+8>>2]=e;b[g+12>>0]=n&1;y=0;e=la(202,c|0)|0;J=y;y=0;if(J&1)break e;if((i+1|0)!=(e|0)){i=zb(20)|0;f[K>>2]=0;f[K+4>>2]=0;f[K+8>>2]=0;h=uHa(52343)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[K+11>>0]=h;e=K}else{g=h+16&-16;y=0;e=la(150,g|0)|0;L=y;y=0;if(L&1){M=173;break}f[K>>2]=e;f[K+8>>2]=g|-2147483648;f[K+4>>2]=h}Pta(e,52343,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,K|0);L=y;y=0;if(L&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(K);if(!g)break d}else{y=0;za(3);y=0;M=173}while(0);if((M|0)==173)e=Pa()|0;Oa(i|0);break d}e=f[a>>2]|0;f[B>>2]=f[g>>2];y=0;f[C>>2]=f[B>>2];e=ua(97,e|0,C|0)|0;K=y;y=0;if(K&1)break e;if(!e){L=f[a>>2]|0;M=f[s>>2]|0;f[s>>2]=0;y=0;ja(1994,L|0,M|0);M=y;y=0;if(M&1)break e;else break}i=zb(20)|0;f[L>>2]=0;f[L+4>>2]=0;f[L+8>>2]=0;h=uHa(52179)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[L+11>>0]=h;e=L}else{g=h+16&-16;y=0;e=la(150,g|0)|0;K=y;y=0;if(K&1){M=186;break}f[L>>2]=e;f[L+8>>2]=g|-2147483648;f[L+4>>2]=h}Pta(e,52179,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,L|0,f[l>>2]|0,f[k>>2]|0);K=y;y=0;if(K&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(L);if(!g)break d}else{y=0;za(3);y=0;M=186}while(0);if((M|0)==186)e=Pa()|0;Oa(i|0);break d}while(0);e=f[s>>2]|0;f[s>>2]=0;if(e|0)$Ja(e);u=I;return}while(0);e=Pa()|0;M=46}while(0);if((M|0)!=46)if((M|0)==55){g=f[A>>2]|0;f[A>>2]=0;if(g|0)$Ja(g)}}while(0);if((M|0)==12)e=Pa()|0;g=f[N>>2]|0;f[N>>2]=0;if(g|0)$Ja(g);$a(e|0)}function tc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+880|0;q=t+288|0;j=t+860|0;s=t+144|0;o=t;k=t+708|0;l=t+568|0;m=t+428|0;p=t+848|0;d=cua(d)|0;f[d+4>>2]=c;g=a+1|0;a:do if(pDa(c)|0){if(bDa(a,f[18743]|0)|0)switch(c|0){case 3:{tda(q,D);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}case 4:{S5(q,D);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}default:{d=0;r=157;break a}}if(bDa(a,f[18742]|0)|0)switch(c|0){case 3:{tda(q,-D);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}case 4:{S5(q,-D);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}default:{d=0;r=157;break a}}if(bDa(a,f[18744]|0)|0)switch(c|0){case 3:{tda(q,C);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}case 4:{S5(q,C);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}default:{d=0;r=157;break a}}n=(b[a>>0]|0)==45;e=n?g:a;if(n)i=g;else i=(b[e>>0]|0)==43?e+1|0:e;if(((b[i>>0]|0)==110?(b[i+1>>0]|0)==97:0)?(b[i+2>>0]|0)==110:0){e=(b[i+3>>0]|0)==58;g=i+4|0;h=e?g:0;do if(e){if((b[g>>0]|0)==48?(b[i+5>>0]|0)==120:0)break;h=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;g=uHa(53195)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[j+11>>0]=g;d=j}else{e=g+16&-16;y=0;d=la(150,e|0)|0;t=y;y=0;if(t&1){r=30;break}f[j>>2]=d;f[j+8>>2]=e|-2147483648;f[j+4>>2]=g}Pta(d,53195,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,j|0);t=y;y=0;if(t&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(j);if(!e){r=158;break a}}else{y=0;za(3);y=0;r=30}while(0);if((r|0)==30)d=Pa()|0;Oa(h|0);r=158;break a}while(0);switch(c|0){case 3:{b:do if(e){f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;g=uHa(h)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[o+11>>0]=g;e=o}else{r=g+16&-16;e=nV(r)|0;f[o>>2]=e;f[o+8>>2]=r|-2147483648;f[o+4>>2]=g}Pta(e,h,g)|0;SBa(e+g|0,0);g=s+60|0;h=s+8|0;f[s>>2]=3916;f[g>>2]=3936;f[s+4>>2]=0;dX(s+60|0,h);f[s+132>>2]=0;f[s+136>>2]=-1;f[s>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=s+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[s+52>>2]=0;f[s+56>>2]=8;y=0;ja(117,h|0,o|0);r=y;y=0;do if(!(r&1)){zta(o);r=s+(f[(f[s>>2]|0)+-12>>2]|0)+4|0;f[r>>2]=f[r>>2]&-75|8;y=0;ua(149,s|0,q|0)|0;r=y;y=0;if(r&1){d=Pa()|0;pia(s);break}else{f[q>>2]=f[q>>2]|2139095040;pia(s);break b}}else{d=Pa()|0;zta(i);vwa(h);oCa(g);zta(o)}while(0);r=158;break a}else f[q>>2]=2143289344;while(0);e=f[q>>2]|0;if(n){e=e|-2147483648;f[q>>2]=e}if(((JAa(+hIa(q))|0)&2147483647)>>>0<=2139095040){e=e|1;f[q>>2]=e}uAa(o,e);qja(s,o);r=d+8|0;f[r>>2]=f[s>>2];f[r+4>>2]=f[s+4>>2];f[r+8>>2]=f[s+8>>2];f[r+12>>2]=f[s+12>>2];r=157;break a}case 4:{c:do if(e){f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;g=uHa(h)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[s+11>>0]=g;e=s}else{r=g+16&-16;e=nV(r)|0;f[s>>2]=e;f[s+8>>2]=r|-2147483648;f[s+4>>2]=g}Pta(e,h,g)|0;SBa(e+g|0,0);g=o+60|0;h=o+8|0;f[o>>2]=3916;f[g>>2]=3936;f[o+4>>2]=0;dX(o+60|0,h);f[o+132>>2]=0;f[o+136>>2]=-1;f[o>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=o+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[o+52>>2]=0;f[o+56>>2]=8;y=0;ja(117,h|0,s|0);r=y;y=0;do if(!(r&1)){zta(s);r=o+(f[(f[o>>2]|0)+-12>>2]|0)+4|0;f[r>>2]=f[r>>2]&-75|8;y=0;ua(150,o|0,q|0)|0;r=y;y=0;if(r&1){d=Pa()|0;pia(o);break}else{c=q;p=f[c+4>>2]|2146435072;r=q;f[r>>2]=f[c>>2];f[r+4>>2]=p;pia(o);break c}}else{d=Pa()|0;zta(i);vwa(h);oCa(g);zta(s)}while(0);r=158;break a}else{r=q;f[r>>2]=0;f[r+4>>2]=2146959360}while(0);e=q;g=f[e>>2]|0;e=f[e+4>>2]|0;if(n){e=e|-2147483648;r=q;f[r>>2]=g;f[r+4>>2]=e}r=Mra(+iIa(q))|0;p=J&2147483647;if(!(p>>>0>2146435072|(p|0)==2146435072&r>>>0>0)){g=g|1;r=q;f[r>>2]=g;f[r+4>>2]=e}Ysa(o,g,e);Bca(s,o);r=d+8|0;f[r>>2]=f[s>>2];f[r+4>>2]=f[s+4>>2];f[r+8>>2]=f[s+8>>2];f[r+12>>2]=f[s+12>>2];r=157;break a}default:{d=0;r=157;break a}}}if(bDa(a,f[18741]|0)|0)switch(c|0){case 3:{tda(q,C);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}case 4:{S5(q,C);r=d+8|0;f[r>>2]=f[q>>2];f[r+4>>2]=f[q+4>>2];f[r+8>>2]=f[q+8>>2];f[r+12>>2]=f[q+12>>2];r=157;break a}default:{d=0;r=157;break a}}else r=80}else r=80;while(0);d:do if((r|0)==80){n=d+8|0;e=a+2|0;e:do switch(c|0){case 1:{m=b[a>>0]|0;j=m<<24>>24==45;if(!(m<<24>>24==48?(b[g>>0]|0)==120:0))r=83;do if((r|0)==83){if((j?(b[g>>0]|0)==48:0)?(b[e>>0]|0)==120:0)break;g=j?g:a;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;h=uHa(g)|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[q+11>>0]=h;e=q}else{o=h+16&-16;e=nV(o)|0;f[q>>2]=e;f[q+8>>2]=o|-2147483648;f[q+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);g=k+60|0;h=k+8|0;f[k>>2]=3916;f[g>>2]=3936;f[k+4>>2]=0;dX(k+60|0,h);f[k+132>>2]=0;f[k+136>>2]=-1;f[k>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=k+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[k+52>>2]=0;f[k+56>>2]=8;y=0;ja(117,h|0,q|0);o=y;y=0;if(o&1){d=Pa()|0;zta(i);vwa(h);oCa(g);zta(q);r=158;break d}zta(q);y=0;ua(149,k|0,q|0)|0;o=y;y=0;if(o&1){d=Pa()|0;pia(k);r=158;break d}else{q=f[q>>2]|0;uAa(s,(b[a>>0]|0)==45?0-q|0:q);f[n>>2]=f[s>>2];f[n+4>>2]=f[s+4>>2];f[n+8>>2]=f[s+8>>2];f[n+12>>2]=f[s+12>>2];pia(k);break e}}while(0);g=j?g:a;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;h=uHa(g)|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[s+11>>0]=h;e=s}else{a=h+16&-16;e=nV(a)|0;f[s>>2]=e;f[s+8>>2]=a|-2147483648;f[s+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);g=q+60|0;h=q+8|0;f[q>>2]=3916;f[g>>2]=3936;f[q+4>>2]=0;dX(q+60|0,h);f[q+132>>2]=0;f[q+136>>2]=-1;f[q>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=q+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[q+52>>2]=0;f[q+56>>2]=8;y=0;ja(117,h|0,s|0);a=y;y=0;if(a&1){d=Pa()|0;zta(i);vwa(h);oCa(g);zta(s);r=158;break d}zta(s);a=q+(f[(f[q>>2]|0)+-12>>2]|0)+4|0;f[a>>2]=f[a>>2]&-75|8;y=0;ua(149,q|0,s|0)|0;a=y;y=0;if(a&1){d=Pa()|0;pia(q);r=158;break d}else{s=f[s>>2]|0;uAa(o,j?0-s|0:s);f[n>>2]=f[o>>2];f[n+4>>2]=f[o+4>>2];f[n+8>>2]=f[o+8>>2];f[n+12>>2]=f[o+12>>2];pia(q);break e}}case 2:{o=b[a>>0]|0;j=o<<24>>24==45;if(!(o<<24>>24==48?(b[g>>0]|0)==120:0))r=114;do if((r|0)==114){if((j?(b[g>>0]|0)==48:0)?(b[e>>0]|0)==120:0)break;g=j?g:a;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;h=uHa(g)|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[q+11>>0]=h;e=q}else{o=h+16&-16;e=nV(o)|0;f[q>>2]=e;f[q+8>>2]=o|-2147483648;f[q+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);g=m+60|0;h=m+8|0;f[m>>2]=3916;f[g>>2]=3936;f[m+4>>2]=0;dX(m+60|0,h);f[m+132>>2]=0;f[m+136>>2]=-1;f[m>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=m+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[m+52>>2]=0;f[m+56>>2]=8;y=0;ja(117,h|0,q|0);o=y;y=0;if(o&1){d=Pa()|0;zta(i);vwa(h);oCa(g);zta(q);r=158;break d}zta(q);y=0;ua(150,m|0,q|0)|0;o=y;y=0;if(o&1){d=Pa()|0;pia(m);r=158;break d}else{o=(b[a>>0]|0)==45;a=f[q>>2]|0;q=f[q+4>>2]|0;l=Aoa(0,0,a|0,q|0)|0;Ysa(s,o?l:a,o?J:q);f[n>>2]=f[s>>2];f[n+4>>2]=f[s+4>>2];f[n+8>>2]=f[s+8>>2];f[n+12>>2]=f[s+12>>2];pia(m);break e}}while(0);g=j?g:a;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;h=uHa(g)|0;if(h>>>0>4294967279)JZ();if(h>>>0<11){b[q+11>>0]=h;e=q}else{o=h+16&-16;e=nV(o)|0;f[q>>2]=e;f[q+8>>2]=o|-2147483648;f[q+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);g=l+60|0;h=l+8|0;f[l>>2]=3916;f[g>>2]=3936;f[l+4>>2]=0;dX(l+60|0,h);f[l+132>>2]=0;f[l+136>>2]=-1;f[l>>2]=9708;f[g>>2]=9728;W6(h);f[h>>2]=6060;i=l+40|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[i+(e<<2)>>2]=0;e=e+1|0}f[l+52>>2]=0;f[l+56>>2]=8;y=0;ja(117,h|0,q|0);o=y;y=0;if(o&1){d=Pa()|0;zta(i);vwa(h);oCa(g);zta(q);r=158;break d}zta(q);o=l+(f[(f[l>>2]|0)+-12>>2]|0)+4|0;f[o>>2]=f[o>>2]&-75|8;y=0;ua(150,l|0,q|0)|0;o=y;y=0;if(o&1){d=Pa()|0;pia(l);r=158;break d}else{o=f[q>>2]|0;q=f[q+4>>2]|0;a=Aoa(0,0,o|0,q|0)|0;Ysa(s,j?a:o,j?J:q);f[n>>2]=f[s>>2];f[n+4>>2]=f[s+4>>2];f[n+8>>2]=f[s+8>>2];f[n+12>>2]=f[s+12>>2];pia(l);break e}}case 3:{tda(s,+GIa(a,q));f[n>>2]=f[s>>2];f[n+4>>2]=f[s+4>>2];f[n+8>>2]=f[s+8>>2];f[n+12>>2]=f[s+12>>2];break}case 4:{S5(s,+HIa(a,q));f[n>>2]=f[s>>2];f[n+4>>2]=f[s+4>>2];f[n+8>>2]=f[s+8>>2];f[n+12>>2]=f[s+12>>2];break}default:{d=0;r=157;break d}}while(0);if((f[n>>2]|0)==(c|0))r=157;else{h=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;g=uHa(53209)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[p+11>>0]=g;d=p}else{e=g+16&-16;y=0;d=la(150,e|0)|0;t=y;y=0;if(t&1){r=154;break}f[p>>2]=d;f[p+8>>2]=e|-2147483648;f[p+4>>2]=g}Pta(d,53209,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,p|0);t=y;y=0;if(t&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(p);if(!e){r=158;break d}}else{y=0;za(3);y=0;r=154}while(0);if((r|0)==154)d=Pa()|0;Oa(h|0);r=158}}while(0);if((r|0)==157){u=t;return d|0}else if((r|0)==158)$a(d|0);return 0}function uc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;O=u;u=u+128|0;L=O+104|0;t=O+96|0;m=O+100|0;Q=O+80|0;P=O+68|0;s=O+92|0;z=O+64|0;A=O+56|0;F=O+40|0;B=O+36|0;C=O+24|0;E=O+12|0;D=O;w=O+60|0;x=O+52|0;M=kaa(f[c>>2]|0,0)|0;N=M+12|0;if(!((b[a+112>>0]|0)==0|d^1))AW(N,SM(c,0)|0);e=f[a+104>>2]|0;if(e|0)AW(N,e);r=a+48|0;e=gKa(f[a+56>>2]|0)|0;if(!e)Do(M);else{g=(f[a+96>>2]|0)+8|0;h=f[g>>2]|0;i=$ta(h)|0;J=(i|0)!=0;K=i+20|0;v=a+108|0;if(J?(f[g>>2]=f[h+8>>2],(f[i+28>>2]|0)==(e|0)):0)H=(f[v>>2]|0)!=0;else H=1;f[t>>2]=0;n=a+64|0;g=f[n>>2]|0;gKa(g)|0;I=EFa(r)|0;e=g;h=L;i=0;j=0;k=0;while(1){f[h>>2]=e;e=f[L>>2]|0;l=e;if((l|0)==(I|0))break;h=f[e+12>>2]|0;if(!(f[v>>2]|0)){if(!(f[h+8>>2]|0))G=16}else if(!(f[h+12>>2]|0))G=16;if((G|0)==16){G=0;if(k|0){G=17;break}i=f[e+8>>2]|0;k=i;j=k}f[L>>2]=f[l+4>>2];e=l;h=m}if((G|0)==17)Na(33592,33266,202,33287);f[t>>2]=i;if(!j)Na(33677,33266,206,33287);a:do if(!(f[v>>2]|0)){f[L>>2]=0;q=L+4|0;f[q>>2]=0;f[L+8>>2]=0;p=L+8|0;e=0;o=0;i=0;h=Q;b:while(1){f[h>>2]=g;h=f[Q>>2]|0;g=h;n=(g|0)==(I|0);if(!n){k=f[h+8>>2]|0;if((k|0)!=(f[t>>2]|0)){j=f[h+12>>2]|0;if(!(f[j+8>>2]|0)){G=27;break}else{h=k;G=30}}else h=o}else{h=f[t>>2]|0;y=0;j=ua(88,r|0,t|0)|0;G=y;y=0;if(G&1){G=25;break}j=f[j>>2]|0;G=30}c:do if((G|0)==30){if(H)m=(b[h+112>>0]|0)!=0;else m=0;a=h+100|0;if(J){k=j+4|0;if(C6(K,f[a>>2]|0)|0){if((f[k>>2]|0)!=1){G=36;break b}f[k>>2]=0;l=1}else l=0}else{k=j+4|0;l=0}if((!m?!(l|(f[k>>2]|0)!=0):0)?(f[j+16>>2]|0)==0:0){h=j+8|0;k=(i|0)!=0;G=74}else G=42;do if((G|0)==42){G=0;y=0;h=xa(11,j|0,c|0,h|0,m|0)|0;F=y;y=0;if(F&1){G=47;break b}if(l){k=(fL(K,f[a>>2]|0)|0)+20|0;k=f[k>>2]|0;y=0;k=oa(f[(f[k>>2]|0)+8>>2]|0,k|0,c|0,d|0)|0;F=y;y=0;if(F&1){G=47;break b}y=0;h=oa(36,c|0,h|0,k|0)|0;F=y;y=0;if(F&1){G=47;break b}}j=j+8|0;k=(i|0)!=0;if(h){l=o+16|0;m=(e|0)!=0;a=(o|0)!=0;if(!n){y=0;k=xa(9,f[c>>2]|0,f[j>>2]|0,h|0,0)|0;F=y;y=0;if(F&1){G=47;break b}f[P>>2]=k;h=f[q>>2]|0;j=k;if((h|0)==(f[p>>2]|0)){y=0;ja(592,L|0,P|0);F=y;y=0;if(F&1){G=70;break b}}else{f[h>>2]=j;f[q>>2]=(f[q>>2]|0)+4}if(a){f[l>>2]=j;qO(o);h=f[P>>2]|0}else{if(m){G=69;break b}h=k;e=k}break c}if(k){y=0;j=xa(9,f[c>>2]|0,i|0,h|0,0)|0;F=y;y=0;if(F&1){G=57;break b}y=0;h=la(169,j|0)|0;F=y;y=0;if(F&1){G=58;break b}f[P>>2]=h;k=f[q>>2]|0;if(k>>>0>=(f[p>>2]|0)>>>0){y=0;ja(595,L|0,P|0);F=y;y=0;if(F&1){G=58;break b}}else{f[k>>2]=h;f[q>>2]=(f[q>>2]|0)+4}}else j=h;if(!a)if(m){G=61;break b}else{h=0;e=j;break}else{f[l>>2]=j;qO(o);h=o;break}}else{h=j;G=74}}while(0);if((G|0)==74){G=0;y=0;j=oa(51,f[c>>2]|0,20,f[h>>2]|0)|0;F=y;y=0;if(F&1){G=47;break b}if(k){y=0;i=xa(12,f[c>>2]|0,7,i|0,j|0)|0;F=y;y=0;if(F&1){G=78;break b}h=o}else{h=o;i=j}}if(n){G=81;break b}}while(0);f[Q>>2]=f[g+4>>2];o=h;h=s}if((G|0)==27){y=0;Ca(52,33691,33266,227,33287);y=0;G=25}else if((G|0)==36){y=0;Ca(52,33710,33266,235,33287);y=0;e=Pa()|0}else if((G|0)==47)e=Pa()|0;else if((G|0)==58)e=Pa()|0;else if((G|0)==61){y=0;Ca(52,33741,33266,257,33287);y=0;G=57}else if((G|0)==69){y=0;Ca(52,33741,33266,267,33287);y=0;G=70}else if((G|0)==78)e=Pa()|0;else if((G|0)==81){while(1){Q=f[q>>2]|0;h=Q;if((Q|0)==(f[L>>2]|0))break;i=f[h+-4>>2]|0;g=0;while(1){if((g|0)==-1)break;Q=g+-1|0;f[q>>2]=h+(Q<<2);g=Q}qO(i)}E4(L);if(!e)break;else{G=185;break}}if((G|0)==25)e=Pa()|0;else if((G|0)==57)e=Pa()|0;else if((G|0)==70)e=Pa()|0;E4(L);G=187}else{f[L>>2]=0;f[L+4>>2]=0;f[L+8>>2]=0;g=uHa(33747)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[L+11>>0]=g;e=L}else{t=g+16&-16;e=nV(t)|0;f[L>>2]=e;f[L+8>>2]=t|-2147483648;f[L+4>>2]=g}Pta(e,33747,g)|0;SBa(e+g|0,0);y=0;ja(593,P|0,f[a+100>>2]|0);t=y;y=0;do if(t&1)e=Pa()|0;else{t=b[P+11>>0]|0;s=t<<24>>24<0;y=0;oa(37,L|0,(s?f[P>>2]|0:P)|0,(s?f[P+4>>2]|0:t&255)|0)|0;t=y;y=0;if(t&1){e=Pa()|0;zta(P);break}f[Q>>2]=f[L>>2];f[Q+4>>2]=f[L+4>>2];f[Q+8>>2]=f[L+8>>2];e=0;while(1){if((e|0)==3)break;f[L+(e<<2)>>2]=0;e=e+1|0}zta(P);zta(L);y=0;ya(80,L|0,Q|0,33755);t=y;y=0;do if(t&1){e=Pa()|0;G=111}else{y=0;ja(582,z|0,L|0);t=y;y=0;if(t&1){e=Pa()|0;zta(L);G=111;break}zta(L);y=0;ya(80,L|0,Q|0,33764);t=y;y=0;do if(t&1){e=Pa()|0;G=114}else{y=0;ja(582,A|0,L|0);t=y;y=0;if(t&1){e=Pa()|0;zta(L);G=114;break}zta(L);gua(P);y=0;t=ua(87,f[c>>2]|0,0)|0;s=y;y=0;if(s&1)e=Pa()|0;else{f[F>>2]=0;p=F+4|0;f[p>>2]=0;f[F+8>>2]=0;q=F+8|0;r=D+11|0;s=D+4|0;e=t;g=gKa(f[n>>2]|0)|0;d:while(1){o=g;a=e+8|0;if((o|0)==(I|0)){G=105;break}k=g;j=f[k+8>>2]|0;k=f[k+12>>2]|0;cJa(B);n=k+12|0;l=j+100|0;if(!(f[n>>2]|0)){m=f[z>>2]|0;f[B>>2]=m}else{y=0;ya(80,E|0,Q|0,33771);G=y;y=0;if(G&1){G=125;break}y=0;ja(593,D|0,f[l>>2]|0);G=y;y=0;if(G&1){G=126;break}G=b[r>>0]|0;m=G<<24>>24<0;y=0;oa(37,E|0,(m?f[D>>2]|0:D)|0,(m?f[s>>2]|0:G&255)|0)|0;G=y;y=0;if(G&1){G=127;break}f[C>>2]=f[E>>2];f[C+4>>2]=f[E+4>>2];f[C+8>>2]=f[E+8>>2];g=0;while(1){if((g|0)==3)break;f[E+(g<<2)>>2]=0;g=g+1|0}y=0;ja(582,L|0,C|0);G=y;y=0;if(G&1){G=128;break}m=f[L>>2]|0;f[B>>2]=m;zta(C);zta(D);zta(E)}if(H)i=(b[j+112>>0]|0)!=0;else i=0;do if(J){g=k+4|0;if(!(C6(K,f[l>>2]|0)|0)){h=0;break}if((f[g>>2]|0)!=1){G=139;break d}f[g>>2]=0;h=1}else{g=k+4|0;h=0}while(0);do if(!i){if(h|(f[g>>2]|0)!=0){G=144;break}if(!(f[k+16>>2]|0))G=158;else G=144}else G=144;while(0);do if((G|0)==144){y=0;g=xa(11,k|0,c|0,j|0,i|0)|0;G=y;y=0;if(G&1){G=149;break d}if(h){h=(fL(K,f[l>>2]|0)|0)+20|0;h=f[h>>2]|0;y=0;h=oa(f[(f[h>>2]|0)+8>>2]|0,h|0,c|0,d|0)|0;G=y;y=0;if(G&1){G=149;break d}y=0;g=oa(36,c|0,g|0,h|0)|0;G=y;y=0;if(G&1){G=149;break d}}if(!g){G=158;break}y=0;h=ua(87,f[c>>2]|0,0)|0;G=y;y=0;if(G&1){G=149;break d}i=h+12|0;y=0;ja(596,i|0,e|0);G=y;y=0;if(G&1){G=157;break d}f[a>>2]=m;y=0;ja(596,i|0,g|0);G=y;y=0;if(G&1){G=157;break d}if((f[g+4>>2]|0)==5){e=h;G=165;break}f[w>>2]=f[A>>2];y=0;f[L>>2]=f[w>>2];e=xa(14,c|0,L|0,0,0)|0;G=y;y=0;if(G&1){G=157;break d}y=0;ja(596,i|0,e|0);G=y;y=0;if(G&1){G=157;break d}else{e=h;G=165}}while(0);do if((G|0)==158){j=f[A>>2]|0;f[B>>2]=j;g=f[n>>2]|0;if(g|0){G=166;break}i=f[p>>2]|0;g=f[z>>2]|0;h=f[F>>2]|0;while(1){if((h|0)==(i|0))break;if(bDa(f[h>>2]|0,g)|0)f[h>>2]=j;h=h+4|0}f[z>>2]=j;G=165}while(0);if((G|0)==165){G=0;g=f[n>>2]|0;if(g)G=166}e:do if((G|0)==166){k=f[g+4>>2]|0;g=f[g>>2]|0;while(1){if((g|0)==(k|0))break e;h=f[g>>2]|0;while(1){i=f[p>>2]|0;j=f[F>>2]|0;if(i-j>>2>>>0>h>>>0)break;if((i|0)==(f[q>>2]|0)){y=0;ja(68,F|0,z|0);G=y;y=0;if(G&1){G=173;break d}else continue}else{f[i>>2]=f[z>>2];f[p>>2]=(f[p>>2]|0)+4;continue}}f[j+(h<<2)>>2]=f[B>>2];g=g+4|0}}while(0);g=f[o+4>>2]|0}if((G|0)==105){f[a>>2]=f[A>>2];f[x>>2]=f[z>>2];g=f[v>>2]|0;y=0;f[L>>2]=f[x>>2];g=xa(13,c|0,F|0,L|0,g|0)|0;L=y;y=0;do if(!(L&1)){y=0;ja(596,t+12|0,g|0);L=y;y=0;if(L&1)break;E4(F);nfa(P);zta(Q);G=185;break a}while(0);e=Pa()|0}else if((G|0)==125){e=Pa()|0;G=131}else if((G|0)==126){e=Pa()|0;G=130}else if((G|0)==127){e=Pa()|0;G=129}else if((G|0)==128){e=Pa()|0;zta(C);G=129}else if((G|0)==139){y=0;Ca(52,33710,33266,315,33287);y=0;e=Pa()|0;G=176}else if((G|0)==149){e=Pa()|0;G=176}else if((G|0)==157){e=Pa()|0;G=176}else if((G|0)==173){e=Pa()|0;G=176}if((G|0)==129){zta(D);G=130}if((G|0)==130){zta(E);G=131}if((G|0)==131)G=176;E4(F)}nfa(P)}while(0)}while(0);zta(Q);G=187;break a}while(0);zta(L);G=187}while(0);if((G|0)==185)AW(N,e);else if((G|0)==187)$a(e|0);Do(M)}u=O;return M|0}function vc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=u;u=u+96|0;q=r+64|0;l=r+48|0;n=r+36|0;o=r+24|0;p=r+12|0;m=r;a:do if((c-a|0)>3?(b[a>>0]|0)==76:0){e=a+1|0;g=a+3|0;h=a+2|0;b:do switch(b[e>>0]|0){case 84:break a;case 119:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73277)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73277,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 98:{if((b[g>>0]|0)!=69)break a;g=a+4|0;switch(b[h>>0]|0){case 48:{UQ(q,73285);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,q|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(q);break b}}else{ZL(e,q);f[a>>2]=(f[a>>2]|0)+24}Xka(q);a=g;break a}case 49:{VQ(q,73291);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,q|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(q);break b}}else{ZL(e,q);f[a>>2]=(f[a>>2]|0)+24}Xka(q);a=g;break a}default:break a}}case 99:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73296)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73296,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 97:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73301)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73301,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 104:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73313)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73313,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 115:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73327)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73327,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 116:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73333)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73333,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 105:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(83563)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,83563,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 106:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73348)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73348,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 108:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73350)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73350,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 109:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73352)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73352,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 120:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73355)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73355,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 121:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73358)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73358,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 110:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73362)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73362,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 111:{f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;g=uHa(73371)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[q+11>>0]=g;e=q}else{p=g+16&-16;e=QCa(p)|0;f[q>>2]=e;f[q+8>>2]=p|-2147483648;f[q+4>>2]=g}Pta(e,73371,g)|0;SBa(e+g|0,0);y=0;e=xa(28,h|0,c|0,q|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(q);break b}else{zta(q);a=(e|0)==(h|0)?a:e;break a}}case 102:{q=_k(h,c,d)|0;a=(q|0)==(h|0)?a:q;break a}case 100:{q=Zk(h,c,d)|0;a=(q|0)==(h|0)?a:q;break a}case 101:{q=Yk(h,c,d)|0;a=(q|0)==(h|0)?a:q;break a}case 95:{if((b[h>>0]|0)!=90)break a;e=Fc(g,c,d)|0;if((e|0)==(g|0)|(e|0)==(c|0))break a;a=(b[e>>0]|0)==69?e+1|0:a;break a}default:{h=ic(e,c,d)|0;if((h|0)==(e|0)|(h|0)==(c|0))break a;if((b[h>>0]|0)==69){a=h+1|0;break a}else j=h;while(1){k=j+1|0;if((j|0)==(c|0))break a;e=b[j>>0]|0;if(((e<<24>>24)+-48|0)>>>0<10)j=k;else break}if(!((j|0)!=(h|0)&e<<24>>24==69))break a;i=d+4|0;e=f[i>>2]|0;if((f[d>>2]|0)==(e|0))break a;HL(p,e+-24|0);y=0;oa(77,p|0,0,72085)|0;d=y;y=0;if(d&1)a=Pa()|0;else{f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,o|0,72083)|0;d=y;y=0;if(d&1)a=Pa()|0;else{f[n>>2]=f[o>>2];f[n+4>>2]=f[o+4>>2];f[n+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;c=j-h|0;do if(c>>>0>4294967279){y=0;za(3);y=0;a=Pa()|0}else{if(c>>>0<11){b[m+11>>0]=c;g=m}else{d=c+16&-16;g=QCa(d)|0;f[m>>2]=g;f[m+8>>2]=d|-2147483648;f[m+4>>2]=c}a=h;e=g;while(1){if((a|0)==(j|0))break;SBa(e,b[a>>0]|0);a=a+1|0;e=e+1|0}SBa(g+c|0,0);d=b[m+11>>0]|0;j=d<<24>>24<0;y=0;oa(73,n|0,(j?f[m>>2]|0:m)|0,(j?f[m+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(m);break}f[l>>2]=f[n>>2];f[l+4>>2]=f[n+4>>2];f[l+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}hM(q,l);nu((f[i>>2]|0)+-24|0,q);Xka(q);zta(l);zta(m);zta(n);zta(o);zta(p);a=k;break a}while(0);zta(n)}zta(o)}zta(p)}}while(0);$a(a|0)}while(0);u=r;return a|0}function wc(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;G=u;u=u+288|0;d=G+276|0;g=G+264|0;h=G+252|0;i=G+240|0;j=G+228|0;k=G+216|0;m=G+204|0;n=G+192|0;o=G+180|0;p=G+168|0;q=G+156|0;r=G+144|0;s=G+132|0;t=G+120|0;v=G+108|0;w=G+96|0;x=G+84|0;z=G+72|0;A=G+60|0;B=G+48|0;C=G+36|0;D=G+24|0;E=G+12|0;F=G;do if(!(b[a+33>>0]|0)){f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;e=uHa(29537)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[d+11>>0]=e;c=d}else{H=e+16&-16;c=nV(H)|0;f[d>>2]=c;f[d+8>>2]=H|-2147483648;f[d+4>>2]=e}Pta(c,29537,e)|0;SBa(c+e|0,0);y=0;ja(1516,a|0,d|0);H=y;y=0;if(H&1){c=Pa()|0;zta(d);break}else{zta(d);l=10;break}}else l=10;while(0);a:do if((l|0)==10){f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(46265)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[g+11>>0]=d;c=g}else{H=d+16&-16;c=nV(H)|0;f[g>>2]=c;f[g+8>>2]=H|-2147483648;f[g+4>>2]=d}Pta(c,46265,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,g|0);H=y;y=0;if(H&1){c=Pa()|0;zta(g);break}zta(g);f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;d=uHa(46283)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[h+11>>0]=d;c=h}else{H=d+16&-16;c=nV(H)|0;f[h>>2]=c;f[h+8>>2]=H|-2147483648;f[h+4>>2]=d}Pta(c,46283,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,h|0);H=y;y=0;if(H&1){c=Pa()|0;zta(h);break}zta(h);f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;d=uHa(30324)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[i+11>>0]=d;c=i}else{H=d+16&-16;c=nV(H)|0;f[i>>2]=c;f[i+8>>2]=H|-2147483648;f[i+4>>2]=d}Pta(c,30324,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,i|0);H=y;y=0;if(H&1){c=Pa()|0;zta(i);break}zta(i);e=a+24|0;g=a+28|0;if(!((f[e>>2]|0)<=1?(f[g>>2]|0)<=1:0))l=30;do if((l|0)==30){f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;d=uHa(30381)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[j+11>>0]=d;c=j}else{H=d+16&-16;c=nV(H)|0;f[j>>2]=c;f[j+8>>2]=H|-2147483648;f[j+4>>2]=d}Pta(c,30381,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,j|0);H=y;y=0;if(H&1){c=Pa()|0;zta(j);break a}else{zta(j);break}}while(0);f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;d=uHa(30507)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[k+11>>0]=d;c=k}else{H=d+16&-16;c=nV(H)|0;f[k>>2]=c;f[k+8>>2]=H|-2147483648;f[k+4>>2]=d}Pta(c,30507,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,k|0);H=y;y=0;if(H&1){c=Pa()|0;zta(k);break}zta(k);if(!((f[e>>2]|0)<=1?(f[g>>2]|0)<=1:0))l=49;do if((l|0)==49){f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;d=uHa(29421)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[m+11>>0]=d;c=m}else{H=d+16&-16;c=nV(H)|0;f[m>>2]=c;f[m+8>>2]=H|-2147483648;f[m+4>>2]=d}Pta(c,29421,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,m|0);H=y;y=0;if(H&1){c=Pa()|0;zta(m);break a}else{zta(m);break}}while(0);f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;d=uHa(31347)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[n+11>>0]=d;c=n}else{H=d+16&-16;c=nV(H)|0;f[n>>2]=c;f[n+8>>2]=H|-2147483648;f[n+4>>2]=d}Pta(c,31347,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,n|0);H=y;y=0;if(H&1){c=Pa()|0;zta(n);break}zta(n);f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;d=uHa(46335)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[o+11>>0]=d;c=o}else{H=d+16&-16;c=nV(H)|0;f[o>>2]=c;f[o+8>>2]=H|-2147483648;f[o+4>>2]=d}Pta(c,46335,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,o|0);H=y;y=0;if(H&1){c=Pa()|0;zta(o);break}zta(o);f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;d=uHa(46342)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[p+11>>0]=d;c=p}else{H=d+16&-16;c=nV(H)|0;f[p>>2]=c;f[p+8>>2]=H|-2147483648;f[p+4>>2]=d}Pta(c,46342,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,p|0);H=y;y=0;if(H&1){c=Pa()|0;zta(p);break}zta(p);f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;d=uHa(46265)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[q+11>>0]=d;c=q}else{H=d+16&-16;c=nV(H)|0;f[q>>2]=c;f[q+8>>2]=H|-2147483648;f[q+4>>2]=d}Pta(c,46265,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,q|0);H=y;y=0;if(H&1){c=Pa()|0;zta(q);break}zta(q);f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;d=uHa(46303)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[r+11>>0]=d;c=r}else{H=d+16&-16;c=nV(H)|0;f[r>>2]=c;f[r+8>>2]=H|-2147483648;f[r+4>>2]=d}Pta(c,46303,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,r|0);H=y;y=0;if(H&1){c=Pa()|0;zta(r);break}zta(r);f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;d=uHa(46319)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[s+11>>0]=d;c=s}else{H=d+16&-16;c=nV(H)|0;f[s>>2]=c;f[s+8>>2]=H|-2147483648;f[s+4>>2]=d}Pta(c,46319,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,s|0);H=y;y=0;if(H&1){c=Pa()|0;zta(s);break}zta(s);f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;d=uHa(46335)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[t+11>>0]=d;c=t}else{H=d+16&-16;c=nV(H)|0;f[t>>2]=c;f[t+8>>2]=H|-2147483648;f[t+4>>2]=d}Pta(c,46335,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,t|0);H=y;y=0;if(H&1){c=Pa()|0;zta(t);break}zta(t);f[v>>2]=0;f[v+4>>2]=0;f[v+8>>2]=0;d=uHa(46342)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[v+11>>0]=d;c=v}else{H=d+16&-16;c=nV(H)|0;f[v>>2]=c;f[v+8>>2]=H|-2147483648;f[v+4>>2]=d}Pta(c,46342,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,v|0);H=y;y=0;if(H&1){c=Pa()|0;zta(v);break}zta(v);do if((f[g>>2]|0)>0){f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;d=uHa(29494)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[w+11>>0]=d;c=w}else{H=d+16&-16;c=nV(H)|0;f[w>>2]=c;f[w+8>>2]=H|-2147483648;f[w+4>>2]=d}Pta(c,29494,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,w|0);H=y;y=0;if(H&1){c=Pa()|0;zta(w);break a}else{zta(w);break}}while(0);f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;d=uHa(46357)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[x+11>>0]=d;c=x}else{H=d+16&-16;c=nV(H)|0;f[x>>2]=c;f[x+8>>2]=H|-2147483648;f[x+4>>2]=d}Pta(c,46357,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,x|0);H=y;y=0;if(H&1){c=Pa()|0;zta(x);break}zta(x);f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;d=uHa(46265)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[z+11>>0]=d;c=z}else{H=d+16&-16;c=nV(H)|0;f[z>>2]=c;f[z+8>>2]=H|-2147483648;f[z+4>>2]=d}Pta(c,46265,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,z|0);H=y;y=0;if(H&1){c=Pa()|0;zta(z);break}zta(z);f[A>>2]=0;f[A+4>>2]=0;f[A+8>>2]=0;d=uHa(46357)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[A+11>>0]=d;c=A}else{H=d+16&-16;c=nV(H)|0;f[A>>2]=c;f[A+8>>2]=H|-2147483648;f[A+4>>2]=d}Pta(c,46357,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,A|0);H=y;y=0;if(H&1){c=Pa()|0;zta(A);break}zta(A);f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;d=uHa(30324)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[B+11>>0]=d;c=B}else{H=d+16&-16;c=nV(H)|0;f[B>>2]=c;f[B+8>>2]=H|-2147483648;f[B+4>>2]=d}Pta(c,30324,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,B|0);H=y;y=0;if(H&1){c=Pa()|0;zta(B);break}zta(B);f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;d=uHa(30507)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[C+11>>0]=d;c=C}else{H=d+16&-16;c=nV(H)|0;f[C>>2]=c;f[C+8>>2]=H|-2147483648;f[C+4>>2]=d}Pta(c,30507,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,C|0);H=y;y=0;if(H&1){c=Pa()|0;zta(C);break}zta(C);do if((f[g>>2]|0)>1){f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;d=uHa(29953)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[D+11>>0]=d;c=D}else{H=d+16&-16;c=nV(H)|0;f[D>>2]=c;f[D+8>>2]=H|-2147483648;f[D+4>>2]=d}Pta(c,29953,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,D|0);H=y;y=0;if(H&1){c=Pa()|0;zta(D);break a}zta(D);f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;d=uHa(46303)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[E+11>>0]=d;c=E}else{H=d+16&-16;c=nV(H)|0;f[E>>2]=c;f[E+8>>2]=H|-2147483648;f[E+4>>2]=d}Pta(c,46303,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,E|0);H=y;y=0;if(H&1){c=Pa()|0;zta(E);break a}else{zta(E);break}}while(0);f[F>>2]=0;f[F+4>>2]=0;f[F+8>>2]=0;d=uHa(46335)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[F+11>>0]=d;c=F}else{H=d+16&-16;c=nV(H)|0;f[F>>2]=c;f[F+8>>2]=H|-2147483648;f[F+4>>2]=d}Pta(c,46335,d)|0;SBa(c+d|0,0);y=0;ja(1516,a|0,F|0);H=y;y=0;if(H&1){c=Pa()|0;zta(F);break}else{zta(F);u=G;return}}while(0);$a(c|0)}function xc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;U=u;u=u+48|0;Q=U+36|0;V=U+24|0;R=U+8|0;S=U;a:do if((a|0)!=(c|0)?(b[a>>0]|0)==78:0){e=sN(a+1|0,c,Q)|0;b:do if((e|0)!=(c|0)){g=d+52|0;f[g>>2]=0;h=e+1|0;switch(b[e>>0]|0){case 82:{e=1;W=6;break}case 79:{e=2;W=6;break}default:{}}if((W|0)==6){f[g>>2]=e;e=h}P=d+4|0;g=f[P>>2]|0;if(g>>>0<(f[d+8>>2]|0)>>>0){f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;f[g+12>>2]=0;f[g+16>>2]=0;f[g+20>>2]=0;vT(g);f[P>>2]=(f[P>>2]|0)+24}else Lu(d);if(((c-e|0)>1?(b[e>>0]|0)==83:0)?(b[e+1>>0]|0)==116:0){f8((f[P>>2]|0)+-24|0,73461);e=e+2|0}if((e|0)==(c|0)){g=f[P>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break b;W=g+-24|0;f[P>>2]=W;Xka(W);g=f[P>>2]|0}}l=d+16|0;m=V+11|0;n=V+4|0;k=d+12|0;O=d+20|0;o=d+24|0;p=R+12|0;q=R+4|0;r=R+8|0;s=R+12|0;t=R+4|0;v=R+8|0;w=R+11|0;x=R+4|0;z=R+11|0;A=R+4|0;B=R+12|0;C=R+4|0;D=R+8|0;E=R+12|0;F=R+4|0;G=R+8|0;H=R+11|0;I=R+4|0;J=R+12|0;K=R+4|0;L=R+8|0;M=R+11|0;N=R+4|0;j=0;c:while(1){d:while(1){g=b[e>>0]|0;h=e+1|0;if(g<<24>>24==69){W=143;break c}switch(g<<24>>24|0){case 83:{W=21;break d}case 84:{W=48;break d}case 68:{W=73;break d}case 73:break;case 76:if((h|0)==(c|0))break b;else{e=h;continue d}default:break d}i=Ce(e,c,d)|0;if((i|0)==(e|0)|(i|0)==(c|0))break b;HL(V,(f[P>>2]|0)+-24|0);e=f[P>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;X=h+-24|0;f[P>>2]=X;Xka(X);h=f[P>>2]|0}X=b[m>>0]|0;h=X<<24>>24<0;y=0;oa(73,e+-48|0,(h?f[V>>2]|0:V)|0,(h?f[n>>2]|0:X&255)|0)|0;X=y;y=0;if(X&1){W=110;break c}X=(f[P>>2]|0)+-24|0;f[S>>2]=f[k>>2];y=0;ya(146,R|0,X|0,S|0);X=y;y=0;if(X&1){W=111;break c}e=f[O>>2]|0;if(e>>>0>=(f[o>>2]|0)>>>0){y=0;ja(2055,l|0,R|0);X=y;y=0;if(X&1){W=112;break c}}else{f[e+12>>2]=f[p>>2];f[e>>2]=f[R>>2];f[e+4>>2]=f[q>>2];f[e+8>>2]=f[r>>2];f[r>>2]=0;f[q>>2]=0;f[R>>2]=0;f[O>>2]=(f[O>>2]|0)+16}tM(R);zta(V);e=i}e:do if((W|0)==21){W=0;if((h|0)!=(c|0)?(b[h>>0]|0)==116:0)break;i=sf(e,c,d)|0;if((i|0)==(e|0)|(i|0)==(c|0))break b;HL(V,(f[P>>2]|0)+-24|0);h=f[P>>2]|0;e=h+-24|0;g=h;while(1){if((g|0)==(e|0))break;X=g+-24|0;f[P>>2]=X;Xka(X);g=f[P>>2]|0}g=h+-48|0;e=b[g+11>>0]|0;if(e<<24>>24<0)e=f[h+-44>>2]|0;else e=e&255;if(!e){y=0;ja(2063,g|0,V|0);X=y;y=0;if(X&1){W=38;break c}}else{y=0;ya(149,R|0,72157,V|0);X=y;y=0;if(X&1){W=39;break c}X=b[z>>0]|0;j=X<<24>>24<0;y=0;oa(73,(f[P>>2]|0)+-24|0,(j?f[R>>2]|0:R)|0,(j?f[A>>2]|0:X&255)|0)|0;X=y;y=0;if(X&1){W=40;break c}zta(R);X=(f[P>>2]|0)+-24|0;f[S>>2]=f[k>>2];y=0;ya(146,R|0,X|0,S|0);X=y;y=0;if(X&1){W=42;break c}e=f[O>>2]|0;if(e>>>0>=(f[o>>2]|0)>>>0){y=0;ja(2055,l|0,R|0);X=y;y=0;if(X&1){W=43;break c}}else{f[e+12>>2]=f[B>>2];f[e>>2]=f[R>>2];f[e+4>>2]=f[C>>2];f[e+8>>2]=f[D>>2];f[D>>2]=0;f[C>>2]=0;f[R>>2]=0;f[O>>2]=(f[O>>2]|0)+16}tM(R)}zta(V);j=1;e=i;continue c}else if((W|0)==48){W=0;i=ih(e,c,d)|0;if((i|0)==(e|0)|(i|0)==(c|0))break b;HL(V,(f[P>>2]|0)+-24|0);h=f[P>>2]|0;e=h+-24|0;g=h;while(1){if((g|0)==(e|0))break;X=g+-24|0;f[P>>2]=X;Xka(X);g=f[P>>2]|0}g=h+-48|0;e=b[g+11>>0]|0;if(e<<24>>24<0)e=f[h+-44>>2]|0;else e=e&255;if(!e){y=0;ja(2063,g|0,V|0);X=y;y=0;if(X&1){W=59;break c}}else{y=0;ya(149,R|0,72157,V|0);X=y;y=0;if(X&1){W=60;break c}X=b[H>>0]|0;j=X<<24>>24<0;y=0;oa(73,(f[P>>2]|0)+-24|0,(j?f[R>>2]|0:R)|0,(j?f[I>>2]|0:X&255)|0)|0;X=y;y=0;if(X&1){W=61;break c}zta(R)}X=(f[P>>2]|0)+-24|0;f[S>>2]=f[k>>2];y=0;ya(146,R|0,X|0,S|0);X=y;y=0;if(X&1){W=69;break c}e=f[O>>2]|0;if(e>>>0>=(f[o>>2]|0)>>>0){y=0;ja(2055,l|0,R|0);X=y;y=0;if(X&1){W=70;break c}}else{f[e+12>>2]=f[E>>2];f[e>>2]=f[R>>2];f[e+4>>2]=f[F>>2];f[e+8>>2]=f[G>>2];f[G>>2]=0;f[F>>2]=0;f[R>>2]=0;f[O>>2]=(f[O>>2]|0)+16}tM(R);zta(V);j=1;e=i;continue c}else if((W|0)==73){W=0;if((h|0)!=(c|0))switch(b[h>>0]|0){case 84:case 116:break;default:break e}i=Wl(e,c,d)|0;if((i|0)==(e|0)|(i|0)==(c|0))break b;HL(V,(f[P>>2]|0)+-24|0);h=f[P>>2]|0;e=h+-24|0;g=h;while(1){if((g|0)==(e|0))break;X=g+-24|0;f[P>>2]=X;Xka(X);g=f[P>>2]|0}g=h+-48|0;e=b[g+11>>0]|0;if(e<<24>>24<0)e=f[h+-44>>2]|0;else e=e&255;if(!e){y=0;ja(2063,g|0,V|0);X=y;y=0;if(X&1){W=86;break c}}else{y=0;ya(149,R|0,72157,V|0);X=y;y=0;if(X&1){W=87;break c}X=b[M>>0]|0;j=X<<24>>24<0;y=0;oa(73,(f[P>>2]|0)+-24|0,(j?f[R>>2]|0:R)|0,(j?f[N>>2]|0:X&255)|0)|0;X=y;y=0;if(X&1){W=88;break c}zta(R)}X=(f[P>>2]|0)+-24|0;f[S>>2]=f[k>>2];y=0;ya(146,R|0,X|0,S|0);X=y;y=0;if(X&1){W=96;break c}e=f[O>>2]|0;if(e>>>0>=(f[o>>2]|0)>>>0){y=0;ja(2055,l|0,R|0);X=y;y=0;if(X&1){W=97;break c}}else{f[e+12>>2]=f[J>>2];f[e>>2]=f[R>>2];f[e+4>>2]=f[K>>2];f[e+8>>2]=f[L>>2];f[L>>2]=0;f[K>>2]=0;f[R>>2]=0;f[O>>2]=(f[O>>2]|0)+16}tM(R);zta(V);j=1;e=i;continue c}while(0);i=vD(e,c,d)|0;if((i|0)==(e|0)|(i|0)==(c|0))break b;HL(V,(f[P>>2]|0)+-24|0);h=f[P>>2]|0;e=h+-24|0;g=h;while(1){if((g|0)==(e|0))break;X=g+-24|0;f[P>>2]=X;Xka(X);g=f[P>>2]|0}g=h+-48|0;e=b[g+11>>0]|0;if(e<<24>>24<0)e=f[h+-44>>2]|0;else e=e&255;if(!e){y=0;ja(2063,g|0,V|0);X=y;y=0;if(X&1){W=127;break}}else{y=0;ya(149,R|0,72157,V|0);X=y;y=0;if(X&1){W=128;break}X=b[w>>0]|0;j=X<<24>>24<0;y=0;oa(73,(f[P>>2]|0)+-24|0,(j?f[R>>2]|0:R)|0,(j?f[x>>2]|0:X&255)|0)|0;X=y;y=0;if(X&1){W=129;break}zta(R)}X=(f[P>>2]|0)+-24|0;f[S>>2]=f[k>>2];y=0;ya(146,R|0,X|0,S|0);X=y;y=0;if(X&1){W=138;break}e=f[O>>2]|0;if(e>>>0>=(f[o>>2]|0)>>>0){y=0;ja(2055,l|0,R|0);X=y;y=0;if(X&1){W=139;break}}else{f[e+12>>2]=f[s>>2];f[e>>2]=f[R>>2];f[e+4>>2]=f[t>>2];f[e+8>>2]=f[v>>2];f[v>>2]=0;f[t>>2]=0;f[R>>2]=0;f[O>>2]=(f[O>>2]|0)+16}tM(R);zta(V);j=1;e=i}switch(W|0){case 38:{a=Pa()|0;W=47;break}case 39:{a=Pa()|0;W=41;break}case 40:{a=Pa()|0;zta(R);W=41;break}case 42:{a=Pa()|0;W=44;break}case 43:{a=Pa()|0;tM(R);W=44;break}case 59:{a=Pa()|0;W=72;break}case 60:{a=Pa()|0;W=62;break}case 61:{a=Pa()|0;zta(R);W=62;break}case 69:{a=Pa()|0;W=71;break}case 70:{a=Pa()|0;tM(R);W=71;break}case 86:{a=Pa()|0;W=99;break}case 87:{a=Pa()|0;W=89;break}case 88:{a=Pa()|0;zta(R);W=89;break}case 96:{a=Pa()|0;W=98;break}case 97:{a=Pa()|0;tM(R);W=98;break}case 110:{a=Pa()|0;W=114;break}case 111:{a=Pa()|0;W=113;break}case 112:{a=Pa()|0;tM(R);W=113;break}case 127:{a=Pa()|0;W=141;break}case 128:{a=Pa()|0;W=130;break}case 129:{a=Pa()|0;zta(R);W=130;break}case 138:{a=Pa()|0;W=140;break}case 139:{a=Pa()|0;tM(R);W=140;break}case 143:{f[d+48>>2]=f[Q>>2];f:do if(j?(T=f[O>>2]|0,(f[l>>2]|0)!=(T|0)):0){e=T+-16|0;a=T;while(1){if((a|0)==(e|0))break f;X=a+-16|0;f[O>>2]=X;tM(X);a=f[O>>2]|0}}while(0);a=h;break a}}if((W|0)==41)W=47;else if((W|0)==44)W=47;else if((W|0)==62)W=72;else if((W|0)==71)W=72;else if((W|0)==89)W=99;else if((W|0)==98)W=99;else if((W|0)==113)W=114;else if((W|0)==130)W=141;else if((W|0)==140)W=141;if((W|0)==47)zta(V);else if((W|0)==72)zta(V);else if((W|0)==99)zta(V);else if((W|0)==114)zta(V);else if((W|0)==141)zta(V);$a(a|0)}while(0)}while(0);u=U;return a|0}function yc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;ia=u;u=u+864|0;ba=ia+840|0;d=ia+32|0;ca=ia+16|0;W=ia+824|0;X=ia+808|0;Y=ia+792|0;Z=ia+776|0;_=ia;h=ia+760|0;i=ia+744|0;j=ia+728|0;k=ia+712|0;l=ia+696|0;m=ia+680|0;n=ia+664|0;o=ia+648|0;p=ia+632|0;q=ia+616|0;r=ia+600|0;s=ia+584|0;t=ia+568|0;v=ia+552|0;w=ia+536|0;x=ia+520|0;y=ia+504|0;z=ia+488|0;A=ia+472|0;B=ia+456|0;C=ia+440|0;E=ia+424|0;F=ia+408|0;G=ia+392|0;H=ia+376|0;I=ia+360|0;K=ia+344|0;L=ia+328|0;M=ia+312|0;N=ia+296|0;O=ia+280|0;P=ia+264|0;Q=ia+248|0;R=ia+232|0;S=ia+216|0;T=ia+200|0;U=ia+184|0;V=ia+168|0;$=ia+152|0;aa=ia+136|0;da=ia+120|0;ea=ia+104|0;fa=ia+88|0;ga=ia+72|0;ha=ia+56|0;NM(d,b,f[c+12>>2]|0);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else{f[ca>>2]=f[d>>2];f[ca+4>>2]=f[d+4>>2];f[ca+8>>2]=f[d+8>>2];f[ca+12>>2]=f[d+12>>2];d=c+8|0;a:do switch(f[ca>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{rT(W,ca);f[ba>>2]=f[W>>2];f[ba+4>>2]=f[W+4>>2];f[ba+8>>2]=f[W+8>>2];f[ba+12>>2]=f[W+12>>2];oda(a,ba);break a}case 2:{_S(X,ca);f[ba>>2]=f[X>>2];f[ba+4>>2]=f[X+4>>2];f[ba+8>>2]=f[X+8>>2];f[ba+12>>2]=f[X+12>>2];oda(a,ba);break a}case 4:{FV(Y,ca);f[ba>>2]=f[Y>>2];f[ba+4>>2]=f[Y+4>>2];f[ba+8>>2]=f[Y+8>>2];f[ba+12>>2]=f[Y+12>>2];oda(a,ba);break a}case 20:{uAa(_,0);uAa(Z,(JD(ca,_)|0)&1);f[ba>>2]=f[Z>>2];f[ba+4>>2]=f[Z+4>>2];f[ba+8>>2]=f[Z+8>>2];f[ba+12>>2]=f[Z+12>>2];oda(a,ba);break a}case 45:{qja(h,ca);f[ba>>2]=f[h>>2];f[ba+4>>2]=f[h+4>>2];f[ba+8>>2]=f[h+8>>2];f[ba+12>>2]=f[h+12>>2];oda(a,ba);break a}case 22:{ufa(i,ca);f[ba>>2]=f[i>>2];f[ba+4>>2]=f[i+4>>2];f[ba+8>>2]=f[i+8>>2];f[ba+12>>2]=f[i+12>>2];oda(a,ba);break a}case 23:{zla(j,ca);f[ba>>2]=f[j>>2];f[ba+4>>2]=f[j+4>>2];f[ba+8>>2]=f[j+8>>2];f[ba+12>>2]=f[j+12>>2];oda(a,ba);break a}case 37:{sZ(k,ca);f[ba>>2]=f[k>>2];f[ba+4>>2]=f[k+4>>2];f[ba+8>>2]=f[k+8>>2];f[ba+12>>2]=f[k+12>>2];oda(a,ba);break a}case 38:{rZ(l,ca);f[ba>>2]=f[l>>2];f[ba+4>>2]=f[l+4>>2];f[ba+8>>2]=f[l+8>>2];f[ba+12>>2]=f[l+12>>2];oda(a,ba);break a}case 35:{z$(m,ca);f[ba>>2]=f[m>>2];f[ba+4>>2]=f[m+4>>2];f[ba+8>>2]=f[m+8>>2];f[ba+12>>2]=f[m+12>>2];oda(a,ba);break a}case 36:{y$(n,ca);f[ba>>2]=f[n>>2];f[ba+4>>2]=f[n+4>>2];f[ba+8>>2]=f[n+8>>2];f[ba+12>>2]=f[n+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 1:{rT(o,ca);f[ba>>2]=f[o>>2];f[ba+4>>2]=f[o+4>>2];f[ba+8>>2]=f[o+8>>2];f[ba+12>>2]=f[o+12>>2];oda(a,ba);break a}case 3:{_S(p,ca);f[ba>>2]=f[p>>2];f[ba+4>>2]=f[p+4>>2];f[ba+8>>2]=f[p+8>>2];f[ba+12>>2]=f[p+12>>2];oda(a,ba);break a}case 5:{FV(q,ca);f[ba>>2]=f[q>>2];f[ba+4>>2]=f[q+4>>2];f[ba+8>>2]=f[q+8>>2];f[ba+12>>2]=f[q+12>>2];oda(a,ba);break a}case 21:{Ysa(_,0,0);uAa(r,(JD(ca,_)|0)&1);f[ba>>2]=f[r>>2];f[ba+4>>2]=f[r+4>>2];f[ba+8>>2]=f[r+8>>2];f[ba+12>>2]=f[r+12>>2];oda(a,ba);break a}case 24:{ha=ca+8|0;yla(s,2,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[s>>2];f[ba+4>>2]=f[s+4>>2];f[ba+8>>2]=f[s+8>>2];f[ba+12>>2]=f[s+12>>2];oda(a,ba);break a}case 46:{Bca(t,ca);f[ba>>2]=f[t>>2];f[ba+4>>2]=f[t+4>>2];f[ba+8>>2]=f[t+8>>2];f[ba+12>>2]=f[t+12>>2];oda(a,ba);break a}case 41:{sZ(v,ca);f[ba>>2]=f[v>>2];f[ba+4>>2]=f[v+4>>2];f[ba+8>>2]=f[v+8>>2];f[ba+12>>2]=f[v+12>>2];oda(a,ba);break a}case 42:{rZ(w,ca);f[ba>>2]=f[w>>2];f[ba+4>>2]=f[w+4>>2];f[ba+8>>2]=f[w+8>>2];f[ba+12>>2]=f[w+12>>2];oda(a,ba);break a}case 39:{z$(x,ca);f[ba>>2]=f[x>>2];f[ba+4>>2]=f[x+4>>2];f[ba+8>>2]=f[x+8>>2];f[ba+12>>2]=f[x+12>>2];oda(a,ba);break a}case 40:{y$(y,ca);f[ba>>2]=f[y>>2];f[ba+4>>2]=f[y+4>>2];f[ba+8>>2]=f[y+8>>2];f[ba+12>>2]=f[y+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 3:{do switch(f[d>>2]|0){case 6:{lI(z,ca);f[ba>>2]=f[z>>2];f[ba+4>>2]=f[z+4>>2];f[ba+8>>2]=f[z+8>>2];f[ba+12>>2]=f[z+12>>2];oda(a,ba);break a}case 8:{mI(A,ca);f[ba>>2]=f[A>>2];f[ba+4>>2]=f[A+4>>2];f[ba+8>>2]=f[A+8>>2];f[ba+12>>2]=f[A+12>>2];oda(a,ba);break a}case 10:{w3(B,ca);f[ba>>2]=f[B>>2];f[ba+4>>2]=f[B+4>>2];f[ba+8>>2]=f[B+8>>2];f[ba+12>>2]=f[B+12>>2];oda(a,ba);break a}case 12:{g3(C,ca);f[ba>>2]=f[C>>2];f[ba+4>>2]=f[C+4>>2];f[ba+8>>2]=f[C+8>>2];f[ba+12>>2]=f[C+12>>2];oda(a,ba);break a}case 14:{k4(E,ca);f[ba>>2]=f[E>>2];f[ba+4>>2]=f[E+4>>2];f[ba+8>>2]=f[E+8>>2];f[ba+12>>2]=f[E+12>>2];oda(a,ba);break a}case 16:{k3(F,ca);f[ba>>2]=f[F>>2];f[ba+4>>2]=f[F+4>>2];f[ba+8>>2]=f[F+8>>2];f[ba+12>>2]=f[F+12>>2];oda(a,ba);break a}case 18:{v3(G,ca);f[ba>>2]=f[G>>2];f[ba+4>>2]=f[G+4>>2];f[ba+8>>2]=f[G+8>>2];f[ba+12>>2]=f[G+12>>2];oda(a,ba);break a}case 26:case 25:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(H,b,c,ba);f[ba>>2]=f[H>>2];f[ba+4>>2]=f[H+4>>2];f[ba+8>>2]=f[H+8>>2];f[ba+12>>2]=f[H+12>>2];oda(a,ba);break a}case 28:case 27:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(I,b,c,ba);f[ba>>2]=f[I>>2];f[ba+4>>2]=f[I+4>>2];f[ba+8>>2]=f[I+8>>2];f[ba+12>>2]=f[I+12>>2];oda(a,ba);break a}case 33:{pja(K,ca);f[ba>>2]=f[K>>2];f[ba+4>>2]=f[K+4>>2];f[ba+8>>2]=f[K+8>>2];f[ba+12>>2]=f[K+12>>2];oda(a,ba);break a}case 43:{Fka(L,ca);f[ba>>2]=f[L>>2];f[ba+4>>2]=f[L+4>>2];f[ba+8>>2]=f[L+8>>2];f[ba+12>>2]=f[L+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 4:{do switch(f[d>>2]|0){case 7:{lI(M,ca);f[ba>>2]=f[M>>2];f[ba+4>>2]=f[M+4>>2];f[ba+8>>2]=f[M+8>>2];f[ba+12>>2]=f[M+12>>2];oda(a,ba);break a}case 9:{mI(N,ca);f[ba>>2]=f[N>>2];f[ba+4>>2]=f[N+4>>2];f[ba+8>>2]=f[N+8>>2];f[ba+12>>2]=f[N+12>>2];oda(a,ba);break a}case 11:{w3(O,ca);f[ba>>2]=f[O>>2];f[ba+4>>2]=f[O+4>>2];f[ba+8>>2]=f[O+8>>2];f[ba+12>>2]=f[O+12>>2];oda(a,ba);break a}case 13:{g3(P,ca);f[ba>>2]=f[P>>2];f[ba+4>>2]=f[P+4>>2];f[ba+8>>2]=f[P+8>>2];f[ba+12>>2]=f[P+12>>2];oda(a,ba);break a}case 15:{k4(Q,ca);f[ba>>2]=f[Q>>2];f[ba+4>>2]=f[Q+4>>2];f[ba+8>>2]=f[Q+8>>2];f[ba+12>>2]=f[Q+12>>2];oda(a,ba);break a}case 17:{k3(R,ca);f[ba>>2]=f[R>>2];f[ba+4>>2]=f[R+4>>2];f[ba+8>>2]=f[R+8>>2];f[ba+12>>2]=f[R+12>>2];oda(a,ba);break a}case 19:{v3(S,ca);f[ba>>2]=f[S>>2];f[ba+4>>2]=f[S+4>>2];f[ba+8>>2]=f[S+8>>2];f[ba+12>>2]=f[S+12>>2];oda(a,ba);break a}case 30:case 29:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(T,b,c,ba);f[ba>>2]=f[T>>2];f[ba+4>>2]=f[T+4>>2];f[ba+8>>2]=f[T+8>>2];f[ba+12>>2]=f[T+12>>2];oda(a,ba);break a}case 32:case 31:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(U,b,c,ba);f[ba>>2]=f[U>>2];f[ba+4>>2]=f[U+4>>2];f[ba+8>>2]=f[U+8>>2];f[ba+12>>2]=f[U+12>>2];oda(a,ba);break a}case 34:{ha=ca+8|0;aia(V,4,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[V>>2];f[ba+4>>2]=f[V+4>>2];f[ba+8>>2]=f[V+8>>2];f[ba+12>>2]=f[V+12>>2];oda(a,ba);break a}case 44:{g=+qda(ca);d=Mra(g)|0;b=J&2147483647;e=g;if(b>>>0>2146435072|(b|0)==2146435072&d>>>0>0){tda($,e);f[ba>>2]=f[$>>2];f[ba+4>>2]=f[$+4>>2];f[ba+8>>2]=f[$+8>>2];f[ba+12>>2]=f[$+12>>2];oda(a,ba);break a}if((d|0)==0&(b|0)==2146435072){tda(aa,e);f[ba>>2]=f[aa>>2];f[ba+4>>2]=f[aa+4>>2];f[ba+8>>2]=f[aa+8>>2];f[ba+12>>2]=f[aa+12>>2];oda(a,ba);break a}d=oja(ca)|0;b=J;aa=Hsa(d|0,b|0,536870911,-1206910976)|0;$=J;if($>>>0<0|($|0)==0&aa>>>0<268435455){tda(da,3402823466385288598117041.0e14);f[ba>>2]=f[da>>2];f[ba+4>>2]=f[da+4>>2];f[ba+8>>2]=f[da+8>>2];f[ba+12>>2]=f[da+12>>2];oda(a,ba);break a}da=Hsa(d|0,b|0,536870911,940572672)|0;aa=J;if(aa>>>0<0|(aa|0)==0&da>>>0<268435455){tda(ea,-3402823466385288598117041.0e14);f[ba>>2]=f[ea>>2];f[ba+4>>2]=f[ea+4>>2];f[ba+8>>2]=f[ea+8>>2];f[ba+12>>2]=f[ea+12>>2];oda(a,ba);break a}if(g<-3402823466385288598117041.0e14){tda(fa,-D);f[ba>>2]=f[fa>>2];f[ba+4>>2]=f[fa+4>>2];f[ba+8>>2]=f[fa+8>>2];f[ba+12>>2]=f[fa+12>>2];oda(a,ba);break a}if(g>3402823466385288598117041.0e14){tda(ga,D);f[ba>>2]=f[ga>>2];f[ba+4>>2]=f[ga+4>>2];f[ba+8>>2]=f[ga+8>>2];f[ba+12>>2]=f[ga+12>>2];oda(a,ba);break a}else{fka(ha,ca);f[ba>>2]=f[ha>>2];f[ba+4>>2]=f[ha+4>>2];f[ba+8>>2]=f[ha+8>>2];f[ba+12>>2]=f[ha+12>>2];oda(a,ba);break a}}default:Ka()}while(0);break}default:Ka()}while(0)}u=ia;return}function zc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;ia=u;u=u+864|0;ba=ia+840|0;d=ia+32|0;ca=ia+16|0;W=ia+824|0;X=ia+808|0;Y=ia+792|0;Z=ia+776|0;_=ia;h=ia+760|0;i=ia+744|0;j=ia+728|0;k=ia+712|0;l=ia+696|0;m=ia+680|0;n=ia+664|0;o=ia+648|0;p=ia+632|0;q=ia+616|0;r=ia+600|0;s=ia+584|0;t=ia+568|0;v=ia+552|0;w=ia+536|0;x=ia+520|0;y=ia+504|0;z=ia+488|0;A=ia+472|0;B=ia+456|0;C=ia+440|0;E=ia+424|0;F=ia+408|0;G=ia+392|0;H=ia+376|0;I=ia+360|0;K=ia+344|0;L=ia+328|0;M=ia+312|0;N=ia+296|0;O=ia+280|0;P=ia+264|0;Q=ia+248|0;R=ia+232|0;S=ia+216|0;T=ia+200|0;U=ia+184|0;V=ia+168|0;$=ia+152|0;aa=ia+136|0;da=ia+120|0;ea=ia+104|0;fa=ia+88|0;ga=ia+72|0;ha=ia+56|0;YX(d,b,f[c+12>>2]|0);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else{f[ca>>2]=f[d>>2];f[ca+4>>2]=f[d+4>>2];f[ca+8>>2]=f[d+8>>2];f[ca+12>>2]=f[d+12>>2];d=c+8|0;a:do switch(f[ca>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{rT(W,ca);f[ba>>2]=f[W>>2];f[ba+4>>2]=f[W+4>>2];f[ba+8>>2]=f[W+8>>2];f[ba+12>>2]=f[W+12>>2];oda(a,ba);break a}case 2:{_S(X,ca);f[ba>>2]=f[X>>2];f[ba+4>>2]=f[X+4>>2];f[ba+8>>2]=f[X+8>>2];f[ba+12>>2]=f[X+12>>2];oda(a,ba);break a}case 4:{FV(Y,ca);f[ba>>2]=f[Y>>2];f[ba+4>>2]=f[Y+4>>2];f[ba+8>>2]=f[Y+8>>2];f[ba+12>>2]=f[Y+12>>2];oda(a,ba);break a}case 20:{uAa(_,0);uAa(Z,(JD(ca,_)|0)&1);f[ba>>2]=f[Z>>2];f[ba+4>>2]=f[Z+4>>2];f[ba+8>>2]=f[Z+8>>2];f[ba+12>>2]=f[Z+12>>2];oda(a,ba);break a}case 45:{qja(h,ca);f[ba>>2]=f[h>>2];f[ba+4>>2]=f[h+4>>2];f[ba+8>>2]=f[h+8>>2];f[ba+12>>2]=f[h+12>>2];oda(a,ba);break a}case 22:{ufa(i,ca);f[ba>>2]=f[i>>2];f[ba+4>>2]=f[i+4>>2];f[ba+8>>2]=f[i+8>>2];f[ba+12>>2]=f[i+12>>2];oda(a,ba);break a}case 23:{zla(j,ca);f[ba>>2]=f[j>>2];f[ba+4>>2]=f[j+4>>2];f[ba+8>>2]=f[j+8>>2];f[ba+12>>2]=f[j+12>>2];oda(a,ba);break a}case 37:{sZ(k,ca);f[ba>>2]=f[k>>2];f[ba+4>>2]=f[k+4>>2];f[ba+8>>2]=f[k+8>>2];f[ba+12>>2]=f[k+12>>2];oda(a,ba);break a}case 38:{rZ(l,ca);f[ba>>2]=f[l>>2];f[ba+4>>2]=f[l+4>>2];f[ba+8>>2]=f[l+8>>2];f[ba+12>>2]=f[l+12>>2];oda(a,ba);break a}case 35:{z$(m,ca);f[ba>>2]=f[m>>2];f[ba+4>>2]=f[m+4>>2];f[ba+8>>2]=f[m+8>>2];f[ba+12>>2]=f[m+12>>2];oda(a,ba);break a}case 36:{y$(n,ca);f[ba>>2]=f[n>>2];f[ba+4>>2]=f[n+4>>2];f[ba+8>>2]=f[n+8>>2];f[ba+12>>2]=f[n+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 1:{rT(o,ca);f[ba>>2]=f[o>>2];f[ba+4>>2]=f[o+4>>2];f[ba+8>>2]=f[o+8>>2];f[ba+12>>2]=f[o+12>>2];oda(a,ba);break a}case 3:{_S(p,ca);f[ba>>2]=f[p>>2];f[ba+4>>2]=f[p+4>>2];f[ba+8>>2]=f[p+8>>2];f[ba+12>>2]=f[p+12>>2];oda(a,ba);break a}case 5:{FV(q,ca);f[ba>>2]=f[q>>2];f[ba+4>>2]=f[q+4>>2];f[ba+8>>2]=f[q+8>>2];f[ba+12>>2]=f[q+12>>2];oda(a,ba);break a}case 21:{Ysa(_,0,0);uAa(r,(JD(ca,_)|0)&1);f[ba>>2]=f[r>>2];f[ba+4>>2]=f[r+4>>2];f[ba+8>>2]=f[r+8>>2];f[ba+12>>2]=f[r+12>>2];oda(a,ba);break a}case 24:{ha=ca+8|0;yla(s,2,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[s>>2];f[ba+4>>2]=f[s+4>>2];f[ba+8>>2]=f[s+8>>2];f[ba+12>>2]=f[s+12>>2];oda(a,ba);break a}case 46:{Bca(t,ca);f[ba>>2]=f[t>>2];f[ba+4>>2]=f[t+4>>2];f[ba+8>>2]=f[t+8>>2];f[ba+12>>2]=f[t+12>>2];oda(a,ba);break a}case 41:{sZ(v,ca);f[ba>>2]=f[v>>2];f[ba+4>>2]=f[v+4>>2];f[ba+8>>2]=f[v+8>>2];f[ba+12>>2]=f[v+12>>2];oda(a,ba);break a}case 42:{rZ(w,ca);f[ba>>2]=f[w>>2];f[ba+4>>2]=f[w+4>>2];f[ba+8>>2]=f[w+8>>2];f[ba+12>>2]=f[w+12>>2];oda(a,ba);break a}case 39:{z$(x,ca);f[ba>>2]=f[x>>2];f[ba+4>>2]=f[x+4>>2];f[ba+8>>2]=f[x+8>>2];f[ba+12>>2]=f[x+12>>2];oda(a,ba);break a}case 40:{y$(y,ca);f[ba>>2]=f[y>>2];f[ba+4>>2]=f[y+4>>2];f[ba+8>>2]=f[y+8>>2];f[ba+12>>2]=f[y+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 3:{do switch(f[d>>2]|0){case 6:{lI(z,ca);f[ba>>2]=f[z>>2];f[ba+4>>2]=f[z+4>>2];f[ba+8>>2]=f[z+8>>2];f[ba+12>>2]=f[z+12>>2];oda(a,ba);break a}case 8:{mI(A,ca);f[ba>>2]=f[A>>2];f[ba+4>>2]=f[A+4>>2];f[ba+8>>2]=f[A+8>>2];f[ba+12>>2]=f[A+12>>2];oda(a,ba);break a}case 10:{w3(B,ca);f[ba>>2]=f[B>>2];f[ba+4>>2]=f[B+4>>2];f[ba+8>>2]=f[B+8>>2];f[ba+12>>2]=f[B+12>>2];oda(a,ba);break a}case 12:{g3(C,ca);f[ba>>2]=f[C>>2];f[ba+4>>2]=f[C+4>>2];f[ba+8>>2]=f[C+8>>2];f[ba+12>>2]=f[C+12>>2];oda(a,ba);break a}case 14:{k4(E,ca);f[ba>>2]=f[E>>2];f[ba+4>>2]=f[E+4>>2];f[ba+8>>2]=f[E+8>>2];f[ba+12>>2]=f[E+12>>2];oda(a,ba);break a}case 16:{k3(F,ca);f[ba>>2]=f[F>>2];f[ba+4>>2]=f[F+4>>2];f[ba+8>>2]=f[F+8>>2];f[ba+12>>2]=f[F+12>>2];oda(a,ba);break a}case 18:{v3(G,ca);f[ba>>2]=f[G>>2];f[ba+4>>2]=f[G+4>>2];f[ba+8>>2]=f[G+8>>2];f[ba+12>>2]=f[G+12>>2];oda(a,ba);break a}case 26:case 25:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(H,b,c,ba);f[ba>>2]=f[H>>2];f[ba+4>>2]=f[H+4>>2];f[ba+8>>2]=f[H+8>>2];f[ba+12>>2]=f[H+12>>2];oda(a,ba);break a}case 28:case 27:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(I,b,c,ba);f[ba>>2]=f[I>>2];f[ba+4>>2]=f[I+4>>2];f[ba+8>>2]=f[I+8>>2];f[ba+12>>2]=f[I+12>>2];oda(a,ba);break a}case 33:{pja(K,ca);f[ba>>2]=f[K>>2];f[ba+4>>2]=f[K+4>>2];f[ba+8>>2]=f[K+8>>2];f[ba+12>>2]=f[K+12>>2];oda(a,ba);break a}case 43:{Fka(L,ca);f[ba>>2]=f[L>>2];f[ba+4>>2]=f[L+4>>2];f[ba+8>>2]=f[L+8>>2];f[ba+12>>2]=f[L+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 4:{do switch(f[d>>2]|0){case 7:{lI(M,ca);f[ba>>2]=f[M>>2];f[ba+4>>2]=f[M+4>>2];f[ba+8>>2]=f[M+8>>2];f[ba+12>>2]=f[M+12>>2];oda(a,ba);break a}case 9:{mI(N,ca);f[ba>>2]=f[N>>2];f[ba+4>>2]=f[N+4>>2];f[ba+8>>2]=f[N+8>>2];f[ba+12>>2]=f[N+12>>2];oda(a,ba);break a}case 11:{w3(O,ca);f[ba>>2]=f[O>>2];f[ba+4>>2]=f[O+4>>2];f[ba+8>>2]=f[O+8>>2];f[ba+12>>2]=f[O+12>>2];oda(a,ba);break a}case 13:{g3(P,ca);f[ba>>2]=f[P>>2];f[ba+4>>2]=f[P+4>>2];f[ba+8>>2]=f[P+8>>2];f[ba+12>>2]=f[P+12>>2];oda(a,ba);break a}case 15:{k4(Q,ca);f[ba>>2]=f[Q>>2];f[ba+4>>2]=f[Q+4>>2];f[ba+8>>2]=f[Q+8>>2];f[ba+12>>2]=f[Q+12>>2];oda(a,ba);break a}case 17:{k3(R,ca);f[ba>>2]=f[R>>2];f[ba+4>>2]=f[R+4>>2];f[ba+8>>2]=f[R+8>>2];f[ba+12>>2]=f[R+12>>2];oda(a,ba);break a}case 19:{v3(S,ca);f[ba>>2]=f[S>>2];f[ba+4>>2]=f[S+4>>2];f[ba+8>>2]=f[S+8>>2];f[ba+12>>2]=f[S+12>>2];oda(a,ba);break a}case 30:case 29:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(T,b,c,ba);f[ba>>2]=f[T>>2];f[ba+4>>2]=f[T+4>>2];f[ba+8>>2]=f[T+8>>2];f[ba+12>>2]=f[T+12>>2];oda(a,ba);break a}case 32:case 31:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(U,b,c,ba);f[ba>>2]=f[U>>2];f[ba+4>>2]=f[U+4>>2];f[ba+8>>2]=f[U+8>>2];f[ba+12>>2]=f[U+12>>2];oda(a,ba);break a}case 34:{ha=ca+8|0;aia(V,4,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[V>>2];f[ba+4>>2]=f[V+4>>2];f[ba+8>>2]=f[V+8>>2];f[ba+12>>2]=f[V+12>>2];oda(a,ba);break a}case 44:{g=+qda(ca);d=Mra(g)|0;b=J&2147483647;e=g;if(b>>>0>2146435072|(b|0)==2146435072&d>>>0>0){tda($,e);f[ba>>2]=f[$>>2];f[ba+4>>2]=f[$+4>>2];f[ba+8>>2]=f[$+8>>2];f[ba+12>>2]=f[$+12>>2];oda(a,ba);break a}if((d|0)==0&(b|0)==2146435072){tda(aa,e);f[ba>>2]=f[aa>>2];f[ba+4>>2]=f[aa+4>>2];f[ba+8>>2]=f[aa+8>>2];f[ba+12>>2]=f[aa+12>>2];oda(a,ba);break a}d=oja(ca)|0;b=J;aa=Hsa(d|0,b|0,536870911,-1206910976)|0;$=J;if($>>>0<0|($|0)==0&aa>>>0<268435455){tda(da,3402823466385288598117041.0e14);f[ba>>2]=f[da>>2];f[ba+4>>2]=f[da+4>>2];f[ba+8>>2]=f[da+8>>2];f[ba+12>>2]=f[da+12>>2];oda(a,ba);break a}da=Hsa(d|0,b|0,536870911,940572672)|0;aa=J;if(aa>>>0<0|(aa|0)==0&da>>>0<268435455){tda(ea,-3402823466385288598117041.0e14);f[ba>>2]=f[ea>>2];f[ba+4>>2]=f[ea+4>>2];f[ba+8>>2]=f[ea+8>>2];f[ba+12>>2]=f[ea+12>>2];oda(a,ba);break a}if(g<-3402823466385288598117041.0e14){tda(fa,-D);f[ba>>2]=f[fa>>2];f[ba+4>>2]=f[fa+4>>2];f[ba+8>>2]=f[fa+8>>2];f[ba+12>>2]=f[fa+12>>2];oda(a,ba);break a}if(g>3402823466385288598117041.0e14){tda(ga,D);f[ba>>2]=f[ga>>2];f[ba+4>>2]=f[ga+4>>2];f[ba+8>>2]=f[ga+8>>2];f[ba+12>>2]=f[ga+12>>2];oda(a,ba);break a}else{fka(ha,ca);f[ba>>2]=f[ha>>2];f[ba+4>>2]=f[ha+4>>2];f[ba+8>>2]=f[ha+8>>2];f[ba+12>>2]=f[ha+12>>2];oda(a,ba);break a}}default:Ka()}while(0);break}default:Ka()}while(0)}u=ia;return}function Ac(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;ia=u;u=u+864|0;ba=ia+840|0;d=ia+32|0;ca=ia+16|0;W=ia+824|0;X=ia+808|0;Y=ia+792|0;Z=ia+776|0;_=ia;h=ia+760|0;i=ia+744|0;j=ia+728|0;k=ia+712|0;l=ia+696|0;m=ia+680|0;n=ia+664|0;o=ia+648|0;p=ia+632|0;q=ia+616|0;r=ia+600|0;s=ia+584|0;t=ia+568|0;v=ia+552|0;w=ia+536|0;x=ia+520|0;y=ia+504|0;z=ia+488|0;A=ia+472|0;B=ia+456|0;C=ia+440|0;E=ia+424|0;F=ia+408|0;G=ia+392|0;H=ia+376|0;I=ia+360|0;K=ia+344|0;L=ia+328|0;M=ia+312|0;N=ia+296|0;O=ia+280|0;P=ia+264|0;Q=ia+248|0;R=ia+232|0;S=ia+216|0;T=ia+200|0;U=ia+184|0;V=ia+168|0;$=ia+152|0;aa=ia+136|0;da=ia+120|0;ea=ia+104|0;fa=ia+88|0;ga=ia+72|0;ha=ia+56|0;Aia(d,b,f[c+12>>2]|0);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else{f[ca>>2]=f[d>>2];f[ca+4>>2]=f[d+4>>2];f[ca+8>>2]=f[d+8>>2];f[ca+12>>2]=f[d+12>>2];d=c+8|0;a:do switch(f[ca>>2]|0){case 1:{do switch(f[d>>2]|0){case 0:{rT(W,ca);f[ba>>2]=f[W>>2];f[ba+4>>2]=f[W+4>>2];f[ba+8>>2]=f[W+8>>2];f[ba+12>>2]=f[W+12>>2];oda(a,ba);break a}case 2:{_S(X,ca);f[ba>>2]=f[X>>2];f[ba+4>>2]=f[X+4>>2];f[ba+8>>2]=f[X+8>>2];f[ba+12>>2]=f[X+12>>2];oda(a,ba);break a}case 4:{FV(Y,ca);f[ba>>2]=f[Y>>2];f[ba+4>>2]=f[Y+4>>2];f[ba+8>>2]=f[Y+8>>2];f[ba+12>>2]=f[Y+12>>2];oda(a,ba);break a}case 20:{uAa(_,0);uAa(Z,(JD(ca,_)|0)&1);f[ba>>2]=f[Z>>2];f[ba+4>>2]=f[Z+4>>2];f[ba+8>>2]=f[Z+8>>2];f[ba+12>>2]=f[Z+12>>2];oda(a,ba);break a}case 45:{qja(h,ca);f[ba>>2]=f[h>>2];f[ba+4>>2]=f[h+4>>2];f[ba+8>>2]=f[h+8>>2];f[ba+12>>2]=f[h+12>>2];oda(a,ba);break a}case 22:{ufa(i,ca);f[ba>>2]=f[i>>2];f[ba+4>>2]=f[i+4>>2];f[ba+8>>2]=f[i+8>>2];f[ba+12>>2]=f[i+12>>2];oda(a,ba);break a}case 23:{zla(j,ca);f[ba>>2]=f[j>>2];f[ba+4>>2]=f[j+4>>2];f[ba+8>>2]=f[j+8>>2];f[ba+12>>2]=f[j+12>>2];oda(a,ba);break a}case 37:{sZ(k,ca);f[ba>>2]=f[k>>2];f[ba+4>>2]=f[k+4>>2];f[ba+8>>2]=f[k+8>>2];f[ba+12>>2]=f[k+12>>2];oda(a,ba);break a}case 38:{rZ(l,ca);f[ba>>2]=f[l>>2];f[ba+4>>2]=f[l+4>>2];f[ba+8>>2]=f[l+8>>2];f[ba+12>>2]=f[l+12>>2];oda(a,ba);break a}case 35:{z$(m,ca);f[ba>>2]=f[m>>2];f[ba+4>>2]=f[m+4>>2];f[ba+8>>2]=f[m+8>>2];f[ba+12>>2]=f[m+12>>2];oda(a,ba);break a}case 36:{y$(n,ca);f[ba>>2]=f[n>>2];f[ba+4>>2]=f[n+4>>2];f[ba+8>>2]=f[n+8>>2];f[ba+12>>2]=f[n+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 2:{do switch(f[d>>2]|0){case 1:{rT(o,ca);f[ba>>2]=f[o>>2];f[ba+4>>2]=f[o+4>>2];f[ba+8>>2]=f[o+8>>2];f[ba+12>>2]=f[o+12>>2];oda(a,ba);break a}case 3:{_S(p,ca);f[ba>>2]=f[p>>2];f[ba+4>>2]=f[p+4>>2];f[ba+8>>2]=f[p+8>>2];f[ba+12>>2]=f[p+12>>2];oda(a,ba);break a}case 5:{FV(q,ca);f[ba>>2]=f[q>>2];f[ba+4>>2]=f[q+4>>2];f[ba+8>>2]=f[q+8>>2];f[ba+12>>2]=f[q+12>>2];oda(a,ba);break a}case 21:{Ysa(_,0,0);uAa(r,(JD(ca,_)|0)&1);f[ba>>2]=f[r>>2];f[ba+4>>2]=f[r+4>>2];f[ba+8>>2]=f[r+8>>2];f[ba+12>>2]=f[r+12>>2];oda(a,ba);break a}case 24:{ha=ca+8|0;yla(s,2,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[s>>2];f[ba+4>>2]=f[s+4>>2];f[ba+8>>2]=f[s+8>>2];f[ba+12>>2]=f[s+12>>2];oda(a,ba);break a}case 46:{Bca(t,ca);f[ba>>2]=f[t>>2];f[ba+4>>2]=f[t+4>>2];f[ba+8>>2]=f[t+8>>2];f[ba+12>>2]=f[t+12>>2];oda(a,ba);break a}case 41:{sZ(v,ca);f[ba>>2]=f[v>>2];f[ba+4>>2]=f[v+4>>2];f[ba+8>>2]=f[v+8>>2];f[ba+12>>2]=f[v+12>>2];oda(a,ba);break a}case 42:{rZ(w,ca);f[ba>>2]=f[w>>2];f[ba+4>>2]=f[w+4>>2];f[ba+8>>2]=f[w+8>>2];f[ba+12>>2]=f[w+12>>2];oda(a,ba);break a}case 39:{z$(x,ca);f[ba>>2]=f[x>>2];f[ba+4>>2]=f[x+4>>2];f[ba+8>>2]=f[x+8>>2];f[ba+12>>2]=f[x+12>>2];oda(a,ba);break a}case 40:{y$(y,ca);f[ba>>2]=f[y>>2];f[ba+4>>2]=f[y+4>>2];f[ba+8>>2]=f[y+8>>2];f[ba+12>>2]=f[y+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 3:{do switch(f[d>>2]|0){case 6:{lI(z,ca);f[ba>>2]=f[z>>2];f[ba+4>>2]=f[z+4>>2];f[ba+8>>2]=f[z+8>>2];f[ba+12>>2]=f[z+12>>2];oda(a,ba);break a}case 8:{mI(A,ca);f[ba>>2]=f[A>>2];f[ba+4>>2]=f[A+4>>2];f[ba+8>>2]=f[A+8>>2];f[ba+12>>2]=f[A+12>>2];oda(a,ba);break a}case 10:{w3(B,ca);f[ba>>2]=f[B>>2];f[ba+4>>2]=f[B+4>>2];f[ba+8>>2]=f[B+8>>2];f[ba+12>>2]=f[B+12>>2];oda(a,ba);break a}case 12:{g3(C,ca);f[ba>>2]=f[C>>2];f[ba+4>>2]=f[C+4>>2];f[ba+8>>2]=f[C+8>>2];f[ba+12>>2]=f[C+12>>2];oda(a,ba);break a}case 14:{k4(E,ca);f[ba>>2]=f[E>>2];f[ba+4>>2]=f[E+4>>2];f[ba+8>>2]=f[E+8>>2];f[ba+12>>2]=f[E+12>>2];oda(a,ba);break a}case 16:{k3(F,ca);f[ba>>2]=f[F>>2];f[ba+4>>2]=f[F+4>>2];f[ba+8>>2]=f[F+8>>2];f[ba+12>>2]=f[F+12>>2];oda(a,ba);break a}case 18:{v3(G,ca);f[ba>>2]=f[G>>2];f[ba+4>>2]=f[G+4>>2];f[ba+8>>2]=f[G+8>>2];f[ba+12>>2]=f[G+12>>2];oda(a,ba);break a}case 26:case 25:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(H,b,c,ba);f[ba>>2]=f[H>>2];f[ba+4>>2]=f[H+4>>2];f[ba+8>>2]=f[H+8>>2];f[ba+12>>2]=f[H+12>>2];oda(a,ba);break a}case 28:case 27:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(I,b,c,ba);f[ba>>2]=f[I>>2];f[ba+4>>2]=f[I+4>>2];f[ba+8>>2]=f[I+8>>2];f[ba+12>>2]=f[I+12>>2];oda(a,ba);break a}case 33:{pja(K,ca);f[ba>>2]=f[K>>2];f[ba+4>>2]=f[K+4>>2];f[ba+8>>2]=f[K+8>>2];f[ba+12>>2]=f[K+12>>2];oda(a,ba);break a}case 43:{Fka(L,ca);f[ba>>2]=f[L>>2];f[ba+4>>2]=f[L+4>>2];f[ba+8>>2]=f[L+8>>2];f[ba+12>>2]=f[L+12>>2];oda(a,ba);break a}default:Ka()}while(0);break}case 4:{do switch(f[d>>2]|0){case 7:{lI(M,ca);f[ba>>2]=f[M>>2];f[ba+4>>2]=f[M+4>>2];f[ba+8>>2]=f[M+8>>2];f[ba+12>>2]=f[M+12>>2];oda(a,ba);break a}case 9:{mI(N,ca);f[ba>>2]=f[N>>2];f[ba+4>>2]=f[N+4>>2];f[ba+8>>2]=f[N+8>>2];f[ba+12>>2]=f[N+12>>2];oda(a,ba);break a}case 11:{w3(O,ca);f[ba>>2]=f[O>>2];f[ba+4>>2]=f[O+4>>2];f[ba+8>>2]=f[O+8>>2];f[ba+12>>2]=f[O+12>>2];oda(a,ba);break a}case 13:{g3(P,ca);f[ba>>2]=f[P>>2];f[ba+4>>2]=f[P+4>>2];f[ba+8>>2]=f[P+8>>2];f[ba+12>>2]=f[P+12>>2];oda(a,ba);break a}case 15:{k4(Q,ca);f[ba>>2]=f[Q>>2];f[ba+4>>2]=f[Q+4>>2];f[ba+8>>2]=f[Q+8>>2];f[ba+12>>2]=f[Q+12>>2];oda(a,ba);break a}case 17:{k3(R,ca);f[ba>>2]=f[R>>2];f[ba+4>>2]=f[R+4>>2];f[ba+8>>2]=f[R+8>>2];f[ba+12>>2]=f[R+12>>2];oda(a,ba);break a}case 19:{v3(S,ca);f[ba>>2]=f[S>>2];f[ba+4>>2]=f[S+4>>2];f[ba+8>>2]=f[S+8>>2];f[ba+12>>2]=f[S+12>>2];oda(a,ba);break a}case 30:case 29:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ws(T,b,c,ba);f[ba>>2]=f[T>>2];f[ba+4>>2]=f[T+4>>2];f[ba+8>>2]=f[T+8>>2];f[ba+12>>2]=f[T+12>>2];oda(a,ba);break a}case 32:case 31:{f[ba>>2]=f[ca>>2];f[ba+4>>2]=f[ca+4>>2];f[ba+8>>2]=f[ca+8>>2];f[ba+12>>2]=f[ca+12>>2];ss(U,b,c,ba);f[ba>>2]=f[U>>2];f[ba+4>>2]=f[U+4>>2];f[ba+8>>2]=f[U+8>>2];f[ba+12>>2]=f[U+12>>2];oda(a,ba);break a}case 34:{ha=ca+8|0;aia(V,4,f[ha>>2]|0,f[ha+4>>2]|0);f[ba>>2]=f[V>>2];f[ba+4>>2]=f[V+4>>2];f[ba+8>>2]=f[V+8>>2];f[ba+12>>2]=f[V+12>>2];oda(a,ba);break a}case 44:{g=+qda(ca);d=Mra(g)|0;b=J&2147483647;e=g;if(b>>>0>2146435072|(b|0)==2146435072&d>>>0>0){tda($,e);f[ba>>2]=f[$>>2];f[ba+4>>2]=f[$+4>>2];f[ba+8>>2]=f[$+8>>2];f[ba+12>>2]=f[$+12>>2];oda(a,ba);break a}if((d|0)==0&(b|0)==2146435072){tda(aa,e);f[ba>>2]=f[aa>>2];f[ba+4>>2]=f[aa+4>>2];f[ba+8>>2]=f[aa+8>>2];f[ba+12>>2]=f[aa+12>>2];oda(a,ba);break a}d=oja(ca)|0;b=J;aa=Hsa(d|0,b|0,536870911,-1206910976)|0;$=J;if($>>>0<0|($|0)==0&aa>>>0<268435455){tda(da,3402823466385288598117041.0e14);f[ba>>2]=f[da>>2];f[ba+4>>2]=f[da+4>>2];f[ba+8>>2]=f[da+8>>2];f[ba+12>>2]=f[da+12>>2];oda(a,ba);break a}da=Hsa(d|0,b|0,536870911,940572672)|0;aa=J;if(aa>>>0<0|(aa|0)==0&da>>>0<268435455){tda(ea,-3402823466385288598117041.0e14);f[ba>>2]=f[ea>>2];f[ba+4>>2]=f[ea+4>>2];f[ba+8>>2]=f[ea+8>>2];f[ba+12>>2]=f[ea+12>>2];oda(a,ba);break a}if(g<-3402823466385288598117041.0e14){tda(fa,-D);f[ba>>2]=f[fa>>2];f[ba+4>>2]=f[fa+4>>2];f[ba+8>>2]=f[fa+8>>2];f[ba+12>>2]=f[fa+12>>2];oda(a,ba);break a}if(g>3402823466385288598117041.0e14){tda(ga,D);f[ba>>2]=f[ga>>2];f[ba+4>>2]=f[ga+4>>2];f[ba+8>>2]=f[ga+8>>2];f[ba+12>>2]=f[ga+12>>2];oda(a,ba);break a}else{fka(ha,ca);f[ba>>2]=f[ha>>2];f[ba+4>>2]=f[ha+4>>2];f[ba+8>>2]=f[ha+8>>2];f[ba+12>>2]=f[ha+12>>2];oda(a,ba);break a}}default:Ka()}while(0);break}default:Ka()}while(0)}u=ia;return}function Bc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+32|0;h=i;a:do if((a|0)!=(c|0)){g=a+1|0;b:do switch(b[a>>0]|0){case 118:{VQ(h,73522);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 119:{aR(h);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 98:{VQ(h,73527);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 99:{VQ(h,73296);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 97:{YJ(h,73301);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 104:{WJ(h,73313);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 115:{UQ(h,73327);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 116:{VJ(h,73333);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 105:{WQ(h,73532);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 106:{XJ(h,73536);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 108:{VQ(h,73549);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 109:{WJ(h,73554);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 120:{QQ(h,73568);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 121:{DK(h);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 110:{TQ(h,73362);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 111:{UJ(h,73371);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 102:{UQ(h,73578);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 100:{bR(h);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 101:{YJ(h,73584);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 103:{EQ(h,73596);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 122:{WQ(h,73607);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=g;break a}case 117:{h=Zh(g,c,d)|0;a=(h|0)==(g|0)?a:h;break a}case 68:{if((g|0)==(c|0))break a;e=a+2|0;switch(b[g>>0]|0){case 100:{QQ(h,73611);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 101:{EQ(h,73621);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 102:{QQ(h,73632);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 104:{QQ(h,73642);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 105:{TQ(h,73652);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 115:{TQ(h,73661);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 97:{VQ(h,73670);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}case 110:{VJ(h,73675);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,h|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(h);break b}}else{ZL(c,h);f[a>>2]=(f[a>>2]|0)+24}Xka(h);a=e;break a}default:break a}}default:break a}while(0);$a(a|0)}while(0);u=i;return a|0}function Cc(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0;a:do if(a>>>0<212){b=bZ(14144,14336,a)|0;b=f[b>>2]|0}else{if(a>>>0>4294967291){b=zb(8)|0;y=0;ja(2045,b|0,67540);i=y;y=0;if(i&1){i=Pa()|0;Oa(b|0);$a(i|0)}else{f[b>>2]=18256;ub(b|0,5848,320)}}h=(a>>>0)/210|0;e=h*210|0;b=0;g=(bZ(14336,14528,a-e|0)|0)-14336>>2;a=e;while(1){e=(f[14336+(g<<2)>>2]|0)+a|0;a=5;while(1){if(a>>>0>=47){d=211;i=12;break}c=f[14144+(a<<2)>>2]|0;d=(e>>>0)/(c>>>0)|0;if(d>>>0<c>>>0){b=e;break a}if((e|0)==(Y(d,c)|0))break;else a=a+1|0}b:do if((i|0)==12){c:while(1){i=0;a=(e>>>0)/(d>>>0)|0;do if(a>>>0>=d>>>0)if((e|0)!=(Y(a,d)|0)){a=d+10|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0>=a>>>0)if((e|0)!=(Y(c,a)|0)){a=d+12|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0>=a>>>0)if((e|0)!=(Y(c,a)|0)){a=d+16|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0>=a>>>0)if((e|0)!=(Y(c,a)|0)){a=d+18|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0>=a>>>0)if((e|0)!=(Y(c,a)|0)){a=d+22|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0>=a>>>0)if((e|0)!=(Y(c,a)|0)){a=d+28|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e}else{if((e|0)==(Y(c,a)|0)){c=9;break}a=d+30|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+36|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+40|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+42|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+46|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+52|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+58|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+60|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+66|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+70|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+72|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+78|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+82|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+88|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+96|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+100|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+102|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+106|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+108|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+112|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+120|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+126|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+130|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+136|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+138|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+142|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+148|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+150|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+156|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+162|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+166|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+168|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+172|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+178|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+180|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+186|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+190|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+192|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+196|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+198|0;c=(e>>>0)/(a>>>0)|0;if(c>>>0<a>>>0){c=1;b=e;break}if((e|0)==(Y(c,a)|0)){c=9;break}a=d+208|0;c=(e>>>0)/(a>>>0)|0;j=c>>>0<a>>>0;c=(e|0)==(Y(c,a)|0);a=j|c?a:d+210|0;c=j?1:c?9:0;b=j?e:b}}else c=9;else{c=1;b=e}}else c=9;else{c=1;b=e}}else c=9;else{c=1;b=e}}else c=9;else{c=1;b=e}}else c=9;else{c=1;b=e}}else{a=d;c=9}else{a=d;c=1;b=e}while(0);switch(c&15){case 9:break b;case 0:{d=a;i=12;break}default:break c}}if(c)break a}while(0);j=g+1|0;e=(j|0)==48;a=(e&1)+h|0;h=a;g=e?0:j;a=a*210|0}}while(0);return b|0}function Dc(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;T=u;u=u+112|0;R=T+96|0;K=T+68|0;h=T+84|0;W=T+72|0;N=T+32|0;X=T+20|0;Y=T+8|0;O=T+4|0;P=T;Q=T+64|0;U=T+52|0;V=T+40|0;L=T+36|0;M=a+12|0;do if(b[M>>0]|0){c=Vea(76852,57398)|0;Axa(R,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[R>>2]|0,77556)|0;J=y;y=0;if(!(J&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,J=y,y=0,!(J&1)):0){pza(R);jn(c,e)|0;Yp(c)|0;break}Y=Pa()|0;pza(R);$a(Y|0)}while(0);I=Nm(a)|0;J=a+72|0;a:do if((I|0)==((f[a+76>>2]|0)-(f[J>>2]|0)>>2|0)){l=a+36|0;m=a+116|0;n=X+4|0;o=X+8|0;p=Y+4|0;q=Y+8|0;r=X+8|0;s=Y+8|0;t=a+112|0;v=a+84|0;w=a+44|0;x=a+156|0;z=a+144|0;A=a+148|0;B=a+152|0;C=a+160|0;D=a+164|0;E=a+236|0;F=a+92|0;G=a+96|0;H=a+88|0;k=0;b:while(1){c=(b[M>>0]|0)==0;if(k>>>0>=I>>>0){i=20;break}if(!c){d=Vea(76852,57463)|0;d=vj(d,f[l>>2]|0)|0;Axa(R,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[R>>2]|0,77556)|0;j=y;y=0;if(j&1){i=24;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;j=y;y=0;if(j&1){i=24;break}pza(R);jn(d,c)|0;Yp(d)|0}c=Nm(a)|0;if(!c){i=27;break}f[m>>2]=(f[l>>2]|0)+c;j=f[(f[J>>2]|0)+(k<<2)>>2]|0;if(b[M>>0]|0){d=vj(Vea(76852,57496)|0,k)|0;Axa(R,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[R>>2]|0,77556)|0;i=y;y=0;if(i&1){i=41;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;i=y;y=0;if(i&1){i=41;break}pza(R);jn(d,c)|0;Yp(d)|0}f[N>>2]=0;f[X>>2]=0;f[n>>2]=0;f[o>>2]=0;f[Y>>2]=0;f[p>>2]=0;f[q>>2]=0;d=j+8|0;e=j+12|0;c=0;while(1){if(c>>>0>=(f[e>>2]|0)-(f[d>>2]|0)>>2>>>0)break;y=0;g=la(213,N|0)|0;i=y;y=0;if(i&1){i=51;break b}f[O>>2]=g;h=(f[d>>2]|0)+(c<<2)|0;i=f[n>>2]|0;if(i>>>0>=(f[r>>2]|0)>>>0){y=0;ya(109,X|0,O|0,h|0);i=y;y=0;if(i&1){i=51;break b}}else{f[K>>2]=g;h=f[h>>2]|0;f[R>>2]=f[K>>2];qta(i,R,h);f[n>>2]=(f[n>>2]|0)+8}c=c+1|0}y=0;h=la(212,a|0)|0;i=y;y=0;if(i&1){i=54;break}else g=0;while(1){if(g>>>0>=h>>>0)break;y=0;c=la(212,a|0)|0;i=y;y=0;if(i&1){i=64;break b}y=0;i=la(214,a|0)|0;e=y;y=0;if(e&1){i=65;break b}f[O>>2]=i;while(1){if(!c)break;y=0;d=la(213,N|0)|0;e=y;y=0;if(e&1){i=66;break b}f[P>>2]=d;e=f[p>>2]|0;if(e>>>0>=(f[s>>2]|0)>>>0){y=0;ya(109,Y|0,P|0,O|0);e=y;y=0;if(e&1){i=66;break b}}else{f[K>>2]=d;f[R>>2]=f[K>>2];qta(e,R,i);f[p>>2]=(f[p>>2]|0)+8}c=c+-1|0}g=g+1|0}VBa(K,f[a>>2]|0);y=0;c=la(153,k|0)|0;i=y;y=0;if(i&1){i=77;break}f[Q>>2]=c;g=f[j+4>>2]|0;y=0;f[R>>2]=f[Q>>2];g=ka(39,K|0,R|0,X|0,g|0,Y|0,0)|0;i=y;y=0;if(i&1){i=77;break}f[P>>2]=g;f[g+32>>2]=f[j>>2];h=g;f[t>>2]=h;if(b[M>>0]|0){y=0;c=ua(53,76852,57505)|0;j=y;y=0;if(j&1){i=78;break}y=0;d=ua(68,c|0,k|0)|0;j=y;y=0;if(j&1){i=78;break}Axa(R,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[R>>2]|0,77556)|0;j=y;y=0;if(j&1){i=74;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;j=y;y=0;if(j&1){i=74;break}pza(R);y=0;ua(63,d|0,c|0)|0;j=y;y=0;if(j&1){i=78;break}y=0;la(159,d|0)|0;j=y;y=0;if(j&1){i=78;break}}f[v>>2]=0;b[w>>0]=0;b[x>>0]=0;c=f[z>>2]|0;if((c|0)!=(f[A>>2]|0)){i=82;break}d=g+4|0;e=(f[d>>2]|0)!=0;b[O>>0]=e&1;if(c>>>0>=(f[B>>2]|0)>>>0){y=0;ja(2005,z|0,O|0);j=y;y=0;if(j&1){i=88;break}}else{f[K>>2]=f[18732];f[R>>2]=f[K>>2];qta(c,R,e&1);f[A>>2]=(f[A>>2]|0)+8}if((f[C>>2]|0)!=(f[D>>2]|0)){i=87;break}if(f[E>>2]|0){i=90;break}y=0;c=ua(154,a|0,f[d>>2]|0)|0;j=y;y=0;if(j&1){i=78;break}e=g+36|0;f[e>>2]=c;if(f[E>>2]|0){i=93;break}j=f[A>>2]|0;d=j;if((j-(f[z>>2]|0)|0)==8)c=0;else{i=95;break}while(1){if((c|0)==-1)break;j=c+-1|0;f[A>>2]=d+(j<<3);c=j}if((f[C>>2]|0)!=(f[D>>2]|0)){i=99;break}if((f[l>>2]|0)!=(f[m>>2]|0)){i=111;break}if(b[x>>0]|0){VBa(K,f[a>>2]|0);c=f[e>>2]|0;f[L>>2]=f[18732];y=0;f[R>>2]=f[L>>2];c=xa(15,K|0,c|0,R|0,0)|0;j=y;y=0;if(j&1){i=125;break}f[e>>2]=c}f[t>>2]=0;c=f[F>>2]|0;if((c|0)==(f[G>>2]|0)){y=0;ja(2006,H|0,P|0);j=y;y=0;if(j&1){i=78;break}}else{f[c>>2]=h;f[F>>2]=(f[F>>2]|0)+4}a3(Y);a3(X);k=k+1|0}c:switch(i|0){case 20:{do if(!c){c=Vea(76852,57696)|0;Axa(R,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[R>>2]|0,77556)|0;Y=y;y=0;if(!(Y&1)?(y=0,S=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,Y=y,y=0,!(Y&1)):0){pza(R);jn(c,S)|0;Yp(c)|0;break}Y=Pa()|0;pza(R);$a(Y|0)}while(0);u=T;return}case 24:{Y=Pa()|0;pza(R);$a(Y|0)}case 27:{g=zb(20)|0;f[W>>2]=0;f[W+4>>2]=0;f[W+8>>2]=0;e=uHa(57476)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[W+11>>0]=e;c=W}else{d=e+16&-16;y=0;c=la(150,d|0)|0;Y=y;y=0;if(Y&1){i=35;break}f[W>>2]=c;f[W+8>>2]=d|-2147483648;f[W+4>>2]=e}Pta(c,57476,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,W|0);Y=y;y=0;if(Y&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(W);if(!d)break a}else{y=0;za(3);y=0;i=35}while(0);if((i|0)==35)c=Pa()|0;Oa(g|0);break a}case 41:{Y=Pa()|0;pza(R);$a(Y|0)}case 51:{c=Pa()|0;break}case 54:{c=Pa()|0;break}case 64:{c=Pa()|0;break}case 65:{c=Pa()|0;break}case 66:{c=Pa()|0;break}case 74:{c=Pa()|0;pza(R);i=80;break}case 77:{c=Pa()|0;break}case 78:{c=Pa()|0;i=80;break}case 82:{y=0;Ca(52,57527,54283,1628,57546);y=0;i=79;break}case 87:{y=0;Ca(52,57560,54283,1630,57546);y=0;i=79;break}case 88:{c=Pa()|0;i=130;break}case 90:{y=0;Ca(52,55225,54283,1631,57546);y=0;i=79;break}case 93:{y=0;Ca(52,55225,54283,1633,57546);y=0;i=79;break}case 95:{y=0;Ca(52,57584,54283,1634,57546);y=0;i=79;break}case 99:{g=zb(20)|0;f[U>>2]=0;f[U+4>>2]=0;f[U+8>>2]=0;e=uHa(57607)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[U+11>>0]=e;c=U}else{d=e+16&-16;y=0;c=la(150,d|0)|0;W=y;y=0;if(W&1){i=107;break}f[U>>2]=c;f[U+8>>2]=d|-2147483648;f[U+4>>2]=e}Pta(c,57607,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,U|0);W=y;y=0;if(W&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(U);if(!d){i=130;break c}}else{y=0;za(3);y=0;i=107}while(0);if((i|0)==107)c=Pa()|0;Oa(g|0);i=130;break}case 111:{g=zb(20)|0;f[V>>2]=0;f[V+4>>2]=0;f[V+8>>2]=0;e=uHa(57640)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[V+11>>0]=e;c=V}else{d=e+16&-16;y=0;c=la(150,d|0)|0;W=y;y=0;if(W&1){i=119;break}f[V>>2]=c;f[V+8>>2]=d|-2147483648;f[V+4>>2]=e}Pta(c,57640,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,V|0);W=y;y=0;if(W&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(V);if(!d){i=130;break c}}else{y=0;za(3);y=0;i=119}while(0);if((i|0)==119)c=Pa()|0;Oa(g|0);i=130;break}case 125:{c=Pa()|0;i=130;break}}if((i|0)==79){c=Pa()|0;i=80}if((i|0)==80)i=130;a3(Y);a3(X)}else{g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(57415)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;c=h}else{d=e+16&-16;y=0;c=la(150,d|0)|0;Y=y;y=0;if(Y&1){i=16;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(c,57415,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,h|0);Y=y;y=0;if(Y&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(!d)break a}else{y=0;za(3);y=0;i=16}while(0);if((i|0)==16)c=Pa()|0;Oa(g|0)}while(0);$a(c|0)}function Ec(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+288|0;s=t+96|0;n=t;k=t+188|0;r=eAa(c)|0;a:do if(r){o=r+8|0;c=r+16|0;k=r+12|0;if((Taa(f[o>>2]|0)|0?(d=f[k>>2]|0,e=d,yFa(f[d>>2]|0)|0):0)?(g=f[c>>2]|0,!(yFa(f[g>>2]|0)|0)):0){f[k>>2]=g;f[c>>2]=e}d=YD(r)|0;b:do if(!d){d=f[o>>2]|0;switch(d|0){case 16:case 15:break;case 1:case 0:{d=Qh(a,r)|0;break a}default:break b}e=pAa(f[c>>2]|0)|0;if(e|0){if((d|0)==15?(csa(e+8|0)|0)==0:0){d=f[a+36>>2]|0;gKa(d)|0;VBa(s,d);d=dea(f[s>>2]|0,20,f[k>>2]|0)|0;break a}d=$F(f[k>>2]|0)|0;if(!d)break;g=Bja(f[k>>2]|0)|0;d=GG(a,d,g)|0;f[k>>2]=d;d=e+8|0;j=csa(d)|0;e=BCa(g)|0;m=eFa(j&~e)|0;if(!((m|0)!=0&m>>>0<(32-g|0)>>>0)?!((j&1<<g+-1|0)!=0&(m|0)==0):0){uAa(n,e);sV(s,d,n);f[d>>2]=f[s>>2];f[d+4>>2]=f[s+4>>2];f[d+8>>2]=f[s+8>>2];f[d+12>>2]=f[s+12>>2];d=r;break a}if(g>>>0<32){uAa(s,-2147483648);f[d>>2]=f[s>>2];f[d+4>>2]=f[s+4>>2];f[d+8>>2]=f[s+8>>2];f[d+12>>2]=f[s+12>>2];d=r;break a}else Na(41397,41407,457,41443)}g=$F(f[k>>2]|0)|0;if(!g){i=yAa(f[k>>2]|0)|0;if(!i)break;d=$F(f[c>>2]|0)|0;if(!d)break;e=Bja(f[c>>2]|0)|0;g=i+9|0;if(!(b[g>>0]|0))break;if((e|0)!=(h[i+8>>0]<<3|0))break;b[g>>0]=0;d=GG(a,d,e)|0;f[c>>2]=d;d=r;break a}e=$F(f[c>>2]|0)|0;if(e|0){d=Bja(f[k>>2]|0)|0;if((Bja(f[c>>2]|0)|0)!=(d|0))break;s=GG(a,g,d)|0;f[k>>2]=s;d=GG(a,e,d)|0;f[c>>2]=d;d=r;break a}d=yAa(f[c>>2]|0)|0;if((d|0?(i=Bja(f[k>>2]|0)|0,l=d+9|0,b[l>>0]|0):0)?(i|0)==(h[d+8>>0]<<3|0):0){b[l>>0]=0;d=GG(a,g,i)|0;f[k>>2]=d;d=r;break a}}else{e=WL(r,s)|0;g=f[s>>2]|0;do if((g|0)==0?(j=yAa(vJ(d)|0)|0,(j|0)!=0):0){n=b[j+8>>0]|0;if(!((e|0)==8&n<<24>>24==1)?!((e|0)==16&n<<24>>24==2):0){m=13;break}i=j+9|0;if((j|0)==(d|0)|(b[i>>0]|0)!=0)b[i>>0]=1;else m=13}else m=13;while(0);if((m|0)==13){if((g+(Vg(d,a)|0)|0)>>>0>=e>>>0?!(SR(a,d,e)|0):0)break;d=EF(r)|0}break a}while(0);c=pAa(f[c>>2]|0)|0;c:do if(c|0){j=c+8|0;do if((f[o>>2]|0)==7){e=csa(j)|0;d=f[k>>2]|0;if((e|0)==-1)break a;g=yAa(d)|0;if(!g){e=t4(e)|0;if(!e)break;if((Vg(d,a)|0)>>>0>e>>>0)break;d=f[k>>2]|0;break a}else{n=b[g+8>>0]|0;if(!((e|0)==255&n<<24>>24==1)?!((e|0)==65535&n<<24>>24==2):0)break;b[g+9>>0]=0;break a}}while(0);uAa(s,0);n=JD(j,s)|0;d=f[k>>2]|0;if(n?((f[o>>2]|0)+-10|0)>>>0<3:0)break a;d=eAa(d)|0;if((d|0?(p=f[d+8>>2]|0,(p|0)==(f[o>>2]|0)):0)?(q=pAa(f[d+16>>2]|0)|0,q|0):0){i=q+8|0;switch(p|0){case 7:{sV(s,i,j);f[i>>2]=f[s>>2];f[i+4>>2]=f[s+4>>2];f[i+8>>2]=f[s+8>>2];f[i+12>>2]=f[s+12>>2];break a}case 8:{wV(s,i,j);f[i>>2]=f[s>>2];f[i+4>>2]=f[s+4>>2];f[i+8>>2]=f[s+8>>2];f[i+12>>2]=f[s+12>>2];break a}case 37:case 36:case 35:case 12:case 11:case 10:{g=(FR(q)|0)+(FR(c)|0)|0;e=c+4|0;if((g|0)!=(Sha(g,f[e>>2]|0)|0))break c;bV(s,g,f[e>>2]|0);f[i>>2]=f[s>>2];f[i+4>>2]=f[s+4>>2];f[i+8>>2]=f[s+8>>2];f[i+12>>2]=f[s+12>>2];break a}default:break c}}}while(0);if(((f[o>>2]|0)+-7|0)>>>0<2)d=Bg(a,r)|0;else d=0}else{j=nAa(c)|0;if(j|0){if((f[j+8>>2]|0)!=20){d=0;break}i=j+12|0;e=f[i>>2]|0;d=eAa(e)|0;d:do if(d|0){g=d+8|0;do switch(f[g>>2]|0){case 15:{f[g>>2]=16;break a}case 16:{f[g>>2]=15;break a}case 17:{f[g>>2]=23;break a}case 18:{f[g>>2]=24;break a}case 19:{f[g>>2]=21;break a}case 20:{f[g>>2]=22;break a}case 21:{f[g>>2]=19;break a}case 22:{f[g>>2]=20;break a}case 23:{f[g>>2]=17;break a}case 24:{f[g>>2]=18;break a}case 40:{f[g>>2]=41;break a}case 41:{f[g>>2]=40;break a}case 42:{f[g>>2]=48;break a}case 43:{f[g>>2]=49;break a}case 44:{f[g>>2]=46;break a}case 45:{f[g>>2]=47;break a}case 46:{f[g>>2]=44;break a}case 47:{f[g>>2]=45;break a}case 48:{f[g>>2]=42;break a}case 49:{f[g>>2]=43;break a}case 57:{f[g>>2]=58;break a}case 58:{f[g>>2]=57;break a}case 70:{f[g>>2]=71;break a}case 71:{f[g>>2]=70;break a}default:break d}while(0)}while(0);d=$F(e)|0;if(!d){d=0;break}d=GG(a,d,Bja(f[i>>2]|0)|0)|0;f[i>>2]=d;d=j;break}e=Cza(c)|0;if(e|0){d=Dza(f[e+12>>2]|0)|0;if(!d){d=0;break}if(!(bDa(f[d+8>>2]|0,f[e+8>>2]|0)|0)){d=0;break}_ua(c);d=0;break}g=YAa(c)|0;if(g|0){c=g+8|0;e=bm(a,f[c>>2]|0)|0;f[c>>2]=e;i=g+16|0;d=f[i>>2]|0;j=d;if(!d){d=0;break}e=nAa(e)|0;g=g+12|0;if((e|0)!=0?(f[e+8>>2]|0)==20:0){f[c>>2]=f[e+12>>2];d=f[g>>2]|0;f[g>>2]=j;f[i>>2]=d}if(!(bN(f[g>>2]|0,d)|0)){d=0;break}r=uya(f[a+40>>2]|0)|0;Ot(s,r,f[c>>2]|0);r=jca(s)|0;hT(s);if(r){d=f[a+36>>2]|0;gKa(d)|0;VBa(s,d);d=Una(f[s>>2]|0,f[c>>2]|0)|0;d=p5(s,d,f[g>>2]|0)|0;break}else{d=f[g>>2]|0;break}}i=cAa(c)|0;if(!i){d=wAa(c)|0;if(d|0){d=d+16|0;e=f[d>>2]|0;if(!e){d=0;break}a=bm(a,e)|0;f[d>>2]=a;d=0;break}d=yAa(c)|0;if(d|0){zE(f[d+24>>2]|0,d+12|0);d=0;break}g=oAa(c)|0;if(!g){d=0;break}zE(f[g+24>>2]|0,g+12|0);i=g+28|0;d=f[i>>2]|0;e=eAa(d)|0;if(!e){d=nAa(d)|0;if(!d){d=0;break}if((f[d+8>>2]|0)!=24){d=0;break}f[g+32>>2]=2;f[i>>2]=f[d+12>>2];d=0;break}if((f[e+8>>2]|0)!=7){d=$F(e)|0;if(!d){d=0;break}a=Bja(e)|0;if(a>>>0<h[g+8>>0]<<3>>>0){d=0;break}f[i>>2]=d;d=0;break}d=pAa(f[e+16>>2]|0)|0;if(!d){d=0;break}if((f[d+4>>2]|0)!=1){d=0;break}s=csa(d+8|0)|0;a=b[g+8>>0]|0;if(!((s|0)==255&a<<24>>24==1)?!((s|0)==65535&a<<24>>24==2):0){d=0;break}f[i>>2]=f[e+12>>2];d=0;break}j=i+16|0;e=bm(a,f[j>>2]|0)|0;f[j>>2]=e;e=nAa(e)|0;c=i+8|0;do if((e|0)!=0?(f[e+8>>2]|0)==20:0){r=a+40|0;g=uya(f[r>>2]|0)|0;Ot(s,g,f[c>>2]|0);r=uya(f[r>>2]|0)|0;g=i+12|0;y=0;ya(75,n|0,r|0,f[g>>2]|0);r=y;y=0;if(r&1){d=Pa()|0;hT(s);break}if(!(oh(s,n)|0)){f[j>>2]=f[e+12>>2];r=f[c>>2]|0;f[c>>2]=f[g>>2];f[g>>2]=r}hT(n);hT(s);m=117}else m=117;while(0);e:do if((m|0)==117){if(!(bN(f[c>>2]|0,f[i+12>>2]|0)|0)){d=0;break a}e=a+40|0;r=uya(f[e>>2]|0)|0;Ot(s,r,f[c>>2]|0);f:do if(!(jca(s)|0)){r=uya(f[e>>2]|0)|0;y=0;ya(75,k|0,r|0,f[j>>2]|0);r=y;y=0;g:do if(r&1)d=Pa()|0;else{do if(jca(k)|0){if(oh(k,s)|0){hT(k);break f}e=f[a+36>>2]|0;gKa(e)|0;VBa(n,e);y=0;e=ua(80,f[n>>2]|0,f[j>>2]|0)|0;a=y;y=0;if(!(a&1)?(y=0,d=oa(50,n|0,e|0,f[c>>2]|0)|0,a=y,y=0,!(a&1)):0)break;d=Pa()|0;hT(k);break g}else d=f[c>>2]|0;while(0);hT(k);hT(s);break a}while(0);hT(s);break e}while(0);hT(s);d=0;break a}while(0);$a(d|0)}while(0);u=t;return d|0}function Fc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;z=u;u=u+64|0;A=z+56|0;B=z+48|0;w=z+40|0;x=z+24|0;s=z+12|0;q=z;do if((a|0)==(c|0)){c=a;m=109}else{v=d+56|0;Sua(A,v);f[v>>2]=(f[v>>2]|0)+1;e=d+61|0;Cua(B,e);if((f[v>>2]|0)>>>0>1)b[e>>0]=1;a:do switch(b[a>>0]|0){case 84:case 71:{y=0;c=oa(74,a|0,c|0,d|0)|0;x=y;y=0;if(x&1)m=6;else{e=1;m=107}break}default:{y=0;l=oa(75,a|0,c|0,d|0)|0;v=y;y=0;if(v&1)m=6;else{t=f[d+48>>2]|0;v=f[d+52>>2]|0;b:do if((l|0)!=(a|0)){if((l|0)!=(c|0)){switch(b[l>>0]|0){case 46:case 69:{c=l;break b}default:{}}Cua(w,e);b[e>>0]=0;f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[x+(e<<2)>>2]=0;e=e+1|0}r=d+4|0;e=f[r>>2]|0;c:do if((f[d>>2]|0)!=(e|0)){g=e+-24|0;j=b[g+11>>0]|0;k=j<<24>>24<0;if(k)h=f[e+-20>>2]|0;else h=j&255;if(h){d:do if(!(b[d+60>>0]|0)){if(k){h=f[g>>2]|0;i=f[e+-20>>2]|0}else{h=g;i=j&255}if((b[h+i+-1>>0]|0)==62){if(k){h=f[e+-20>>2]|0;i=f[g>>2]|0}else{h=j&255;i=g}if((b[i+(h+-2)>>0]|0)!=45){if(k){h=f[e+-20>>2]|0;g=f[g>>2]|0}else h=j&255;if((b[g+(h+-2)>>0]|0)!=62){y=0;i=oa(76,l|0,c|0,d|0)|0;p=y;y=0;if(p&1){m=34;break}if((i|0)==(l|0)){c=a;e=0;break c}p=f[r>>2]|0;g=p;if(((p-(f[d>>2]|0)|0)/24|0)>>>0<2){c=a;e=0;break c}h=g+-24|0;f[s>>2]=f[h>>2];f[s+4>>2]=f[h+4>>2];f[s+8>>2]=f[h+8>>2];e=0;while(1){if((e|0)==3)break;f[h+(e<<2)>>2]=0;e=e+1|0}g=g+-12|0;h=x+11|0;if((b[h>>0]|0)<0){SBa(f[x>>2]|0,0);f[x+4>>2]=0}else{SBa(x,0);b[h>>0]=0}Sq(x);f[x>>2]=f[g>>2];f[x+4>>2]=f[g+4>>2];f[x+8>>2]=f[g+8>>2];e=0;while(1){if((e|0)==3)break;f[g+(e<<2)>>2]=0;e=e+1|0}p=b[h>>0]|0;if(!(((p<<24>>24<0?f[x+4>>2]|0:p&255)|0)==0?(y=0,ja(2053,s|0,32),p=y,y=0,p&1):0))m=48;do if((m|0)==48){e=f[r>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;p=h+-24|0;f[r>>2]=p;Xka(p);h=f[r>>2]|0}p=b[s+11>>0]|0;o=p<<24>>24<0;y=0;xa(25,e+-48|0,0,(o?f[s>>2]|0:s)|0,(o?f[s+4>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1)break;zta(s);g=i;e=f[r>>2]|0;m=53;break d}while(0);c=Pa()|0;zta(s)}else{g=l;m=53}}else{g=l;m=53}}else{g=l;m=53}}else{g=l;m=53}while(0);e:do if((m|0)==53){y=0;ja(2053,e+-24|0,40);p=y;y=0;if(!(p&1)){if((g|0)!=(c|0)?(b[g>>0]|0)==118:0){c=g+1|0;g=f[d>>2]|0;e=f[r>>2]|0}else m=56;do if((m|0)==56){m=s+11|0;n=s+4|0;o=q+11|0;p=q+4|0;k=1;e=g;f:while(1){h=e;e=f[r>>2]|0;g=f[d>>2]|0;while(1){i=(e-g|0)/24|0;y=0;l=oa(76,h|0,c|0,d|0)|0;j=y;y=0;if(j&1){m=60;break f}e=f[r>>2]|0;g=f[d>>2]|0;j=(e-g|0)/24|0;if((l|0)==(h|0)){m=90;break f}if(j>>>0>i>>>0)break;else h=l}f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;e=0;while(1){if((e|0)==3){e=i;break}f[s+(e<<2)>>2]=0;e=e+1|0}while(1){if(e>>>0>=j>>>0){e=i;break}h=b[m>>0]|0;if((h<<24>>24<0?f[n>>2]|0:h&255)|0?(y=0,ua(165,s|0,72307)|0,h=y,y=0,h&1):0){m=68;break f}y=0;ja(2054,q|0,(f[d>>2]|0)+(e*24|0)|0);h=y;y=0;if(h&1){m=72;break f}h=b[o>>0]|0;g=h<<24>>24<0;y=0;oa(73,s|0,(g?f[q>>2]|0:q)|0,(g?f[p>>2]|0:h&255)|0)|0;h=y;y=0;if(h&1){m=73;break f}zta(q);e=e+1|0}while(1){if(e>>>0>=j>>>0)break;h=f[r>>2]|0;g=h+-24|0;while(1){if((h|0)==(g|0))break;i=h+-24|0;f[r>>2]=i;Xka(i);h=f[r>>2]|0}e=e+1|0}h=b[m>>0]|0;e=f[n>>2]|0;if((h<<24>>24<0?e:h&255)|0){g=f[r>>2]|0;if((f[d>>2]|0)==(g|0)){m=103;break}if(!k){y=0;ua(165,g+-24|0,72307)|0;k=y;y=0;if(k&1){m=85;break}g=f[r>>2]|0;h=b[m>>0]|0;e=f[n>>2]|0}k=h<<24>>24<0;y=0;oa(73,g+-24|0,(k?f[s>>2]|0:s)|0,(k?e:h&255)|0)|0;k=y;y=0;if(k&1){m=85;break}else e=0}else e=k;zta(s);k=e;e=l}if((m|0)==60){c=Pa()|0;break e}else if((m|0)==68)c=Pa()|0;else if((m|0)==72){c=Pa()|0;m=74}else if((m|0)==73){c=Pa()|0;zta(q);m=74}else if((m|0)==85)c=Pa()|0;else if((m|0)==90){c=h;break}else if((m|0)==103){zta(s);c=a;e=0;break c}zta(s);break e}while(0);if((g|0)==(e|0)){c=a;e=0;break c}y=0;ja(2053,e+-24|0,41);s=y;y=0;if(!(s&1)){if(t&1|0?(y=0,ua(165,(f[r>>2]|0)+-24|0,72030)|0,s=y,y=0,s&1):0){m=34;break}if(t&2|0?(y=0,ua(165,(f[r>>2]|0)+-24|0,72037)|0,s=y,y=0,s&1):0){m=34;break}if(t&4|0?(y=0,ua(165,(f[r>>2]|0)+-24|0,72047)|0,t=y,y=0,t&1):0){m=34;break}switch(v|0){case 1:{y=0;ua(165,(f[r>>2]|0)+-24|0,73511)|0;v=y;y=0;if(v&1){m=34;break e}break}case 2:{y=0;ua(165,(f[r>>2]|0)+-24|0,73514)|0;v=y;y=0;if(v&1){m=34;break e}break}default:{}}v=b[x+11>>0]|0;t=v<<24>>24<0;y=0;oa(73,(f[r>>2]|0)+-24|0,(t?f[x>>2]|0:x)|0,(t?f[x+4>>2]|0:v&255)|0)|0;v=y;y=0;if(!(v&1)){e=1;break c}else m=34}else m=34}else m=34}while(0);if((m|0)==34)c=Pa()|0;zta(x);rAa(f[w>>2]|0,b[w+4>>0]|0);break a}else{c=a;e=0}}else{c=a;e=0}while(0);zta(x);rAa(f[w>>2]|0,b[w+4>>0]|0);if(!e){e=0;m=107;break a}}}else c=a;while(0);e=1;m=107}}}while(0);if((m|0)==6)c=Pa()|0;else if((m|0)==107){rAa(f[B>>2]|0,b[B+4>>0]|0);PDa(f[A>>2]|0,f[A+4>>2]|0);if(e){m=109;break}else{c=a;break}}rAa(f[B>>2]|0,b[B+4>>0]|0);PDa(f[A>>2]|0,f[A+4>>2]|0);$a(c|0)}while(0);u=z;return c|0}function Gc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;D=u;u=u+128|0;x=D+112|0;p=D+108|0;g=D+124|0;o=D+104|0;q=D+100|0;F=D+88|0;z=D+84|0;E=D+72|0;C=D+16|0;n=D;t=D+60|0;v=D+56|0;w=D+12|0;f[p>>2]=d;s=c+4|0;d=f[s>>2]|0;e=f[c>>2]|0;do if(((d-e|0)/12|0)>>>0>=2){r=Yy(e,d,a)|0;fN(c,r,f[s>>2]|0);f[o>>2]=g;f[q>>2]=o;IE(F,c);r=F+4|0;d=f[r>>2]|0;fN(F,gx(f[F>>2]|0,d,g,p)|0,d);r=f[r>>2]|0;d=f[F>>2]|0;j=r;a:do if(((r-d|0)/12|0)>>>0>1){gua(x);while(1){if((d|0)==(j|0)){r=5;break}y=0;e=ua(125,d|0,f[p>>2]|0)|0;r=y;y=0;if(r&1){r=13;break}f[z>>2]=e;i=e;y=0;e=la(195,e|0)|0;r=y;y=0;if(r&1){r=14;break}f[E>>2]=e;y=0;e=ua(126,x|0,E|0)|0;r=y;y=0;if(r&1){r=14;break}g=e+4|0;h=f[g>>2]|0;if((h|0)==(f[e+8>>2]|0)){y=0;ja(497,e|0,z|0);r=y;y=0;if(r&1){r=14;break}}else{f[h>>2]=i;f[g>>2]=(f[g>>2]|0)+4}d=d+12|0}do if((r|0)==5){j=x+4|0;k=E+4|0;l=E+8|0;m=n+4|0;d=f[x>>2]|0;b:while(1){if((d|0)==(j|0)){r=38;break}h=d+20|0;i=d+24|0;g=f[i>>2]|0;e=f[h>>2]|0;c:do switch(g-e>>2|0){case 0:{r=18;break b}case 1:break;default:while(1){if(g-e>>2>>>0<=1)break c;f[z>>2]=f[e>>2];f[E>>2]=0;f[k>>2]=0;f[l>>2]=0;y=0;e=xa(21,e|0,g|0,z|0,E|0)|0;r=y;y=0;if(r&1){r=26;break b}kN(h,e,f[i>>2]|0);e=f[h>>2]|0;if((f[i>>2]|0)-e>>2>>>0>1){f[C>>2]=f[e>>2];y=0;ja(1722,n|0,F|0);r=y;y=0;if(r&1){r=27;break b}e=f[m>>2]|0;y=0;g=va(23,f[n>>2]|0,e|0,o|0,p|0,C|0)|0;r=y;y=0;if(r&1){r=28;break b}fN(n,g,e);y=0;e=oa(60,a|0,n|0,(f[p>>2]|0)+1|0)|0;r=y;y=0;if(r&1){r=28;break b}e2(n);if(e){r=31;break b}}LV(h,E);E4(E);e=f[h>>2]|0;g=f[i>>2]|0}}while(0);e=f[d+4>>2]|0;if(!e)while(1){e=f[d+8>>2]|0;if((f[e>>2]|0)==(d|0)){d=e;continue b}else d=e}else d=e;while(1){e=f[d>>2]|0;if(!e)break;else d=e}}if((r|0)==18){y=0;Ca(52,49118,49135,489,49162);y=0;d=Pa()|0;break}else if((r|0)==26)d=Pa()|0;else if((r|0)==27){d=Pa()|0;r=29}else if((r|0)==28){d=Pa()|0;e2(n);r=29}else if((r|0)==31){E4(E);Vaa(x);d=1;r=98;break a}else if((r|0)==38){Vaa(x);r=39;break a}E4(E)}else if((r|0)==13)d=Pa()|0;else if((r|0)==14)d=Pa()|0;while(0);Vaa(x);r=99}else r=39;while(0);d:do if((r|0)==39){d=f[p>>2]|0;if(!d){d=0;r=98}else{y=0;d=xa(22,q|0,a|0,d|0,c|0)|0;o=y;y=0;if(!(o&1)){if(!d){d=0;r=98;break}y=0;Ca(73,E|0,q|0,f[p>>2]|0,c|0);q=y;y=0;if(!(q&1)){b[a+56>>0]=1;m=f[a+36>>2]|0;gKa(m)|0;VBa(z,m);m=a+32|0;q=gKa(f[m>>2]|0)|0;y=0;ja(1723,C|0,q|0);q=y;y=0;if(q&1)d=Pa()|0;else{f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;g=uHa(49187)|0;do if(g>>>0>4294967279){y=0;za(3);y=0;r=56}else{if(g>>>0<11){b[t+11>>0]=g;d=t}else{e=g+16&-16;y=0;d=la(150,e|0)|0;q=y;y=0;if(q&1){r=56;break}f[t>>2]=d;f[t+8>>2]=e|-2147483648;f[t+4>>2]=g}Pta(d,49187,g)|0;SBa(d+g|0,0);y=0;k=ua(127,C|0,t|0)|0;q=y;y=0;if(q&1){d=Pa()|0;zta(t);break}zta(t);i=f[s>>2]|0;l=E+4|0;h=f[c>>2]|0;e:while(1){if((h|0)==(i|0))break;g=h+4|0;d=f[g>>2]|0;if(d){y=0;ja(1724,a|0,d|0);c=y;y=0;if(c&1){r=70;break}else d=0;while(1){e=(f[g>>2]|0)+12|0;if(d>>>0>=(f[l>>2]|0)-(f[E>>2]|0)>>2>>>0)break;y=0;ia(374,e|0);c=y;y=0;if(c&1){r=70;break e}d=d+1|0}f[v>>2]=k;y=0;f[x>>2]=f[v>>2];d=xa(14,z|0,x|0,0,0)|0;c=y;y=0;if(c&1){r=70;break}y=0;ja(596,e|0,d|0);c=y;y=0;if(c&1){r=70;break}c=f[g>>2]|0;y=0;ja(1725,c|0,f[c+4>>2]|0);c=y;y=0;if(c&1){r=70;break}}else{y=0;ja(1724,a|0,f[h>>2]|0);c=y;y=0;if(c&1){r=70;break}f[w>>2]=k;y=0;f[x>>2]=f[w>>2];d=xa(14,z|0,x|0,0,0)|0;c=y;y=0;if(c&1){r=70;break}f[f[h+8>>2]>>2]=d}h=h+12|0}if((r|0)==70){d=Pa()|0;break}h=f[m>>2]|0;gKa(h)|0;h=f[h+36>>2]|0;y=0;j=ua(87,f[z>>2]|0,0)|0;x=y;y=0;f:do if(!(x&1)){f[j+8>>2]=k;e=h+4|0;d=f[e>>2]|0;i=j+12|0;g:do switch(d|0){case 5:{y=0;ja(596,i|0,h|0);x=y;y=0;if(x&1)break f;break}case 0:{y=0;ja(596,i|0,h|0);x=y;y=0;if(x&1)break f;y=0;d=ua(128,f[z>>2]|0,0)|0;x=y;y=0;if(x&1)break f;y=0;ja(596,i|0,d|0);x=y;y=0;if(x&1)break f;break}default:{g=xAa(h)|0;if(g){y=0;ia(373,g|0);x=y;y=0;if(x&1)break f;d=f[e>>2]|0}if((d|0)==5){y=0;ja(596,i|0,h|0);x=y;y=0;if(x&1)break f;else break g}y=0;d=ua(128,f[z>>2]|0,h|0)|0;x=y;y=0;if(x&1)break f;y=0;ja(596,i|0,d|0);x=y;y=0;if(x&1)break f}}while(0);y=0;ia(373,j|0);x=y;y=0;if((!(x&1)?(y=0,A=ua(87,f[z>>2]|0,0)|0,z=y,y=0,!(z&1)):0)?(B=A+12|0,y=0,ja(596,B|0,j|0),z=y,y=0,!(z&1)):0){d=f[l>>2]|0;while(1){if((f[E>>2]|0)==(d|0))break;y=0;ja(596,B|0,f[d+-4>>2]|0);z=y;y=0;if(z&1)break f;e=f[l>>2]|0;d=0;while(1){if((d|0)==-1)break;z=d+-1|0;f[l>>2]=e+(z<<2);d=z}d=e+-4|0}B=f[m>>2]|0;gKa(B)|0;y=0;ja(1725,A|0,f[B+4>>2]|0);B=y;y=0;if(B&1)break;d=f[m>>2]|0;gKa(d)|0;f[d+36>>2]=A;dpa(C);E4(E);d=1;r=98;break d}}while(0);d=Pa()|0}while(0);if((r|0)==56)d=Pa()|0;dpa(C)}E4(E);r=99;break}}d=Pa()|0;r=99}}while(0);if((r|0)==98){e2(F);break}else if((r|0)==99){e2(F);$a(d|0)}}else d=0;while(0);u=D;return d|0}function Hc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;w=u;u=u+80|0;t=w+76|0;e=w+64|0;n=w+72|0;o=w+68|0;r=w+52|0;q=w+40|0;p=w+28|0;s=w+16|0;v=w+12|0;x=w;ada(e);y=0;d=ua(51,c|0,1)|0;A=y;y=0;a:do if(!(A&1)?(y=0,g=la(203,d|0)|0,A=y,y=0,!(A&1)):0){FCa(t,g);f[f[e>>2]>>2]=f[t>>2];y=0;d=ua(51,c|0,2)|0;A=y;y=0;b:do if(!(A&1)){z=c+28|0;A=c+32|0;c:do if(fIa(b[d>>0]|0)|0){y=0;g=ua(51,c|0,2)|0;s=y;y=0;if(s&1)break b;y=0;d=ua(51,g|0,1)|0;s=y;y=0;if(!(s&1)?(y=0,h=la(203,d|0)|0,s=y,y=0,!(s&1)):0){FCa(t,h);f[(f[e>>2]|0)+4>>2]=f[t>>2];y=0;d=ua(51,g|0,0)|0;s=y;y=0;do if(!(s&1)?(y=0,i=la(203,d|0)|0,s=y,y=0,!(s&1)):0){if(bDa(i,f[18763]|0)|0){f[(f[e>>2]|0)+8>>2]=0;break c}y=0;d=ua(51,g|0,0)|0;s=y;y=0;if(!(s&1)?(y=0,l=la(203,d|0)|0,s=y,y=0,!(s&1)):0){if(bDa(l,f[18760]|0)|0){f[(f[e>>2]|0)+8>>2]=2;break c}y=0;d=ua(51,g|0,0)|0;s=y;y=0;if(!(s&1)?(y=0,m=la(203,d|0)|0,s=y,y=0,!(s&1)):0){if(bDa(m,f[18755]|0)|0){f[(f[e>>2]|0)+8>>2]=1;break c}y=0;d=ua(51,g|0,0)|0;s=y;y=0;if(s&1)break;y=0;d=la(203,d|0)|0;s=y;y=0;if(s&1)break;if(!(bDa(d,f[18829]|0)|0)){i=zb(20)|0;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;h=uHa(52383)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[q+11>>0]=h;d=q}else{g=h+16&-16;y=0;d=la(150,g|0)|0;A=y;y=0;if(A&1){B=50;break}f[q>>2]=d;f[q+8>>2]=g|-2147483648;f[q+4>>2]=h}Pta(d,52383,h)|0;SBa(d+h|0,0);y=0;ja(583,i|0,q|0);A=y;y=0;if(A&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}d=Pa()|0;zta(q);if(!g){g=d;break a}}else{y=0;za(3);y=0;B=50}while(0);if((B|0)==50)d=Pa()|0;Oa(i|0);g=d;break a}s=f[e>>2]|0;f[s+8>>2]=3;d=f[a>>2]|0;f[n>>2]=f[s+4>>2];y=0;f[t>>2]=f[n>>2];d=ua(97,d|0,t|0)|0;s=y;y=0;if(s&1)break;if(!d)break c;d=f[a>>2]|0;f[o>>2]=f[(f[e>>2]|0)+4>>2];y=0;f[t>>2]=f[o>>2];d=ua(144,d|0,t|0)|0;s=y;y=0;if(s&1)break;if(!(b[d+12>>0]|0))break c;i=zb(20)|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;h=uHa(52210)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[r+11>>0]=h;d=r}else{g=h+16&-16;y=0;d=la(150,g|0)|0;x=y;y=0;if(x&1){B=39;break}f[r>>2]=d;f[r+8>>2]=g|-2147483648;f[r+4>>2]=h}Pta(d,52210,h)|0;SBa(d+h|0,0);y=0;Ca(79,i|0,r|0,f[z>>2]|0,f[A>>2]|0);A=y;y=0;if(A&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}d=Pa()|0;zta(r);if(!g){g=d;break a}}else{y=0;za(3);y=0;B=39}while(0);if((B|0)==39)d=Pa()|0;Oa(i|0);g=d;break a}}}while(0);g=Pa()|0;break a}g=Pa()|0;break a}else{y=0;d=ua(51,c|0,2)|0;r=y;y=0;if(r&1)break b;if(!(Hra(d)|0)){y=0;d=ua(51,c|0,2)|0;r=y;y=0;if(r&1)break b;y=0;d=la(203,d|0)|0;r=y;y=0;if(r&1)break b;if((((gKa(b[d>>0]|0)|0)<<24>>24)+-48|0)>>>0>=10){y=0;d=ua(51,c|0,3)|0;r=y;y=0;if(!(r&1)?(y=0,j=la(203,d|0)|0,r=y,y=0,!(r&1)):0){FCa(t,j);f[(f[e>>2]|0)+4>>2]=f[t>>2];y=0;d=ua(51,c|0,2)|0;r=y;y=0;if(r&1)break b;y=0;d=la(203,d|0)|0;r=y;y=0;if(r&1)break b;if(bDa(d,f[18760]|0)|0){if(b[(f[a>>2]|0)+112>>0]|0){f[(f[e>>2]|0)+8>>2]=2;break}i=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;h=uHa(52398)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[p+11>>0]=h;d=p}else{g=h+16&-16;y=0;d=la(150,g|0)|0;A=y;y=0;if(A&1){B=73;break}f[p>>2]=d;f[p+8>>2]=g|-2147483648;f[p+4>>2]=h}Pta(d,52398,h)|0;SBa(d+h|0,0);y=0;ja(583,i|0,p|0);A=y;y=0;if(A&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}d=Pa()|0;zta(p);if(!g){g=d;break a}}else{y=0;za(3);y=0;B=73}while(0);if((B|0)==73)d=Pa()|0;Oa(i|0);g=d;break a}y=0;d=ua(51,c|0,2)|0;r=y;y=0;if(r&1)break b;y=0;d=la(203,d|0)|0;r=y;y=0;if(r&1)break b;if(bDa(d,f[18755]|0)|0){f[(f[e>>2]|0)+8>>2]=1;break}y=0;d=ua(51,c|0,2)|0;r=y;y=0;if(r&1)break b;y=0;d=la(203,d|0)|0;r=y;y=0;if(r&1)break b;if(bDa(d,f[18829]|0)|0){f[(f[e>>2]|0)+8>>2]=3;break}i=zb(20)|0;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;h=uHa(52428)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[s+11>>0]=h;d=s}else{g=h+16&-16;y=0;d=la(150,g|0)|0;A=y;y=0;if(A&1){B=93;break}f[s>>2]=d;f[s+8>>2]=g|-2147483648;f[s+4>>2]=h}Pta(d,52428,h)|0;SBa(d+h|0,0);y=0;ja(583,i|0,s|0);A=y;y=0;if(A&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}d=Pa()|0;zta(s);if(!g){g=d;break a}}else{y=0;za(3);y=0;B=93}while(0);if((B|0)==93)d=Pa()|0;Oa(i|0);g=d;break a}g=Pa()|0;break a}}y=0;d=ua(51,c|0,2)|0;s=y;y=0;if(!(s&1)?(y=0,k=la(203,d|0)|0,s=y,y=0,!(s&1)):0){FCa(t,k);s=f[e>>2]|0;f[s+4>>2]=f[t>>2];f[s+8>>2]=0;break}g=Pa()|0;break a}while(0);d=f[a>>2]|0;f[v>>2]=f[f[e>>2]>>2];y=0;f[t>>2]=f[v>>2];d=ua(140,d|0,t|0)|0;v=y;y=0;if(!(v&1)){if(!d){z=f[a>>2]|0;A=f[e>>2]|0;f[e>>2]=0;y=0;ja(69,z|0,A|0);A=y;y=0;if(A&1)break;d=f[e>>2]|0;f[e>>2]=0;if(d|0)$Ja(d);u=w;return}i=zb(20)|0;f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;h=uHa(52137)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[x+11>>0]=h;d=x}else{g=h+16&-16;y=0;d=la(150,g|0)|0;w=y;y=0;if(w&1){B=110;break}f[x>>2]=d;f[x+8>>2]=g|-2147483648;f[x+4>>2]=h}Pta(d,52137,h)|0;SBa(d+h|0,0);y=0;Ca(79,i|0,x|0,f[z>>2]|0,f[A>>2]|0);A=y;y=0;if(A&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}d=Pa()|0;zta(x);if(!g){g=d;break a}}else{y=0;za(3);y=0;B=110}while(0);if((B|0)==110)d=Pa()|0;Oa(i|0);g=d;break a}}while(0);g=Pa()|0}else B=12;while(0);if((B|0)==12)g=Pa()|0;d=f[e>>2]|0;f[e>>2]=0;if(d|0)$Ja(d);$a(g|0)}
function Eq(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+8>>2]|0;do switch(d|0){case 71:case 70:case 58:case 57:case 41:case 40:case 16:case 15:case 75:case 73:case 74:case 72:case 62:case 60:case 61:case 59:case 48:case 49:case 46:case 47:case 44:case 45:case 42:case 43:case 23:case 24:case 21:case 22:case 19:case 20:case 17:case 18:case 69:case 68:case 67:case 64:case 63:case 56:case 55:case 54:case 51:case 50:case 39:case 38:case 37:case 36:case 35:case 34:case 33:case 32:case 26:case 25:case 14:case 13:case 12:case 11:case 10:case 9:case 8:case 7:case 1:case 0:{c=1;break}case 2:{c=d;break}case 3:{c=d;break}case 4:{c=3;break}case 5:{c=3;break}case 6:{c=3;break}case 27:{c=2;break}case 28:{c=3;break}case 29:{c=3;break}case 30:{c=3;break}case 31:{c=3;break}case 52:{c=2;break}case 53:{c=3;break}case 65:{c=2;break}case 66:{c=3;break}default:Ka()}while(0);d=(Cn(a,f[b+12>>2]|0)|0)+c|0;return d+(Cn(a,f[b+16>>2]|0)|0)|0}function Fq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+64|0;c=j+16|0;g=j+48|0;d=j+52|0;i=j+36|0;e=j+32|0;k=j;a=f[a+36>>2]|0;gKa(a)|0;VBa(g,a);f[d>>2]=f[18952];a=f[18969]|0;f[18969]=a+1;uAa(k,a);f[c>>2]=f[k>>2];f[c+4>>2]=f[k+4>>2];f[c+8>>2]=f[k+8>>2];f[c+12>>2]=f[k+12>>2];a=FO(g,c)|0;f[e>>2]=a;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;y=0;ja(179,i|0,1);a=y;y=0;if(a&1){k=Pa()|0;E4(i);$a(k|0)}aZ(i,e,e+4|0);y=0;f[c>>2]=f[d>>2];c=xa(16,g|0,c|0,i|0,0)|0;k=y;y=0;if(!(k&1)?(y=0,h=oa(50,g|0,c|0,b|0)|0,k=y,y=0,!(k&1)):0){E4(i);u=j;return h|0}k=Pa()|0;E4(i);$a(k|0);return 0}function Gq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;gza(a);d=b+4|0;k=c+4|0;y=0;ja(604,a|0,((f[k>>2]|0)-(f[c>>2]|0)>>2)+((f[d>>2]|0)-(f[b>>2]|0)>>2)|0);j=y;y=0;if(!(j&1)){j=f[b>>2]|0;i=(f[d>>2]|0)-j>>2;g=f[c>>2]|0;h=(f[k>>2]|0)-g>>2;b=0;d=0;e=0;while(1){if(!(e>>>0<i>>>0&d>>>0<h>>>0))break;o=f[j+(e<<2)>>2]|0;p=f[g+(d<<2)>>2]|0;n=o>>>0<p>>>0;l=e+1|0;m=o>>>0>p>>>0;f[(f[a>>2]|0)+(b<<2)>>2]=n?o:m?p:o;b=b+1|0;d=((n^1)&1)+d|0;e=n?l:m?e:l}while(1){if(e>>>0>=i>>>0)break;f[(f[a>>2]|0)+(b<<2)>>2]=f[j+(e<<2)>>2];b=b+1|0;e=e+1|0}e=f[c>>2]|0;g=(f[k>>2]|0)-e>>2;while(1){if(d>>>0>=g>>>0)break;f[(f[a>>2]|0)+(b<<2)>>2]=f[e+(d<<2)>>2];d=d+1|0;b=b+1|0}y=0;ja(604,a|0,b|0);p=y;y=0;if(!(p&1))return}p=Pa()|0;E4(a);$a(p|0)}function Hq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+32|0;i=k+16|0;c=k;j=k+8|0;tW(c,a,b+12|0);d=f[c>>2]|0;f[i>>2]=d;e=i+4|0;h=c+4|0;g=f[h>>2]|0;f[e>>2]=g;f[c>>2]=0;f[h>>2]=0;h=a+104|0;c=f[h>>2]|0;do if(c>>>0>=(f[a+108>>2]|0)>>>0){y=0;ja(547,a+100|0,i|0);h=y;y=0;if(h&1){k=Pa()|0;tva(f[e>>2]|0);tva(0);$a(k|0)}else{c=f[e>>2]|0;break}}else{f[c>>2]=d;f[c+4>>2]=g;f[i>>2]=0;f[e>>2]=0;f[h>>2]=c+8;c=0}while(0);tva(c);tva(0);c=b+8|0;if(pJa(f[c>>2]|0)|0){h=gKa(f[a+84>>2]|0)|0;b=Wta(a)|0;f[j>>2]=f[c>>2];f[i>>2]=f[j>>2];lha(a,i,b);Ypa(h,b,0)}u=k;return}function Iq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;d=k+4|0;e=k;a:do if((b[a+26>>0]|0?(g=gKa(f[a+20>>2]|0)|0,f[e>>2]=f[c+24>>2],f[d>>2]=f[e>>2],g=T_(g,d)|0,Oo(a,(g|0)!=0,c,61461)|0):0)?(Nj(a,f[(f[c+28>>2]|0)+4>>2]|0,1,c,61491)|0,i=c+8|0,h=c+12|0,e=gKa(f[h>>2]|0)|0,j=g+8|0,Oo(a,(e|0)==((f[g+12>>2]|0)-(f[j>>2]|0)>>2|0),c,61326)|0):0){d=0;while(1){if(d>>>0>=(gKa(f[h>>2]|0)|0)>>>0)break a;g=bga(i,d)|0;if(!(Nj(a,f[(f[g>>2]|0)+4>>2]|0,f[(f[j>>2]|0)+(d<<2)>>2]|0,c,61355)|0))Vea(vj(Vea(76852,61383)|0,d)|0,61397)|0;d=d+1|0}}while(0);u=k;return}function Jq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=u;u=u+32|0;m=p+16|0;e=p+8|0;n=p+4|0;o=p;do if(!(TDa(c)|0)){l=gKa(c)|0;f[e>>2]=l;l=a+32|0;if(b[a+44>>0]|0)if((Jca(e,4,1,f[l>>2]|0)|0)==1){d=14;break}else{a=-1;break}f[n>>2]=m;j=e+4|0;k=a+36|0;g=a+40|0;h=m+8|0;i=m;a=e;while(1){d=f[k>>2]|0;d=bc[f[(f[d>>2]|0)+12>>2]&15](d,f[g>>2]|0,a,j,o,m,h,n)|0;e=(d|0)==1;if((f[o>>2]|0)==(a|0)){d=13;break}if((d|0)==3){if((Jca(a,1,1,f[l>>2]|0)|0)!=1){d=13;break}}else{if((d|1|0)!=1){d=13;break}d=(f[n>>2]|0)-i|0;if((Jca(m,1,d,f[l>>2]|0)|0)!=(d|0)){d=13;break}a=e?f[o>>2]|0:a}if(!e){d=12;break}}if((d|0)==12){d=14;break}else if((d|0)==13){a=-1;break}}else d=14;while(0);if((d|0)==14)a=Ava(c)|0;u=p;return a|0}function Kq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;m=l+4|0;k=l;if(f[18711]|0)Vea(76684,23136)|0;_pa(m);f[m+4>>2]=b;j=m+12|0;e=m+16|0;g=m+8|0;b=0;while(1){if(b>>>0>=d>>>0){e=5;break}h=f[c+(b<<2)>>2]|0;f[k>>2]=h;i=f[j>>2]|0;if(i>>>0>=(f[e>>2]|0)>>>0){y=0;ja(73,g|0,k|0);i=y;y=0;if(i&1){e=11;break}}else{f[i>>2]=h;f[j>>2]=i+4}b=b+1|0}do if((e|0)==5){y=0;ia(347,74768);k=y;y=0;if(k&1){b=Pa()|0;break}h=f[a>>2]|0;g=(f[a+4>>2]|0)-h>>2;e=0;while(1){if(e>>>0>=g>>>0){b=0;break}b=f[h+(e<<2)>>2]|0;if(HJ(b,m)|0)break;else e=e+1|0}$W(74768);Nza(m);u=l;return b|0}else if((e|0)==11)b=Pa()|0;while(0);Nza(m);$a(b|0);return 0}function Lq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;g=b;e=c-g>>3;d=a+8|0;k=f[a>>2]|0;j=k;a:do if(e>>>0>(f[d>>2]|0)-k>>3>>>0){IW(a);if(e>>>0>536870911)SZ();else{k=(f[d>>2]|0)-(f[a>>2]|0)|0;l=k>>2;T2(a,k>>3>>>0<268435455?(l>>>0<e>>>0?e:l):536870911);z_(a,b,c);break}}else{l=a+4|0;h=(f[l>>2]|0)-k>>3;i=e>>>0>h>>>0;h=i?b+(h<<3)|0:c;d=h-g|0;e=d>>3;if(e|0)S0(k|0,b|0,d|0)|0;e=j+(e<<3)|0;if(i){z_(a,h,c);break}d=f[l>>2]|0;while(1){if((d|0)==(e|0))break a;c=d+-8|0;f[l>>2]=c;d=c}}while(0);return}function Mq(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;c=b;f[c>>2]=a;d=b+8|0;a=b+4|0;f[d>>2]=c;sJ(d,f[18885]|0,f[18823]|0);sJ(d,f[18884]|0,f[18822]|0);sJ(d,f[18883]|0,f[18821]|0);sJ(d,f[18881]|0,f[18820]|0);sJ(d,f[18880]|0,f[18819]|0);sJ(d,f[18879]|0,f[18818]|0);sJ(d,f[18882]|0,f[18817]|0);sJ(d,f[18878]|0,f[18816]|0);f[a>>2]=c;oN(a,f[18788]|0,f[18811]|0);oN(a,f[18914]|0,f[18809]|0);oN(a,f[18787]|0,f[18799]|0);oN(a,f[18913]|0,f[18810]|0);u=b;return}function Nq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;d=g;f[d>>2]=b;e=g+4|0;do if(bDa(b,f[18859]|0)|0){b=gKa(a)|0;if(tJa(f[a>>2]|0)|0){d=Osa()|0;a=uqa(b)|0;PDa(e,H3(d,f[a>>2]|0,c)|0);break}else{PDa(e,e6(Lta()|0,a,c)|0);break}}else if(bDa(b,f[18870]|0)|0){d=gKa(F8(3)|0)|0;PDa(e,l6(l6(l6(d,y4(75724)|0)|0,a)|0,c)|0);break}else{b=gKa(F8(4)|0)|0;b=l6(b,y4(75752)|0)|0;PDa(e,l6(l6(l6(b,y4(d)|0)|0,a)|0,c)|0);break}while(0);u=g;return f[e>>2]|0}function Oq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;d=b+8|0;e=a+76|0;if(pJa(f[d>>2]|0)|0?(SN(e,d)|0)!=(a+80|0):0){g=NK(e,d)|0;h=a+48|0;b=g+4|0;c=f[b>>2]|0;if(c>>>0<(f[g+8>>2]|0)>>>0){f[c>>2]=0;j=c+4|0;f[j>>2]=0;f[c+8>>2]=0;f[c>>2]=f[h>>2];i=a+52|0;f[j>>2]=f[i>>2];j=a+56|0;f[c+8>>2]=f[j>>2];f[j>>2]=0;f[i>>2]=0;f[h>>2]=0;f[b>>2]=(f[b>>2]|0)+12}else Ct(g,h);qQ(h,Go(a,g)|0);dI(e,d)}return}function Pq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;gKa(a)|0;c=f[a>>2]|0;do if(!(bJa(c)|0)?!(gIa(c)|0):0)if(hJa(c)|0){c=UAa(a,0)|0;c=f[c>>2]|0;d=f[18938]|0;if(!(jha(c,d)|0)?!(jha(c,f[18916]|0)|0):0){if(jha(c,f[18931]|0)|0){c=WX(0,f[18870]|0)|0;break}if(jha(c,f[18929]|0)|0){if(!b){c=-1;break}c=WX(0,f[18870]|0)|0;break}else{if(!(jha(c,f[18939]|0)|0)){c=-1;break}c=WX(3,f[18869]|0)|0;break}}b=((jha(c,d)|0)^1)&1;c=UAa(a,1)|0;c=uqa(gKa(f[c>>2]|0)|0)|0;c=WX(b,f[c>>2]|0)|0}else c=-1;else e=3;while(0);if((e|0)==3)c=WX(0,f[18859]|0)|0;return c|0}function Qq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;e=k+8|0;g=k+4|0;i=k;f[e>>2]=b;f[g>>2]=c;f[i>>2]=d;j=Mta(a+144|0)|0;if(!(f[18711]|0)){h=j;a=c}else{b=qN(j)|0;b=Vea(vj(Vea(76684,20507)|0,b)|0,21045)|0;h=EN(74808,e)|0;h=Vea(vj(b,f[h>>2]|0)|0,20128)|0;b=EN(74808,g)|0;b=Vea(vj(h,f[b>>2]|0)|0,20128)|0;h=EN(74808,i)|0;Vea(vj(b,f[h>>2]|0)|0,20144)|0;h=j;b=f[e>>2]|0;a=f[g>>2]|0;d=f[i>>2]|0}f[j+16>>2]=b;f[j+8>>2]=a;f[j+12>>2]=d;WW(j);u=k;return h|0}function Rq(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;h=Tt(a,b,c,d,g)|0;if(GA(f[g>>2]|0,e,d)|0){i=f[d>>2]|0;f[d>>2]=f[e>>2];f[e>>2]=i;e=h+1|0;if(GA(f[g>>2]|0,d,c)|0){e=f[c>>2]|0;f[c>>2]=f[d>>2];f[d>>2]=e;e=h+2|0;if(GA(f[g>>2]|0,c,b)|0){i=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=i;if(GA(f[g>>2]|0,b,a)|0){e=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=e;e=h+4|0}else e=h+3|0}}}else e=h;return e|0}function Sq(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=a+11|0;d=b[i>>0]|0;e=d<<24>>24<0;if(e){k=f[a+4>>2]|0;g=(f[a+8>>2]&2147483647)+-1|0}else{k=d&255;g=10}c=k>>>0<11;j=c?10:(k+16&-16)+-1|0;a:do if((j|0)!=(g|0)){do if(c){c=f[a>>2]|0;if(e){g=0;d=c;e=a;h=12}else{Pta(a,c,(d&255)+1|0)|0;$Ja(c);h=15}}else{d=j+1|0;e=QCa(d)|0;if(j>>>0<=g>>>0&(e|0)==0)break a;c=b[i>>0]|0;if(c<<24>>24<0){g=1;d=f[a>>2]|0;h=12;break}else{Pta(e,a,(c&255)+1|0)|0;c=a+4|0;h=14;break}}while(0);if((h|0)==12){c=a+4|0;Pta(e,d,(f[c>>2]|0)+1|0)|0;$Ja(d);if(g){d=j+1|0;h=14}else h=15}if((h|0)==14){f[a+8>>2]=d|-2147483648;f[c>>2]=k;f[a>>2]=e;break}else if((h|0)==15){b[i>>0]=k;break}}while(0);return}function Tq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;l=k+4|0;g=k;f[l>>2]=0;h=l+4|0;f[h>>2]=0;f[l+8>>2]=0;i=c+4|0;j=l+8|0;c=f[c>>2]|0;a:while(1){if((c|0)==(i|0)){d=3;break}d=f[c+16>>2]|0;f[g>>2]=d;e=f[h>>2]|0;if((e|0)==(f[j>>2]|0)){y=0;ja(72,l|0,g|0);e=y;y=0;if(e&1){d=11;break}}else{f[e>>2]=d;f[h>>2]=e+4}d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue a}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}do if((d|0)==3){y=0;Ca(50,a|0,b|0,l|0,0);b=y;y=0;if(b&1){c=Pa()|0;break}else{E4(l);u=k;return}}else if((d|0)==11)c=Pa()|0;while(0);E4(l);$a(c|0)}function Uq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;c=a+96|0;d=b+8|0;do if((f[b+16>>2]|0)==0?(f[b+12>>2]|0)==0:0){e=xAa(f[(f[a+44>>2]|0)+-4>>2]|0)|0;if(e|0?(j=efa(e+12|0)|0,(b|0)==(f[j>>2]|0)):0){d=NK(a+60|0,d)|0;vja(g,b,e);a=d+4|0;c=f[a>>2]|0;if(c>>>0<(f[d+8>>2]|0)>>>0){f[c>>2]=f[g>>2];f[c+4>>2]=f[g+4>>2];f[c+8>>2]=f[g+8>>2];f[a>>2]=(f[a>>2]|0)+12}else Kx(d,g);break}jz(g,c,d,d)}else h=3;while(0);if((h|0)==3)jz(g,c,d,d);u=i;return}function Vq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;c=Pqa(b)|0;e=a+44|0;f[e>>2]=c;if(c|0){h=a+48|0;oG(h,c);d=f[a+52>>2]|0;c=f[h>>2]|0;while(1){if((c|0)==(d|0))break;lu(c,75868,75872);c=c+12|0}f[a+60>>2]=f[e>>2];h=b+36|0;fC(a+16|0,h);We(a);g=a+100|0;c=a+104|0;if((f[c>>2]|0)!=(f[g>>2]|0)){e=f[a+36>>2]|0;gKa(e)|0;VBa(i,e);e=kaa(f[i>>2]|0,0)|0;d=f[c>>2]|0;b=e+12|0;c=f[g>>2]|0;while(1){if((c|0)==(d|0))break;AW(b,f[c>>2]|0);c=c+4|0}AW(b,f[h>>2]|0);Ela(e,f[(f[h>>2]|0)+4>>2]|0);f[h>>2]=e}}u=j;return}function Wq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+16|0;e=h+8|0;d=h;Aaa(f[a>>2]|0,39223,0)|0;g=b+8|0;Bwa(e,g);iua(d,g);g=e+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[g>>2]|0,c,d)|0))break;i=ppa(e)|0;j=c3(f[a>>2]|0,32)|0;K2(j,f[i>>2]|0)|0;bva(e)}c=c3(f[a>>2]|0,32)|0;K2(c,f[b+24>>2]|0)|0;zea(a);c=f[b+32>>2]|0;if(c|0?!(sGa(f[c>>2]|0)|0):0)kF(a,c);kF(a,f[b+28>>2]|0);x_(a);u=h;return}function Xq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;e=j+12|0;g=j+8|0;h=j+4|0;i=j;f[e>>2]=a;f[g>>2]=b;f[h>>2]=c;f[i>>2]=d;if(f[18711]|0){a=Vea(76684,22441)|0;b=EN(74832,e)|0;b=Vea(vj(a,f[b>>2]|0)|0,22477)|0;a=EN(74832,g)|0;a=Vea(vj(b,f[a>>2]|0)|0,20128)|0;b=EN(74808,h)|0;b=Vea(vj(a,f[b>>2]|0)|0,20128)|0;a=EN(74808,i)|0;Vea(vj(b,f[a>>2]|0)|0,20144)|0;a=f[e>>2]|0;b=f[g>>2]|0;c=f[h>>2]|0;d=f[i>>2]|0}KN(a,b,c,d);u=j;return}function Yq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;d=a+4|0;if(!(b[c+1>>0]|0)){zaa(f[a>>2]|0,f[d>>2]|0)|0;TF(a,c);Vea(f[a>>2]|0,f[a+16>>2]|0)|0}e=c+16|0;c=c+20|0;if((f[e>>2]|0)!=(f[c>>2]|0)){zaa(f[a>>2]|0,f[d>>2]|0)|0;h=f[c>>2]|0;g=f[e>>2]|0;while(1){if((g|0)==(h|0))break;d=g+4|0;c=g+8|0;if((f[d>>2]|0)!=(f[c>>2]|0)){Aaa(f[a>>2]|0,39351,1)|0;Mm(a,f[g>>2]|0);e=f[c>>2]|0;c=f[d>>2]|0;while(1){if((c|0)==(e|0))break;d=f[c>>2]|0;c3(f[a>>2]|0,32)|0;sQ(a,d)|0;c=c+4|0}c3(f[a>>2]|0,41)|0}g=g+16|0}Vea(f[a>>2]|0,f[a+16>>2]|0)|0}return}function Zq(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;do if(!(b[a+12>>0]|0))d=a+4|0;else{e=Vea(wj(Vea(76852,58623)|0,c&255)|0,54382)|0;d=a+4|0;e=Vea(vj(e,(f[d>>2]|0)-(f[a>>2]|0)|0)|0,72083)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[i>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,h=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,k=y,y=0,!(k&1)):0){pza(i);jn(e,h)|0;Yp(e)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);b[i>>0]=c;e=f[d>>2]|0;if(e>>>0<(f[a+8>>2]|0)>>>0){b[e>>0]=c;f[d>>2]=(f[d>>2]|0)+1}else hD(a,i);u=j;return a|0}function _q(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;j=k+8|0;i=k;c=b+8|0;if(pJa(f[c>>2]|0)|0?(d=SN(a+44|0,c)|0,(d|0)!=(a+48|0)):0)f[b+4>>2]=f[d+20>>2];else h=4;do if((h|0)==4){e=b+12|0;g=b+4|0;if(!(gKa(f[b+16>>2]|0)|0)){f[g>>2]=0;break}Bwa(j,e);iua(i,e);c=j+4|0;d=f[i>>2]|0;a=f[i+4>>2]|0;while(1){if(!(Cpa(f[j>>2]|0,f[c>>2]|0,d,a)|0)){h=10;break}i=ppa(j)|0;if((f[(f[i>>2]|0)+4>>2]|0)==5){h=9;break}bva(j)}if((h|0)==9){f[g>>2]=5;break}else if((h|0)==10){j=efa(e)|0;f[g>>2]=f[(f[j>>2]|0)+4>>2];break}}while(0);u=k;return}function $q(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;c=i+4|0;g=i;e=f[a>>2]|0;if(b[e+112>>0]|0?(b[e+113>>0]|0)==0:0){do if(b[a+12>>0]|0){d=Vea(76852,59570)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[c>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,j=y,y=0,!(j&1)):0){pza(c);jn(d,h)|0;Yp(d)|0;break}j=Pa()|0;pza(c);$a(j|0)}while(0);j=uW(a,5)|0;h=f[a+4>>2]|0;PDa(g,1);Un(h,f[g>>2]|0)|0;h=f[a>>2]|0;d=f[h+92>>2]|0;e=f[h+96>>2]|0;g=(gKa(e)|0)!=65535;iF(a,d,e,g,(b[h+114>>0]|0)!=0);KE(a,j)}u=i;return}function ar(a,b,c,d,e,g,h,i,j,k,l,m,n,o,p,q,r){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,v=0,w=0;w=u;u=u+80|0;s=w;t=w+8|0;v=F8(16)|0;f[t>>2]=b;f[t+4>>2]=c;f[t+8>>2]=d;f[t+12>>2]=e;f[t+16>>2]=g;f[t+20>>2]=h;f[t+24>>2]=i;f[t+28>>2]=j;f[t+32>>2]=k;f[t+36>>2]=l;f[t+40>>2]=m;f[t+44>>2]=n;f[t+48>>2]=o;f[t+52>>2]=p;f[t+56>>2]=q;f[t+60>>2]=r;c=0;while(1){if((c|0)==16)break;b=gKa(v)|0;l6(b,f[t+(c<<2)>>2]|0)|0;c=c+1|0}t=gKa(F8(3)|0)|0;t=l6(t,y4(75716)|0)|0;PDa(s,l6(l6(t,Bea(a)|0)|0,v)|0);u=w;return f[s>>2]|0}function br(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;i=l+24|0;j=l;k=l+12|0;if(((((c-a|0)>2?(b[a>>0]|0)==116:0)?(b[a+1>>0]|0)==119:0)?(m=a+2|0,g=fc(m,c,d)|0,(g|0)!=(m|0)):0)?(h=d+4|0,e=f[h>>2]|0,(f[d>>2]|0)!=(e|0)):0){HL(k,e+-24|0);y=0;oa(77,k|0,0,72281)|0;m=y;y=0;if(m&1){m=Pa()|0;zta(k);$a(m|0)}f[j>>2]=f[k>>2];f[j+4>>2]=f[k+4>>2];f[j+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}hM(i,j);nu((f[h>>2]|0)+-24|0,i);Xka(i);zta(j);zta(k);a=g}u=l;return a|0}function cr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;d=f[18965]|0;do if(d){k=b[c+11>>0]|0;j=k<<24>>24<0;k=j?f[c+4>>2]|0:k&255;j=j?f[c>>2]|0:c;c=75860;while(1){e=d+16|0;g=b[e+11>>0]|0;h=g<<24>>24<0;e=h?f[e>>2]|0:e;g=h?f[d+20>>2]|0:g&255;h=g>>>0<k>>>0;l=ara(j,e,h?g:k)|0;i=k>>>0<g>>>0;if((((l|0)==0?(i?-2147483648:0):l)|0)<0){e=f[d>>2]|0;if(!e){e=5;break}}else{l=ara(e,j,i?k:g)|0;if((((l|0)==0?(h?-2147483648:0):l)|0)>=0){e=10;break}c=d+4|0;e=f[c>>2]|0;if(!e){e=9;break}else d=c}c=d;d=e}if((e|0)==5){c=d;break}else if((e|0)==9)break;else if((e|0)==10)break}else{c=75860;d=75860}while(0);f[a>>2]=d;return c|0}function dr(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+80|0;c=l+64|0;e=l+56|0;b=l+48|0;g=l+8|0;h=l;i=a+4|0;if((f[i>>2]|0)!=5){j=a+12|0;Bwa(e,j);iua(b,j);j=e+4|0;d=f[b>>2]|0;b=f[b+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[j>>2]|0,d,b)|0))break;m=ppa(e)|0;if((f[(f[m>>2]|0)+4>>2]|0)==5){k=5;break}bva(e)}do if((k|0)==5){f[h>>2]=f[a+8>>2];f[c>>2]=f[h>>2];fia(g,c);f[c>>2]=a;y=0;ja(269,g|0,c|0);m=y;y=0;if(m&1){m=Pa()|0;Rua(g);$a(m|0)}else{f[i>>2]=f[g+32>>2]|0?f[g+36>>2]|0:5;Rua(g);break}}while(0)}u=l;return}function er(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;i=k+4|0;j=k;f[i>>2]=c;f[j>>2]=d;e=qva(b,c)|0;g=qva(b,d)|0;if(e)if(g)if((qva(b,d)|0)&e)b=c>>>0<d>>>0;else h=6;else b=1;else if(e|g^1)h=6;else b=0;do if((h|0)==6){c=a+44|0;b=EN(c,i)|0;b=f[b>>2]|0;h=EN(c,j)|0;h=(b|0)==(f[h>>2]|0);b=EN(c,i)|0;b=f[b>>2]|0;if(!h){j=EN(c,j)|0;b=b>>>0>(f[j>>2]|0)>>>0;break}if(!b){b=(f[i>>2]|0)>>>0<(f[j>>2]|0)>>>0;break}else{b=a+56|0;i=EN(b,i)|0;i=f[i>>2]|0;b=EN(b,j)|0;b=i>>>0<(f[b>>2]|0)>>>0;break}}while(0);u=k;return b|0}function fr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i+4|0;c=i;rJa(e);h=vt(a,f[b+8>>2]|0,e)|0;d=a+4|0;g=gKa(JF(a,f[b+12>>2]|0,f[d>>2]|0)|0)|0;PDa(c,0);b=f[b+16>>2]|0;if(!b)a=f[c>>2]|0;else{a=JF(a,b,f[d>>2]|0)|0;d=gKa(a)|0;f[c>>2]=d}b=f[e>>2]|0;if(tJa(b)|0)b=GJ(h,g,a)|0;else{h=zQ(h)|0;e=UAa(h,1)|0;e=gKa(f[e>>2]|0)|0;l6(e,GJ(Bea(b)|0,g,a)|0)|0;b=h}u=i;return b|0}function gr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;c=i+12|0;d=i+8|0;e=i+4|0;g=i;h=oo(a,lj(b,1)|0)|0;j=f[a>>2]|0;f[d>>2]=h;f[c>>2]=f[d>>2];j=I$(j,c)|0;d=f[a+4>>2]|0;if((j|0)!=0?(f[j+12>>2]|0)==0:0){j=Mqa(d)|0;f[j+24>>2]=h;d=f[a>>2]|0;f[e>>2]=h;f[c>>2]=f[e>>2];e=QY(d,c)|0;h=f[a>>2]|0;f[g>>2]=f[e+16>>2];f[c>>2]=f[g>>2];c=(UX(h,c)|0)+4|0;f[j+4>>2]=f[c>>2];xU(a,b,lxa(b)|0,j);c=j}else{c=ysa(d)|0;f[c+24>>2]=h;j=KM(a+52|0,c+24|0)|0;f[c+4>>2]=f[j>>2];xU(a,b,lxa(b)|0,c);$Aa(c)}u=i;return c|0}function hr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;d=k+4|0;e=k;g=c+12|0;h=f[g>>2]|0;do if(!(ata(h)|0)){i=c+16|0;j=f[i>>2]|0;if(!(ata(j)|0)){f[e>>2]=f[c+8>>2];f[d>>2]=f[e>>2];LY(a,d);if(f[i>>2]|0)break;b[a+104>>0]=0;break}if(!h){g1(a,j)|0;break}else{j=f[a+36>>2]|0;gKa(j)|0;j=osa(j+144|0)|0;e=j+12|0;lU(e,2);g=KX(a,f[g>>2]|0)|0;h=bga(e,0)|0;f[h>>2]=g;h=f[i>>2]|0;i=bga(e,1)|0;f[i>>2]=h;Ela(j,f[c+4>>2]|0);g1(a,j)|0;break}}else g1(a,h)|0;while(0);u=k;return}function ir(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0;k=Hu(a,b,c,d,g)|0;h=f[e>>2]|0;i=f[d>>2]|0;j=g+4|0;if(DS(f[f[g>>2]>>2]|0,f[j>>2]|0,h,i)|0){f[d>>2]=h;f[e>>2]=i;e=k+1|0;h=f[d>>2]|0;i=f[c>>2]|0;if(DS(f[f[g>>2]>>2]|0,f[j>>2]|0,h,i)|0){f[c>>2]=h;f[d>>2]=i;e=k+2|0;h=f[c>>2]|0;i=f[b>>2]|0;if(DS(f[f[g>>2]>>2]|0,f[j>>2]|0,h,i)|0){f[b>>2]=h;f[c>>2]=i;e=f[b>>2]|0;h=f[a>>2]|0;if(DS(f[f[g>>2]>>2]|0,f[j>>2]|0,e,h)|0){f[a>>2]=e;f[b>>2]=h;e=k+4|0}else e=k+3|0}}}else e=k;return e|0}function jr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j+4|0;i=j;do if(b[a+12>>0]|0){h=Vea(76852,56525)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}k=Pa()|0;pza(g);$a(k|0)}while(0);Ql(a,c+12|0);d=a+4|0;g=f[d>>2]|0;k=c+4|0;h=pJa(f[k>>2]|0)|0;h=Zq(g,h?34:33)|0;c=EN(a+72|0,c+8|0)|0;PDa(i,f[c>>2]|0);Un(h,f[i>>2]|0)|0;if((f[k>>2]|0)==5)Zq(f[d>>2]|0,0)|0;u=j;return}function kr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;b[c+12>>0]=(c|0)==(a|0)&1;g=c;while(1){if((g|0)==(a|0))break;d=f[g+8>>2]|0;i=d+12|0;if(b[i>>0]|0)break;h=d+8|0;c=f[h>>2]|0;e=f[c>>2]|0;if((e|0)==(d|0)){e=f[c+4>>2]|0;if(!e){j=8;break}e=e+12|0;if(!(b[e>>0]|0))d=e;else{j=8;break}}else{if(!e){j=13;break}e=e+12|0;if(!(b[e>>0]|0))d=e;else{j=13;break}}b[i>>0]=1;b[c+12>>0]=(c|0)==(a|0)&1;b[d>>0]=1;g=c}if((j|0)==8){if((f[d>>2]|0)!=(g|0)){SU(d);c=f[h>>2]|0;d=c;c=f[c+8>>2]|0}b[d+12>>0]=1;b[c+12>>0]=0;iU(c)}else if((j|0)==13){if((f[d>>2]|0)==(g|0)){iU(d);c=f[h>>2]|0;d=c;c=f[c+8>>2]|0}b[d+12>>0]=1;b[c+12>>0]=0;SU(c)}return}function lr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+48|0;e=g;h=g+4|0;f[e>>2]=b;tka(h);y=0;ja(1787,h|0,e|0);e=y;y=0;do if(!(e&1)){gua(a);d=h+28|0;e=a+4|0;b=f[h+24>>2]|0;a:while(1){if((b|0)==(d|0)){c=10;break}c=b+16|0;y=0;Ca(74,a|0,e|0,c|0,c|0);c=y;y=0;if(c&1){c=9;break}c=f[b+4>>2]|0;if(!c)while(1){c=f[b+8>>2]|0;if((f[c>>2]|0)==(b|0)){b=c;continue a}else b=c}else b=c;while(1){c=f[b>>2]|0;if(!c)break;else b=c}}if((c|0)==9){b=Pa()|0;Zla(a);break}else if((c|0)==10){dpa(h);u=g;return}}else b=Pa()|0;while(0);dpa(h);$a(b|0)}function mr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;h=l+16|0;i=l+4|0;d=l+8|0;e=l;m=bDa(c,-1)|0;k=a+52|0;g=(b[k>>0]|0)!=0;j=a+48|0;a:do if(m){if(!g){c=f[j>>2]|0;m=((bDa(c,-1)|0)^1)&1;b[k>>0]=m}}else{do if(g){m=oHa(f[j>>2]|0)|0;b[d>>0]=m;m=f[a+36>>2]|0;switch(bc[f[(f[m>>2]|0)+12>>2]&15](m,f[a+40>>2]|0,d,d+1|0,e,h,h+8|0,i)|0){case 1:case 2:{c=-1;break a}case 3:{b[h>>0]=f[j>>2];f[i>>2]=h+1;break}default:{}}a=a+32|0;while(1){d=f[i>>2]|0;if(d>>>0<=h>>>0){a=11;break}m=d+-1|0;f[i>>2]=m;if((jP(b[m>>0]|0,f[a>>2]|0)|0)==-1){a=10;break}}if((a|0)==10){c=-1;break a}else if((a|0)==11)break}while(0);f[j>>2]=c;b[k>>0]=1}while(0);u=l;return c|0}function nr(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0;do if(!(bDa(a,f[c+8>>2]|0)|0)){h=a+8|0;if(!(bDa(a,f[c>>2]|0)|0)){j=f[h>>2]|0;Jb[f[(f[j>>2]|0)+24>>2]&7](j,c,d,e,g);break}a=c+32|0;if((f[c+16>>2]|0)!=(d|0)?(i=c+20|0,(f[i>>2]|0)!=(d|0)):0){f[a>>2]=e;e=c+44|0;if((f[e>>2]|0)==4)break;a=c+52|0;b[a>>0]=0;k=c+53|0;b[k>>0]=0;h=f[h>>2]|0;Tb[f[(f[h>>2]|0)+20>>2]&15](h,c,d,d,1,g);if(b[k>>0]|0)if(!(b[a>>0]|0)){a=3;j=11}else a=3;else{a=4;j=11}if((j|0)==11){f[i>>2]=d;k=c+40|0;f[k>>2]=(f[k>>2]|0)+1;if((f[c+36>>2]|0)==1?(f[c+24>>2]|0)==2:0)b[c+54>>0]=1}f[e>>2]=a;break}if((e|0)==1)f[a>>2]=1}else _9(c,d,e);while(0);return}function or(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+48|0;e=g;h=g+4|0;f[e>>2]=b;tka(h);y=0;ja(1786,h|0,e|0);e=y;y=0;do if(!(e&1)){gua(a);d=h+28|0;e=a+4|0;b=f[h+24>>2]|0;a:while(1){if((b|0)==(d|0)){c=10;break}c=b+16|0;y=0;Ca(74,a|0,e|0,c|0,c|0);c=y;y=0;if(c&1){c=9;break}c=f[b+4>>2]|0;if(!c)while(1){c=f[b+8>>2]|0;if((f[c>>2]|0)==(b|0)){b=c;continue a}else b=c}else b=c;while(1){c=f[b>>2]|0;if(!c)break;else b=c}}if((c|0)==9){b=Pa()|0;Zla(a);break}else if((c|0)==10){dpa(h);u=g;return}}else b=Pa()|0;while(0);dpa(h);$a(b|0)}function pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+32|0;j=m+24|0;k=m+20|0;l=m;i=f[a>>2]|0;e=(f[a+4>>2]|0)-i>>4;g=e+1|0;h=BDa()|0;if(h>>>0<g>>>0)SZ();n=(f[a+8>>2]|0)-i|0;i=n>>3;TE(l,n>>4>>>0<h>>>1>>>0?(i>>>0<g>>>0?g:i):h,e,a+8|0);h=l+8|0;i=f[h>>2]|0;g=f[b>>2]|0;e=f[c>>2]|0;y=0;ya(71,k|0,f[d>>2]|0,0);d=y;y=0;if(!(d&1)?(y=0,f[j>>2]=f[k>>2],Ca(56,i|0,g|0,e|0,j|0),n=y,y=0,!(n&1)):0){f[h>>2]=i+16;wE(a,l);iZ(l);u=m;return}n=Pa()|0;iZ(l);$a(n|0)}function qr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;i=l+24|0;j=l+20|0;k=l;g=f[a>>2]|0;h=(f[a+4>>2]|0)-g>>4;d=h+1|0;e=BDa()|0;if(e>>>0<d>>>0)SZ();m=(f[a+8>>2]|0)-g|0;g=m>>3;TE(k,m>>4>>>0<e>>>1>>>0?(g>>>0<d>>>0?d:g):e,h,a+8|0);e=k+8|0;g=f[e>>2]|0;d=f[b>>2]|0;c=f[c>>2]|0;y=0;ya(71,j|0,c|0,((c|0)<0)<<31>>31|0);c=y;y=0;if(!(c&1)?(y=0,f[i>>2]=f[j>>2],Ca(56,g|0,d|0,83563,i|0),m=y,y=0,!(m&1)):0){f[e>>2]=g+16;wE(a,k);iZ(k);u=l;return}m=Pa()|0;iZ(k);$a(m|0)}function rr(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;c=u;u=u+16|0;g=c;if(qIa(b[a>>0]|0)|0){u=c;return f[a+20>>2]|0}h=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=uHa(51784)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[g+11>>0]=e;c=g}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){i=10;break}f[g>>2]=c;f[g+8>>2]=d|-2147483648;f[g+4>>2]=e}Pta(c,51784,e)|0;SBa(c+e|0,0);y=0;Ca(79,h|0,g|0,f[a+28>>2]|0,f[a+32>>2]|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}c=Pa()|0;zta(g);if(d)i=12}else{y=0;za(3);y=0;i=10}while(0);if((i|0)==10){c=Pa()|0;i=12}if((i|0)==12)Oa(h|0);$a(c|0);return 0}function sr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;i=l+8|0;j=l+4|0;k=l;do if(!(b[a+12>>0]|0))d=a+4|0;else{g=Vea(76852,56490)|0;d=a+4|0;e=f[d>>2]|0;e=vj(g,(f[e+4>>2]|0)+1-(f[e>>2]|0)|0)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[i>>2]|0,77556)|0;m=y;y=0;if(!(m&1)?(y=0,h=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,m=y,y=0,!(m&1)):0){pza(i);jn(e,h)|0;Yp(e)|0;break}m=Pa()|0;pza(i);$a(m|0)}while(0);m=Zq(f[d>>2]|0,35)|0;f[k>>2]=f[c+8>>2];f[i>>2]=f[k>>2];PDa(j,Vp(a,i)|0);Un(m,f[j>>2]|0)|0;u=l;return}function tr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;g=b;e=c-g>>2;d=a+8|0;k=f[a>>2]|0;j=k;a:do if(e>>>0>(f[d>>2]|0)-k>>2>>>0){_X(a);if(e>>>0>1073741823)SZ();else{k=(f[d>>2]|0)-(f[a>>2]|0)|0;l=k>>1;g4(a,k>>2>>>0<536870911?(l>>>0<e>>>0?e:l):1073741823);J0(a,b,c);break}}else{l=a+4|0;h=(f[l>>2]|0)-k>>2;i=e>>>0>h>>>0;h=i?b+(h<<2)|0:c;d=h-g|0;e=d>>2;if(e|0)S0(k|0,b|0,d|0)|0;e=j+(e<<2)|0;if(i){J0(a,h,c);break}d=f[l>>2]|0;while(1){if((d|0)==(e|0))break a;c=d+-4|0;f[l>>2]=c;d=c}}while(0);return}function ur(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i+12|0;h=i;e=cr(g,c)|0;c=f[e>>2]|0;if(!c){GE(h,d);c=f[h>>2]|0;DJ(f[g>>2]|0,e,c);e=1}else e=0;f[a>>2]=c;b[a+4>>0]=e;u=i;return}function vr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+96|0;h=j+4|0;e=j;g=a+12|0;d=a+16|0;c=f[d>>2]|0;do if((gKa(c)|0)==1){c=bga(g,0)|0;c=f[c>>2]|0;f[e>>2]=f[a+8>>2];f[h>>2]=f[e>>2];if(oB(c,h)|0){c=f[d>>2]|0;i=7;break}c=bga(g,0)|0;c=f[c>>2]|0;Ot(h,uya(f[b+40>>2]|0)|0,c);g=jca(h)|0;hT(h);if(!g?!(rCa(f[c+4>>2]|0)|0):0){b=f[b+36>>2]|0;gKa(b)|0;VBa(h,b);a=jq(h,a)|0}else a=c}else i=7;while(0);if((i|0)==7)if(!(gKa(c)|0))Tta(a)|0;u=j;return a|0}function wr(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i+12|0;h=i;e=cr(g,c)|0;c=f[e>>2]|0;if(!c){KD(h,d);c=f[h>>2]|0;DJ(f[g>>2]|0,e,c);e=1}else e=0;f[a>>2]=c;b[a+4>>0]=e;u=i;return}function xr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;c=b+116|0;i=a+44|0;if(pJa(f[c>>2]|0)|0){g=KM(i,c)|0;f[g>>2]=(f[g>>2]|0)+1}d=f[b+28>>2]|0;c=f[b+24>>2]|0;while(1){if((c|0)==(d|0))break;g=KM(i,(f[c>>2]|0)+4|0)|0;f[g>>2]=(f[g>>2]|0)+1;c=c+4|0}e=f[b+80>>2]|0;d=f[b+76>>2]|0;while(1){if((d|0)==(e|0))break;g=f[d+8>>2]|0;c=f[d+4>>2]|0;while(1){if((c|0)==(g|0))break;k=KM(i,c)|0;f[k>>2]=(f[k>>2]|0)+1;c=c+4|0}d=d+16|0}g=f[b+36>>2]|0;k=f[b+40>>2]|0;f[h>>2]=a;hf(g,k,h);hW(i);u=j;return}function yr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;d=u;u=u+16|0;g=d;if((On(a)|0)==(c<<24>>24|0)){u=d;return}e=zb(12)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;d=uHa(58454)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[g+11>>0]=d;a=g}else{c=d+16&-16;y=0;a=la(150,c|0)|0;i=y;y=0;if(i&1){h=10;break}f[g>>2]=a;f[g+8>>2]=c|-2147483648;f[g+4>>2]=d}Pta(a,58454,d)|0;SBa(a+d|0,0);y=0;ja(2001,e|0,g|0);i=y;y=0;if(i&1)c=1;else{y=0;ya(79,e|0,4016,384);y=0;c=0}a=Pa()|0;zta(g);if(c)h=12}else{y=0;za(3);y=0;h=10}while(0);if((h|0)==10){a=Pa()|0;h=12}if((h|0)==12)Oa(e|0);$a(a|0)}function zr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;h=a+104|0;i=c+12|0;a:do if((b[h>>0]|0)==0?(g=c+16|0,e=f[g>>2]|0,(gKa(e)|0)>>>0>1):0){d=0;while(1){if(d>>>0>=(e+-1|0)>>>0)break a;e=bga(i,d)|0;d=d+1|0;if((f[(f[e>>2]|0)+4>>2]|0)==5)break;e=f[g>>2]|0}lU(i,d)}while(0);d=c+8|0;if(pJa(f[d>>2]|0)|0){e=a+108|0;if(!(b[h>>0]|0))g=(WS(e,d)|0)!=0&1;else g=1;b[h>>0]=g;WU(e,d)}if((gKa(f[c+16>>2]|0)|0)==1?(i=bga(i,0)|0,xFa(f[(f[i>>2]|0)+4>>2]|0)|0):0)g1(a,Qca(c,a)|0)|0;else xN(a+44|0,c);return}function Ar(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;do if((a|0)!=(c|0)?(e=Zh(a,c,d)|0,(e|0)!=(a|0)):0){h=Ce(e,c,d)|0;if((h|0)!=(e|0)){g=d+4|0;c=f[g>>2]|0;if(((c-(f[d>>2]|0)|0)/24|0)>>>0>=2){HL(i,c+-24|0);a=f[g>>2]|0;c=a+-24|0;e=a;while(1){if((e|0)==(c|0))break;d=e+-24|0;f[g>>2]=d;Xka(d);e=f[g>>2]|0}g=b[i+11>>0]|0;d=g<<24>>24<0;y=0;oa(73,a+-48|0,(d?f[i>>2]|0:i)|0,(d?f[i+4>>2]|0:g&255)|0)|0;g=y;y=0;if(g&1){j=Pa()|0;zta(i);$a(j|0)}else{zta(i);a=h;break}}}else a=e}while(0);u=j;return a|0}function Br(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+32|0;h=l+16|0;i=l+8|0;d=l+4|0;e=l;m=TDa(c)|0;k=a+52|0;g=(b[k>>0]|0)!=0;j=a+48|0;a:do if(m){if(!g){c=f[j>>2]|0;m=((TDa(c)|0)^1)&1;b[k>>0]=m}}else{do if(g){m=gKa(f[j>>2]|0)|0;f[d>>2]=m;m=f[a+36>>2]|0;switch(bc[f[(f[m>>2]|0)+12>>2]&15](m,f[a+40>>2]|0,d,d+4|0,e,h,h+8|0,i)|0){case 1:case 2:{c=-1;break a}case 3:{b[h>>0]=f[j>>2];f[i>>2]=h+1;break}default:{}}a=a+32|0;while(1){d=f[i>>2]|0;if(d>>>0<=h>>>0){a=11;break}m=d+-1|0;f[i>>2]=m;if((jP(b[m>>0]|0,f[a>>2]|0)|0)==-1){a=10;break}}if((a|0)==10){c=-1;break a}else if((a|0)==11)break}while(0);f[j>>2]=c;b[k>>0]=1}while(0);u=l;return c|0}function Cr(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;f[a>>2]=c;f[a+4>>2]=c+144;f[a+8>>2]=d;b[a+12>>0]=e&1;e=a+16|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=0;f[e+16>>2]=0;f[e+20>>2]=0;f[a+40>>2]=-1;b[a+44>>0]=0;gua(a+48|0);e=a+60|0;f[a+88>>2]=0;f[a+92>>2]=0;f[a+96>>2]=0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=0;f[e+16>>2]=0;f[e+20>>2]=0;gua(a+100|0);f[a+112>>2]=0;f[a+116>>2]=-1;gua(a+120|0);e=a+132|0;f[a+160>>2]=0;f[a+164>>2]=0;f[a+168>>2]=0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=0;f[e+16>>2]=0;f[e+20>>2]=0;f[a+176>>2]=11;gua(a+180|0);gua(a+192|0);e=a+216|0;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=0;n[a+232>>2]=1.0;f[a+236>>2]=0;return}function Dr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+80|0;d=h;e=h+36|0;i=gKa(f[b+4>>2]|0)|0;c=gKa(f[b>>2]|0)|0;i=i-c|0;g=i+1|0;do if(i){if(!g){XI(d,a,32);c=OW(d)|0;break}i=32-($(g|0)|0)|0;XI(e,a,(((-1>>>(33-i|0)&g|0)==0)<<31>>31)+i|0);do c=OW(e)|0;while(c>>>0>=g>>>0);c=(gKa(f[b>>2]|0)|0)+c|0}while(0);u=h;return c|0}function Er(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(bDa(a,f[c+8>>2]|0)|0)hA(c,d,e,g);else{p=c+52|0;i=b[p>>0]|0;j=c+53|0;k=b[j>>0]|0;o=f[a+12>>2]|0;l=a+16+(o<<3)|0;b[p>>0]=0;b[j>>0]=0;QR(a+16|0,c,d,e,g,h);a:do if((o|0)>1){m=c+24|0;n=c+54|0;o=a+8|0;a=a+24|0;do{if(b[n>>0]|0)break a;if(!(b[p>>0]|0)){if(b[j>>0]|0?(f[o>>2]&1|0)==0:0)break a}else{if((f[m>>2]|0)==1)break a;if(!(f[o>>2]&2))break a}b[p>>0]=0;b[j>>0]=0;QR(a,c,d,e,g,h);a=a+8|0}while(a>>>0<l>>>0)}while(0);b[p>>0]=i;b[j>>0]=k}return}function Fr(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;c=u;u=u+16|0;g=c;if(fIa(b[a>>0]|0)|0){u=c;return a+4|0}h=zb(20)|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=uHa(51700)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[g+11>>0]=e;c=g}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){i=10;break}f[g>>2]=c;f[g+8>>2]=d|-2147483648;f[g+4>>2]=e}Pta(c,51700,e)|0;SBa(c+e|0,0);y=0;Ca(79,h|0,g|0,f[a+28>>2]|0,f[a+32>>2]|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}c=Pa()|0;zta(g);if(d)i=12}else{y=0;za(3);y=0;i=10}while(0);if((i|0)==10){c=Pa()|0;i=12}if((i|0)==12)Oa(h|0);$a(c|0);return 0}function Gr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;l$(a,24631);e=UAa(c,1)|0;l$(a,voa(gKa(f[e>>2]|0)|0)|0);gP(a,40);e=UAa(c,2)|0;e=f[e>>2]|0;d=0;while(1){if(d>>>0>=(yja(gKa(e)|0)|0)>>>0)break;do if(d|0)if(!(b[a>>0]|0)){gP(a,44);break}else{l$(a,72307);break}while(0);g=UAa(e,d)|0;l$(a,voa(gKa(f[g>>2]|0)|0)|0);d=d+1|0}gP(a,41);zya(a);if((yja(gKa(c)|0)|0)!=3?(g=UAa(c,3)|0,(yja(gKa(f[g>>2]|0)|0)|0)!=0):0){gP(a,123);g=a+16|0;f[g>>2]=(f[g>>2]|0)+1;A2(a);e=UAa(c,3)|0;WH(a,f[e>>2]|0);f[g>>2]=(f[g>>2]|0)+-1;A2(a);gP(a,125);A2(a)}else l$(a,24628);return}function Hr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k+8|0;c=k;if((Es(a,b)|0)==(b|0)?(j=b+28|0,xFa(f[(f[j>>2]|0)+4>>2]|0)|0):0){e=f[a+36>>2]|0;gKa(e)|0;e=osa(e+144|0)|0;g=b+8|0;Bwa(i,g);iua(c,g);g=e+12|0;h=i+4|0;d=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[h>>2]|0,d,c)|0))break;l=ppa(i)|0;AW(g,KX(a,f[l>>2]|0)|0);bva(i)}AW(g,f[j>>2]|0);Ela(e,f[b+4>>2]|0);g1(a,e)|0}u=k;return}function Ir(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;e=GA(f[d>>2]|0,b,a)|0;g=GA(f[d>>2]|0,c,b)|0;do if(e){e=f[a>>2]|0;if(g){f[a>>2]=f[c>>2];f[c>>2]=e;a=1;break}f[a>>2]=f[b>>2];f[b>>2]=e;if(GA(f[d>>2]|0,c,b)|0){a=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=a;a=2}else a=1}else if(g){g=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=g;if(GA(f[d>>2]|0,b,a)|0){g=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=g;a=2}else a=1}else a=0;while(0);return a|0}function Jr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i+8|0;h=i;if(((b|0)!=0?(d=xAa(b)|0,(d|0)!=0):0)?!(pJa(f[d+8>>2]|0)|0):0)if(rCa(f[d+4>>2]|0)|0)Na(35597,35457,277,72427);else e=d;else e=kaa(f[f[a>>2]>>2]|0,b)|0;a=xAa(c)|0;if(!a)AW(e+12|0,c);else{a=a+12|0;Bwa(g,a);iua(h,a);a=e+12|0;b=g+4|0;d=h+4|0;while(1){if(!(Cpa(f[g>>2]|0,f[b>>2]|0,f[h>>2]|0,f[d>>2]|0)|0))break;c=ppa(g)|0;AW(a,f[c>>2]|0);bva(g)}}Do(e);u=i;return e|0}function Kr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;d=u;u=u+16|0;h=d;if((Dm(a)|0)==(c|0)){u=d;return}g=zb(20)|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(58484)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[h+11>>0]=e;c=h}else{d=e+16&-16;y=0;c=la(150,d|0)|0;j=y;y=0;if(j&1){i=10;break}f[h>>2]=c;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(c,58484,e)|0;SBa(c+e|0,0);y=0;Ca(79,g|0,h|0,0,f[a+36>>2]|0);j=y;y=0;if(j&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(h);if(d)i=12}else{y=0;za(3);y=0;i=10}while(0);if((i|0)==10){c=Pa()|0;i=12}if((i|0)==12)Oa(g|0);$a(c|0)}function Lr(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=d+4|0;h=(f[i>>2]|0)-(f[d>>2]|0)|0;WO(d,h+c|0);h=(f[d>>2]|0)+h|0;a:while(1){c=b[a>>0]|0;if(!(c<<24>>24))break;e=a+1|0;g=h+1|0;if(c<<24>>24!=92){b[h>>0]=c;a=e;h=g;continue}c=b[e>>0]|0;e=a+2|0;switch(c<<24>>24){case 34:{b[h>>0]=34;a=e;h=g;continue a}case 39:{b[h>>0]=39;a=e;h=g;continue a}case 92:{b[h>>0]=92;a=e;h=g;continue a}case 110:{b[h>>0]=10;a=e;h=g;continue a}case 116:{b[h>>0]=9;a=e;h=g;continue a}default:{e=((Xp(c)|0)<<4)+(Xp(b[e>>0]|0)|0)&255;b[h>>0]=e;a=a+3|0;h=g;continue a}}}g=f[d>>2]|0;c=g;if(h>>>0<g>>>0)Na(58501,51833,1498,58522);a=h-c|0;if(a>>>0>((f[i>>2]|0)-c|0)>>>0)Na(58537,51833,1500,58522);else{WO(d,a);return}}function Mr(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;c=j+8|0;d=j+4|0;h=j;if(pJa(f[(f[a>>2]|0)+116>>2]|0)|0){do if(b[a+12>>0]|0){i=Vea(76852,59514)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[c>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(c);jn(i,g)|0;Yp(i)|0;break}k=Pa()|0;pza(c);$a(k|0)}while(0);k=uW(a,8)|0;i=f[a+4>>2]|0;dCa(h,f[(f[a>>2]|0)+116>>2]|0);f[c>>2]=f[h>>2];PDa(d,Up(a,c)|0);Un(i,f[d>>2]|0)|0;KE(a,k)}u=j;return}function Nr(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0;if((1073741806-c|0)>>>0<d>>>0)JZ();l=a+8|0;if((b[l+3>>0]|0)<0)m=f[a>>2]|0;else m=a;if(c>>>0<536870887){d=d+c|0;k=c<<1;d=d>>>0<k>>>0?k:d;d=d>>>0<2?2:d+4&-4;if(d>>>0>1073741823){d=zb(8)|0;y=0;ja(76,d|0,70649);i=y;y=0;if(i&1){i=Pa()|0;Oa(d|0);$a(i|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}}else d=1073741807;k=nV(d<<2)|0;if(g|0)awa(k,m,g);if(i|0)awa(k+(g<<2)|0,j,i);e=e-h|0;j=e-g|0;if(j|0)awa(k+(g<<2)+(i<<2)|0,m+(g<<2)+(h<<2)|0,j);if((c|0)!=1)$Ja(m);f[a>>2]=k;f[l>>2]=d|-2147483648;i=e+i|0;f[a+4>>2]=i;FCa(k+(i<<2)|0,0);return}function Or(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;h=f[c>>2]|0;g=f[c+4>>2]|0;a=e;a:while(1){c=f[a+16>>2]|0;do if((h|0)>=(c|0)){if((c|0)>=(h|0)){if(Iva(g,f[a+20>>2]|0)|0){d=a;i=9;break}if(!(Iva(f[a+20>>2]|0,g)|0)){i=14;break a}else c=a}else c=a;d=a+4|0;a=f[d>>2]|0;if(!a){i=13;break a}}else{d=a;i=9}while(0);if((i|0)==9){i=0;c=f[a>>2]|0;if(!c){i=10;break}else{d=a;a=c}}}if((i|0)==10){f[b>>2]=d;d=a;break}else if((i|0)==13){f[b>>2]=c;break}else if((i|0)==14){f[b>>2]=a;break}}else f[b>>2]=d;while(0);return d|0}function Pr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;j=i;e=f[a+136>>2]|0;g=(f[a+140>>2]|0)-e>>2;d=f[b>>2]|0;c=g;while(1){b=c+-1|0;if((c|0)<=0)break;if(bDa(f[e+(b<<2)>>2]|0,d)|0){h=8;break}else c=b}if((h|0)==8){u=i;return 1-c+-1+g|0}b=Vea(K2(Vea(76852,59320)|0,d)|0,59332)|0;b=K2(b,f[f[a+8>>2]>>2]|0)|0;Axa(j,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[j>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,k=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0,i=y,y=0,!(i&1)):0){pza(j);jn(b,k)|0;Yp(b)|0;Ka()}k=Pa()|0;pza(j);$a(k|0);return 0}function Qr(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;k=u;u=u+128|0;j=k;n=k+118|0;m=k+104|0;a=k+100|0;h=k+96|0;i=k+92|0;b[n>>0]=b[68564]|0;b[n+1>>0]=b[68565]|0;b[n+2>>0]=b[68566]|0;b[n+3>>0]=b[68567]|0;b[n+4>>0]=b[68568]|0;b[n+5>>0]=b[68569]|0;l=d+4|0;TK(n+1|0,73350,1,f[l>>2]|0);o=gpa()|0;f[j>>2]=g;g=m+(L$(m,13,o,n,j)|0)|0;l=uG(m,g,f[l>>2]|0)|0;Axa(i,d);y=0;sa(3,m|0,l|0,g|0,j|0,a|0,h|0,i|0);g=y;y=0;if(g&1){o=Pa()|0;pza(i);$a(o|0)}else{pza(i);o=ul(f[c>>2]|0,j,f[a>>2]|0,f[h>>2]|0,d,e)|0;u=k;return o|0}return 0}function Rr(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;h=u;u=u+32|0;d=h;e=f[18850]|0;b=f[18849]|0;do if(((e-b|0)/20|0)>>>0<a>>>0){g=f[18848]|0;c=(b-g|0)/20|0;b=c+a|0;if(b>>>0>214748364)SZ();else{e=(e-g|0)/20|0;g=e<<1;WC(d,e>>>0<107374182?(g>>>0<b>>>0?b:g):214748364,c);GP(d,a);bD(d);LP(d);break}}else vQ(a);while(0);u=h;return}function Sr(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;k=u;u=u+128|0;j=k;n=k+108|0;m=k+96|0;a=k+92|0;h=k+88|0;i=k+84|0;b[n>>0]=b[68564]|0;b[n+1>>0]=b[68565]|0;b[n+2>>0]=b[68566]|0;b[n+3>>0]=b[68567]|0;b[n+4>>0]=b[68568]|0;b[n+5>>0]=b[68569]|0;l=d+4|0;TK(n+1|0,73350,0,f[l>>2]|0);o=gpa()|0;f[j>>2]=g;g=m+(L$(m,12,o,n,j)|0)|0;l=uG(m,g,f[l>>2]|0)|0;Axa(i,d);y=0;sa(3,m|0,l|0,g|0,j|0,a|0,h|0,i|0);g=y;y=0;if(g&1){o=Pa()|0;pza(i);$a(o|0)}else{pza(i);o=ul(f[c>>2]|0,j,f[a>>2]|0,f[h>>2]|0,d,e)|0;u=k;return o|0}return 0}function Tr(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;g=j+4|0;i=j;do if(b[a+12>>0]|0){h=Vea(76852,55765)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,k=y,y=0,!(k&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}k=Pa()|0;pza(g);$a(k|0)}while(0);d=a+4|0;switch(f[c+8>>2]|0){case 1:{Zq(f[d>>2]|0,63)|0;break}case 2:{Ql(a,bga(c+16|0,0)|0);Zq(f[d>>2]|0,64)|0;break}default:Ka()}k=f[d>>2]|0;PDa(i,0);Un(k,f[i>>2]|0)|0;u=j;return}function Ur(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;g=k+24|0;h=k+16|0;c=k+8|0;i=k+4|0;j=k;d=b+8|0;Bwa(h,d);iua(c,d);d=a+44|0;e=h+4|0;a=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[e>>2]|0,a,c)|0))break;l=ppa(h)|0;f[i>>2]=f[l>>2];l=wK(d,i)|0;f[j>>2]=b;Pz(g,l,b,j);bva(h)}l=wK(d,b+24|0)|0;f[h>>2]=b;Pz(g,l,b,h);u=k;return}function Vr(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;k=u;u=u+64|0;j=k;n=k+48|0;m=k+36|0;a=k+32|0;h=k+28|0;i=k+24|0;b[n>>0]=b[68564]|0;b[n+1>>0]=b[68565]|0;b[n+2>>0]=b[68566]|0;b[n+3>>0]=b[68567]|0;b[n+4>>0]=b[68568]|0;b[n+5>>0]=b[68569]|0;l=d+4|0;TK(n+1|0,73350,0,f[l>>2]|0);o=gpa()|0;f[j>>2]=g;g=m+(L$(m,12,o,n,j)|0)|0;l=uG(m,g,f[l>>2]|0)|0;Axa(i,d);y=0;sa(1,m|0,l|0,g|0,j|0,a|0,h|0,i|0);g=y;y=0;if(g&1){o=Pa()|0;pza(i);$a(o|0)}else{pza(i);o=bo(f[c>>2]|0,j,f[a>>2]|0,f[h>>2]|0,d,e)|0;u=k;return o|0}return 0}function Wr(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;k=u;u=u+64|0;j=k;n=k+50|0;m=k+36|0;a=k+32|0;h=k+28|0;i=k+24|0;b[n>>0]=b[68564]|0;b[n+1>>0]=b[68565]|0;b[n+2>>0]=b[68566]|0;b[n+3>>0]=b[68567]|0;b[n+4>>0]=b[68568]|0;b[n+5>>0]=b[68569]|0;l=d+4|0;TK(n+1|0,73350,1,f[l>>2]|0);o=gpa()|0;f[j>>2]=g;g=m+(L$(m,13,o,n,j)|0)|0;l=uG(m,g,f[l>>2]|0)|0;Axa(i,d);y=0;sa(1,m|0,l|0,g|0,j|0,a|0,h|0,i|0);g=y;y=0;if(g&1){o=Pa()|0;pza(i);$a(o|0)}else{pza(i);o=bo(f[c>>2]|0,j,f[a>>2]|0,f[h>>2]|0,d,e)|0;u=k;return o|0}return 0}function Xr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;e=k;i=k+4|0;f[e>>2]=b;j=Era(f[b>>2]|0)|0;g=f[a+80>>2]|0;do if(!g){c=j+12|0;if(pJa(f[j+4>>2]|0)|0){f[b>>2]=f[c>>2];break}else{a=f[a+36>>2]|0;gKa(a)|0;VBa(i,a);a=Una(f[i>>2]|0,f[c>>2]|0)|0;f[b>>2]=a;break}}else{f[i>>2]=1;h=j+8|0;c=g+28|0;d=f[c>>2]|0;if(d>>>0<(f[g+32>>2]|0)>>>0){dla(d,1,f[h>>2]|0,b);f[c>>2]=(f[c>>2]|0)+16}else Cx(g+24|0,i,h,e);c=gN(f[j+12>>2]|0)|0;if(c|0){j=c+8|0;zP(a,f[h>>2]|0,f[j>>2]|0);zP(a,f[h>>2]|0,f[j>>2]|0)}}while(0);u=k;return}function Yr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=Pq(a,1)|0;e=Pq(b,0)|0;a:do if((e|0)<=(d|0))if((e|0)>=(d|0)){h=UAa(a,0)|0;do if(jha(f[h>>2]|0,f[18916]|0)|0){h=UAa(b,0)|0;if(!(jha(f[h>>2]|0,f[18916]|0)|0))Na(24592,51343,1010,24617);h=UAa(a,1)|0;if(!(jha(f[h>>2]|0,f[18905]|0)|0)?(h=UAa(a,1)|0,!(jha(f[h>>2]|0,f[18904]|0)|0)):0){g=9;break}b=UAa(b,1)|0;h=UAa(a,1)|0;if((c|0)==0|(Dwa(f[b>>2]|0,f[h>>2]|0)|0)){a=1;break a}}else g=9;while(0);if((g|0)==9?(c|0)==0:0){a=1;break}if((e|0)>=0)if(Nxa(d)|0){a=(c|0)<0;break}else{a=(c|0)>0;break}else a=0}else a=0;else a=1;while(0);return a|0}function Zr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>2>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>2;d=c+b|0;if(d>>>0>1073741823)SZ();else{e=h-e|0;h=e>>1;fF(g,e>>2>>>0<536870911?(h>>>0<d>>>0?d:h):1073741823,c,a+8|0);XR(g,b);$B(a,g);lL(g);break}}else TS(a,b);while(0);u=i;return}function _r(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56180)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+8|0);Ql(a,c+12|0);Ql(a,c+16|0);a=a+4|0;Zq(f[a>>2]|0,-2)|0;a=f[a>>2]|0;switch(f[c+20>>2]|0){case 1:{Zq(a,1)|0;break}case 2:{Zq(a,2)|0;break}default:Ka()}u=i;return}function $r(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;f[a>>2]=b;h=a+4|0;f[h>>2]=0;i=a+8|0;f[i>>2]=0;f[a+12>>2]=0;hV(a+16|0,1337);y=0;ja(1934,h|0,c|0);g=y;y=0;a:do if(!(g&1)){d=0;while(1){if(d>>>0>=c>>>0)break;y=0;e=la(197,b|0)|0;g=y;y=0;if(g&1)break a;j=(f[h>>2]|0)+(d<<2)|0;g=f[j>>2]|0;f[j>>2]=e;if(g|0){E4(g);$Ja(g)}d=d+1|0}BV(f[a+4>>2]|0,f[i>>2]|0);return}while(0);j=Pa()|0;mL(h);$a(j|0)}function as(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;g=k+4|0;j=k;do if(!(b[a+12>>0]|0))d=a+4|0;else{h=Vea(76852,56597)|0;d=a+4|0;e=f[d>>2]|0;e=vj(h,(f[e+4>>2]|0)+1-(f[e>>2]|0)|0)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;h=ua(46,f[g>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,i=ua(f[(f[h>>2]|0)+28>>2]|0,h|0,10)|0,l=y,y=0,!(l&1)):0){pza(g);jn(e,i)|0;Yp(e)|0;break}l=Pa()|0;pza(g);$a(l|0)}while(0);l=Zq(f[d>>2]|0,32)|0;c=EN(a+72|0,c+8|0)|0;PDa(j,f[c>>2]|0);Un(l,f[j>>2]|0)|0;u=k;return}function bs(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;a:do if((a|0)!=(c|0)){f=a+1|0;switch(b[a>>0]|0){case 88:{e=fc(f,c,d)|0;if((e|0)==(f|0)|(e|0)==(c|0))break a;a=(b[e>>0]|0)==69?e+1|0:a;break a}case 74:{if((f|0)==(c|0))break a;else e=f;while(1){if((b[e>>0]|0)==69)break;f=bs(e,c,d)|0;if((f|0)==(e|0))break a;else e=f}a=e+1|0;break a}case 76:{if((f|0)!=(c|0)?(b[f>>0]|0)==90:0){f=a+2|0;e=Fc(f,c,d)|0;if((e|0)==(f|0)|(e|0)==(c|0))break a;a=(b[e>>0]|0)==69?e+1|0:a;break a}a=vc(a,c,d)|0;break a}default:{a=ic(a,c,d)|0;break a}}}while(0);return a|0}function cs(a,c){a=a|0;c=c|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+64|0;n=q;p=f[a>>2]|0;o=a+(f[p+-8>>2]|0)|0;p=f[p+-4>>2]|0;f[n>>2]=c;f[n+4>>2]=a;f[n+8>>2]=5712;g=n+12|0;h=n+16|0;i=n+20|0;j=n+24|0;k=n+28|0;l=n+32|0;m=n+40|0;a=bDa(p,c)|0;c=g;e=c+40|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(e|0));d[g+40>>1]=0;b[g+42>>0]=0;a:do if(a){f[n+48>>2]=1;Tb[f[(f[p>>2]|0)+20>>2]&15](p,n,o,o,1,0);a=(f[j>>2]|0)==1?o:0}else{Jb[f[(f[p>>2]|0)+24>>2]&7](p,n,o,1,0);switch(f[n+36>>2]|0){case 0:{a=(f[m>>2]|0)==1&(f[k>>2]|0)==1&(f[l>>2]|0)==1?f[i>>2]|0:0;break a}case 1:break;default:{a=0;break a}}if((f[j>>2]|0)!=1?!((f[m>>2]|0)==0&(f[k>>2]|0)==1&(f[l>>2]|0)==1):0){a=0;break}a=f[h>>2]|0}while(0);u=q;return a|0}function ds(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+96|0;i=k;g=a+40|0;l=uya(f[g>>2]|0)|0;Ot(i,l,f[c>>2]|0);l=jca(i)|0;hT(i);if((!l?(j=wk(a,b,c,0,0)|0,l=uya(f[g>>2]|0)|0,Ot(i,l,f[d>>2]|0),l=jca(i)|0,hT(i),!l):0)?(h=wk(a,b,d,j,0)|0,l=uya(f[g>>2]|0)|0,Ot(i,l,f[e>>2]|0),l=jca(i)|0,hT(i),!l):0)wk(a,b,e,h,0)|0;u=k;return}function es(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>4;g=e+1|0;if(g>>>0>268435455)SZ();else{d=(f[a+8>>2]|0)-d|0;i=d>>3;zM(c,d>>4>>>0<134217727?(i>>>0<g>>>0?g:i):268435455,e,a+12|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=0;i=e+4|0;f[i>>2]=0;d=f[b+12>>2]|0;f[e+8>>2]=0;f[e+12>>2]=d;f[e>>2]=f[b>>2];d=b+4|0;f[i>>2]=f[d>>2];i=b+8|0;f[e+8>>2]=f[i>>2];f[i>>2]=0;f[d>>2]=0;f[b>>2]=0;f[g>>2]=e+16;Nu(a,c);pI(c);u=h;return}}function fs(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;e=j+4|0;i=j;b=f[a>>2]|0;h=f[b+104>>2]|0;b=f[b+100>>2]|0;c=h;if((h|0)!=(b|0)){d=0;while(1){if((b|0)==(c|0))break;d=((f[b+8>>2]|0)!=(f[b+4>>2]|0)&1)+d|0;b=b+16|0}g=uW(a,11)|0;h=a+4|0;b=f[h>>2]|0;PDa(e,d);Un(b,f[e>>2]|0)|0;b=f[a>>2]|0;c=f[b+104>>2]|0;b=f[b+100>>2]|0;while(1){if((b|0)==(c|0))break;d=b+4|0;e=b+8|0;if((f[e>>2]|0)!=(f[d>>2]|0)){k=f[h>>2]|0;PDa(i,0);Un(k,f[i>>2]|0)|0;XT(a,f[b>>2]|0);Zq(f[h>>2]|0,11)|0;d=f[d>>2]|0;pP(a,d,(f[e>>2]|0)-d|0)}b=b+16|0}KE(a,g)}u=j;return}function gs(a,b){a=a|0;b=b|0;var c=0;UJa(79396)|0;while(1){if((f[a>>2]|0)!=1)break;Fa(79424,79396)|0}do if(!(f[a>>2]|0)){f[a>>2]=1;y=0;la(227,79396)|0;c=y;y=0;if((((!(c&1)?(y=0,ia(404,b|0),c=y,y=0,!(c&1)):0)?(y=0,la(228,79396)|0,c=y,y=0,!(c&1)):0)?(f[a>>2]=-1,y=0,la(227,79396)|0,c=y,y=0,!(c&1)):0)?(y=0,la(229,79424)|0,c=y,y=0,!(c&1)):0)break;c=ab(0)|0;Ya(c|0)|0;y=0;la(228,79396)|0;c=y;y=0;if((!(c&1)?(f[a>>2]=0,y=0,la(227,79396)|0,c=y,y=0,!(c&1)):0)?(y=0,la(229,79424)|0,c=y,y=0,!(c&1)):0){y=0;za(40);y=0}a=Pa()|0;y=0;za(5);c=y;y=0;if(c&1){c=ab(0)|0;lDa(c)}else $a(a|0)}else UJa(79396)|0;while(0);return}function hs(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=Hv(a,b,c,d,g)|0;h=g+4|0;if(er(f[g>>2]|0,f[h>>2]|0,f[e>>2]|0,f[d>>2]|0)|0){j=f[d>>2]|0;f[d>>2]=f[e>>2];f[e>>2]=j;e=i+1|0;if(er(f[g>>2]|0,f[h>>2]|0,f[d>>2]|0,f[c>>2]|0)|0){e=f[c>>2]|0;f[c>>2]=f[d>>2];f[d>>2]=e;e=i+2|0;if(er(f[g>>2]|0,f[h>>2]|0,f[c>>2]|0,f[b>>2]|0)|0){j=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=j;if(er(f[g>>2]|0,f[h>>2]|0,f[b>>2]|0,f[a>>2]|0)|0){e=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=e;e=i+4|0}else e=i+3|0}}}else e=i;return e|0}function is(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+192|0;l=m;i=m+172|0;j=m+152|0;k=m+148|0;b[i>>0]=b[68556]|0;b[i+1>>0]=b[68557]|0;b[i+2>>0]=b[68558]|0;b[i+3>>0]=b[68559]|0;b[i+4>>0]=b[68560]|0;b[i+5>>0]=b[68561]|0;a=gpa()|0;f[l>>2]=g;i=L$(j,20,a,i,l)|0;a=j+i|0;g=uG(j,a,f[d+4>>2]|0)|0;Axa(k,d);y=0;h=ua(46,f[k>>2]|0,77588)|0;n=y;y=0;if(n&1){n=Pa()|0;pza(k);$a(n|0)}else{pza(k);_b[f[(f[h>>2]|0)+48>>2]&31](h,j,a,l)|0;n=l+(i<<2)|0;n=ul(f[c>>2]|0,l,(g|0)==(a|0)?n:l+(g-j<<2)|0,n,d,e)|0;u=m;return n|0}return 0}function js(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=_p(c,h,d)|0;d=f[g>>2]|0;if(!d){AD(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function ks(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=(f[b+16>>2]|0)==0;d=NK(a+76|0,b+8|0)|0;e=a+48|0;g=d+4|0;b=f[g>>2]|0;c=b>>>0<(f[d+8>>2]|0)>>>0;do if(!h)if(c){CF(b,e);f[g>>2]=(f[g>>2]|0)+12;break}else{Jt(d,e);break}else{if(c){f[b>>2]=0;d=b+4|0;f[d>>2]=0;f[b+8>>2]=0;f[b>>2]=f[e>>2];h=a+52|0;f[d>>2]=f[h>>2];d=a+56|0;f[b+8>>2]=f[d>>2];f[d>>2]=0;f[h>>2]=0;f[e>>2]=0;f[g>>2]=(f[g>>2]|0)+12}else Ct(d,e);b1(f[a+44>>2]|0,e)}while(0);return}function ls(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;j=m+24|0;k=m+20|0;l=m;h=f[a>>2]|0;e=(f[a+4>>2]|0)-h>>4;g=e+1|0;if(g>>>0>268435455)SZ();i=(f[a+8>>2]|0)-h|0;h=i>>3;TE(l,i>>4>>>0<134217727?(h>>>0<g>>>0?g:h):268435455,e,a+8|0);h=l+8|0;i=f[h>>2]|0;g=f[b>>2]|0;e=f[c>>2]|0;y=0;ya(71,k|0,f[d>>2]|0,0);d=y;y=0;if(!(d&1)?(y=0,f[j>>2]=f[k>>2],Ca(56,i|0,g|0,e|0,j|0),k=y,y=0,!(k&1)):0){f[h>>2]=i+16;wE(a,l);iZ(l);u=m;return}m=Pa()|0;iZ(l);$a(m|0)}function ms(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;c=f[a>>2]|0;while(1){c=eAa(c)|0;if(!c)break;if(f[c+8>>2]|0)break;g=c+12|0;e=pAa(f[g>>2]|0)|0;c=c+16|0;d=pAa(f[c>>2]|0)|0;if((e|0)!=0?(h=csa(e+8|0)|0,h>>>0<1024):0)eja(b,(gKa(f[b>>2]|0)|0)+h|0,0)|0;else{if(!d)break;c=csa(d+8|0)|0;if(c>>>0>=1024)break;eja(b,(gKa(f[b>>2]|0)|0)+c|0,0)|0;c=g}c=f[c>>2]|0;f[a>>2]=c}c=pAa(f[a>>2]|0)|0;if(c|0){h=c+8|0;a=csa(h)|0;uAa(i,(gKa(f[b>>2]|0)|0)+a|0);f[h>>2]=f[i>>2];f[h+4>>2]=f[i+4>>2];f[h+8>>2]=f[i+8>>2];f[h+12>>2]=f[i+12>>2];eja(b,0,0)|0}u=j;return}function ns(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=f[a+56>>2]|0;d=h+(b*20|0)+16|0;f[d>>2]=(f[d>>2]|0)+1;d=a+40|0;e=a+44|0;c=f[d>>2]|0;a=(f[e>>2]|0)-c>>2;do if(a>>>0>1){a=f[c+(a+-2<<2)>>2]|0;if(mS(a)|0){a=K9(a)|0;d=h+(b*20|0)+8|0;e=f[d>>2]|0;c=h+(b*20|0)+12|0;if(e){if((f[c>>2]|0)!=(a|0)){a=0;i=5}}else i=5;if((i|0)==5)f[c>>2]=a;f[d>>2]=e+1;break}c=f[d>>2]|0;a=(f[e>>2]|0)-c>>2;if(a>>>0>2?(g=f[c+(a+-3<<2)>>2]|0,$F(g)|0):0){a=Bja(g)|0;d=h+(b*20|0)|0;e=f[d>>2]|0;c=h+(b*20|0)+4|0;if(e){if((f[c>>2]|0)!=(a|0)){a=0;i=11}}else i=11;if((i|0)==11)f[c>>2]=a;f[d>>2]=e+1}}while(0);return}function os(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a+56|0;b[h>>0]=1;i=a+16|0;j=a+72|0;k=a+84|0;l=a+60|0;m=a+76|0;n=a+88|0;o=a+96|0;g=a+108|0;d=1;while(1){if(!(d<<24>>24))break;b[h>>0]=0;Xla(i,c);Gc(a,j,0)|0;Gc(a,k,0)|0;GQ(l);d=f[j>>2]|0;e=f[m>>2]|0;while(1){if((e|0)==(d|0))break;p=e+-12|0;f[m>>2]=p;e=p}d=f[k>>2]|0;e=f[n>>2]|0;while(1){if((e|0)==(d|0))break;p=e+-12|0;f[n>>2]=p;e=p}r5(o);h4(g);d=b[h>>0]|0}return}function ps(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;j=u;u=u+32|0;d=j+16|0;e=j+12|0;c=j+4|0;g=j+8|0;h=j;i=mua(f[a+4>>2]|0)|0;f[e>>2]=1;cJa(c);if((lxa(b)|0)>>>0>1?Hra(lj(b,1)|0)|0:0){f[e>>2]=2;FCa(d,rr(lj(b,1)|0)|0);k=f[d>>2]|0;f[c>>2]=k;c=k}else{dCa(d,52942);k=f[d>>2]|0;f[c>>2]=k;c=k}l=a+112|0;f[g>>2]=c;f[d>>2]=f[g>>2];g=Tv(l,d)|0;f[i+8>>2]=g;g=rz(b,e)|0;k=i+4|0;f[k>>2]=g;g=tz(a,b,f[e>>2]|0,g)|0;f[i+12>>2]=g;f[h>>2]=f[i+8>>2];f[d>>2]=f[h>>2];tE(l,d);Zia(i,f[k>>2]|0);u=j;return i|0}function qs(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;do if(b[a+12>>0]|0){i=wj(Vea(76852,56907)|0,d&255)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(i,g)|0;Yp(i)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);pi(h,a,Nm(a)|0);f[c+8>>2]=f[h>>2];if(d<<24>>24==13){k=Jg(a)|0;f[c+16>>2]=k}if(f[h+4>>2]|0){k=Jg(a)|0;f[c+12>>2]=k}$5(c);u=j;return}function rs(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+80|0;l=m;i=m+64|0;j=m+44|0;k=m+40|0;b[i>>0]=b[68556]|0;b[i+1>>0]=b[68557]|0;b[i+2>>0]=b[68558]|0;b[i+3>>0]=b[68559]|0;b[i+4>>0]=b[68560]|0;b[i+5>>0]=b[68561]|0;a=gpa()|0;f[l>>2]=g;i=L$(j,20,a,i,l)|0;a=j+i|0;g=uG(j,a,f[d+4>>2]|0)|0;Axa(k,d);y=0;h=ua(46,f[k>>2]|0,77556)|0;n=y;y=0;if(n&1){n=Pa()|0;pza(k);$a(n|0)}else{pza(k);_b[f[(f[h>>2]|0)+32>>2]&31](h,j,a,l)|0;n=l+i|0;n=bo(f[c>>2]|0,l,(g|0)==(a|0)?n:l+(g-j)|0,n,d,e)|0;u=m;return n|0}return 0}function ss(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0.0,h=0;g=+qda(d);e=Mra(g)|0;h=J&2147483647;if(h>>>0>2146435072|(h|0)==2146435072&e>>>0>0)Mb[f[f[b>>2]>>2]&4095](b,40069);e=(f[d>>2]|0)==3;if((f[c+4>>2]|0)==1){if(e){if(!(kza(Xqa(d)|0)|0))Mb[f[f[b>>2]>>2]&4095](b,40088)}else{h=oja(d)|0;if(!(Qka(h,J)|0))Mb[f[f[b>>2]>>2]&4095](b,40088)}uAa(a,~~g>>>0)}else{if(e){if(!(iza(Xqa(d)|0)|0))Mb[f[f[b>>2]>>2]&4095](b,40113)}else{h=oja(d)|0;if(!(lma(h,J)|0))Mb[f[f[b>>2]>>2]&4095](b,40113)}Ysa(a,~~g>>>0,+L(g)>=1.0?(g>0.0?~~+Z(+K(g/4294967296.0),4294967295.0)>>>0:~~+X((g-+(~~g>>>0))/4294967296.0)>>>0):0)}return}function ts(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=(f[a>>2]|0)+1794895138|0;h=Qxa(f[a+8>>2]|0,o)|0;e=Qxa(f[a+12>>2]|0,o)|0;g=Qxa(f[a+16>>2]|0,o)|0;a:do if((h>>>0<c>>>2>>>0?(n=c-(h<<2)|0,e>>>0<n>>>0&g>>>0<n>>>0):0)?((g|e)&3|0)==0:0){n=e>>>2;m=g>>>2;l=0;while(1){j=h>>>1;k=l+j|0;i=k<<1;g=i+n|0;e=Qxa(f[a+(g<<2)>>2]|0,o)|0;g=Qxa(f[a+(g+1<<2)>>2]|0,o)|0;if(!(g>>>0<c>>>0&e>>>0<(c-g|0)>>>0)){e=0;break a}if(b[a+(g+e)>>0]|0){e=0;break a}e=yV(d,a+g|0)|0;if(!e)break;e=(e|0)<0;if((h|0)==1){e=0;break a}else{l=e?l:k;h=e?j:h-j|0}}e=i+m|0;g=Qxa(f[a+(e<<2)>>2]|0,o)|0;e=Qxa(f[a+(e+1<<2)>>2]|0,o)|0;if(e>>>0<c>>>0&g>>>0<(c-e|0)>>>0)e=(b[a+(e+g)>>0]|0)==0?a+e|0:0;else e=0}else e=0;while(0);return e|0}function us(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i+8|0;g=i+4|0;h=i;f[e>>2]=b;f[g>>2]=c;f[h>>2]=d;a=Tua(a+144|0)|0;f[a+8>>2]=b;f[a+12>>2]=c;f[a+16>>2]=d;qO(a);if(f[18711]|0){d=qN(a)|0;d=Vea(vj(Vea(76684,20007)|0,d)|0,20088)|0;e=EN(74808,e)|0;e=Vea(vj(d,f[e>>2]|0)|0,20128)|0;g=EN(74808,g)|0;g=Vea(vj(e,f[g>>2]|0)|0,20128)|0;h=EN(74808,h)|0;Vea(vj(g,f[h>>2]|0)|0,20144)|0}u=i;return a|0}function vs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;e=f[b>>2]|0;i=f[a>>2]|0;j=d+4|0;h=f[j>>2]|0;l=f[f[d>>2]>>2]|0;k=DS(l,h,e,i)|0;g=f[c>>2]|0;h=DS(l,h,g,e)|0;do if(k){if(h){f[a>>2]=g;f[c>>2]=i;e=1;break}f[a>>2]=e;f[b>>2]=i;e=f[c>>2]|0;if(DS(f[f[d>>2]>>2]|0,f[j>>2]|0,e,i)|0){f[b>>2]=e;f[c>>2]=i;e=2}else e=1}else if(h){f[b>>2]=g;f[c>>2]=e;g=f[b>>2]|0;e=f[a>>2]|0;if(DS(f[f[d>>2]>>2]|0,f[j>>2]|0,g,e)|0){f[a>>2]=g;f[b>>2]=e;e=2}else e=1}else e=0;while(0);return e|0}function ws(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0.0,h=0;g=+qda(d);e=Mra(g)|0;h=J&2147483647;if(h>>>0>2146435072|(h|0)==2146435072&e>>>0>0)Mb[f[f[b>>2]>>2]&4095](b,40138);e=(f[d>>2]|0)==3;if((f[c+4>>2]|0)==1){if(e){if(!(lza(Xqa(d)|0)|0))Mb[f[f[b>>2]>>2]&4095](b,40157)}else{h=oja(d)|0;if(!(Rka(h,J)|0))Mb[f[f[b>>2]>>2]&4095](b,40157)}uAa(a,~~g)}else{if(e){if(!(jza(Xqa(d)|0)|0))Mb[f[f[b>>2]>>2]&4095](b,40182)}else{h=oja(d)|0;if(!(mma(h,J)|0))Mb[f[f[b>>2]>>2]&4095](b,40182)}Ysa(a,~~g>>>0,+L(g)>=1.0?(g>0.0?~~+Z(+K(g/4294967296.0),4294967295.0)>>>0:~~+X((g-+(~~g>>>0))/4294967296.0)>>>0):0)}return}function xs(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;h=i;e=1;while(1){if(!(e>>>0<3&e>>>0<(lxa(a)|0)>>>0))break;j=lj(a,e)|0;if(!(qIa(b[j>>0]|0)|0))break;if(Wra(lj(a,e)|0)|0){FCa(h,rr(lj(a,e)|0)|0);f[d>>2]=f[h>>2]}else{if(!(Hra(lj(a,e)|0)|0))break;FCa(h,rr(lj(a,e)|0)|0);f[c>>2]=f[h>>2]}e=e+1|0}if(((e>>>0<(lxa(a)|0)>>>0?(j=lj(a,e)|0,fIa(b[j>>0]|0)|0):0)?(g=lj(a,e)|0,(lxa(g)|0)!=0):0)?(j=rr(lj(g,0)|0)|0,bDa(j,f[18757]|0)|0):0){FCa(h,rr(lj(g,1)|0)|0);f[d>>2]=f[h>>2];e=e+1|0}u=i;return e|0}function ys(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+48|0;i=h+16|0;g=h+8|0;c=h;Pca(i,a,b);e=b+8|0;Bwa(g,e);iua(c,e);e=g+4|0;a=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[g>>2]|0,f[e>>2]|0,a,c)|0)){c=3;break}y=0;d=la(156,g|0)|0;j=y;y=0;if(j&1){c=7;break}y=0;ja(1629,i|0,d|0);j=y;y=0;if(j&1){c=7;break}bva(g)}do if((c|0)==3){y=0;ja(1629,i|0,b+28|0);j=y;y=0;if(j&1){a=Pa()|0;break}else{E$(i);u=h;return}}else if((c|0)==7)a=Pa()|0;while(0);E$(i);$a(a|0)}function zs(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;Ob[f[(f[a>>2]|0)+24>>2]&255](a)|0;c=Jta(f[c>>2]|0,79348)|0;f[a+68>>2]=c;j=a+98|0;k=b[j>>0]|0;c=Ob[f[(f[c>>2]|0)+28>>2]&255](c)|0;b[j>>0]=c&1;do if((k&255|0)!=(c&1|0)){g=a+8|0;e=a+96|0;f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;f[g+12>>2]=0;f[g+16>>2]=0;f[g+20>>2]=0;g=(b[e>>0]|0)!=0;d=a+52|0;h=a+56|0;i=a+32|0;j=a+97|0;k=a+60|0;if(c){if(g)ZJa(f[i>>2]|0);b[e>>0]=b[j>>0]|0;f[d>>2]=f[k>>2];f[i>>2]=f[h>>2];f[k>>2]=0;f[h>>2]=0;b[j>>0]=0;break}c=f[d>>2]|0;f[k>>2]=c;if(!g?(l=f[i>>2]|0,(l|0)!=(a+44|0)):0){f[h>>2]=l;b[j>>0]=0;l=YJa(c)|0;f[i>>2]=l;b[e>>0]=1;break}l=YJa(c)|0;f[h>>2]=l;b[j>>0]=1}while(0);return}function As(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i;g=a+80|0;h=f[g>>2]|0;Yv(a+16|0);Yz(h,f[g>>2]|0);g=rsa(f[b>>2]|0)|0;h=a+112|0;if(pJa(f[g+8>>2]|0)|0){e=f[(f[h>>2]|0)+-4>>2]|0;c=a+84|0;f[d>>2]=g;b=EL(c,d)|0;a=f[b+4>>2]|0;b=f[b>>2]|0;while(1){if((b|0)==(a|0))break;Yz(f[b>>2]|0,e);b=b+4|0}FK(c,g)}a=f[h>>2]|0;b=0;while(1){if((b|0)==-1)break;g=b+-1|0;f[h>>2]=a+(g<<2);b=g}u=i;return}function Bs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=u;u=u+96|0;i=l;j=b+8|0;e=b+12|0;g=a+40|0;c=0;d=0;while(1){if(c>>>0>=(gKa(f[e>>2]|0)|0)>>>0){k=5;break}n=uya(f[g>>2]|0)|0;m=bga(j,c)|0;Ot(i,n,f[m>>2]|0);m=jca(i)|0;hT(i);if(m)break;n=wk(a,b,bga(j,c)|0,d,0)|0;c=c+1|0;d=n}if((k|0)==5?(n=uya(f[g>>2]|0)|0,h=b+28|0,Ot(i,n,f[h>>2]|0),n=jca(i)|0,hT(i),!n):0)wk(a,b,h,d,0)|0;u=l;return}function Cs(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;do if(b[a+12>>0]|0){e=Vea(vj(Vea(vj(Vea(76852,58635)|0,d)|0,54382)|0,c)|0,72083)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[i>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,h=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,k=y,y=0,!(k&1)):0){pza(i);jn(e,h)|0;Yp(e)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);b[(f[a>>2]|0)+c>>0]=d;b[(f[a>>2]|0)+(c+1)>>0]=d>>>8;b[(f[a>>2]|0)+(c+2)>>0]=d>>>16;b[(f[a>>2]|0)+(c+3)>>0]=d>>>24;u=j;return}function Ds(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+64|0;i=j;f[c>>2]=f[f[c>>2]>>2];if(!($ha(a,b)|0))if(((b|0)!=0?(d=cs(b,5896)|0,(d|0)!=0):0)?(f[d+8>>2]&~f[a+8>>2]|0)==0:0){b=f[a+12>>2]|0;a=d+12|0;if(!(bDa(b,f[a>>2]|0)|0)?!(bDa(b,5928)|0):0)if((((b|0)!=0?(g=cs(b,5696)|0,(g|0)!=0):0)?(e=f[a>>2]|0,(e|0)!=0):0)?(h=cs(e,5696)|0,(h|0)!=0):0){a=i+4|0;b=a+52|0;do{f[a>>2]=0;a=a+4|0}while((a|0)<(b|0));f[i>>2]=h;f[i+8>>2]=g;f[i+12>>2]=-1;f[i+48>>2]=1;dc[f[(f[h>>2]|0)+28>>2]&127](h,i,f[c>>2]|0,1);if((f[i+24>>2]|0)==1){f[c>>2]=f[i+16>>2];a=1}else a=0}else a=0;else a=1}else a=0;else a=1;u=j;return a|0}function Es(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=b+8|0;c=b+12|0;e=0;while(1){if(e>>>0>=(gKa(f[c>>2]|0)|0)>>>0){d=12;break}g=bga(h,e)|0;if(xFa(f[(f[g>>2]|0)+4>>2]|0)|0){d=4;break}e=e+1|0}if((d|0)==4){if(!e){c=bga(h,0)|0;c=f[c>>2]|0}else{c=f[a+36>>2]|0;gKa(c)|0;c=osa(c+144|0)|0;e=e+1|0;g=c+12|0;lU(g,e);d=0;while(1){if((d|0)==(e|0))break;j=bga(h,d)|0;j=KX(a,f[j>>2]|0)|0;i=bga(g,d)|0;f[i>>2]=j;d=d+1|0}Ela(c,f[b+4>>2]|0)}g1(a,c)|0}else if((d|0)==12)c=b;return c|0}function Fs(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=f[a+20>>2]|0;gKa(i)|0;if(!(b[i+114>>0]|0))HS(a,c);i=c+4|0;fO(a,b[c+8>>0]|0,f[i>>2]|0,c);Vj(a,f[(f[c+16>>2]|0)+4>>2]|0,1,c,62204);h=c+20|0;d=f[(f[h>>2]|0)+4>>2]|0;g=c+24|0;if((d|0)!=5){e=f[(f[g>>2]|0)+4>>2]|0;if((e|0)!=5){ik(a,d,e,c);d=f[(f[h>>2]|0)+4>>2]|0}}else d=5;Vj(a,d,f[i>>2]|0,c,62270);Vj(a,f[(f[g>>2]|0)+4>>2]|0,f[i>>2]|0,c,62310);q1(a,f[(f[h>>2]|0)+4>>2]|0,c,62158);return}function Gs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;e=d+4|0;g=er(f[d>>2]|0,f[e>>2]|0,f[b>>2]|0,f[a>>2]|0)|0;h=er(f[d>>2]|0,f[e>>2]|0,f[c>>2]|0,f[b>>2]|0)|0;do if(g){g=f[a>>2]|0;if(h){f[a>>2]=f[c>>2];f[c>>2]=g;e=1;break}f[a>>2]=f[b>>2];f[b>>2]=g;if(er(f[d>>2]|0,f[e>>2]|0,f[c>>2]|0,g)|0){e=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=e;e=2}else e=1}else if(h){h=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=h;if(er(f[d>>2]|0,f[e>>2]|0,f[b>>2]|0,f[a>>2]|0)|0){e=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=e;e=2}else e=1}else e=0;while(0);return e|0}function Hs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;e=h;d=f[a+44>>2]|0;g=a+84|0;if(((f[a+40>>2]|0)!=(d|0)?(c=xAa(f[d+-4>>2]|0)|0,(c|0)!=0):0)?(d=efa(c+12|0)|0,(b|0)==(f[d>>2]|0)):0){vja(e,b,c);b=a+88|0;c=f[b>>2]|0;if(c>>>0<(f[a+92>>2]|0)>>>0){f[c>>2]=f[e>>2];f[c+4>>2]=f[e+4>>2];f[c+8>>2]=f[e+8>>2];f[b>>2]=(f[b>>2]|0)+12}else Kx(g,e)}else{Zqa(e,b,gKa(f[a+16>>2]|0)|0);b=a+88|0;c=f[b>>2]|0;if(c>>>0<(f[a+92>>2]|0)>>>0){f[c>>2]=f[e>>2];f[c+4>>2]=f[e+4>>2];f[c+8>>2]=f[e+8>>2];f[b>>2]=(f[b>>2]|0)+12}else Kx(g,e)}u=h;return}function Is(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;g=c+8|0;h=a+48|0;i=OO(h,f[g>>2]|0)|0;if((i|0)!=(a+52|0)){j=i+20|0;d=Era(f[f[j>>2]>>2]|0)|0;e=a+16|0;do if((b[a+97>>0]|0)==0?(f[(f[a+124>>2]|0)+(f[g>>2]<<2)>>2]|0)!=1:0){jva(f[e>>2]|0,d)|0;if(pJa(f[d+4>>2]|0)|0)Na(32598,32558,210,32612);else{_la(d,1);break}}else k=4;while(0);if((k|0)==4)jva(f[e>>2]|0,f[d+12>>2]|0)|0;f[f[j>>2]>>2]=c;Tta(c)|0;jC(h,i);b[a+96>>0]=1}return}function Js(a){a=a|0;pfa(a+220|0);Aea(a+208|0);qfa(a+196|0);ofa(a+184|0);cda(a+172|0);Rba(a+144|0);DU(a+132|0);A_(a+120|0);mxa(a+88|0);xxa(a+60|0);qR(a+48|0);mP(a+36|0);qR(a+24|0);qR(a+12|0);NO(a);return}function Ks(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;i=j;if(!(d<<24>>24)){g=Isa(f[a+4>>2]|0)|0;do if(b[a+12>>0]|0){d=Vea(76852,56160)|0;Axa(i,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[i>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(i);jn(d,h)|0;Yp(d)|0;break}k=Pa()|0;pza(i);$a(k|0)}while(0);f[g+4>>2]=1;d=Jg(a)|0;f[g+12>>2]=d;d=Jg(a)|0;f[g+8>>2]=d;Ena(g);f[c>>2]=g;d=1}else d=0;u=j;return d|0}function Ls(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+48|0;e=h+16|0;g=h;Aia(e,b,f[c+8>>2]|0);do if(!(FBa(e)|0)){d=c+16|0;if(!(csa(e)|0)){d=f[d>>2]|0;if(!d){NBa(a);break}else{Aia(a,b,d);break}}else{Aia(a,b,f[c+12>>2]|0);if(FBa(a)|0)break;if(f[d>>2]|0)break;gxa(g);f[a>>2]=f[g>>2];f[a+4>>2]=f[g+4>>2];f[a+8>>2]=f[g+8>>2];f[a+12>>2]=f[g+12>>2];break}}else{f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}while(0);u=h;return}function Ms(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;d=h+16|0;i=h;c=h+4|0;f[i>>2]=f[b+24>>2];e=DR(a,f[b+28>>2]|0)|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;g=f[b+4>>2]|0;y=0;f[d>>2]=f[i>>2];g=va(21,a+32|0,d|0,e|0,c|0,g|0)|0;e=y;y=0;if(e&1){i=Pa()|0;E4(c);$a(i|0)}E4(c);d=b+8|0;e=g+8|0;b=b+12|0;c=0;while(1){if(c>>>0>=(gKa(f[b>>2]|0)|0)>>>0)break;i=bga(d,c)|0;AW(e,DR(a,f[i>>2]|0)|0);c=c+1|0}u=h;return g|0}function Ns(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k+8|0;e=k;j=c+32|0;if(!(b[a+28>>0]|0)){if((f[(f[c+28>>2]|0)+4>>2]|0)!=5){h=f[j>>2]|0;if(!((h|0)!=0?(f[h+4>>2]|0)==5:0))d=5}}else d=5;if((d|0)==5){h=c+8|0;Bwa(i,h);iua(e,h);h=i+4|0;g=f[e>>2]|0;d=f[e+4>>2]|0;e=a+24|0;while(1){if(!(Cpa(f[i>>2]|0,f[h>>2]|0,g,d)|0))break;l=ppa(i)|0;if(bDa(f[l>>2]|0,f[e>>2]|0)|0)KV(a,f[j>>2]|0);bva(i)}if(bDa(f[c+24>>2]|0,f[e>>2]|0)|0)KV(a,f[j>>2]|0)}u=k;return}function Os(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=u;u=u+224|0;j=k+8|0;n=k;l=k+192|0;h=k+188|0;i=k+184|0;a=k+180|0;m=n;f[m>>2]=37;f[m+4>>2]=0;m=c+4|0;TK(n+1|0,73355,0,f[m>>2]|0);o=gpa()|0;p=j;f[p>>2]=e;f[p+4>>2]=g;g=l+(L$(l,23,o,n,j)|0)|0;e=uG(l,g,f[m>>2]|0)|0;Axa(a,c);y=0;sa(3,l|0,e|0,g|0,j|0,h|0,i|0,a|0);g=y;y=0;if(g&1){p=Pa()|0;pza(a);$a(p|0)}else{pza(a);p=ul(f[b>>2]|0,j,f[h>>2]|0,f[i>>2]|0,c,d)|0;u=k;return p|0}return 0}function Ps(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=u;u=u+224|0;j=k+8|0;n=k;l=k+192|0;h=k+188|0;i=k+184|0;a=k+180|0;m=n;f[m>>2]=37;f[m+4>>2]=0;m=c+4|0;TK(n+1|0,73355,1,f[m>>2]|0);o=gpa()|0;p=j;f[p>>2]=e;f[p+4>>2]=g;g=l+(L$(l,23,o,n,j)|0)|0;e=uG(l,g,f[m>>2]|0)|0;Axa(a,c);y=0;sa(3,l|0,e|0,g|0,j|0,h|0,i|0,a|0);g=y;y=0;if(g&1){p=Pa()|0;pza(a);$a(p|0)}else{pza(a);p=ul(f[b>>2]|0,j,f[h>>2]|0,f[i>>2]|0,c,d)|0;u=k;return p|0}return 0}function Qs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;h=u;u=u+32|0;i=h+16|0;e=h+8|0;g=h+4|0;j=h+12|0;k=h;f[e>>2]=c;f[g>>2]=d;VBa(j,a);dCa(k,b);f[i>>2]=f[k>>2];a=q3(j,i,d,c)|0;if(f[18711]|0){k=qN(a)|0;k=Vea(Vea(Vea(vj(Vea(76684,20007)|0,k)|0,20194)|0,b)|0,20226)|0;j=EN(74808,e)|0;j=Vea(vj(k,f[j>>2]|0)|0,20128)|0;k=EN(74808,g)|0;Vea(vj(j,f[k>>2]|0)|0,20144)|0}u=h;return a|0}function Rs(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=c;a:do if(!((g^a)&3)){e=(d|0)!=0;if(e&(g&3|0)!=0)do{g=b[c>>0]|0;b[a>>0]=g;if(!(g<<24>>24))break a;d=d+-1|0;c=c+1|0;a=a+1|0;e=(d|0)!=0}while(e&(c&3|0)!=0);if(e){if(b[c>>0]|0){b:do if(d>>>0>3){e=c;while(1){c=f[e>>2]|0;if((c&-2139062144^-2139062144)&c+-16843009|0){c=e;break b}f[a>>2]=c;d=d+-4|0;c=e+4|0;a=a+4|0;if(d>>>0>3)e=c;else break}}while(0);h=11}}else d=0}else h=11;while(0);c:do if((h|0)==11)if(!d)d=0;else while(1){h=b[c>>0]|0;b[a>>0]=h;if(!(h<<24>>24))break c;d=d+-1|0;a=a+1|0;if(!d){d=0;break}else c=c+1|0}while(0);Kz(a|0,0,d|0)|0;return}function Ss(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+16|0;c=h+8|0;d=h+4|0;j=h;e=jsa(f[b>>2]|0)|0;g=a+16|0;f[j>>2]=f[e+8>>2];i=f[a+40>>2]|0;b=f[a+44>>2]|0;f[c>>2]=f[j>>2];b=jx(i,b,c)|0;f[d>>2]=b;d=EL(a+84|0,d)|0;b=a+80|0;a=d+4|0;c=f[a>>2]|0;if((c|0)==(f[d+8>>2]|0))XC(d,b);else{f[c>>2]=f[b>>2];f[a>>2]=(f[a>>2]|0)+4}if(!(f[e+16>>2]|0))Jva(g);else{j=f[b>>2]|0;Yv(g);Yz(j,f[b>>2]|0)}u=h;return}function Ts(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=u;u=u+96|0;j=k+8|0;n=k;l=k+64|0;h=k+60|0;i=k+56|0;a=k+52|0;m=n;f[m>>2]=37;f[m+4>>2]=0;m=c+4|0;TK(n+1|0,73355,0,f[m>>2]|0);o=gpa()|0;p=j;f[p>>2]=e;f[p+4>>2]=g;g=l+(L$(l,23,o,n,j)|0)|0;e=uG(l,g,f[m>>2]|0)|0;Axa(a,c);y=0;sa(1,l|0,e|0,g|0,j|0,h|0,i|0,a|0);g=y;y=0;if(g&1){p=Pa()|0;pza(a);$a(p|0)}else{pza(a);p=bo(f[b>>2]|0,j,f[h>>2]|0,f[i>>2]|0,c,d)|0;u=k;return p|0}return 0}function Us(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;k=u;u=u+96|0;j=k+8|0;n=k;l=k+64|0;h=k+60|0;i=k+56|0;a=k+52|0;m=n;f[m>>2]=37;f[m+4>>2]=0;m=c+4|0;TK(n+1|0,73355,1,f[m>>2]|0);o=gpa()|0;p=j;f[p>>2]=e;f[p+4>>2]=g;g=l+(L$(l,23,o,n,j)|0)|0;e=uG(l,g,f[m>>2]|0)|0;Axa(a,c);y=0;sa(1,l|0,e|0,g|0,j|0,h|0,i|0,a|0);g=y;y=0;if(g&1){p=Pa()|0;pza(a);$a(p|0)}else{pza(a);p=bo(f[b>>2]|0,j,f[h>>2]|0,f[i>>2]|0,c,d)|0;u=k;return p|0}return 0}function Vs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;e=j;h=f[b>>2]|0;f[e>>2]=h;e=$z(e,4)|0;g=f[a+4>>2]|0;a:do if(g){i=g+-1|0;c=(i&g|0)==0;if(!c)if(e>>>0<g>>>0)d=e;else d=(e>>>0)%(g>>>0)|0;else d=i&e;b=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(b)while(1){b=f[b>>2]|0;if(!b){b=0;break a}a=f[b+4>>2]|0;if((a|0)==(e|0))if((f[b+8>>2]|0)==(h|0))break;else continue;if(!c){if(a>>>0>=g>>>0)a=(a>>>0)%(g>>>0)|0}else a=a&i;if((a|0)!=(d|0)){b=0;break}}else b=0}else b=0;while(0);u=j;return b|0}function Ws(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;e=b+8|0;qp(a,(f[(f[e>>2]|0)+4>>2]|4|0)==5,b);h=b+16|0;c=b+4|0;d=b+12|0;do if(!(f[h>>2]|0)){pp(a,rCa(f[(f[d>>2]|0)+4>>2]|0)|0,b);if((f[(f[e>>2]|0)+4>>2]|0)!=5)fk(a,f[c>>2]|0,0,b,60886)}else{g=f[c>>2]|0;if((g|0)!=5){ak(a,f[(f[d>>2]|0)+4>>2]|0,g,b,60939);ak(a,f[(f[h>>2]|0)+4>>2]|0,f[c>>2]|0,b,60985);break}if((f[(f[e>>2]|0)+4>>2]|0)!=5){fk(a,f[(f[d>>2]|0)+4>>2]|0,5,b,61032);fk(a,f[(f[h>>2]|0)+4>>2]|0,5,b,61079)}}while(0);return}function Xs(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;d=k+8|0;h=k+4|0;i=k;do if(b[a+12>>0]|0){j=Vea(76852,56471)|0;Axa(d,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[d>>2]|0,77556)|0;l=y;y=0;if(!(l&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,l=y,y=0,!(l&1)):0){pza(d);jn(j,g)|0;Yp(j)|0;break}l=Pa()|0;pza(d);$a(l|0)}while(0);Ql(a,c+12|0);l=Zq(f[a+4>>2]|0,36)|0;f[i>>2]=f[c+8>>2];f[d>>2]=f[i>>2];PDa(h,Vp(a,d)|0);Un(l,f[h>>2]|0)|0;u=k;return}function Ys(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=u;u=u+32|0;c=g+12|0;d=g+24|0;e=g;zD(c,b);y=0;f=la(194,c|0)|0;h=y;y=0;if(h&1){h=Pa()|0;zta(c);$a(h|0)}zta(c);if(f|0){WN(a,f);u=g;return}Zza();y=0;ua(52,d|0,46370)|0;h=y;y=0;if(!(h&1)?(y=0,ja(120,e|0,b|0),h=y,y=0,!(h&1)):0){y=0;ua(118,d|0,e|0)|0;h=y;y=0;if(!(h&1)?(y=0,ua(52,d|0,60408)|0,h=y,y=0,!(h&1)):0){zta(e);bfa()}Pa()|0;zta(e)}else Pa()|0;bfa()}function Zs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;h=i+4|0;f[g>>2]=e;if(f[18711]|0){j=Vea(Vea(Vea(Vea(Vea(Vea(Vea(76684,21461)|0,b)|0,21495)|0,c)|0,21495)|0,d)|0,21385)|0;e=EN(74796,g)|0;Vea(vj(j,f[e>>2]|0)|0,20144)|0}j=nV(24)|0;Spa(j);dCa(h,b);f[j>>2]=f[h>>2];dCa(h,c);f[j+4>>2]=f[h>>2];dCa(h,d);f[j+8>>2]=f[h>>2];f[j+16>>2]=f[f[g>>2]>>2];f[j+12>>2]=0;cu(a,j);u=i;return j|0}function _s(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j;i=a+4|0;d=f[a>>2]|0;a:do if((f[i>>2]|0)!=(d|0)){A3(c,f[d>>2]|0)|0;e=f[i>>2]|0;d=f[a>>2]|0;b:do if(e-d>>2>>>0>1){g=1;while(1){if(g>>>0>=e-d>>2>>>0)break b;Gq(h,c,f[d+(g<<2)>>2]|0);Psa(c,h)|0;E4(h);g=g+1|0;d=f[a>>2]|0;e=f[i>>2]|0}}while(0);i=f[b+4>>2]|0;d=f[b>>2]|0;e=f[c>>2]|0;g=i;if((i-d|0)==((f[c+4>>2]|0)-e|0))while(1){if((d|0)==(g|0)){d=0;break a}if((f[d>>2]|0)!=(f[e>>2]|0)){d=1;break a}e=e+4|0;d=d+4|0}else d=1}else d=0;while(0);u=j;return d|0}function $s(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+32|0;c=k+16|0;i=k+24|0;g=k+8|0;j=k;f[c>>2]=b;h=xAa(b)|0;if((h|0)!=0?!(jW(h)|0):0){e=h+12|0;Bwa(i,e);iua(g,e);d=i+4|0;c=f[g>>2]|0;b=f[g+4>>2]|0;while(1){if(!(Cpa(f[i>>2]|0,f[d>>2]|0,c,b)|0))break;g=ppa(i)|0;f[j>>2]=f[g>>2];Ql(a,j);bva(i)}if((f[h+4>>2]|0)==5?(j=efa(e)|0,(f[(f[j>>2]|0)+4>>2]|0)!=5):0)Zq(f[a+4>>2]|0,0)|0}else Ql(a,c);u=k;return}function at(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;g=u;u=u+32|0;c=g+16|0;d=g;e=g+20|0;h=g+4|0;i=a+84|0;a=f[i>>2]|0;f[i>>2]=a+1;_L(h,a);y=0;ua(81,h|0,56973)|0;a=y;y=0;do if(!(a&1)){f[e>>2]=f[h>>2];f[e+4>>2]=f[h+4>>2];f[e+8>>2]=f[h+8>>2];a=0;while(1){if((a|0)==3)break;f[h+(a<<2)>>2]=0;a=a+1|0}y=0;ya(64,d|0,((b[e+11>>0]|0)<0?f[e>>2]|0:e)|0,0);i=y;y=0;if(i&1){a=Pa()|0;zta(e);break}else{FCa(c,f[d>>2]|0);zta(e);zta(h);u=g;return f[c>>2]|0}}else a=Pa()|0;while(0);zta(h);$a(a|0);return 0}function bt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;h=i;g=f[b>>2]|0;c=g;if(pJa(g)|0){d=f[a>>2]|0;e=d+4|0;g=f[e>>2]|0;if((g|0)==(f[d+8>>2]|0))XC(d,b);else{f[g>>2]=c;f[e>>2]=(f[e>>2]|0)+4}b=NK(f[a+4>>2]|0,b)|0;d=f[a+8>>2]|0;c=f[d>>2]|0;f[d>>2]=c+1;f[h>>2]=c;d=b+4|0;e=f[d>>2]|0;if(e>>>0<(f[b+8>>2]|0)>>>0){f[e>>2]=c;f[d>>2]=e+4}else XC(b,h);e=f[a+12>>2]|0;b=f[a+16>>2]|0;f[h>>2]=b;c=e+4|0;d=f[c>>2]|0;if(d>>>0<(f[e+8>>2]|0)>>>0){f[d>>2]=b;f[c>>2]=(f[c>>2]|0)+4}else XC(e,h)}u=i;return}function ct(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;c=i+20|0;d=i;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e>>4;h=g+1|0;if(h>>>0>268435455)SZ();else{j=(f[a+8>>2]|0)-e|0;e=j>>3;zM(d,j>>4>>>0<134217727?(e>>>0<h>>>0?h:e):268435455,g,a+12|0);h=d+8|0;g=f[h>>2]|0;PDa(c,b);f[g>>2]=0;f[g+4>>2]=0;e=f[c>>2]|0;f[g+8>>2]=0;f[g+12>>2]=e;f[h>>2]=g+16;Nu(a,d);hG(d);u=i;return}}function dt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=b+16|0;c=b+20|0;e=0;while(1){if(e>>>0>=(gKa(f[c>>2]|0)|0)>>>0)break;g=bga(h,e)|0;if(xFa(f[(f[g>>2]|0)+4>>2]|0)|0){d=4;break}e=e+1|0}if((d|0)==4){if(!e){c=bga(h,0)|0;c=f[c>>2]|0}else{c=f[a+36>>2]|0;gKa(c)|0;c=osa(c+144|0)|0;e=e+1|0;g=c+12|0;lU(g,e);d=0;while(1){if((d|0)==(e|0))break;j=bga(h,d)|0;j=KX(a,f[j>>2]|0)|0;i=bga(g,d)|0;f[i>>2]=j;d=d+1|0}Ela(c,f[b+4>>2]|0)}g1(a,c)|0}return}function et(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=b+8|0;c=b+12|0;e=0;while(1){if(e>>>0>=(gKa(f[c>>2]|0)|0)>>>0)break;g=bga(h,e)|0;if(xFa(f[(f[g>>2]|0)+4>>2]|0)|0){d=4;break}e=e+1|0}if((d|0)==4){if(!e){c=bga(h,0)|0;c=f[c>>2]|0}else{c=f[a+36>>2]|0;gKa(c)|0;c=osa(c+144|0)|0;e=e+1|0;g=c+12|0;lU(g,e);d=0;while(1){if((d|0)==(e|0))break;j=bga(h,d)|0;j=KX(a,f[j>>2]|0)|0;i=bga(g,d)|0;f[i>>2]=j;d=d+1|0}Ela(c,f[b+4>>2]|0)}g1(a,c)|0}return}function ft(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=u;u=u+64|0;i=p+48|0;j=p+40|0;k=p+32|0;l=p+24|0;m=p+16|0;n=p+8|0;o=p;d=a+4|0;q=f[d>>2]|0;h=f[b>>2]|0;e=f[b+4>>2]|0;g=f[c>>2]|0;c=f[c+4>>2]|0;f[d>>2]=q-e+c+(g-h<<3);d=q&31;b=(f[a>>2]|0)+(q>>>5<<2)|0;if((e|0)==(d|0)){f[i>>2]=h;f[i+4>>2]=e;f[j>>2]=g;f[j+4>>2]=c;f[k>>2]=b;f[k+4>>2]=e;yt(o,i,j,k)}else{f[l>>2]=h;f[l+4>>2]=e;f[m>>2]=g;f[m+4>>2]=c;f[n>>2]=b;f[n+4>>2]=d;tl(o,l,m,n)}u=p;return}function gt(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;g=u;u=u+32|0;c=g+16|0;d=g;e=g+20|0;h=g+4|0;i=f[a>>2]|0;f[a>>2]=i+1;_L(h,i);y=0;ua(81,h|0,57717)|0;a=y;y=0;do if(!(a&1)){f[e>>2]=f[h>>2];f[e+4>>2]=f[h+4>>2];f[e+8>>2]=f[h+8>>2];a=0;while(1){if((a|0)==3)break;f[h+(a<<2)>>2]=0;a=a+1|0}y=0;ya(64,d|0,((b[e+11>>0]|0)<0?f[e>>2]|0:e)|0,0);i=y;y=0;if(i&1){a=Pa()|0;zta(e);break}else{FCa(c,f[d>>2]|0);zta(e);zta(h);u=g;return f[c>>2]|0}}else a=Pa()|0;while(0);zta(h);$a(a|0);return 0}function ht(a,b){a=a|0;b=b|0;var c=0;c=xAa(b)|0;do if(!c){c=IAa(b)|0;if(c|0){Hq(a,c);break}c=YAa(b)|0;if(c|0){wg(a,c);break}c=wAa(b)|0;if(c|0){qI(a,c);break}c=mAa(b)|0;if(c|0){Ih(a,c);break}c=dAa(b)|0;if(c|0){R5(a,c);break}c=mza(b)|0;if(!c){AW((QAa(f[(f[a+84>>2]|0)+104>>2]|0)|0)+12|0,b);break}else{R5(a,c);break}}else Ni(a,c);while(0);return}function it(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;d=h+12|0;e=h;g=nV(24)|0;Spa(g);f[g>>2]=f[18952];FCa(d,f[18790]|0);f[g+4>>2]=f[d>>2];f[g+8>>2]=f[18952];f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=uHa(44155)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[e+11>>0]=d;c=e}else{i=d+16&-16;c=nV(i)|0;f[e>>2]=c;f[e+8>>2]=i|-2147483648;f[e+4>>2]=d}Pta(c,44155,d)|0;SBa(c+d|0,0);y=0;c=ua(106,e|0,a|0)|0;i=y;y=0;if(i&1){i=Pa()|0;zta(e);$a(i|0)}else{f[g+16>>2]=f[c>>2];zta(e);f[g+12>>2]=0;cu(a,g);u=h;return}}function jt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=u;u=u+224|0;m=q+120|0;n=q+80|0;o=q;p=q+136|0;e=n;g=e+40|0;do{f[e>>2]=0;e=e+4|0}while((e|0)<(g|0));f[m>>2]=f[d>>2];if((cd(0,c,m,o,n)|0)<0)d=-1;else{d=f[a>>2]|0;l=d&32;if((b[a+74>>0]|0)<1)f[a>>2]=d&-33;e=a+48|0;if(!(f[e>>2]|0)){g=a+44|0;h=f[g>>2]|0;f[g>>2]=p;i=a+28|0;f[i>>2]=p;j=a+20|0;f[j>>2]=p;f[e>>2]=80;k=a+16|0;f[k>>2]=p+80;d=cd(a,c,m,o,n)|0;if(h){Rb[f[a+36>>2]&127](a,0,0)|0;d=(f[j>>2]|0)==0?-1:d;f[g>>2]=h;f[e>>2]=0;f[k>>2]=0;f[i>>2]=0;f[j>>2]=0}}else d=cd(a,c,m,o,n)|0;p=f[a>>2]|0;f[a>>2]=p|l;d=(p&32|0)==0?d:-1}u=q;return d|0}function kt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;c=i+20|0;d=i;e=f[a>>2]|0;g=(f[a+4>>2]|0)-e>>4;h=g+1|0;if(h>>>0>268435455)SZ();else{j=(f[a+8>>2]|0)-e|0;e=j>>3;zM(d,j>>4>>>0<134217727?(e>>>0<h>>>0?h:e):268435455,g,a+12|0);h=d+8|0;g=f[h>>2]|0;jBa(c,b);f[g>>2]=0;f[g+4>>2]=0;e=f[c>>2]|0;f[g+8>>2]=0;f[g+12>>2]=e;f[h>>2]=g+16;Nu(a,d);hG(d);u=i;return}}function lt(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[a+(d<<2)>>2]=0;d=d+1|0}h=uHa(43518)|0;i=c+11|0;g=b[i>>0]|0;g=g<<24>>24<0?f[c+4>>2]|0:g&255;d=g+h|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[a+11>>0]=h;d=a}else{e=d+16&-16;y=0;d=la(150,e|0)|0;j=y;y=0;if(j&1)break;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=h}Pta(d,43518,h)|0;SBa(d+h|0,0);y=0;oa(37,a|0,((b[i>>0]|0)<0?f[c>>2]|0:c)|0,g|0)|0;j=y;y=0;if(!(j&1))return}else{y=0;za(3);y=0}while(0);j=Pa()|0;zta(a);$a(j|0)}function mt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;h=i;e=f[c>>2]|0;do if(e|0){g=b[d+11>>0]|0;if(g<<24>>24<0)g=f[d+4>>2]|0;else g=g&255;if(g){Uga(d,71123)|0;e=f[c>>2]|0}Dsa(h,e,f[c+4>>2]|0);c=b[h+11>>0]|0;g=c<<24>>24<0;y=0;oa(37,d|0,(g?f[h>>2]|0:h)|0,(g?f[h+4>>2]|0:c&255)|0)|0;c=y;y=0;if(c&1){i=Pa()|0;zta(h);$a(i|0)}else{zta(h);break}}while(0);f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];e=0;while(1){if((e|0)==3)break;f[d+(e<<2)>>2]=0;e=e+1|0}u=i;return}function nt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;h=u;u=u+48|0;d=h+16|0;i=h+36|0;j=h+32|0;e=h;g=a+16|0;c=a+36|0;a=gKa(f[c>>2]|0)|0;f[j>>2]=f[b+24>>2];f[d>>2]=f[j>>2];b=(QY(a,d)|0)+16|0;f[i>>2]=f[b>>2];f[d>>2]=f[i>>2];a=(UX(a,d)|0)+4|0;a=f[a>>2]|0;if(!a){j=f[c>>2]|0;gKa(j)|0;j=ewa(j+144|0)|0;jva(f[g>>2]|0,j)|0}else{gxa(e);f[e>>2]=a;j=f[c>>2]|0;gKa(j)|0;j=cua(j+144|0)|0;f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];J5(j,d)|0;jva(f[g>>2]|0,j)|0}u=h;return}function ot(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56455)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+8|0);Ql(a,c+12|0);Ql(a,c+16|0);a=a+4|0;Zq(f[a>>2]|0,27)|0;if((f[c+4>>2]|0)==5)Zq(f[a>>2]|0,0)|0;u=i;return}function pt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[a+(e<<2)>>2]=0;e=e+1|0}h=b[c+11>>0]|0;g=h<<24>>24<0;h=g?f[c+4>>2]|0:h&255;i=uHa(d)|0;g=g?f[c>>2]|0:c;e=h+i|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[a+11>>0]=h;e=a}else{c=e+16&-16;y=0;e=la(150,c|0)|0;j=y;y=0;if(j&1)break;f[a>>2]=e;f[a+8>>2]=c|-2147483648;f[a+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);y=0;oa(37,a|0,d|0,i|0)|0;j=y;y=0;if(!(j&1))return}else{y=0;za(3);y=0}while(0);j=Pa()|0;zta(a);$a(j|0)}function qt(a){a=a|0;var b=0,c=0,d=0;c=f[(f[a+12>>2]|0)+4>>2]|0;a:do if((c|0)==5)b=5;else{d=a+8|0;switch(f[d>>2]|0){case 33:case 31:case 29:case 27:case 25:case 24:case 21:case 20:{b=1;break a}case 19:case 17:case 15:case 13:case 11:case 9:case 7:case 5:case 3:case 1:case 18:case 16:case 14:case 12:case 10:case 8:case 6:case 4:case 2:case 0:{b=c;break a}case 23:case 22:{b=2;break a}case 43:{b=4;break a}case 44:{b=3;break a}case 34:case 32:case 30:case 28:case 26:{b=2;break a}case 41:case 39:case 37:case 35:case 45:{b=3;break a}case 42:case 40:case 38:case 36:case 46:{b=4;break a}default:{c3(wj(Vea(76852,51647)|0,f[d>>2]|0)|0,10)|0;Ka()}}}while(0);f[a+4>>2]=b;return}function rt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;if(!(pJa(f[b>>2]|0)|0))Na(43444,35371,661,43527);c=b;f[h>>2]=c;d=a+4|0;e=f[d>>2]|0;do if(e>>>0<(f[a+8>>2]|0)>>>0){f[h>>2]=0;f[e>>2]=c;f[d>>2]=e+4;f[h>>2]=0}else{y=0;ja(1376,a|0,h|0);e=y;y=0;if(!(e&1)){c=f[h>>2]|0;f[h>>2]=0;if(!c)break;Nza(c);$Ja(c);break}c=Pa()|0;d=f[h>>2]|0;f[h>>2]=0;if(d|0){Nza(d);$Ja(d)}$a(c|0)}while(0);c=a+172|0;if((SN(c,b)|0)==(a+176|0)){h=KM(c,b)|0;f[h>>2]=b;u=g;return}else Na(43543,35371,663,43527)}function st(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;h=a+4|0;a:while(1){if((b|0)==(c|0)){a=12;break}i=f[h>>2]|0;gua(i);e=b+4|0;g=i+4|0;a=f[b>>2]|0;b:while(1){if((a|0)==(e|0))break;d=a+16|0;y=0;Ca(62,i|0,g|0,d|0,d|0);d=y;y=0;if(d&1){a=10;break a}d=f[a+4>>2]|0;if(!d)while(1){d=f[a+8>>2]|0;if((f[d>>2]|0)==(a|0)){a=d;continue b}else a=d}else a=d;while(1){d=f[a>>2]|0;if(!d)break;else a=d}}f[h>>2]=(f[h>>2]|0)+12;b=b+12|0}if((a|0)==10){c=Pa()|0;hla(i);$a(c|0)}else if((a|0)==12)return}function tt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i;f[g>>2]=b;h=a+48|0;c=((f[a+52>>2]|0)-(f[h>>2]|0)|0)/12|0;if((c|0)!=(f[a+44>>2]|0))Na(32216,32248,225,32612);if((f[b+8>>2]|0)>>>0>=c>>>0)Na(32284,32248,226,32612);c=f[a+92>>2]|0;b=f[a+88>>2]|0;while(1){if((b|0)==(c|0))break;d=b+4|0;e=f[d>>2]|0;if((e|0)==(f[b+8>>2]|0))XC(b,g);else{f[e>>2]=f[g>>2];f[d>>2]=(f[d>>2]|0)+4}b=b+12|0}e=f[(f[g>>2]|0)+8>>2]|0;h=f[h>>2]|0;X2(vI(a+112|0,g)|0,h+(e*12|0)|0)|0;e=gKa(f[a+16>>2]|0)|0;h=EN(a+124|0,g)|0;f[h>>2]=e;u=i;return}function ut(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;i=j+4|0;f[h>>2]=g;if(f[18711]|0){k=Vea(xj(Vea(vj(Vea(Vea(Vea(76684,21417)|0,c)|0,21451)|0,d)|0,20761)|0,e)|0,72307)|0;g=EN(74808,h)|0;Vea(vj(k,f[g>>2]|0)|0,19943)|0}k=nV(16)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;f[k+12>>2]=0;iJa(k);dCa(i,c);f[k>>2]=f[i>>2];f[k+4>>2]=d;b[k+12>>0]=e&1;f[k+8>>2]=f[h>>2];du(a,k);u=j;return k|0}function vt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;e=g;d=f[a>>2]|0;do if(Xha(d,b)|0){tI(e,1,d,f[a+8>>2]|0,f[18679]|0);f[c>>2]=f[e+8>>2];y=0;d=oa(40,a|0,b|0,e|0)|0;c=y;y=0;if(c&1){g=Pa()|0;iX(e);$a(g|0)}else{iX(e);break}}else d=AT(a,b,f[18680]|0)|0;while(0);u=g;return d|0}function wt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+32|0;d=g+24|0;e=g;f[d>>2]=f[c+8>>2];NM(e,b,f[c+12>>2]|0);if(FBa(e)|0){f[a>>2]=f[e>>2];f[a+4>>2]=f[e+4>>2];f[a+8>>2]=f[e+8>>2];f[a+12>>2]=f[e+12>>2];f[a+16>>2]=f[e+16>>2];f[a+20>>2]=f[e+20>>2]}else{d=GL((f[b+4>>2]|0)+4|0,d)|0;f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];NBa(a)}u=g;return}function xt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a+16|0;JJ(c,483,b);d=f[b>>2]|0;if(hJa(f[d>>2]|0)|0?(e=(Asa(d)|0)+16|0,(f[e>>2]|0)!=0):0){JJ(c,484,b);JJ(c,482,(Asa(d)|0)+16|0);JJ(c,485,b);JJ(c,482,(Asa(d)|0)+12|0);JJ(c,486,b);JJ(c,482,(Asa(d)|0)+8|0)}else _h(a,b);JJ(c,487,b);return}function yt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=f[b>>2]|0;g=f[b+4>>2]|0;c=((f[c>>2]|0)-i<<3)+(f[c+4>>2]|0)-g|0;e=i;if((c|0)>0){if(!g){h=d;e=i}else{i=32-g|0;h=(c|0)<(i|0)?c:i;i=-1>>>(i-h|0)&-1<<g;g=f[d>>2]|0;f[g>>2]=f[g>>2]&~i|f[e>>2]&i;e=d+4|0;i=(f[e>>2]|0)+h|0;f[d>>2]=g+(i>>>5<<2);f[e>>2]=i&31;e=(f[b>>2]|0)+4|0;f[b>>2]=e;c=c-h|0;h=d}g=(c|0)/32|0;S0(f[d>>2]|0,e|0,g<<2|0)|0;e=c-(g<<5)|0;c=(f[h>>2]|0)+(g<<2)|0;f[h>>2]=c;if((e|0)>0){g=(f[b>>2]|0)+(g<<2)|0;f[b>>2]=g;i=-1>>>(32-e|0);c=f[h>>2]|0;f[c>>2]=f[c>>2]&~i|f[g>>2]&i;f[d+4>>2]=e}}else c=f[d>>2]|0;f[a>>2]=c;f[a+4>>2]=f[d+4>>2];return}function zt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;if(!(pJa(f[b>>2]|0)|0))Na(43444,35371,682,46016);c=b;f[h>>2]=c;d=a+40|0;e=f[d>>2]|0;do if(e>>>0<(f[a+44>>2]|0)>>>0){f[h>>2]=0;f[e>>2]=c;f[d>>2]=e+4;f[h>>2]=0}else{y=0;ja(1507,a+36|0,h|0);e=y;y=0;if(!(e&1)){c=f[h>>2]|0;f[h>>2]=0;if(!c)break;XV(c);$Ja(c);break}c=Pa()|0;d=f[h>>2]|0;f[h>>2]=0;if(d|0){XV(d);$Ja(d)}$a(c|0)}while(0);c=a+208|0;if((SN(c,b)|0)==(a+212|0)){h=KM(c,b)|0;f[h>>2]=b;u=g;return}else Na(46028,35371,684,46016)}function At(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;e=a+32|0;M_(e,c)|0;h=a+44|0;f[h>>2]=0;i=a+48|0;g=f[i>>2]|0;if(g&8|0){c=b[e+11>>0]|0;if(c<<24>>24<0){c=f[e>>2]|0;d=c;c=c+(f[a+36>>2]|0)|0}else{d=e;c=e+(c&255)|0}f[h>>2]=c;f[a+8>>2]=d;f[a+12>>2]=d;f[a+16>>2]=c}if(g&16|0){d=e+11|0;c=b[d>>0]|0;if(c<<24>>24<0){g=f[a+36>>2]|0;f[h>>2]=(f[e>>2]|0)+g;c=(f[a+40>>2]&2147483647)+-1|0}else{g=c&255;f[h>>2]=e+g;c=10}YI(e,c);c=b[d>>0]|0;if(c<<24>>24<0){e=f[e>>2]|0;c=f[a+36>>2]|0}else c=c&255;d=a+24|0;f[d>>2]=e;f[a+20>>2]=e;f[a+28>>2]=e+c;if(f[i>>2]&3|0)f[d>>2]=e+g}return}function Bt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=u;u=u+16|0;j=n;Cv(j,a,c,d);g=f[j+4>>2]|0;h=d+4|0;a=0;c=f[j>>2]|0;while(1){if((c|0)==(g|0)){m=3;break}y=0;e=la(196,f[c>>2]|0)|0;o=y;y=0;if(o&1)break;a=(Y((((f[h>>2]|0)-(f[d>>2]|0)|0)/12|0)+-1|0,e)|0)+a|0;c=c+4|0}if((m|0)==3?(k=f[h>>2]|0,l=f[d>>2]|0,i=f[b+32>>2]|0,gKa(i)|0,y=0,i=ua(129,j|0,f[i+36>>2]|0)|0,o=y,y=0,!(o&1)):0){E4(j);u=n;return i&a>>>0>(((k-l|0)/12|0)+3|0)>>>0|0}o=Pa()|0;E4(j);$a(o|0);return 0}function Ct(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/12|0;g=e+1|0;if(g>>>0>357913941)SZ();else{d=((f[a+8>>2]|0)-d|0)/12|0;i=d<<1;oE(c,d>>>0<178956970?(i>>>0<g>>>0?g:i):357913941,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=0;i=e+4|0;f[i>>2]=0;f[e+8>>2]=0;f[e>>2]=f[b>>2];d=b+4|0;f[i>>2]=f[d>>2];i=b+8|0;f[e+8>>2]=f[i>>2];f[i>>2]=0;f[d>>2]=0;f[b>>2]=0;f[g>>2]=e+12;zw(a,c);rQ(c);u=h;return}}function Dt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;c=UAa(a,0)|0;if(!(jha(f[c>>2]|0,f[18748]|0)|0)?(c=UAa(a,0)|0,!(jha(f[c>>2]|0,f[18944]|0)|0)):0){c=UAa(a,0)|0;if(jha(f[c>>2]|0,f[18943]|0)|0)d=3;else Ka()}else d=1;gKa(b)|0;a:do if(hJa(f[b>>2]|0)|0?(c=UAa(b,0)|0,jha(f[c>>2]|0,f[18748]|0)|0):0){c=0;while(1){g=UAa(b,1)|0;if(c>>>0>=(yja(gKa(f[g>>2]|0)|0)|0)>>>0)break a;h=UAa(a,d)|0;h=gKa(f[h>>2]|0)|0;g=UAa(b,1)|0;g=UAa(f[g>>2]|0,c)|0;l6(h,f[g>>2]|0)|0;c=c+1|0}}else e=9;while(0);if((e|0)==9){h=UAa(a,d)|0;l6(gKa(f[h>>2]|0)|0,b)|0}return}function Et(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;do if(b[a+12>>0]|0){e=Vea(vj(Vea(vj(Vea(76852,58958)|0,d)|0,54382)|0,c)|0,72083)|0;Axa(h,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;g=ua(46,f[h>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,i=ua(f[(f[g>>2]|0)+28>>2]|0,g|0,10)|0,k=y,y=0,!(k&1)):0){pza(h);jn(e,i)|0;Yp(e)|0;break}k=Pa()|0;pza(h);$a(k|0)}while(0);k=k_(d,a,c)|0;u=j;return k|0}function Ft(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+48|0;c=l+32|0;g=l+24|0;e=l+8|0;h=l+16|0;i=l;j=b+8|0;Bwa(g,j);iua(e,j);j=b+32|0;k=g+4|0;d=f[e>>2]|0;e=f[e+4>>2]|0;while(1){if(!(Cpa(f[g>>2]|0,f[k>>2]|0,d,e)|0))break;m=ppa(g)|0;f[h>>2]=f[m>>2];m=f[j>>2]|0;f[c>>2]=f[h>>2];vo(a,c,m,b);bva(g)}f[i>>2]=f[b+24>>2];m=f[j>>2]|0;f[c>>2]=f[i>>2];vo(a,c,m,b);hp(a,(f[(f[b+28>>2]|0)+4>>2]|4|0)==5,b);u=l;return}function Gt(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)Kj(a,b)}}else Kj(a,b);return}function Ht(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;e=CBa(b)|0;g=f[a+4>>2]|0;a:do if(g){h=g+-1|0;i=(h&g|0)==0;if(!i)if(e>>>0<g>>>0)d=e;else d=(e>>>0)%(g>>>0)|0;else d=h&e;a=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(a){c=f[b>>2]|0;while(1){a=f[a>>2]|0;if(!a){a=0;break a}b=f[a+4>>2]|0;if((b|0)==(e|0))if(fxa(f[a+8>>2]|0,c)|0)break;else continue;if(!i){if(b>>>0>=g>>>0)b=(b>>>0)%(g>>>0)|0}else b=b&h;if((b|0)!=(d|0)){a=0;break}}}else a=0}else a=0;while(0);return a|0}function It(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=ksa(f[b>>2]|0)|0;if((pJa(f[h+8>>2]|0)|0?(e=a+16|0,i=a+84|0,c=OO(i,h)|0,(c|0)!=(a+88|0)):0)?(g=c+20|0,d=c+24|0,(f[d>>2]|0)!=(f[g>>2]|0)):0){c=a+80|0;a=f[c>>2]|0;Yv(e);Yz(a,f[c>>2]|0);a=f[d>>2]|0;b=f[g>>2]|0;while(1){if((b|0)==(a|0))break;Yz(f[b>>2]|0,f[c>>2]|0);b=b+4|0}FK(i,h)}return}function Jt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;g=h;c=f[a>>2]|0;d=((f[a+4>>2]|0)-c|0)/12|0;e=d+1|0;if(e>>>0>357913941)SZ();i=((f[a+8>>2]|0)-c|0)/12|0;c=i<<1;oE(g,i>>>0<178956970?(c>>>0<e>>>0?e:c):357913941,d,a+8|0);c=g+8|0;d=f[c>>2]|0;y=0;ja(449,d|0,b|0);b=y;y=0;if(b&1){i=Pa()|0;rQ(g);$a(i|0)}else{f[c>>2]=d+12;zw(a,g);rQ(g);u=h;return}}function Kt(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;g=c+8|0;h=a+60|0;if(pJa(f[g>>2]|0)|0){e=NK(h,g)|0;e=(f[e+4>>2]|0)!=(f[e>>2]|0)}else e=0;if(b[a+45>>0]|0)Ne(a,c);if(pJa(f[g>>2]|0)|0){d=a+72|0;c=a+48|0;if(WS(d,g)|0){LT(c);WU(d,g)}if(e){LT(c);oJ(h,g)}}return}function Lt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;g=h;c=f[a>>2]|0;d=((f[a+4>>2]|0)-c|0)/24|0;e=d+1|0;if(e>>>0>178956970)SZ();i=((f[a+8>>2]|0)-c|0)/24|0;c=i<<1;TO(g,i>>>0<89478485?(c>>>0<e>>>0?e:c):178956970,d,a+12|0);c=g+8|0;d=f[c>>2]|0;y=0;ja(2058,d|0,b|0);b=y;y=0;if(b&1){i=Pa()|0;XL(g);$a(i|0)}else{f[c>>2]=d+24;qD(a,g);XL(g);u=h;return}}function Mt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[a+(e<<2)>>2]=0;e=e+1|0}h=uHa(c)|0;i=d+11|0;g=b[i>>0]|0;g=g<<24>>24<0?f[d+4>>2]|0:g&255;e=g+h|0;if(e>>>0<=4294967279){if(e>>>0<11){b[a+11>>0]=h;e=a}else{j=e+16&-16;e=QCa(j)|0;f[a>>2]=e;f[a+8>>2]=j|-2147483648;f[a+4>>2]=h}Pta(e,c,h)|0;SBa(e+h|0,0);y=0;oa(73,a|0,((b[i>>0]|0)<0?f[d>>2]|0:d)|0,g|0)|0;j=y;y=0;if(!(j&1))return}else{y=0;za(3);y=0}j=Pa()|0;zta(a);$a(j|0)}function Nt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;h=c&255;e=(d|0)!=0;a:do if(e&(a&3|0)!=0){g=c&255;while(1){if((b[a>>0]|0)==g<<24>>24)break a;a=a+1|0;d=d+-1|0;e=(d|0)!=0;if(!(e&(a&3|0)!=0)){i=5;break}}}else i=5;while(0);b:do if((i|0)==5)if(e){g=c&255;if((b[a>>0]|0)!=g<<24>>24){e=Y(h,16843009)|0;c:do if(d>>>0>3)while(1){h=f[a>>2]^e;if((h&-2139062144^-2139062144)&h+-16843009|0)break;a=a+4|0;d=d+-4|0;if(d>>>0<=3){i=11;break c}}else i=11;while(0);if((i|0)==11)if(!d){d=0;break}while(1){if((b[a>>0]|0)==g<<24>>24)break b;a=a+1|0;d=d+-1|0;if(!d){d=0;break}}}}else d=0;while(0);return (d|0?a:0)|0}function Ot(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;Xwa(a);b[a+26>>0]=0;b[a+27>>0]=0;g=a+28|0;gua(g);h=a+40|0;gua(h);i=a+52|0;gua(i);j=a+64|0;gua(j);e=a+80|0;f[a+76>>2]=0;gua(e);b[a+24>>0]=b[c+12>>0]|0;b[a+25>>0]=b[c+13>>0]|0;if(d|0?(y=0,ja(211,a|0,d|0),d=y,y=0,d&1):0){d=Pa()|0;Cta(e);Cta(j);Cta(i);bxa(h);bxa(g);Rua(a);$a(d|0)}return}function Pt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;h=u;u=u+16|0;e=h+4|0;g=h;i=h+8|0;f[e>>2]=c;f[g>>2]=d;VBa(i,a);a=s5(f[i>>2]|0,b,c,d)|0;if(f[18711]|0){i=qN(a)|0;i=Vea(wj(Vea(vj(Vea(76684,20507)|0,i)|0,21013)|0,b)|0,20179)|0;e=EN(74808,e)|0;e=Vea(vj(i,f[e>>2]|0)|0,20128)|0;i=EN(74808,g)|0;Vea(vj(e,f[i>>2]|0)|0,20144)|0}u=h;return a|0}function Qt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;e=j;h=f[b>>2]|0;f[e>>2]=h;e=$z(e,4)|0;g=f[a+4>>2]|0;a:do if(g){i=g+-1|0;c=(i&g|0)==0;if(!c)if(e>>>0<g>>>0)d=e;else d=(e>>>0)%(g>>>0)|0;else d=i&e;b=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(b)while(1){b=f[b>>2]|0;if(!b){b=0;break a}a=f[b+4>>2]|0;if((e|0)==(a|0))if((f[b+8>>2]|0)==(h|0))break;else continue;if(!c){if(a>>>0>=g>>>0)a=(a>>>0)%(g>>>0)|0}else a=a&i;if((a|0)!=(d|0)){b=0;break}}else b=0}else b=0;while(0);u=j;return b|0}function Rt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+64|0;d=g;oL(d);c=a+36|0;e=gKa(f[c>>2]|0)|0;y=0;ya(72,d+16|0,b|0,e|0);e=y;y=0;do if(!(e&1)){dfa(d);e=b+36|0;YB(a+16|0,e);if((f[b+4>>2]|0)==0?rCa(f[(f[e>>2]|0)+4>>2]|0)|0:0){VBa(d,gKa(f[c>>2]|0)|0);a=Una(f[d>>2]|0,f[e>>2]|0)|0;f[e>>2]=a}oL(d);e=gKa(f[c>>2]|0)|0;y=0;ya(72,d+16|0,b|0,e|0);e=y;y=0;if(e&1){c=Pa()|0;dfa(d);break}else{dfa(d);u=g;return}}else{c=Pa()|0;dfa(d)}while(0);$a(c|0)}function St(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;e=a+32|0;a:do if((b|0)==(f[a+24>>2]|0)){if(gKa(f[b+16>>2]|0)|0){b=efa(b+12|0)|0;b=(f[b>>2]|0)+4|0;c=a+36|0;d=f[c>>2]|0;if((d|0)==(f[a+40>>2]|0)){XC(e,b);break}else{f[d>>2]=f[b>>2];f[c>>2]=d+4;break}}f[d>>2]=0;b=a+36|0;c=f[b>>2]|0;if(c>>>0<(f[a+40>>2]|0)>>>0){f[c>>2]=0;f[b>>2]=c+4}else XC(e,d)}else if(bDa(f[b+8>>2]|0,f[a+28>>2]|0)|0){d=f[e>>2]|0;b=a+36|0;c=f[b>>2]|0;while(1){if((c|0)==(d|0))break a;a=c+-4|0;f[b>>2]=a;c=a}}while(0);u=g;return}function Tt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;g=Ir(a,b,c,e)|0;if(GA(f[e>>2]|0,d,c)|0){h=f[c>>2]|0;f[c>>2]=f[d>>2];f[d>>2]=h;d=g+1|0;if(GA(f[e>>2]|0,c,b)|0){h=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=h;if(GA(f[e>>2]|0,b,a)|0){h=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=h;g=g+3|0}else g=g+2|0}else g=d}return g|0}function Ut(){JIa();oIa();mIa();lIa();kIa();dIa();cIa();bIa();aIa();$Ha();_Ha();ZHa();YHa();XHa();WHa();VHa();UHa();THa();SHa();RHa();QHa();nIa();PHa();OHa();NHa();MHa();LHa();KHa();JHa();IHa();HHa();GHa();FHa();EHa();DHa();CHa();BHa();AHa();zHa();return}function Vt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(((h-c|0)/12|0)>>>0<b>>>0){e=f[a>>2]|0;c=(c-e|0)/12|0;d=c+b|0;if(d>>>0>357913941)SZ();else{e=(h-e|0)/12|0;h=e<<1;oE(g,e>>>0<178956970?(h>>>0<d>>>0?d:h):357913941,c,a+8|0);LW(g,b);jD(a,g);ST(g);break}}else yX(a,b);while(0);u=i;return}function Wt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j+8|0;c=j;g=a+24|0;a=f[g>>2]|0;if(!(U3(a,f[b+28>>2]|0)|0)){d=b+8|0;Bwa(h,d);iua(c,d);d=h+4|0;e=f[c>>2]|0;a=f[c+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[d>>2]|0,e,a)|0))break;k=ppa(h)|0;c=f[g>>2]|0;if(U3(c,f[k>>2]|0)|0){i=6;break}bva(h)}if((i|0)==6)_Y(c,b)}else _Y(a,b);u=j;return}function Xt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;h=k;f[h>>2]=c;i=Pqa(a)|0;j=a+20|0;do if(pJa(f[b>>2]|0)|0){d=a+24|0;if((f[a+60>>2]|0)!=(((f[d>>2]|0)-(f[j>>2]|0)>>2)+((f[a+12>>2]|0)-(f[a+8>>2]|0)>>2)|0))Na(23444,46550,326,23513);e=KM(a+52|0,b)|0;f[e>>2]=i;e=a+44|0;g=f[e>>2]|0;if((g|0)==(f[a+48>>2]|0)){XC(a+40|0,b);break}else{f[g>>2]=f[b>>2];f[e>>2]=(f[e>>2]|0)+4;break}}else d=a+24|0;while(0);b=f[d>>2]|0;if(b>>>0<(f[a+28>>2]|0)>>>0){f[b>>2]=c;f[d>>2]=b+4}else XC(j,h);u=k;return i|0}function Yt(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ov(c,h,d)|0;d=f[g>>2]|0;if(!d){wO(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Zt(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[a+(e<<2)>>2]=0;e=e+1|0}h=b[c+11>>0]|0;g=h<<24>>24<0;h=g?f[c+4>>2]|0:h&255;g=g?f[c>>2]|0:c;e=h+1|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[a+11>>0]=h;e=a}else{c=h+17&-16;y=0;e=la(150,c|0)|0;i=y;y=0;if(i&1)break;f[a>>2]=e;f[a+8>>2]=c|-2147483648;f[a+4>>2]=h}Pta(e,g,h)|0;SBa(e+h|0,0);y=0;ja(82,a|0,d|0);i=y;y=0;if(!(i&1))return}else{y=0;za(3);y=0}while(0);i=Pa()|0;zta(a);$a(i|0)}function _t(a,b){a=a|0;b=b|0;var c=0,d=0;if((b|0)!=1){if(b+-1&b)b=Cc(b)|0}else b=2;d=f[a+4>>2]|0;if(b>>>0<=d>>>0){if(b>>>0<d>>>0){c=~~+X(+(+((f[a+12>>2]|0)>>>0)/+n[a+16>>2]))>>>0;if(d>>>0>2&(d+-1&d|0)==0)c=1<<32-($(c+-1|0)|0);else c=Cc(c)|0;b=b>>>0<c>>>0?c:b;if(b>>>0<d>>>0)Li(a,b)}}else Li(a,b);return}function $t(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[a+(e<<2)>>2]=0;e=e+1|0}g=b[c+11>>0]|0;e=g<<24>>24<0;g=e?f[c+4>>2]|0:g&255;h=uHa(d)|0;c=e?f[c>>2]|0:c;e=g+h|0;if(e>>>0<=4294967279){if(e>>>0<11){b[a+11>>0]=g;e=a}else{i=e+16&-16;e=QCa(i)|0;f[a>>2]=e;f[a+8>>2]=i|-2147483648;f[a+4>>2]=g}Pta(e,c,g)|0;SBa(e+g|0,0);y=0;oa(73,a|0,d|0,h|0)|0;i=y;y=0;if(!(i&1))return}else{y=0;za(3);y=0}i=Pa()|0;zta(a);$a(i|0)}function au(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,58893)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);d=uW(a,0)|0;JO(a,51164);c=a+20|0;if((b[c+11>>0]|0)<0)c=f[c>>2]|0;JO(a,c);KE(a,d);u=h;return}function bu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b+16|0;c=f[a>>2]|0;do if(!(f[e>>2]|0)){Aaa(c,39239,0)|0;sQ(a,f[b+8>>2]|0)|0;b=b+12|0;c=f[b>>2]|0;if(c|0?!(sGa(f[c>>2]|0)|0):0){zea(a);d=7;break}c3(f[a>>2]|0,41)|0}else{Aaa(c,39232,0)|0;sQ(a,f[b+8>>2]|0)|0;zea(a);b=b+12|0;d=7}while(0);if((d|0)==7){b=f[b>>2]|0;if(b|0?!(sGa(f[b>>2]|0)|0):0)kF(a,b);b=f[e>>2]|0;if(b|0)kF(a,b);x_(a)}return}function cu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;if(!(pJa(f[b>>2]|0)|0))Na(43444,35371,668,43460);c=b;f[h>>2]=c;d=a+16|0;e=f[d>>2]|0;do if(e>>>0<(f[a+20>>2]|0)>>>0){f[h>>2]=0;f[e>>2]=c;f[d>>2]=e+4;f[h>>2]=0}else{y=0;ja(1375,a+12|0,h|0);e=y;y=0;if(!(e&1)){c=f[h>>2]|0;f[h>>2]=0;if(!c)break;$Ja(c);break}c=Pa()|0;d=f[h>>2]|0;f[h>>2]=0;if(d|0)$Ja(d);$a(c|0)}while(0);c=a+184|0;if((SN(c,b)|0)==(a+188|0)){h=KM(c,b)|0;f[h>>2]=b;u=g;return}else Na(43470,35371,670,43460)}function du(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;if(!(pJa(f[b>>2]|0)|0))Na(43444,35371,689,46080);c=b;f[h>>2]=c;d=a+52|0;e=f[d>>2]|0;do if(e>>>0<(f[a+56>>2]|0)>>>0){f[h>>2]=0;f[e>>2]=c;f[d>>2]=e+4;f[h>>2]=0}else{y=0;ja(1508,a+48|0,h|0);e=y;y=0;if(!(e&1)){c=f[h>>2]|0;f[h>>2]=0;if(!c)break;$Ja(c);break}c=Pa()|0;d=f[h>>2]|0;f[h>>2]=0;if(d|0)$Ja(d);$a(c|0)}while(0);c=a+220|0;if((SN(c,b)|0)==(a+224|0)){h=KM(c,b)|0;f[h>>2]=b;u=g;return}else Na(46090,35371,691,46080)}function eu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;if(!(pJa(f[b>>2]|0)|0))Na(43444,35371,675,51589);c=b;f[h>>2]=c;d=a+28|0;e=f[d>>2]|0;do if(e>>>0<(f[a+32>>2]|0)>>>0){f[h>>2]=0;f[e>>2]=c;f[d>>2]=e+4;f[h>>2]=0}else{y=0;ja(1987,a+24|0,h|0);e=y;y=0;if(!(e&1)){c=f[h>>2]|0;f[h>>2]=0;if(!c)break;$Ja(c);break}c=Pa()|0;d=f[h>>2]|0;f[h>>2]=0;if(d|0)$Ja(d);$a(c|0)}while(0);c=a+196|0;if((SN(c,b)|0)==(a+200|0)){h=KM(c,b)|0;f[h>>2]=b;u=g;return}else Na(51599,35371,677,51589)}function fu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0;j=(b[c+20>>0]|0)==0;e=a+32|0;g=h[c+8>>0]|0;i=gKa(f[c+12>>2]|0)|0;d=c+24|0;if(j){k=gKa(f[c+16>>2]|0)|0;j=DR(a,f[d>>2]|0)|0;a=DR(a,f[c+28>>2]|0)|0;a=uH(e,g,i,k,j,a,f[c+32>>2]|0)|0}else{k=DR(a,f[d>>2]|0)|0;a=DR(a,f[c+28>>2]|0)|0;a=v1(e,g,i,k,a,f[c+32>>2]|0)|0}return a|0}function gu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+32|0;h=k+16|0;g=k+8|0;i=k;vHa(b);if(aea(b)|0){j=Fpa(f[b+32>>2]|0)|0;e=b+8|0;Bwa(h,e);iua(g,e);e=a+44|0;c=h+4|0;d=f[g>>2]|0;a=f[g+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[c>>2]|0,d,a)|0))break;g=ppa(h)|0;f[i>>2]=f[g>>2];g=KM(e,i)|0;f[g>>2]=j;bva(h)}i=KM(e,b+24|0)|0;f[i>>2]=j}u=k;return}function hu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0;l=a+11|0;g=b[l>>0]|0;h=g<<24>>24<0;if(h)j=f[a+4>>2]|0;else j=g&255;if(j>>>0<c>>>0)IZ();if(h)g=(f[a+8>>2]&2147483647)+-1|0;else g=10;k=j+e|0;if((g-j|0)>>>0>=e>>>0){if(e|0){if(h)i=f[a>>2]|0;else i=a;g=j-c|0;h=i+c|0;if(g){Ita(h+e|0,h,g)|0;d=h>>>0<=d>>>0&(i+j|0)>>>0>d>>>0?d+e|0:d}Ita(h,d,e)|0;if((b[l>>0]|0)<0)f[a+4>>2]=k;else b[l>>0]=k;SBa(i+k|0,0)}}else qv(a,g,k-g|0,j,c,0,e,d);return a|0}function iu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;g=h;c=f[a>>2]|0;d=((f[a+4>>2]|0)-c|0)/12|0;e=d+1|0;if(e>>>0>357913941)SZ();i=((f[a+8>>2]|0)-c|0)/12|0;c=i<<1;oE(g,i>>>0<178956970?(c>>>0<e>>>0?e:c):357913941,d,a+8|0);c=g+8|0;d=f[c>>2]|0;y=0;ja(120,d|0,b|0);b=y;y=0;if(b&1){i=Pa()|0;fU(g);$a(i|0)}else{f[c>>2]=d+12;yy(a,g);fU(g);u=h;return}}function ju(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/12|0;g=e+1|0;if(g>>>0>357913941)SZ();else{d=((f[a+8>>2]|0)-d|0)/12|0;i=d<<1;oE(c,d>>>0<178956970?(i>>>0<g>>>0?g:i):357913941,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=0;i=e+4|0;f[i>>2]=0;f[e+8>>2]=0;f[e>>2]=f[b>>2];d=b+4|0;f[i>>2]=f[d>>2];i=b+8|0;f[e+8>>2]=f[i>>2];f[i>>2]=0;f[d>>2]=0;f[b>>2]=0;f[g>>2]=e+12;zw(a,c);aW(c);u=h;return}}function ku(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;d=h;g=a+36|0;c=f[g>>2]|0;if(!c)Na(57050,54283,1426,57058);do if(b[a+12>>0]|0){c=Vea(76852,57068)|0;c=Vea(vj(c,f[g>>2]|0)|0,72083)|0;Axa(d,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;a=ua(46,f[d>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[a>>2]|0)+28>>2]|0,a|0,10)|0,i=y,y=0,!(i&1)):0){pza(d);jn(c,e)|0;Yp(c)|0;c=f[g>>2]|0;break}i=Pa()|0;pza(d);$a(i|0)}while(0);f[g>>2]=c+-1;u=h;return}function lu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;g=h;if(f[a+8>>2]|0){d=i3(a)|0;while(1){e=(d|0)!=0;if((b|0)==(c|0)|e^1)break;f[d+16>>2]=f[b>>2];e=OI(d)|0;HG(g,a,d);b=b+4|0;d=e}if(e){while(1){e=f[d+8>>2]|0;if(!e)break;d=e}MV(d)}}while(1){if((b|0)==(c|0))break;cz(g,a,b,b);b=b+4|0}u=h;return}function mu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56455)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);j=Jg(a)|0;f[c+16>>2]=j;j=Jg(a)|0;f[c+12>>2]=j;j=Jg(a)|0;f[c+8>>2]=j;WW(c);u=i;return}function nu(a,c){a=a|0;c=c|0;var d=0,e=0;d=a+11|0;if((b[d>>0]|0)<0){SBa(f[a>>2]|0,0);f[a+4>>2]=0;d=a}else{SBa(a,0);b[d>>0]=0;d=a}Sq(a);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];d=0;while(1){if((d|0)==3)break;f[c+(d<<2)>>2]=0;d=d+1|0}e=a+12|0;c=c+12|0;d=e+11|0;if((b[d>>0]|0)<0){SBa(f[e>>2]|0,0);f[a+16>>2]=0;d=e}else{SBa(e,0);b[d>>0]=0;d=e}Sq(e);f[d>>2]=f[c>>2];f[d+4>>2]=f[c+4>>2];f[d+8>>2]=f[c+8>>2];d=0;while(1){if((d|0)==3)break;f[c+(d<<2)>>2]=0;d=d+1|0}return}function ou(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=u;u=u+32|0;j=m+16|0;k=m+4|0;l=m;f[k>>2]=0;e=k+4|0;f[e>>2]=0;f[k+8>>2]=0;g=f[a+16>>2]|0;h=k+8|0;b=f[a+12>>2]|0;while(1){if((b|0)==(g|0))break;c=f[b>>2]|0;d=f[e>>2]|0;if((d|0)==(f[h>>2]|0)){y=0;ja(68,k|0,c|0);d=y;y=0;if(d&1){i=11;break}}else{f[d>>2]=f[c>>2];f[e>>2]=(f[e>>2]|0)+4}b=b+4|0}if((i|0)==11){m=Pa()|0;E4(k);$a(m|0)}c=f[e>>2]|0;b=f[k>>2]|0;while(1){if((b|0)==(c|0))break;f[l>>2]=f[b>>2];f[j>>2]=f[l>>2];hw(a,j);b=b+4|0}E4(k);u=m;return}function pu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=u;u=u+16|0;k=l;Axa(k,b);b=f[k>>2]|0;y=0;g=ua(46,b|0,77588)|0;m=y;y=0;if(((((!(m&1)?(y=0,xa(f[(f[g>>2]|0)+48>>2]|0,g|0,68313,68345,c|0)|0,m=y,y=0,!(m&1)):0)?(y=0,h=ua(46,b|0,77596)|0,m=y,y=0,!(m&1)):0)?(y=0,i=la(f[(f[h>>2]|0)+12>>2]|0,h|0)|0,m=y,y=0,!(m&1)):0)?(f[d>>2]=i,y=0,j=la(f[(f[h>>2]|0)+16>>2]|0,h|0)|0,m=y,y=0,!(m&1)):0)?(f[e>>2]=j,y=0,ja(f[(f[h>>2]|0)+20>>2]|0,a|0,h|0),m=y,y=0,!(m&1)):0){pza(k);u=l;return}m=Pa()|0;pza(k);$a(m|0)}function qu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>4;g=e+1|0;if(g>>>0>268435455)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>3;zM(c,i>>4>>>0<134217727?(d>>>0<g>>>0?g:d):268435455,e,a+12|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=0;f[e+4>>2]=0;d=f[b>>2]|0;f[e+8>>2]=0;f[e+12>>2]=d;f[g>>2]=e+16;Nu(a,c);pI(c);u=h;return}}function ru(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=u;u=u+16|0;c=i+12|0;e=i;h=i+8|0;g=at(a)|0;f[h>>2]=g;f[c>>2]=f[h>>2];qta(e,c,(b|0)!=0&(b|0)!=5&1);h=a+148|0;d=f[h>>2]|0;if(d>>>0<(f[a+152>>2]|0)>>>0){k=e;j=f[k+4>>2]|0;e=d;f[e>>2]=f[k>>2];f[e+4>>2]=j;f[h>>2]=(f[h>>2]|0)+8}else ry(a+144|0,e);VBa(c,f[a>>2]|0);a=JU(c,Dn(a,b)|0,0)|0;b=f[h>>2]|0;c=0;while(1){if((c|0)==-1)break;k=c+-1|0;f[h>>2]=b+(k<<3);c=k}k=(ksa(a)|0)+8|0;f[k>>2]=g;u=i;return a|0}function su(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=u;u=u+16|0;l=m;Axa(l,c);c=f[l>>2]|0;y=0;h=ua(46,c|0,77556)|0;n=y;y=0;if(((((!(n&1)?(y=0,xa(f[(f[h>>2]|0)+32>>2]|0,h|0,68313,68345,d|0)|0,n=y,y=0,!(n&1)):0)?(y=0,i=ua(46,c|0,77572)|0,n=y,y=0,!(n&1)):0)?(y=0,j=la(f[(f[i>>2]|0)+12>>2]|0,i|0)|0,n=y,y=0,!(n&1)):0)?(b[e>>0]=j,y=0,k=la(f[(f[i>>2]|0)+16>>2]|0,i|0)|0,n=y,y=0,!(n&1)):0)?(b[g>>0]=k,y=0,ja(f[(f[i>>2]|0)+20>>2]|0,a|0,i|0),n=y,y=0,!(n&1)):0){pza(l);u=m;return}n=Pa()|0;pza(l);$a(n|0)}function tu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){mM(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function uu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;e=h+16|0;d=h;c=h+4|0;f[d>>2]=f[b+24>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;g=f[b+4>>2]|0;y=0;f[e>>2]=f[d>>2];g=xa(16,a+32|0,e|0,c|0,g|0)|0;e=y;y=0;if(e&1){h=Pa()|0;E4(c);$a(h|0)}E4(c);d=b+8|0;e=g+8|0;b=b+12|0;c=0;while(1){if(c>>>0>=(gKa(f[b>>2]|0)|0)>>>0)break;i=bga(d,c)|0;AW(e,DR(a,f[i>>2]|0)|0);c=c+1|0}u=h;return g|0}function vu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;e=g;b=a+48|0;c=a+68|0;d=f[c>>2]|0;if((d|0)==(f[a+72>>2]|0))Jt(a+64|0,b);else{CF(d,b);f[c>>2]=(f[c>>2]|0)+12}f[e>>2]=0;b=e+4|0;f[b>>2]=0;f[e+8>>2]=0;c=a+92|0;d=f[c>>2]|0;if(d>>>0>=(f[a+96>>2]|0)>>>0){y=0;ja(447,a+88|0,e|0);a=y;y=0;if(a&1){a=Pa()|0;E4(e);$a(a|0)}}else{f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;f[e+8>>2]=0;f[b>>2]=0;f[e>>2]=0;f[c>>2]=(f[c>>2]|0)+12}E4(e);u=g;return}function wu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){aP(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function xu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){qK(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function yu(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;d=k+8|0;c=k;g=a+4|0;h=a+8|0;i=a+16|0;j3(d,f[g>>2]|0,f[h>>2]|0,f[i>>2]|0);iW(c,a);e=d+4|0;c=f[c+4>>2]|0;d=f[d>>2]|0;b=f[e>>2]|0;while(1){if((b|0)==(c|0))break;b=b+4|0;f[e>>2]=b;if((b-(f[d>>2]|0)|0)!=4096)continue;l=d+4|0;b=f[l>>2]|0;f[e>>2]=b;d=l}f[a+20>>2]=0;b=f[g>>2]|0;while(1){c=(f[h>>2]|0)-b>>2;if(c>>>0<=2)break;$Ja(f[b>>2]|0);l=(f[g>>2]|0)+4|0;f[g>>2]=l;b=l}switch(c|0){case 1:{b=512;j=10;break}case 2:{b=1024;j=10;break}default:{}}if((j|0)==10)f[i>>2]=b;u=k;return}function zu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){mM(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Au(a){a=a|0;var c=0,d=0;ix(a);d=a+16|0;if(f[d>>2]|0)Sx(a);hi(a);sh(a);tk(a);fq(a);$q(a);Fj(a);Sh(a);Mr(a);Il(a);te(a);fs(a);if(b[a+13>>0]|0)Yi(a);if(f[d>>2]|0)au(a);c=b[a+32+11>>0]|0;if(c<<24>>24<0)c=f[a+36>>2]|0;else c=c&255;if(c|0)mg(a);c=f[d>>2]|0;if(c|0)kua(c);$j(a);return}function Bu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i+4|0;e=i;g=i+8|0;f[d>>2]=b;f[e>>2]=c;h=nV(116)|0;yU(h,b,c);if(f[18711]|0){c=Vea(76684,22375)|0;f[g>>2]=h;g=EN(74832,g)|0;g=Vea(vj(c,f[g>>2]|0)|0,22496)|0;d=EN(74808,d)|0;d=Vea(vj(g,f[d>>2]|0)|0,20128)|0;g=EN(74808,e)|0;Vea(vj(d,f[g>>2]|0)|0,20144)|0}MW(a,h,-1);u=i;return h|0}function Cu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+16|0;h=j;i=b+12|0;e=b+16|0;c=f[e>>2]|0;a:do if(gKa(c)|0){g=a+36|0;d=0;while(1){if(d>>>0>=(c+-1|0)>>>0)break;c=bga(i,d)|0;c=f[c>>2]|0;if(rCa(f[c+4>>2]|0)|0){VBa(h,gKa(f[g>>2]|0)|0);k=Una(f[h>>2]|0,c)|0;c=bga(i,d)|0;f[c>>2]=k}d=d+1|0;c=f[e>>2]|0}if(kn(a,efa(i)|0)|0){rta(a);switch(f[b+4>>2]|0){case 5:case 0:break a;default:{}}Na(27218,27266,249,36293)}}while(0);u=j;return}function Du(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;e=h+16|0;d=h;c=h+4|0;f[d>>2]=f[b+24>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;g=f[b+4>>2]|0;y=0;f[e>>2]=f[d>>2];g=xa(19,a+32|0,e|0,c|0,g|0)|0;e=y;y=0;if(e&1){h=Pa()|0;E4(c);$a(h|0)}E4(c);d=b+8|0;e=g+8|0;b=b+12|0;c=0;while(1){if(c>>>0>=(gKa(f[b>>2]|0)|0)>>>0)break;i=bga(d,c)|0;AW(e,DR(a,f[i>>2]|0)|0);c=c+1|0}u=h;return g|0}function Eu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;c3(Aaa(f[a>>2]|0,64085,0)|0,32)|0;c3(sQ(a,f[c>>2]|0)|0,32)|0;d=f[a>>2]|0;vj(d,gKa(f[c+4>>2]|0)|0)|0;d=c+8|0;e=gKa(f[d>>2]|0)|0;if((e|0)<65535)switch(e|0){case 0:break;default:g=2}else switch(e|0){case 65535:break;default:g=2}if((g|0)==2){g=c3(f[a>>2]|0,32)|0;vj(g,gKa(f[d>>2]|0)|0)|0}if(b[c+26>>0]|0)Vea(f[a>>2]|0,39343)|0;Vea(f[a>>2]|0,72083)|0;return}function Fu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+32|0;i=k+8|0;g=b;f[i>>2]=g;h=k;f[h>>2]=a;j=k+16|0;a=g-a|0;if((a|0)>4){gwa(k+24|0);a=a>>>2;d=i;e=-1;while(1){f[d>>2]=b+(e<<2);a=a+-1|0;g=f[h>>2]|0;if(g>>>0>=(f[i>>2]|0)>>>0)break;Rva(j,a);b=Dr(c,j)|0;if(!b){d=h;e=1;b=g;continue}d=g+(b<<2)|0;e=f[g>>2]|0;f[g>>2]=f[d>>2];f[d>>2]=e;d=h;e=1;b=g}}u=k;return}function Gu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;g=j+24|0;h=j+16|0;c=j+8|0;i=j;d=b+8|0;Bwa(h,d);iua(c,d);d=a+80|0;e=h+4|0;a=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[e>>2]|0,a,c)|0))break;k=ppa(h)|0;f[i>>2]=f[k>>2];jz(g,d,i,i);bva(h)}k=b+24|0;jz(g,d,k,k);u=j;return}function Hu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;g=vs(a,b,c,e)|0;h=f[d>>2]|0;i=f[c>>2]|0;j=e+4|0;if(DS(f[f[e>>2]>>2]|0,f[j>>2]|0,h,i)|0){f[c>>2]=h;f[d>>2]=i;i=g+1|0;d=f[c>>2]|0;h=f[b>>2]|0;if(DS(f[f[e>>2]>>2]|0,f[j>>2]|0,d,h)|0){f[b>>2]=d;f[c>>2]=h;d=f[b>>2]|0;h=f[a>>2]|0;if(DS(f[f[e>>2]>>2]|0,f[j>>2]|0,d,h)|0){f[a>>2]=d;f[b>>2]=h;g=g+3|0}else g=g+2|0}else g=i}return g|0}function Iu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=b[a+11>>0]|0;j=k<<24>>24<0;i=a+4|0;g=f[i>>2]|0;k=k&255;do if((j?g:k)|0){if((c|0)!=(d|0)){g=d;h=c;while(1){g=g+-4|0;if(h>>>0>=g>>>0)break;m=f[h>>2]|0;f[h>>2]=f[g>>2];f[g>>2]=m;h=h+4|0}g=f[i>>2]|0}m=j?f[a>>2]|0:a;d=d+-4|0;a=m+(j?g:k)|0;g=m;while(1){h=b[g>>0]|0;i=h<<24>>24>0&h<<24>>24!=127;if(c>>>0>=d>>>0)break;if(i?(h<<24>>24|0)!=(f[c>>2]|0):0){l=10;break}c=c+4|0;g=(a-g|0)>1?g+1|0:g}if((l|0)==10){f[e>>2]=4;break}if(i?((f[d>>2]|0)+-1|0)>>>0>=h<<24>>24>>>0:0)f[e>>2]=4}while(0);return}function Ju(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;g=j+24|0;h=j+16|0;c=j+8|0;i=j;d=b+8|0;Bwa(h,d);iua(c,d);d=a+96|0;e=h+4|0;a=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[e>>2]|0,a,c)|0))break;k=ppa(h)|0;f[i>>2]=f[k>>2];jz(g,d,i,i);bva(h)}k=b+24|0;jz(g,d,k,k);u=j;return}function Ku(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;j=u;u=u+32|0;i=j;e=f[18845]|0;g=((f[18846]|0)-e|0)/40|0;h=g+1|0;if(h>>>0>107374182)SZ();k=((f[18847]|0)-e|0)/40|0;e=k<<1;xE(i,k>>>0<53687091?(e>>>0<h>>>0?h:e):107374182,g);e=i+8|0;g=f[e>>2]|0;y=0;Ca(57,g|0,a|0,(b[c>>0]|0)!=0|0,f[d>>2]|0);d=y;y=0;if(d&1){k=Pa()|0;TY(i);$a(k|0)}else{f[e>>2]=g+40;lG(i);TY(i);u=j;return}}function Lu(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;b=g;c=f[a>>2]|0;d=((f[a+4>>2]|0)-c|0)/24|0;e=d+1|0;if(e>>>0>178956970)SZ();else{h=((f[a+8>>2]|0)-c|0)/24|0;c=h<<1;TO(b,h>>>0<89478485?(c>>>0<e>>>0?e:c):178956970,d,a+12|0);e=b+8|0;d=f[e>>2]|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;f[d+12>>2]=0;f[d+16>>2]=0;f[d+20>>2]=0;vT(d);f[e>>2]=d+24;qD(a,b);XL(b);u=g;return}}function Mu(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){kO(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Nu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;k=f[g>>2]|0;i=k+-16|0;h=c+-16|0;f[i>>2]=0;j=k+-12|0;f[j>>2]=0;l=f[c+-4>>2]|0;f[k+-8>>2]=0;f[k+-4>>2]=l;f[i>>2]=f[h>>2];i=c+-12|0;f[j>>2]=f[i>>2];j=c+-8|0;f[k+-8>>2]=f[j>>2];f[j>>2]=0;f[i>>2]=0;f[h>>2]=0;f[g>>2]=(f[g>>2]|0)+-16;c=h}j=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=j;j=b+8|0;l=f[e>>2]|0;f[e>>2]=f[j>>2];f[j>>2]=l;j=a+8|0;l=b+12|0;k=f[j>>2]|0;f[j>>2]=f[l>>2];f[l>>2]=k;f[b>>2]=f[g>>2];return}function Ou(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;h=i;c=f[a>>2]|0;d=(f[a+4>>2]|0)-c>>4;e=d+1|0;g=BDa()|0;if(g>>>0<e>>>0)SZ();j=(f[a+8>>2]|0)-c|0;c=j>>3;TE(h,j>>4>>>0<g>>>1>>>0?(c>>>0<e>>>0?e:c):g,d,a+8|0);c=h+8|0;d=f[c>>2]|0;y=0;ja(1345,d|0,b|0);b=y;y=0;if(b&1){j=Pa()|0;iZ(h);$a(j|0)}else{f[c>>2]=d+16;wE(a,h);iZ(h);u=i;return}}function Pu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=u;u=u+16|0;e=g;h=g+8|0;f[e>>2]=b;Ti(a,b);Fsa(h,d,c);b=b4(f[a+48>>2]|0,h)|0;if(f[18711]|0){d=qN(b)|0;d=Vea(vj(Vea(76684,20507)|0,d)|0,22647)|0;h=EN(74832,e)|0;Vea(vj(Vea(vj(d,f[h>>2]|0)|0,20761)|0,c)|0,22706)|0;TX(74832)}Uz(a);$Ja(a);u=g;return b|0}function Qu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;e=i+8|0;d=i+4|0;g=i;if(b[a+26>>0]|0){h=c+8|0;j=(f[h>>2]|0)!=0;f[d>>2]=f[c>>2];f[e>>2]=f[d>>2];eo(a,j,e,63814)|0;d=f[f[h>>2]>>2]|0;if(yFa(d)|0)d=1;else d=RDa(d)|0;f[g>>2]=f[c>>2];f[e>>2]=f[g>>2];eo(a,d,e,63843)|0;j=f[h>>2]|0;if(!(Uj(a,f[c+4>>2]|0,f[j+4>>2]|0,j,63869)|0)){j=Vea(76852,63904)|0;Vea(K2(j,f[c>>2]|0)|0,61397)|0}}u=i;return}function Ru(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(((h-c|0)/12|0)>>>0<b>>>0){e=f[a>>2]|0;c=(c-e|0)/12|0;d=c+b|0;if(d>>>0>357913941)SZ();else{e=(h-e|0)/12|0;h=e<<1;oE(g,e>>>0<178956970?(h>>>0<d>>>0?d:h):357913941,c,a+8|0);Lba(g,b);zw(a,g);aW(g);break}}else Ida(a,b);while(0);u=i;return}function Su(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){TM(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Tu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=u;u=u+48|0;g=k+32|0;h=k+24|0;c=k+8|0;i=k+16|0;j=k;d=b+8|0;Bwa(h,d);iua(c,d);d=a+36|0;e=h+4|0;a=f[c>>2]|0;c=f[c+4>>2]|0;while(1){if(!(Cpa(f[h>>2]|0,f[e>>2]|0,a,c)|0))break;l=ppa(h)|0;f[i>>2]=f[l>>2];f[g>>2]=f[i>>2];m=hj(d,g)|0;f[l>>2]=m;bva(h)}f[j>>2]=f[b+24>>2];f[g>>2]=f[j>>2];m=hj(d,g)|0;f[b+24>>2]=m;u=k;return}function Uu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56471)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);j=Fk(a,Nm(a)|0)|0;f[c+8>>2]=j;j=Jg(a)|0;f[c+12>>2]=j;Sva(c);u=i;return}function Vu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+48|0;g=h+16|0;e=h+8|0;d=h;Pca(g,a,b);c=b+16|0;Bwa(e,c);iua(d,c);c=e+4|0;a=f[d>>2]|0;b=f[d+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[c>>2]|0,a,b)|0)){a=3;break}y=0;d=la(156,e|0)|0;i=y;y=0;if(i&1){a=7;break}y=0;ja(1629,g|0,d|0);i=y;y=0;if(i&1){a=7;break}bva(e)}if((a|0)==3){E$(g);u=h;return}else if((a|0)==7){i=Pa()|0;E$(g);$a(i|0)}}function Wu(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56160)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+8|0);Ql(a,c+12|0);Zq(Zq(f[a+4>>2]|0,-2)|0,0)|0;u=i;return}function Xu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+48|0;g=h+16|0;e=h+8|0;d=h;Pca(g,a,b);c=b+8|0;Bwa(e,c);iua(d,c);c=e+4|0;a=f[d>>2]|0;b=f[d+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[c>>2]|0,a,b)|0)){a=3;break}y=0;d=la(156,e|0)|0;i=y;y=0;if(i&1){a=7;break}y=0;ja(1629,g|0,d|0);i=y;y=0;if(i&1){a=7;break}bva(e)}if((a|0)==3){E$(g);u=h;return}else if((a|0)==7){i=Pa()|0;E$(g);$a(i|0)}}function Yu(a){a=a|0;var b=0;do switch(a|0){case 0:{Ka();break}case 1:{b=53179;break}case 2:{b=52950;break}case 3:{b=42702;break}case 4:{b=42696;break}case 5:{b=42689;break}case 6:{b=29098;break}case 7:{b=27662;break}case 8:{b=27648;break}case 9:{b=42679;break}case 10:{b=42669;break}case 11:{b=42658;break}case 12:{b=42647;break}case 13:{b=42642;break}case 14:{b=42636;break}case 15:{b=42630;break}case 16:{b=42624;break}case 17:{b=42617;break}case 18:{b=42610;break}case 19:{b=42605;break}case 20:{b=42598;break}case 21:{b=42593;break}case 22:{b=42589;break}case 23:{b=42577;break}default:Ka()}while(0);return b|0}function Zu(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;if((1073741807-c|0)>>>0<d>>>0)JZ();j=a+8|0;if((b[j+3>>0]|0)<0)i=f[a>>2]|0;else i=a;if(c>>>0<536870887){d=d+c|0;h=c<<1;d=d>>>0<h>>>0?h:d;d=d>>>0<2?2:d+4&-4;if(d>>>0>1073741823){d=zb(8)|0;y=0;ja(76,d|0,70649);j=y;y=0;if(j&1){j=Pa()|0;Oa(d|0);$a(j|0)}else{f[d>>2]=18216;ub(d|0,5816,318)}}}else d=1073741807;h=nV(d<<2)|0;if(g|0)awa(h,i,g);e=e-g|0;if(e|0)awa(h+(g<<2)|0,i+(g<<2)|0,e);if((c|0)!=1)$Ja(i);f[a>>2]=h;f[j>>2]=d|-2147483648;return}function _u(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;e=h+8|0;d=h;g=Aaa(f[a>>2]|0,39202,0)|0;K2(g,f[b+24>>2]|0)|0;zea(a);g=b+8|0;Bwa(e,g);iua(d,g);g=e+4|0;c=f[d>>2]|0;d=f[d+4>>2]|0;while(1){if(!(Cpa(f[e>>2]|0,f[g>>2]|0,c,d)|0))break;i=ppa(e)|0;kF(a,f[i>>2]|0);bva(e)}kF(a,f[b+28>>2]|0);x_(a);u=h;return}function $u(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;g=h;c=f[a>>2]|0;d=((f[a+4>>2]|0)-c|0)/12|0;e=d+1|0;if(e>>>0>357913941)SZ();i=((f[a+8>>2]|0)-c|0)/12|0;c=i<<1;oE(g,i>>>0<178956970?(c>>>0<e>>>0?e:c):357913941,d,a+8|0);d=g+8|0;e=f[d>>2]|0;f[e>>2]=f[b>>2];f[e+4>>2]=f[b+4>>2];f[e+8>>2]=f[b+8>>2];c=0;while(1){if((c|0)==3)break;f[b+(c<<2)>>2]=0;c=c+1|0}f[d>>2]=e+12;yy(a,g);fU(g);u=h;return}function av(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;h=i;d=f[18845]|0;e=((f[18846]|0)-d|0)/40|0;g=e+1|0;if(g>>>0>107374182)SZ();j=((f[18847]|0)-d|0)/40|0;d=j<<1;xE(h,j>>>0<53687091?(d>>>0<g>>>0?g:d):107374182,e);d=h+8|0;e=f[d>>2]|0;y=0;Ca(57,e|0,28607,(b[a>>0]|0)!=0|0,f[c>>2]|0);c=y;y=0;if(c&1){j=Pa()|0;TY(h);$a(j|0)}else{f[d>>2]=e+40;lG(h);TY(h);u=i;return}}function bv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;e=CBa(b)|0;g=f[a+4>>2]|0;a:do if(g){h=g+-1|0;i=(h&g|0)==0;if(!i)if(e>>>0<g>>>0)d=e;else d=(e>>>0)%(g>>>0)|0;else d=h&e;a=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(a){c=f[b>>2]|0;while(1){a=f[a>>2]|0;if(!a){a=0;break a}b=f[a+4>>2]|0;if((e|0)==(b|0))if(bDa(f[a+8>>2]|0,c)|0)break;else continue;if(!i){if(b>>>0>=g>>>0)b=(b>>>0)%(g>>>0)|0}else b=b&h;if((b|0)!=(d|0)){a=0;break}}}else a=0}else a=0;while(0);return a|0}function cv(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;b=g;c=f[18729]|0;d=(f[18730]|0)-c>>2;e=d+1|0;if(e>>>0>1073741823)SZ();else{h=(f[18731]|0)-c|0;c=h>>1;iD(b,h>>2>>>0<536870911?(c>>>0<e>>>0?e:c):1073741823,d);e=b+8|0;d=f[e>>2]|0;c=f[a>>2]|0;f[a>>2]=0;f[d>>2]=c;f[e>>2]=d+4;tD(b);JL(b);u=g;return}}function dv(a,b){a=a|0;b=b|0;switch(f[b+8>>2]|0){case 0:{c3(Aaa(f[a>>2]|0,37665,0)|0,41)|0;break}case 1:{c3(Aaa(f[a>>2]|0,37674,0)|0,41)|0;break}case 2:{Aaa(f[a>>2]|0,37689,0)|0;zea(a);b=bga(b+16|0,0)|0;kF(a,f[b>>2]|0);x_(a);break}case 3:{c3(K2(Aaa(f[a>>2]|0,37701,0)|0,f[b+12>>2]|0)|0,41)|0;break}default:Ka()}return}function ev(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+48|0;if(f[e>>2]|0)Na(48338,48350,40,50392);Rsa(a,Rya(b)|0);d=f[b+12>>2]|0;c=f[b+8>>2]|0;while(1){if((c|0)==(d|0))break;Rsa(a,f[c>>2]|0);c=c+4|0}Rsa(a,Vya(b)|0);d=f[b+24>>2]|0;c=f[b+20>>2]|0;while(1){if((c|0)==(d|0))break;Rsa(a,f[c>>2]|0);c=c+4|0}Rsa(a,f[b+4>>2]|0);c=f[b+32>>2]|0;d=pJa(c)|0;nma(a,d?c:0,d?0:0);Rsa(a,nc(f[b+36>>2]|0)|0);d=f[e>>2]|0;e=fI(f[a+44>>2]|0,b)|0;f[e>>2]=d;return}function fv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+16|0;i=k;j=k+4|0;f[i>>2]=a;e=gKa(f[a+40>>2]|0)|0;while(1){h=a+24|0;g=e;if((g|0)==(EFa(h)|0))break;e=f[e+8>>2]|0;f[j>>2]=e;if(_qa(d,e)|0){l=Hy(e,i)|0;l=f[l>>2]|0;f[l>>2]=c;f[l+4>>2]=b;g=f[g+4>>2]|0;IO(h,e);BD(a+72|0,j);IO(e,a);e=Hy(e+48|0,i)|0;f[e>>2]=l;e=g}else e=f[g+4>>2]|0}u=k;return}function gv(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+16>>2]|0;c=f[b+12>>2]|0;while(1){if((c|0)==(d|0))break;Zo(a,f[c>>2]|0);c=c+4|0}d=f[b+28>>2]|0;c=f[b+24>>2]|0;while(1){if((c|0)==(d|0))break;_w(a,f[c>>2]|0);c=c+4|0}d=f[b+52>>2]|0;c=f[b+48>>2]|0;while(1){if((c|0)==(d|0))break;tca(a,f[c>>2]|0);c=c+4|0}d=f[b+40>>2]|0;c=f[b+36>>2]|0;while(1){if((c|0)==(d|0))break;nX(a,f[c>>2]|0);c=c+4|0}PR(a,b+60|0);nW(a,b+88|0);return}function hv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;e=CBa(b)|0;g=f[a+4>>2]|0;a:do if(g){h=g+-1|0;i=(h&g|0)==0;if(!i)if(e>>>0<g>>>0)d=e;else d=(e>>>0)%(g>>>0)|0;else d=h&e;a=f[(f[a>>2]|0)+(d<<2)>>2]|0;if(a){c=f[b>>2]|0;while(1){a=f[a>>2]|0;if(!a){a=0;break a}b=f[a+4>>2]|0;if((b|0)==(e|0))if(bDa(f[a+8>>2]|0,c)|0)break;else continue;if(!i){if(b>>>0>=g>>>0)b=(b>>>0)%(g>>>0)|0}else b=b&h;if((b|0)!=(d|0)){a=0;break}}}else a=0}else a=0;while(0);return a|0}function iv(a,b){a=a|0;b=b|0;var c=0,d=0;c3(a,40)|0;c=gKa(a)|0;d=f[b>>2]|0;Vea(Vea(c,F$(d)|0)|0,38989)|0;c=b+8|0;switch(d|0){case 0:{Vea(a,38997)|0;break}case 1:{wj(a,f[c>>2]|0)|0;break}case 2:{d=c;oj(a,f[d>>2]|0,f[d+4>>2]|0)|0;break}case 3:{BA(a,+Hoa(b));break}case 4:{Ip(a,+Goa(b));break}default:Ka()}return c3(a,41)|0}function jv(a){a=a|0;var c=0,d=0,e=0;y=0;wa(4)|0;c=y;y=0;do if(!(c&1)){if(cta()|0){y=0;Ca(52,28352,28384,55,28408);y=0;break}c=a+4|0;y=0;ia(347,c|0);e=y;y=0;if(!(e&1)?(b[a+80>>0]=1,d=a+32|0,nha(d),$W(c),y=0,ia(354,f[a>>2]|0),e=y,y=0,!(e&1)):0){D8(a+88|0);nja(d);xla(c);c=f[a>>2]|0;f[a>>2]=0;if(c|0){QBa(f[c>>2]|0);$Ja(c)}return}}while(0);d=ab(0)|0;D8(a+88|0);nja(a+32|0);xla(a+4|0);c=f[a>>2]|0;f[a>>2]=0;if(c|0){QBa(f[c>>2]|0);$Ja(c)}lDa(d)}function kv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){DP(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function lv(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0;d=gKa(f[a+16>>2]|0)|0;g=c+8|0;e=f[g>>2]|0;do if(!(qva(d,e)|0)?((YV(d,e)|0)+-1|0)>>>0<=1:0){c=vJ(f[c+12>>2]|0)|0;e=f[g>>2]|0;d=f[f[a+24>>2]>>2]|0;a=d+(e<<3)|0;i=gh(c)|0;g=f[a>>2]|0;f[a>>2]=g>>>0<i>>>0?i:g;if(!($F(c)|0)){c=yAa(c)|0;if((c|0)!=0?(b[c+9>>0]|0)!=0:0)c=h[c+8>>0]<<3;else c=-1}else c=Bja(c)|0;e=d+(e<<3)+4|0;d=f[e>>2]|0;if(d)if((d|0)==(c|0))break;else c=-1;f[e>>2]=c}while(0);return}function mv(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+52>>2]|0;c=f[b+48>>2]|0;while(1){if((c|0)==(d|0))break;B1(a,f[c>>2]|0);c=c+4|0}d=f[b+40>>2]|0;c=f[b+36>>2]|0;while(1){if((c|0)==(d|0))break;YP(a,f[c>>2]|0);c=c+4|0}xV(a,f[b+76>>2]|0,f[b+80>>2]|0);xV(a,f[b+100>>2]|0,f[b+104>>2]|0);return}function nv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>2;g=e+1|0;if(g>>>0>1073741823)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>1;fF(c,i>>2>>>0<536870911?(d>>>0<g>>>0?g:d):1073741823,e,a+8|0);g=c+8|0;e=f[g>>2]|0;d=f[b>>2]|0;f[b>>2]=0;f[e>>2]=d;f[g>>2]=e+4;$B(a,c);xJ(c);u=h;return}}function ov(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Wx(c,h,d)|0;d=f[g>>2]|0;if(!d){FQ(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function pv(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;i=u;u=u+192|0;j=i+168|0;h=i;if(f[18711]|0)Vea(76684,22244)|0;Yta(j);y=0;ya(66,h|0,a|0,j|0);g=y;y=0;do if(g&1)a=Pa()|0;else{y=0;ia(344,h|0);g=y;y=0;if(g&1){a=Pa()|0;eG(h);break}g=f[j>>2]|0;e=(f[j+4>>2]|0)-g|0;e=e>>>0>d>>>0?d:e;d=g;g=d+e|0;a=c;while(1){if((d|0)==(g|0))break;b[a>>0]=b[d>>0]|0;a=a+1|0;d=d+1|0}eG(h);F4(j);u=i;return e|0}while(0);F4(j);$a(a|0);return 0}function qv(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0;if((-18-c|0)>>>0<d>>>0)JZ();if((b[a+11>>0]|0)<0)m=f[a>>2]|0;else m=a;if(c>>>0<2147483623){k=d+c|0;l=c<<1;k=k>>>0<l>>>0?l:k;k=k>>>0<11?11:k+16&-16}else k=-17;l=QCa(k)|0;if(g|0)Pta(l,m,g)|0;if(i|0)Pta(l+g|0,j,i)|0;d=e-h|0;e=d-g|0;if(e|0)Pta(l+g+i|0,m+g+h|0,e)|0;if((c|0)!=10)$Ja(m);f[a>>2]=l;f[a+8>>2]=k|-2147483648;i=d+i|0;f[a+4>>2]=i;SBa(l+i|0,0);return}function rv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){TM(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function sv(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=u;u=u+16|0;l=o;m=nV(20)|0;_pa(m);n=a+11|0;if((b[n>>0]|0)<0){j=a;k=a;c=f[a>>2]|0}else{j=a;k=a;c=a}e=l4(b[c>>0]|0)|0;f[m+4>>2]=e;e=a+4|0;g=m+8|0;h=m+12|0;i=m+16|0;d=1;while(1){a=b[n>>0]|0;c=a<<24>>24<0;if(c)a=f[e>>2]|0;else a=a&255;if(d>>>0>=a>>>0)break;if(c)a=f[k>>2]|0;else a=j;a=l4(b[a+d>>0]|0)|0;f[l>>2]=a;c=f[h>>2]|0;if(c>>>0<(f[i>>2]|0)>>>0){f[c>>2]=a;f[h>>2]=c+4}else XC(g,l);d=d+1|0}u=o;return m|0}function tv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=u;u=u+16|0;g=h;f[g>>2]=c;f[g+4>>2]=d;while(1){if((a|0)==(b|0))break;if(uA(g,a)|0){d=a;e=5;break}a=a+4|0}a:do if((e|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=d;break a}}while(uA(g,a)|0);e=f[a>>2]|0;f[a>>2]=0;c=f[d>>2]|0;f[d>>2]=e;if(c|0){XV(c);$Ja(c)}d=d+4|0;e=5}while(0);u=h;return b|0}function uv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(((h-c|0)/20|0)>>>0<b>>>0){e=f[a>>2]|0;c=(c-e|0)/20|0;d=c+b|0;if(d>>>0>214748364)SZ();else{e=(h-e|0)/20|0;h=e<<1;jE(g,e>>>0<107374182?(h>>>0<d>>>0?d:h):214748364,c,a+8|0);hR(g,b);gE(a,g);L_(g);break}}else LR(a,b);while(0);u=i;return}function vv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;g=f[b>>2]|0;e=(f[b+4>>2]|0)-g>>2;i=0;while(1){if(i>>>0>=e>>>0)break;d=f[g+(i<<2)>>2]|0;if(xFa(f[d+4>>2]|0)|0){h=4;break}i=i+1|0}if((h|0)==4){if(i){d=f[a+36>>2]|0;gKa(d)|0;d=osa(d+144|0)|0;g=d+12|0;e=0;while(1){h=f[b>>2]|0;if((e|0)==(i|0))break;AW(g,KX(a,f[h+(e<<2)>>2]|0)|0);e=e+1|0}AW(g,f[h+(i<<2)>>2]|0);Ela(d,c)}g1(a,d)|0}return}function wv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0;i=Oz(a,b,c,d)|0;g=f[e>>2]|0;h=f[d>>2]|0;if(Iwa(g,h)|0){f[d>>2]=g;f[e>>2]=h;e=i+1|0;g=f[d>>2]|0;h=f[c>>2]|0;if(Iwa(g,h)|0){f[c>>2]=g;f[d>>2]=h;e=i+2|0;g=f[c>>2]|0;h=f[b>>2]|0;if(Iwa(g,h)|0){f[b>>2]=g;f[c>>2]=h;e=f[b>>2]|0;g=f[a>>2]|0;if(Iwa(e,g)|0){f[a>>2]=e;f[b>>2]=g;e=i+4|0}else e=i+3|0}}}else e=i;return e|0}function xv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=wx(c,h,d)|0;d=f[g>>2]|0;if(!d){FQ(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function yv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(sO(c,f[a>>2]|0)|0){d=a;e=a;g=5;break}a=a+4|0}a:do if((g|0)==5)while(1){a=d;do{a=a+4|0;if((a|0)==(b|0)){b=e;break a}d=f[a>>2]|0}while(sO(c,d)|0);f[e>>2]=d;d=a;e=e+4|0;g=5}while(0);return b|0}function zv(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+8|0;d=j+4|0;g=j;i=a+48|0;b=f[a+64>>2]|0;gKa(b)|0;e=EFa(i)|0;c=h;while(1){f[c>>2]=b;c=f[h>>2]|0;b=c;if((b|0)==(e|0))break;c=f[c+12>>2]|0;if(c|0){vna(c);$Ja(c)}f[h>>2]=f[b+4>>2];c=d}b=f[a+16>>2]|0;gKa(b)|0;d=EFa(a)|0;c=h;while(1){f[c>>2]=b;c=f[h>>2]|0;b=c;if((b|0)==(d|0))break;c=f[c+12>>2]|0;if(c|0){vna(c);$Ja(c)}f[h>>2]=f[b+4>>2];c=g}_fa(a+72|0);kba(i);_fa(a+24|0);kba(a);u=j;return}function Av(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;d=k+24|0;g=k+20|0;h=k;i=f[a>>2]|0;j=(f[a+4>>2]|0)-i>>3;e=j+1|0;if(e>>>0>536870911)SZ();else{l=(f[a+8>>2]|0)-i|0;i=l>>2;PE(h,l>>3>>>0<268435455?(i>>>0<e>>>0?e:i):536870911,j,a+8|0);j=h+8|0;i=f[j>>2]|0;FCa(g,f[b>>2]|0);c=f[c>>2]|0;f[d>>2]=f[g>>2];qta(i,d,c);f[j>>2]=i+8;NE(a,h);x0(h);u=k;return}}function Bv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if((c-a|0)>12){g=0;f=a;while(1){h=f+1|0;if((g|0)>=13)break;if((b[f>>0]|0)==(b[73716+g>>0]|0)){g=g+1|0;f=h}else{f=a;break a}}b:do if((f|0)==(c|0))f=c;else{if((b[f>>0]|0)==95){if((h|0)==(c|0)){f=a;break a}if(((b[h>>0]|0)+-48|0)>>>0>=10){f=a;break a}f=f+2|0}while(1){if((f|0)==(c|0)){f=c;break b}if(((b[f>>0]|0)+-48|0)>>>0>=10)break b;f=f+1|0}}while(0);if((d|0)!=(e|0))x4(e+-24|0,0,73730)|0;else f=a}else f=a;while(0);return f|0}function Cv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0;k=u;u=u+16|0;h=k;f[a>>2]=0;i=a+4|0;f[i>>2]=0;f[a+8>>2]=0;j=a+8|0;b=0;while(1){if(b>>>0>=c>>>0){e=11;break}y=0;e=ua(125,f[d>>2]|0,b|0)|0;g=y;y=0;if(g&1){e=8;break}f[h>>2]=e;g=f[i>>2]|0;if((g|0)==(f[j>>2]|0)){y=0;ja(497,a|0,h|0);g=y;y=0;if(g&1){e=9;break}}else{f[g>>2]=e;f[i>>2]=(f[i>>2]|0)+4}b=b+1|0}if((e|0)==8)b=Pa()|0;else if((e|0)==9)b=Pa()|0;else if((e|0)==11){u=k;return}E4(a);$a(b|0)}function Dv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){DP(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Ev(a,b,c,d,e,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;n=u;u=u+48|0;l=n;m=n+8|0;k=F8(8)|0;f[m>>2]=b;f[m+4>>2]=c;f[m+8>>2]=d;f[m+12>>2]=e;f[m+16>>2]=g;f[m+20>>2]=h;f[m+24>>2]=i;f[m+28>>2]=j;c=0;while(1){if((c|0)==8)break;b=gKa(k)|0;l6(b,f[m+(c<<2)>>2]|0)|0;c=c+1|0}m=gKa(F8(3)|0)|0;m=l6(m,y4(75716)|0)|0;PDa(l,l6(l6(m,Bea(a)|0)|0,k)|0);u=n;return f[l>>2]|0}function Fv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;c=g+4|0;d=g;e=b+4|0;if(rCa(f[e>>2]|0)|0){cJa(d);e=f[e>>2]|0;f[c>>2]=f[d>>2];d=Ho(a,c,e,b,-1)|0;e=b+12|0;h=Rx(a,f[e>>2]|0,d)|0;f[e>>2]=h;e=b+16|0;d=Rx(a,f[e>>2]|0,d)|0;f[e>>2]=d;qO(b)}Pca(c,a,b);y=0;ja(1629,c|0,b+8|0);h=y;y=0;if(h&1){h=Pa()|0;E$(c);$a(h|0)}else{E$(c);u=g;return}}function Gv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;c=i;Bha(c,gKa(f[a+36>>2]|0)|0);h=a+44|0;j=f[c>>2]|0;f[c>>2]=0;d=f[h>>2]|0;f[h>>2]=j;if(d|0)$Ja(d);f[c>>2]=0;d=b+36|0;gB(a+16|0,d);c=f[b+4>>2]|0;if(c|0?(e=f[d>>2]|0,g=OO(a+60|0,e)|0,(g|0)!=(a+64|0)):0){h=f[h>>2]|0;j=gia(h,f[g+20>>2]|0,c)|0;j=p5(h,e,yra(f[h>>2]|0,j)|0)|0;f[d>>2]=j}u=i;return}function Hv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0;h=Gs(a,b,c,e)|0;g=e+4|0;if(er(f[e>>2]|0,f[g>>2]|0,f[d>>2]|0,f[c>>2]|0)|0){i=f[c>>2]|0;f[c>>2]=f[d>>2];f[d>>2]=i;d=h+1|0;if(er(f[e>>2]|0,f[g>>2]|0,f[c>>2]|0,f[b>>2]|0)|0){i=f[b>>2]|0;f[b>>2]=f[c>>2];f[c>>2]=i;if(er(f[e>>2]|0,f[g>>2]|0,f[b>>2]|0,f[a>>2]|0)|0){d=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=d;d=h+3|0}else d=h+2|0}}else d=h;return d|0}function Iv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;c=i+4|0;e=i;g=b+8|0;d=f[g>>2]|0;if(pJa(d)|0?(f[e>>2]=d,f[c>>2]=f[e>>2],ME(a,c),WU(a+28|0,g),WU(a+52|0,g),h=a+40|0,QZ(h,b)|0):0){f[c>>2]=b;h=($I(h,c)|0)+4|0;Dk(a,f[h>>2]|0,b)}if(!(f[b+4>>2]|0))mp(a,rCa(f[(f[b+12>>2]|0)+4>>2]|0)|0,b);u=i;return}function Jv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;TI(a);h=f[b>>2]|0;f[b>>2]=0;c=f[a>>2]|0;f[a>>2]=h;if(c|0)$Ja(c);h=b+4|0;d=a+4|0;f[d>>2]=f[h>>2];f[h>>2]=0;h=b+12|0;i=f[h>>2]|0;f[a+12>>2]=i;f[a+16>>2]=f[b+16>>2];e=b+8|0;c=f[e>>2]|0;g=a+8|0;f[g>>2]=c;if(i|0){c=f[c+4>>2]|0;b=f[d>>2]|0;d=b+-1|0;if(d&b){if(c>>>0>=b>>>0)c=(c>>>0)%(b>>>0)|0}else c=d&c;f[(f[a>>2]|0)+(c<<2)>>2]=g;f[e>>2]=0;f[h>>2]=0}return}function Kv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;h=nV(104)|0;f[a>>2]=h;f[a+4>>2]=c+8;c=a+8|0;b[c>>0]=0;j=f[e>>2]|0;e=f[e+4>>2]|0;f[h+8>>2]=f[f[d>>2]>>2];y=0;ya(75,h+12|0,j|0,f[e>>2]|0);e=y;y=0;if(e&1){j=Pa()|0;f[a>>2]=0;$Ja(h);$a(j|0)}else{b[c>>0]=1;f[g>>2]=f[h+8>>2];j=$z(g,4)|0;f[h+4>>2]=j;f[h>>2]=0;u=i;return}}function Lv(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;e=d+16|0;g=f[e>>2]|0;if(!g)if(!(_U(d)|0)){g=f[e>>2]|0;h=5}else e=0;else h=5;a:do if((h|0)==5){j=d+20|0;i=f[j>>2]|0;e=i;if((g-i|0)>>>0<c>>>0){e=Rb[f[d+36>>2]&127](d,a,c)|0;break}b:do if((b[d+75>>0]|0)>-1){i=c;while(1){if(!i){h=0;g=a;break b}g=i+-1|0;if((b[a+g>>0]|0)==10)break;else i=g}e=Rb[f[d+36>>2]&127](d,a,i)|0;if(e>>>0<i>>>0)break a;h=i;g=a+i|0;c=c-i|0;e=f[j>>2]|0}else{h=0;g=a}while(0);rq(e|0,g|0,c|0)|0;f[j>>2]=(f[j>>2]|0)+c;e=h+c|0}while(0);return e|0}function Mv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;d=e+8|0;g=e;c=f[a+24>>2]|0;f[g>>2]=f[b+24>>2];f[d>>2]=f[g>>2];b=vY(c,d)|0;c=a+32|0;if(!(WS(c,b)|0)){jz(d,c,b,b);g=Vea(76684,37323)|0;g=Vea(K2(g,f[f[a+28>>2]>>2]|0)|0,37520)|0;Vea(K2(g,f[b>>2]|0)|0,37545)|0}u=e;return}function Nv(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0;d=c+20|0;if(b[d>>0]|0?(e=f[a+20>>2]|0,gKa(e)|0,(b[e+114>>0]|0)==0):0)HS(a,c);g=c+8|0;e=c+32|0;fO(a,b[g>>0]|0,f[e>>2]|0,c);i=gKa(f[c+16>>2]|0)|0;vn(a,i,f[c+4>>2]|0,h[g>>0]|0,(b[d>>0]|0)!=0,c);_j(a,f[(f[c+24>>2]|0)+4>>2]|0,1,c,61989);d=c+28|0;Bk(a,f[(f[d>>2]|0)+4>>2]|0,c);_j(a,f[(f[d>>2]|0)+4>>2]|0,f[e>>2]|0,c,62054);return}function Ov(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;do if(e){d=ECa(a)|0;c=f[c>>2]|0;while(1){a=f[e+16>>2]|0;if(Iva(c,a)|0){a=f[e>>2]|0;if(!a){a=5;break}else{d=e;e=a}}else{if(!(Iva(a,c)|0)){a=10;break}d=e+4|0;a=f[d>>2]|0;if(!a){a=9;break}else e=a}}if((a|0)==5){f[b>>2]=e;d=e;break}else if((a|0)==9){f[b>>2]=e;break}else if((a|0)==10){f[b>>2]=e;break}}else f[b>>2]=d;while(0);return d|0}function Pv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){VP(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Qv(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;d=(d-b<<3)+e-c|0;if((d|0)>0){if(!c){h=g;e=f[g>>2]|0}else{i=32-c|0;h=(d|0)<(i|0)?d:i;i=-1>>>(i-h|0)&-1<<c;e=f[g>>2]|0;f[e>>2]=f[e>>2]&~i|f[b>>2]&i;i=g+4|0;c=(f[i>>2]|0)+h|0;e=e+(c>>>5<<2)|0;f[g>>2]=e;f[i>>2]=c&31;d=d-h|0;h=g;b=b+4|0}i=(d|0)/32|0;S0(e|0,b|0,i<<2|0)|0;e=d-(i<<5)|0;c=(f[h>>2]|0)+(i<<2)|0;f[h>>2]=c;d=c;if((e|0)>0){h=-1>>>(32-e|0);f[c>>2]=f[c>>2]&~h|f[b+(i<<2)>>2]&h;f[g+4>>2]=e}}else d=f[g>>2]|0;f[a>>2]=d;f[a+4>>2]=f[g+4>>2];return}function Rv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;i=b+12|0;if((c+1|0)==(d|0)){e=bga(i,c)|0;e=f[e>>2]|0}else{e=osa(f[a>>2]|0)|0;h=e+12|0;g=c;while(1){if(g>>>0>=d>>>0)break;j=bga(i,g)|0;AW(h,f[j>>2]|0);g=g+1|0}Do(e)}a:do if((gKa(f[b+16>>2]|0)|0)==(d|0))lU(i,c);else while(1){if(c>>>0>=d>>>0)break a;h=ewa(f[a>>2]|0)|0;j=bga(i,c)|0;f[j>>2]=h;c=c+1|0}while(0);Do(b);return e|0}function Sv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;l=u;u=u+16|0;k=l;f[k>>2]=b;g=f[a>>2]|0;i=a+4|0;c=f[i>>2]|0;d=XU(g,c,b)|0;e=d;h=c;do if((d|0)==(c|0))if((c|0)==(f[a+8>>2]|0)){XC(a,k);break}else{f[c>>2]=b;f[i>>2]=c+4;break}else if((f[d>>2]|0)>>>0>b>>>0){j=e-g>>2;EO(a,(h-g>>2)+1|0);c=f[a>>2]|0;h=c+(j<<2)|0;d=f[i>>2]|0;e=c+(d-c>>2<<2)+-4-h|0;g=e>>2;if(g){S0(d+(0-g<<2)|0,h|0,e|0)|0;c=f[a>>2]|0;b=f[k>>2]|0}f[c+(j<<2)>>2]=b}while(0);u=l;return}function Tv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+8|0;g=h+4|0;d=h;f[d>>2]=f[b>>2];f[c>>2]=f[d>>2];c=Bo(a,c)|0;f[g>>2]=c;d=a+4|0;e=f[d>>2]|0;if((e|0)==(f[a+8>>2]|0))XC(a,g);else{f[e>>2]=c;f[d>>2]=(f[d>>2]|0)+4}c=NK(a+12|0,b)|0;d=c+4|0;e=f[d>>2]|0;if((e|0)==(f[c+8>>2]|0))XC(c,g);else{f[e>>2]=f[g>>2];f[d>>2]=(f[d>>2]|0)+4}a=CM(a+24|0,g)|0;f[a>>2]=f[b>>2];u=h;return f[g>>2]|0}function Uv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;g=h+8|0;e=h;sQ(a,f[b+24>>2]|0)|0;c=b+8|0;if(!(gKa(f[b+12>>2]|0)|0))c3(f[a>>2]|0,41)|0;else{zea(a);Bwa(g,c);iua(e,c);d=g+4|0;c=f[e>>2]|0;b=f[e+4>>2]|0;while(1){if(!(Cpa(f[g>>2]|0,f[d>>2]|0,c,b)|0))break;e=ppa(g)|0;kF(a,f[e>>2]|0);bva(g)}x_(a)}u=h;return}function Vv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;e=aCa(c)|0;a:do if(b){g=b+-1|0;h=(g&b|0)==0;if(!h)if(e>>>0<b>>>0)i=e;else i=(e>>>0)%(b>>>0)|0;else i=g&e;a=f[a+(i<<2)>>2]|0;if(a)while(1){a=f[a>>2]|0;if(!a){a=0;break a}d=f[a+4>>2]|0;if((d|0)==(e|0))if(Eza(f[a+8>>2]|0,c)|0)break;else continue;if(!h){if(d>>>0>=b>>>0)d=(d>>>0)%(b>>>0)|0}else d=d&g;if((d|0)!=(i|0)){a=0;break}}else a=0}else a=0;while(0);return a|0}function Wv(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,39274,0)|0;Vea(I3(f[a>>2]|0,f[b>>2]|0)|0,72080)|0;switch(f[b+8>>2]|0){case 0:{Vea(f[a>>2]|0,39282)|0;break}case 1:{Vea(f[a>>2]|0,39287)|0;break}case 2:{Vea(f[a>>2]|0,64085)|0;break}case 3:{Vea(f[a>>2]|0,39293)|0;break}default:Ka()}c3(f[a>>2]|0,32)|0;Vea(sQ(a,f[b+4>>2]|0)|0,39300)|0;return}function Xv(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){FQ(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function Yv(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;e=u;u=u+16|0;g=e;b=c2()|0;f[a+64>>2]=b;f[g>>2]=b;c=a+44|0;d=f[c>>2]|0;do if(d>>>0<(f[a+48>>2]|0)>>>0){f[g>>2]=0;f[d>>2]=b;f[c>>2]=d+4;f[g>>2]=0}else{y=0;ja(1946,a+40|0,g|0);d=y;y=0;if(!(d&1)){a=f[g>>2]|0;f[g>>2]=0;if(!a)break;Kda(a);$Ja(a);break}a=Pa()|0;b=f[g>>2]|0;f[g>>2]=0;if(b|0){Kda(b);$Ja(b)}$a(a|0)}while(0);u=e;return}function Zv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+64|0;e=h;g=a+52|0;c=f[a+48>>2]|0;a:while(1){if((c|0)==(g|0))break;f[(f[c+16>>2]|0)+8>>2]=f[c+20>>2];d=f[c+4>>2]|0;if(!d)while(1){d=f[c+8>>2]|0;if((f[d>>2]|0)==(c|0)){c=d;continue a}else c=d}else c=d;while(1){d=f[c>>2]|0;if(!d)break;else c=d}}do if(f[a+56>>2]|0){oL(e);g=f[a+20>>2]|0;gKa(g)|0;y=0;ya(72,e+16|0,b|0,g|0);g=y;y=0;if(g&1){h=Pa()|0;dfa(e);$a(h|0)}else{dfa(e);break}}while(0);u=h;return}function _v(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=0;while(1){if((d|0)==3)break;f[a+(d<<2)>>2]=0;d=d+1|0}y=0;d=la(172,b|0)|0;e=y;y=0;a:do if(!(e&1)?(y=0,ja(82,a|0,d|0),e=y,y=0,!(e&1)):0){e=f[c+4>>2]|0;d=f[c>>2]|0;while(1){if((d|0)==(e|0))break;y=0;b=la(172,f[d+4>>2]|0)|0;c=y;y=0;if(c&1)break a;y=0;ja(82,a|0,b|0);c=y;y=0;if(c&1)break a;d=d+8|0}return}while(0);c=Pa()|0;zta(a);$a(c|0)}function $v(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;d=k+24|0;g=k+20|0;h=k;i=f[a>>2]|0;j=(f[a+4>>2]|0)-i>>3;e=j+1|0;if(e>>>0>536870911)SZ();else{l=(f[a+8>>2]|0)-i|0;i=l>>2;PE(h,l>>3>>>0<268435455?(i>>>0<e>>>0?e:i):536870911,j,a+8|0);j=h+8|0;i=f[j>>2]|0;f[g>>2]=f[b>>2];c=f[c>>2]|0;f[d>>2]=f[g>>2];qta(i,d,c);f[j>>2]=i+8;NE(a,h);x0(h);u=k;return}}function aw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(((h-c|0)/24|0)>>>0<b>>>0){e=f[a>>2]|0;c=(c-e|0)/24|0;d=c+b|0;if(d>>>0>178956970)SZ();else{e=(h-e|0)/24|0;h=e<<1;CE(g,e>>>0<89478485?(h>>>0<d>>>0?d:h):178956970,c,a+8|0);pQ(g,b);BE(a,g);HZ(g);break}}else _Q(a,b);while(0);u=i;return}function bw(a){a=a|0;var c=0,d=0;if((b[74128]|0)==0?twa(74128)|0:0){f[19613]=0;f[19614]=0;f[19615]=0;c=tHa(15608)|0;if(c>>>0>1073741807)JZ();do if(c>>>0>=2){a=c+4&-4;if(a>>>0<=1073741823){d=nV(a<<2)|0;f[19613]=d;f[19615]=a|-2147483648;f[19614]=c;a=d;break}a=zb(8)|0;y=0;ja(76,a|0,70649);d=y;y=0;if(d&1){d=Pa()|0;Oa(a|0);$a(d|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else{b[78463]=c;a=78452}while(0);awa(a,15608,c);FCa(a+(c<<2)|0,0);tb(395,78452,x|0)|0}return 78452}function cw(a){a=a|0;var c=0,d=0;if((b[74136]|0)==0?twa(74136)|0:0){f[19616]=0;f[19617]=0;f[19618]=0;c=tHa(15644)|0;if(c>>>0>1073741807)JZ();do if(c>>>0>=2){a=c+4&-4;if(a>>>0<=1073741823){d=nV(a<<2)|0;f[19616]=d;f[19618]=a|-2147483648;f[19617]=c;a=d;break}a=zb(8)|0;y=0;ja(76,a|0,70649);d=y;y=0;if(d&1){d=Pa()|0;Oa(a|0);$a(d|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else{b[78475]=c;a=78464}while(0);awa(a,15644,c);FCa(a+(c<<2)|0,0);tb(395,78464,x|0)|0}return 78464}function dw(a){a=a|0;var c=0,d=0;if((b[74144]|0)==0?twa(74144)|0:0){f[19619]=0;f[19620]=0;f[19621]=0;c=tHa(15692)|0;if(c>>>0>1073741807)JZ();do if(c>>>0>=2){a=c+4&-4;if(a>>>0<=1073741823){d=nV(a<<2)|0;f[19619]=d;f[19621]=a|-2147483648;f[19620]=c;a=d;break}a=zb(8)|0;y=0;ja(76,a|0,70649);d=y;y=0;if(d&1){d=Pa()|0;Oa(a|0);$a(d|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else{b[78487]=c;a=78476}while(0);awa(a,15692,c);FCa(a+(c<<2)|0,0);tb(395,78476,x|0)|0}return 78476}function ew(a){a=a|0;var c=0,d=0;if((b[74120]|0)==0?twa(74120)|0:0){f[19610]=0;f[19611]=0;f[19612]=0;c=tHa(15572)|0;if(c>>>0>1073741807)JZ();do if(c>>>0>=2){a=c+4&-4;if(a>>>0<=1073741823){d=nV(a<<2)|0;f[19610]=d;f[19612]=a|-2147483648;f[19611]=c;a=d;break}a=zb(8)|0;y=0;ja(76,a|0,70649);d=y;y=0;if(d&1){d=Pa()|0;Oa(a|0);$a(d|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else{b[78451]=c;a=78440}while(0);awa(a,15572,c);FCa(a+(c<<2)|0,0);tb(395,78440,x|0)|0}return 78440}function fw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i+8|0;g=i;h=a+24|0;d=a+28|0;a=f[h>>2]|0;a:while(1){if((a|0)==(d|0))break;f[g>>2]=f[a+16>>2];jz(e,h,g,g);c=f[a+4>>2]|0;if(!c)while(1){c=f[a+8>>2]|0;if((f[c>>2]|0)==(a|0)){a=c;continue a}else a=c}else a=c;while(1){c=f[a>>2]|0;if(!c)break;else a=c}}g=b+24|0;jz(e,h,g,g);u=i;return}function gw(){var a=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;c=lb(39413)|0;do if(c){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=uHa(c)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[e+11>>0]=d;a=e}else{h=d+16&-16;a=nV(h)|0;f[e>>2]=a;f[e+8>>2]=h|-2147483648;f[e+4>>2]=d}Pta(a,c,d)|0;SBa(a+d|0,0);y=0;a=la(175,e|0)|0;h=y;y=0;if(h&1){h=Pa()|0;zta(e);$a(h|0)}else{zta(e);break}}else a=0;while(0);u=g;return a|0}function hw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=a+16|0;i=f[j>>2]|0;g=f[a+12>>2]|0;e=i-g>>2;d=f[b>>2]|0;c=0;while(1){if(c>>>0>=e>>>0)break;if(bDa(f[f[g+(c<<2)>>2]>>2]|0,d)|0){h=4;break}c=c+1|0}a:do if((h|0)==4){e=g+(c<<2)|0;while(1){c=e+4|0;if((c|0)==(i|0))break;h=f[c>>2]|0;f[c>>2]=0;d=f[e>>2]|0;f[e>>2]=h;if(!d){e=c;continue}$Ja(d);e=c}while(1){c=f[j>>2]|0;if((c|0)==(e|0))break a;i=c+-4|0;f[j>>2]=i;c=f[i>>2]|0;f[i>>2]=0;if(!c)continue;$Ja(c)}}while(0);WU(a+184|0,b);return}function iw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=a+28|0;i=f[j>>2]|0;g=f[a+24>>2]|0;e=i-g>>2;d=f[b>>2]|0;c=0;while(1){if(c>>>0>=e>>>0)break;if(bDa(f[f[g+(c<<2)>>2]>>2]|0,d)|0){h=4;break}c=c+1|0}a:do if((h|0)==4){e=g+(c<<2)|0;while(1){c=e+4|0;if((c|0)==(i|0))break;h=f[c>>2]|0;f[c>>2]=0;d=f[e>>2]|0;f[e>>2]=h;if(!d){e=c;continue}$Ja(d);e=c}while(1){c=f[j>>2]|0;if((c|0)==(e|0))break a;i=c+-4|0;f[j>>2]=i;c=f[i>>2]|0;f[i>>2]=0;if(!c)continue;$Ja(c)}}while(0);WU(a+196|0,b);return}function jw(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Ay(c,h,d)|0;d=f[g>>2]|0;if(!d){PO(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function kw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=a+16|0;JJ(d,843,b);e=YAa(f[b>>2]|0)|0;if(e){c=e+8|0;if((f[(f[c>>2]|0)+4>>2]|0)!=5){JJ(d,844,b);a=e+16|0;if(f[a>>2]|0){JJ(d,842,a);JJ(d,845,b)}JJ(d,842,e+12|0);JJ(d,846,b);JJ(d,842,c)}}else Zd(a,b);return}function lw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i+12|0;h=i+4|0;e=i+8|0;g=i;f[h>>2]=c;VBa(e,a);if(!b)cJa(g);else dCa(g,b);c=f[h>>2]|0;f[d>>2]=f[g>>2];d=Gaa(e,d,c)|0;if(f[18711]|0){g=qN(d)|0;Vea(vj(Vea(76684,20007)|0,g)|0,20149)|0;yY(b);b=Vea(76684,20179)|0;h=EN(74808,h)|0;Vea(vj(b,f[h>>2]|0)|0,20144)|0}u=i;return d|0}function mw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/12|0;g=e+1|0;if(g>>>0>357913941)SZ();else{i=((f[a+8>>2]|0)-d|0)/12|0;d=i<<1;oE(c,i>>>0<178956970?(d>>>0<g>>>0?g:d):357913941,e,a+8|0);g=c+8|0;e=f[g>>2]|0;uS(e,b);f[g>>2]=e+12;jD(a,c);OP(c);u=h;return}}function nw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;g=h;c=f[a>>2]|0;d=(f[a+4>>2]|0)-c>>4;e=d+1|0;if(e>>>0>268435455)SZ();i=(f[a+8>>2]|0)-c|0;c=i>>3;TE(g,i>>4>>>0<134217727?(c>>>0<e>>>0?e:c):268435455,d,a+8|0);c=g+8|0;d=f[c>>2]|0;y=0;ja(66,d|0,b|0);b=y;y=0;if(b&1){i=Pa()|0;oZ(g);$a(i|0)}else{f[c>>2]=d+16;wE(a,g);oZ(g);u=h;return}}function ow(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56412)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);c=c+8|0;if(f[c>>2]|0)Ql(a,c);Zq(f[a+4>>2]|0,15)|0;u=i;return}function pw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=kaa(f[b>>2]|0,0)|0;e=f[a+16>>2]|0;h=g+12|0;if(e|0)AW(h,e);c=c+100|0;if(d)AW(h,SM(b,f[c>>2]|0)|0);a:do switch(f[a+4>>2]|0){case 1:{AW(h,ZX(b,f[c>>2]|0)|0);break}case 2:{c=f[a>>2]|0;if(!c)Na(33778,33266,117,33287);else{AW(h,AX(b,f[c+4>>2]|0)|0);break a}break}default:{}}while(0);Do(g);return g|0}function qw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;e=f[b>>2]|0;i=f[a>>2]|0;j=Iwa(e,i)|0;g=f[c>>2]|0;d=Iwa(g,e)|0;h=i;do if(j){if(d){f[a>>2]=g;f[c>>2]=h;d=1;break}f[a>>2]=e;f[b>>2]=h;d=f[c>>2]|0;if(Iwa(d,i)|0){f[b>>2]=d;f[c>>2]=h;d=2}else d=1}else if(d){f[b>>2]=g;f[c>>2]=e;d=f[b>>2]|0;e=f[a>>2]|0;if(Iwa(d,e)|0){f[a>>2]=d;f[b>>2]=e;d=2}else d=1}else d=0;while(0);return d|0}function rw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0;i=u;u=u+16|0;g=i;f[g>>2]=c;f[g+4>>2]=d;f[g+8>>2]=e;while(1){if((a|0)==(b|0))break;if(ZV(g,a)|0){c=a;h=5;break}a=a+12|0}a:do if((h|0)==5)while(1){do{c=c+12|0;if((c|0)==(b|0)){b=a;break a}}while(ZV(g,c)|0);f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];a=a+12|0;h=5}while(0);u=i;return b|0}function sw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;c=i+12|0;g=i+4|0;d=i+8|0;e=i;f[g>>2]=b;h=b;if(!(f[b+12>>2]|0)){f[e>>2]=f[b+8>>2];j=f[a+24>>2]|0;b=f[a+28>>2]|0;f[c>>2]=f[e>>2];e=xAa(jx(j,b,c)|0)|0;f[d>>2]=e;do if(e|0){c=EL(a+36|0,d)|0;a=c+4|0;b=f[a>>2]|0;if((b|0)==(f[c+8>>2]|0)){XC(c,g);break}else{f[b>>2]=h;f[a>>2]=(f[a>>2]|0)+4;break}}while(0)}u=i;return}function tw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,i=0,j=0,k=0,l=0;k=u;u=u+32|0;c=k+24|0;d=k+20|0;e=k;g=f[a>>2]|0;i=(f[a+4>>2]|0)-g>>3;j=i+1|0;if(j>>>0>536870911)SZ();else{l=(f[a+8>>2]|0)-g|0;g=l>>2;PE(e,l>>3>>>0<268435455?(g>>>0<j>>>0?j:g):536870911,i,a+8|0);j=e+8|0;i=f[j>>2]|0;f[d>>2]=f[18732];g=h[b>>0]|0;f[c>>2]=f[d>>2];qta(i,c,g);f[j>>2]=i+8;NE(a,e);x0(e);u=k;return}}function uw(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+-16+16|0;c=f[b+52>>2]|0;a=f[b+48>>2]|0;while(1){if((a|0)==(c|0))break;e5(d,f[a>>2]|0);a=a+4|0}c=f[b+40>>2]|0;a=f[b+36>>2]|0;while(1){if((a|0)==(c|0))break;CR(d,f[a>>2]|0);a=a+4|0}hY(d,f[b+76>>2]|0,f[b+80>>2]|0);hY(d,f[b+100>>2]|0,f[b+104>>2]|0);return}function vw(){var a=0,b=0,c=0,d=0,e=0,g=0,h=0,i=0;e=u;u=u+48|0;h=e+32|0;c=e+24|0;i=e+16|0;g=e;e=e+36|0;a=sda()|0;if(a|0?(d=f[a>>2]|0,d|0):0){a=d+48|0;b=f[a>>2]|0;a=f[a+4>>2]|0;if(!((b&-256|0)==1126902528&(a|0)==1129074247)){f[c>>2]=71282;qra(71232,c)}if((b|0)==1126902529&(a|0)==1129074247)a=f[d+44>>2]|0;else a=d+80|0;f[e>>2]=a;d=f[d>>2]|0;a=f[d+4>>2]|0;if(uD(5688,d,e)|0){i=f[e>>2]|0;i=Ob[f[(f[i>>2]|0)+8>>2]&255](i)|0;f[g>>2]=71282;f[g+4>>2]=a;f[g+8>>2]=i;qra(71146,g)}else{f[i>>2]=71282;f[i+4>>2]=a;qra(71191,i)}}qra(71270,h)}function ww(a){a=a|0;var b=0,c=0;a=a+4|0;b=f[a>>2]|0;b=b+(f[(f[b>>2]|0)+-12>>2]|0)|0;do if(((f[b+24>>2]|0?(f[b+16>>2]|0)==0:0)?f[b+4>>2]&8192|0:0)?!(Ia()|0):0){b=f[a>>2]|0;b=f[b+(f[(f[b>>2]|0)+-12>>2]|0)+24>>2]|0;y=0;b=la(f[(f[b>>2]|0)+24>>2]|0,b|0)|0;c=y;y=0;if(!(c&1)){if((b|0)!=-1)break;c=f[a>>2]|0;c=c+(f[(f[c>>2]|0)+-12>>2]|0)|0;y=0;ja(81,c|0,f[c+16>>2]|1|0);c=y;y=0;if(!(c&1))break}c=ab(0)|0;Ya(c|0)|0;y=0;za(5);c=y;y=0;if(c&1){c=ab(0)|0;lDa(c)}}while(0);return}function xw(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;i=f[a+72>>2]|0;e=f[a+68>>2]|0;while(1){if((e|0)==(i|0))break;k=f[e>>2]|0;j=k+48|0;k=k+52|0;d=1;while(1){b=f[j>>2]|0;if(d>>>0>=(f[k>>2]|0)-b>>2>>>0)break;b=f[b+(d<<2)>>2]|0;a:do if((f[b+40>>2]|0)-(f[b+36>>2]|0)>>2>>>0<=1){c=f[b+28>>2]|0;b=f[b+24>>2]|0;while(1){if((b|0)==(c|0))break a;if((f[b>>2]|0)==1?(g=Era(f[f[b+8>>2]>>2]|0)|0,h=gN(f[g+12>>2]|0)|0,h|0):0)zP(a,f[g+8>>2]|0,f[h+8>>2]|0);b=b+16|0}}while(0);d=d+1|0}e=e+4|0}return}function yw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+96|0;e=h+92|0;g=h;d=f[b>>2]|0;f[e>>2]=d;Ot(g,uya(f[a+40>>2]|0)|0,0);if(!(Qoa(g,f[d>>2]|0)|0?(y=0,ja(488,a|0,g|0),b=y,y=0,b&1):0))c=4;do if((c|0)==4){b=a+140|0;c=f[b>>2]|0;if((c|0)==(f[a+144>>2]|0)){y=0;ja(497,a+136|0,e|0);e=y;y=0;if(e&1)break}else{f[c>>2]=d;f[b>>2]=(f[b>>2]|0)+4}hT(g);u=h;return}while(0);h=Pa()|0;hT(g);$a(h|0)}function zw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0;d=f[a>>2]|0;e=a+4|0;g=b+4|0;c=f[e>>2]|0;while(1){if((c|0)==(d|0))break;k=f[g>>2]|0;i=k+-12|0;h=c+-12|0;f[i>>2]=0;j=k+-8|0;f[j>>2]=0;f[k+-4>>2]=0;f[i>>2]=f[h>>2];i=c+-8|0;f[j>>2]=f[i>>2];j=c+-4|0;f[k+-4>>2]=f[j>>2];f[j>>2]=0;f[i>>2]=0;f[h>>2]=0;f[g>>2]=(f[g>>2]|0)+-12;c=h}i=f[a>>2]|0;f[a>>2]=f[g>>2];f[g>>2]=i;i=b+8|0;k=f[e>>2]|0;f[e>>2]=f[i>>2];f[i>>2]=k;i=a+8|0;k=b+12|0;j=f[i>>2]|0;f[i>>2]=f[k>>2];f[k>>2]=j;f[b>>2]=f[g>>2];return}function Aw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(S7(c,f[a>>2]|0)|0){g=a;d=5;break}a=a+4|0}a:do if((d|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=g;break a}d=f[a>>2]|0}while(S7(c,d)|0);f[a>>2]=0;e=f[g>>2]|0;f[g>>2]=d;if(e|0){XV(e);$Ja(e)}g=g+4|0;d=5}while(0);return b|0}function Bw(a,c,d,e,g,h,i,j){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0;if((-18-c|0)>>>0<d>>>0)JZ();if((b[a+11>>0]|0)<0)m=f[a>>2]|0;else m=a;if(c>>>0<2147483623){k=d+c|0;l=c<<1;k=k>>>0<l>>>0?l:k;k=k>>>0<11?11:k+16&-16}else k=-17;l=nV(k)|0;if(g|0)Pta(l,m,g)|0;if(i|0)Pta(l+g|0,j,i)|0;d=e-h|0;e=d-g|0;if(e|0)Pta(l+g+i|0,m+g+h|0,e)|0;if((c|0)!=10)$Ja(m);f[a>>2]=l;f[a+8>>2]=k|-2147483648;i=d+i|0;f[a+4>>2]=i;SBa(l+i|0,0);return}function Cw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(eP(c,a)|0){e=a;d=5;break}a=a+4|0}a:do if((d|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=e;break a}}while(eP(c,a)|0);g=f[a>>2]|0;f[a>>2]=0;d=f[e>>2]|0;f[e>>2]=g;if(d|0){XV(d);$Ja(d)}e=e+4|0;d=5}while(0);return b|0}function Dw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(uQ(c,a)|0){e=a;d=5;break}a=a+4|0}a:do if((d|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=e;break a}}while(uQ(c,a)|0);g=f[a>>2]|0;f[a>>2]=0;d=f[e>>2]|0;f[e>>2]=g;if(d|0){Nza(d);$Ja(d)}e=e+4|0;d=5}while(0);return b|0}function Ew(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;h=u;u=u+32|0;d=h;e=f[18634]|0;b=f[18633]|0;do if(e-b>>2>>>0<a>>>0){g=f[18632]|0;c=b-g>>2;b=c+a|0;if(b>>>0>1073741823)SZ();else{e=e-g|0;g=e>>1;BN(d,e>>2>>>0<536870911?(g>>>0<b>>>0?b:g):1073741823,c);m2(d,a);BG(d);bP(d);break}}else s8(a);while(0);u=h;return}function Fw(a,b){a=a|0;b=b|0;switch(b|0){case 0:{a=Nq(a,f[18903]|0,MBa(0.0)|0)|0;break}case 1:{a=uL(f[18905]|0,a)|0;break}case 2:{a=DI(f[18914]|0,a)|0;break}case 3:{a=DI(f[18833]|0,a)|0;break}case 4:{a=DI(f[18832]|0,a)|0;break}case 5:{a=DI(f[18836]|0,a)|0;break}case 6:{a=DI(f[18835]|0,a)|0;break}case 7:{a=DI(f[18834]|0,a)|0;break}default:{}}return a|0}function Gw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+96|0;e=h+92|0;g=h;d=f[b>>2]|0;f[e>>2]=d;Ot(g,uya(f[a+40>>2]|0)|0,0);if(!(Qoa(g,f[d>>2]|0)|0?(y=0,ja(1436,a|0,g|0),b=y,y=0,b&1):0))c=4;do if((c|0)==4){b=a+68|0;c=f[b>>2]|0;if((c|0)==(f[a+72>>2]|0)){y=0;ja(497,a+64|0,e|0);e=y;y=0;if(e&1)break}else{f[c>>2]=d;f[b>>2]=(f[b>>2]|0)+4}hT(g);u=h;return}while(0);h=Pa()|0;hT(g);$a(h|0)}function Hw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;Xwa(a);f[a+24>>2]=b;e=a+32|0;gua(e);g=a+44|0;f[g>>2]=0;f[a+48>>2]=0;f[a+52>>2]=0;c=f[b+40>>2]|0;d=a+28|0;b=f[b+36>>2]|0;while(1){if((b|0)==(c|0)){b=3;break}f[d>>2]=f[b>>2];r5(e);y=0;ja(990,a|0,(f[b>>2]|0)+36|0);h=y;y=0;if(h&1){b=6;break}b=b+4|0}if((b|0)==3)return;else if((b|0)==6){h=Pa()|0;E4(g);Cta(e);Rua(a);$a(h|0)}}function Iw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0;d=a+8|0;vs(a,a+4|0,d,c)|0;i=c+4|0;h=a+12|0;while(1){if((h|0)==(b|0))break;j=f[h>>2]|0;g=f[d>>2]|0;if(DS(f[f[c>>2]>>2]|0,f[i>>2]|0,j,g)|0){e=h;while(1){f[e>>2]=g;if((d|0)==(a|0)){d=a;break}e=d+-4|0;g=f[e>>2]|0;if(!(DS(f[f[c>>2]>>2]|0,f[i>>2]|0,j,g)|0))break;else{k=d;d=e;e=k}}f[d>>2]=j}d=h;h=h+4|0}return}function Jw(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+16>>2]|0;c=f[b+12>>2]|0;while(1){if((c|0)==(d|0))break;TJ(a,f[c>>2]|0);c=c+4|0}d=f[b+52>>2]|0;c=f[b+48>>2]|0;while(1){if((c|0)==(d|0))break;aka(a,f[c>>2]|0);c=c+4|0}d=f[b+40>>2]|0;c=f[b+36>>2]|0;while(1){if((c|0)==(d|0))break;NT(a,f[c>>2]|0);c=c+4|0}H5(a,f[b+76>>2]|0,f[b+80>>2]|0);H5(a,f[b+100>>2]|0,f[b+104>>2]|0);return}function Kw(a,b){a=a|0;b=b|0;var c=0,d=0;c=YAa(f[b>>2]|0)|0;d=a+16|0;if(!c)je(a,b);else{a=c+16|0;if(f[a>>2]|0){JJ(d,416,b);JJ(d,413,a)}JJ(d,417,b);JJ(d,413,c+12|0);JJ(d,418,b);JJ(d,413,c+8|0)}if(nJa(f[f[b>>2]>>2]|0)|0)JJ(d,419,b);return}function Lw(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;h=c+11|0;g=b[h>>0]|0;if(g<<24>>24<0)e=f[c+4>>2]|0;else e=g&255;while(1){if(g<<24>>24<0)g=f[c>>2]|0;else g=c;f[i>>2]=d;g=uha(g,e+1|0,70762,i)|0;if((g|0)>-1)if(g>>>0>e>>>0)e=g;else break;else e=e<<1|1;YI(c,e);g=b[h>>0]|0}YI(c,g);f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];e=0;while(1){if((e|0)==3)break;f[c+(e<<2)>>2]=0;e=e+1|0}u=j;return}function Mw(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;i=j;h=c+11|0;g=b[h>>0]|0;if(g<<24>>24<0)e=f[c+4>>2]|0;else e=g&255;while(1){if(g<<24>>24<0)g=f[c>>2]|0;else g=c;f[i>>2]=d;g=uha(g,e+1|0,70759,i)|0;if((g|0)>-1)if(g>>>0>e>>>0)e=g;else break;else e=e<<1|1;YI(c,e);g=b[h>>0]|0}YI(c,g);f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];e=0;while(1){if((e|0)==3)break;f[c+(e<<2)>>2]=0;e=e+1|0}u=j;return}function Nw(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;g=e-d>>2;if(g>>>0>1073741807)JZ();do if(g>>>0>=2){c=g+4&-4;if(c>>>0<=1073741823){h=nV(c<<2)|0;f[a>>2]=h;f[a+8>>2]=c|-2147483648;f[a+4>>2]=g;a=h;break}a=zb(8)|0;y=0;ja(76,a|0,70649);h=y;y=0;if(h&1){h=Pa()|0;Oa(a|0);$a(h|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}else b[a+8+3>>0]=g;while(0);while(1){if((d|0)==(e|0))break;FCa(a,f[d>>2]|0);d=d+4|0;a=a+4|0}FCa(a,0);return}function Ow(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;e=h;f[e>>2]=c;g=ota(a+144|0)|0;if(!(f[18711]|0)){d=g;a=c}else{a=qN(g)|0;a=Vea(vj(Vea(vj(Vea(76684,20507)|0,a)|0,20590)|0,b)|0,20179)|0;d=EN(74808,e)|0;Vea(vj(a,f[d>>2]|0)|0,20144)|0;d=g;a=f[e>>2]|0}f[g+8>>2]=b;f[g+12>>2]=a;_la(g,1);Faa(g);u=h;return d|0}function Pw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;e=h;f[e>>2]=c;g=ota(a+144|0)|0;if(!(f[18711]|0)){d=g;a=c}else{a=qN(g)|0;a=Vea(vj(Vea(vj(Vea(76684,20507)|0,a)|0,20556)|0,b)|0,20179)|0;d=EN(74808,e)|0;Vea(vj(a,f[d>>2]|0)|0,20144)|0;d=g;a=f[e>>2]|0}f[g+8>>2]=b;f[g+12>>2]=a;_la(g,0);Faa(g);u=h;return d|0}function Qw(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;c=Jy(a,f[18965]|0)|0;if(!((c|0)!=75860?(g=c+16|0,d=b[g+11>>0]|0,h=d<<24>>24<0,d=h?f[c+20>>2]|0:d&255,e=b[a+11>>0]|0,i=e<<24>>24<0,e=i?f[a+4>>2]|0:e&255,a=ara(i?f[a>>2]|0:a,h?f[g>>2]|0:g,d>>>0<e>>>0?d:e)|0,(((a|0)==0?(e>>>0<d>>>0?-2147483648:0):a)|0)>=0):0))c=75860;return c|0}function Rw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+32|0;c=g+16|0;d=g+8|0;e=g;do if(f[a+8>>2]<<5>>>0<b>>>0){f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(1721,c|0,b|0);b=y;y=0;if(b&1){g=Pa()|0;HCa(f[c>>2]|0);$a(g|0)}else{h=f[a>>2]|0;f[d>>2]=h;f[d+4>>2]=0;b=f[a+4>>2]|0;f[e>>2]=h+(b>>>5<<2);f[e+4>>2]=b&31;ft(c,d,e);LV(a,c);HCa(f[c>>2]|0);break}}while(0);u=g;return}function Sw(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;e=g;f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;d=uHa(70753)|0;if(d>>>0>4294967279)JZ();if(d>>>0<11){b[e+11>>0]=d;c=e}else{h=d+16&-16;c=nV(h)|0;f[e>>2]=c;f[e+8>>2]=h|-2147483648;f[e+4>>2]=d}Pta(c,70753,d)|0;SBa(c+d|0,0);y=0;c=ua(164,e|0,a|0)|0;a=J;h=y;y=0;if(h&1){h=Pa()|0;zta(e);$a(h|0)}else{zta(e);J=a;u=g;return c|0}return 0}function Tw(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;g=f[b+68>>2]|0;if(!g){a=zb(4)|0;fJa(a);ub(a|0,5864,326)}g=Ob[f[(f[g>>2]|0)+24>>2]&255](g)|0;h=b+64|0;if((((f[h>>2]|0)!=0?!(((c|0)!=0|(d|0)!=0)&(g|0)<1):0)?e>>>0<3&(Ob[f[(f[b>>2]|0)+24>>2]&255](b)|0)==0:0)?(i=f[h>>2]|0,d=oea(g|0,((g|0)<0)<<31>>31|0,c|0,d|0)|0,(KBa(i,(g|0)>0?d:0,e)|0)==0):0){c=FJa(f[h>>2]|0)|0;h=b+72|0;g=f[h>>2]|0;h=f[h+4>>2]|0;b=c;c=((c|0)<0)<<31>>31}else{g=0;h=0;b=-1;c=-1}i=a;f[i>>2]=g;f[i+4>>2]=h;i=a+8|0;f[i>>2]=b;f[i+4>>2]=c;return}function Uw(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;h=u;u=u+16|0;j=h+4|0;i=h;g=fwa(rr(lj(c,0)|0)|0,46)|0;f[j>>2]=e?g+13|0:g+6|0;g=bua(f[a+4>>2]|0)|0;b[g+20>>0]=e&1;f[g+32>>2]=d;e=Ei(j,(y9(d)|0)&255)|0;b[g+8>>0]=e;$la(i,e&255,0);e=wf(c,g+12|0,g+16|0,f[i>>2]|0)|0;d=sra(a,lj(c,e)|0)|0;f[g+24>>2]=d;e=sra(a,lj(c,e+1|0)|0)|0;f[g+28>>2]=e;r4(g);u=h;return g|0}function Vw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=((f[a+4>>2]|0)-d|0)/24|0;g=e+1|0;if(g>>>0>178956970)SZ();else{i=((f[a+8>>2]|0)-d|0)/24|0;d=i<<1;TO(c,i>>>0<89478485?(d>>>0<g>>>0?g:d):178956970,e,a+12|0);g=c+8|0;e=f[g>>2]|0;ZL(e,b);f[g>>2]=e+24;qD(a,c);XL(c);u=h;return}}function Ww(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;while(1){if((a|0)==(b|0))break;if(VD(c,f[a>>2]|0)|0){g=a;d=5;break}a=a+4|0}a:do if((d|0)==5)while(1){do{a=a+4|0;if((a|0)==(b|0)){b=g;break a}d=f[a>>2]|0}while(VD(c,d)|0);f[a>>2]=0;e=f[g>>2]|0;f[g>>2]=d;if(e|0)$Ja(e);g=g+4|0;d=5}while(0);return b|0}function Xw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>3>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>3;d=c+b|0;if(d>>>0>536870911)SZ();else{e=h-e|0;h=e>>2;PE(g,e>>3>>>0<268435455?(h>>>0<d>>>0?d:h):536870911,c,a+8|0);GZ(g,b);NE(a,g);x0(g);break}}else U_(a,b);while(0);u=i;return}function Yw(a,c){a=a|0;c=c|0;var d=0,e=0;l$(a,24721);d=UAa(c,1)|0;d=f[d>>2]|0;c=0;while(1){if(c>>>0>=(yja(gKa(d)|0)|0)>>>0)break;do if(c|0)if(!(b[a>>0]|0)){gP(a,44);break}else{l$(a,72307);break}while(0);e=UAa(d,c)|0;e=UAa(f[e>>2]|0,0)|0;l$(a,voa(gKa(f[e>>2]|0)|0)|0);e=UAa(d,c)|0;if((yja(gKa(f[e>>2]|0)|0)|0)>>>0>1){zya(a);gP(a,61);zya(a);e=UAa(d,c)|0;e=UAa(f[e>>2]|0,1)|0;Cg(a,f[e>>2]|0)}c=c+1|0}return}function Zw(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;i=u;u=u+16|0;g=i;do if(b[a+12>>0]|0){h=Vea(76852,56364)|0;Axa(g,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[g>>2]|0,77556)|0;j=y;y=0;if(!(j&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,j=y,y=0,!(j&1)):0){pza(g);jn(h,e)|0;Yp(h)|0;break}j=Pa()|0;pza(g);$a(j|0)}while(0);Ql(a,c+8|0);Zq(f[a+4>>2]|0,26)|0;u=i;return}function _w(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;d=j+8|0;g=j+4|0;i=j;a:do if((b[a+26>>0]|0?(f[c+8>>2]|0)==0:0)?b[a+25>>0]|0:0){e=gKa(f[a+20>>2]|0)|0;f[d>>2]=f[c+4>>2];f[h>>2]=f[d>>2];e=vY(e,h)|0;d=f[e+4>>2]|0;f[g>>2]=f[e>>2];f[h>>2]=f[g>>2];Rj(a,d,h,63719);d=f[e+12>>2]|0;c=f[e+8>>2]|0;while(1){if((c|0)==(d|0))break a;g=f[c>>2]|0;f[i>>2]=f[e>>2];f[h>>2]=f[i>>2];Rj(a,g,h,63767);c=c+4|0}}while(0);u=j;return}function $w(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+32|0;c=e+12|0;d=e;f[d>>2]=f[b+16>>2];f[d+4>>2]=f[b+20>>2];f[d+8>>2]=f[b+24>>2];f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;y=0;ja(179,c|0,3);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}aZ(c,d,d+12|0);y=0;ya(99,a|0,c|0,f[b+4>>2]|0);g=y;y=0;if(g&1){g=Pa()|0;E4(c);$a(g|0)}else{E4(c);u=e;return}}function ax(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0;j=u;u=u+32|0;h=j;i=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(i-c>>2>>>0<b>>>0){g=f[a>>2]|0;c=c-g>>2;d=c+b|0;e=UDa()|0;if(e>>>0<d>>>0)SZ();else{g=i-g|0;i=g>>1;fF(h,g>>2>>>0<e>>>1>>>0?(i>>>0<d>>>0?d:i):e,c,a+8|0);Tia(h,b);jF(a,h);M1(h);break}}else uka(a,b);while(0);u=j;return}function bx(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;i=u;u=u+16|0;j=i+4|0;h=i;g=fwa(rr(lj(c,0)|0)|0,46)|0;f[j>>2]=e?g+12|0:g+5|0;g=nua(f[a+4>>2]|0)|0;b[g+20>>0]=e&1;f[g+4>>2]=d;e=Ei(j,(y9(d)|0)&255)|0;b[g+8>>0]=e;d=f[j>>2]|0;if(!(b[d>>0]|0))d=0;else d=(b[d+1>>0]|0)==115&1;b[g+9>>0]=d;$la(h,e&255,0);j=sra(a,lj(c,wf(c,g+12|0,g+16|0,f[h>>2]|0)|0)|0)|0;f[g+24>>2]=j;nwa(g);u=i;return g|0}function cx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0;h=u;u=u+32|0;e=h+16|0;g=h;b=cm(a,b,e,h+12|0,c)|0;if(!(f[b>>2]|0)){gR(g,a,d);lN(a,f[e>>2]|0,b,f[g>>2]|0)}u=h;return}function dx(a,c){a=a|0;c=c|0;var d=0;d=f[a+20>>2]|0;gKa(d)|0;if(!(b[d+114>>0]|0))HS(a,c);Wj(a,f[c+4>>2]|0,1,c,62353);Wj(a,f[(f[c+8>>2]|0)+4>>2]|0,1,c,62383);d=c+12|0;q1(a,f[(f[d>>2]|0)+4>>2]|0,c,62419);Wj(a,f[(f[d>>2]|0)+4>>2]|0,f[c+20>>2]|0,c,62456);Wj(a,f[(f[c+16>>2]|0)+4>>2]|0,2,c,62500);return}function ex(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+16|0;h=j+12|0;i=j;g=Or(c,h,d)|0;d=f[g>>2]|0;if(!d){gR(i,c,e);d=f[i>>2]|0;lN(c,f[h>>2]|0,g,d);g=1}else g=0;f[a>>2]=d;b[a+4>>0]=g;u=j;return}function fx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+32|0;c=h;d=f[a>>2]|0;e=(f[a+4>>2]|0)-d>>3;g=e+1|0;if(g>>>0>536870911)SZ();else{i=(f[a+8>>2]|0)-d|0;d=i>>2;PE(c,i>>3>>>0<268435455?(d>>>0<g>>>0?g:d):536870911,e,a+8|0);g=c+8|0;e=f[g>>2]|0;f[e>>2]=f[b>>2];d=b+4|0;f[e+4>>2]=f[d>>2];f[b>>2]=0;f[d>>2]=0;f[g>>2]=e+8;jA(a,c);IV(c);u=h;return}}function gx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;while(1){if((a|0)==(b|0))break;if(b6(f[d>>2]|0,f[a+4>>2]|0)|0){c=a;e=a;g=5;break}a=a+12|0}a:do if((g|0)==5)while(1){a=c;do{c=a;a=a+12|0;if((a|0)==(b|0)){b=e;break a}}while(b6(f[d>>2]|0,f[c+16>>2]|0)|0);f[e>>2]=f[a>>2];f[e+4>>2]=f[a+4>>2];f[e+8>>2]=f[a+8>>2];c=a;e=e+12|0;g=5}while(0);return b|0}function hx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;i=u;u=u+16|0;g=i;if((a|0)==(b|0)){f[c>>2]=4;a=0}else{h=f[2619]|0;f[2619]=0;gpa()|0;a=SAa(a,g,d)|0;d=J;e=f[2619]|0;if(!e)f[2619]=h;a:do if((f[g>>2]|0)==(b|0)){do if((e|0)==34){f[c>>2]=4;if((d|0)>0|(d|0)==0&a>>>0>0){a=2147483647;break a}}else{if((d|0)<-1|(d|0)==-1&a>>>0<2147483648){f[c>>2]=4;break}if((d|0)>0|(d|0)==0&a>>>0>2147483647){f[c>>2]=4;a=2147483647;break a}else break a}while(0);a=-2147483648}else{f[c>>2]=4;a=0}while(0)}u=i;return a|0}function ix(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0;h=u;u=u+16|0;c=h;do if(b[a+12>>0]|0){g=Vea(76852,59728)|0;Axa(c,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[c>>2]|0,77556)|0;i=y;y=0;if(!(i&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,i=y,y=0,!(i&1)):0){pza(c);jn(g,e)|0;Yp(g)|0;break}i=Pa()|0;pza(c);$a(i|0)}while(0);i=a+4|0;om(f[i>>2]|0,1836278016)|0;om(f[i>>2]|0,1)|0;u=h;return}function jx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==(b|0))Na(50449,64509,536,50475);e=f[c>>2]|0;d=b-a>>2;a:while(1){d=d+-1|0;c=f[a+(d<<2)>>2]|0;b=xAa(c)|0;do if(!b){b=IAa(c)|0;if(!b)if(hJa(f[c>>2]|0)|0)break;else{b=9;break a}else if(bDa(e,f[b+8>>2]|0)|0){b=11;break a}else break}else if(bDa(e,f[b+8>>2]|0)|0){b=11;break a}while(0);if(!d){c=0;b=11;break}}if((b|0)==9)Na(50491,64509,546,50475);else if((b|0)==11)return c|0;return 0}function kx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=b+36|0;c=f[g>>2]|0;d=f[c+4>>2]|0;e=b+4|0;if((d|0)!=5)Uj(a,f[e>>2]|0,d,c,63916)|0;c=a+64|0;b=f[c>>2]|0;if((b|0)!=5)Uj(a,f[e>>2]|0,b,f[g>>2]|0,63967)|0;if(!(Po(a,(f[a+60>>2]|0)==0,f[g>>2]|0,64019)|0)){g=Vea(76852,64074)|0;Vea(K2(g,f[(f[a+52>>2]|0)+16>>2]|0)|0,61397)|0}f[c>>2]=5;r5(a+68|0);return}function lx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;g=u;u=u+16|0;d=g;e=g+4|0;f[d>>2]=c;a=fta(a+144|0)|0;if(f[18711]|0){h=qN(a)|0;h=Vea(Vea(Vea(vj(Vea(76684,20507)|0,h)|0,20664)|0,b)|0,20226)|0;c=EN(74808,d)|0;Vea(vj(h,f[c>>2]|0)|0,20144)|0}dCa(e,b);f[a+8>>2]=f[e>>2];f[a+12>>2]=f[d>>2];Sva(a);u=g;return a|0}function mx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;i=u;u=u+32|0;g=i;h=f[a+8>>2]|0;c=f[a+4>>2]|0;do if(h-c>>4>>>0<b>>>0){e=f[a>>2]|0;c=c-e>>4;d=c+b|0;if(d>>>0>268435455)SZ();else{e=h-e|0;h=e>>3;TE(g,e>>4>>>0<134217727?(h>>>0<d>>>0?d:h):268435455,c,a+8|0);a2(g,b);QE(a,g);z0(g);break}}else _2(a,b);while(0);u=i;return}function nx(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0;h=a+8|0;j=a+96|0;f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;f[h+12>>2]=0;f[h+16>>2]=0;f[h+20>>2]=0;h=a+32|0;if(b[j>>0]|0)ZJa(f[h>>2]|0);l=a+97|0;k=a+56|0;if(b[l>>0]|0)ZJa(f[k>>2]|0);e=a+52|0;f[e>>2]=d;i=(b[a+98>>0]|0)!=0;if(d>>>0>8){if((c|0)!=0&i){e=0;g=c}else{e=1;g=YJa(d)|0}f[h>>2]=g}else{f[h>>2]=a+44;f[e>>2]=8;e=0}b[j>>0]=e;if(!i){e=(d|0)>8?d:8;f[a+60>>2]=e;if((c|0)!=0&e>>>0>7)g=0;else{g=1;c=YJa(e)|0}}else{f[a+60>>2]=0;g=0;c=0}f[k>>2]=c;b[l>>0]=g;return a|0}function ox(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+96|0;d=e;c=f[b>>2]|0;if(eI(a,c)|0)Xf(a,b,c);Ot(d,uya(f[a+40>>2]|0)|0,0);y=0;b=ua(78,d|0,c|0)|0;c=y;y=0;do if(!(c&1)){if(b?(y=0,ja(1436,a|0,d|0),c=y,y=0,c&1):0)break;c=a+68|0;a=f[c>>2]|0;b=0;while(1){if((b|0)==-1)break;g=b+-1|0;f[c>>2]=a+(g<<2);b=g}hT(d);u=e;return}while(0);g=Pa()|0;hT(d);$a(g|0)}function px(a){a=a|0;var c=0,d=0,e=0,g=0;e=nV(24)|0;gza(e);EO(e,f[(f[a>>2]|0)+136>>2]|0);g=f[a>>2]|0;d=g+136|0;c=0;while(1){if(c>>>0>=(f[d>>2]|0)>>>0)break;f[(f[e>>2]|0)+(c<<2)>>2]=c;c=c+1|0}c=a+2504|0;if(!(b[c>>0]|0)){d=f[e>>2]|0;g=d+((Rya(gKa(f[g+32>>2]|0)|0)|0)<<2)|0;Fu(g,f[e+4>>2]|0,a+4|0)}else b[c>>0]=0;Eo(a,e);return e|0}function qx(a,c){a=a|0;c=c|0;var d=0;Aaa(f[a>>2]|0,39367,0)|0;c3(sQ(a,f[c>>2]|0)|0,32)|0;d=f[a>>2]|0;if(!(b[c+12>>0]|0))c3(Vea(d,F$(f[c+4>>2]|0)|0)|0,32)|0;else{d=Vea(d,39375)|0;Vea(Vea(d,F$(f[c+4>>2]|0)|0)|0,72371)|0}Mm(a,f[c+8>>2]|0);c3(f[a>>2]|0,41)|0;return}
function CH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=1545;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,1545,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function DH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;g=u;u=u+16|0;e=g;f[e>>2]=b;if(_qa(a,b)|0)Na(34024,33266,143,34067);b=nV(20)|0;y=0;ya(85,b|0,c|0,d|0);d=y;y=0;if(d&1){g=Pa()|0;$Ja(b);$a(g|0)}else{e=Hy(a,e)|0;f[e>>2]=b;u=g;return}}function EH(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;g=u;u=u+16|0;c=g;d=(f[a>>2]|0)+4|0;e=f[d>>2]|0;f[c>>2]=f[e+-4>>2];b=0;while(1){if((b|0)==-1)break;h=b+-1|0;f[d>>2]=e+(h<<2);b=h}a=(NK(f[a+4>>2]|0,c)|0)+4|0;c=f[a>>2]|0;b=0;while(1){if((b|0)==-1)break;h=b+-1|0;f[a>>2]=c+(h<<2);b=h}u=g;return}function FH(a,b){a=a|0;b=b|0;var c=0,d=0;Vxa(a);c=f[18632]|0;do if((f[18633]|0)-c>>2>>>0<=b>>>0){y=0;ia(403,b+1|0);d=y;y=0;if(!(d&1)){c=f[18632]|0;break}c=Pa()|0;if(a|0)cxa(a);$a(c|0)}while(0);d=f[c+(b<<2)>>2]|0;if(d){aga(d)|0;c=f[18632]|0}f[c+(b<<2)>>2]=a;return}function GH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=148;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,148,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function HH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;b=a+48|0;c=a+64|0;d=f[c>>2]|0;if(d>>>0<(f[a+68>>2]|0)>>>0){f[d>>2]=0;g=d+4|0;f[g>>2]=0;f[d+8>>2]=0;f[d>>2]=f[b>>2];e=a+52|0;f[g>>2]=f[e>>2];a=a+56|0;f[d+8>>2]=f[a>>2];f[a>>2]=0;f[e>>2]=0;f[b>>2]=0;f[c>>2]=(f[c>>2]|0)+12}else ju(a+60|0,b);return}function IH(a){a=a|0;if(!a)return;else{IH(f[a>>2]|0);IH(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function JH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;js(c,a,b,e);u=d;return (f[c>>2]|0)+28|0}function KH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=f[a+4>>2]|0;if(!c){d=a;c=f[a>>2]|0}else{g=32-c|0;d=g>>>0>b>>>0?b:g;e=f[a>>2]|0;f[e>>2]=f[e>>2]&~(-1>>>(g-d|0)&-1<<c);c=e+4|0;f[a>>2]=c;b=b-d|0;d=a}a=b>>>5;Kz(c|0,0,a<<2|0)|0;b=b-(a<<5)|0;if(b|0){g=(f[d>>2]|0)+(a<<2)|0;f[d>>2]=g;f[g>>2]=f[g>>2]&~(-1>>>(32-b|0))}return}function LH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=241;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,241,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function MH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=413;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,413,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function NH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Jsa(f[a+4>>2]|0)|0;f[d+4>>2]=1;f[d+20>>2]=c;c=sra(a,lj(b,1)|0)|0;f[d+8>>2]=c;c=sra(a,lj(b,2)|0)|0;f[d+12>>2]=c;c=sra(a,lj(b,3)|0)|0;f[d+16>>2]=c;pda(d);return d|0}function OH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;h=u;u=u+16|0;c=h+4|0;d=h;f[c>>2]=356;f[d>>2]=b;do if(f[b>>2]|0){e=a+8|0;g=f[e>>2]|0;if(g>>>0<(f[a+12>>2]|0)>>>0){pxa(g,356,b);f[e>>2]=(f[e>>2]|0)+8;break}else{zy(a+4|0,c,d);break}}while(0);u=h;return}function PH(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0;while(1){e=b[a>>0]|0;c=e<<24>>24;f=a+1|0;if(!(kEa(c)|0))break;else a=f}switch(c|0){case 45:{a=1;g=5;break}case 43:{a=0;g=5;break}default:{h=0;d=a;a=e}}if((g|0)==5){h=a;d=f;a=b[f>>0]|0}c=(a<<24>>24)+-48|0;if(c>>>0<10){a=0;do{d=d+1|0;a=(a*10|0)-c|0;c=(b[d>>0]|0)+-48|0}while(c>>>0<10)}else a=0;return (h|0?a:0-a|0)|0}function QH(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=(f[a+24>>2]|0)==0|b;f[a+16>>2]=b;if(!(b&f[a+20>>2])){u=c;return}a=zb(16)|0;TAa();f[d>>2]=1;f[d+4>>2]=14848;y=0;ja(2046,a|0,d|0);d=y;y=0;if(d&1){d=Pa()|0;Oa(a|0);a=d}else{y=0;ya(79,a|0,4384,238);y=0;a=Pa()|0}$a(a|0)}function RH(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+8|0);a=y;y=0;if((!(a&1)?(y=0,ja(1629,c|0,b+12|0),a=y,y=0,!(a&1)):0)?(y=0,ja(1629,c|0,b+16|0),b=y,y=0,!(b&1)):0){E$(c);u=d;return}d=Pa()|0;E$(c);$a(d|0)}function SH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;e=g;if(bDa(f[b+8>>2]|0,f[a+28>>2]|0)|0?R4(b)|0:0){b=f[b+12>>2]|0;if(!b)b=0;else b=f[b+4>>2]|0;f[e>>2]=b;c=a+36|0;d=f[c>>2]|0;if(d>>>0<(f[a+40>>2]|0)>>>0){f[d>>2]=b;f[c>>2]=d+4}else XC(a+32|0,e)}u=g;return}function TH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;Xwa(a);f[a+24>>2]=b;f[a+28>>2]=f[c>>2];c=a+32|0;f[c>>2]=0;f[a+36>>2]=0;f[a+40>>2]=0;f[e>>2]=b;y=0;ja(384,a|0,e|0);b=y;y=0;if(b&1){e=Pa()|0;E4(c);Rua(a);$a(e|0)}else{u=d;return}}function UH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=f[a+4>>2]|0;if(!c){d=a;c=f[a>>2]|0}else{g=32-c|0;d=g>>>0>b>>>0?b:g;e=f[a>>2]|0;f[e>>2]=f[e>>2]|-1>>>(g-d|0)&-1<<c;c=e+4|0;f[a>>2]=c;b=b-d|0;d=a}a=b>>>5;Kz(c|0,-1,a<<2|0)|0;b=b-(a<<5)|0;if(b|0){g=(f[d>>2]|0)+(a<<2)|0;f[d>>2]=g;f[g>>2]=f[g>>2]|-1>>>(32-b|0)}return}function VH(a,b){a=a|0;b=b|0;if(!b)return;else{VH(a,f[b>>2]|0);VH(a,f[b+4>>2]|0);Kza(b+16|0);$Ja(b);return}}function WH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=1;e=0;while(1){if(e>>>0>=(yja(gKa(b)|0)|0)>>>0)break;d=UAa(b,e)|0;d=f[d>>2]|0;if(!(eX(d)|0)){if(!c)A2(a);Cg(a,d);if((!(iaa(d)|0)?!(jaa(d)|0):0)?!(Paa(d)|0):0){gP(a,59);c=0}else c=0}e=e+1|0}return}function XH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0;if(!c)Na(56787,56792,913,56810);h=(f[c+12>>2]|0)-(f[c+8>>2]|0)>>2;e=b+8|0;lU(e,h);g=h+-1|0;d=0;while(1){if((d|0)==(h|0))break;j=Jg(a)|0;i=bga(e,g-d|0)|0;f[i>>2]=j;d=d+1|0}f[b+4>>2]=f[c+4>>2];return}function YH(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)>>2;do if(d|0){y=0;ja(599,a|0,d|0);d=y;y=0;if(d&1){d=Pa()|0;E4(a);$a(d|0)}else{J0(a,f[b>>2]|0,f[c>>2]|0);break}}while(0);return}function ZH(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=b+4|0;d=(f[c>>2]|0)-(f[b>>2]|0)|0;do if(d|0){y=0;ja(1021,a|0,d|0);d=y;y=0;if(d&1){d=Pa()|0;F4(a);$a(d|0)}else{K1(a,f[b>>2]|0,f[c>>2]|0);break}}while(0);return}function _H(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=c+8|0;e=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,Y(f[d>>2]|0,f[e>>2]|0)|0);break}case 2:{Ysa(a,oea(f[d>>2]|0,f[d+4>>2]|0,f[e>>2]|0,f[e+4>>2]|0)|0,J);break}case 3:{tda(a,+Hoa(b)*+Hoa(c));break}case 4:{S5(a,+Goa(b)*+Goa(c));break}default:Ka()}return}function $H(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;b=u;u=u+16|0;c=b;e=f[a>>2]|0;d=f[f[a+4>>2]>>2]|0;g=f[a+8>>2]|0;f[c>>2]=f[g>>2];f[c+4>>2]=f[g+4>>2];f[c+8>>2]=f[g+8>>2];f[c+12>>2]=f[g+12>>2];c=FO(e,c)|0;a=aG(f[a+12>>2]|0)|0;a=s5(f[e>>2]|0,d,c,a)|0;u=b;return a|0}function aI(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b>>2]|0;c=f[b+4>>2]|0;b=a+4|0;a:while(1){b=f[b>>2]|0;if(!b){b=0;break}a=f[b+16>>2]|0;do if((d|0)>=(a|0)){if((a|0)>=(d|0)){if(Iva(c,f[b+20>>2]|0)|0)break;if(!(Iva(f[b+20>>2]|0,c)|0)){b=1;break a}}b=b+4|0;continue a}while(0)}return b|0}function bI(a){a=a|0;if(!a)return;else{bI(f[a>>2]|0);bI(f[a+4>>2]|0);rwa(a+16|0);$Ja(a);return}}function cI(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(116)|0;f[a>>2]=g;f[a+4>>2]=c+8;Aua(g+8|0,e);mca(g+16|0,e+8|0);b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function dI(a,b){a=a|0;b=b|0;b=SN(a,b)|0;if((b|0)!=(a+4|0))Ny(a,b);return}function eI(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+96|0;c=d;if((!(jEa(f[b>>2]|0)|0)?rCa(f[b+4>>2]|0)|0:0)?(Ot(c,uya(f[a+40>>2]|0)|0,b),a=jca(c)|0,hT(c),!a):0)a=(jN(b)|0)>>>0>1;else a=0;u=d;return a|0}function fI(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=Ay(a,c,b)|0;b=f[b>>2]|0;if(b|0){u=c;return b+20|0}b=zb(8)|0;y=0;ja(76,b|0,48394);c=y;y=0;if(c&1){c=Pa()|0;Oa(b|0);$a(c|0)}else{f[b>>2]=18236;ub(b|0,5832,318)}return 0}function gI(a,c,d){a=a|0;c=c|0;d=d|0;una(a);f[a>>2]=6764;b[a+44>>0]=c&1;b[a+45>>0]=d&1;gua(a+48|0);gua(a+60|0);gua(a+72|0);f[a+84>>2]=0;f[a+88>>2]=0;f[a+92>>2]=0;Epa(a+100|0);a=a+136|0;c=a+36|0;do{f[a>>2]=0;a=a+4|0}while((a|0)<(c|0));return}function hI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=c+8|0;e=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)+(f[e>>2]|0)|0);break}case 2:{Ysa(a,Hsa(f[d>>2]|0,f[d+4>>2]|0,f[e>>2]|0,f[e+4>>2]|0)|0,J);break}case 3:{tda(a,+Hoa(b)+ +Hoa(c));break}case 4:{S5(a,+Goa(b)+ +Goa(c));break}default:Ka()}return}function iI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0;g=u;u=u+16|0;c=g+4|0;d=g;e=b+4|0;if(rCa(f[e>>2]|0)|0){h=b+12|0;i=f[h>>2]|0;cJa(d);e=f[e>>2]|0;f[c>>2]=f[d>>2];e=Rx(a,i,Ho(a,c,e,b,-1)|0)|0;f[h>>2]=e;xza(b)}u=g;return}function jI(){var a=0,b=0,c=0,d=0;c=u;u=u+16|0;a=c;y=0;b=ua(161,1,a|0)|0;d=y;y=0;do if(!(d&1))if(!b){b=f[a>>2]|0;d=f[a+4>>2]|0;b=oea(b|0,((b|0)<0)<<31>>31|0,1e9,0)|0;d=Hsa(b|0,J|0,d|0,((d|0)<0)<<31>>31|0)|0;u=c;return d|0}else{y=0;ja(2044,f[2619]|0,67428);y=0;break}while(0);d=ab(0)|0;lDa(d);return 0}function kI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+32|0;c=d;Nna(c,a+44|0);y=0;ja(1109,c|0,b|0);e=y;y=0;if(e&1){e=Pa()|0;Rua(c);$a(e|0)}else{Rua(c);Sca(a+16|0,b);u=d;return}}function lI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[d>>2]^-2147483648);break}case 2:{Ysa(a,f[d>>2]|0,f[d+4>>2]^-2147483648);break}case 3:{uAa(c,f[d>>2]^-2147483648);qja(a,c);break}case 4:{Ysa(c,f[d>>2]|0,f[d+4>>2]^-2147483648);Bca(a,c);break}default:Ka()}u=e;return}function mI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[d>>2]&2147483647);break}case 2:{Ysa(a,f[d>>2]|0,f[d+4>>2]&2147483647);break}case 3:{uAa(c,f[d>>2]&2147483647);qja(a,c);break}case 4:{Ysa(c,f[d>>2]|0,f[d+4>>2]&2147483647);Bca(a,c);break}default:Ka()}u=e;return}function nI(a){a=a|0;var c=0,d=0,e=0;e=a+92|0;if(!(f[e>>2]&16)){f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;c=f[a+52>>2]|0;do if(c>>>0>8)if(!(b[a+98>>0]|0)){d=f[a+56>>2]|0;c=d+((f[a+60>>2]|0)+-1)|0;break}else{d=f[a+32>>2]|0;c=d+(c+-1)|0;break}else{c=0;d=0}while(0);f[a+24>>2]=d;f[a+20>>2]=d;f[a+28>>2]=c;f[e>>2]=16}return}function oI(a){a=a|0;if(!a)return;else{oI(f[a>>2]|0);oI(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function pI(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;tM(d)}b=f[a>>2]|0;if(b|0)lfa(f[f[a+16>>2]>>2]|0,b,(f[a+12>>2]|0)-b>>4);return}function qI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;d=u;u=u+16|0;e=d+4|0;g=d;c=gKa(f[a+84>>2]|0)|0;f[g>>2]=f[b+8>>2];f[e>>2]=f[g>>2];e=cna(a,e)|0;b=b+16|0;Ypa(c,e,f[b>>2]|0);if(!(f[b>>2]|0))kBa(a);else Ypa(c,Wta(a)|0,0);u=d;return}function rI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;PDa(d,b);f[a>>2]=0;f[a+4>>2]=0;e=f[d>>2]|0;f[a+8>>2]=0;f[a+12>>2]=e;PDa(d,b);A9(a+16|0,d);PDa(d,b);A9(a+32|0,d);u=c;return}function sI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=b+16|0;d=f[c>>2]|0;e=a+16|0;do if(d){if((d|0)!=(b|0)){f[e>>2]=d;g=5;break}d=gKa(a)|0;f[e>>2]=d;e=f[c>>2]|0;y=0;ja(f[(f[e>>2]|0)+12>>2]|0,e|0,d|0);e=y;y=0;if(e&1){e=ab(0)|0;lDa(e)}}else{c=e;g=5}while(0);if((g|0)==5)f[c>>2]=0;return}function tI(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0;f[a>>2]=d;f[a+4>>2]=c;h=a+8|0;rJa(h);if(!(aDa(g,f[18680]|0)|0))Na(23656,19319,691,23686);if(bDa(g,f[18679]|0)|0){g=ch(d,c,e)|0;f[a+8>>2]=g;g=1}else{f[h>>2]=g;g=0}b[a+12>>0]=g;return}function uI(a){a=a|0;if(!a)return;else{uI(f[a>>2]|0);uI(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function vI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;tu(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function wI(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;tM(d)}d=f[a>>2]|0;lfa(f[a+12>>2]|0,d,(f[a+8>>2]|0)-d>>4)}return}function xI(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;b=a+2496|0;g=f[b>>2]|0;c=((g+1|0)>>>0)%624|0;d=a+(g<<2)|0;e=f[a+(c<<2)>>2]|0;f[d>>2]=0-(e&1)&-1727483681^f[a+((((g+397|0)>>>0)%624|0)<<2)>>2]^(e&2147483646|f[d>>2]&-2147483648)>>>1;a=f[a+(f[b>>2]<<2)>>2]|0;a=a>>>11^a;f[b>>2]=c;a=a<<7&-1658038656^a;a=a<<15&-272236544^a;return a>>>18^a|0}function yI(a){a=a|0;var b=0;Nma(a);f[a>>2]=6692;f[a+48>>2]=0;f[a+52>>2]=0;f[a+56>>2]=0;f[a+64>>2]=0;f[a+68>>2]=0;f[a+72>>2]=0;gua(a+76|0);b=a+88|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;gua(a+112|0);gua(a+124|0);return}function zI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((c|0)==1)b=b-(f[a+8>>2]|0)+(f[a+4>>2]|0)|0;d=a+20|0;e=a+28|0;if((f[d>>2]|0)>>>0>(f[e>>2]|0)>>>0?(Rb[f[a+36>>2]&127](a,0,0)|0,(f[d>>2]|0)==0):0)b=-1;else{f[a+16>>2]=0;f[e>>2]=0;f[d>>2]=0;if((Rb[f[a+40>>2]&127](a,b,c)|0)<0)b=-1;else{f[a+8>>2]=0;f[a+4>>2]=0;f[a>>2]=f[a>>2]&-17;b=0}}return b|0}function AI(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;f[a>>2]=c;switch(c|0){case 1:{c=csa(b)|0;f[a+8>>2]=c;break}case 2:{b=Eka(b)|0;c=a+8|0;f[c>>2]=b;f[c+4>>2]=J;break}case 3:{c=Xqa(b)|0;f[a+8>>2]=c;break}case 4:{b=oja(b)|0;c=a+8|0;f[c>>2]=b;f[c+4>>2]=J;break}default:Ka()}return}function BI(a){a=a|0;if(!a)return;else{BI(f[a>>2]|0);BI(f[a+4>>2]|0);$Ja(a);return}}function CI(a,b){a=a|0;b=b|0;var c=0;if((yja(gKa(b)|0)|0)!=1?(c=UAa(b,1)|0,(yja(gKa(f[c>>2]|0)|0)|0)!=0):0){gP(a,123);c=a+16|0;f[c>>2]=(f[c>>2]|0)+1;A2(a);b=UAa(b,1)|0;WH(a,f[b>>2]|0);f[c>>2]=(f[c>>2]|0)+-1;A2(a);gP(a,125)}else l$(a,24628);return}function DI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=F8(1)|0;l6(gKa(e)|0,b)|0;b=gKa(F8(3)|0)|0;b=l6(b,y4(75716)|0)|0;PDa(c,l6(l6(b,Bea(a)|0)|0,e)|0);u=d;return f[c>>2]|0}function EI(a){a=a|0;var c=0,d=0,e=0,g=0;g=u;u=u+32|0;c=g+4|0;d=g;e=g+8|0;_L(e,a);y=0;ya(64,d|0,((b[e+11>>0]|0)<0?f[e>>2]|0:e)|0,0);a=y;y=0;if(a&1){g=Pa()|0;zta(e);$a(g|0)}else{FCa(c,f[d>>2]|0);zta(e);u=g;return f[c>>2]|0}return 0}function FI(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c+8|0;d=c;f[d>>2]=a;ur(b,a,d);u=c;return (f[b>>2]|0)+32|0}function GI(a){a=a|0;var b=0;fP(f[a+8>>2]|0);b=f[a>>2]|0;f[a>>2]=0;if(b|0)$Ja(b);return}function HI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;NBa(a);c=f[c+8>>2]|0;if(!((c|0)!=0?(Aia(d,b,c),f[a>>2]=f[d>>2],f[a+4>>2]=f[d+4>>2],f[a+8>>2]=f[d+8>>2],f[a+12>>2]=f[d+12>>2],f[a+16>>2]=f[d+16>>2],FBa(a)|0):0))f[a+16>>2]=f[18770];u=e;return}function II(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c+8|0;d=c;f[d>>2]=a;wr(b,a,d);u=c;return (f[b>>2]|0)+32|0}function JI(a,b){a=a|0;b=b|0;var c=0,d=0;d=(Asa(f[b>>2]|0)|0)+16|0;if(!(f[d>>2]|0))Na(48789,32558,163,32751);b=a+48|0;c=a+88|0;d=f[c>>2]|0;if(d>>>0<(f[a+92>>2]|0)>>>0){uS(d,b);f[c>>2]=(f[c>>2]|0)+12}else mw(a+84|0,b);return}function KI(a,b){a=+a;b=b|0;var c=0,d=0;if((b|0)<=1023){if((b|0)<-1022){a=a*2.2250738585072014e-308;c=b+1022|0;d=(c|0)<-1022;b=b+2044|0;a=d?a*2.2250738585072014e-308:a;b=d?((b|0)>-1022?b:-1022):c}}else{a=a*8988465674311579538646525.0e283;d=b+-1023|0;c=(d|0)>1023;b=b+-2046|0;a=c?a*8988465674311579538646525.0e283:a;b=c?((b|0)<1023?b:1023):d}c=gna(b+1023|0,0,52)|0;d=J;f[s>>2]=c;f[s+4>>2]=d;return +(a*+p[s>>3])}function LI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[d>>2]|0);break}case 2:{Ysa(a,f[d>>2]|0,f[d+4>>2]|0);break}case 3:{uAa(c,f[d>>2]|0);qja(a,c);break}case 4:{Ysa(c,f[d>>2]|0,f[d+4>>2]|0);Bca(a,c);break}default:Ka()}u=e;return}function MI(a){a=a|0;if(!a)return;else{MI(f[a>>2]|0);MI(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function NI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)!=(b|0)){d=rg(a,b,c)|0;if((d|0)==(a|0))d=Ar(a,b,c)|0;if((d|0)!=(a|0)?(e=f[c+4>>2]|0,(f[c>>2]|0)!=(e|0)):0)x4(e+-24|0,0,72155)|0;else d=a}else d=a;return d|0}function OI(a){a=a|0;var b=0,c=0;b=f[a+8>>2]|0;do if(b){c=f[b>>2]|0;if((c|0)==(a|0)){f[b>>2]=0;a=f[b+4>>2]|0;if(!a)break;else{b=bca(a)|0;break}}else{f[b+4>>2]=0;if(!c)break;else{b=bca(c)|0;break}}}else b=0;while(0);return b|0}function PI(a){a=a|0;var b=0,c=0,d=0,e=0;e=u;u=u+80|0;d=e;if(f[18711]|0)Vea(76684,22127)|0;b=d;c=b+80|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));HR(d);y=0;a=xa(6,d|0,a|0,0,1)|0;c=y;y=0;if(c&1){e=Pa()|0;iR(d);$a(e|0)}else{iR(d);u=e;return a&1|0}return 0}function QI(a){a=a|0;if(!a)return;else{QI(f[a>>2]|0);QI(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function RI(a){a=a|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[a+(c<<2)>>2]=0;c=c+1|0}if((b[a+11>>0]|0)<0)c=(f[a+8>>2]&2147483647)+-1|0;else c=10;y=0;ja(83,a|0,c|0);c=y;y=0;if(c&1){c=Pa()|0;zta(a);$a(c|0)}else return}function SI(a){a=a|0;var b=0,c=0,d=0,e=0,g=0;g=a+4|0;b=f[g>>2]|0;e=f[a>>2]|0;c=b-e|0;d=(c|0)/12|0;a:do if(d>>>0>=5){if((c|0)!=60){a=e+60|0;while(1){if((b|0)==(a|0))break a;e=b+-12|0;f[g>>2]=e;E4(e);b=f[g>>2]|0}}}else Ru(a,5-d|0);while(0);return}function TI(a){a=a|0;var b=0,c=0,d=0;c=a+12|0;if(f[c>>2]|0){d=a+8|0;X8(f[d>>2]|0);f[d>>2]=0;d=f[a+4>>2]|0;b=0;while(1){if((b|0)==(d|0))break;f[(f[a>>2]|0)+(b<<2)>>2]=0;b=b+1|0}f[c>>2]=0}return}function UI(a,b){a=a|0;b=b|0;var c=0;if((b|0)>-1)b=b<<1;else b=0-b<<1|1;while(1){c=b&31;b=b>>>5;if(!b)break;do if(c>>>0>=20)if(c>>>0<30){c=c+28|0;break}else{c=(c|0)==30?43:47;break}else c=c+103|0;while(0);c3(a,c&255)|0}c3(a,(c>>>0<26?65:71)+c&255)|0;return}function VI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;e=gKa(F8(3)|0)|0;a=l6(l6(e,y4(75716)|0)|0,a)|0;PDa(d,l6(a,F8(0)|0)|0);a=f[d>>2]|0;d=UAa(a,2)|0;l6(gKa(f[d>>2]|0)|0,b)|0;u=c;return a|0}function WI(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;if(f[18711]|0){Vea(76684,19586)|0;Vea(76684,19626)|0;f[a>>2]=0;a=EN(74808,a)|0;f[a>>2]=0}a=nV(232)|0;y=0;ia(334,a|0);c=y;y=0;if(c&1){c=Pa()|0;$Ja(a);$a(c|0)}else{u=b;return a|0}return 0}function XI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;f[a>>2]=b;f[a+4>>2]=c;d=((c&31|0)!=0&1)+(c>>>5)|0;f[a+12>>2]=d;b=(c>>>0)/(d>>>0)|0;f[a+8>>2]=b;f[a+20>>2]=0;f[a+16>>2]=d-((c>>>0)%(d>>>0)|0);f[a+24>>2]=0;f[a+28>>2]=d>>>0>c>>>0?0:-1>>>(32-b|0);f[a+32>>2]=b>>>0<31?-1>>>(31-b|0):-1;return}function YI(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;e=a+11|0;d=b[e>>0]|0;g=d<<24>>24<0;if(g)d=f[a+4>>2]|0;else d=d&255;do if(d>>>0>=c>>>0)if(g){SBa((f[a>>2]|0)+c|0,0);f[a+4>>2]=c;break}else{SBa(a+c|0,0);b[e>>0]=c;break}else nD(a,c-d|0)|0;while(0);return}function ZI(a,c){a=a|0;c=c|0;var d=0,e=0;gP(a,91);d=UAa(c,1)|0;d=f[d>>2]|0;c=0;while(1){if(c>>>0>=(yja(gKa(d)|0)|0)>>>0)break;do if(c|0)if(!(b[a>>0]|0)){gP(a,44);break}else{l$(a,72307);break}while(0);e=UAa(d,c)|0;Cg(a,f[e>>2]|0);c=c+1|0}gP(a,93);return}function _I(a){a=a|0;var c=0;f[a>>2]=9916;y=0;la(221,a|0)|0;c=y;y=0;if(c&1?(c=ab(0)|0,Ya(c|0)|0,y=0,za(5),c=y,y=0,c&1):0){c=ab(0)|0;vwa(a);lDa(c)}if(b[a+96>>0]|0)ZJa(f[a+32>>2]|0);if(b[a+97>>0]|0)ZJa(f[a+56>>2]|0);vwa(a);return}function $I(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;wu(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function aJ(){var a=0,c=0,d=0;c=u;u=u+16|0;a=c;V6(77252);f[19313]=14988;f[19321]=10656;f[19323]=77308;f[19325]=-1;b[77304]=0;zwa(a,f[19314]|0);y=0;ja(22,77252,a|0);d=y;y=0;if(d&1){d=Pa()|0;pza(a);uwa(77252);$a(d|0)}else{pza(a);u=c;return}}function bJ(){var a=0,c=0,d=0;c=u;u=u+16|0;a=c;W6(77188);f[19297]=15052;f[19305]=10656;f[19307]=77244;f[19309]=-1;b[77240]=0;zwa(a,f[19298]|0);y=0;ja(23,77188,a|0);d=y;y=0;if(d&1){d=Pa()|0;pza(a);vwa(77188);$a(d|0)}else{pza(a);u=c;return}}function cJ(a){a=a|0;var b=0;oR(f[a+8>>2]|0);b=f[a>>2]|0;f[a>>2]=0;if(b|0)$Ja(b);return}function dJ(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;j=a+8|0;j=Ob[f[(f[j>>2]|0)+20>>2]&255](j)|0;i=b[j+8+3>>0]|0;k=i<<24>>24<0;l=k?f[j>>2]|0:j;return bf(a,f[c>>2]|0,f[d>>2]|0,e,g,h,l,l+((k?f[j+4>>2]|0:i&255)<<2)|0)|0}function eJ(a){a=a|0;if(!a)return;else{eJ(f[a>>2]|0);eJ(f[a+4>>2]|0);$Ja(a);return}}function fJ(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(16)|0;f[a>>2]=g;f[a+4>>2]=c+8;f[g+8>>2]=f[f[e>>2]>>2];f[g+12>>2]=0;b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function gJ(a){a=a|0;var b=0,c=0,d=0,e=0;e=u;u=u+16|0;b=e;f[b>>2]=a;c=e+4|0;d=gKa(F8(2)|0)|0;d=l6(d,y4(75704)|0)|0;if(dxa(a)|0)a=Fca()|0;else a=y4(b)|0;PDa(c,l6(d,a)|0);u=e;return f[c>>2]|0}function hJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;if(!((d|0)==(b|0)&(b|0)==(a|0)))Na(23527,51766,212,23587);if(e>>>0>=c>>>0?(g=a+4|0,h=f[g>>2]|0,h>>>0>=e>>>0):0){d=e-c|0;while(1){b=c+d|0;if(b>>>0>=h>>>0)break;e=f[a>>2]|0;f[e+(c<<2)>>2]=f[e+(b<<2)>>2];c=c+1|0}f[g>>2]=h-d;return}Na(23593,51766,213,23587)}function iJ(a){a=a|0;var c=0,d=0,e=0;e=a;a:do if(!(e&3))d=4;else{c=e;while(1){if(!(b[a>>0]|0)){a=c;break a}a=a+1|0;c=a;if(!(c&3)){d=4;break}}}while(0);if((d|0)==4){while(1){c=f[a>>2]|0;if(!((c&-2139062144^-2139062144)&c+-16843009))a=a+4|0;else break}if((c&255)<<24>>24)do a=a+1|0;while((b[a>>0]|0)!=0)}return a-e|0}function jJ(a,b){a=a|0;b=b|0;if(!b)return;else{jJ(a,f[b>>2]|0);jJ(a,f[b+4>>2]|0);$Ja(b);return}}function kJ(a){a=a|0;if(!a)return;else{kJ(f[a>>2]|0);kJ(f[a+4>>2]|0);$Ja(a);return}}function lJ(a){a=a|0;var b=0,c=0,d=0,e=0;e=u;u=u+16|0;b=e;f[b>>2]=a;c=e+4|0;d=gKa(F8(2)|0)|0;d=l6(d,y4(75708)|0)|0;if(dxa(a)|0)a=Fca()|0;else a=y4(b)|0;PDa(c,l6(d,a)|0);u=e;return f[c>>2]|0}function mJ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0,j=0;i=u;u=u+16|0;h=i;j=pJa(f[b+4>>2]|0)|0;f[a>>2]=c;f[b+12>>2]=f[e>>2];Faa(b);f[e>>2]=b;if(!j){f[d>>2]=0;if(!(f[c+12>>2]|0)){VBa(h,g);p0(h,c)}qO(c)}u=i;return}function nJ(a,b){a=+a;b=b|0;var c=0,d=0,e=0;p[s>>3]=a;c=f[s>>2]|0;d=f[s+4>>2]|0;e=Bna(c|0,d|0,52)|0;switch(e&2047){case 0:{if(a!=0.0){a=+nJ(a*18446744073709551616.0,b);c=(f[b>>2]|0)+-64|0}else c=0;f[b>>2]=c;break}case 2047:break;default:{f[b>>2]=(e&2047)+-1022;f[s>>2]=c;f[s+4>>2]=d&-2146435073|1071644672;a=+p[s>>3]}}return +a}function oJ(a,b){a=a|0;b=b|0;b=SN(a,b)|0;if((b|0)!=(a+4|0))Fz(a,b);return}function pJ(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;e=osa(f[a+4>>2]|0)|0;d=lj(c,1)|0;d=qIa(b[d>>0]|0)|0;g=e+12|0;d=d?2:1;while(1){if(d>>>0>=(lxa(c)|0)>>>0)break;AW(g,sra(a,lj(c,d)|0)|0);d=d+1|0}Do(e);return e|0}function qJ(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;d=(f[b+4>>2]|0)-(f[b>>2]|0)>>2;y=0;ja(604,a|0,d|0);c=y;y=0;if(c&1){d=Pa()|0;E4(a);$a(d|0)}c=f[b>>2]|0;b=0;while(1){if((b|0)==(d|0))break;f[(f[a>>2]|0)+(f[c+(b<<2)>>2]<<2)>>2]=b;b=b+1|0}return}function rJ(){var a=0,c=0,d=0,e=0;e=u;u=u+16|0;d=e;b[d>>0]=10;a=f[2576]|0;if(!a)if(!(_U(10288)|0)){a=f[2576]|0;c=4}else a=-1;else c=4;do if((c|0)==4){c=f[2577]|0;if(!(c>>>0>=a>>>0|(b[10363]|0)==10)){f[2577]=c+1;b[c>>0]=10;a=10;break}if((Rb[f[10324>>2]&127](10288,d,1)|0)==1)a=h[d>>0]|0;else a=-1}while(0);u=e;return a|0}function sJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=JT()|0;l6(gKa(f[f[a>>2]>>2]|0)|0,d)|0;a=AL(Bea(f[18829]|0)|0,c)|0;mD(d,b,VV(VI(a,Bea(f[18791]|0)|0)|0)|0);return}function tJ(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;j=a+8|0;j=Ob[f[(f[j>>2]|0)+20>>2]&255](j)|0;i=b[j+11>>0]|0;k=i<<24>>24<0;l=k?f[j>>2]|0:j;return Ve(a,f[c>>2]|0,f[d>>2]|0,e,g,h,l,l+(k?f[j+4>>2]|0:i&255)|0)|0}function uJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+32|0;d=e;Aia(d,b,c);if(FBa(d)|0){f[a>>2]=f[d>>2];f[a+4>>2]=f[d+4>>2];f[a+8>>2]=f[d+8>>2];f[a+12>>2]=f[d+12>>2];f[a+16>>2]=f[d+16>>2];f[a+20>>2]=f[d+20>>2]}else NBa(a);u=e;return}function vJ(a){a=a|0;var b=0;while(1){b=Iza(a)|0;if(!b){b=xAa(a)|0;if(!b)break;if(pJa(f[b+8>>2]|0)|0)break;if(!(gKa(f[b+16>>2]|0)|0))break;a=efa(b+12|0)|0}else{if(!(pJa(f[b+4>>2]|0)|0))break;a=b+12|0}a=f[a>>2]|0}return a|0}function wJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=f[b>>2];f[a+4>>2]=f[b+4>>2];f[a+8>>2]=f[b+8>>2];c=0;while(1){if((c|0)==3)break;f[b+(c<<2)>>2]=0;c=c+1|0}d=a+12|0;c=b+12|0;f[d>>2]=0;e=a+16|0;f[e>>2]=0;f[a+20>>2]=0;f[d>>2]=f[c>>2];d=b+16|0;f[e>>2]=f[d>>2];b=b+20|0;f[a+20>>2]=f[b>>2];f[b>>2]=0;f[d>>2]=0;f[c>>2]=0;return}function xJ(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;Kda(b);$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function yJ(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;Kda(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function zJ(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,813,b);kd(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,814,b);return}function AJ(a){a=a|0;var b=0;PS(f[a+8>>2]|0);b=f[a>>2]|0;f[a>>2]=0;if(b|0)$Ja(b);return}function BJ(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;X$(a,f[c>>2]|0,b,-1);zya(a);gP(a,63);zya(a);c=UAa(b,2)|0;X$(a,f[c>>2]|0,b,0);zya(a);gP(a,58);zya(a);c=UAa(b,3)|0;X$(a,f[c>>2]|0,b,1);return}function CJ(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if(!d)e=0;else{h=b[a>>0]|0;e=h&255;g=b[c>>0]|0;f=g&255;a:do if(h<<24>>24)do{d=d+-1|0;if(!(h<<24>>24==g<<24>>24&((d|0)!=0&g<<24>>24!=0)))break a;a=a+1|0;c=c+1|0;h=b[a>>0]|0;e=h&255;g=b[c>>0]|0;f=g&255}while(h<<24>>24!=0);while(0);e=e-f|0}return e|0}function DJ(a,b,c){a=a|0;b=b|0;c=c|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=a;f[b>>2]=c;a=f[f[18964]>>2]|0;if(a){f[18964]=a;c=f[b>>2]|0}kr(f[18965]|0,c);f[18966]=(f[18966]|0)+1;return}function EJ(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;sp(d,a,b);b=f[d>>2]|0;f[d>>2]=0;if(b|0)$Ja(b);u=c;return}function FJ(a,c){a=a|0;c=c|0;var d=0,e=0;e=0;while(1){if((h[65408+e>>0]|0)==(a|0)){a=2;break}d=e+1|0;if((d|0)==87){d=65496;e=87;a=5;break}else e=d}if((a|0)==2)if(!e)d=65496;else{d=65496;a=5}if((a|0)==5)while(1){do{a=d;d=d+1|0}while((b[a>>0]|0)!=0);e=e+-1|0;if(!e)break;else a=5}return FFa(d,f[c+20>>2]|0)|0}function GJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;g=gKa(F8(4)|0)|0;a=l6(l6(l6(g,y4(75744)|0)|0,a)|0,b)|0;if(Ata(c)|0)c=Fca()|0;PDa(d,l6(a,c)|0);u=e;return f[d>>2]|0}function HJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;a:do if((f[a+4>>2]|0)==(f[b+4>>2]|0)?(e=f[a+8>>2]|0,c=(f[a+12>>2]|0)-e|0,a=f[b+8>>2]|0,d=a,e,(c|0)==((f[b+12>>2]|0)-a|0)):0){b=c>>2;a=0;while(1){if(a>>>0>=b>>>0){a=1;break a}if((f[e+(a<<2)>>2]|0)==(f[d+(a<<2)>>2]|0))a=a+1|0;else{a=0;break}}}else a=0;while(0);return a|0}function IJ(){var a=0,c=0;if((b[74160]|0)==0?twa(74160)|0:0){c=78488;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=78776);tb(396,0,x|0)|0}Sga(78488,15776)|0;Sga(78500,15788)|0;return}function JJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;d=i+4|0;e=i;f[d>>2]=b;f[e>>2]=c;g=a+8|0;h=f[g>>2]|0;if(h>>>0<(f[a+12>>2]|0)>>>0){pxa(h,b,c);f[g>>2]=(f[g>>2]|0)+8}else zy(a+4|0,d,e);u=i;return}function KJ(){var a=0,c=0;if((b[74080]|0)==0?twa(74080)|0:0){c=77676;do{f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}c=c+12|0}while((c|0)!=77964);tb(392,0,x|0)|0}Tga(77676,68826)|0;Tga(77688,68829)|0;return}function LJ(a){a=a|0;if(!a)return;else{LJ(f[a>>2]|0);LJ(f[a+4>>2]|0);$Ja(a);return}}function MJ(a,b){a=a|0;b=b|0;c3(f[a>>2]|0,40)|0;Vea(gKa(f[a>>2]|0)|0,42610)|0;zea(a);kF(a,f[b+8>>2]|0);kF(a,f[b+12>>2]|0);kF(a,f[b+16>>2]|0);x_(a);return}function NJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=f[b>>2]|0;d=a+108|0;if((c|0)!=0?(QZ(d,c)|0)!=0:0)a=1;else e=3;do if((e|0)==3){a=f[b+4>>2]|0;if(a|0?QZ(d,a)|0:0){a=1;break}Z3(b);a=0}while(0);return a|0}function OJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=(c-e|0)/24|0;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b*24|0)|0;while(1){if((c|0)==(a|0))break a;e=c+-24|0;f[g>>2]=e;Kqa(e);c=f[g>>2]|0}}}else aw(a,b-d|0);while(0);return}function PJ(a,b){a=a|0;b=b|0;if(!b)return;else{PJ(a,f[b>>2]|0);PJ(a,f[b+4>>2]|0);$Ja(b);return}}function QJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;d=e;g=(f[a+8>>2]|0)-(f[a+4>>2]|0)|0;c=a+20|0;if((((g|0)==0?0:(g<<8)+-1|0)|0)==((f[c>>2]|0)+(f[a+16>>2]|0)|0))ag(a);iW(d,a);f[f[d+4>>2]>>2]=f[b>>2];f[c>>2]=(f[c>>2]|0)+1;u=e;return}function RJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;e=u;u=u+16|0;d=e;g=(f[a+8>>2]|0)-(f[a+4>>2]|0)|0;c=a+20|0;if((((g|0)==0?0:(g<<8)+-1|0)|0)==((f[c>>2]|0)+(f[a+16>>2]|0)|0))bg(a);iW(d,a);f[f[d+4>>2]>>2]=f[b>>2];f[c>>2]=(f[c>>2]|0)+1;u=e;return}function SJ(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;pt(b,a,70738);y=0;ia(405,b|0);a=y;y=0;if(a&1){c=Pa()|0;zta(b);$a(c|0)}else{zta(b);u=c;return}}function TJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;f[d>>2]=b;e=b;do if((f[b+12>>2]|0)==0?pJa(f[b+16>>2]|0)|0:0){b=a+28|0;c=f[b>>2]|0;if((c|0)==(f[a+32>>2]|0)){XC(a+24|0,d);break}else{f[c>>2]=e;f[b>>2]=(f[b>>2]|0)+4;break}}while(0);u=g;return}function UJ(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=QCa(32)|0;f[a>>2]=c;f[a+8>>2]=-2147483616;f[a+4>>2]=17;Pta(c,b,17)|0;SBa(c+17|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function VJ(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=QCa(16)|0;f[a>>2]=c;f[a+8>>2]=-2147483632;f[a+4>>2]=14;Pta(c,b,14)|0;SBa(c+14|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function WJ(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=QCa(16)|0;f[a>>2]=c;f[a+8>>2]=-2147483632;f[a+4>>2]=13;Pta(c,b,13)|0;SBa(c+13|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function XJ(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=QCa(16)|0;f[a>>2]=c;f[a+8>>2]=-2147483632;f[a+4>>2]=12;Pta(c,b,12)|0;SBa(c+12|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function YJ(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=QCa(16)|0;f[a>>2]=c;f[a+8>>2]=-2147483632;f[a+4>>2]=11;Pta(c,b,11)|0;SBa(c+11|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function ZJ(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if(c>>>0>0|(c|0)==0&a>>>0>4294967295){while(1){e=Bba(a|0,c|0,10,0)|0;d=d+-1|0;b[d>>0]=e&255|48;e=a;a=Uxa(a|0,c|0,10,0)|0;if(!(c>>>0>9|(c|0)==9&e>>>0>4294967295))break;else c=J}c=a}else c=a;if(c)while(1){d=d+-1|0;b[d>>0]=(c>>>0)%10|0|48;if(c>>>0<10)break;else c=(c>>>0)/10|0}return d|0}function _J(a,b){a=a|0;b=b|0;if(!b)return;else{_J(a,f[b>>2]|0);_J(a,f[b+4>>2]|0);$Ja(b);return}}function $J(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;pt(b,a,70722);y=0;ia(406,b|0);a=y;y=0;if(a&1){c=Pa()|0;zta(b);$a(c|0)}else{zta(b);u=c;return}}function aK(a){a=a|0;var b=0,c=0,d=0,e=0;b=a+8|0;a:do if(f[b>>2]|0){c=f[a+4>>2]|0;d=(f[a>>2]|0)+4|0;e=f[c>>2]|0;f[e+4>>2]=f[d>>2];f[f[d>>2]>>2]=e;f[b>>2]=0;b=c;while(1){if((b|0)==(a|0))break a;e=f[b+4>>2]|0;iwa(b+8|0);$Ja(b);b=e}}while(0);return}function bK(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;e=b[a+11>>0]|0;g=e<<24>>24<0;if(g)h=f[a+4>>2]|0;else h=e&255;if((d|0)==-1)IZ();if(g)a=f[a>>2]|0;e=h>>>0>d>>>0;a=ara(a,c,e?d:h)|0;if(!a)return (h>>>0<d>>>0?-1:e&1)|0;else return a|0;return 0}function cK(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+48|0;c=d;kca(c,a);XAa(c,1);y=0;ja(84,c|0,b|0);a=y;y=0;if(!(a&1)?(y=0,ia(341,c|0),a=y,y=0,!(a&1)):0){SY(c);u=d;return b|0}d=Pa()|0;SY(c);$a(d|0);return 0}function dK(a,b){a=a|0;b=b|0;b=SN(a,b)|0;if((b|0)!=(a+4|0))Xz(a,b);return}function eK(a,b){a=a|0;b=b|0;ora(a,b);f[a+24>>2]=f[b+24>>2];uS(a+28|0,b+28|0);uS(a+40|0,b+40|0);uS(a+52|0,b+52|0);uS(a+64|0,b+64|0);f[a+76>>2]=f[b+76>>2];uS(a+80|0,b+80|0);return}function fK(a){a=a|0;if(!a)return;else{fK(f[a>>2]|0);fK(f[a+4>>2]|0);Kza(a+16|0);$Ja(a);return}}function gK(a,b){a=a|0;b=b|0;if(!b)return;else{gK(a,f[b>>2]|0);gK(a,f[b+4>>2]|0);$Ja(b);return}}function hK(a,b){a=a|0;b=b|0;if(!b)return;else{hK(a,f[b>>2]|0);hK(a,f[b+4>>2]|0);$Ja(b);return}}function iK(a,b){a=a|0;b=b|0;if(!b)return;else{iK(a,f[b>>2]|0);iK(a,f[b+4>>2]|0);$Ja(b);return}}function jK(a,b,c){a=a|0;b=b|0;c=c|0;Oaa(a);f[a>>2]=6360;f[a+4>>2]=b;f[a+8>>2]=c;return}function kK(a,b){a=a|0;b=b|0;var c=0,d=0;c=Mta(f[a+4>>2]|0)|0;d=sra(a,lj(b,1)|0)|0;f[c+8>>2]=d;d=sra(a,lj(b,2)|0)|0;f[c+12>>2]=d;b=sra(a,lj(b,3)|0)|0;f[c+16>>2]=b;WW(c);return c|0}function lK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=b;f[a+12>>2]=0;d=a+16|0;Bia(d);c=a+44|0;f[c>>2]=0;f[a+4>>2]=1;f[a+8>>2]=b;b=0;while(1){if(b|0){b=6;break}y=0;b=la(198,a|0)|0;e=y;y=0;if(e&1){b=5;break}f[c>>2]=b}if((b|0)==5){e=Pa()|0;Rba(d);$a(e|0)}else if((b|0)==6)return}function mK(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+8>>2]|0;c=DR(a,f[b+12>>2]|0)|0;b=DR(a,f[b+16>>2]|0)|0;return s5(f[a+32>>2]|0,d,c,b)|0}function nK(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[a+4>>2]|0;d=Bea(f[f[a>>2]>>2]|0)|0;a=f[18902]|0;return oP(AR(d,Nq(b,a,Fza((gKa(f[(f[c>>2]|0)+68>>2]|0)|0)+-1|0)|0)|0)|0)|0}function oK(a,c){a=a|0;c=c|0;var d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=uHa(73285)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;d=nV(e)|0;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=d}Pta(a,73285,c)|0;SBa(a+c|0,0);return}function pK(a,c){a=a|0;c=c|0;var d=0,e=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=uHa(73291)|0;if(c>>>0>4294967279)JZ();if(c>>>0<11)b[a+11>>0]=c;else{e=c+16&-16;d=nV(e)|0;f[a>>2]=d;f[a+8>>2]=e|-2147483648;f[a+4>>2]=c;a=d}Pta(a,73291,c)|0;SBa(a+c|0,0);return}function qK(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(28)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];d=e+20|0;c=d;f[c>>2]=0;f[c+4>>2]=0;bBa(d);b[a+8>>0]=1;return}function rK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0;k=d;j=a+8|0;h=0;i=0;a:while(1){if((c|0)==(d|0)|h>>>0>=e>>>0)break;g=psa(f[j>>2]|0)|0;a=tAa(c,k-c|0,b)|0;if(g|0)psa(g)|0;switch(a|0){case -2:case -1:break a;case 0:{a=1;break}default:{}}h=h+1|0;i=a+i|0;c=c+a|0}return i|0}function sK(a,c,d,e,g,h){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;l=u;u=u+16|0;i=l;b[i>>0]=37;j=i+1|0;b[j>>0]=g;k=i+2|0;b[k>>0]=h;b[i+3>>0]=0;if(h<<24>>24){b[j>>0]=h;b[k>>0]=g}k=ICa(c,f[d>>2]|0)|0;k=c+(Ta(c|0,k|0,i|0,e|0,f[a>>2]|0)|0)|0;f[d>>2]=k;u=l;return}function tK(a){a=a|0;f[a>>2]=9400;Ora(a+108|0);Cta(a+96|0);e2(a+84|0);e2(a+72|0);T4(a+60|0);Dra(a);return}function uK(a){a=a|0;var b=0,c=0,d=0,e=0,g=0,h=0;b=a+20|0;h=a+28|0;if((f[b>>2]|0)>>>0>(f[h>>2]|0)>>>0?(Rb[f[a+36>>2]&127](a,0,0)|0,(f[b>>2]|0)==0):0)a=-1;else{c=a+4|0;d=f[c>>2]|0;e=a+8|0;g=f[e>>2]|0;if(d>>>0<g>>>0)Rb[f[a+40>>2]&127](a,d-g|0,1)|0;f[a+16>>2]=0;f[h>>2]=0;f[b>>2]=0;f[e>>2]=0;f[c>>2]=0;a=0}return a|0}function vK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;xu(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function wK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;zu(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function xK(a){a=a|0;var b=0;ES(f[a+8>>2]|0);b=f[a>>2]|0;f[a>>2]=0;if(b|0)$Ja(b);return}function yK(a){a=a|0;if(!a)return;else{yK(f[a>>2]|0);yK(f[a+4>>2]|0);$Ja(a);return}}function zK(a){a=a|0;var c=0,d=0,e=0,g=0,h=0;g=a+11|0;c=b[g>>0]|0;if(c<<24>>24<0){h=f[a>>2]|0;d=f[a+4>>2]|0}else{h=a;d=c&255}e=(d|0)!=0&1;d=d-e|0;if(d){Ita(h,h+e|0,d)|0;c=b[g>>0]|0}if(c<<24>>24<0)f[a+4>>2]=d;else b[g>>0]=d;SBa(h+d|0,0);return}function AK(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+96|0;d=e;if(bDa(f[c+8>>2]|0,f[a+36>>2]|0)|0){if(f[c+16>>2]|0){g=a+44|0;f[g>>2]=(f[g>>2]|0)+1}Ot(d,f[a+52>>2]|0,f[c+12>>2]|0);g=jca(d)|0;hT(d);if(g)b[a+40>>0]=1}u=e;return}function BK(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;d=c+12|0;do if(!(b[a+28>>0]|0)){g=f[c+16>>2]|0;if(g|0?(f[g+4>>2]|0)==5:0)break;g=f[d>>2]|0;if(!((g|0)!=0?(f[g+4>>2]|0)==5:0))e=6}else e=6;while(0);if((e|0)==6?bDa(f[c+8>>2]|0,f[a+24>>2]|0)|0:0)KV(a,f[d>>2]|0);return}function CK(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=QCa(32)|0;f[a>>2]=b;f[a+8>>2]=-2147483616;f[a+4>>2]=21;Pta(b,73476,21)|0;SBa(b+21|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function DK(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=QCa(32)|0;f[a>>2]=b;f[a+8>>2]=-2147483616;f[a+4>>2]=18;Pta(b,73697,18)|0;SBa(b+18|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function EK(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=QCa(16)|0;f[a>>2]=b;f[a+8>>2]=-2147483632;f[a+4>>2]=15;Pta(b,72870,15)|0;SBa(b+15|0,0);b=a+12|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function FK(a,b){a=a|0;b=b|0;b=OO(a,b)|0;if((b|0)!=(a+4|0))MC(a,b);return}function GK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;c=f[a>>2]|0;g=a+4|0;e=f[g>>2]|0;h=XU(c,e,b)|0;d=e;if((h|0)!=(e|0)?(f[h>>2]|0)==(b|0):0){b=h+4|0;e=d-b|0;if(e){S0(h|0,b|0,e|0)|0;d=f[g>>2]|0;c=f[a>>2]|0}EO(a,(d-c>>2)+-1|0);c=1}else c=0;return c|0}function HK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;f[d>>2]=c;c=a+24|0;EO(c,Pqa(b)|0);c=f[c>>2]|0;b=(f[a+28>>2]|0)-c>>2;while(1){if((b|0)<=0)break;g=c;f[g>>2]=0;b=b+-1|0;c=g+4|0}LC(a,d);u=e;return}function IK(a){a=a|0;if(!a)return;else{IK(f[a>>2]|0);IK(f[a+4>>2]|0);$Ja(a);return}}function JK(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+12|0);a=y;y=0;if(!(a&1)?(y=0,ja(1629,c|0,b+16|0),b=y,y=0,!(b&1)):0){E$(c);u=d;return}d=Pa()|0;E$(c);$a(d|0)}function KK(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+24|0);a=y;y=0;if(!(a&1)?(y=0,ja(1629,c|0,b+28|0),b=y,y=0,!(b&1)):0){E$(c);u=d;return}d=Pa()|0;E$(c);$a(d|0)}function LK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=Aoa(j^a|0,i^b|0,j|0,i|0)|0;g=J;a=f^j;b=e^i;return Aoa((bi(h,g,Aoa(f^c|0,e^d|0,f|0,e|0)|0,J,0)|0)^a|0,J^b|0,a|0,b|0)|0}function MK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;if((a|0)==(b|0)){f[c>>2]=4;d=0.0}else{g=f[2619]|0;f[2619]=0;gpa()|0;d=+tIa(a,e);a=f[2619]|0;if(!a)f[2619]=g;if((f[e>>2]|0)==(b|0)){if((a|0)==34)h=6}else{d=0.0;h=6}if((h|0)==6)f[c>>2]=4}u=i;return +d}function NK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;Su(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function OK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;if((a|0)==(b|0)){f[c>>2]=4;d=0.0}else{g=f[2619]|0;f[2619]=0;gpa()|0;d=+LIa(a,e);a=f[2619]|0;if(!a)f[2619]=g;if((f[e>>2]|0)==(b|0)){if((a|0)==34)h=6}else{d=0.0;h=6}if((h|0)==6)f[c>>2]=4}u=i;return +d}function PK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,g=0,h=0,i=0;i=u;u=u+16|0;e=i;if((a|0)==(b|0)){f[c>>2]=4;d=0.0}else{g=f[2619]|0;f[2619]=0;gpa()|0;d=+MIa(a,e);a=f[2619]|0;if(!a)f[2619]=g;if((f[e>>2]|0)==(b|0)){if((a|0)==34)h=6}else{d=0.0;h=6}if((h|0)==6)f[c>>2]=4}u=i;return +d}function QK(a){a=a|0;var c=0,d=0,e=0;c=0;while(1){if(c>>>0>=(lxa(a)|0)>>>0){c=0;break}d=lj(a,c)|0;if(((fIa(b[d>>0]|0)|0?lxa(d)|0:0)?(e=lj(d,0)|0,qIa(b[e>>0]|0)|0):0)?(e=rr(lj(d,0)|0)|0,bDa(e,f[18756]|0)|0):0){c=1;break}c=c+1|0}return c|0}function RK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;d=g;e=b+8|0;c=c+8|0;switch(f[b>>2]|0){case 3:{uAa(d,f[c>>2]&-2147483648|f[e>>2]&2147483647);qja(a,d);break}case 4:{Ysa(d,f[e>>2]|0,f[c+4>>2]&-2147483648|f[e+4>>2]&2147483647);Bca(a,d);break}default:Ka()}u=g;return}function SK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+32|0;e=c+16|0;g=c;d=Nva(a)|0;uAa(g,b);f[e>>2]=f[g>>2];f[e+4>>2]=f[g+4>>2];f[e+8>>2]=f[g+8>>2];f[e+12>>2]=f[g+12>>2];b=FO(a,e)|0;b=s5(f[a>>2]|0,15,d,b)|0;u=c;return b|0}function TK(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0;if(e&2048){b[a>>0]=43;a=a+1|0}if(!(e&512))f=a;else{b[a>>0]=35;f=a+1|0}while(1){a=b[c>>0]|0;if(!(a<<24>>24))break;b[f>>0]=a;c=c+1|0;f=f+1|0}switch(e&74){case 64:{a=111;break}case 8:{a=e&16384|0?88:120;break}default:a=d?100:117}b[f>>0]=a;return}function UK(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;e=a+4|0;do if((f[e>>2]|0)>>>0<=20){if((f[a>>2]|0)==1?(b[a+9>>0]|0)==0:0){e=(f[e>>2]|0)>>>0<16;if(e|d^1)break}else g=5;if((g|0)==5?!d:0){e=0;break}if((f[c+4>>2]|0)>2?(f[c+8>>2]|0)==0:0)e=(b[a+8>>0]|0)!=0;else e=0}else e=0;while(0);return e|0}function VK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;f[e>>2]=f[b+8>>2];b=DR(a,f[b+12>>2]|0)|0;f[d>>2]=f[e>>2];b=vda(a+32|0,d,b)|0;u=c;return b|0}function WK(a,b){a=a|0;b=b|0;var c=0;do if(!(f[(f[f[a+24>>2]>>2]|0)+(f[b+8>>2]<<2)>>2]|0)){c=f[b+12>>2]|0;if(pJa(f[b+4>>2]|0)|0){jva(f[a>>2]|0,c)|0;break}else{b=Jxa(b)|0;f[b+8>>2]=c;_wa(b);break}}while(0);return}function XK(a,b){a=a|0;b=b|0;if(!b)return;else{XK(a,f[b>>2]|0);XK(a,f[b+4>>2]|0);$Ja(b);return}}function YK(a){a=a|0;var b=0;Epa(a);b=a+40|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;gua(a+68|0);b=a+80|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;gua(a+104|0);return}function ZK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;f[c>>2]=b;if(f[18711]|0){e=Vea(76684,21932)|0;b=EN(74820,c)|0;Vea(vj(e,f[b>>2]|0)|0,20144)|0;b=f[c>>2]|0}Xya(a,b);u=d;return}function _K(a){a=a|0;if(!a)return;else{_K(f[a>>2]|0);_K(f[a+4>>2]|0);$Ja(a);return}}function $K(a){a=a|0;if(!a)return;else{$K(f[a>>2]|0);$K(f[a+4>>2]|0);$Ja(a);return}}function aL(a){a=a|0;if(!a)return;else{aL(f[a>>2]|0);aL(f[a+4>>2]|0);$Ja(a);return}}function bL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=f[b>>2];c=a+4|0;d=b+4|0;f[c>>2]=0;e=a+8|0;f[e>>2]=0;f[a+12>>2]=0;f[c>>2]=f[d>>2];c=b+8|0;f[e>>2]=f[c>>2];e=b+12|0;f[a+12>>2]=f[e>>2];f[e>>2]=0;f[c>>2]=0;f[d>>2]=0;d=b+16|0;c=f[d+4>>2]|0;b=a+16|0;f[b>>2]=f[d>>2];f[b+4>>2]=c;return}function cL(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;c=GL(b,c+8|0)|0;f[e>>2]=f[c>>2];f[e+4>>2]=f[c+4>>2];f[e+8>>2]=f[c+8>>2];f[e+12>>2]=f[c+12>>2];oda(a,e);u=d;return}function dL(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;g=pJa(b)|0;e=a+32|0;b=DR(a,d)|0;if(g)b=Mba(e,c,b)|0;else b=iea(f[e>>2]|0,c,b)|0;return b|0}function eL(a){a=a|0;var b=0;b=u;u=u+16|0;y=0;za(a|0);a=y;y=0;if(!(a&1)){y=0;ja(2051,71573,b|0);y=0}a=ab(0)|0;Ya(a|0)|0;y=0;ja(2051,71613,b+8|0);y=0;a=ab(0)|0;y=0;za(5);b=y;y=0;if(b&1){b=ab(0)|0;lDa(b)}else lDa(a)}function fL(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;c=gQ(b,f[a>>2]|0,a)|0;if((c|0)!=(a|0)?(f[c+16>>2]|0)<=(b|0):0)a=c;return a|0}function gL(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,g=0,h=0,i=0;i=u;u=u+128|0;h=i;e=h;g=e+124|0;do{f[e>>2]=0;e=e+4|0}while((e|0)<(g|0));e=h+4|0;f[e>>2]=a;g=h+8|0;f[g>>2]=-1;f[h+44>>2]=a;f[h+76>>2]=-1;z9(h,0);d=+Hg(h,c,1);c=(f[e>>2]|0)-(f[g>>2]|0)+(f[h+108>>2]|0)|0;if(b|0)f[b>>2]=c|0?a+c|0:a;u=i;return +d}function hL(a){a=a|0;if(!a)return;else{hL(f[a>>2]|0);hL(f[a+4>>2]|0);$Ja(a);return}}function iL(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;b=b+(c<<4)|0;f[e>>2]=f[b>>2];f[e+4>>2]=f[b+4>>2];f[e+8>>2]=f[b+8>>2];f[e+12>>2]=f[b+12>>2];oda(a,e);u=d;return}function jL(a,b){a=a|0;b=b|0;if(!b)return;else{jL(a,f[b>>2]|0);jL(a,f[b+4>>2]|0);$Ja(b);return}}function kL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;Mu(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function lL(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;E4(b);$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function mL(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;E4(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function nL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;f[d>>2]=b;e=b;do if(pJa(f[b+32>>2]|0)|0){b=a+40|0;c=f[b>>2]|0;if((c|0)==(f[a+44>>2]|0)){XC(a+36|0,d);break}else{f[c>>2]=e;f[b>>2]=(f[b>>2]|0)+4;break}}while(0);u=g;return}function oL(a){a=a|0;var b=0,c=0;Rla(a);f[a>>2]=6456;b=a+44|0;gua(b);y=0;ua(72,a+4|0,27301)|0;c=y;y=0;if(c&1){c=Pa()|0;Wea(b);Uqa(a);$a(c|0)}else return}function pL(a,c){a=a|0;c=c|0;var d=0,e=0;a:do if((a|0)!=(c|0)?(d=(b[a>>0]|0)==110?a+1|0:a,(d|0)!=(c|0)):0){e=b[d>>0]|0;d=d+1|0;if(e<<24>>24!=48)if((e+-49&255)<9)while(1){if((d|0)==(c|0)){d=c;break a}if(((b[d>>0]|0)+-48|0)>>>0>=10)break a;d=d+1|0}else d=a}else d=a;while(0);return d|0}function qL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=(c-e|0)/20|0;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b*20|0)|0;while(1){if((c|0)==(a|0))break a;e=c+-20|0;f[g>>2]=e;c=e}}}else uv(a,b-d|0);while(0);return}function rL(a){a=a|0;if(!a)return;else{rL(f[a>>2]|0);rL(f[a+4>>2]|0);$Ja(a);return}}function sL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+32|0;e=d;c=d+4|0;f[e>>2]=b;Nna(c,a);y=0;ja(61,c|0,e|0);b=y;y=0;if(b&1){e=Pa()|0;Rua(c);$a(e|0)}else{Rua(c);u=d;return}}function tL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;a=Cea(f[a+8>>2]|0,b)|0;f[e>>2]=a;f[d>>2]=f[e>>2];a=Bea(Yma(d)|0)|0;u=c;return a|0}function uL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;f[d>>2]=a;a=c+4|0;e=gKa(F8(3)|0)|0;e=l6(e,y4(75664)|0)|0;PDa(a,l6(l6(e,y4(d)|0)|0,b)|0);u=c;return f[a>>2]|0}function vL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;f[d>>2]=a;a=c+4|0;e=gKa(F8(3)|0)|0;e=l6(e,y4(75712)|0)|0;PDa(a,l6(l6(e,y4(d)|0)|0,b)|0);u=c;return f[a>>2]|0}function wL(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,553,b);td(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,554,b);return}function xL(a,b){a=a|0;b=b|0;var c=0;gua(a);c=a+12|0;f[c>>2]=c;f[a+16>>2]=c;f[a+20>>2]=0;y=0;ua(83,a|0,b|0)|0;b=y;y=0;if(b&1){b=Pa()|0;Qua(c);Daa(a);$a(b|0)}else return}function yL(a){a=a|0;var c=0,d=0;c=a+74|0;d=b[c>>0]|0;b[c>>0]=d+255|d;c=a+20|0;d=a+28|0;if((f[c>>2]|0)>>>0>(f[d>>2]|0)>>>0)Rb[f[a+36>>2]&127](a,0,0)|0;f[a+16>>2]=0;f[d>>2]=0;f[c>>2]=0;c=f[a>>2]|0;if(!(c&4)){d=(f[a+44>>2]|0)+(f[a+48>>2]|0)|0;f[a+8>>2]=d;f[a+4>>2]=d;c=c<<27>>31}else{f[a>>2]=c|32;c=-1}return c|0}function zL(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;b[a+25>>0]=d&1;b[a+26>>0]=e&1;yW(a,c);if(fea()|0)FN(a,c);a=a+24|0;if(!(b[a>>0]|0)){cK(c,76852)|0;a=(b[a>>0]|0)!=0}else a=1;return a|0}function AL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;f[d>>2]=b;b=c+4|0;e=gKa(F8(3)|0)|0;a=l6(l6(e,y4(75460)|0)|0,a)|0;PDa(b,l6(a,y4(d)|0)|0);u=c;return f[b>>2]|0}function BL(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+80|0;d=c;b=c+4|0;f[d>>2]=a;vsa(b);y=0;ja(551,b|0,d|0);a=y;y=0;if(a&1){d=Pa()|0;usa(b);$a(d|0)}else{usa(b);u=c;return}}function CL(a,b){a=a|0;b=b|0;if(!b)return;else{CL(a,f[b>>2]|0);CL(a,f[b+4>>2]|0);$Ja(b);return}}function DL(a){a=a|0;var c=0,d=0,e=0;c=a+44|0;e=f[c>>2]|0;d=f[a+24>>2]|0;if(e>>>0<d>>>0){f[c>>2]=d;e=d}if(f[a+48>>2]&8){c=a+16|0;d=f[c>>2]|0;if(d>>>0<e>>>0){f[c>>2]=e;d=e}c=f[a+12>>2]|0;if(c>>>0<d>>>0)c=oHa(b[c>>0]|0)|0;else c=-1}else c=-1;return c|0}function EL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;rv(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function FL(a){a=a|0;if(!a)return;else{FL(f[a>>2]|0);FL(f[a+4>>2]|0);$Ja(a);return}}function GL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;Yt(c,a,b,e);u=d;return (f[c>>2]|0)+24|0}function HL(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;g=c+12|0;d=b[g+11>>0]|0;e=d<<24>>24<0;eA(c,e?f[g>>2]|0:g,e?f[c+16>>2]|0:d&255)|0;f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function IL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;f[e>>2]=f[b+8>>2];b=DR(a,f[b+12>>2]|0)|0;f[d>>2]=f[e>>2];b=Gaa(a+32|0,d,b)|0;u=c;return b|0}function JL(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;zta(b);$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function KL(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;zta(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function LL(a,b){a=a|0;b=b|0;b=OO(a,b)|0;if((b|0)!=(a+4|0)){zU(a+12|0,f[b+20>>2]|0);XF(a,b)}return}function ML(a){a=a|0;var b=0,c=0,d=0;f9(a);d=(f[a>>2]&1|0)!=0;if(!d){iKa();c=f[a+52>>2]|0;b=a+56|0;if(c|0)f[c+56>>2]=f[b>>2];b=f[b>>2]|0;if(b|0)f[b+52>>2]=c;if((f[19125]|0)==(a|0))f[19125]=b;eKa()}b=ZP(a)|0;b=Ob[f[a+12>>2]&255](a)|0|b;c=f[a+92>>2]|0;if(c|0)Xe(c);if(!d)Xe(a);return b|0}function NL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+32|0;c=e;d=f[a>>2]|0;if((f[a+8>>2]|0)-d>>4>>>0<b>>>0){TE(c,b,(f[a+4>>2]|0)-d>>4,a+8|0);QE(a,c);z0(c)}u=e;return}function OL(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>>>(KIa(f[c>>2]|0)|0));break}case 2:{e=f[d>>2]|0;d=f[d+4>>2]|0;b=c;Ysa(a,Bna(e|0,d|0,EBa(f[b>>2]|0,f[b+4>>2]|0)|0)|0,J);break}default:Ka()}return}function PL(a){a=a|0;var b=0,c=0;c=u;u=u+48|0;b=c;if(f[18711]|0)Vea(76684,22166)|0;kca(b,a);y=0;ia(340,b|0);a=y;y=0;if(!(a&1)?(y=0,ia(341,b|0),a=y,y=0,!(a&1)):0){SY(b);u=c;return}c=Pa()|0;SY(b);$a(c|0)}function QL(a){a=a|0;var b=0,c=0;c=u;u=u+48|0;b=c;if(f[18711]|0)Vea(76684,22205)|0;kca(b,a);y=0;ia(342,b|0);a=y;y=0;if(!(a&1)?(y=0,ia(341,b|0),a=y,y=0,!(a&1)):0){SY(b);u=c;return}c=Pa()|0;SY(b);$a(c|0)}function RL(a,b){a=a|0;b=b|0;b=OO(a,b)|0;if((b|0)!=(a+4|0))jC(a,b);return}function SL(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;c=(Asa(f[c>>2]|0)|0)+16|0;if(!(f[c>>2]|0))Na(48789,48740,203,48819);else{e=a+120|0;c=a+124|0;g=(f[c>>2]|0)+-1|0;d=(1<<(g&31)&f[(f[e>>2]|0)+(g>>>5<<2)>>2]|0)!=0&1;f[c>>2]=g;c=a+104|0;MF(e,c);b[c>>0]=d;return}}function TL(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=(f[a+4>>2]|0)-(f[a>>2]|0)>>4;while(1){d=c+-1|0;if((c|0)<=0)break;c=f[a>>2]|0;e=tJa(f[c+(d<<4)>>2]|0)|0;c=f[c+(d<<4)+4>>2]|0;if(e){Sv(b,c);c=d;continue}else{GK(b,c)|0;c=d;continue}}return}function UL(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;a=a+8|0;a=Ob[f[(f[a>>2]|0)+4>>2]&255](a)|0;d=(kf(c,d,a,a+288|0,g,e,0)|0)-a|0;if((d|0)<288)f[b>>2]=((d|0)/12|0|0)%12|0;return}function VL(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;a=a+8|0;a=Ob[f[(f[a>>2]|0)+4>>2]&255](a)|0;d=(ef(c,d,a,a+288|0,g,e,0)|0)-a|0;if((d|0)<288)f[b>>2]=((d|0)/12|0|0)%12|0;return}function WL(a,b){a=a|0;b=b|0;var c=0,d=0;d=(Sra(a)|0)+12|0;d=(Sra(f[d>>2]|0)|0)+16|0;d=FR(f[d>>2]|0)|0;c=(Sra(a)|0)+16|0;c=d-(FR(f[c>>2]|0)|0)|0;f[b>>2]=c;return Bja(a)|0}function XL(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;Xka(d)}b=f[a>>2]|0;if(b|0)rka(f[f[a+16>>2]>>2]|0,b,((f[a+12>>2]|0)-b|0)/24|0);return}function YL(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=a+16|0;g=f[e>>2]|0;h=a+36|0;i=a+24|0;do if(g){if((g|0)!=(c|0)){f[h>>2]=(f[h>>2]|0)+1;f[i>>2]=2;b[a+54>>0]=1;break}if((f[i>>2]|0)==2)f[i>>2]=d}else{f[e>>2]=c;f[i>>2]=d;f[h>>2]=1}while(0);return}function ZL(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=f[b>>2];f[a+4>>2]=f[b+4>>2];f[a+8>>2]=f[b+8>>2];c=0;while(1){if((c|0)==3)break;f[b+(c<<2)>>2]=0;c=c+1|0}c=a+12|0;a=b+12|0;f[c>>2]=f[a>>2];f[c+4>>2]=f[a+4>>2];f[c+8>>2]=f[a+8>>2];c=0;while(1){if((c|0)==3)break;f[a+(c<<2)>>2]=0;c=c+1|0}return}function _L(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;RI(c);y=0;ya(144,a|0,c|0,b|0);b=y;y=0;if(b&1){d=Pa()|0;zta(c);$a(d|0)}else{zta(c);u=d;return}}function $L(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;RI(c);y=0;ya(143,a|0,c|0,b|0);b=y;y=0;if(b&1){d=Pa()|0;zta(c);$a(d|0)}else{zta(c);u=d;return}}function aM(a){a=a|0;if(!a)return;else{aM(f[a>>2]|0);aM(f[a+4>>2]|0);$Ja(a);return}}function bM(a,b){a=a|0;b=b|0;if(!b)return;else{bM(a,f[b>>2]|0);bM(a,f[b+4>>2]|0);$Ja(b);return}}function cM(a,b,c){a=a|0;b=b|0;c=c|0;if(c<<24>>24){y=0;b=ua(162,a|0,b|0)|0;a=y;y=0;if(!(a&1))if(!b)return;else{y=0;ja(2044,b|0,67509);y=0;a=ab(0)|0;lDa(a)}}else{y=0;ja(2044,1,67466);y=0}a=ab(0)|0;lDa(a)}function dM(a){a=a|0;var b=0;cJa(a);b=a+4|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;f[b+24>>2]=0;cJa(a+32|0);f[a+40>>2]=0;f[a+44>>2]=0;f[a+48>>2]=0;gua(a+52|0);b=a+64|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;n[a+80>>2]=1.0;return}function eM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[d>>2]>>(KIa(f[c>>2]|0)|0));break}case 2:{e=f[d>>2]|0;d=f[d+4>>2]|0;b=c;Ysa(a,Lka(e|0,d|0,EBa(f[b>>2]|0,f[b+4>>2]|0)|0)|0,J);break}default:Ka()}return}function fM(a){a=a|0;var c=0,d=0,e=0;b[a>>0]=0;b[a+1>>0]=0;cJa(a+4|0);$la(a+8|0,0,0);$la(a+12|0,-1,0);c=a+16|0;f[c>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;y=0;d=la(153,0)|0;e=y;y=0;if(e&1){e=Pa()|0;g_(c);$a(e|0)}else{f[a+4>>2]=d;return}}function gM(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(d,1958,b);Gd(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(d,1959,b);return}function hM(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=f[b>>2];f[a+4>>2]=f[b+4>>2];f[a+8>>2]=f[b+8>>2];c=0;while(1){if((c|0)==3)break;f[b+(c<<2)>>2]=0;c=c+1|0}a=a+12|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[a+(c<<2)>>2]=0;c=c+1|0}return}function iM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[d>>2]<<(KIa(f[c>>2]|0)|0));break}case 2:{e=f[d>>2]|0;d=f[d+4>>2]|0;b=c;Ysa(a,gna(e|0,d|0,EBa(f[b>>2]|0,f[b+4>>2]|0)|0)|0,J);break}default:Ka()}return}function jM(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Nqa(c);y=0;a=oa(59,a|0,b|0,c|0)|0;b=y;y=0;if(b&1){d=Pa()|0;D8(c);$a(d|0)}else{D8(c);u=d;return a|0}return 0}function kM(a){a=a|0;if(!a)return;else{kM(f[a>>2]|0);kM(f[a+4>>2]|0);$Ja(a);return}}function lM(a){a=a|0;if(!a)return;else{lM(f[a>>2]|0);lM(f[a+4>>2]|0);$Ja(a);return}}function mM(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(32)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];gua(e+20|0);b[a+8>>0]=1;return}function nM(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;d=gKa(F8(3)|0)|0;d=l6(d,y4(75716)|0)|0;a=l6(d,Bea(a)|0)|0;PDa(b,l6(a,F8(0)|0)|0);u=c;return f[b>>2]|0}function oM(a){a=a|0;var c=0,e=0,g=0;cJa(a);$la(a+4|0,0,0);$la(a+8|0,65535,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;d[c+12>>1]=0;b[c+14>>0]=0;y=0;e=la(153,0)|0;g=y;y=0;if(g&1){g=Pa()|0;VZ(c);$a(g|0)}else{f[a>>2]=e;return}}function pM(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;a=a+8|0;a=Ob[f[f[a>>2]>>2]&255](a)|0;d=(kf(c,d,a,a+168|0,g,e,0)|0)-a|0;if((d|0)<168)f[b>>2]=((d|0)/12|0|0)%7|0;return}function qM(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;a=a+8|0;a=Ob[f[f[a>>2]>>2]&255](a)|0;d=(ef(c,d,a,a+168|0,g,e,0)|0)-a|0;if((d|0)<168)f[b>>2]=((d|0)/12|0|0)%7|0;return}function rM(a){a=+a;var b=0,c=0,d=0,e=0,g=0;p[s>>3]=a;b=f[s>>2]|0;c=f[s+4>>2]|0;d=Bna(b|0,c|0,52)|0;d=(d&2047)+-1011|0;if((d|0)>63)return +a;else{g=(d|0)<12;e=Bna(-1,-1,d|0)|0;e=g?-1:e;d=g?2147483647:J;f[s>>2]=b&~e;f[s+4>>2]=c&~d;return +((e&b|0)==0&(d&c|0)==0?a:+p[s>>3])}return 0.0}function sM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;ov(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function tM(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;Xka(d)}d=f[a>>2]|0;rka(f[a+12>>2]|0,d,((f[a+8>>2]|0)-d|0)/24|0)}return}function uM(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;e=a+104|0;g=a+124|0;h=(f[g>>2]|0)+-1|0;if(!(b[e>>0]|0))d=(1<<(h&31)&f[(f[a+120>>2]|0)+(h>>>5<<2)>>2]|0)!=0&1;else d=1;b[e>>0]=d;f[g>>2]=h;d=f[c+8>>2]|0;if(xFa(f[d+4>>2]|0)|0)g1(a,d)|0;qO(c);return}function vM(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(d,1845,b);Od(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(d,1846,b);return}function wM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((OO(a+48|0,b)|0)!=(a+52|0))Na(31583,31619,118,31643);VU(a,b,c);if(!((d|0)!=0?(f[d+4>>2]|0)==(f[b+4>>2]|0):0))wm(a,b);return}function xM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=SN(a,d)|0;if((e|0)==(a+4|0))ska(f[b>>2]|0,f[d>>2]|0,0);else ira(f[c>>2]|0,f[(f[e+24>>2]|0)+-4>>2]|0);return}function yM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;Dv(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function zM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;if(!b)d=0;else d=Kka(f[d>>2]|0,b)|0;f[a>>2]=d;c=d+(c<<4)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b<<4);return}function AM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;f[e>>2]=c;Xwa(a);f[a+24>>2]=b;y=0;ja(1728,a|0,e|0);c=y;y=0;if(c&1){e=Pa()|0;Rua(a);$a(e|0)}else{u=d;return}}function BM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;Pn(a+44|0,b);d=a+104|0;EO(d,Pqa(b)|0);d=f[d>>2]|0;c=(f[a+108>>2]|0)-d>>2;while(1){if((c|0)<=0)break;e=d;f[e>>2]=0;c=c+-1|0;d=e+4|0}KB(a+16|0,b+36|0);return}function CM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;kv(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function DM(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;a:do if(!(b[a+44>>0]|0)){e=0;while(1){if((e|0)>=(d|0))break a;h=f[(f[a>>2]|0)+52>>2]|0;g=oHa(b[c>>0]|0)|0;if((Xb[h&255](a,g)|0)==-1)break a;e=e+1|0;c=c+1|0}}else e=Jca(c,1,d,f[a+32>>2]|0)|0;while(0);return e|0}function EM(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;f[c>>2]=b;b=UAa(a,0)|0;if(jha(f[b>>2]|0,f[18943]|0)|0){b=UAa(a,2)|0;b=gKa(f[b>>2]|0)|0;l6(b,y4(c)|0)|0;u=d;return}else Na(23245,51343,1466,23262)}function FM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;f[a>>2]=b;e=a+4|0;f[e>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;b=gKa(f[d>>2]|0)|0;y=0;ja(71,e|0,b|0);d=y;y=0;if(d&1){c=Pa()|0;F4(e);$a(c|0)}if(b|0)S0(f[e>>2]|0,c|0,b|0)|0;return}function GM(a,b){a=a|0;b=b|0;var c=0,d=0;d=JT()|0;l6(gKa(a)|0,d)|0;a=Bea(f[18790]|0)|0;c=Vn(f[b>>2]|0)|0;mD(d,c,AL(a,Vn(f[b+8>>2]|0)|0)|0);return}function HM(a,b){a=a|0;b=b|0;if(Xha(f[a>>2]|0,b)|0)Na(24084,19319,1144,32588);else return JF(a,f[b+8>>2]|0,f[a+4>>2]|0)|0;return 0}function IM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if(!(((b|0)!=0?(e=xAa(b)|0,(e|0)!=0):0)?!(pJa(f[e+8>>2]|0)|0):0))e=kaa(f[a>>2]|0,b)|0;f[e+8>>2]=f[c>>2];if(d|0){AW(e+12|0,d);Do(e)}return e|0}function JM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=e}}}else Px(a,b-d|0);while(0);return}function KM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;xv(c,a,b,e);u=d;return (f[c>>2]|0)+20|0}function LM(a,b){a=a|0;b=b|0;var c=0,d=0;if(!a){b=rc(b)|0;return b|0}if(b>>>0>4294967231){f[2619]=12;b=0;return b|0}c=ji(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(c|0){b=c+8|0;return b|0}c=rc(b)|0;if(!c){b=0;return b|0}d=f[a+-4>>2]|0;d=(d&-8)-((d&3|0)==0?8:4)|0;rq(c|0,a|0,(d>>>0<b>>>0?d:b)|0)|0;Xe(a);b=c;return b|0}function MM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=b+16|0;d=f[c>>2]|0;e=a+16|0;do if(d)if((d|0)==(b|0)){d=gKa(a)|0;f[e>>2]=d;e=f[c>>2]|0;Mb[f[(f[e>>2]|0)+12>>2]&4095](e,d);break}else{d=Ob[f[(f[d>>2]|0)+8>>2]&255](d)|0;f[e>>2]=d;break}else f[e>>2]=0;while(0);return}function NM(a,b,c){a=a|0;b=b|0;c=c|0;af(a,b,c);return}function OM(a,c,d){a=a|0;c=c|0;d=d|0;b[a+24>>0]=0;rO(a);iA(d,Vea(BY(76852,c)|0,59831)|0)|0;return}function PM(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0;j=u;u=u+128|0;h=j;f[h>>2]=0;i=h+4|0;f[i>>2]=a;f[h+44>>2]=a;g=h+8|0;f[g>>2]=(a|0)<0?-1:a+2147483647|0;f[h+76>>2]=-1;z9(h,0);c=Ke(h,c,1,d,e)|0;if(b|0)f[b>>2]=a+((f[i>>2]|0)+(f[h+108>>2]|0)-(f[g>>2]|0));u=j;return c|0}function QM(a,b){a=a|0;b=b|0;var c=0,d=0;c=OO(a+60|0,b)|0;if((c|0)==(a+64|0)){a=f[b+4>>2]|0;if(!a)Na(47680,47491,190,47700);else d=a}else{d=gKa(f[a+32>>2]|0)|0;d=YV(d,f[c+20>>2]|0)|0}return d|0}function RM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);CR(b,d);return}function SM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+32|0;e=c+16|0;g=c;d=f[a+4>>2]|0;uAa(g,b);f[e>>2]=f[g>>2];f[e+4>>2]=f[g+4>>2];f[e+8>>2]=f[g+8>>2];f[e+12>>2]=f[g+12>>2];b=FO(a,e)|0;b=iea(f[a>>2]|0,d,b)|0;u=c;return b|0}function TM(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(32)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];f[e+20>>2]=0;f[e+24>>2]=0;f[e+28>>2]=0;b[a+8>>0]=1;return}function UM(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a>>2]|0;c=a+4|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-4|0;f[c>>2]=e;d=e}OS(a+12|0);_V(a+24|0);return}function VM(a,b){a=a|0;b=b|0;var c=0;switch(f[b+8>>2]|0){case 2:{yk(a,gKa(f[b+20>>2]|0)|0,b);c=bga(b+16|0,0)|0;qk(a,f[(f[c>>2]|0)+4>>2]|0,b);break}case 3:case 1:case 0:break;default:Ka()}return}function WM(a){a=a|0;var b=0;b=EP(a,f[18703]|0)|0;if(!((b|0)!=74812?(f[b+16>>2]|0)>>>0<=a>>>0:0))b=74812;return b|0}function XM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;e=c;d=wD(a,e,b+16|0)|0;lN(a,f[e>>2]|0,d,b);u=c;return}function YM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=e}}}else Ux(a,b-d|0);while(0);return}function ZM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>3;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<3)|0;while(1){if((c|0)==(a|0))break a;e=c+-8|0;f[g>>2]=e;c=e}}}else Xw(a,b-d|0);while(0);return}function _M(a){a=a|0;var b=0;Ofa(a);f[a>>2]=9584;b=a+140|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;f[b+24>>2]=0;n[a+168>>2]=1.0;a=a+172|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function $M(a){a=a|0;if(!a)return;else{$M(f[a>>2]|0);$M(f[a+4>>2]|0);$Ja(a);return}}function aN(a,b,c){a=a|0;b=b|0;c=c|0;Ewa(a,c);bwa(a,b);jma(a+-16+16|0,b);bwa(a,0);Ewa(a,0);return}function bN(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Gra(c);y=0;a=oa(54,a|0,b|0,c|0)|0;b=y;y=0;if(b&1){d=Pa()|0;D8(c);$a(d|0)}else{D8(c);u=d;return a|0}return 0}function cN(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,1287,b);Hd(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,1288,b);return}function dN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=e}}}else ax(a,b-d|0);while(0);return}function eN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>4;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<4)|0;while(1){if((c|0)==(a|0))break a;e=c+-16|0;f[g>>2]=e;c=e}}}else mx(a,b-d|0);while(0);return}function fN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;a:do if((b|0)!=(c|0)){e=a+4|0;a=f[e>>2]|0;d=a-c|0;if(d){S0(b|0,c|0,d|0)|0;a=f[e>>2]|0}c=b+(((d|0)/12|0)*12|0)|0;while(1){if((a|0)==(c|0))break a;b=a+-12|0;f[e>>2]=b;a=b}}while(0);return}function gN(a){a=a|0;var b=0,c=0;b=Pza(a)|0;do if(!b){a=YAa(a)|0;if(a|0){b=Pza(f[a+12>>2]|0)|0;if(b|0)break;b=f[a+16>>2]|0;if(b|0?(c=Pza(b)|0,c|0):0){b=c;break}}b=0}while(0);return b|0}function hN(a,b){a=a|0;b=b|0;var c=0;Xwa(a);c=a+24|0;gua(c);f[a+36>>2]=0;y=0;ja(1727,a|0,b|0);b=y;y=0;if(b&1){b=Pa()|0;Cta(c);Rua(a);$a(b|0)}else return}function iN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;f[e>>2]=c;Xwa(a);f[a+24>>2]=b;y=0;ja(298,a|0,e|0);c=y;y=0;if(c&1){e=Pa()|0;Rua(a);$a(e|0)}else{u=d;return}}function jN(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+32|0;d=c;b=c+4|0;f[d>>2]=a;Ywa(b);y=0;ja(1196,b|0,d|0);a=y;y=0;if(a&1){d=Pa()|0;Rua(b);$a(d|0)}else{d=f[b+24>>2]|0;Rua(b);u=c;return d|0}return 0}function kN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a:do if((b|0)!=(c|0)){g=a+4|0;a=f[g>>2]|0;d=a-c|0;e=d>>2;if(e){S0(b|0,c|0,d|0)|0;a=f[g>>2]|0}d=b+(e<<2)|0;while(1){if((a|0)==(d|0))break a;b=a+-4|0;f[g>>2]=b;a=b}}while(0);return}function lN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=b;f[c>>2]=d;b=f[f[a>>2]>>2]|0;if(b){f[a>>2]=b;d=f[c>>2]|0}kr(f[a+4>>2]|0,d);a=a+8|0;f[a>>2]=(f[a>>2]|0)+1;return}function mN(a){a=+a;var b=0,c=0,d=0,e=0,g=0;d=u;u=u+16|0;b=d;c=d+8|0;p[b>>3]=a;e=Mra(a)|0;g=J&2147483647;if(g>>>0>2146435072|(g|0)==2146435072&e>>>0>0){e=EAa(b)|0;g=c;f[g>>2]=e;f[g+4>>2]=J|524288;a=+iIa(c);u=d;return +a}else Na(39011,39045,117,40031);return +(0.0)}function nN(a,c,d){a=a|0;c=c|0;d=d|0;b[a+24>>0]=0;rO(a);zz(d,Vea(BY(76852,c)|0,59831)|0)|0;return}function oN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=JT()|0;l6(gKa(f[f[a>>2]>>2]|0)|0,d)|0;a=Bea(f[18829]|0)|0;mD(d,b,AL(AL(a,f[18812]|0)|0,c)|0);return}function pN(a,b){a=a|0;b=b|0;var c=0,d=0;le(a,b);d=f[b>>2]|0;c=f[d>>2]|0;if(aJa(c)|0){JJ(a,86,b);c=f[d>>2]|0}if(nJa(c)|0)JJ(a,87,b);return}function qN(a){a=a|0;var b=0,c=0,d=0;d=u;u=u+16|0;b=d;f[b>>2]=a;c=f[18704]|0;if((WM(a)|0)==74812){b=EN(74808,b)|0;f[b>>2]=c;u=d;return c|0}else Na(19502,19552,89,19571);return 0}function rN(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=c;while(1){if((e|0)==(f|0)){h=7;break}if((a|0)==(d|0)){a=-1;break}c=b[a>>0]|0;g=b[e>>0]|0;if(c<<24>>24<g<<24>>24){a=-1;break}if(g<<24>>24<c<<24>>24){a=1;break}e=e+1|0;a=a+1|0}if((h|0)==7)a=(a|0)!=(d|0)&1;return a|0}function sN(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;f[d>>2]=0;if((a|0)!=(c|0)){e=b[a>>0]|0;if(e<<24>>24==114){f[d>>2]=4;e=a+1|0;a=e;c=4;e=b[e>>0]|0}else c=0;if(e<<24>>24==86){c=c|2;f[d>>2]=c;e=a+1|0;a=e;e=b[e>>0]|0}if(e<<24>>24==75){f[d>>2]=c|1;a=a+1|0}}return a|0}function tN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Ota(f[a+4>>2]|0)|0;f[d+8>>2]=c;c=sra(a,lj(b,1)|0)|0;f[d+12>>2]=c;c=sra(a,lj(b,2)|0)|0;f[d+16>>2]=c;GV(d);return d|0}function uN(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,1316,b);Pd(a,b);if(((f[c>>2]|0)+-1|0)>>>0<3)JJ(a,1317,b);return}function vN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=e}}}else gy(a,b-d|0);while(0);return}function wN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;g=gKa(F8(4)|0)|0;PDa(d,l6(l6(l6(l6(g,y4(75756)|0)|0,a)|0,b)|0,c)|0);u=e;return f[d>>2]|0}function xN(a,b){a=a|0;b=b|0;var c=0;do if(rCa(f[b+4>>2]|0)|0){c=b+8|0;if(pJa(f[c>>2]|0)|0?(c=(vK(a+36|0,c)|0)+4|0,(f[c>>2]|0)>0):0)break;Py(a,b)}while(0);return}function yN(a,b){a=a|0;b=b|0;if(!b)return;else{yN(a,f[b>>2]|0);yN(a,f[b+4>>2]|0);$Ja(b);return}}function zN(a){a=a|0;var b=0,c=0,d=0,e=0;f[a>>2]=17452;d=a+8|0;e=a+12|0;c=0;while(1){b=f[d>>2]|0;if(c>>>0>=(f[e>>2]|0)-b>>2>>>0)break;b=f[b+(c<<2)>>2]|0;if(b|0)aga(b)|0;c=c+1|0}zta(a+144|0);JR(d);return}function AN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=u;u=u+16|0;h=e+4|0;g=e;a=a+4|0;i=f[a>>2]|0;PDa(h,E3(b|0?b:c)|0);Un(i,f[h>>2]|0)|0;c=f[a>>2]|0;PDa(g,d);Un(c,f[g>>2]|0)|0;u=e;return}function BN(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;f[a+12>>2]=0;f[a+16>>2]=74544;do if(c)if(c>>>0<29&(b[74656]|0)==0){b[74656]=1;e=74544;break}else{e=nV(c<<2)|0;break}else e=0;while(0);f[a>>2]=e;d=e+(d<<2)|0;f[a+8>>2]=d;f[a+4>>2]=d;f[a+12>>2]=e+(c<<2);return}function CN(a,c){a=a|0;c=c|0;var d=0,e=0;e=Jta(f[c>>2]|0,79356)|0;d=a+36|0;f[d>>2]=e;e=Ob[f[(f[e>>2]|0)+24>>2]&255](e)|0;c=a+44|0;f[c>>2]=e;d=f[d>>2]|0;d=(Ob[f[(f[d>>2]|0)+28>>2]&255](d)|0)&1;b[a+53>>0]=d;if((f[c>>2]|0)>8)l2(68165);else return}function DN(a,c){a=a|0;c=c|0;var d=0,e=0;e=Jta(f[c>>2]|0,79348)|0;d=a+36|0;f[d>>2]=e;e=Ob[f[(f[e>>2]|0)+24>>2]&255](e)|0;c=a+44|0;f[c>>2]=e;d=f[d>>2]|0;d=(Ob[f[(f[d>>2]|0)+28>>2]&255](d)|0)&1;b[a+53>>0]=d;if((f[c>>2]|0)>8)l2(68165);else return}function EN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d+8|0;e=d;f[e>>2]=b;Xv(c,a,f[b>>2]|0,e);u=d;return (f[c>>2]|0)+20|0}function FN(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Nna(c,a);y=0;ja(2015,c|0,b|0);b=y;y=0;if(b&1){d=Pa()|0;Rua(c);$a(d|0)}else{Rua(c);u=d;return}}function GN(){var a=0,c=0,d=0;do if((f[2591]|0)>=0?(NLa()|0)!=0:0){if((b[10363]|0)!=10?(a=f[2577]|0,a>>>0<(f[2576]|0)>>>0):0){f[2577]=a+1;b[a>>0]=10;break}rJ()|0}else d=3;while(0);do if((d|0)==3){if((b[10363]|0)!=10?(c=f[2577]|0,c>>>0<(f[2576]|0)>>>0):0){f[2577]=c+1;b[c>>0]=10;break}rJ()|0}while(0);return}function HN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>>>0<=(f[c>>2]|0)>>>0&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,(e>>>0<c>>>0|((e|0)==(c|0)?(f[d>>2]|0)>>>0<=(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function IN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>>>0>=(f[c>>2]|0)>>>0&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,(e>>>0>c>>>0|((e|0)==(c|0)?(f[d>>2]|0)>>>0>=(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function JN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;if(!(pJa(f[b+4>>2]|0)|0)?(e=yAa(f[b+12>>2]|0)|0,f[c>>2]=e,e|0):0){b=f[b+8>>2]|0;e=fj(a+68|0,c)|0;f[e>>2]=b}u=d;return}function KN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;g=u;u=u+16|0;e=g;f[e>>2]=b;if(_qa(a,b)|0)Na(34024,33266,138,34055);else{b=nV(20)|0;Koa(b,c,d);e=Hy(a,e)|0;f[e>>2]=b;u=g;return}}function LN(a,b){a=a|0;b=b|0;var c=0;c=nV(36)|0;y=0;ja(594,c+8|0,b|0);b=y;y=0;if(b&1){b=Pa()|0;$Ja(c);$a(b|0)}else{f[c+4>>2]=a;b=f[a>>2]|0;f[c>>2]=b;f[b+4>>2]=c;f[a>>2]=c;c=a+8|0;f[c>>2]=(f[c>>2]|0)+1;return}}function MN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>>>0<(f[c>>2]|0)>>>0&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,(e>>>0<c>>>0|((e|0)==(c|0)?(f[d>>2]|0)>>>0<(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function NN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>>>0>(f[c>>2]|0)>>>0&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,(e>>>0>c>>>0|((e|0)==(c|0)?(f[d>>2]|0)>>>0>(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function ON(a,c,d){a=a|0;c=c|0;d=d|0;b[a+24>>0]=0;rO(a);RA(d,Vea(BY(76852,c)|0,59831)|0)|0;return}function PN(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;a=a+c|0;if(eCa(a)|0){c=a;f[c>>2]=d;f[c+4>>2]=e}else{c=a;a=c;b[a>>0]=d;b[a+1>>0]=d>>8;b[a+2>>0]=d>>16;b[a+3>>0]=d>>24;d=c+4|0;b[d>>0]=e;b[d+1>>0]=e>>8;b[d+2>>0]=e>>16;b[d+3>>0]=e>>24}return}function QN(a){a=a|0;if(!a)return;else{QN(f[a>>2]|0);QN(f[a+4>>2]|0);$Ja(a);return}}function RN(a){a=a|0;if(!a)return;else{RN(f[a>>2]|0);RN(f[a+4>>2]|0);$Ja(a);return}}function SN(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;c=eQ(b,f[a>>2]|0,a)|0;if((c|0)!=(a|0)?!(Iva(f[b>>2]|0,f[c+16>>2]|0)|0):0)a=c;return a|0}function TN(a,b){a=a|0;b=b|0;var c=0;l$(a,29111);Xsa(a);c=UAa(b,2)|0;Tba(a,f[c>>2]|0);zya(a);l$(a,29114);zya(a);gP(a,40);b=UAa(b,1)|0;Cg(a,f[b>>2]|0);gP(a,41);return}function UN(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;a:do if(!(b[a+44>>0]|0)){e=0;while(1){if((e|0)>=(d|0))break a;h=f[(f[a>>2]|0)+52>>2]|0;g=gKa(f[c>>2]|0)|0;if((Xb[h&255](a,g)|0)==-1)break a;e=e+1|0;c=c+4|0}}else e=Jca(c,4,d,f[a+32>>2]|0)|0;while(0);return e|0}function VN(a){a=a|0;var b=0;ooa(a);f[a>>2]=9400;gua(a+60|0);b=a+72|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;gua(a+96|0);gua(a+108|0);return}function WN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;f[c>>2]=b;d=a+12|0;e=f[d>>2]|0;if((e|0)==(f[a+16>>2]|0))XC(a+8|0,c);else{f[e>>2]=b;f[d>>2]=(f[d>>2]|0)+4}$b[f[(f[b>>2]|0)+8>>2]&255](b,a,f[a>>2]|0);u=g;return}function XN(a){a=a|0;var b=0;b=a+144|0;zt(a,Sj(b)|0);zt(a,Og(b)|0);zt(a,ph(b,13)|0);zt(a,ph(b,14)|0);return}function YN(a){a=a|0;var c=0,d=0,e=0;c=a+92|0;if(!(f[c>>2]&8)){f[a+24>>2]=0;f[a+20>>2]=0;f[a+28>>2]=0;d=(b[a+98>>0]|0)==0;e=f[(d?a+56|0:a+32|0)>>2]|0;d=e+(f[(d?a+60|0:a+52|0)>>2]|0)|0;f[a+8>>2]=e;f[a+12>>2]=d;f[a+16>>2]=d;f[c>>2]=8;a=1}else a=0;return a|0}function ZN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;e=c;b=cua(b+144|0)|0;bV(e,0,a);d=b+8|0;f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];f[b+4>>2]=a;u=c;return b|0}function _N(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e+4|0;d=e;if(f[18711]|0)Vea(Vea(Vea(76684,21500)|0,b)|0,20502)|0;dCa(d,b);f[c>>2]=f[d>>2];hw(a,c);u=e;return}function $N(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;c=e+4|0;d=e;if(f[18711]|0)Vea(Vea(Vea(76684,21571)|0,b)|0,20502)|0;dCa(d,b);f[c>>2]=f[d>>2];iw(a,c);u=e;return}function aO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+32|0;c=e+16|0;d=e;if(!(b<<24>>24))Ysa(d,-1,-1);else uAa(d,-1);f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];d=FO(a,c)|0;u=e;return d|0}function bO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)<=(f[c>>2]|0)&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,((e|0)<(c|0)|((e|0)==(c|0)?(f[d>>2]|0)>>>0<=(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function cO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>=(f[c>>2]|0)&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,((e|0)>(c|0)|((e|0)==(c|0)?(f[d>>2]|0)>>>0>=(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function dO(a,b){a=a|0;b=b|0;var c=0,d=0;c=5;while(1){if((a|0)==(b|0))break;d=f[a>>2]|0;a:do if(!c)c=0;else switch(d|0){case 0:{c=0;break a}case 5:break a;default:{c=(c|0)==5?d:(c|0)==(d|0)?c:0;break a}}while(0);a=a+4|0}return c|0}function eO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0;e=(f[b+4>>2]|0)-(f[b>>2]|0)>>2;d=0;a:while(1){if((d|0)==(e|0))break;g=d+1|0;c=g;while(1){if((c|0)==(e|0)){d=g;continue a}h=f[b>>2]|0;t1(a,f[h+(d<<2)>>2]|0,f[h+(c<<2)>>2]|0);c=c+1|0}}return}function fO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;switch(b<<24>>24){case 4:case 2:case 1:break;case 8:{if((c|0)!=5)hk(a,y9(c)|0,8,d,61883);break}default:xR(a,61945,d)}return}function gO(){var a=0;pea();y=0;za(7);a=y;y=0;if(a&1){a=Pa()|0;m1(75856);$a(a|0)}else return}function hO(a){a=a|0;var b=0,c=0,d=0;b=f[18633]|0;d=f[18632]|0;c=b-d>>2;a:do if(c>>>0>=a>>>0){if(c>>>0>a>>>0){a=d+(a<<2)|0;while(1){if((b|0)==(a|0))break a;d=b+-4|0;f[18633]=d;b=d}}}else Ew(a-c|0);while(0);return}function iO(a){a=a|0;var b=0,c=0,d=0,e=0;b=a+64|0;c=f[b>>2]|0;if(c){y=0;d=la(f[(f[a>>2]|0)+24>>2]|0,a|0)|0;e=y;y=0;if(e&1){e=Pa()|0;ML(c)|0;$a(e|0)}if(!(ML(c)|0)){f[b>>2]=0;a=(d|0)==0?a:0}else a=0}else a=0;return a|0}function jO(){var a=0,b=0,c=0,d=0;d=u;u=u+16|0;c=d;a=f[18830]|0;if(!a){a4(c);a=f[c>>2]|0;f[c>>2]=0;b=f[18830]|0;f[18830]=a;if(!b)f[c>>2]=0;else{Cha(b);$Ja(b);f[c>>2]=0;a=f[18830]|0}}u=d;return a|0}function kO(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(24)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];rJa(e+20|0);b[a+8>>0]=1;return}function lO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)<(f[c>>2]|0)&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,((e|0)<(c|0)|((e|0)==(c|0)?(f[d>>2]|0)>>>0<(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function mO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)>(f[c>>2]|0)&1);break}case 2:{e=f[d+4>>2]|0;b=c;c=f[b+4>>2]|0;uAa(a,((e|0)>(c|0)|((e|0)==(c|0)?(f[d>>2]|0)>>>0>(f[b>>2]|0)>>>0:0))&1);break}default:Ka()}return}function nO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);tZ(b,d);return}function oO(a,c,e,g){a=a|0;c=c|0;e=e|0;g=g|0;a:do if(a|0)switch(c|0){case -2:{b[a>>0]=e;break a}case -1:{d[a>>1]=e;break a}case 0:{f[a>>2]=e;break a}case 1:{f[a>>2]=e;break a}case 3:{c=a;f[c>>2]=e;f[c+4>>2]=g;break a}default:break a}while(0);return}function pO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;a=b;while(1){if((d|0)==(e|0)){h=7;break}if((a|0)==(c|0)){a=-1;break}b=f[a>>2]|0;g=f[d>>2]|0;if((b|0)<(g|0)){a=-1;break}if((g|0)<(b|0)){a=1;break}d=d+4|0;a=a+4|0}if((h|0)==7)a=(a|0)!=(c|0)&1;return a|0}function qO(a){a=a|0;var b=0,c=0;if((f[(f[a+8>>2]|0)+4>>2]|0)!=5){c=f[a+16>>2]|0;if(c){b=f[(f[a+12>>2]|0)+4>>2]|0;c=f[c+4>>2]|0;if((b|0)!=(c|0)?!((rCa(b)|0)&(c|0)==5):0){b=(rCa(c)|0)&(b|0)==5;b=b?c:0}}else b=0}else b=5;f[a+4>>2]=b;return}function rO(a){a=a|0;a=a+16|0;if(!(gKa(f[a>>2]|0)|0))Vea(76852,59876)|0;else{Vea(76852,59838)|0;a=f[a>>2]|0;gKa(a)|0;K2(76852,f[a>>2]|0)|0;Vea(76852,59873)|0}return}function sO(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=b;b=(Qt(a,d)|0)==0;u=c;return b|0}function tO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;d=g+4|0;e=g;f[d>>2]=b;f[e>>2]=c;if(!a){g=zb(4)|0;f[g>>2]=0;vFa(g);ub(g|0,464,22)}else{e=Rb[f[(f[a>>2]|0)+24>>2]&127](a,d,e)|0;u=g;return e|0}return 0}function uO(a,b){a=a|0;b=b|0;var c=0,d=0;c=ota(f[a+4>>2]|0)|0;d=yg(a,lj(b,1)|0)|0;f[c+8>>2]=d;b=sra(a,lj(b,2)|0)|0;f[c+12>>2]=b;_la(c,1);Faa(c);return c|0}function vO(a,b){a=a|0;b=b|0;var c=0,d=0;c=ota(f[a+4>>2]|0)|0;d=yg(a,lj(b,1)|0)|0;f[c+8>>2]=d;b=sra(a,lj(b,2)|0)|0;f[c+12>>2]=b;_la(c,0);Faa(c);return c|0}function wO(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(40)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];gxa(e+24|0);b[a+8>>0]=1;return}function xO(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=b;y=0;c=la(150,16)|0;d=y;y=0;if(!(d&1)){f[c+4>>2]=0;f[c+8>>2]=0;f[c>>2]=6952;f[c+12>>2]=b;f[a+4>>2]=c;return}a=Pa()|0;if(b|0)$Ja(b);$a(a|0)}function yO(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;c=b;f[c>>2]=a;a=b+4|0;d=gKa(F8(2)|0)|0;d=l6(d,y4(75696)|0)|0;PDa(a,l6(d,y4(c)|0)|0);u=b;return f[a>>2]|0}function zO(a,b){a=a|0;b=b|0;var c=0,d=0;c=Isa(f[a+4>>2]|0)|0;f[c+4>>2]=1;d=sra(a,lj(b,1)|0)|0;f[c+8>>2]=d;b=sra(a,lj(b,2)|0)|0;f[c+12>>2]=b;Ena(c);return c|0}function AO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;f[d>>2]=c;e=a+(b*12|0)+4|0;g=f[e>>2]|0;if((g|0)==(f[a+(b*12|0)+8>>2]|0))XC(a+(b*12|0)|0,d);else{f[g>>2]=c;f[e>>2]=(f[e>>2]|0)+4}u=h;return}function BO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;d=u;u=u+16|0;e=d+4|0;g=d;f[g>>2]=f[b+8>>2];c=f[b+12>>2]|0;f[e>>2]=f[g>>2];vo(a,e,c,b);c=f[b+16>>2]|0;if(c|0)kp(a,(f[c+4>>2]|4|0)==5,b);u=d;return}function CO(a,b){a=a|0;b=b|0;var c=0,d=0;b=a+48|0;c=a+68|0;d=f[c>>2]|0;if((d|0)==(f[a+72>>2]|0))Jt(a+64|0,b);else{CF(d,b);f[c>>2]=(f[c>>2]|0)+12}return}function DO(a,c){a=a|0;c=c|0;b[a+24>>0]=0;rO(a);DA(Vea(BY(76852,c)|0,59831)|0)|0;return}function EO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e>>2;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+(b<<2)|0;while(1){if((c|0)==(a|0))break a;e=c+-4|0;f[g>>2]=e;c=e}}}else Ty(a,b-d|0);while(0);return}function FO(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;if(rCa(c)|0){a=cua(f[a>>2]|0)|0;d=a+8|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];f[a+4>>2]=c;return a|0}else Na(24344,46550,258,24375);return 0}function GO(a){a=a|0;mA(f[a+4>>2]|0);return}function HO(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;if(i9(b,f[a+24>>2]|0)|0){a=f[a+32>>2]|0;b=Qta(f[b+12>>2]|0)|0;f[c>>2]=b;c=EN(a,c)|0;f[c>>2]=(f[c>>2]|0)+1}u=d;return}function IO(a,b){a=a|0;b=b|0;b=OO(a,b)|0;if((b|0)!=(a+4|0)){O2(a+12|0,f[b+20>>2]|0);XF(a,b)}return}function JO(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0;g=u;u=u+16|0;h=g;e=iJ(c)|0;d=a+4|0;a=f[d>>2]|0;PDa(h,e);Un(a,f[h>>2]|0)|0;a=0;while(1){if((a|0)>=(e|0))break;Zq(f[d>>2]|0,b[c+a>>0]|0)|0;a=a+1|0}u=g;return}function KO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;era(a,b);b=a+16|0;Ewa(b,c);hU(b,d);return}function LO(a,b){a=a|0;b=b|0;var c=0,d=0;b=b+8|0;c=EN(a+44|0,b)|0;f[c>>2]=(f[c>>2]|0)+1;c=a+56|0;if(!(QZ(c,f[b>>2]|0)|0)){d=f[a+64>>2]|0;a=EN(c,b)|0;f[a>>2]=d}return}function MO(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;Nza(b);$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function NO(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;Nza(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function OO(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;c=nS(b,f[a>>2]|0,a)|0;if((c|0)!=(a|0)?(f[c+16>>2]|0)>>>0<=b>>>0:0)a=c;return a|0}function PO(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(116)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[d>>2];tra(e+20|0,d+4|0);b[a+8>>0]=1;return}function QO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,Uya(f[d>>2]|0,f[c>>2]|0)|0);break}case 2:{b=c;Ysa(a,l3(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function RO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;eE(a,b);d=a+20|0;c=b+20|0;f[d>>2]=0;e=a+24|0;f[e>>2]=0;f[a+28>>2]=0;f[d>>2]=f[c>>2];d=b+24|0;f[e>>2]=f[d>>2];b=b+28|0;f[a+28>>2]=f[b>>2];f[b>>2]=0;f[d>>2]=0;f[c>>2]=0;return}function SO(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+12|0);b=y;y=0;if(b&1){d=Pa()|0;E$(c);$a(d|0)}else{E$(c);u=d;return}}function TO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;if(!b)d=0;else d=epa(f[d>>2]|0,b)|0;f[a>>2]=d;c=d+(c*24|0)|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+(b*24|0);return}function UO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,fza(f[d>>2]|0,f[c>>2]|0)|0);break}case 2:{b=c;Ysa(a,p3(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function VO(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,2)|0;X$(a,f[c>>2]|0,b,-1);zya(a);c=UAa(b,1)|0;l$(a,voa(gKa(f[c>>2]|0)|0)|0);zya(a);c=UAa(b,3)|0;X$(a,f[c>>2]|0,b,1);return}function WO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=a+4|0;c=f[g>>2]|0;e=f[a>>2]|0;d=c-e|0;a:do if(d>>>0>=b>>>0){if(d>>>0>b>>>0){a=e+b|0;while(1){if((c|0)==(a|0))break a;e=c+-1|0;f[g>>2]=e;c=e}}}else ez(a,b-d|0);while(0);return}function XO(a){a=a|0;var b=0,c=0,d=0,e=0;b=a+8|0;a:do if(f[b>>2]|0){c=f[a+4>>2]|0;d=(f[a>>2]|0)+4|0;e=f[c>>2]|0;f[e+4>>2]=f[d>>2];f[f[d>>2]>>2]=e;f[b>>2]=0;b=c;while(1){if((b|0)==(a|0))break a;e=f[b+4>>2]|0;$Ja(b);b=e}}while(0);return}function YO(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+24|0);b=y;y=0;if(b&1){d=Pa()|0;E$(c);$a(d|0)}else{E$(c);u=d;return}}function ZO(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+32|0;c=d;Pca(c,a,b);y=0;ja(1629,c|0,b+8|0);b=y;y=0;if(b&1){d=Pa()|0;E$(c);$a(d|0)}else{E$(c);u=d;return}}function _O(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;lqa(a,b);b=a+16|0;Ewa(b,c);a1(b,d);return}function $O(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=gKa(f[b+4>>2]|0)|0;if((f[a+8>>2]|0)>>>0<d>>>0)Jna(a,d);c=0;while(1){if((c|0)==(d|0))break;e=bga(b,c)|0;f[(f[a>>2]|0)+(c<<2)>>2]=f[e>>2];c=c+1|0}f[a+4>>2]=d;return}function aP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(28)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];b[a+8>>0]=1;return}function bP(a){a=a|0;var c=0,d=0,e=0,g=0;c=f[a+4>>2]|0;d=a+8|0;e=f[d>>2]|0;while(1){if((e|0)==(c|0))break;g=e+-4|0;f[d>>2]=g;e=g}d=f[a>>2]|0;do if(d|0){c=f[a+16>>2]|0;if((c|0)==(d|0)){b[c+112>>0]=0;break}else{$Ja(d);break}}while(0);return}function cP(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;d=gKa(F8(3)|0)|0;a=l6(l6(d,y4(75700)|0)|0,a)|0;PDa(b,l6(a,F8(0)|0)|0);u=c;return f[b>>2]|0}function dP(a,b){a=a|0;b=b|0;var c=0,d=0;d=(f[b+4>>2]|0)-(f[b>>2]|0)>>2;if((f[a+8>>2]|0)>>>0<d>>>0)Jna(a,d);c=0;while(1){if((c|0)==(d|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=f[(f[b>>2]|0)+(c<<2)>>2];c=c+1|0}f[a+4>>2]=d;return}function eP(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=f[b>>2]|0;f[d>>2]=0;f[d+4>>2]=f[b>>2];b=(aI(a+40|0,d)|0)==0;u=c;return b|0}function fP(a){a=a|0;var b=0;while(1){if(!a)break;b=f[a>>2]|0;Zva(a+8|0);$Ja(a);a=b}return}function gP(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;Xia(a,c);g=a+4|0;if(c<<24>>24==125&(b[a>>0]|0)==0){d=a+12|0;e=(f[d>>2]|0)+-1|0;if((b[(f[g>>2]|0)+e>>0]|0)==59)f[d>>2]=e}else d=a+12|0;GD(a,1);a=f[g>>2]|0;g=f[d>>2]|0;f[d>>2]=g+1;b[a+g>>0]=c;return}function hP(a){a=a|0;var b=0,c=0,d=0;d=u;u=u+16|0;b=d;c=gKa(F8(2)|0)|0;c=l6(c,y4(75748)|0)|0;if(Ata(a)|0)a=Fca()|0;PDa(b,l6(c,a)|0);u=d;return f[b>>2]|0}function iP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);HQ(b,d);return}function jP(a,c){a=a|0;c=c|0;var d=0,e=0;do if((a|0)!=-1){e=c+4|0;d=f[e>>2]|0;if(!d){yL(c)|0;d=f[e>>2]|0;if(!d){a=-1;break}}if(d>>>0>((f[c+44>>2]|0)+-8|0)>>>0){d=d+-1|0;f[e>>2]=d;b[d>>0]=a;f[c>>2]=f[c>>2]&-17}else a=-1}else a=-1;while(0);return a|0}function kP(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=f[b>>2]|0;f[d>>2]=1;f[d+4>>2]=f[b>>2];b=(aI(a+40|0,d)|0)==0;u=c;return b|0}function lP(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;XV(b);$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function mP(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;XV(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function nP(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0;b=u;u=u+16|0;j=b+4|0;a=b;f[j>>2]=c;f[a>>2]=g;h=zl(c,d,j,g,h,a)|0;f[e>>2]=f[j>>2];f[i>>2]=f[a>>2];u=b;return h|0}function oP(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;d=gKa(F8(3)|0)|0;a=l6(l6(d,y4(75716)|0)|0,a)|0;PDa(b,l6(a,F8(0)|0)|0);u=c;return f[b>>2]|0}function pP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0;g=u;u=u+16|0;h=g;e=a+4|0;a=f[e>>2]|0;PDa(h,d);Un(a,f[h>>2]|0)|0;a=0;while(1){if((a|0)==(d|0))break;Zq(f[e>>2]|0,b[c+a>>0]|0)|0;a=a+1|0}u=g;return}function qP(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);PT(b,c);return}function rP(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0;b=u;u=u+16|0;j=b+4|0;a=b;f[j>>2]=c;f[a>>2]=g;h=Vk(c,d,j,g,h,a)|0;f[e>>2]=f[j>>2];f[i>>2]=f[a>>2];u=b;return h|0}function sP(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0;b=u;u=u+16|0;j=b+4|0;a=b;f[j>>2]=c;f[a>>2]=g;h=Uo(c,d,j,g,h,a)|0;f[e>>2]=f[j>>2];f[i>>2]=f[a>>2];u=b;return h|0}function tP(a,b){a=a|0;b=b|0;var c=0;l$(a,24704);c=UAa(b,1)|0;CI(a,f[c>>2]|0);l$(a,24709);c=UAa(b,2)|0;Esa(a,f[c>>2]|0);l$(a,72371);b=UAa(b,3)|0;CI(a,f[b>>2]|0);return}function uP(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0;b=u;u=u+16|0;j=b+4|0;a=b;f[j>>2]=c;f[a>>2]=g;h=Hl(c,d,j,g,h,a)|0;f[e>>2]=f[j>>2];f[i>>2]=f[a>>2];u=b;return h|0}function vP(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;if(!(hJa(f[a>>2]|0)|0))Na(51333,51343,426,53174);a=f[a+8>>2]|0;if(!(gKa(f[a+4>>2]|0)|0)){PDa(b,0);a=f[b>>2]|0}else{a=efa(a)|0;a=f[a>>2]|0;f[b>>2]=a}u=c;return a|0}function wP(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;if(f[b>>2]|0){f[c>>2]=b;d=a+12|0;e=f[d>>2]|0;if(e>>>0<(f[a+16>>2]|0)>>>0){f[e>>2]=b;f[d>>2]=(f[d>>2]|0)+4}else XC(a+8|0,c)}u=g;return}function xP(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[a>>2]|0;d=f[c>>2]|0;c=(f[c+4>>2]|0)-d>>2;a=f[b>>2]|0;b=0;while(1){if(b>>>0>=c>>>0){a=5;break}if(bDa(f[f[d+(b<<2)>>2]>>2]|0,a)|0){a=6;break}b=b+1|0}if((a|0)==5)Ka();else if((a|0)==6)return b|0;return 0}function yP(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,42598,0)|0;b=b+8|0;if(!(f[b>>2]|0))c3(f[a>>2]|0,41)|0;else{zea(a);kF(a,f[b>>2]|0);x_(a)}return}function zP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;e=Y(f[a+136>>2]|0,d>>>0<c>>>0?d:c)|0;e=(f[a+172>>2]|0)+(e+(c>>>0<d>>>0?d:c))|0;g=b[e>>0]|0;b[e>>0]=g<<24>>24==-1?-1:(g&255)+1&255;a=f[a+184>>2]|0;c=a+(c<<2)|0;f[c>>2]=(f[c>>2]|0)+1;d=a+(d<<2)|0;f[d>>2]=(f[d>>2]|0)+1;return}function AP(a){a=a|0;var b=0;b=a+4|0;ND(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function BP(a){a=a|0;if(((((((b[a+26>>0]|0)==0?(b[a+27>>0]|0)==0:0)?!(lAa(f[a+36>>2]|0,f[a+48>>2]|0)|0):0)?(b[a+76>>0]|0)==0:0)?(b[a+77>>0]|0)==0:0)?!(lAa(f[a+60>>2]|0,f[a+72>>2]|0)|0):0)?(b[a+78>>0]|0)==0:0)a=(b[a+79>>0]|0)!=0;else a=1;return a|0}function CP(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;Csa(d)}$Ja(f[a>>2]|0);f[a+8>>2]=0;f[c>>2]=0;f[a>>2]=0}return}function DP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(24)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];cJa(e+20|0);b[a+8>>0]=1;return}function EP(a,b){a=a|0;b=b|0;var c=0;c=74812;a:while(1){while(1){if(!b)break a;if((f[b+16>>2]|0)>>>0>=a>>>0)break;b=f[b+4>>2]|0}c=b;b=f[b>>2]|0}return c|0}function FP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=c+4|0;while(1){if(Fqa(d)|0)break;cM(a,f[c>>2]|0,b[e>>0]|0)}return}function GP(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;n[b+16>>2]=1.0;b=(f[c>>2]|0)+20|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function HP(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;jv(b);$Ja(b)}$Ja(f[a>>2]|0)}return}function IP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;era(a,b);b=a+16|0;Ewa(b,c);k1(b,d);return}function JP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ok(uc(f[a+20>>2]|0,b,c)|0,a,b,c)|0;a=f[a+8>>2]|0;if(a)d=p5(b,d,Rb[f[(f[a>>2]|0)+8>>2]&127](a,b,c)|0)|0;return d|0}function KP(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;rJa(a+4|0);f[a+8>>2]=c;Bia(a+12|0);gua(a+40|0);c=a+52|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;f[c+12>>2]=0;n[a+68>>2]=1.0;f[a+72>>2]=0;return}function LP(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-20|0;f[c>>2]=d;Sma(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function MP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);YW(b,d);return}function NP(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;if(lR(b,f[a+24>>2]|0)|0){a=f[a+28>>2]|0;b=Fha(f[b+8>>2]|0)|0;f[c>>2]=b;c=EN(a,c)|0;f[c>>2]=(f[c>>2]|0)+1}u=d;return}function OP(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;zca(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function PP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=u;u=u+16|0;e=d;h=b;g=f[h+4>>2]|0;b=e;f[b>>2]=f[h>>2];f[b+4>>2]=g;$pa(e,c)|0;b=f[e+4>>2]|0;c=a;f[c>>2]=f[e>>2];f[c+4>>2]=b;u=d;return}function QP(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;a=wK(a+44|0,b+8|0)|0;f[d>>2]=b;Pz(c+8|0,a,b,d);u=c;return}function RP(a){a=a|0;var b=0;if(!(f[f[a>>2]>>2]|0)){b=osa(f[(f[a+4>>2]|0)+4>>2]|0)|0;f[f[a>>2]>>2]=b;b=a+8|0;AW((f[f[a>>2]>>2]|0)+12|0,f[f[b>>2]>>2]|0);f[f[b>>2]>>2]=f[f[a>>2]>>2]}return}function SP(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=u;u=u+16|0;d=e;cJa(d);a=f[a+28>>2]|0;if(!a){c=d;a=f[d>>2]|0}else{a=i_(a,b)|0;f[d>>2]=a;c=d}if(!(pJa(a)|0)){a=EI(b)|0;f[c>>2]=a}u=e;return a|0}function TP(a,b){a=a|0;b=b|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;y=0;ja(604,a|0,b|0);c=y;y=0;if(c&1){b=Pa()|0;E4(a);$a(b|0)}else c=0;while(1){if((c|0)==(b|0))break;f[(f[a>>2]|0)+(c<<2)>>2]=c;c=c+1|0}return}function UP(a){a=a|0;if(!a)return;else{UP(f[a>>2]|0);UP(f[a+4>>2]|0);$Ja(a);return}}function VP(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(24)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[d>>2];f[e+20>>2]=f[d+4>>2];b[a+8>>0]=1;return}function WP(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;if(bDa(a,f[b+8>>2]|0)|0)hA(b,c,d,e);else{a=f[a+8>>2]|0;Tb[f[(f[a>>2]|0)+20>>2]&15](a,b,c,d,e,g)}return}function XP(a){a=a|0;var b=0,c=0;b=gKa(a)|0;if(hJa(f[a>>2]|0)|0?(c=UAa(a,0)|0,jha(f[c>>2]|0,f[18936]|0)|0):0){if((yja(b)|0)>>>0>3){a=UAa(a,3)|0;a=(Ata(f[a>>2]|0)|0)^1}else a=0;return a|0}Na(24641,51343,1175,24674);return 0}function YP(a,b){a=a|0;b=b|0;bwa(a,b);X0(a,b);bwa(a,0);return}function ZP(a){a=a|0;var b=0;if(!a){if(!(f[2726]|0))a=0;else a=ZP(f[2726]|0)|0;iKa();b=f[19125]|0;if(b)do{if((f[b+20>>2]|0)>>>0>(f[b+28>>2]|0)>>>0)a=uK(b)|0|a;b=f[b+56>>2]|0}while((b|0)!=0);eKa()}else a=uK(a)|0;return a|0}function _P(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=b+8|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];b=FO(a+32|0,d)|0;u=c;return b|0}function $P(a,b){a=a|0;b=b|0;b=OO(a,b)|0;if((b|0)!=(a+4|0))XF(a,b);return}function aQ(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-20|0;f[c>>2]=d;Sma(d)}$Ja(f[a>>2]|0)}return}function bQ(a,b,c){a=a|0;b=b|0;c=c|0;zD(a,b);y=0;ja(210,a+16|0,c|0);c=y;y=0;if(c&1){c=Pa()|0;zta(a);$a(c|0)}else return}function cQ(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+48|0;c=d;if((gKa(f[b+16>>2]|0)|0)>>>0>=3){Pp(c,b,a+44|0,a+104|0,uya(f[a+40>>2]|0)|0);Zpa(c)}u=d;return}function dQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;era(a,b);b=a+16|0;Ewa(b,c);x1(b,d);return}function eQ(a,b,c){a=a|0;b=b|0;c=c|0;a=f[a>>2]|0;a:while(1){while(1){if(!b)break a;if(!(Iva(f[b+16>>2]|0,a)|0))break;b=f[b+4>>2]|0}c=b;b=f[b>>2]|0}return c|0}function fQ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;g=u;u=u+16|0;d=g+4|0;e=g;f[d>>2]=b;f[e>>2]=c;if(!a){g=zb(4)|0;f[g>>2]=0;vFa(g);ub(g|0,464,22)}else{$b[f[(f[a>>2]|0)+24>>2]&255](a,d,e);u=g;return}}function gQ(a,b,c){a=a|0;b=b|0;c=c|0;a:while(1){while(1){if(!b)break a;if((f[b+16>>2]|0)>=(a|0))break;b=f[b+4>>2]|0}c=b;b=f[b>>2]|0}return c|0}function hQ(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+64|0;c=d;oL(c);a=f[a+36>>2]|0;gKa(a)|0;y=0;ya(72,c+16|0,b|0,a|0);b=y;y=0;if(b&1){d=Pa()|0;dfa(c);$a(d|0)}else{dfa(c);u=d;return}}function iQ(a,b){a=a|0;b=b|0;if(!((!(U3(a,f[b+8>>2]|0)|0)?!(U3(a,f[b+12>>2]|0)|0):0)?!(U3(a,f[b+16>>2]|0)|0):0))_Y(a,b);return}function jQ(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;zca(d)}$Ja(f[a>>2]|0)}return}function kQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);_0(b,d);return}function lQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;era(a,b);b=a+16|0;Ewa(b,c);f2(b,d);return}function mQ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=a+4|0;while(1){if((b|0)==(c|0))break;d=f[a>>2]|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[a>>2]=(f[a>>2]|0)+12;b=b+12|0}return}function nQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);pR(b,d);return}function oQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);qS(b,d);return}function pQ(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;u4(b);b=(f[c>>2]|0)+24|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function qQ(a,b){a=a|0;b=b|0;var c=0,d=0;CP(a);f[a>>2]=f[b>>2];c=b+4|0;f[a+4>>2]=f[c>>2];d=b+8|0;f[a+8>>2]=f[d>>2];f[d>>2]=0;f[c>>2]=0;f[b>>2]=0;return}function rQ(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;mU(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function sQ(a,b){a=a|0;b=b|0;var c=0,d=0;d=(mCa(b)|0)==0;c=f[a>>2]|0;if(d)K2(c,b)|0;else c3(K2(c3(c,34)|0,b)|0,34)|0;return f[a>>2]|0}function tQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);u0(b,d);return}function uQ(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=f[b>>2];b=(Qt(a,d)|0)==0;u=c;return b|0}function vQ(a){a=a|0;var b=0,c=0,d=0;c=f[18849]|0;b=a;d=c;while(1){f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;f[d+12>>2]=0;n[d+16>>2]=1.0;b=b+-1|0;if(!b)break;else d=d+20|0}f[18849]=c+(a*20|0);return}function wQ(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;Sja(c+16|0,b);Zta(f[c+52>>2]|0);bwa(a,0);return}function xQ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=u;u=u+48|0;e=d+32|0;g=d;h=d+16|0;Ysa(h,b,c);Bca(g,h);f[e>>2]=f[g>>2];f[e+4>>2]=f[g+4>>2];f[e+8>>2]=f[g+8>>2];f[e+12>>2]=f[g+12>>2];AI(a,e);u=d;return}function yQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=u;u=u+256|0;f=g;if((c|0)>(d|0)&(e&73728|0)==0){c=c-d|0;Kz(f|0,b|0,(c>>>0<256?c:256)|0)|0;if(c>>>0>255){d=c;do{Nwa(a,f,256);d=d+-256|0}while(d>>>0>255);c=c&255}Nwa(a,f,c)}u=g;return}function zQ(a){a=a|0;var b=0,c=0;if(!(SX(a)|0)){b=BT()|0;c=UAa(b,1)|0;c=gKa(f[c>>2]|0)|0;l6(c,gKa(a)|0)|0;a=b}return a|0}function AQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);wQ(b,d);return}function BQ(){var a=0;f[18632]=0;f[18633]=0;f[18634]=0;b[74656]=0;y=0;za(39);a=y;y=0;if(a&1){a=Pa()|0;JR(74528);$a(a|0)}else{s8(28);return}}function CQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,4)|0;if(!(f[d>>2]&4)){if((c|0)<69)c=c+2e3|0;else c=(c|0)<100?c+1900|0:c;f[a>>2]=c+-1900}return}function DQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,4)|0;if(!(f[d>>2]&4)){if((c|0)<69)c=c+2e3|0;else c=(c|0)<100?c+1900|0:c;f[a>>2]=c+-1900}return}function EQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=10;Pta(a,c,10)|0;SBa(a+10|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function FQ(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(24)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[f[d>>2]>>2];f[e+20>>2]=0;b[a+8>>0]=1;return}function GQ(a){a=a|0;var b=0;b=a+4|0;HE(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function HQ(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;mga(c+16|0,b);hQ(c,b);bwa(a,0);return}function IQ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b;d=f[e+4>>2]|0;c=a;f[c>>2]=f[e>>2];f[c+4>>2]=d;if((a|0)!=(b|0))tq(a+8|0,f[b+8>>2]|0,f[b+12>>2]|0);return a|0}function JQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);rY(b,d);return}function KQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);sY(b,d);return}function LQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);tY(b,d);return}function MQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);uY(b,d);return}function NQ(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);mW(b,c);return}function OQ(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;mU(d)}$Ja(f[a>>2]|0)}return}function PQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);P0(b,d);return}function QQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=9;Pta(a,c,9)|0;SBa(a+9|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function RQ(a,b){a=a|0;b=b|0;var c=0,d=0;c=Oqa(gKa(b)|0)|0;d=CJa(c)|0;X$(a,f[d>>2]|0,b,-1);zya(a);gP(a,61);zya(a);c=DJa(c)|0;X$(a,f[c>>2]|0,b,1);return}function SQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=nqa(f[a>>2]|0)|0;f[a+24>>2]=f[b>>2];f[a+4>>2]=e;f[a+28>>2]=c;dP(a+8|0,d);return a|0}function TQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=8;Pta(a,c,8)|0;SBa(a+8|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function UQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=5;Pta(a,c,5)|0;SBa(a+5|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function VQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=4;Pta(a,c,4)|0;SBa(a+4|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function WQ(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=3;Pta(a,c,3)|0;SBa(a+3|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function XQ(a,b){a=a|0;b=b|0;var c=0,d=0;c=jpa(gKa(b)|0)|0;d=DJa(c)|0;l$(a,gKa(f[d>>2]|0)|0);zya(a);gP(a,61);zya(a);c=CJa(c)|0;X$(a,f[c>>2]|0,b,1);return}function YQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);VY(b,d);return}function ZQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);$0(b,d);return}function _Q(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;u4(b);b=(f[c>>2]|0)+24|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function $Q(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;d=g;D6(a);e=b+12|0;b=b+16|0;while(1){b=f[b>>2]|0;c=b;if((c|0)==(e|0))break;f[d>>2]=f[b+8>>2];BD(a,d);b=c+4|0}u=g;return a|0}function aR(a){a=a|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=7;Pta(a,73277,7)|0;SBa(a+7|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function bR(a){a=a|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=6;Pta(a,73690,6)|0;SBa(a+6|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function cR(a){a=a|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=2;Pta(a,73501,2)|0;SBa(a+2|0,0);c=a+12|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[c+(a<<2)>>2]=0;a=a+1|0}return}function dR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);gS(b,d);return}function eR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);cZ(b,d);return}function fR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+16|0;d=c+4|0;g=c;e=f[a+40>>2]|0;f[g>>2]=f[a+36>>2];f[d>>2]=f[g>>2];b=q3(e,d,b,0)|0;PDa(f[a>>2]|0,b);u=c;return}function gR(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;g=nV(24)|0;f[a>>2]=g;f[a+4>>2]=c+4;e=d;c=f[e+4>>2]|0;d=g+16|0;f[d>>2]=f[e>>2];f[d+4>>2]=c;b[a+8>>0]=1;return}function hR(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;hxa(b);b=(f[c>>2]|0)+20|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function iR(a){a=a|0;Cta(a+68|0);Cta(a+52|0);_6(a+40|0);Fda(a+28|0);Rua(a);return}function jR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);D_(b,d);return}function kR(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;a=a+4|0;while(1){if((b|0)==(c|0))break;g=b;e=f[g+4>>2]|0;d=f[a>>2]|0;f[d>>2]=f[g>>2];f[d+4>>2]=e;f[a>>2]=(f[a>>2]|0)+8;b=b+8|0}return}function lR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if((((a|0?(d=YAa(a)|0,d|0):0)?(e=eAa(f[d+8>>2]|0)|0,e|0):0)?(f[e+8>>2]|0)==15:0)?(c=Pza(f[e+12>>2]|0)|0,c|0):0)return ((f[c+8>>2]|0)==(b|0)?d:0)|0;return 0}function mR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);rS(b,d);return}function nR(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a+4>>2]|0;d=a+8|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;$Ja(b)}b=f[a>>2]|0;if(b|0)$Ja(b);return}function oR(a){a=a|0;var b=0;while(1){if(!a)break;b=f[a>>2]|0;Rua(a+8|0);$Ja(a);a=b}return}function pR(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;Aja(c+16|0,b);vZ(c,b);bwa(a,0);return}function qR(a){a=a|0;var b=0,c=0,d=0,e=0;c=f[a>>2]|0;if(c|0){d=a+4|0;while(1){b=f[d>>2]|0;if((b|0)==(c|0))break;e=b+-4|0;f[d>>2]=e;b=f[e>>2]|0;f[e>>2]=0;if(!b)continue;$Ja(b)}$Ja(f[a>>2]|0)}return}function rR(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,((f[d>>2]|0)>>>0)%((f[c>>2]|0)>>>0)|0);break}case 2:{b=c;Ysa(a,Bba(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function sR(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,((f[d>>2]|0)>>>0)/((f[c>>2]|0)>>>0)|0);break}case 2:{b=c;Ysa(a,Uxa(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function tR(a,b,c){a=a|0;b=b|0;c=c|0;era(a,b);b=a+16|0;Ewa(b,c);jZ(b,c);return}function uR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);uZ(b,d);return}function vR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);w1(b,d);return}function wR(a,b){a=+a;b=+b;a=+Uwa(a);return a>+Uwa(b)|0}function xR(a,c,d){a=a|0;c=c|0;d=d|0;b[a+24>>0]=0;rO(a);zz(d,Vea(Vea(76852,c)|0,59831)|0)|0;return}function yR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);NZ(b,d);return}function zR(a){a=a|0;var b=0,c=0,d=0;b=a+4|0;c=f[b>>2]|0;d=c>>>0<(f[a+8>>2]|0)>>>0;do if((f[a+76>>2]|0)<0)if(d){f[b>>2]=c+1;a=h[c>>0]|0;break}else{a=Caa(a)|0;break}else if(d){f[b>>2]=c+1;a=h[c>>0]|0;break}else{a=Caa(a)|0;break}while(0);return a|0}function AR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=gKa(F8(2)|0)|0;PDa(c,l6(l6(l6(e,y4(75720)|0)|0,a)|0,b)|0);u=d;return f[c>>2]|0}function BR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=gKa(F8(3)|0)|0;PDa(c,l6(l6(l6(e,y4(75724)|0)|0,a)|0,b)|0);u=d;return f[c>>2]|0}function CR(a,b){a=a|0;b=b|0;bwa(a,b);z4(a+-16+16|0,b);bwa(a,0);return}function DR(a,b){a=a|0;b=b|0;var c=0;if(b){c=NS(f[a+24>>2]|0,b)|0;if(!c)c=Pg(a,b)|0}else c=0;return c|0}function ER(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;e=gKa(F8(3)|0)|0;PDa(c,l6(l6(l6(e,y4(75732)|0)|0,b)|0,a)|0);u=d;return f[c>>2]|0}function FR(a){a=a|0;var b=0,c=0;c=_ra(a)|0;a=c+8|0;switch(f[c+4>>2]|0){case 1:{b=Sha(csa(a)|0,1)|0;break}case 2:{b=Sha(Eka(a)|0,2)|0;break}default:Ka()}return b|0}function GR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;f[c>>2]=b;d=a+52|0;e=f[d>>2]|0;if((e|0)==(f[a+56>>2]|0))XC(a+48|0,c);else{f[e>>2]=b;f[d>>2]=(f[d>>2]|0)+4}u=g;return}function HR(a){a=a|0;Xwa(a);b[a+24>>0]=1;b[a+25>>0]=0;b[a+26>>0]=1;gua(a+28|0);gua(a+40|0);gua(a+52|0);f[a+64>>2]=5;gua(a+68|0);return}function IR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=f[b+8>>2]|0;d=a+64|0;do if(c){e=f[d>>2]|0;c=f[c+4>>2]|0;if((e|0)==5){f[d>>2]=c;break}if((c|0)!=5)lk(a,c,e,b)}else f[d>>2]=0;while(0);return}function JR(a){a=a|0;var c=0,d=0,e=0,g=0;c=f[a>>2]|0;do if(c|0){d=a+4|0;e=f[d>>2]|0;while(1){if((e|0)==(c|0))break;g=e+-4|0;f[d>>2]=g;e=g}if((a+16|0)==(c|0)){b[a+128>>0]=0;break}else{$Ja(c);break}}while(0);return}function KR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;f[e>>2]=f[b+8>>2];b=f[b+4>>2]|0;f[d>>2]=f[e>>2];b=qea(a+32|0,d,b)|0;u=c;return b|0}function LR(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;hxa(b);b=(f[c>>2]|0)+20|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function MR(a,b,c){a=a|0;b=b|0;c=c|0;lqa(a,b);b=a+16|0;Ewa(b,c);$_(b,c);return}function NR(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;a=$ra(a)|0;b[a+8>>0]=c;eja(a+12|0,d,0)|0;f[a+16>>2]=e;f[a+20>>2]=g;f[a+24>>2]=h;f[a+4>>2]=i;Ica(a);return a|0}function OR(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;a=hta(a)|0;f[a+8>>2]=c;b[a+12>>0]=d;eja(a+16|0,e,0)|0;f[a+20>>2]=g;f[a+24>>2]=h;f[a+4>>2]=i;Fna(a);return a|0}function PR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b+16|0;c=b+20|0;d=f[c>>2]|0;b=f[e>>2]|0;while(1){if((b|0)==(d|0))break;TC(a,b);b=b+16|0}FA(a,f[e>>2]|0,f[c>>2]|0);return}function QR(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;i=f[a+4>>2]|0;h=i>>8;if(i&1)h=f[(f[d>>2]|0)+h>>2]|0;a=f[a>>2]|0;Tb[f[(f[a>>2]|0)+20>>2]&15](a,b,c,d+h|0,i&2|0?e:2,g);return}function RR(a,c,d,e,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;a=nua(f[a>>2]|0)|0;b[a+20>>0]=0;b[a+8>>0]=c;b[a+9>>0]=d&1;eja(a+12|0,e,0)|0;eja(a+16|0,g,0)|0;f[a+24>>2]=h;f[a+4>>2]=i;return a|0}function SR(a,b,c){a=a|0;b=b|0;c=c|0;if($F(b)|0)return (Bja(b)|0)==(c|0)|0;b=Pza(b)|0;if(!b)b=0;else b=(f[(f[a+44>>2]|0)+(f[b+8>>2]<<3)+4>>2]|0)==(c|0);return b|0}function TR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+48|0;d=c+32|0;e=c;g=c+16|0;uAa(g,b);qja(e,g);f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];AI(a,d);u=c;return}function UR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=kn(a,b+12|0)|0;d=b+16|0;if(!(f[d>>2]|0)){if(c)e=4}else if(c|(kn(a,d)|0))e=4;if((e|0)==4?(rta(a),f[b+4>>2]|0):0)Na(27282,27266,261,59366);return}function VR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);v2(b,d);return}function WR(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);PX(b,c);return}function XR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a+8|0;e=f[c>>2]|0;d=e+(b<<2)|0;a=b;b=e;while(1){f[b>>2]=0;a=a+-1|0;if(!a)break;else b=b+4|0}f[c>>2]=d;return}function YR(a,b){a=a|0;b=b|0;Ewa(a,b);mv(a,b);Ewa(a,0);return}function ZR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);xW(b,d);return}function _R(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);D2(b,d);return}function $R(a){a=a|0;Wz(f[a+4>>2]|0);return}function aS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Tsa(a,b);b=a+16|0;Ewa(b,c);n$(b,d);return}function bS(a){a=a|0;y=0;la(159,76684)|0;a=y;y=0;if(((!(a&1)?(y=0,la(225,76768)|0,a=y,y=0,!(a&1)):0)?(y=0,la(159,77020)|0,a=y,y=0,!(a&1)):0)?(y=0,la(225,77104)|0,a=y,y=0,!(a&1)):0)return;a=ab(0)|0;lDa(a)}function cS(a,b,c){a=a|0;b=b|0;c=c|0;era(a,b);b=a+16|0;Ewa(b,c);p$(b,c);return}function dS(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;Sb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0,n|0,o|0,p|0)}function eS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)%(f[c>>2]|0)|0);break}case 2:{b=c;Ysa(a,TG(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function fS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,(f[d>>2]|0)/(f[c>>2]|0)|0);break}case 2:{b=c;Ysa(a,LK(f[d>>2]|0,f[d+4>>2]|0,f[b>>2]|0,f[b+4>>2]|0)|0,J);break}default:Ka()}return}function gS(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;qla(c+16|0,b);De(c,b);bwa(a,0);return}function hS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=SN(a,b)|0;if((d|0)!=(a+4|0))b=(f[d+24>>2]|0)+-4|0;return bDa(f[b>>2]|0,f[c>>2]|0)|0}function iS(a,b){a=a|0;b=b|0;var c=0;l$(a,29114);zya(a);gP(a,40);c=UAa(b,1)|0;Cg(a,f[c>>2]|0);gP(a,41);zya(a);b=UAa(b,2)|0;Tba(a,f[b>>2]|0);return}function jS(a){a=a|0;var b=0,c=0;b=a+8|0;switch(f[a>>2]|0){case 2:{qAa(f[b>>2]|0);break}case 5:{c=f[b>>2]|0;if(c|0){Sma(c);$Ja(c)}break}default:{}}f[a>>2]=3;p[b>>3]=0.0;return}function kS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Ura(f[a>>2]|0)|0;dP(a+8|0,b);f[a+24>>2]=f[c>>2];f[a+32>>2]=0;f[a+28>>2]=d;return a|0}function lS(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);FS(b,c);return}function mS(a){a=a|0;var b=0,c=0;a=eAa(a)|0;if((((a|0)!=0?(f[a+8>>2]|0)==7:0)?(b=a+16|0,c=pAa(f[b>>2]|0)|0,(c|0)!=0):0)?(t4(csa(c+8|0)|0)|0)!=0:0)a=f[b>>2]|0;else a=0;return a|0}function nS(a,b,c){a=a|0;b=b|0;c=c|0;a:while(1){while(1){if(!b)break a;if((f[b+16>>2]|0)>>>0>=a>>>0)break;b=f[b+4>>2]|0}c=b;b=f[b>>2]|0}return c|0}function oS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c+-1|0)>>>0<12&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function pS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c+-1|0)>>>0<12&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function qS(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;p1(c,b);Fta(f[c+116>>2]|0);bwa(a,0);return}function rS(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;Jla(c+16|0,b);lla(c,b);bwa(a,0);return}function sS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(a-b>>2>>>0>=c>>>0){if(c|0){d=a;while(1){c=c+-1|0;f[d>>2]=f[b>>2];if(!c)break;else{b=b+4|0;d=d+4|0}}}}else do{c=c+-1|0;f[a+(c<<2)>>2]=f[b+(c<<2)>>2]}while((c|0)!=0);return a|0}function tS(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;if(pJa(f[b>>2]|0)|0)jz(c,a+24|0,b,b);u=c;return}function uS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;f[a>>2]=f[b>>2];d=f[b+4>>2]|0;f[a+4>>2]=d;e=b+8|0;g=f[e>>2]|0;f[a+8>>2]=g;c=a+4|0;if(!g)f[a>>2]=c;else{f[d+8>>2]=c;g=b+4|0;f[b>>2]=g;f[g>>2]=0;f[e>>2]=0}return}function vS(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0;g=nV(12)|0;f[a>>2]=g;f[a+4>>2]=c+8;f[g+8>>2]=f[e>>2];b[a+8>>0]=1;f[g+4>>2]=d;f[g>>2]=0;return}function wS(){var a=0,b=0,c=0;y=0;a=wa(50)|0;c=y;y=0;if(c&1){c=ab(0)|0;lDa(c)}if((a|0?(b=f[a>>2]|0,b|0):0)?(c=b+48|0,(f[c>>2]&-256|0)==1126902528?(f[c+4>>2]|0)==1129074247:0):0)eL(f[b+12>>2]|0);eL(RCa()|0)}function xS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=nV(16)|0;e=b;d=f[e+4>>2]|0;b=c+8|0;f[b>>2]=f[e>>2];f[b+4>>2]=d;f[c+4>>2]=a;b=f[a>>2]|0;f[c>>2]=b;f[b+4>>2]=c;f[a>>2]=c;b=a+8|0;f[b>>2]=(f[b>>2]|0)+1;return}function yS(a){a=a|0;var b=0,c=0;b=wAa(a)|0;do if(!b){a=mAa(a)|0;if(!a)Ka();else{c=aea(a)|0;break}}else c=R4(b)|0;while(0);return c|0}function zS(a){a=a|0;var b=0;b=a+4|0;eJ(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function AS(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;f[c>>2]=b;do if(!b){if((f[(f[a+8>>2]|0)+4>>2]|0)!=5){b=f[a+16>>2]|0;if(!b)break;if((f[(f[a+12>>2]|0)+4>>2]|0)!=5)break;if((f[b+4>>2]|0)!=5)break}f[c>>2]=5}while(0);return}function BS(a){a=a|0;f[a>>2]=9584;E4(a+184|0);F4(a+172|0);Sma(a+152|0);HCa(f[a+140>>2]|0);Xja(a);return}function CS(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+32|0;g=e;d=e+20|0;f[g>>2]=f[a+60>>2];f[g+4>>2]=0;f[g+8>>2]=b;f[g+12>>2]=d;f[g+16>>2]=c;if((Qza(Bb(140,g|0)|0)|0)<0){f[d>>2]=-1;a=-1}else a=f[d>>2]|0;u=e;return a|0}function DS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=f[a+(c<<2)>>2]|0;a=f[a+(d<<2)>>2]|0;if(e>>>0<=a>>>0)if((e|0)==(a|0)){a=f[b>>2]|0;a=(f[a+(c<<2)>>2]|0)>>>0<(f[a+(d<<2)>>2]|0)>>>0}else a=0;else a=1;return a|0}function ES(a){a=a|0;var b=0;while(1){if(!a)break;b=f[a>>2]|0;GAa(a+8|0);$Ja(a);a=b}return}function FS(a,b){a=a|0;b=b|0;var c=0;Ewa(a,b);c=a+-16|0;Zz(c+16|0,b);Ge(c,b);Ewa(a,0);return}function GS(a,b){a=a|0;b=b|0;b=Iza(b)|0;do if(b|0)if(pJa(f[b+4>>2]|0)|0){_la(b,0);jva(f[a+16>>2]|0,b)|0;break}else Na(32545,32558,225,32588);while(0);return}function HS(a,c){a=a|0;c=c|0;b[a+24>>0]=0;rO(a);zz(c,Vea(Vea(76852,61719)|0,59831)|0)|0;return}function IS(a,b,c){a=a|0;b=b|0;c=c|0;era(a,b);b=a+16|0;Ewa(b,c);U$(b,c);return}function JS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c+-1|0)>>>0<31&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function KS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,3)|0;b=f[d>>2]|0;if((c|0)<366&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function LS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c+-1|0)>>>0<31&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function MS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,3)|0;b=f[d>>2]|0;if((c|0)<366&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function NS(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;f[c>>2]=b;if(!a){d=zb(4)|0;f[d>>2]=0;vFa(d);ub(d|0,464,22)}else{c=Xb[f[(f[a>>2]|0)+24>>2]&255](a,c)|0;u=d;return c|0}return 0}function OS(a){a=a|0;var b=0;b=a+4|0;VH(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function PS(a){a=a|0;var b=0;while(1){if(!a)break;b=f[a>>2]|0;Kxa(a+8|0);$Ja(a);a=b}return}function QS(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;JJ(c,905,b);Ld(a,b);JJ(c,906,b);return}function RS(a){a=a|0;yG(a+32|0);wI(a+16|0);tM(a);return}function SS(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;Bsa(c);y=0;ua(110,a+88|0,b|0)|0;b=y;y=0;if(b&1){b=Pa()|0;$W(c);$a(b|0)}else{nha(a+32|0);$W(c);return}}function TS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a+4|0;e=f[c>>2]|0;d=e+(b<<2)|0;a=b;b=e;while(1){f[b>>2]=0;a=a+-1|0;if(!a)break;else b=b+4|0}f[c>>2]=d;return}function US(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<13&(b&4|0)==0)f[a>>2]=c+-1;else f[d>>2]=b|4;return}function VS(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<13&(b&4|0)==0)f[a>>2]=c+-1;else f[d>>2]=b|4;return}function WS(a,b){a=a|0;b=b|0;var c=0;c=f[b>>2]|0;b=a+4|0;while(1){b=f[b>>2]|0;if(!b){b=0;break}a=f[b+16>>2]|0;if(Iva(c,a)|0)continue;if(!(Iva(a,c)|0)){b=1;break}b=b+4|0}return b|0}function XS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;g=u;u=u+16|0;c=g;f[c>>2]=b;d=a+76|0;e=f[d>>2]|0;if((e|0)==(f[a+80>>2]|0))XC(a+72|0,c);else{f[e>>2]=b;f[d>>2]=(f[d>>2]|0)+4}u=g;return}function YS(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);Y_(b,c);return}function ZS(a,b,c){a=a|0;b=b|0;c=c|0;era(a,b);b=a+16|0;Ewa(b,c);H0(b,c);return}function _S(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,nBa(f[c>>2]|0)|0);break}case 2:{c=Fxa(f[c>>2]|0,f[c+4>>2]|0)|0;Ysa(a,c,((c|0)<0)<<31>>31);break}default:Ka()}return}function $S(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,52815,0)|0;zea(a);kF(a,f[b+8>>2]|0);kF(a,f[b+12>>2]|0);x_(a);return}function aT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);LZ(b,c);return}function bT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);MZ(b,c);return}function cT(a){a=a|0;NA(f[a+4>>2]|0);return}function dT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(bDa(a,f[b+8>>2]|0)|0)YL(b,c,d);else{a=f[a+8>>2]|0;dc[f[(f[a>>2]|0)+28>>2]&127](a,b,c,d)}return}function eT(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=xsa(f[a>>2]|0)|0;f[a+8>>2]=b;f[a+12>>2]=f[c>>2];dP(a+16|0,d);nZ(a);return a|0}function fT(a,b){a=a|0;b=b|0;var c=0;Ewa(a,b);c=a+-16|0;VA(c+16|0,b);xr(c,b);Ewa(a,0);return}function gT(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;c=gKa(F8(2)|0)|0;c=l6(c,y4(75776)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function hT(a){a=a|0;Cta(a+80|0);Cta(a+64|0);Cta(a+52|0);bxa(a+40|0);bxa(a+28|0);Rua(a);return}function iT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);ZZ(b,c);return}function jT(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;a:do if(!d)a=0;else{while(1){e=b[a>>0]|0;f=b[c>>0]|0;if(e<<24>>24!=f<<24>>24)break;d=d+-1|0;if(!d){a=0;break a}else{a=a+1|0;c=c+1|0}}a=(e&255)-(f&255)|0}while(0);return a|0}function kT(a){a=a|0;if(!a)return;else{kT(f[a>>2]|0);kT(f[a+4>>2]|0);$Ja(a);return}}function lT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,1)|0;b=f[d>>2]|0;if((c|0)<7&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function mT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<61&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function nT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<60&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function oT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,1)|0;b=f[d>>2]|0;if((c|0)<7&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function pT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<61&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function qT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<60&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function rT(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,GBa(f[c>>2]|0)|0);break}case 2:{c=Oxa(f[c>>2]|0,f[c+4>>2]|0)|0;Ysa(a,c,((c|0)<0)<<31>>31);break}default:Ka()}return}function sT(a){a=a|0;var b=0;b=nAa(a)|0;if(!b){a=eAa(a)|0;if(!a){a=0;b=0}else{a=RU(f[a+8>>2]|0)|0;b=1}}else{a=qHa(f[b+8>>2]|0)|0;b=1}return a&b|0}function tT(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;c=gKa(F8(2)|0)|0;c=l6(c,y4(75444)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function uT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);j_(b,c);return}function vT(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[a+(b<<2)>>2]=0;b=b+1|0}a=a+12|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[a+(b<<2)>>2]=0;b=b+1|0}return}function wT(a){a=a|0;aF(f[a+4>>2]|0);return}function xT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<24&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function yT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,2)|0;b=f[d>>2]|0;if((c|0)<24&(b&4|0)==0)f[a>>2]=c;else f[d>>2]=b|4;return}function zT(a){a=a|0;var b=0,c=0;f[a>>2]=9040;bha(a+60|0);Kja(a+48|0);c=a+44|0;b=f[c>>2]|0;f[c>>2]=0;if(b|0)$Ja(b);Uqa(a);return}function AT(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+4|0;e=f[d>>2]|0;f[a+4>>2]=c;b=eh(a,b)|0;f[d>>2]=e;return b|0}function BT(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;c=gKa(F8(2)|0)|0;c=l6(c,y4(75768)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function CT(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;c=gKa(F8(2)|0)|0;c=l6(c,y4(75448)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function DT(a){a=a|0;var b=0,c=0,d=0;b=nV(116)|0;y=0;c=ua(87,f[f[a+80>>2]>>2]|0,0)|0;d=y;y=0;if(d&1){d=Pa()|0;$Ja(b);$a(d|0)}else{yU(b,c,0);MW(a+16|0,b,-1);return b|0}return 0}function ET(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);fT(b,c);return}function FT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);tV(b,c);return}function GT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);uV(b,c);return}function HT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);E_(b,c);return}function IT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;h=f[a+4>>2]|0;g=h>>8;if(h&1)g=f[(f[c>>2]|0)+g>>2]|0;a=f[a>>2]|0;Jb[f[(f[a>>2]|0)+24>>2]&7](a,b,c+g|0,h&2|0?d:2,e);return}function JT(){var a=0,b=0,c=0;b=u;u=u+16|0;a=b;c=gKa(F8(2)|0)|0;c=l6(c,y4(75764)|0)|0;PDa(a,l6(c,F8(0)|0)|0);u=b;return f[a>>2]|0}function KT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);R_(b,c);return}function LT(a){a=a|0;var b=0;b=a+4|0;bI(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function MT(a){a=a|0;var b=0;b=a+4|0;jJ(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function NT(a,b){a=a|0;b=b|0;bwa(a,b);fja(a,b);nL(a,b);bwa(a,0);return}function OT(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a>>2]=f[b>>2];d=a+4|0;c=b+4|0;f[d>>2]=0;e=a+8|0;f[e>>2]=0;f[a+12>>2]=0;f[d>>2]=f[c>>2];d=b+8|0;f[e>>2]=f[d>>2];b=b+12|0;f[a+12>>2]=f[b>>2];f[b>>2]=0;f[d>>2]=0;f[c>>2]=0;return}function PT(a,b){a=a|0;b=b|0;Ewa(a,b);uw(a+-16+16|0,b);Ewa(a,0);return}function QT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);Z_(b,c);return}function RT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);__(b,c);return}function ST(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;Csa(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function TT(a){a=+a;var b=0,c=0,d=0,e=0;c=u;u=u+16|0;b=c;p[b>>3]=a;d=Mra(a)|0;e=J&2147483647;if(e>>>0>2146435072|(e|0)==2146435072&d>>>0>0){e=EAa(b)|0;J=J&1048575;u=c;return e|0}else Na(39011,39045,104,39066);return 0}function UT(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;JJ(c,1079,b);Id(a,b);JJ(c,1080,b);return}function VT(a,b){a=a|0;b=b|0;AA(a,b);y=0;ja(2057,a+12|0,b+12|0);b=y;y=0;if(b&1){b=Pa()|0;zta(a);$a(b|0)}else return}function WT(a,b){a=a|0;b=b|0;var c=0;c=f[a+4>>2]|0;if(c)a=bga(c+12|0,(jja(c)|0)+~b|0)|0;return f[a>>2]|0}function XT(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;f[c>>2]=b;b=a+132|0;if(f[b>>2]|0)Na(55225,54283,242,59063);Ql(a,c);if(!(f[b>>2]|0)){u=d;return}else Na(55225,54283,244,59063)}function YT(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,39145,0)|0;sQ(a,f[b+8>>2]|0)|0;zea(a);kF(a,f[b+12>>2]|0);x_(a);return}function ZT(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);o$(b,c);return}function _T(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);WV(b,c);return}function $T(a,b){a=a|0;b=b|0;JJ(a,327,b);Dd(a,b);JJ(a,328,b);return}function aU(a,b){a=a|0;b=b|0;var c=0,d=0;c=b+8|0;b=f[c>>2]|0;if(!(f[(f[a+36>>2]|0)+(b<<2)>>2]|0)){d=(f[a+24>>2]|0)+(b>>>5<<2)|0;f[d>>2]=f[d>>2]&~(1<<(b&31));b=f[c>>2]|0}d=(f[a+48>>2]|0)+(b<<2)|0;f[d>>2]=(f[d>>2]|0)+1;return}function bU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);G0(b,c);return}function cU(a,c){a=a|0;c=c|0;var d=0;do if(pJa(f[c+4>>2]|0)|0)a=0;else{if(!((b[a+97>>0]|0)==0?(b[a+44>>0]|0)!=0:0))d=4;if((d|0)==4?(f[(f[a+124>>2]|0)+(f[c+8>>2]<<2)>>2]|0)>>>0>1:0){a=0;break}a=1}while(0);return a|0}function dU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);bW(b,c);return}function eU(a,b){a=a|0;b=b|0;var c=0;c=nV(48)|0;s3(c,b);WN(a,c);return}function fU(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;zta(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function gU(a){a=+a;var b=0,c=0,d=0;d=u;u=u+16|0;b=d;c=d+4|0;n[b>>2]=a;if(((JAa(a)|0)&2147483647)>>>0>2139095040){b=rIa(b)|0|4194304;f[c>>2]=b;a=+hIa(c);u=d;return +a}else Na(39011,39045,111,40031);return +(0.0)}function hU(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;oy(c,b);hQ(c,b);bwa(a,0);return}function iU(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a>>2]|0;c=b+4|0;d=f[c>>2]|0;f[a>>2]=d;if(d|0)f[d+8>>2]=a;d=a+8|0;f[b+8>>2]=f[d>>2];e=f[d>>2]|0;f[((f[e>>2]|0)==(a|0)?e:e+4|0)>>2]=b;f[c>>2]=a;f[d>>2]=b;return}function jU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);S$(b,c);return}function kU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);T$(b,c);return}function lU(a,b){a=a|0;b=b|0;var c=0,d=0;if((f[a+8>>2]|0)>>>0<b>>>0)wY(a,b);d=a+4|0;c=f[d>>2]|0;while(1){if(c>>>0>=b>>>0)break;f[(f[a>>2]|0)+(c<<2)>>2]=0;c=c+1|0}f[d>>2]=b;return}function mU(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;Csa(d)}$Ja(f[a>>2]|0)}return}function nU(a){a=a|0;var b=0;b=zb(8)|0;y=0;ja(2049,b|0,a|0);a=y;y=0;if(a&1){a=Pa()|0;Oa(b|0);$a(a|0)}else{f[b>>2]=18196;ub(b|0,5800,318)}}function oU(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;while(1){a=f[a>>2]|0;if(!a){a=0;break}c=f[a+16>>2]|0;if((c|0)>(b|0))continue;if((c|0)>=(b|0)){a=1;break}a=a+4|0}return a|0}function pU(a){a=a|0;var b=0,c=0;f[a>>2]=6836;dW(a+100|0);rfa(a+88|0);c=a+80|0;b=f[c>>2]|0;f[c>>2]=0;if(b|0)$Ja(b);Uz(a+16|0);wva(a);return}function qU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Mqa(f[a>>2]|0)|0;f[a+4>>2]=d;f[a+24>>2]=f[b>>2];dP(a+8|0,c);return a|0}function rU(a,b){a=a|0;b=b|0;bwa(a,b);y6(a,b);bwa(a,0);return}function sU(a){a=a|0;xF(f[a+4>>2]|0);return}function tU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=d+16|0;d=1;while(1){if(d>>>0>=c>>>0)break;AW(e,sra(a,lj(b,d)|0)|0);d=d+1|0}return}function uU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);g0(b,c);return}function vU(a){a=a|0;var b=0;b=a+4|0;PJ(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function wU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;g=f[a+4>>2]|0;e=g>>8;if(g&1)e=f[(f[c>>2]|0)+e>>2]|0;a=f[a>>2]|0;dc[f[(f[a>>2]|0)+28>>2]&127](a,b,c+e|0,g&2|0?d:2);return}function xU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=d+8|0;d=2;while(1){if(d>>>0>=c>>>0)break;AW(e,sra(a,lj(b,d)|0)|0);d=d+1|0}return}function yU(a,c,d){a=a|0;c=c|0;d=d|0;ija(a);ija(a+24|0);ija(a+48|0);ija(a+72|0);f[a+96>>2]=0;f[a+100>>2]=-1;f[a+104>>2]=c;f[a+108>>2]=d;b[a+112>>0]=0;return}function zU(a,b){a=a|0;b=b|0;var c=0,d=0;c=b+4|0;d=f[b>>2]|0;f[d+4>>2]=f[c>>2];f[f[c>>2]>>2]=d;a=a+8|0;f[a>>2]=(f[a>>2]|0)+-1;iwa(b+8|0);$Ja(b);return}function AU(a){a=a|0;FC(f[a+4>>2]|0);return}function BU(a){a=a|0;var b=0;b=a+4|0;_J(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function CU(a){a=a|0;GO(a);return}function DU(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;zta(d)}$Ja(f[a>>2]|0)}return}function EU(a){a=a|0;var b=0;b=zb(8)|0;y=0;ja(2049,b|0,a|0);a=y;y=0;if(a&1){a=Pa()|0;Oa(b|0);$a(a|0)}else{f[b>>2]=18236;ub(b|0,5832,318)}}function FU(a,b){a=a|0;b=b|0;bwa(a,b);b7(a,b);bwa(a,0);return}function GU(a){a=a|0;var b=0,c=0,d=0;d=u;u=u+16|0;c=d;switch(a|0){case 0:{b=-64;break}case 1:{b=-1;break}case 2:{b=-2;break}case 3:{b=-3;break}case 4:{b=-4;break}default:Ka()}PDa(c,b);u=d;return f[c>>2]|0}function HU(a,b){a=a|0;b=b|0;var c=0;c=nV(48)|0;f_(c,b);WN(a,c);return}function IU(a,b){a=a|0;b=b|0;if((a|0)!=(b|0))tr(a,f[b>>2]|0,f[b+4>>2]|0);p[a+16>>3]=+p[b+16>>3];return}function JU(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(!((b|0)!=0?(d=xAa(b)|0,(d|0)!=0):0))d=kaa(f[a>>2]|0,b)|0;if(c|0){AW(d+12|0,c);Do(d)}return d|0}function KU(a){a=a|0;var b=0;b=xI(a+16|0)|0;return (b>>>0)%((f[a+8>>2]|0)-(f[a+4>>2]|0)>>2>>>0)|0|0}function LU(a){a=a|0;var b=0;b=a+4|0;gK(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function MU(a){a=a|0;var b=0;b=a+4|0;hK(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function NU(a){a=a|0;var b=0;b=a+4|0;iK(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function OU(a){a=a|0;var b=0;b=xI(f[a>>2]|0)|0;return f[a+28>>2]&b|0}function PU(a){a=a|0;var b=0;noa(a);f[a>>2]=6384;y=0;ua(72,a+4|0,26913)|0;b=y;y=0;if(b&1){b=Pa()|0;Dra(a);$a(b|0)}else return}function QU(a,c,d){a=a|0;c=c|0;d=d|0;f[a>>2]=c;f[a+4>>2]=c+144;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;c=a+20|0;f[c>>2]=f[d>>2];f[c+4>>2]=f[d+4>>2];f[c+8>>2]=f[d+8>>2];f[c+12>>2]=f[d+12>>2];b[a+36>>0]=0;return}function RU(a){a=a|0;switch(a|0){case 62:case 61:case 60:case 59:case 58:case 57:case 49:case 48:case 47:case 46:case 45:case 44:case 43:case 42:case 41:case 40:case 24:case 23:case 22:case 21:case 20:case 19:case 18:case 17:case 16:case 15:case 75:case 74:case 73:case 72:case 71:case 70:{a=1;break}default:a=0}return a|0}function SU(a){a=a|0;var b=0,c=0,d=0;d=a+4|0;b=f[d>>2]|0;c=f[b>>2]|0;f[d>>2]=c;if(c|0)f[c+8>>2]=a;d=a+8|0;f[b+8>>2]=f[d>>2];c=f[d>>2]|0;f[((f[c>>2]|0)==(a|0)?c:c+4|0)>>2]=b;f[b>>2]=a;f[d>>2]=b;return}function TU(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;JJ(c,149,b);ge(a,b);JJ(c,150,b);return}function UU(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=b+8|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];iv(a,d)|0;u=c;return}function VU(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;f[e>>2]=b;b=EN(a+48|0,e)|0;f[b>>2]=c;SE(a,f[e>>2]|0,c|0?1:-1);u=d;return}function WU(a,b){a=a|0;b=b|0;b=SN(a,b)|0;if((b|0)!=(a+4|0))XF(a,b);return}function XU(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;b=b-a>>2;a:while(1){while(1){if(!b)break a;d=(b|0)/2|0;e=a+(d<<2)|0;if((f[e>>2]|0)>>>0<c>>>0)break;else b=d}b=b+-1-d|0;a=e+4|0}return a|0}function YU(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);O0(b,c);return}function ZU(a){a=a|0;var c=0,d=0,e=0;e=a+48|0;c=a+52|0;d=LD(f[e>>2]|0,f[c>>2]|0)|0;kN(e,d,f[c>>2]|0);b[a+45>>0]=0;return}function _U(a){a=a|0;var c=0,d=0;c=a+74|0;d=b[c>>0]|0;b[c>>0]=d+255|d;c=f[a>>2]|0;if(!(c&8)){f[a+8>>2]=0;f[a+4>>2]=0;d=f[a+44>>2]|0;f[a+28>>2]=d;f[a+20>>2]=d;f[a+16>>2]=d+(f[a+48>>2]|0);a=0}else{f[a>>2]=c|32;a=-1}return a|0}function $U(a,b){a=a|0;b=b|0;var c=0,d=0;a=a+16|0;f[a>>2]=0;c=nV(20)|0;f[c>>2]=8700;d=c+4|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];f[a>>2]=c;return}function aV(a,b){a=a|0;b=b|0;if(!b)return;else{aV(a,f[b>>2]|0);aV(a,f[b+4>>2]|0);$Ja(b);return}}function bV(a,b,c){a=a|0;b=b|0;c=c|0;switch(c|0){case 1:{uAa(a,b);break}case 2:{Ysa(a,b,((b|0)<0)<<31>>31);break}case 3:{tda(a,+(b|0));break}case 4:{S5(a,+(b|0));break}default:Ka()}return}function cV(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);Y0(b,c);return}function dV(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);Z0(b,c);return}function eV(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+4|0;c=f[d>>2]|0;if((c|0)==(f[a+8>>2]|0)){gY(a,(c<<1)+2|0);c=f[d>>2]|0}f[(f[a>>2]|0)+(c<<2)>>2]=f[b>>2];f[d>>2]=(f[d>>2]|0)+1;return}function fV(a,b){a=a|0;b=b|0;b=(Asa(f[b>>2]|0)|0)+16|0;if(!(f[b>>2]|0))Na(48789,32558,157,32729);else{LT(a+48|0);return}}function gV(a){a=a|0;if(!a)return;else{gV(f[a>>2]|0);gV(f[a+4>>2]|0);$Ja(a);return}}function hV(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=b;c=1;while(1){if((c|0)==624)break;d=(Y(b>>>30^b,1812433253)|0)+c|0;f[a+(c<<2)>>2]=d;c=c+1|0;b=d}f[a+2496>>2]=0;return}function iV(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;l$(a,voa(gKa(f[c>>2]|0)|0)|0);zya(a);gP(a,58);zya(a);b=UAa(b,2)|0;Cg(a,f[b>>2]|0);return}function jV(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=Ura(f[a>>2]|0)|0;$O(a+8|0,b);f[a+24>>2]=f[c>>2];f[a+32>>2]=e;f[a+28>>2]=d;return a|0}function kV(a,b){a=a|0;b=b|0;var c=0;c=Aaa(f[a>>2]|0,39191,0)|0;c3(K2(c,SP(a,f[b+8>>2]|0)|0)|0,41)|0;return}function lV(a,b,c){a=a|0;b=b|0;c=c|0;Tsa(a,b);b=a+16|0;Ewa(b,c);j1(b,c);return}function mV(a){a=+a;var b=0,c=0,d=0;p[s>>3]=a;b=f[s>>2]|0;c=f[s+4>>2]|0;d=Bna(b|0,c|0,52)|0;switch(d&2047){case 0:{b=(b|0)!=0|(c&2147483647|0)!=0?3:2;break}case 2047:{b=(b|0)==0&(c&1048575|0)==0&1;break}default:b=4}return b|0}function nV(a){a=a|0;var b=0,c=0;b=(a|0)==0?1:a;while(1){c=rc(b)|0;if(c|0){a=6;break}a=nCa()|0;if(!a){a=5;break}ac[a&63]()}if((a|0)==5){c=zb(4)|0;$Ia(c);ub(c|0,5752,316)}else if((a|0)==6)return c|0;return 0}function oV(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=ysa(f[a>>2]|0)|0;f[a+4>>2]=d;f[a+24>>2]=f[b>>2];dP(a+8|0,c);return a|0}function pV(a,b){a=a|0;b=b|0;var c=0,d=0;d=(Cn(a,f[b+8>>2]|0)|0)+1|0;c=Cn(a,f[b+12>>2]|0)|0;b=Ska(a,f[b+16>>2]|0)|0;return d+(c>>>0<b>>>0?b:c)|0}function qV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;d=u;u=u+32|0;e=d+16|0;g=d;Ysa(g,b,c);f[e>>2]=f[g>>2];f[e+4>>2]=f[g+4>>2];f[e+8>>2]=f[g+8>>2];f[e+12>>2]=f[g+12>>2];AI(a,e);u=d;return}function rV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[c>>2]^f[d>>2]);break}case 2:{b=d;d=c;Ysa(a,f[d>>2]^f[b>>2],f[d+4>>2]^f[b+4>>2]);break}default:Ka()}return}function sV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[c>>2]&f[d>>2]);break}case 2:{b=d;d=c;Ysa(a,f[d>>2]&f[b>>2],f[d+4>>2]&f[b+4>>2]);break}default:Ka()}return}function tV(a,b){a=a|0;b=b|0;Ewa(a,b);WA(a+-16+16|0,b);rn(b);Ewa(a,0);return}function uV(a,b){a=a|0;b=b|0;Ewa(a,b);XA(a+-16+16|0,b);Ie(b);Ewa(a,0);return}function vV(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+28|0;d=f[c>>2]|0;if((d|0)==(f[a+32>>2]|0))XC(a+24|0,b);else{f[d>>2]=f[b>>2];f[c>>2]=(f[c>>2]|0)+4}return}function wV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=c+8|0;d=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,f[c>>2]|f[d>>2]);break}case 2:{b=d;d=c;Ysa(a,f[d>>2]|f[b>>2],f[d+4>>2]|f[b+4>>2]);break}default:Ka()}return}function xV(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;cA(a,b);b=b+16|0}return}function yV(a,c){a=a|0;c=c|0;var d=0,e=0;d=b[a>>0]|0;e=b[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24)a=e;else{do{a=a+1|0;c=c+1|0;d=b[a>>0]|0;e=b[c>>0]|0}while(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24));a=e}return (d&255)-(a&255)|0}function zV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+8|0;a=b;while(1){if((a|0)==(c|0))break;f[f[d>>2]>>2]=f[a>>2];f[d>>2]=(f[d>>2]|0)+4;a=a+4|0}return}function AV(a){a=a|0;var b=0,c=0;c=f[a+12>>2]|0;b=f[a+8>>2]|0;while(1){if((b|0)==(c|0)){b=4;break}if((f[b>>2]|1|0)==3){b=5;break}else b=b+4|0}if((b|0)==4)return (f[a+4>>2]&-2|0)==2|0;else if((b|0)==5)return 1;return 0}function BV(a,b){a=a|0;b=b|0;we(a,b);return}function CV(a){a=a|0;var b=0,c=0,d=0,e=0;e=u;u=u+32|0;b=e+16|0;c=e+12|0;d=e;Tma(d,390,0,a);if((f[a>>2]|0)!=-1){f[b>>2]=d;f[c>>2]=b;gs(a,c)}u=e;return (f[a+4>>2]|0)+-1|0}function DV(a){a=a|0;var b=0;b=zAa(a)|0;if(b)a=f[b+8>>2]|0;if(!(hJa(f[a>>2]|0)|0)){a=wAa(a)|0;if(!a)a=0;else a=(f[a+16>>2]|0)!=0}else a=1;return a|0}function EV(a,c){a=a|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;f[e>>2]=c;r5(a+80|0);OC(a,e);if(f[a+88>>2]|0)b[a+26>>0]=1;u=d;return}function FV(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{uAa(a,eFa(f[c>>2]|0)|0);break}case 2:{c=DBa(f[c>>2]|0,f[c+4>>2]|0)|0;Ysa(a,c,((c|0)<0)<<31>>31);break}default:Ka()}return}function GV(a){a=a|0;var b=0,c=0;b=f[a+12>>2]|0;if(b|0?(c=f[a+16>>2]|0,c|0):0){b=f[b+4>>2]|0;if((b|0)!=5?(f[c+4>>2]|0)!=5:0){c=RU(f[a+8>>2]|0)|0;b=c?1:b}else b=5;f[a+4>>2]=b;return}Na(51653,35371,496,35506)}function HV(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0;g=u;u=u+32|0;e=g;f[a+36>>2]=9;if((f[a>>2]&64|0)==0?(f[e>>2]=f[a+60>>2],f[e+4>>2]=21523,f[e+8>>2]=g+16,ob(54,e|0)|0):0)b[a+75>>0]=-1;e=wq(a,c,d)|0;u=g;return e|0}function IV(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;f[c>>2]=d+-8;tva(f[d+-4>>2]|0)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function JV(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=b+8|0;f[d>>2]=f[b>>2];f[d+4>>2]=f[b+4>>2];f[d+8>>2]=f[b+8>>2];f[d+12>>2]=f[b+12>>2];oda(a,d);u=c;return}function KV(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a+32|0;e=f[c>>2]|0;f[c>>2]=e+1;c=a+36|0;if(!e)f[c>>2]=5;if(b){a=f[b+4>>2]|0;if((a|0)!=5)d=5}else{a=0;d=5}if((d|0)==5)f[c>>2]=a;return}function LV(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=f[a>>2]|0;f[a>>2]=f[b>>2];f[b>>2]=e;e=a+4|0;c=b+4|0;d=f[e>>2]|0;f[e>>2]=f[c>>2];f[c>>2]=d;c=a+8|0;b=b+8|0;a=f[c>>2]|0;f[c>>2]=f[b>>2];f[b>>2]=a;return}function MV(a){a=a|0;if(!a)return;else{MV(f[a>>2]|0);MV(f[a+4>>2]|0);$Ja(a);return}}function NV(a){a=a|0;var b=0;b=a+4|0;XK(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function OV(a,b){a=a|0;b=b|0;var c=0,d=0;b=b+8|0;c=f[a+36>>2]|0;d=c+(f[b>>2]<<2)|0;f[d>>2]=(f[d>>2]|0)+1;b=f[b>>2]|0;if((f[c+(b<<2)>>2]|0)>>>0>1){d=(f[a+24>>2]|0)+(b>>>5<<2)|0;f[d>>2]=f[d>>2]&~(1<<(b&31))}return}function PV(a){a=a|0;var b=0,c=0;c=a+15&-16|0;b=f[r>>2]|0;a=b+c|0;if((c|0)>0&(a|0)<(b|0)|(a|0)<0){ea()|0;Va(12);return -1}f[r>>2]=a;if((a|0)>(da()|0)?(ca()|0)==0:0){f[r>>2]=b;Va(12);return -1}return b|0}function QV(a,b,c){a=a|0;b=b|0;c=c|0;c=bga(b+12|0,(yca(a,b)|0)+~c|0)|0;return f[c>>2]|0}function RV(a){a=a|0;GI(a);return}function SV(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+16|0;d=e;$b[f[(f[a>>2]|0)+12>>2]&255](d,a,b);if((f[d+4>>2]|0)==(f[c+4>>2]|0))a=(f[d>>2]|0)==(f[c>>2]|0);else a=0;u=e;return a|0}function TV(a,b){a=a|0;b=b|0;var c=0;c=pta(f[a+4>>2]|0)|0;b=yg(a,lj(b,1)|0)|0;f[c+8>>2]=b;b=YV(f[a+84>>2]|0,b)|0;f[c+4>>2]=b;return c|0}function UV(a){a=a|0;var b=0;b=a+4|0;aM(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function VV(a){a=a|0;var b=0,c=0,d=0;c=u;u=u+16|0;b=c;d=gKa(F8(2)|0)|0;PDa(b,l6(l6(d,y4(75452)|0)|0,a)|0);u=c;return f[b>>2]|0}function WV(a,b){a=a|0;b=b|0;Ewa(a,b);UB(a+-16+16|0,b);ou(b);Ewa(a,0);return}function XV(a){a=a|0;Sma(a+64|0);Kja(a+52|0);E4(a+40|0);E4(a+20|0);E4(a+8|0);return}function YV(a,b){a=a|0;b=b|0;var c=0,d=0;do if(!(qva(a,b)|0))if(vva(a,b)|0){c=a+20|0;d=b-(Rya(a)|0)|0;break}else Ka();else{c=a+8|0;d=b}while(0);return f[(f[c>>2]|0)+(d<<2)>>2]|0}function ZV(a,b){a=a|0;b=b|0;b=WT(b,f[f[a+4>>2]>>2]|0)|0;return (bN(b,f[f[a+8>>2]>>2]|0)|0)^1|0}function _V(a){a=a|0;var b=0;b=a+4|0;jL(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function $V(a){a=a|0;ND(f[a+4>>2]|0);return}function aW(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;E4(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function bW(a,b){a=a|0;b=b|0;Ewa(a,b);iC(a+-16+16|0,b);it(b);Ewa(a,0);return}function cW(a){a=a|0;var b=0;f[a>>2]=14536;y=0;ia(388,a|0);b=y;y=0;if(b&1){b=ab(0)|0;lDa(b)}else{pza(a+28|0);Xe(f[a+32>>2]|0);Xe(f[a+36>>2]|0);Xe(f[a+48>>2]|0);Xe(f[a+60>>2]|0);return}}function dW(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;f[c>>2]=d+-8;tva(f[d+-4>>2]|0)}$Ja(f[a>>2]|0)}return}function eW(a,c){a=a|0;c=c|0;var d=0;d=lj(c,1)|0;d=fIa(b[d>>0]|0)|0;d=d?1:2;ki(a,c,d+1|0,sra(a,lj(c,d)|0)|0);return}function fW(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+44|0;d=f[c>>2]|0;if((d|0)==(f[a+48>>2]|0))XC(a+40|0,b);else{f[d>>2]=f[b>>2];f[c>>2]=(f[c>>2]|0)+4}return}function gW(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;g=u;u=u+128|0;d=g;e=d;h=e+124|0;do{f[e>>2]=0;e=e+4|0}while((e|0)<(h|0));f[d+32>>2]=69;f[d+44>>2]=a;f[d+76>>2]=-1;f[d+84>>2]=a;h=Ic(d,b,c)|0;u=g;return h|0}function hW(a){a=a|0;var b=0;b=a+4|0;CL(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function iW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=(f[b+16>>2]|0)+(f[b+20>>2]|0)|0;e=f[b+4>>2]|0;d=e+(c>>>10<<2)|0;if((f[b+8>>2]|0)==(e|0))b=0;else b=(f[d>>2]|0)+((c&1023)<<2)|0;f[a>>2]=d;f[a+4>>2]=b;return}function jW(a){a=a|0;var b=0,c=0,d=0,e=0;e=u;u=u+16|0;b=e+4|0;d=e;c=f[a+8>>2]|0;if(pJa(c)|0){f[d>>2]=c;f[b>>2]=f[d>>2];b=oB(a,b)|0}else b=0;u=e;return b|0}function kW(a,b){a=a|0;b=b|0;var c=0;c=(Cn(a,f[b+16>>2]|0)|0)+2|0;c=c+(Cn(a,f[b+8>>2]|0)|0)|0;return c+(Cn(a,f[b+12>>2]|0)|0)|0}function lW(a){a=a|0;tH(f[a+4>>2]|0);return}function mW(a,b){a=a|0;b=b|0;Ewa(a,b);Ry(a+-16+16|0,b);Ewa(a,0);return}function nW(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[b+16>>2]|0;c=f[b+12>>2]|0;while(1){if((c|0)==(d|0))break;TC(a,c);c=c+16|0}Wn(a,b);return}function oW(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-12|0;f[c>>2]=d;E4(d)}$Ja(f[a>>2]|0)}return}function pW(a,c){a=a|0;c=c|0;var d=0,e=0;if((a|0)!=(c|0)){d=b[c+11>>0]|0;e=d<<24>>24<0;gA(a,e?f[c>>2]|0:c,e?f[c+4>>2]|0:d&255)}return}function qW(a,b){a=a|0;b=b|0;var c=0;$5(b);if(R4(b)|0){c=Fpa(f[b+12>>2]|0)|0;b=KM(a+44|0,b+8|0)|0;f[b>>2]=c}return}function rW(a){a=+a;var b=0,c=0;Mra(a)|0;if((J|0)>=0){b=+L(a)>=1.0?(a>0.0?~~+Z(+K(a/4294967296.0),4294967295.0)>>>0:~~+X((a-+(~~a>>>0))/4294967296.0)>>>0):0;if(a<18446744073709551616.0)c=~~a>>>0;else{b=-1;c=-1}}else{b=0;c=0}J=b;return c|0}function sW(a){a=a|0;var b=0;if(!(f[a>>2]&128))b=1;else b=(f[a+20>>2]|0)>>>0>(f[a+28>>2]|0)>>>0?2:1;b=Rb[f[a+40>>2]&127](a,0,b)|0;if((b|0)>=0)b=b-(f[a+8>>2]|0)+(f[a+4>>2]|0)+(f[a+20>>2]|0)-(f[a+28>>2]|0)|0;return b|0}function tW(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=nV(24)|0;f[d+4>>2]=0;f[d+8>>2]=0;f[d>>2]=6992;e=d+12|0;hoa(e,b,f[c>>2]|0);f[a>>2]=e;f[a+4>>2]=d;return}function uW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;e=f[a+4>>2]|0;PDa(d,b);Un(e,f[d>>2]|0)|0;b=P4(a)|0;u=c;return b|0}function vW(a,b,c){a=a|0;b=b|0;c=c|0;c=DR(a,c)|0;return dea(f[a+32>>2]|0,b,c)|0}function wW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;f[e>>2]=f[b+8>>2];f[d>>2]=f[e>>2];a=hj(a+36|0,d)|0;f[b+8>>2]=a;u=c;return}function xW(a,b){a=a|0;b=b|0;var c=0;bwa(a,b);c=a+-16|0;T6(c,b);HC(c,b);bwa(a,0);return}function yW(a,b){a=a|0;b=b|0;Ewa(a,b);gv(a,b);hg(a,b);Ewa(a,0);return}function zW(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;c=b;d=f[a+4>>2]|0;PDa(c,1);Un(d,f[c>>2]|0)|0;a=P4(a)|0;u=b;return a|0}function AW(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+4|0;c=f[d>>2]|0;if((c|0)==(f[a+8>>2]|0)){wY(a,(c<<1)+2|0);c=f[d>>2]|0}f[(f[a>>2]|0)+(c<<2)>>2]=b;f[d>>2]=c+1;return}function BW(a){a=a|0;var b=0;a=Gsa(a+144|0)|0;if(f[18711]|0){b=qN(a)|0;Vea(vj(Vea(76684,20507)|0,b)|0,21222)|0}return a|0}function CW(a){a=a|0;var b=0,c=0;b=nV(20)|0;c=a+4|0;f[b>>2]=8700;a=b+4|0;f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];f[a+12>>2]=f[c+12>>2];return b|0}function DW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+32|0;d=c+16|0;e=c;uAa(e,b);f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];AI(a,d);u=c;return}function EW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=b+8|0;d=f[c>>2]|0;g=d+-8|0;e=f[g+4>>2]|0;b=a;f[b>>2]=f[g>>2];f[b+4>>2]=e;b=0;while(1){if((b|0)==-1)break;g=b+-1|0;f[c>>2]=d+(g<<3);b=g}return}function FW(a,b){a=a|0;b=+b;var c=0,d=0,e=0;c=u;u=u+32|0;d=c+16|0;e=c;S5(e,b);f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];AI(a,d);u=c;return}function GW(a,b){a=a|0;b=+b;var c=0,d=0,e=0;c=u;u=u+32|0;d=c+16|0;e=c;tda(e,b);f[d>>2]=f[e>>2];f[d+4>>2]=f[e+4>>2];f[d+8>>2]=f[e+8>>2];f[d+12>>2]=f[e+12>>2];AI(a,d);u=c;return}function HW(a,b){a=a|0;b=b|0;if(!(!(U3(a,f[b+12>>2]|0)|0)?!(U3(a,f[b+16>>2]|0)|0):0))_Y(a,b);return}function IW(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a>>2]|0;if(b|0){c=a+4|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-8|0;f[c>>2]=e;d=e}$Ja(b);f[a+8>>2]=0;f[c>>2]=0;f[a>>2]=0}return}function JW(a){a=a|0;var b=0;b=a+4|0;bM(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function KW(a){a=a|0;bE(f[a+4>>2]|0);return}function LW(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{gua(b);b=(f[c>>2]|0)+12|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function MW(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;e=u;u=u+16|0;d=e;f[d>>2]=b;if((c|0)==-1){g=a+56|0;c=f[g>>2]|0;f[g>>2]=c+1}f[b+100>>2]=c;RJ(a,d);u=e;return}function NW(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0;c=u;u=u+16|0;d=c;f[d>>2]=b;g=a+60|0;e=f[g>>2]|0;f[g>>2]=e+1;f[b+4>>2]=e;QJ(a+24|0,d);u=c;return}function OW(a){a=a|0;return OU(a)|0}function PW(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Cra(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function QW(a,b,c){a=a|0;b=b|0;c=c|0;v4(a+4|0,f[b>>2]|0,f[c>>2]|0);return}function RW(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+4|0;c=f[d>>2]|0;if((c|0)==(f[a+8>>2]|0)){lZ(a,(c<<1)+2|0);c=f[d>>2]|0}f[(f[a>>2]|0)+(c<<2)>>2]=b;f[d>>2]=c+1;return}function SW(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;d=a+84|0;g=f[d>>2]|0;h=c+256|0;e=Nt(g,0,h)|0;e=(e|0)==0?h:e-g|0;c=e>>>0<c>>>0?e:c;rq(b|0,g|0,c|0)|0;f[a+4>>2]=g+c;b=g+e|0;f[a+8>>2]=b;f[d>>2]=b;return c|0}function TW(a,b){a=a|0;b=b|0;if(!(!(U3(a,f[b+24>>2]|0)|0)?!(U3(a,f[b+28>>2]|0)|0):0))_Y(a,b);return}function UW(a,b){a=a|0;b=b|0;var c=0;l$(a,29089);c=UAa(b,1)|0;if(!(Ata(f[c>>2]|0)|0)){gP(a,32);c=UAa(b,1)|0;l$(a,voa(gKa(f[c>>2]|0)|0)|0)}return}function VW(a,b){a=a|0;b=b|0;X9(a,Vqa(f[b>>2]|0)|0);return}function WW(a){a=a|0;var b=0,c=0;b=f[a+8>>2]|0;if(b|0?(c=f[a+12>>2]|0,c|0):0){b=f[b+4>>2]|0;if((b|0)!=5?(f[c+4>>2]|0)!=5:0)b=(f[(f[a+16>>2]|0)+4>>2]|0)==5?5:b;else b=5;f[a+4>>2]=b;return}Na(35488,35371,507,35506)}function XW(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;b=u;u=u+48|0;d=b;vX(d,f[a+16>>2]|0);mpa(d,1);yh(d,c);u=b;return}function YW(a,b){a=a|0;b=b|0;bwa(a,b);vha(a+-16+16|0,b);bwa(a,0);return}function ZW(a){a=a|0;var b=0,c=0,d=0;d=a+4|0;c=f[d>>2]|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;ZJa(f[b>>2]|0);b=b+4|0}b=f[a>>2]|0;a=f[d>>2]|0;while(1){if((a|0)==(b|0))break;c=a+-4|0;f[d>>2]=c;a=c}return}function _W(a){a=a|0;mE(f[a+4>>2]|0);return}function $W(a){a=a|0;var b=0;y=0;a=la(227,a|0)|0;b=y;y=0;if(b&1){b=ab(0)|0;lDa(b)}if(!a)return;else{y=0;Ca(52,70558,70566,48,70642);y=0;b=ab(0)|0;lDa(b)}}function aX(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;JJ(c,1434,b);ai(a,b);JJ(c,1435,b);return}function bX(a,b){a=a|0;b=b|0;X9(a,fra(f[b>>2]|0)|0);return}function cX(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0,h=0;h=u;u=u+16|0;d=h;f[d>>2]=f[c>>2];d=vz(0,0,b,d)|0;if((d|0)>=0?(e=d+1|0,g=rc(e)|0,f[a>>2]=g,(g|0)!=0):0)a=vz(g,e,b,c)|0;else a=-1;u=h;return a|0}function dX(a,b){a=a|0;b=b|0;var c=0;f[a+24>>2]=b;f[a+16>>2]=(b|0)==0&1;f[a+20>>2]=0;f[a+4>>2]=4098;f[a+12>>2]=0;f[a+8>>2]=6;c=a+28|0;b=a+32|0;a=b+40|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(a|0));t3(c);return}function eX(a){a=a|0;var b=0;gKa(a)|0;if(hJa(f[a>>2]|0)|0?(b=UAa(a,0)|0,jha(f[b>>2]|0,f[18944]|0)|0):0){a=UAa(a,1)|0;a=(yja(gKa(f[a>>2]|0)|0)|0)==0}else a=0;return a|0}function fX(a,b){a=a|0;b=b|0;var c=0;l$(a,42696);c=UAa(b,1)|0;if(!(Ata(f[c>>2]|0)|0)){gP(a,32);c=UAa(b,1)|0;l$(a,voa(gKa(f[c>>2]|0)|0)|0)}return}function gX(a,b,c){a=a|0;b=b|0;c=c|0;Uk(a,b,c);return}function hX(a){a=a|0;var c=0,d=0,e=0;d=(fwa(a,43)|0)==0;c=b[a>>0]|0;d=d?c<<24>>24!=114&1:2;e=(fwa(a,120)|0)==0;d=e?d:d|128;a=(fwa(a,101)|0)==0;a=a?d:d|524288;a=c<<24>>24==114?a:a|64;a=c<<24>>24==119?a|512:a;return (c<<24>>24==97?a|1024:a)|0}function iX(a){a=a|0;if(b[a+12>>0]|0?(y=0,ya(68,f[(f[a>>2]|0)+44>>2]|0,f[a+4>>2]|0,f[a+8>>2]|0),a=y,y=0,a&1):0){a=ab(0)|0;lDa(a)}return}function jX(a,b){a=a|0;b=b|0;var c=0,d=0;_X(a);f[a>>2]=f[b>>2];c=b+4|0;f[a+4>>2]=f[c>>2];d=b+8|0;f[a+8>>2]=f[d>>2];f[d>>2]=0;f[c>>2]=0;f[b>>2]=0;return}function kX(a,b){a=a|0;b=b|0;var c=0;c=zb(16)|0;gBa();y=0;Ca(85,c|0,a|0,18020,b|0);b=y;y=0;if(b&1){b=Pa()|0;Oa(c|0);$a(b|0)}else ub(c|0,5672,309)}function lX(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;D8(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function mX(a,b){a=a|0;b=b|0;X9(a,gra(f[b>>2]|0)|0);return}function nX(a,b){a=a|0;b=b|0;bwa(a,b);kqa(a,b);kx(a,b);bwa(a,0);return}function oX(a){a=a|0;cJ(a);return}function pX(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Cra(d)}$Ja(f[a>>2]|0)}return}function qX(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=b;Pz(c+8|0,f[a+24>>2]|0,b,d);u=c;return}function rX(a){a=a|0;HE(f[a+4>>2]|0);return}function sX(a,b){a=a|0;b=b|0;X9(a,pra(f[b>>2]|0)|0);return}function tX(a,b){a=a|0;b=b|0;X9(a,kra(f[b>>2]|0)|0);return}function uX(a,b){a=a|0;b=b|0;X9(a,lra(f[b>>2]|0)|0);return}function vX(a,c){a=a|0;c=c|0;f[a>>2]=c;f[a+4>>2]=0;c=a+20|0;b[c>>0]=0;f[a+24>>2]=0;f[a+28>>2]=0;mpa(a,0);if(!(b[c>>0]|0)){a=(gw()|0)!=0&1;b[c>>0]=a}return}function wX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=Ug(b,c,d,e,4)|0;if(!(f[d>>2]&4))f[a>>2]=c+-1900;return}function xX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=xg(b,c,d,e,4)|0;if(!(f[d>>2]&4))f[a>>2]=c+-1900;return}function yX(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{gua(b);b=(f[c>>2]|0)+12|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function zX(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+4|0;a=c-b|0;if((a|0)>0){rq(f[d>>2]|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+(((a>>>0)/12|0)*12|0)}return}function AX(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;b=fl(b)|0;f[e>>2]=b;f[d>>2]=f[e>>2];b=q3(a,d,0,0)|0;u=c;return b|0}function BX(a,b){a=a|0;b=b|0;X9(a,ura(f[b>>2]|0)|0);return}function CX(a,b){a=a|0;b=b|0;X9(a,vra(f[b>>2]|0)|0);return}function DX(a,b){a=a|0;b=b|0;X9(a,wra(f[b>>2]|0)|0);return}function EX(a,b){a=a|0;b=b|0;var c=0;c=nV(12)|0;y=0;ja(598,c|0,b|0);b=y;y=0;if(b&1){b=Pa()|0;$Ja(c);$a(b|0)}else{f[a>>2]=c;return}}function FX(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;b=u;u=u+48|0;d=b;vX(d,f[a+16>>2]|0);NDa(d);yh(d,c);u=b;return}function GX(a,b){a=a|0;b=b|0;$P(a,f[b+8>>2]|0);O2(a+12|0,b);return}function HX(a,b,c){a=a|0;b=b|0;c=c|0;return JF(a,b,gKa(c)|0)|0}function IX(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;D8(d)}$Ja(f[a>>2]|0)}return}function JX(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=nV(28)|0;f[d+4>>2]=0;f[d+8>>2]=0;f[d>>2]=7060;e=d+12|0;kpa(e,b,f[c>>2]|0);f[a>>2]=e;f[a+4>>2]=d;return}function KX(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;if((f[b+4>>2]|0)!=5){a=f[a+36>>2]|0;gKa(a)|0;VBa(c,a);b=Una(f[c>>2]|0,b)|0}u=d;return b|0}function LX(a){a=a|0;var b=0;Ana(a);f[a>>2]=7928;b=a+56|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;f[b+16>>2]=0;f[b+20>>2]=0;f[b+24>>2]=0;n[a+84>>2]=1.0;return}function MX(a,b){a=a|0;b=b|0;a=a+4|0;f[b>>2]=8700;b=b+4|0;f[b>>2]=f[a>>2];f[b+4>>2]=f[a+4>>2];f[b+8>>2]=f[a+8>>2];f[b+12>>2]=f[a+12>>2];return}function NX(a,b){a=a|0;b=b|0;X9(a,Era(f[b>>2]|0)|0);return}function OX(a,b){a=a|0;b=b|0;X9(a,Lra(f[b>>2]|0)|0);return}function PX(a,b){a=a|0;b=b|0;Ewa(a,b);Az(a+-16+16|0,b);Ewa(a,0);return}function QX(a){a=a|0;var b=0,c=0;b=nV(16)|0;c=a+4|0;f[b>>2]=8080;a=b+4|0;f[a>>2]=f[c>>2];f[a+4>>2]=f[c+4>>2];f[a+8>>2]=f[c+8>>2];return b|0}function RX(a){a=a|0;var b=0;a=ewa(a+144|0)|0;if(f[18711]|0){b=qN(a)|0;Vea(vj(Vea(76684,20507)|0,b)|0,21192)|0}return a|0}function SX(a){a=a|0;if(!(Ata(a)|0)?(gKa(a)|0,hJa(f[a>>2]|0)|0):0){a=UAa(a,0)|0;a=jha(f[a>>2]|0,f[18748]|0)|0}else a=0;return a|0}function TX(a){a=a|0;var b=0;b=a+4|0;QN(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function UX(a,b){a=a|0;b=b|0;a=a+172|0;if(!(WS(a,b)|0))Na(35342,35371,606,35389);else{b=KM(a,b)|0;return f[b>>2]|0}return 0}function VX(a){a=a|0;var b=0;b=f[a+4>>2]|0;if(!b)while(1){b=f[a+8>>2]|0;if((f[b>>2]|0)==(a|0))break;else a=b}else while(1){a=f[b>>2]|0;if(!a)break;else b=a}return b|0}function WX(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=b;a=ej((f[18848]|0)+(a*20|0)|0,d)|0;u=c;return f[a>>2]|0}function XX(a,b){a=a|0;b=b|0;a=a+52|0;if(!(WS(a,b)|0))Na(36437,35371,587,36466);else{b=KM(a,b)|0;return f[b>>2]|0}return 0}function YX(a,b,c){a=a|0;b=b|0;c=c|0;vi(a,b,c);return}function ZX(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;b=gl(b)|0;f[e>>2]=b;f[d>>2]=f[e>>2];b=q3(a,d,0,0)|0;u=c;return b|0}function _X(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a>>2]|0;if(b|0){c=a+4|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-4|0;f[c>>2]=e;d=e}$Ja(b);f[a+8>>2]=0;f[c>>2]=0;f[a>>2]=0}return}function $X(a,b,c){a=a|0;b=b|0;c=c|0;switch(f[b>>2]|0){case 3:{uAa(a,+Hoa(b)<=+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)<=+Goa(c)&1);break}default:Ka()}return}function aY(a,b,c){a=a|0;b=b|0;c=c|0;switch(f[b>>2]|0){case 3:{uAa(a,+Hoa(b)>=+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)>=+Goa(c)&1);break}default:Ka()}return}function bY(a,b){a=a|0;b=b|0;X9(a,Xra(f[b>>2]|0)|0);return}function cY(a,b){a=a|0;b=b|0;X9(a,Qra(f[b>>2]|0)|0);return}function dY(a,b){a=a|0;b=b|0;X9(a,Rra(f[b>>2]|0)|0);return}function eY(a,b){a=a|0;b=b|0;X9(a,Sra(f[b>>2]|0)|0);return}function fY(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c;e=f[a>>2]|0;b=oo(a,lj(b,1)|0)|0;f[d>>2]=b;Xya(e,d);u=c;return}function gY(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[a>>2]|0;Jna(a,b);c=a+4|0;b=0;while(1){if(b>>>0>=(f[c>>2]|0)>>>0)break;f[(f[a>>2]|0)+(b<<2)>>2]=f[d+(b<<2)>>2];b=b+1|0}return}function hY(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;Qz(a,b);b=b+16|0}return}function iY(a,b){a=a|0;b=b|0;bwa(a,b);Aha(a,b);bwa(a,0);return}function jY(a,b,c){a=a|0;b=b|0;c=c|0;switch(f[b>>2]|0){case 3:{uAa(a,+Hoa(b)<+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)<+Goa(c)&1);break}default:Ka()}return}function kY(a,b,c){a=a|0;b=b|0;c=c|0;switch(f[b>>2]|0){case 3:{uAa(a,+Hoa(b)>+Hoa(c)&1);break}case 4:{uAa(a,+Goa(b)>+Goa(c)&1);break}default:Ka()}return}function lY(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;b=Yu(b)|0;f[d>>2]=b;a=EN(a+44|0,d)|0;f[a>>2]=(f[a>>2]|0)+1;u=c;return}function mY(a,b){a=a|0;b=b|0;X9(a,Yra(f[b>>2]|0)|0);return}function nY(a,b){a=a|0;b=b|0;X9(a,Zra(f[b>>2]|0)|0);return}function oY(a,b){a=a|0;b=b|0;X9(a,_ra(f[b>>2]|0)|0);return}function pY(a,b){a=a|0;b=b|0;X9(a,jsa(f[b>>2]|0)|0);return}function qY(a,b){a=a|0;b=b|0;X9(a,ksa(f[b>>2]|0)|0);return}function rY(a,b){a=a|0;b=b|0;bwa(a,b);hka(a+-16+16|0,b);bwa(a,0);return}function sY(a,b){a=a|0;b=b|0;bwa(a,b);ika(a+-16+16|0,b);bwa(a,0);return}function tY(a,b){a=a|0;b=b|0;bwa(a,b);jka(a+-16+16|0,b);bwa(a,0);return}function uY(a,b){a=a|0;b=b|0;bwa(a,b);kka(a+-16+16|0,b);bwa(a,0);return}function vY(a,b){a=a|0;b=b|0;a=a+208|0;if(!(WS(a,b)|0))Na(37483,35371,621,37508);else{b=KM(a,b)|0;return f[b>>2]|0}return 0}function wY(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[a>>2]|0;Jna(a,b);c=f[a+4>>2]|0;b=0;while(1){if((b|0)==(c|0))break;f[(f[a>>2]|0)+(b<<2)>>2]=f[d+(b<<2)>>2];b=b+1|0}return}function xY(a,b,c){a=a|0;b=b|0;c=c|0;if(eta(a,b)|0){c=b+(PCa(c)|0)|0;a=a+4096|0;if((c|0)==(f[a>>2]|0))f[a>>2]=b}else Xe(b);return}function yY(a){a=a|0;if(!a)Vea(76684,19497)|0;else Vea(Vea(Vea(76684,59726)|0,a)|0,59726)|0;return}function zY(a,b){a=a|0;b=b|0;b=(Rra(f[b>>2]|0)|0)+8|0;fR(a,f[b>>2]|0);return}function AY(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if(((c-a|0)>2?(b[a>>0]|0)==115:0)?(b[a+1>>0]|0)==112:0){e=a+2|0;d=fc(e,c,d)|0;a=(d|0)==(e|0)?a:d}return a|0}function BY(a,c){a=a|0;c=c|0;var d=0,e=0;d=b[c+11>>0]|0;e=d<<24>>24<0;return kl(a,e?f[c>>2]|0:c,e?f[c+4>>2]|0:d&255)|0}function CY(a){a=a|0;AJ(a);return}function DY(a){a=a|0;var b=0,c=0;yu(a);c=f[a+8>>2]|0;b=f[a+4>>2]|0;while(1){if((b|0)==(c|0))break;$Ja(f[b>>2]|0);b=b+4|0}M1(a);return}function EY(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=ysa(f[a>>2]|0)|0;f[a+4>>2]=d;f[a+24>>2]=f[b>>2];$O(a+8|0,c);return a|0}function FY(a,b){a=a|0;b=b|0;JC(a,Era(f[b>>2]|0)|0);return}
function ec(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;O=u;u=u+416|0;T=O+400|0;J=O+372|0;S=O+384|0;Q=O+360|0;K=O+348|0;L=O+336|0;M=O+324|0;N=O+312|0;z=O+300|0;A=O+288|0;B=O+276|0;C=O+264|0;D=O+252|0;E=O+240|0;F=O+228|0;P=O+216|0;G=O+204|0;H=O+192|0;I=O+180|0;i=O+168|0;j=O+156|0;k=O+144|0;l=O+132|0;m=O+120|0;n=O+108|0;o=O+96|0;p=O+84|0;q=O+72|0;r=O+60|0;s=O+48|0;t=O+36|0;v=O+24|0;w=O+12|0;x=O;R=rr(lj(c,0)|0)|0;g=fwa(R,46)|0;a:do if(g){m=Gj(R,0,1)|0;d=T;e=d+16|0;do{b[d>>0]=0;d=d+1|0}while((d|0)<(e|0));yCa(T,g+1|0,15)|0;d=T+1|0;e=(m|0)==2;g=T+4|0;h=T+7|0;j=(m|0)==1;k=T+2|0;l=(m|0)==3;i=T+3|0;b:do switch(b[T>>0]|0){case 97:{R=(b[d>>0]|0)+-98<<24>>24;c:do switch(((R&255)>>>1|R<<7&255)<<24>>24){case 0:{d=fg(a,c,l?8:9,m)|0;U=361;break b}case 1:{d=tN(a,c,j?0:e?25:l?50:63)|0;U=361;break b}case 6:{d=tN(a,c,j?7:32)|0;U=361;break b}case 9:{if(!(CJ(T,52792,7)|0))switch(b[h>>0]|0){case 108:{d=bx(a,c,m,1)|0;U=361;break b}case 115:{d=Uw(a,c,m,1)|0;U=361;break b}case 114:{d=In(a,c,m)|0;U=361;break b}default:break c}break}default:{}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=24;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[J>>2]=f[S>>2];f[J+4>>2]=f[S+4>>2];f[J+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,J|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(J);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=24}while(0);if((U|0)==24)d=Pa()|0;Oa(h|0);U=362;break}case 99:{d:do switch(b[d>>0]|0){case 101:{d=fg(a,c,l?10:11,m)|0;U=361;break b}case 108:{d=fg(a,c,(j^1)&1,m)|0;U=361;break b}case 111:{switch(b[k>>0]|0){case 112:{d=tN(a,c,l?54:67)|0;U=361;break b}case 110:break;default:break d}switch(b[i>>0]|0){case 118:break;case 115:{d=xq(a,c,m)|0;U=361;break b}default:break d}d=T+11|0;switch(b[T+8>>0]|0){case 115:{d=fg(a,c,(b[d>>0]|0)==51?(l?35:36):l?39:40,m)|0;U=361;break b}case 117:{d=fg(a,c,(b[d>>0]|0)==51?(l?37:38):l?41:42,m)|0;U=361;break b}default:break d}}case 116:{d=fg(a,c,j?2:3,m)|0;U=361;break b}default:{}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=51;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[Q>>2]=f[S>>2];f[Q+4>>2]=f[S+4>>2];f[Q+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,Q|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(Q);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=51}while(0);if((U|0)==51)d=Pa()|0;Oa(h|0);U=362;break}case 100:{switch(b[d>>0]|0){case 105:{U=56;break}case 101:{d=fg(a,c,44,m)|0;U=361;break b}default:{}}e:do if((U|0)==56)switch(b[i>>0]|0){case 95:{d=tN(a,c,(b[g>>0]|0)==117?(j?4:29):j?3:28)|0;U=361;break b}case 0:{d=tN(a,c,l?53:66)|0;U=361;break b}default:break e}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=72;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[K>>2]=f[S>>2];f[K+4>>2]=f[S+4>>2];f[K+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,K|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(K);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=72}while(0);if((U|0)==72)d=Pa()|0;Oa(h|0);U=362;break}case 101:{switch(b[d>>0]|0){case 113:{U=77;break}case 120:{d=fg(a,c,(b[h>>0]|0)==117?23:22,m)|0;U=361;break b}default:{}}f:do if((U|0)==77)switch(b[k>>0]|0){case 0:{d=tN(a,c,j?15:e?40:l?57:70)|0;U=361;break b}case 122:{d=fg(a,c,j?20:21,m)|0;U=361;break b}default:break f}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=93;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[L>>2]=f[S>>2];f[L+4>>2]=f[S+4>>2];f[L+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,L|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(L);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=93}while(0);if((U|0)==93)d=Pa()|0;Oa(h|0);U=362;break}case 102:{if((b[d>>0]|0)==108){d=fg(a,c,l?12:13,m)|0;U=361;break b}h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=111;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[M>>2]=f[S>>2];f[M+4>>2]=f[S+4>>2];f[M+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,M|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(M);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=111}while(0);if((U|0)==111)d=Pa()|0;Oa(h|0);U=362;break}case 103:{g:do switch(b[d>>0]|0){case 116:switch(b[k>>0]|0){case 95:{d=tN(a,c,(b[i>>0]|0)==117?(j?22:47):j?21:46)|0;U=361;break b}case 0:{d=tN(a,c,l?61:74)|0;U=361;break b}default:break g}case 101:switch(b[k>>0]|0){case 95:{d=tN(a,c,(b[i>>0]|0)==117?(j?24:49):j?23:48)|0;U=361;break b}case 0:{d=tN(a,c,l?62:75)|0;U=361;break b}default:break g}default:{}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=134;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[N>>2]=f[S>>2];f[N+4>>2]=f[S+4>>2];f[N+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,N|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(N);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=134}while(0);if((U|0)==134)d=Pa()|0;Oa(h|0);U=362;break}case 108:{h:do switch(b[d>>0]|0){case 116:switch(b[k>>0]|0){case 95:{d=tN(a,c,(b[i>>0]|0)==117?(j?18:43):j?17:42)|0;U=361;break b}case 0:{d=tN(a,c,l?59:72)|0;U=361;break b}default:break h}case 101:switch(b[k>>0]|0){case 95:{d=tN(a,c,(b[i>>0]|0)==117?(j?20:45):j?19:44)|0;U=361;break b}case 0:{d=tN(a,c,l?60:73)|0;U=361;break b}default:break h}case 111:{d=bx(a,c,m,0)|0;U=361;break b}default:{}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=158;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[z>>2]=f[S>>2];f[z+4>>2]=f[S+4>>2];f[z+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,z|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(z);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=158}while(0);if((U|0)==158)d=Pa()|0;Oa(h|0);U=362;break}case 109:switch(b[d>>0]|0){case 105:{d=tN(a,c,l?55:68)|0;U=361;break b}case 97:{d=tN(a,c,l?56:69)|0;U=361;break b}case 117:{d=tN(a,c,j?2:e?27:l?52:65)|0;U=361;break b}default:{h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=178;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[A>>2]=f[S>>2];f[A+4>>2]=f[S+4>>2];f[A+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,A|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(A);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=178}while(0);if((U|0)==178)d=Pa()|0;Oa(h|0);U=362;break b}}case 110:{i:do if((b[d>>0]|0)==101)switch(b[k>>0]|0){case 0:{d=tN(a,c,j?16:e?41:l?58:71)|0;U=361;break b}case 97:{d=fg(a,c,l?16:17,m)|0;U=361;break b}case 103:{d=fg(a,c,l?6:7,m)|0;U=361;break b}default:break i}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=199;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[B>>2]=f[S>>2];f[B+4>>2]=f[S+4>>2];f[B+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,B|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(B);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=199}while(0);if((U|0)==199)d=Pa()|0;Oa(h|0);U=362;break}case 111:{if((b[d>>0]|0)==114){d=tN(a,c,j?8:33)|0;U=361;break b}h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=217;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[C>>2]=f[S>>2];f[C+4>>2]=f[S+4>>2];f[C+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,C|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(C);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=217}while(0);if((U|0)==217)d=Pa()|0;Oa(h|0);U=362;break}case 112:switch(b[d>>0]|0){case 114:{d=fg(a,c,43,m)|0;U=361;break b}case 111:{d=fg(a,c,j?4:5,m)|0;U=361;break b}default:{h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=236;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[D>>2]=f[S>>2];f[D+4>>2]=f[S+4>>2];f[D+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,D|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(D);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=236}while(0);if((U|0)==236)d=Pa()|0;Oa(h|0);U=362;break b}}case 114:{j:do switch(b[d>>0]|0){case 101:switch(b[k>>0]|0){case 109:{d=tN(a,c,(b[g>>0]|0)==117?(j?6:31):j?5:30)|0;U=361;break b}case 105:{d=pDa(m)|0;d=fg(a,c,d?(l?45:46):j?33:34,m)|0;U=361;break b}default:break j}case 111:{if((b[k>>0]|0)==116){d=tN(a,c,(b[i>>0]|0)==108?(j?13:38):j?14:39)|0;U=361;break b}break}default:{}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=258;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[E>>2]=f[S>>2];f[E+4>>2]=f[S+4>>2];f[E+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,E|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(E);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=258}while(0);if((U|0)==258)d=Pa()|0;Oa(h|0);U=362;break}case 115:switch(b[d>>0]|0){case 104:if((b[k>>0]|0)==108){d=tN(a,c,j?10:35)|0;U=361;break b}else{d=tN(a,c,(b[g>>0]|0)==117?(j?11:36):j?12:37)|0;U=361;break b}case 117:{d=tN(a,c,j?1:e?26:l?51:64)|0;U=361;break b}case 113:{d=fg(a,c,l?18:19,m)|0;U=361;break b}case 116:{d=Uw(a,c,m,0)|0;U=361;break b}default:{h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=281;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[F>>2]=f[S>>2];f[F+4>>2]=f[S+4>>2];f[F+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,F|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(F);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=281}while(0);if((U|0)==281)d=Pa()|0;Oa(h|0);U=362;break b}}case 116:{k:do if((b[d>>0]|0)==114){d=T+9|0;switch(b[T+6>>0]|0){case 115:{d=fg(a,c,(b[d>>0]|0)==51?(j?25:26):j?29:30,m)|0;U=361;break b}case 117:{d=fg(a,c,(b[d>>0]|0)==51?(j?27:28):j?31:32,m)|0;U=361;break b}default:{if((b[k>>0]|0)!=117)break k;d=fg(a,c,l?14:15,m)|0;U=361;break b}}}while(0);h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=303;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[P>>2]=f[S>>2];f[P+4>>2]=f[S+4>>2];f[P+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,P|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(P);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=303}while(0);if((U|0)==303)d=Pa()|0;Oa(h|0);U=362;break}case 119:{if(!(CJ(T,52810,4)|0)){d=NH(a,c,m)|0;U=361;break b}if((b[d>>0]|0)==114){d=fg(a,c,24,m)|0;U=361;break b}h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=323;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[G>>2]=f[S>>2];f[G+4>>2]=f[S+4>>2];f[G+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,G|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(G);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=323}while(0);if((U|0)==323)d=Pa()|0;Oa(h|0);U=362;break}case 120:{if((b[d>>0]|0)==111){d=tN(a,c,j?9:34)|0;U=361;break b}h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=341;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[H>>2]=f[S>>2];f[H+4>>2]=f[S+4>>2];f[H+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,H|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(H);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=341}while(0);if((U|0)==341)d=Pa()|0;Oa(h|0);U=362;break}default:{h=zb(20)|0;f[S>>2]=0;f[S+4>>2]=0;f[S+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[S+11>>0]=g;d=S}else{e=g+16&-16;y=0;d=la(150,e|0)|0;R=y;y=0;if(R&1){U=357;break}f[S>>2]=d;f[S+8>>2]=e|-2147483648;f[S+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,S|0,T|0)|0;T=y;y=0;if(T&1){d=Pa()|0;zta(S);break}f[I>>2]=f[S>>2];f[I+4>>2]=f[S+4>>2];f[I+8>>2]=f[S+8>>2];d=0;while(1){if((d|0)==3)break;f[S+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,I|0);T=y;y=0;if(T&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(I);zta(S);if(!e){U=362;break b}}else{y=0;za(3);y=0;U=357}while(0);if((U|0)==357)d=Pa()|0;Oa(h|0);U=362}}while(0);if((U|0)==361){U=653;break}else if((U|0)==362){U=654;break}}else{d=a+4|0;e=R+4|0;g=R+2|0;h=R+1|0;do switch(b[R>>0]|0){case 98:switch(b[h>>0]|0){case 108:{d=ye(a,c)|0;U=653;break a}case 114:{if((b[g>>0]|0)==95?(b[R+3>>0]|0)==116:0){d=Gl(a,c)|0;U=653;break a}d=fy(a,c)|0;U=653;break a}default:{h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=382;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[i>>2]=f[T>>2];f[i+4>>2]=f[T+4>>2];f[i+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,i|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(i);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=382}while(0);if((U|0)==382)d=Pa()|0;Oa(h|0);U=654;break a}}case 99:{switch(b[h>>0]|0){case 97:{U=387;break}case 117:{d=xi(a,c,1)|0;U=653;break a}default:{}}if((U|0)==387){if(bDa(R,f[18751]|0)|0){d=gr(a,c)|0;U=653;break a}if(bDa(R,f[18750]|0)|0){d=lz(a,c)|0;U=653;break a}if(bDa(R,f[18749]|0)|0){d=ri(a,c)|0;U=653;break a}}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=406;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[j>>2]=f[T>>2];f[j+4>>2]=f[T+4>>2];f[j+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,j|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(j);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=406}while(0);if((U|0)==406)d=Pa()|0;Oa(h|0);U=654;break a}case 100:{if((b[h>>0]|0)==114){d=o1(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=424;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[k>>2]=f[T>>2];f[k+4>>2]=f[T+4>>2];f[k+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,k|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(k);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=424}while(0);if((U|0)==424)d=Pa()|0;Oa(h|0);U=654;break a}case 101:{if((b[h>>0]|0)==108){d=pJ(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=442;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[l>>2]=f[T>>2];f[l+4>>2]=f[T+4>>2];f[l+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,l|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(l);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=442}while(0);if((U|0)==442)d=Pa()|0;Oa(h|0);U=654;break a}case 103:{switch(b[h>>0]|0){case 101:{U=447;break}case 114:{d=xi(a,c,2)|0;U=653;break a}default:{}}l:do if((U|0)==447)switch(b[e>>0]|0){case 108:{d=TV(a,c)|0;U=653;break a}case 103:{d=sm(a,c)|0;U=653;break a}default:break l}while(0);h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=463;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[m>>2]=f[T>>2];f[m+4>>2]=f[T+4>>2];f[m+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,m|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(m);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=463}while(0);if((U|0)==463)d=Pa()|0;Oa(h|0);U=654;break a}case 104:{if((b[h>>0]|0)==97){d=xi(a,c,3)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=481;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[n>>2]=f[T>>2];f[n+4>>2]=f[T+4>>2];f[n+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,n|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(n);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=481}while(0);if((U|0)==481)d=Pa()|0;Oa(h|0);U=654;break a}case 105:{if((b[h>>0]|0)==102){d=hn(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=499;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[o>>2]=f[T>>2];f[o+4>>2]=f[T+4>>2];f[o+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,o|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(o);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=499}while(0);if((U|0)==499)d=Pa()|0;Oa(h|0);U=654;break a}case 108:{if((b[h>>0]|0)==111){d=ps(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=517;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[p>>2]=f[T>>2];f[p+4>>2]=f[T+4>>2];f[p+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,p|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(p);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=517}while(0);if((U|0)==517)d=Pa()|0;Oa(h|0);U=654;break a}case 110:{if((b[h>>0]|0)==111){d=ewa(f[d>>2]|0)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=535;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[q>>2]=f[T>>2];f[q+4>>2]=f[T+4>>2];f[q+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,q|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(q);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=535}while(0);if((U|0)==535)d=Pa()|0;Oa(h|0);U=654;break a}case 112:{if((b[h>>0]|0)==97){d=xi(a,c,0)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=553;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[r>>2]=f[T>>2];f[r+4>>2]=f[T+4>>2];f[r+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,r|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(r);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=553}while(0);if((U|0)==553)d=Pa()|0;Oa(h|0);U=654;break a}case 115:{m:do if((b[h>>0]|0)==101){switch(b[g>>0]|0){case 116:break;case 108:{d=kK(a,c)|0;U=653;break a}default:break m}switch(b[e>>0]|0){case 108:{d=vO(a,c)|0;U=653;break a}case 103:{d=Fm(a,c)|0;U=653;break a}default:break m}}while(0);h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=575;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[s>>2]=f[T>>2];f[s+4>>2]=f[T+4>>2];f[s+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,s|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(s);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=575}while(0);if((U|0)==575)d=Pa()|0;Oa(h|0);U=654;break a}case 114:{if((b[h>>0]|0)==101){d=UZ(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=593;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[t>>2]=f[T>>2];f[t+4>>2]=f[T+4>>2];f[t+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,t|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(t);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=593}while(0);if((U|0)==593)d=Pa()|0;Oa(h|0);U=654;break a}case 116:{switch(b[h>>0]|0){case 104:{d=pJ(a,c)|0;U=653;break a}case 101:{U=599;break}default:{}}if((U|0)==599?(b[g>>0]|0)==101:0){d=uO(a,c)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=613;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[v>>2]=f[T>>2];f[v+4>>2]=f[T+4>>2];f[v+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,v|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(v);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=613}while(0);if((U|0)==613)d=Pa()|0;Oa(h|0);U=654;break a}case 117:{if((b[h>>0]|0)==110){d=Gsa(f[d>>2]|0)|0;U=653;break a}h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=631;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[w>>2]=f[T>>2];f[w+4>>2]=f[T+4>>2];f[w+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,w|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(w);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=631}while(0);if((U|0)==631)d=Pa()|0;Oa(h|0);U=654;break a}case 119:{if(!(CJ(R,52815,4)|0)){d=zO(a,c)|0;U=653;break a}break}default:{}}while(0);h=zb(20)|0;f[T>>2]=0;f[T+4>>2]=0;f[T+8>>2]=0;g=uHa(52800)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[T+11>>0]=g;d=T}else{e=g+16&-16;y=0;d=la(150,e|0)|0;S=y;y=0;if(S&1){U=649;break}f[T>>2]=d;f[T+8>>2]=e|-2147483648;f[T+4>>2]=g}Pta(d,52800,g)|0;SBa(d+g|0,0);y=0;ua(50,T|0,R|0)|0;S=y;y=0;if(S&1){d=Pa()|0;zta(T);break}f[x>>2]=f[T>>2];f[x+4>>2]=f[T+4>>2];f[x+8>>2]=f[T+8>>2];d=0;while(1){if((d|0)==3)break;f[T+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,h|0,x|0);S=y;y=0;if(S&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(x);zta(T);if(!e){U=654;break a}}else{y=0;za(3);y=0;U=649}while(0);if((U|0)==649)d=Pa()|0;Oa(h|0);U=654}while(0);if((U|0)==653){u=O;return d|0}else if((U|0)==654)$a(d|0);return 0}function fc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;C=u;u=u+208|0;B=C+176|0;x=C+112|0;z=C+72|0;w=C+60|0;o=C+160|0;t=C+48|0;v=C+36|0;l=C+148|0;m=C+136|0;p=C+96|0;q=C+24|0;r=C+12|0;s=C;i=c;e=i-a|0;a:do if((e|0)>1){A=a+2|0;if((e|0)>3?(b[a>>0]|0)==103:0){k=(b[a+1>>0]|0)==115;e=k?A:a}else{e=a;k=0}g=e+1|0;n=a+3|0;h=(A|0)!=(c|0);j=e+2|0;b:do switch(b[e>>0]|0){case 76:{a=vc(a,c,d)|0;break a}case 84:{a=ih(a,c,d)|0;break a}case 102:{a=Cf(a,c,d)|0;break a}case 97:switch(b[g>>0]|0){case 97:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72087)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72087,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 100:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72105)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72105,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 110:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72105)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72105,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 78:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72148)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72148,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 83:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72151)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72151,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 116:{a=pl(a,c,d)|0;break a}case 122:{a=nl(a,c,d)|0;break a}default:break a}case 99:switch(b[g>>0]|0){case 99:{a=uh(a,c,d)|0;break a}case 108:{a=Ai(a,c,d)|0;break a}case 109:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72153)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72153,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 111:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72155)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72155,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 118:{a=Yf(a,c,d)|0;break a}default:break a}case 100:switch(b[g>>0]|0){case 97:{h=fc(j,c,d)|0;if((h|0)==(j|0))break a;g=d+4|0;if((f[d>>2]|0)==(f[g>>2]|0))break a;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;c:do if(k){e=uHa(72157)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[z+11>>0]=e;a=z}else{A=e+16&-16;a=QCa(A)|0;f[z>>2]=a;f[z+8>>2]=A|-2147483648;f[z+4>>2]=e}Pta(a,72157,e)|0;SBa(a+e|0,0)}else{a=0;while(1){if((a|0)==3)break c;f[z+(a<<2)>>2]=0;a=a+1|0}}while(0);y=0;ua(165,z|0,72160)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];a=0;while(1){if((a|0)==3)break;f[z+(a<<2)>>2]=0;a=a+1|0}y=0;ja(2054,w|0,(f[g>>2]|0)+-24|0);A=y;y=0;do if(A&1)a=Pa()|0;else{A=b[w+11>>0]|0;d=A<<24>>24<0;y=0;oa(73,x|0,(d?f[w>>2]|0:w)|0,(d?f[w+4>>2]|0:A&255)|0)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(w);break}f[B>>2]=f[x>>2];f[B+4>>2]=f[x+4>>2];f[B+8>>2]=f[x+8>>2];a=0;while(1){if((a|0)==3)break;f[x+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;g=a+-24|0;e=g+11|0;if((b[e>>0]|0)<0){SBa(f[g>>2]|0,0);f[a+-20>>2]=0;a=g}else{SBa(g,0);b[e>>0]=0;a=g}Sq(g);f[a>>2]=f[B>>2];f[a+4>>2]=f[B+4>>2];f[a+8>>2]=f[B+8>>2];a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}zta(B);zta(w);zta(x);zta(z);a=h;break a}while(0);zta(x)}zta(z);break b}case 99:{a=rh(a,c,d)|0;break a}case 101:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72103)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72103,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 108:{h=fc(j,c,d)|0;if((h|0)==(j|0))break a;g=d+4|0;if((f[d>>2]|0)==(f[g>>2]|0))break a;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;d:do if(k){e=uHa(72157)|0;if(e>>>0>4294967279)JZ();if(e>>>0<11){b[z+11>>0]=e;a=z}else{A=e+16&-16;a=QCa(A)|0;f[z>>2]=a;f[z+8>>2]=A|-2147483648;f[z+4>>2]=e}Pta(a,72157,e)|0;SBa(a+e|0,0)}else{a=0;while(1){if((a|0)==3)break d;f[z+(a<<2)>>2]=0;a=a+1|0}}while(0);y=0;ua(165,z|0,72170)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];a=0;while(1){if((a|0)==3)break;f[z+(a<<2)>>2]=0;a=a+1|0}y=0;ja(2054,w|0,(f[g>>2]|0)+-24|0);A=y;y=0;do if(A&1)a=Pa()|0;else{A=b[w+11>>0]|0;d=A<<24>>24<0;y=0;oa(73,x|0,(d?f[w>>2]|0:w)|0,(d?f[w+4>>2]|0:A&255)|0)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(w);break}f[B>>2]=f[x>>2];f[B+4>>2]=f[x+4>>2];f[B+8>>2]=f[x+8>>2];a=0;while(1){if((a|0)==3)break;f[x+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;g=a+-24|0;e=g+11|0;if((b[e>>0]|0)<0){SBa(f[g>>2]|0,0);f[a+-20>>2]=0;a=g}else{SBa(g,0);b[e>>0]=0;a=g}Sq(g);f[a>>2]=f[B>>2];f[a+4>>2]=f[B+4>>2];f[a+8>>2]=f[B+8>>2];a=0;while(1){if((a|0)==3)break;f[B+(a<<2)>>2]=0;a=a+1|0}zta(B);zta(w);zta(x);zta(z);a=h;break a}while(0);zta(x)}zta(z);break b}case 110:{a=Kc(a,c,d)|0;break a}case 115:{a=mo(a,c,d)|0;break a}case 116:{a=no(a,c,d)|0;break a}case 118:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72178)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72178,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 86:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72180)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72180,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 101:switch(b[g>>0]|0){case 111:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72183)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72183,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 79:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72185)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72185,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 113:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72188)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72188,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 103:switch(b[g>>0]|0){case 101:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72191)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72191,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 116:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72121)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72121,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 105:{if((b[g>>0]|0)!=120)break a;e=fc(A,c,d)|0;if((e|0)==(A|0))break a;h=fc(e,c,d)|0;i=d+4|0;if((h|0)==(e|0)){g=f[i>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;B=g+-24|0;f[i>>2]=B;Xka(B);g=f[i>>2]|0}}e=f[i>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(B,e+-24|0);a=f[i>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;A=g+-24|0;f[i>>2]=A;Xka(A);g=f[i>>2]|0}y=0;ja(2054,x|0,a+-48|0);A=y;y=0;if(A&1)a=Pa()|0;else{y=0;ya(149,v|0,72085,x|0);A=y;y=0;if(A&1)a=Pa()|0;else{y=0;ua(165,v|0,72194)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[t>>2]=f[v>>2];f[t+4>>2]=f[v+4>>2];f[t+8>>2]=f[v+8>>2];a=0;while(1){if((a|0)==3)break;f[v+(a<<2)>>2]=0;a=a+1|0}A=b[B+11>>0]|0;d=A<<24>>24<0;y=0;oa(73,t|0,(d?f[B>>2]|0:B)|0,(d?f[B+4>>2]|0:A&255)|0)|0;A=y;y=0;do if(A&1)a=Pa()|0;else{f[w>>2]=f[t>>2];f[w+4>>2]=f[t+4>>2];f[w+8>>2]=f[t+8>>2];a=0;while(1){if((a|0)==3)break;f[t+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,w|0,72132)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(w);break}f[o>>2]=f[w>>2];f[o+4>>2]=f[w+4>>2];f[o+8>>2]=f[w+8>>2];a=0;while(1){if((a|0)==3)break;f[w+(a<<2)>>2]=0;a=a+1|0}hM(z,o);nu((f[i>>2]|0)+-24|0,z);Xka(z);zta(o);zta(w);zta(t);zta(v);zta(x);zta(B);a=h;break a}while(0);zta(t)}zta(v)}zta(x)}zta(B);break}case 108:switch(b[g>>0]|0){case 101:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72197)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72197,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 115:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72200)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72200,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 83:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72203)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72203,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 116:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72119)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72119,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 109:switch(b[g>>0]|0){case 105:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72207)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72207,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 73:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72209)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72209,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 108:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72103)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72103,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 76:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72212)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72212,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 109:{if(h?(b[A>>0]|0)==95:0){f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72215)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{A=g+16&-16;e=QCa(A)|0;f[B>>2]=e;f[B+8>>2]=A|-2147483648;f[B+4>>2]=g}Pta(e,72215,g)|0;SBa(e+g|0,0);y=0;e=xa(27,n|0,c|0,B|0,d|0)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(n|0)?a:e;break a}}h=fc(A,c,d)|0;if((h|0)==(A|0))break a;g=d+4|0;e=f[g>>2]|0;if((f[d>>2]|0)==(e|0))break a;HL(z,e+-24|0);y=0;oa(77,z|0,0,72085)|0;A=y;y=0;do if(A&1)a=Pa()|0;else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];a=0;while(1){if((a|0)==3)break;f[z+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,x|0,72218)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(x);break}f[l>>2]=f[x>>2];f[l+4>>2]=f[x+4>>2];f[l+8>>2]=f[x+8>>2];a=0;while(1){if((a|0)==3)break;f[x+(a<<2)>>2]=0;a=a+1|0}hM(B,l);nu((f[g>>2]|0)+-24|0,B);Xka(B);zta(l);zta(x);zta(z);a=h;break a}while(0);zta(z);break b}default:break a}case 110:switch(b[g>>0]|0){case 119:case 97:{a=Oc(a,c,d)|0;break a}case 101:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72222)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72222,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 103:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72207)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72207,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 116:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72225)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72225,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 120:{B=Ll(A,c,d)|0;a=(B|0)==(A|0)?a:B;break a}default:break a}case 111:switch(b[g>>0]|0){case 110:{a=Kc(a,c,d)|0;break a}case 111:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72227)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72227,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 114:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72230)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72230,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 82:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72232)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72232,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 112:switch(b[g>>0]|0){case 109:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72235)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72235,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 108:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72239)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72239,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 76:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72241)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72241,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 112:{if(h?(b[A>>0]|0)==95:0){f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72244)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{A=g+16&-16;e=QCa(A)|0;f[B>>2]=e;f[B+8>>2]=A|-2147483648;f[B+4>>2]=g}Pta(e,72244,g)|0;SBa(e+g|0,0);y=0;e=xa(27,n|0,c|0,B|0,d|0)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(n|0)?a:e;break a}}h=fc(A,c,d)|0;if((h|0)==(A|0))break a;g=d+4|0;e=f[g>>2]|0;if((f[d>>2]|0)==(e|0))break a;HL(z,e+-24|0);y=0;oa(77,z|0,0,72085)|0;A=y;y=0;do if(A&1)a=Pa()|0;else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];a=0;while(1){if((a|0)==3)break;f[z+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,x|0,72247)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(x);break}f[m>>2]=f[x>>2];f[m+4>>2]=f[x+4>>2];f[m+8>>2]=f[x+8>>2];a=0;while(1){if((a|0)==3)break;f[x+(a<<2)>>2]=0;a=a+1|0}hM(B,m);nu((f[g>>2]|0)+-24|0,B);Xka(B);zta(m);zta(x);zta(z);a=h;break a}while(0);zta(z);break b}case 115:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72239)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72239,g)|0;SBa(e+g|0,0);y=0;e=xa(27,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 116:{a=Aq(a,c,d)|0;break a}default:break a}case 113:{if((b[g>>0]|0)!=117)break a;e=fc(A,c,d)|0;if((e|0)==(A|0))break a;g=fc(e,c,d)|0;if((g|0)==(e|0)){e=d+4|0;h=f[e>>2]|0;g=h+-24|0;while(1){if((h|0)==(g|0))break a;B=h+-24|0;f[e>>2]=B;Xka(B);h=f[e>>2]|0}}h=fc(g,c,d)|0;i=d+4|0;if((h|0)==(g|0)){g=f[i>>2]|0;e=g+-24|0;h=g;while(1){if((h|0)==(e|0))break;B=h+-24|0;f[i>>2]=B;Xka(B);h=f[i>>2]|0}g=g+-48|0;while(1){if((e|0)==(g|0))break a;B=e+-24|0;f[i>>2]=B;Xka(B);e=f[i>>2]|0}}e=f[i>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<3)break a;HL(B,e+-24|0);a=f[i>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;A=g+-24|0;f[i>>2]=A;Xka(A);g=f[i>>2]|0}y=0;ja(2054,z|0,a+-48|0);A=y;y=0;if(A&1)a=Pa()|0;else{a=f[i>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;A=g+-24|0;f[i>>2]=A;Xka(A);g=f[i>>2]|0}y=0;ja(2054,w|0,a+-48|0);A=y;y=0;if(A&1)a=Pa()|0;else{y=0;ya(149,s|0,72085,w|0);A=y;y=0;if(A&1)a=Pa()|0;else{y=0;ua(165,s|0,72251)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[r>>2]=f[s>>2];f[r+4>>2]=f[s+4>>2];f[r+8>>2]=f[s+8>>2];a=0;while(1){if((a|0)==3)break;f[s+(a<<2)>>2]=0;a=a+1|0}A=b[z+11>>0]|0;d=A<<24>>24<0;y=0;oa(73,r|0,(d?f[z>>2]|0:z)|0,(d?f[z+4>>2]|0:A&255)|0)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[q>>2]=f[r>>2];f[q+4>>2]=f[r+4>>2];f[q+8>>2]=f[r+8>>2];a=0;while(1){if((a|0)==3)break;f[r+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,q|0,72257)|0;A=y;y=0;if(A&1)a=Pa()|0;else{f[v>>2]=f[q>>2];f[v+4>>2]=f[q+4>>2];f[v+8>>2]=f[q+8>>2];a=0;while(1){if((a|0)==3)break;f[q+(a<<2)>>2]=0;a=a+1|0}A=b[B+11>>0]|0;d=A<<24>>24<0;y=0;oa(73,v|0,(d?f[B>>2]|0:B)|0,(d?f[B+4>>2]|0:A&255)|0)|0;A=y;y=0;do if(A&1)a=Pa()|0;else{f[t>>2]=f[v>>2];f[t+4>>2]=f[v+4>>2];f[t+8>>2]=f[v+8>>2];a=0;while(1){if((a|0)==3)break;f[v+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,t|0,72083)|0;A=y;y=0;if(A&1){a=Pa()|0;zta(t);break}f[p>>2]=f[t>>2];f[p+4>>2]=f[t+4>>2];f[p+8>>2]=f[t+8>>2];a=0;while(1){if((a|0)==3)break;f[t+(a<<2)>>2]=0;a=a+1|0}hM(x,p);nu((f[i>>2]|0)+-24|0,x);Xka(x);zta(p);zta(t);zta(v);zta(q);zta(r);zta(s);zta(w);zta(z);zta(B);a=h;break a}while(0);zta(v)}zta(q)}zta(r)}zta(s)}zta(w)}zta(z)}zta(B);break}case 114:switch(b[g>>0]|0){case 99:{a=qh(a,c,d)|0;break a}case 109:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72263)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72263,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 77:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72265)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72265,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 115:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72268)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72268,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}case 83:{f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;g=uHa(72271)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[B+11>>0]=g;e=B}else{z=g+16&-16;e=QCa(z)|0;f[B>>2]=e;f[B+8>>2]=z|-2147483648;f[B+4>>2]=g}Pta(e,72271,g)|0;SBa(e+g|0,0);y=0;e=xa(26,A|0,c|0,B|0,d|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(B);break b}else{zta(B);a=(e|0)==(A|0)?a:e;break a}}default:break a}case 115:switch(b[g>>0]|0){case 99:{a=th(a,c,d)|0;break a}case 112:{a=AY(a,c,d)|0;break a}case 114:{a=Kc(a,c,d)|0;break a}case 116:{a=Lm(a,c,d)|0;break a}case 122:{a=Km(a,c,d)|0;break a}case 90:{if((i-e|0)<=2)break a;switch(b[j>>0]|0){case 84:{a=dg(a,c,d)|0;break a}case 102:{a=ym(a,c,d)|0;break a}default:break a}}default:break a}case 116:switch(b[g>>0]|0){case 105:case 101:{a=vl(a,c,d)|0;break a}case 114:{UQ(B,72275);a=d+4|0;e=f[a>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,B|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(B);break b}}else{ZL(e,B);f[a>>2]=(f[a>>2]|0)+24}Xka(B);a=A;break a}case 119:{a=br(a,c,d)|0;break a}default:break a}case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{a=Kc(a,c,d)|0;break a}default:break a}while(0);$a(a|0)}while(0);u=C;return a|0}function gc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;K=u;u=u+144|0;o=K+140|0;n=K+136|0;D=K+132|0;E=K+128|0;G=K+116|0;H=K+100|0;F=K+88|0;I=K+68|0;J=K+52|0;p=K+28|0;q=K+16|0;r=K+112|0;s=K+96|0;t=K+80|0;v=K+64|0;w=K+48|0;x=K+24|0;z=K+12|0;A=K+8|0;B=K+4|0;C=K;f[D>>2]=a;f[E>>2]=c;f[G>>2]=0;f[G+4>>2]=0;f[G+8>>2]=0;gua(H);yBa(F);f[I>>2]=0;k=I+4|0;f[k>>2]=0;f[I+8>>2]=0;f[J>>2]=0;l=J+4|0;f[l>>2]=0;f[J+8>>2]=0;f[p>>2]=G;f[p+4>>2]=H;f[p+8>>2]=I;f[p+12>>2]=F;f[p+16>>2]=J;f[q>>2]=G;f[q+4>>2]=H;m=I+8|0;y=0;ja(497,I|0,D|0);j=y;y=0;a:do if(!(j&1)){a=f[l>>2]|0;j=J+8|0;if((a|0)==(f[j>>2]|0)){y=0;ja(497,J|0,E|0);i=y;y=0;if(i&1)break;i=E}else{f[a>>2]=f[E>>2];f[l>>2]=(f[l>>2]|0)+4;i=E}h=d+16|0;b:while(1){g=f[k>>2]|0;d=g;c=f[l>>2]|0;a=(c|0)==(f[J>>2]|0);if((g|0)==(f[I>>2]|0)){c=368;break}if(a){a=0;c=368;break}g=f[d+-4>>2]|0;f[D>>2]=g;a=0;while(1){if((a|0)==-1)break;e=a+-1|0;f[k>>2]=d+(e<<2);a=e}e=f[c+-4>>2]|0;f[i>>2]=e;a=0;while(1){if((a|0)==-1)break;d=a+-1|0;f[l>>2]=c+(d<<2);a=d}c=g;d=e;a=(g|0)!=0;if((e|0)==0^(a^1)){a=0;c=368;break}if(!a)continue;if((c|0)==(F|0)){y=0;ia(367,q|0);g=y;y=0;if(g&1)break a;else continue}y=0;a=oa(55,f[h>>2]|0,c|0,d|0)|0;g=y;y=0;if(g&1)break a;if(a)continue;a=f[D>>2]|0;c=f[a>>2]|0;if((c|0)!=(f[f[E>>2]>>2]|0)){a=0;c=368;break}do switch(c|0){case 23:case 22:continue b;case 1:{y=0;a=la(160,a|0)|0;g=y;y=0;if(g&1)break a;f[r>>2]=f[a+8>>2];y=0;a=la(160,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;f[s>>2]=f[a+8>>2];y=0;f[n>>2]=f[r>>2];f[o>>2]=f[s>>2];a=oa(56,p|0,n|0,o|0)|0;g=y;y=0;if(g&1)break a;if(!a){a=0;c=368;break b}y=0;a=la(160,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+16>>2]|0;y=0;c=la(160,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((gKa(a)|0)==(gKa(f[c+16>>2]|0)|0))d=0;else{a=0;c=368;break b}while(1){y=0;a=la(160,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;if(d>>>0>=(gKa(f[a+16>>2]|0)|0)>>>0)continue b;y=0;a=la(160,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+12|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(160,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+12|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+1|0}}case 2:{y=0;a=la(169,a|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(169,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(169,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(169,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(169,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(169,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 3:{y=0;a=la(176,a|0)|0;g=y;y=0;if(g&1)break a;f[t>>2]=f[a+8>>2];y=0;a=la(176,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;f[v>>2]=f[a+8>>2];y=0;f[n>>2]=f[t>>2];f[o>>2]=f[v>>2];a=oa(56,p|0,n|0,o|0)|0;g=y;y=0;if(g&1)break a;if(!a){a=0;c=368;break b}y=0;a=la(176,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(176,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 4:{y=0;a=la(165,a|0)|0;g=y;y=0;if(g&1)break a;f[w>>2]=f[a+8>>2];y=0;a=la(165,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;f[x>>2]=f[a+8>>2];f[n>>2]=f[w>>2];f[o>>2]=f[x>>2];if(!(hS(H,n,o)|0)){a=0;c=368;break b}y=0;a=la(165,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(165,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(165,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(165,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 5:{y=0;a=la(177,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(177,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)==(gKa(f[c+12>>2]|0)|0))c=0;else{a=0;c=368;break b}while(1){y=0;a=la(177,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;g=c>>>0<(gKa(f[a+12>>2]|0)|0)>>>0;a=f[D>>2]|0;if(!g)break;y=0;a=la(177,a|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(89,a+8|0,c|0)|0;g=y;y=0;if(g&1)break a;f[z>>2]=f[a>>2];y=0;a=la(177,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(89,a+8|0,c|0)|0;g=y;y=0;if(g&1)break a;f[A>>2]=f[a>>2];f[n>>2]=f[z>>2];f[o>>2]=f[A>>2];if(hS(H,n,o)|0)c=c+1|0;else{a=0;c=368;break b}}y=0;a=la(177,a|0)|0;g=y;y=0;if(g&1)break a;f[B>>2]=f[a+24>>2];y=0;a=la(177,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;f[C>>2]=f[a+24>>2];f[n>>2]=f[B>>2];f[o>>2]=f[C>>2];if(!(hS(H,n,o)|0)){a=0;c=368;break b}y=0;a=la(177,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(177,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(177,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+32|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(177,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+32|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 6:{y=0;a=la(178,a|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(178,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+24>>2]|0,f[c+24>>2]|0)|0){a=0;c=368;break b}y=0;a=la(178,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(178,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)==(gKa(f[c+12>>2]|0)|0))d=0;else{a=0;c=368;break b}while(1){y=0;a=la(178,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;if(d>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(178,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(178,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+1|0}}case 7:{y=0;a=la(179,a|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(179,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+24>>2]|0,f[c+24>>2]|0)|0){a=0;c=368;break b}y=0;a=la(179,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(179,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)==(gKa(f[c+12>>2]|0)|0))d=0;else{a=0;c=368;break b}while(1){y=0;a=la(179,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;if(d>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(179,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(179,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+1|0}}case 8:{y=0;a=la(180,a|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(180,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(180,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(180,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+24>>2]|0,f[c+24>>2]|0)|0){a=0;c=368;break b}y=0;a=la(180,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(180,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)==(gKa(f[c+12>>2]|0)|0))d=0;else{a=0;c=368;break b}while(1){y=0;a=la(180,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;if(d>>>0>=(gKa(f[a+12>>2]|0)|0)>>>0)continue b;y=0;a=la(180,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(180,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+8|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+1|0}}case 9:{y=0;a=la(181,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+8>>2]|0;y=0;c=la(181,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)==(f[c+8>>2]|0))continue b;else{a=0;c=368;break b}}case 10:{y=0;a=la(167,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+8>>2]|0;y=0;c=la(167,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+8>>2]|0)){a=0;c=368;break b}y=0;a=la(167,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+4>>2]|0;y=0;c=la(167,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+4>>2]|0)){a=0;c=368;break b}y=0;a=la(167,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(167,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 11:{y=0;a=la(182,a|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(182,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+8>>2]|0,f[c+8>>2]|0)|0){a=0;c=368;break b}else continue b}case 12:{y=0;a=la(183,a|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(183,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+8>>2]|0,f[c+8>>2]|0)|0){a=0;c=368;break b}y=0;a=la(183,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(183,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 13:{y=0;a=la(184,a|0)|0;g=y;y=0;if(g&1)break a;a=b[a+8>>0]|0;y=0;c=la(184,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(a<<24>>24!=(b[c+8>>0]|0)){a=0;c=368;break b}y=0;a=la(184,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=b[a+9>>0]|0;y=0;c=la(184,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(a<<24>>24!=(b[c+9>>0]|0)){a=0;c=368;break b}y=0;a=la(184,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(184,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)!=(gKa(f[c+12>>2]|0)|0)){a=0;c=368;break b}y=0;a=la(184,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+16>>2]|0;y=0;c=la(184,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)!=(gKa(f[c+16>>2]|0)|0)){a=0;c=368;break b}y=0;a=la(184,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+24|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(184,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+24|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 14:{y=0;a=la(185,a|0)|0;g=y;y=0;if(g&1)break a;a=b[a+8>>0]|0;y=0;c=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(a<<24>>24!=(b[c+8>>0]|0)){a=0;c=368;break b}y=0;a=la(185,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+12>>2]|0;y=0;c=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)!=(gKa(f[c+12>>2]|0)|0)){a=0;c=368;break b}y=0;a=la(185,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+16>>2]|0;y=0;c=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)!=(gKa(f[c+16>>2]|0)|0)){a=0;c=368;break b}y=0;a=la(185,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+32>>2]|0;y=0;c=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+32>>2]|0)){a=0;c=368;break b}y=0;a=la(185,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+24|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+24|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(185,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(185,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+28|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 15:{y=0;a=la(186,a|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(186,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(103,a+8|0,c+8|0)|0;g=y;y=0;if(g&1)break a;if(a){a=0;c=368;break b}else continue b}case 16:{y=0;a=la(187,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+8>>2]|0;y=0;c=la(187,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+8>>2]|0)){a=0;c=368;break b}y=0;a=la(187,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(187,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 17:{y=0;a=la(188,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+8>>2]|0;y=0;c=la(188,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+8>>2]|0)){a=0;c=368;break b}y=0;a=la(188,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(188,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(188,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(188,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 18:{y=0;a=la(189,a|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(189,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(189,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(189,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+12|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}y=0;a=la(189,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(189,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+16|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 19:{y=0;a=la(190,a|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(190,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 20:{y=0;a=la(191,a|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(191,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;a=a+8|0;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a;else continue b}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4;continue b}}case 21:{y=0;a=la(192,a|0)|0;g=y;y=0;if(g&1)break a;a=f[a+8>>2]|0;y=0;c=la(192,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if((a|0)!=(f[c+8>>2]|0)){a=0;c=368;break b}y=0;a=la(192,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;c=la(192,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;if(aDa(f[a+12>>2]|0,f[c+12>>2]|0)|0){a=0;c=368;break b}y=0;a=la(192,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;a=f[a+20>>2]|0;y=0;c=la(192,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;g=gKa(a)|0;if((g|0)==(gKa(f[c+20>>2]|0)|0))d=0;else{a=0;c=368;break b}while(1){y=0;a=la(192,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;if(d>>>0>=(gKa(f[a+20>>2]|0)|0)>>>0)continue b;y=0;a=la(192,f[D>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+16|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[k>>2]|0;if((c|0)==(f[m>>2]|0)){y=0;ja(497,I|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[k>>2]=(f[k>>2]|0)+4}y=0;a=la(192,f[E>>2]|0)|0;g=y;y=0;if(g&1)break a;y=0;a=ua(64,a+16|0,d|0)|0;g=y;y=0;if(g&1)break a;c=f[l>>2]|0;if((c|0)==(f[j>>2]|0)){y=0;ja(497,J|0,a|0);g=y;y=0;if(g&1)break a}else{f[c>>2]=f[a>>2];f[l>>2]=(f[l>>2]|0)+4}d=d+1|0}}default:{c=367;break b}}while(0)}if((c|0)==367){y=0;za(6);y=0;break}else if((c|0)==368){E4(J);E4(I);Fba(H);E4(G);u=K;return a|0}}while(0);K=Pa()|0;E4(J);E4(I);Fba(H);E4(G);$a(K|0);return 0}function hc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;M=u;u=u+192|0;J=M+184|0;Q=M+156|0;n=M+172|0;o=M+160|0;O=M+120|0;t=M+96|0;s=M+144|0;w=M+132|0;z=M+108|0;A=M+92|0;E=M+80|0;B=M+76|0;C=M+64|0;I=M+52|0;H=M+40|0;D=M+28|0;F=M+16|0;K=M+12|0;N=M;Woa(Q);y=0;g=la(202,c|0)|0;G=y;y=0;a:do if(G&1)P=11;else{b:do if((g|0)==4){y=0;g=ua(51,c|0,3)|0;G=y;y=0;if(G&1){P=11;break a}if(fIa(b[g>>0]|0)|0){y=0;g=ua(51,c|0,3)|0;G=y;y=0;do if((!(G&1)?(y=0,h=ua(51,g|0,0)|0,G=y,y=0,!(G&1)):0)?(y=0,i=la(203,h|0)|0,G=y,y=0,!(G&1)):0){if(bDa(i,f[18763]|0)|0){f[(f[Q>>2]|0)+12>>2]=0;l=1;G=a;break b}y=0;g=ua(51,c|0,3)|0;G=y;y=0;if((!(G&1)?(y=0,j=ua(51,g|0,0)|0,G=y,y=0,!(G&1)):0)?(y=0,k=la(203,j|0)|0,G=y,y=0,!(G&1)):0){if(bDa(k,f[18760]|0)|0){f[(f[Q>>2]|0)+12>>2]=2;g=(f[a>>2]|0)+112|0;if(!(b[g>>0]|0)){b[g>>0]=1;b[(f[a>>2]|0)+113>>0]=1;l=1;G=a;break b}h=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(53720)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;d=n}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=26;break}f[n>>2]=d;f[n+8>>2]=e|-2147483648;f[n+4>>2]=g}Pta(d,53720,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,n|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(n);if(!e)break a}else{y=0;za(3);y=0;P=26}while(0);if((P|0)==26)d=Pa()|0;Oa(h|0);break a}y=0;g=ua(51,c|0,3)|0;G=y;y=0;if((!(G&1)?(y=0,l=ua(51,g|0,0)|0,G=y,y=0,!(G&1)):0)?(y=0,m=la(203,l|0)|0,G=y,y=0,!(G&1)):0){if(!(bDa(m,f[18755]|0)|0)){y=0;g=ua(51,c|0,3)|0;G=y;y=0;if(G&1)break;y=0;g=ua(51,g|0,0)|0;G=y;y=0;if(G&1)break;y=0;g=la(203,g|0)|0;G=y;y=0;if(G&1)break;if(!(bDa(g,f[18829]|0)|0)){l=0;G=a;break b}f[(f[Q>>2]|0)+12>>2]=3;l=1;G=a;break b}f[(f[Q>>2]|0)+12>>2]=1;g=(f[a>>2]|0)+60|0;if(!(b[g>>0]|0)){b[g>>0]=1;b[(f[a>>2]|0)+61>>0]=1;l=1;G=a;break b}h=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;g=uHa(52117)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[o+11>>0]=g;d=o}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=43;break}f[o>>2]=d;f[o+8>>2]=e|-2147483648;f[o+4>>2]=g}Pta(d,52117,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,o|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(o);if(!e)break a}else{y=0;za(3);y=0;P=43}while(0);if((P|0)==43)d=Pa()|0;Oa(h|0);break a}}}while(0);d=Pa()|0;break a}else{l=0;G=a}}else{l=0;G=a}while(0);y=0;g=la(202,c|0)|0;o=y;y=0;c:do if(!(o&1)){do if(g>>>0>3){y=0;g=ua(51,c|0,3)|0;o=y;y=0;if(o&1)break c;if(qIa(b[g>>0]|0)|0){y=0;g=ua(51,c|0,1)|0;r=y;y=0;if(!(r&1)?(y=0,p=la(203,g|0)|0,r=y,y=0,!(r&1)):0){FCa(J,p);f[f[Q>>2]>>2]=f[J>>2];h=2;k=1;break}d=Pa()|0;break a}else P=61}else P=61;while(0);do if((P|0)==61)if(l){y=0;g=ua(51,c|0,3)|0;p=y;y=0;if(p&1)break c;y=0;g=la(202,g|0)|0;p=y;y=0;if(p&1)break c;if(g>>>0>1){y=0;g=ua(51,c|0,3)|0;p=y;y=0;if(p&1)break c;y=0;g=ua(51,g|0,1)|0;p=y;y=0;if(p&1)break c;if(Hra(g)|0){y=0;g=ua(51,c|0,3)|0;p=y;y=0;if((!(p&1)?(y=0,q=ua(51,g|0,1)|0,p=y,y=0,!(p&1)):0)?(y=0,r=la(203,q|0)|0,q=y,y=0,!(q&1)):0){FCa(J,r);f[f[Q>>2]>>2]=f[J>>2];h=1;k=2;break}d=Pa()|0;break a}else{h=1;k=1}}else{h=1;k=1}}else{h=1;k=1}while(0);i=f[Q>>2]|0;d:do if(!(pJa(f[i>>2]|0)|0))switch(f[i+12>>2]|0){case 0:{r=a+44|0;s=f[r>>2]|0;f[r>>2]=s+1;y=0;ja(593,t|0,s|0);s=y;y=0;if(s&1)d=Pa()|0;else{y=0;ua(81,t|0,53741)|0;s=y;y=0;do if(!(s&1)){f[O>>2]=f[t>>2];f[O+4>>2]=f[t+4>>2];f[O+8>>2]=f[t+8>>2];g=0;while(1){if((g|0)==3)break;f[t+(g<<2)>>2]=0;g=g+1|0}y=0;ja(582,J|0,O|0);s=y;y=0;if(s&1){d=Pa()|0;zta(O);break}f[i>>2]=f[J>>2];zta(O);zta(t);g=f[Q>>2]|0;i=a+12|0;j=f[i>>2]|0;if((j|0)==(f[a+16>>2]|0)){y=0;ja(68,a+8|0,g|0);t=y;y=0;if(t&1)break c;else break d}else{f[j>>2]=f[g>>2];f[i>>2]=(f[i>>2]|0)+4;break d}}else d=Pa()|0;while(0);zta(t)}break a}case 3:{r=a+48|0;s=f[r>>2]|0;f[r>>2]=s+1;y=0;ja(593,t|0,s|0);s=y;y=0;if(s&1)d=Pa()|0;else{y=0;ua(81,t|0,53758)|0;s=y;y=0;do if(!(s&1)){f[O>>2]=f[t>>2];f[O+4>>2]=f[t+4>>2];f[O+8>>2]=f[t+8>>2];g=0;while(1){if((g|0)==3)break;f[t+(g<<2)>>2]=0;g=g+1|0}y=0;ja(582,J|0,O|0);s=y;y=0;if(s&1){d=Pa()|0;zta(O);break}f[i>>2]=f[J>>2];zta(O);zta(t);g=f[Q>>2]|0;i=a+36|0;j=f[i>>2]|0;if((j|0)==(f[a+40>>2]|0)){y=0;ja(68,a+32|0,g|0);t=y;y=0;if(t&1)break c;else break d}else{f[j>>2]=f[g>>2];f[i>>2]=(f[i>>2]|0)+4;break d}}else d=Pa()|0;while(0);zta(t)}break a}case 2:{y=0;ja(593,t|0,0);s=y;y=0;if(s&1)d=Pa()|0;else{y=0;ua(81,t|0,53772)|0;s=y;y=0;do if(!(s&1)){f[O>>2]=f[t>>2];f[O+4>>2]=f[t+4>>2];f[O+8>>2]=f[t+8>>2];g=0;while(1){if((g|0)==3)break;f[t+(g<<2)>>2]=0;g=g+1|0}y=0;ja(582,J|0,O|0);s=y;y=0;if(s&1){d=Pa()|0;zta(O);break}else{f[i>>2]=f[J>>2];zta(O);zta(t);break d}}else d=Pa()|0;while(0);zta(t)}break a}case 1:{y=0;ja(593,t|0,0);s=y;y=0;if(s&1)d=Pa()|0;else{y=0;ua(81,t|0,53787)|0;s=y;y=0;do if(!(s&1)){f[O>>2]=f[t>>2];f[O+4>>2]=f[t+4>>2];f[O+8>>2]=f[t+8>>2];g=0;while(1){if((g|0)==3)break;f[t+(g<<2)>>2]=0;g=g+1|0}y=0;ja(582,J|0,O|0);s=y;y=0;if(s&1){d=Pa()|0;zta(O);break}else{f[i>>2]=f[J>>2];zta(O);zta(t);break d}}else d=Pa()|0;while(0);zta(t)}break a}default:{h=zb(20)|0;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;g=uHa(53801)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[s+11>>0]=g;d=s}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=135;break}f[s>>2]=d;f[s+8>>2]=e|-2147483648;f[s+4>>2]=g}Pta(d,53801,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,s|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(s);if(!e)break a}else{y=0;za(3);y=0;P=135}while(0);if((P|0)==135)d=Pa()|0;Oa(h|0);break a}}while(0);y=0;g=ua(51,c|0,h|0)|0;t=y;y=0;if(!(t&1)){if(Wra(g)|0){if(!l)f[(f[Q>>2]|0)+12>>2]=0}else{y=0;g=ua(51,c|0,h|0)|0;t=y;y=0;if(t&1)break;y=0;g=la(203,g|0)|0;t=y;y=0;if(t&1)break;if(!(bDa(g,f[18760]|0)|0)){y=0;g=ua(51,c|0,h|0)|0;t=y;y=0;if(t&1)break;y=0;g=la(203,g|0)|0;t=y;y=0;if(t&1)break;if(!(bDa(g,f[18755]|0)|0)){y=0;g=ua(51,c|0,h|0)|0;t=y;y=0;if(t&1)break;y=0;g=la(203,g|0)|0;t=y;y=0;if(t&1)break;if(bDa(g,f[18829]|0)|0)g=3;else{h=zb(20)|0;f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;g=uHa(53816)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[w+11>>0]=g;d=w}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=157;break}f[w>>2]=d;f[w+8>>2]=e|-2147483648;f[w+4>>2]=g}Pta(d,53816,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,w|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(w);if(!e)break a}else{y=0;za(3);y=0;P=157}while(0);if((P|0)==157)d=Pa()|0;Oa(h|0);break a}}else g=1}else g=2;f[(f[Q>>2]|0)+12>>2]=g;h=h+1|0}i=h+1|0;y=0;g=ua(51,c|0,h|0)|0;w=y;y=0;if(!(w&1)?(y=0,v=la(203,g|0)|0,w=y,y=0,!(w&1)):0){FCa(J,v);o=f[Q>>2]|0;f[o+4>>2]=f[J>>2];y=0;g=ua(51,c|0,i|0)|0;w=y;y=0;if(w&1)break;if(!(qIa(b[g>>0]|0)|0)){h=zb(20)|0;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;g=uHa(53835)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[z+11>>0]=g;d=z}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=176;break}f[z>>2]=d;f[z+8>>2]=e|-2147483648;f[z+4>>2]=g}Pta(d,53835,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,z|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(z);if(!e)break a}else{y=0;za(3);y=0;P=176}while(0);if((P|0)==176)d=Pa()|0;Oa(h|0);break a}h=h+2|0;y=0;g=ua(51,c|0,i|0)|0;z=y;y=0;if(!(z&1)?(y=0,x=la(203,g|0)|0,z=y,y=0,!(z&1)):0){FCa(J,x);f[o+8>>2]=f[J>>2];if(l){y=0;g=ua(51,c|0,3)|0;z=y;y=0;if(z&1)break;else n=g}else n=c;g=l?k:h;m=g+1|0;q=c+28|0;p=c+32|0;e:do switch(f[o+12>>2]|0){case 0:{y=0;ia(379,O|0);F=y;y=0;if(!(F&1)){y=0;d=la(202,n|0)|0;F=y;y=0;f:do if(F&1)P=197;else{g:do if(d>>>0>g>>>0){y=0;l=ua(51,n|0,g|0)|0;F=y;y=0;if(F&1){P=197;break f}y=0;d=ua(51,l|0,0)|0;F=y;y=0;do if(!(F&1)){y=0;d=la(203,d|0)|0;F=y;y=0;if(F&1)break;h:do if(bDa(d,f[18762]|0)|0){e=f[O>>2]|0;i=e+8|0;j=e+12|0;k=e+16|0;h=1;while(1){y=0;d=la(202,l|0)|0;P=y;y=0;if(P&1){P=200;break}if(h>>>0>=d>>>0){P=244;break h}y=0;d=ua(51,l|0,h|0)|0;P=y;y=0;if(P&1){P=208;break}y=0;d=la(203,d|0)|0;P=y;y=0;if(P&1){P=208;break}y=0;d=ua(136,d|0,0)|0;P=y;y=0;if(P&1){P=208;break}f[J>>2]=d;g=f[j>>2]|0;if(g>>>0>=(f[k>>2]|0)>>>0){y=0;ja(73,i|0,J|0);P=y;y=0;if(P&1){P=208;break}}else{f[g>>2]=d;f[j>>2]=g+4}h=h+1|0}if((P|0)==200){d=Pa()|0;break f}else if((P|0)==208){d=Pa()|0;break f}}else{if(bDa(d,f[18761]|0)|0){y=0;d=ua(51,l|0,1)|0;F=y;y=0;if(F&1)break;y=0;d=la(203,d|0)|0;F=y;y=0;if(F&1)break;y=0;d=ua(136,d|0,0)|0;F=y;y=0;if(F&1)break;e=f[O>>2]|0;f[e+4>>2]=d;P=244;break}if(!(bDa(d,f[18752]|0)|0)){h=zb(20)|0;f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;g=uHa(53883)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[C+11>>0]=g;d=C}else{e=g+16&-16;y=0;d=la(150,e|0)|0;N=y;y=0;if(N&1){P=241;break}f[C>>2]=d;f[C+8>>2]=e|-2147483648;f[C+4>>2]=g}Pta(d,53883,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,C|0);N=y;y=0;if(N&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(C);if(!e)break f}else{y=0;za(3);y=0;P=241}while(0);if((P|0)==241)d=Pa()|0;Oa(h|0);break f}y=0;d=ua(51,l|0,1)|0;F=y;y=0;if(F&1)break;y=0;e=la(203,d|0)|0;F=y;y=0;if(F&1)break;d=f[G>>2]|0;FCa(A,e);y=0;f[J>>2]=f[A>>2];d=ua(139,d|0,J|0)|0;F=y;y=0;do if(!(F&1)){if(d|0){d=f[G>>2]|0;FCa(B,e);y=0;f[J>>2]=f[B>>2];d=ua(107,d|0,J|0)|0;F=y;y=0;if(F&1)break;e=f[O>>2]|0;y=0;ua(151,e|0,d|0)|0;F=y;y=0;if(F&1)break;else{P=244;break h}}h=zb(20)|0;f[E>>2]=0;f[E+4>>2]=0;f[E+8>>2]=0;g=uHa(53854)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[E+11>>0]=g;d=E}else{e=g+16&-16;y=0;d=la(150,e|0)|0;N=y;y=0;if(N&1){P=228;break}f[E>>2]=d;f[E+8>>2]=e|-2147483648;f[E+4>>2]=g}Pta(d,53854,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,E|0);N=y;y=0;if(N&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(E);if(!e)break f}else{y=0;za(3);y=0;P=228}while(0);if((P|0)==228)d=Pa()|0;Oa(h|0);break f}while(0);d=Pa()|0;break f}while(0);do if((P|0)==244){y=0;d=la(202,n|0)|0;F=y;y=0;if(F&1)break;if(d>>>0<=m>>>0){g=O;d=e;break g}y=0;g=ua(51,n|0,m|0)|0;F=y;y=0;if(F&1)break;y=0;d=ua(51,g|0,0)|0;F=y;y=0;do if(!(F&1)){y=0;d=la(203,d|0)|0;F=y;y=0;if(F&1)break;if(!(aDa(d,f[18761]|0)|0)){y=0;d=ua(51,g|0,1)|0;I=y;y=0;if(I&1)break;y=0;d=la(203,d|0)|0;I=y;y=0;if(I&1)break;y=0;d=ua(136,d|0,0)|0;I=y;y=0;if(I&1)break;f[e+4>>2]=d;g=O;d=e;break g}h=zb(20)|0;f[I>>2]=0;f[I+4>>2]=0;f[I+8>>2]=0;g=uHa(53902)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[I+11>>0]=g;d=I}else{e=g+16&-16;y=0;d=la(150,e|0)|0;N=y;y=0;if(N&1){P=260;break}f[I>>2]=d;f[I+8>>2]=e|-2147483648;f[I+4>>2]=g}Pta(d,53902,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,I|0);N=y;y=0;if(N&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(I);if(!e)break f}else{y=0;za(3);y=0;P=260}while(0);if((P|0)==260)d=Pa()|0;Oa(h|0);break f}while(0);d=Pa()|0;break f}while(0);d=Pa()|0;break f}while(0);d=Pa()|0;break f}else{g=O;d=f[O>>2]|0}while(0);y=0;ja(2e3,H|0,d|0);I=y;y=0;if(I&1){P=197;break}y=0;e=ua(106,H|0,f[G>>2]|0)|0;I=y;y=0;if(I&1){d=Pa()|0;zta(H);break}f[o+16>>2]=f[e>>2];zta(H);f[g>>2]=0;if(!d){d=o;e=o}else{Nza(d);$Ja(d);e=f[Q>>2]|0;d=e}P=326;break e}while(0);if((P|0)==197)d=Pa()|0;e=f[O>>2]|0;f[O>>2]=0;if(e|0){Nza(e);$Ja(e)}break a}break}case 3:{y=0;h=ua(51,n|0,g|0)|0;O=y;y=0;if(!(O&1)){if(qIa(b[h>>0]|0)|0){y=0;g=ua(51,n|0,g|0)|0;O=y;y=0;if(O&1)break e;y=0;g=la(203,g|0)|0;O=y;y=0;if(O&1)break e;y=0;g=ua(136,g|0,0)|0;O=y;y=0;if(O&1)break e;f[o+20>>2]=g;d=o;e=o;P=326;break e}y=0;g=ua(51,n|0,g|0)|0;O=y;y=0;if(O&1)break e;y=0;d=ua(51,g|0,0)|0;O=y;y=0;do if(!(O&1)){y=0;d=la(203,d|0)|0;O=y;y=0;if(O&1)break;if(aDa(d,f[18736]|0)|0){h=zb(20)|0;f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;g=uHa(53918)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[D+11>>0]=g;d=D}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=295;break}f[D>>2]=d;f[D+8>>2]=e|-2147483648;f[D+4>>2]=g}Pta(d,53918,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,D|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(D);if(!e)break a}else{y=0;za(3);y=0;P=295}while(0);if((P|0)==295)d=Pa()|0;Oa(h|0);break a}y=0;d=ua(51,g|0,1)|0;O=y;y=0;if(O&1)break;y=0;d=la(203,d|0)|0;O=y;y=0;if(O&1)break;y=0;d=ua(136,d|0,0)|0;O=y;y=0;if(O&1)break;f[o+20>>2]=d;h=zb(20)|0;f[F>>2]=0;f[F+4>>2]=0;f[F+8>>2]=0;g=uHa(52267)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[F+11>>0]=g;d=F}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=309;break}f[F>>2]=d;f[F+8>>2]=e|-2147483648;f[F+4>>2]=g}Pta(d,52267,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,F|0,f[q>>2]|0,f[p>>2]|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(F);if(!e)break a}else{y=0;za(3);y=0;P=309}while(0);if((P|0)==309)d=Pa()|0;Oa(h|0);break a}while(0);d=Pa()|0;break a}break}case 1:{y=0;h=la(202,n|0)|0;O=y;y=0;if(!(O&1)){i:do if(g>>>0<(h+-1|0)>>>0){y=0;g=ua(51,n|0,g|0)|0;O=y;y=0;do if(!(O&1)){y=0;g=ua(152,g|0,53931)|0;O=y;y=0;if(O&1)break;f[(f[G>>2]|0)+68>>2]=g;g=m;break i}while(0);d=Pa()|0;break a}while(0);y=0;h=la(202,n|0)|0;O=y;y=0;if(O&1)break e;if(g>>>0>=(h+-1|0)>>>0){y=0;oa(39,(f[G>>2]|0)+72|0,-1,0)|0;O=y;y=0;if(O&1)break e;else{d=o;e=o;P=326;break e}}y=0;d=ua(51,n|0,g|0)|0;O=y;y=0;do if(!(O&1)){y=0;d=ua(152,d|0,53957)|0;O=y;y=0;if(O&1)break;f[(f[G>>2]|0)+72>>2]=d;d=o;e=o;P=326;break e}while(0);d=Pa()|0;break a}break}case 2:{y=0;oa(68,a|0,n|0,g|0)|0;O=y;y=0;if(!(O&1)){d=o;e=o;P=326}break}default:{d=o;e=o;P=326}}while(0);do if((P|0)==326?(L=f[G>>2]|0,f[K>>2]=f[d>>2],y=0,f[J>>2]=f[K>>2],L=ua(143,L|0,J|0)|0,O=y,y=0,!(O&1)):0){if(!L){O=f[G>>2]|0;f[Q>>2]=0;y=0;ja(1471,O|0,e|0);O=y;y=0;if(O&1)break;f[Q>>2]=0;u=M;return}h=zb(20)|0;f[N>>2]=0;f[N+4>>2]=0;f[N+8>>2]=0;g=uHa(52179)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[N+11>>0]=g;d=N}else{e=g+16&-16;y=0;d=la(150,e|0)|0;O=y;y=0;if(O&1){P=336;break}f[N>>2]=d;f[N+8>>2]=e|-2147483648;f[N+4>>2]=g}Pta(d,52179,g)|0;SBa(d+g|0,0);y=0;Ca(79,h|0,N|0,f[q>>2]|0,f[p>>2]|0);O=y;y=0;if(O&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(N);if(!e)break a}else{y=0;za(3);y=0;P=336}while(0);if((P|0)==336)d=Pa()|0;Oa(h|0);break a}while(0);d=Pa()|0;break a}d=Pa()|0;break a}d=Pa()|0;break a}}while(0);d=Pa()|0}while(0);if((P|0)==11)d=Pa()|0;e=f[Q>>2]|0;f[Q>>2]=0;if(e|0)$Ja(e);$a(d|0)}function ic(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;B=u;u=u+144|0;A=B+128|0;w=B+104|0;t=B+40|0;i=B+88|0;p=B+24|0;m=B+76|0;o=B+12|0;n=B;k=B+64|0;a:do if((a|0)!=(c|0)){x=d+16|0;switch(b[a>>0]|0){case 75:case 86:case 114:{f[A>>2]=0;e=sN(a,c,A)|0;b:do if((e|0)!=(a|0)?(q=(b[e>>0]|0)==70,s=d+4|0,l=((f[s>>2]|0)-(f[d>>2]|0)|0)/24|0,r=ic(e,c,d)|0,s=((f[s>>2]|0)-(f[d>>2]|0)|0)/24|0,(r|0)!=(e|0)):0){p=d+20|0;a=f[p>>2]|0;c:do if(q){e=a+-16|0;while(1){if((a|0)==(e|0))break c;z=a+-16|0;f[p>>2]=z;tM(z);a=f[p>>2]|0}}else e=a;while(0);a=f[d+12>>2]|0;f[w>>2]=a;if(e>>>0<(f[d+24>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[p>>2]=(f[p>>2]|0)+16}else qu(x,w);o=f[A>>2]|0;m=(o&1|0)==0;n=(o&2|0)==0;o=(o&4|0)==0;while(1){if(l>>>0>=s>>>0){a=r;break b}if(q){g=f[d>>2]|0;k=g+(l*24|0)+12|0;h=b[k+11>>0]|0;a=h<<24>>24<0;if(a){i=f[g+(l*24|0)+16>>2]|0;e=f[k>>2]|0}else{i=h&255;e=k}j=i+-2|0;if((b[e+j>>0]|0)==38)a=i+-3|0;else{if(a){e=f[k>>2]|0;a=f[g+(l*24|0)+16>>2]|0}else{e=k;a=h&255}a=(b[e+a+-1>>0]|0)==38?j:i}if(!m){x4(k,a,72030)|0;a=a+6|0}if(!n){x4((f[d>>2]|0)+(l*24|0)+12|0,a,72037)|0;a=a+9|0}if(!o)x4((f[d>>2]|0)+(l*24|0)+12|0,a,72047)|0}else{if(!m)C7((f[d>>2]|0)+(l*24|0)|0,72030)|0;if(!n)C7((f[d>>2]|0)+(l*24|0)|0,72037)|0;if(!o)C7((f[d>>2]|0)+(l*24|0)|0,72047)|0}a=f[p>>2]|0;e=(f[d>>2]|0)+(l*24|0)|0;g=a+-12|0;h=f[g>>2]|0;if((h|0)==(f[a+-8>>2]|0))Lt(a+-16|0,e);else{VT(h,e);f[g>>2]=(f[g>>2]|0)+24}l=l+1|0}}while(0);break a}default:{}}e=Bc(a,c,d)|0;if((e|0)==(a|0)){q=a+1|0;e=(q|0)!=(c|0);d:do switch(b[a>>0]|0){case 65:{g=Xc(a,c,d)|0;if((g|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}case 67:{h=ic(q,c,d)|0;if((h|0)==(q|0))break a;e=d+4|0;g=f[e>>2]|0;if((f[d>>2]|0)==(g|0))break a;C7(g+-24|0,72057)|0;a=(f[e>>2]|0)+-24|0;f[w>>2]=f[d+12>>2];gG(A,a,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=h;break a}case 70:{g=Df(a,c,d)|0;if((g|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}case 71:{h=ic(q,c,d)|0;if((h|0)==(q|0))break a;e=d+4|0;g=f[e>>2]|0;if((f[d>>2]|0)==(g|0))break a;C7(g+-24|0,72066)|0;a=(f[e>>2]|0)+-24|0;f[w>>2]=f[d+12>>2];gG(A,a,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=h;break a}case 77:{g=ne(a,c,d)|0;if((g|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}case 79:{n=d+4|0;g=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;m=ic(q,c,d)|0;n=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;if((m|0)==(q|0))break a;a=f[d+12>>2]|0;f[A>>2]=a;l=d+20|0;e=f[l>>2]|0;if(e>>>0<(f[d+24>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[l>>2]=(f[l>>2]|0)+16}else qu(x,A);j=A+11|0;k=A+4|0;i=g;while(1){if(i>>>0>=n>>>0){a=m;break a}aD(A,(f[d>>2]|0)+(i*24|0)+12|0,2);a=uHa(72077)|0;x=b[j>>0]|0;if((a|0)==((x<<24>>24<0?f[k>>2]|0:x&255)|0)){y=0;a=oa(78,A|0,72077,a|0)|0;x=y;y=0;if(x&1)break;a=(a|0)==0}else a=0;zta(A);e=f[d>>2]|0;if(!a){a=e+(i*24|0)+12|0;if((b[a+11>>0]|0)<0)a=f[a>>2]|0;if((b[a>>0]|0)==40){C7(e+(i*24|0)|0,72085)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}}else{C7(e+(i*24|0)|0,72080)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}C7((f[d>>2]|0)+(i*24|0)|0,72087)|0;a=f[l>>2]|0;e=(f[d>>2]|0)+(i*24|0)|0;g=a+-12|0;h=f[g>>2]|0;if((h|0)==(f[a+-8>>2]|0))Lt(a+-16|0,e);else{VT(h,e);f[g>>2]=(f[g>>2]|0)+24}i=i+1|0}B=ab(0)|0;lDa(B);break}case 80:{p=d+4|0;g=((f[p>>2]|0)-(f[d>>2]|0)|0)/24|0;o=ic(q,c,d)|0;p=((f[p>>2]|0)-(f[d>>2]|0)|0)/24|0;if((o|0)==(q|0))break a;a=f[d+12>>2]|0;f[A>>2]=a;n=d+20|0;e=f[n>>2]|0;if(e>>>0<(f[d+24>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[n>>2]=(f[n>>2]|0)+16}else qu(x,A);j=A+11|0;k=A+4|0;l=A+11|0;m=A+4|0;i=g;while(1){if(i>>>0>=p>>>0){a=o;break a}aD(A,(f[d>>2]|0)+(i*24|0)+12|0,2);a=uHa(72077)|0;x=b[j>>0]|0;if((a|0)==((x<<24>>24<0?f[k>>2]|0:x&255)|0)){y=0;a=oa(78,A|0,72077,a|0)|0;x=y;y=0;if(x&1){z=108;break}a=(a|0)==0}else a=0;zta(A);e=f[d>>2]|0;if(!a){a=e+(i*24|0)+12|0;if((b[a+11>>0]|0)<0)a=f[a>>2]|0;if((b[a>>0]|0)==40){C7(e+(i*24|0)|0,72085)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}}else{C7(e+(i*24|0)|0,72080)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}if((b[q>>0]|0)==85){aD(A,(f[d>>2]|0)+(i*24|0)|0,12);a=uHa(72090)|0;x=b[l>>0]|0;if((a|0)==((x<<24>>24<0?f[m>>2]|0:x&255)|0)){y=0;a=oa(78,A|0,72090,a|0)|0;x=y;y=0;if(x&1){z=121;break}e=(a|0)!=0}else e=1;zta(A);a=(f[d>>2]|0)+(i*24|0)|0;if(e)z=123;else Eaa(a)}else{a=(f[d>>2]|0)+(i*24|0)|0;z=123}if((z|0)==123){z=0;C7(a,72103)|0}a=f[n>>2]|0;e=(f[d>>2]|0)+(i*24|0)|0;g=a+-12|0;h=f[g>>2]|0;if((h|0)==(f[a+-8>>2]|0))Lt(a+-16|0,e);else{VT(h,e);f[g>>2]=(f[g>>2]|0)+24}i=i+1|0}if((z|0)==108){B=ab(0)|0;lDa(B)}else if((z|0)==121){B=ab(0)|0;lDa(B)}break}case 82:{n=d+4|0;g=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;m=ic(q,c,d)|0;n=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;if((m|0)==(q|0))break a;a=f[d+12>>2]|0;f[A>>2]=a;l=d+20|0;e=f[l>>2]|0;if(e>>>0<(f[d+24>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[l>>2]=(f[l>>2]|0)+16}else qu(x,A);j=A+11|0;k=A+4|0;i=g;while(1){if(i>>>0>=n>>>0){a=m;break a}aD(A,(f[d>>2]|0)+(i*24|0)+12|0,2);a=uHa(72077)|0;x=b[j>>0]|0;if((a|0)==((x<<24>>24<0?f[k>>2]|0:x&255)|0)){y=0;a=oa(78,A|0,72077,a|0)|0;x=y;y=0;if(x&1)break;a=(a|0)==0}else a=0;zta(A);e=f[d>>2]|0;if(!a){a=e+(i*24|0)+12|0;if((b[a+11>>0]|0)<0)a=f[a>>2]|0;if((b[a>>0]|0)==40){C7(e+(i*24|0)|0,72085)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}}else{C7(e+(i*24|0)|0,72080)|0;x4((f[d>>2]|0)+(i*24|0)+12|0,0,72083)|0}C7((f[d>>2]|0)+(i*24|0)|0,72105)|0;a=f[l>>2]|0;e=(f[d>>2]|0)+(i*24|0)|0;g=a+-12|0;h=f[g>>2]|0;if((h|0)==(f[a+-8>>2]|0))Lt(a+-16|0,e);else{VT(h,e);f[g>>2]=(f[g>>2]|0)+24}i=i+1|0}B=ab(0)|0;lDa(B);break}case 84:{n=d+4|0;j=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;l=ih(a,c,d)|0;k=((f[n>>2]|0)-(f[d>>2]|0)|0)/24|0;if((l|0)==(a|0))break a;m=d+12|0;a=f[m>>2]|0;f[A>>2]=a;o=d+20|0;e=f[o>>2]|0;p=d+24|0;if(e>>>0<(f[p>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[o>>2]=(f[o>>2]|0)+16}else qu(x,A);a=j;while(1){if(a>>>0>=k>>>0)break;e=f[o>>2]|0;g=(f[d>>2]|0)+(a*24|0)|0;h=e+-12|0;i=f[h>>2]|0;if((i|0)==(f[e+-8>>2]|0))Lt(e+-16|0,g);else{VT(i,g);f[h>>2]=(f[h>>2]|0)+24}a=a+1|0}if(!((k|0)==(j+1|0)&(b[d+63>>0]|0)!=0)){a=l;break a}a=Ce(l,c,d)|0;if((a|0)==(l|0)){a=l;break a}HL(A,(f[n>>2]|0)+-24|0);e=f[n>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;d=h+-24|0;f[n>>2]=d;Xka(d);h=f[n>>2]|0}d=b[A+11>>0]|0;v=d<<24>>24<0;y=0;oa(73,e+-48|0,(v?f[A>>2]|0:A)|0,(v?f[A+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1)a=Pa()|0;else{d=(f[n>>2]|0)+-24|0;f[t>>2]=f[m>>2];y=0;ya(146,w|0,d|0,t|0);d=y;y=0;do if(d&1)a=Pa()|0;else{e=f[o>>2]|0;if(e>>>0>=(f[p>>2]|0)>>>0){y=0;ja(2055,x|0,w|0);d=y;y=0;if(d&1){a=Pa()|0;tM(w);break}}else{f[e+12>>2]=f[w+12>>2];f[e>>2]=f[w>>2];d=w+4|0;f[e+4>>2]=f[d>>2];z=w+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[w>>2]=0;f[o>>2]=(f[o>>2]|0)+16}tM(w);zta(A);break a}while(0)}zta(A);v=a;break}case 85:{if(!e)break a;e=Zh(q,c,d)|0;if((e|0)==(q|0))break a;j=ic(e,c,d)|0;if((j|0)==(e|0))break a;h=d+4|0;e=f[h>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(A,e+-24|0);a=f[h>>2]|0;e=a+-24|0;g=a;while(1){if((g|0)==(e|0))break;v=g+-24|0;f[h>>2]=v;Xka(v);g=f[h>>2]|0}y=0;ya(147,w|0,a+-48|0,9);v=y;y=0;e:do if(v&1)a=Pa()|0;else{a=uHa(72107)|0;v=b[w+11>>0]|0;f:do if((a|0)==((v<<24>>24<0?f[w+4>>2]|0:v&255)|0)){y=0;a=oa(78,w|0,72107,a|0)|0;v=y;y=0;if(v&1){v=ab(0)|0;lDa(v)}zta(w);if(!a){y=0;ja(2054,w|0,(f[h>>2]|0)+-24|0);v=y;y=0;if(v&1){a=Pa()|0;break e}e=f[h>>2]|0;a=e+-24|0;while(1){if((e|0)==(a|0))break;v=e+-24|0;f[h>>2]=v;Xka(v);e=f[h>>2]|0}a=w+11|0;g=b[a>>0]|0;v=g<<24>>24<0;c=f[w>>2]|0;e=w+4|0;y=0;g=oa(79,(v?c+9|0:w+9|0)|0,(v?c:w)+(v?f[e>>2]|0:g&255)|0,d|0)|0;v=y;y=0;g:do if(v&1)a=Pa()|0;else{h:do if((g|0)==(((b[a>>0]|0)<0?f[w>>2]|0:w)+9|0)){y=0;ya(148,p|0,A|0,72117);v=y;y=0;if(v&1)a=Pa()|0;else{v=b[a>>0]|0;c=v<<24>>24<0;y=0;oa(73,p|0,(c?f[w>>2]|0:w)|0,(c?f[e>>2]|0:v&255)|0)|0;v=y;y=0;i:do if(v&1)a=Pa()|0;else{f[k>>2]=f[p>>2];f[k+4>>2]=f[p+4>>2];f[k+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}hM(t,k);a=f[h>>2]|0;do if(a>>>0<(f[d+8>>2]|0)>>>0){ZL(a,t);f[h>>2]=(f[h>>2]|0)+24}else{y=0;ja(2056,d|0,t|0);v=y;y=0;if(!(v&1))break;a=Pa()|0;Xka(t);zta(k);break i}while(0);Xka(t);zta(k);zta(p);break h}while(0);zta(p)}break g}else{y=0;ya(148,o|0,A|0,72119);v=y;y=0;if(v&1)a=Pa()|0;else{y=0;ja(2054,n|0,(f[h>>2]|0)+-24|0);v=y;y=0;if(v&1)a=Pa()|0;else{v=b[n+11>>0]|0;c=v<<24>>24<0;y=0;oa(73,o|0,(c?f[n>>2]|0:n)|0,(c?f[n+4>>2]|0:v&255)|0)|0;v=y;y=0;do if(v&1)a=Pa()|0;else{f[p>>2]=f[o>>2];f[p+4>>2]=f[o+4>>2];f[p+8>>2]=f[o+8>>2];a=0;while(1){if((a|0)==3)break;f[o+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,p|0,72121)|0;v=y;y=0;if(v&1){a=Pa()|0;zta(p);break}f[m>>2]=f[p>>2];f[m+4>>2]=f[p+4>>2];f[m+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}hM(t,m);nu((f[h>>2]|0)+-24|0,t);Xka(t);zta(m);zta(p);zta(n);zta(o);break h}while(0);zta(n)}zta(o)}break g}while(0);zta(w);break f}while(0);zta(w);break e}else z=189}else{zta(w);z=189}while(0);j:do if((z|0)==189){y=0;ya(148,t|0,A|0,72117);v=y;y=0;if(v&1)a=Pa()|0;else{y=0;ja(2054,p|0,(f[h>>2]|0)+-24|0);v=y;y=0;do if(v&1)a=Pa()|0;else{v=b[p+11>>0]|0;c=v<<24>>24<0;y=0;oa(73,t|0,(c?f[p>>2]|0:p)|0,(c?f[p+4>>2]|0:v&255)|0)|0;v=y;y=0;if(v&1){a=Pa()|0;zta(p);break}f[i>>2]=f[t>>2];f[i+4>>2]=f[t+4>>2];f[i+8>>2]=f[t+8>>2];a=0;while(1){if((a|0)==3)break;f[t+(a<<2)>>2]=0;a=a+1|0}hM(w,i);nu((f[h>>2]|0)+-24|0,w);Xka(w);zta(i);zta(p);zta(t);break j}while(0);zta(t)}break e}while(0);v=(f[h>>2]|0)+-24|0;f[t>>2]=f[d+12>>2];y=0;ya(146,w|0,v|0,t|0);v=y;y=0;do if(v&1)a=Pa()|0;else{a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,w|0);d=y;y=0;if(d&1){a=Pa()|0;tM(w);break}}else{f[e+12>>2]=f[w+12>>2];f[e>>2]=f[w>>2];d=w+4|0;f[e+4>>2]=f[d>>2];z=w+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[w>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(w);zta(A);a=j;break a}while(0)}while(0);zta(A);v=a;break}case 83:{if(e?(b[q>>0]|0)==116:0){g=Yg(a,c,d)|0;if((g|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}g=sf(a,c,d)|0;if((g|0)==(a|0))break a;a=Ce(g,c,d)|0;if((a|0)==(g|0)){a=g;break a}i=d+4|0;e=f[i>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2){a=g;break a}HL(A,e+-24|0);e=f[i>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;v=h+-24|0;f[i>>2]=v;Xka(v);h=f[i>>2]|0}v=b[A+11>>0]|0;c=v<<24>>24<0;y=0;oa(73,e+-48|0,(c?f[A>>2]|0:A)|0,(c?f[A+4>>2]|0:v&255)|0)|0;v=y;y=0;if(v&1)a=Pa()|0;else{v=(f[i>>2]|0)+-24|0;f[t>>2]=f[d+12>>2];y=0;ya(146,w|0,v|0,t|0);v=y;y=0;do if(v&1)a=Pa()|0;else{e=d+20|0;g=f[e>>2]|0;if(g>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,w|0);d=y;y=0;if(d&1){a=Pa()|0;tM(w);break}}else{f[g+12>>2]=f[w+12>>2];f[g>>2]=f[w>>2];d=w+4|0;f[g+4>>2]=f[d>>2];z=w+8|0;f[g+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[w>>2]=0;f[e>>2]=(f[e>>2]|0)+16}tM(w);zta(A);break a}while(0)}zta(A);v=a;break}case 68:{if(e)switch(b[q>>0]|0){case 112:{l=d+4|0;g=((f[l>>2]|0)-(f[d>>2]|0)|0)/24|0;z=a+2|0;k=ic(z,c,d)|0;l=((f[l>>2]|0)-(f[d>>2]|0)|0)/24|0;if((k|0)==(z|0)){z=305;break d}a=f[d+12>>2]|0;f[A>>2]=a;j=d+20|0;e=f[j>>2]|0;if(e>>>0<(f[d+24>>2]|0)>>>0){f[e>>2]=0;f[e+4>>2]=0;f[e+8>>2]=0;f[e+12>>2]=a;f[j>>2]=(f[j>>2]|0)+16}else qu(x,A);a=g;while(1){if(a>>>0>=l>>>0){a=k;break a}e=f[j>>2]|0;g=(f[d>>2]|0)+(a*24|0)|0;h=e+-12|0;i=f[h>>2]|0;if((i|0)==(f[e+-8>>2]|0))Lt(e+-16|0,g);else{VT(i,g);f[h>>2]=(f[h>>2]|0)+24}a=a+1|0}}case 84:case 116:{g=Wl(a,c,d)|0;if((g|0)==(a|0)){z=305;break d}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}case 118:{g=Zc(a,c,d)|0;if((g|0)==(a|0)){z=305;break d}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break d}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}default:{z=305;break d}}else z=305;break}default:z=305}while(0);do if((z|0)==305){e=Bc(a,c,d)|0;if((e|0)!=(a|0)){a=e;break a}g=Yg(a,c,d)|0;if((g|0)==(a|0))break a;e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break a;f[w>>2]=f[d+12>>2];gG(A,e+-24|0,w);a=d+20|0;e=f[a>>2]|0;if(e>>>0>=(f[d+24>>2]|0)>>>0){y=0;ja(2055,x|0,A|0);d=y;y=0;if(d&1){v=Pa()|0;tM(A);break}}else{f[e+12>>2]=f[A+12>>2];f[e>>2]=f[A>>2];d=A+4|0;f[e+4>>2]=f[d>>2];z=A+8|0;f[e+8>>2]=f[z>>2];f[z>>2]=0;f[d>>2]=0;f[A>>2]=0;f[a>>2]=(f[a>>2]|0)+16}tM(A);a=g;break a}while(0);$a(v|0)}else a=e}while(0);u=B;return a|0}function jc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ka=0,ma=0,na=0;$=u;u=u+272|0;Y=$+268|0;ga=$+248|0;Q=$+244|0;h=$+240|0;i=$+264|0;j=$+252|0;W=$+236|0;ma=$+224|0;ha=$+212|0;ka=$+200|0;U=$+184|0;H=$+176|0;N=$+160|0;z=$+152|0;A=$+136|0;R=$+104|0;O=$+80|0;B=$+72|0;C=$+64|0;I=$+188|0;D=$+180|0;J=$+164|0;E=$+156|0;G=$+140|0;X=$+124|0;Z=$+92|0;P=$+76|0;S=$+68|0;aa=$+52|0;ba=$+40|0;_=$+28|0;ca=$+16|0;V=$+12|0;da=$;cJa(Q);cJa(h);k=xs(c,Q,h)|0;e=pJa(f[Q>>2]|0)|0;g=a+44|0;if(d){if(!e)f[Q>>2]=f[(f[a+8>>2]|0)+((f[g>>2]|0)+-1<<2)>>2]}else{if(!e){fa=EI(f[g>>2]|0)|0;f[Q>>2]=fa}f[g>>2]=(f[g>>2]|0)+1}M=f[h>>2]|0;ea=c+28|0;fa=c+32|0;e=M;a:do if(pJa(M)|0){ada(ga);g=f[ga>>2]|0;f[g>>2]=e;f[g+4>>2]=f[Q>>2];f[g+8>>2]=0;M=f[a>>2]|0;f[i>>2]=e;y=0;f[Y>>2]=f[i>>2];e=ua(140,M|0,Y|0)|0;M=y;y=0;b:do if(M&1)na=19;else{if(!e){na=f[a>>2]|0;f[ga>>2]=0;y=0;ja(69,na|0,g|0);na=y;y=0;if(na&1){na=19;break}f[ga>>2]=0;K=a;na=28;break a}i=zb(20)|0;f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;h=uHa(52137)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[j+11>>0]=h;e=j}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ma=y;y=0;if(ma&1){na=20;break}f[j>>2]=e;f[j+8>>2]=g|-2147483648;f[j+4>>2]=h}Pta(e,52137,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,j|0,f[ea>>2]|0,f[fa>>2]|0);ma=y;y=0;if(ma&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(j);if(!g)break b}else{y=0;za(3);y=0;na=20}while(0);if((na|0)==20)e=Pa()|0;Oa(i|0)}while(0);if((na|0)==19)e=Pa()|0;g=f[ga>>2]|0;f[ga>>2]=0;if(g|0)$Ja(g)}else{K=a;na=28}while(0);if((na|0)==28){f[W>>2]=0;s=a+100|0;f[s>>2]=0;f[a+104>>2]=0;F=a+108|0;b[F>>0]=0;f[ma>>2]=0;t=ma+4|0;f[t>>2]=0;f[ma+8>>2]=0;f[ha>>2]=0;v=ha+4|0;f[v>>2]=0;f[ha+8>>2]=0;f[ka>>2]=0;o=ka+4|0;f[o>>2]=0;f[ka+8>>2]=0;f[U>>2]=0;cJa(H);f[N>>2]=0;cJa(z);cJa(A);f[R>>2]=a;f[R+4>>2]=Q;f[R+8>>2]=ha;f[R+12>>2]=U;f[R+16>>2]=ka;f[O>>2]=N;f[O+4>>2]=a;f[O+8>>2]=W;L=a+88|0;M=a+84|0;p=ma+8|0;q=ha+8|0;r=ka+8|0;w=f[z>>2]|0;x=f[A>>2]|0;g=f[H>>2]|0;c:while(1){y=0;e=la(202,c|0)|0;n=y;y=0;if(n&1){na=44;break}if(k>>>0>=e>>>0){na=141;break}y=0;n=ua(51,c|0,k|0)|0;m=y;y=0;if(m&1){na=44;break}y=0;e=ua(51,n|0,0)|0;m=y;y=0;if(m&1){na=47;break}y=0;m=la(203,e|0)|0;l=y;y=0;if(l&1){na=47;break}d:do if(!(bDa(m,f[18762]|0)|0)?!(bDa(m,f[18753]|0)|0):0){if(bDa(m,f[18761]|0)|0){y=0;e=la(202,n|0)|0;m=y;y=0;if(m&1){na=48;break c}if(e>>>0>2){na=76;break c}y=0;e=ua(51,n|0,1)|0;n=y;y=0;if(n&1){na=48;break c}y=0;e=la(203,e|0)|0;n=y;y=0;if(n&1){na=48;break c}y=0;e=ua(136,e|0,0)|0;n=y;y=0;if(n&1){na=48;break c}f[U>>2]=e;h=x;e=w;break}if(bDa(m,f[18752]|0)|0){y=0;e=ua(51,n|0,1)|0;n=y;y=0;if(n&1){na=48;break c}y=0;m=ua(138,a|0,e|0)|0;n=y;y=0;if(n&1){na=48;break c}e=f[K>>2]|0;f[D>>2]=m;y=0;f[Y>>2]=f[D>>2];e=ua(139,e|0,Y|0)|0;n=y;y=0;if(n&1){na=104;break c}if(!e){na=96;break c}e=f[K>>2]|0;f[E>>2]=m;y=0;f[Y>>2]=f[E>>2];e=ua(107,e|0,Y|0)|0;n=y;y=0;if(n&1){na=104;break c}f[U>>2]=f[e+4>>2];l=e+8|0;i=e+12|0;h=0;while(1){if(h>>>0>=(f[i>>2]|0)-(f[l>>2]|0)>>2>>>0){g=m;h=x;e=w;break d}y=0;e=la(153,h|0)|0;n=y;y=0;if(n&1){na=117;break c}f[B>>2]=e;j=f[(f[l>>2]|0)+(h<<2)>>2]|0;f[C>>2]=j;g=f[t>>2]|0;if(g>>>0>=(f[p>>2]|0)>>>0){y=0;ya(105,ma|0,B|0,C|0);n=y;y=0;if(n&1){na=118;break c}}else{FCa(ga,e);f[Y>>2]=f[ga>>2];qta(g,Y,j);f[t>>2]=(f[t>>2]|0)+8}FCa(Y,e);y=0;e=ua(141,L|0,Y|0)|0;n=y;y=0;if(n&1){na=119;break c}f[e>>2]=j;h=h+1|0}}if(bDa(m,f[18756]|0)|0){y=0;e=ua(51,n|0,1)|0;m=y;y=0;if(m&1){na=127;break c}y=0;e=la(203,e|0)|0;m=y;y=0;if(m&1){na=127;break c}FCa(Y,e);e=f[Y>>2]|0;y=0;h=ua(51,n|0,2)|0;w=y;y=0;if(w&1){na=128;break c}y=0;h=la(203,h|0)|0;w=y;y=0;if(w&1){na=128;break c}FCa(Y,h);h=f[Y>>2]|0;break}l=f[t>>2]|0;m=f[ma>>2]|0;e=m;h=l;if(((l|0)!=(m|0)?(f[v>>2]|0)==(f[ha>>2]|0):0)?(y=0,ya(106,ha|0,e|0,h|0),m=y,y=0,m&1):0){na=48;break c}if((f[M>>2]|0)==0?(y=0,ia(380,R|0),m=y,y=0,m&1):0){na=48;break c}y=0;e=ua(142,a|0,n|0)|0;n=y;y=0;if(n&1){na=48;break c}if(!(f[W>>2]|0)){f[W>>2]=e;h=x;e=w;break}y=0;ia(381,O|0);n=y;y=0;if(n&1){na=139;break c}y=0;ja(596,(f[N>>2]|0)+12|0,e|0);n=y;y=0;if(n&1){na=139;break c}else{h=x;e=w}}else na=36;while(0);e:do if((na|0)==36){na=0;j=1;while(1){y=0;e=la(202,n|0)|0;l=y;y=0;if(l&1){na=49;break c}if(j>>>0>=e>>>0){h=x;e=w;break e}rJa(B);f[C>>2]=0;y=0;e=ua(51,n|0,j|0)|0;l=y;y=0;if(l&1){na=50;break c}do if(Hra(e)|0)na=55;else{y=0;e=ua(51,n|0,j|0)|0;l=y;y=0;if(l&1){na=50;break c}y=0;e=la(203,e|0)|0;l=y;y=0;if(l&1){na=50;break c}y=0;h=ua(136,e|0,1)|0;l=y;y=0;if(l&1){na=50;break c}f[C>>2]=h;if(!h){na=55;break}y=0;e=la(153,f[s>>2]|0)|0;l=y;y=0;if(l&1){na=54;break c}f[B>>2]=e;i=h}while(0);if((na|0)==55){na=0;y=0;e=ua(51,n|0,j|0)|0;l=y;y=0;if(l&1){na=61;break c}y=0;l=la(203,e|0)|0;i=y;y=0;if(i&1){na=61;break c}f[B>>2]=l;h=j+1|0;y=0;e=ua(51,n|0,h|0)|0;j=y;y=0;if(j&1){na=50;break c}y=0;e=la(203,e|0)|0;j=y;y=0;if(j&1){na=50;break c}y=0;i=ua(136,e|0,0)|0;j=y;y=0;if(j&1){na=50;break c}f[C>>2]=i;j=h;e=l}j=j+1|0;do if(bDa(m,f[18762]|0)|0){h=f[v>>2]|0;if(h>>>0>=(f[q>>2]|0)>>>0){y=0;ya(105,ha|0,B|0,C|0);l=y;y=0;if(l&1){na=50;break c}else break}else{FCa(ga,e);f[Y>>2]=f[ga>>2];qta(h,Y,i);f[v>>2]=(f[v>>2]|0)+8;break}}else{h=f[o>>2]|0;if(h>>>0>=(f[r>>2]|0)>>>0){y=0;ya(105,ka|0,B|0,C|0);l=y;y=0;if(l&1){na=50;break c}else break}else{FCa(ga,e);f[Y>>2]=f[ga>>2];qta(h,Y,i);f[o>>2]=(f[o>>2]|0)+8;break}}while(0);f[s>>2]=(f[s>>2]|0)+1;FCa(Y,e);y=0;e=ua(141,L|0,Y|0)|0;l=y;y=0;if(l&1){na=71;break c}f[e>>2]=i}}while(0);k=k+1|0;w=e;x=h}f:switch(na|0){case 44:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;na=46;break}case 47:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;break}case 48:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;break}case 49:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;break}case 50:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;na=72;break}case 54:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;na=72;break}case 61:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;na=72;break}case 71:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;na=72;break}case 76:{f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;i=zb(20)|0;f[I>>2]=0;f[I+4>>2]=0;f[I+8>>2]=0;h=uHa(52593)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[I+11>>0]=h;e=I}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=84;break}f[I>>2]=e;f[I+8>>2]=g|-2147483648;f[I+4>>2]=h}Pta(e,52593,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,I|0,f[n+28>>2]|0,f[n+32>>2]|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(I);if(!g)break f}else{y=0;za(3);y=0;na=84}while(0);if((na|0)==84)e=Pa()|0;Oa(i|0);break}case 96:{f[z>>2]=w;f[A>>2]=x;f[H>>2]=m;i=zb(20)|0;f[J>>2]=0;f[J+4>>2]=0;f[J+8>>2]=0;h=uHa(52614)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[J+11>>0]=h;e=J}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=105;break}f[J>>2]=e;f[J+8>>2]=g|-2147483648;f[J+4>>2]=h}Pta(e,52614,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,J|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(J);if(!g)break f}else{y=0;za(3);y=0;na=105}while(0);if((na|0)==105)e=Pa()|0;Oa(i|0);break}case 104:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=m;break}case 117:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=m;break}case 118:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=m;na=120;break}case 119:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=m;na=120;break}case 127:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;break}case 128:{ga=Pa()|0;f[z>>2]=e;f[A>>2]=x;f[H>>2]=g;e=ga;break}case 139:{e=Pa()|0;f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;break}case 141:{f[z>>2]=w;f[A>>2]=x;f[H>>2]=g;k=w;e=g;do if(tJa(g)|0){y=0;ya(107,G|0,f[U>>2]|0,ha|0);J=y;y=0;if(!(J&1)){y=0;l=la(206,G|0)|0;J=y;y=0;if(J&1){e=Pa()|0;zta(G);break f}zta(G);h=f[K>>2]|0;i=f[h+4>>2]|0;h=f[h>>2]|0;while(1){if((h|0)==(i|0))break;j=f[h>>2]|0;if(HJ(j,l)|0){na=148;break}h=h+4|0}if((na|0)==148){e=f[j>>2]|0;f[H>>2]=e;g=e}if(pJa(g)|0){Nza(l);$Ja(l);h=e;na=164;break}i=zb(20)|0;f[X>>2]=0;f[X+4>>2]=0;f[X+8>>2]=0;h=uHa(52636)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[X+11>>0]=h;e=X}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=159;break}f[X>>2]=e;f[X+8>>2]=g|-2147483648;f[X+4>>2]=h}Pta(e,52636,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,X|0,f[ea>>2]|0,f[fa>>2]|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(X);if(g)na=161}else{y=0;za(3);y=0;na=159}while(0);if((na|0)==159){e=Pa()|0;na=161}if((na|0)==161)Oa(i|0);Nza(l);$Ja(l);break f}}else{h=e;na=164}while(0);g:do if((na|0)==164){i=a+112|0;h:do if(pJa(k)|0){if(!d){i=zb(20)|0;f[Z>>2]=0;f[Z+4>>2]=0;f[Z+8>>2]=0;h=uHa(52671)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[Z+11>>0]=h;e=Z}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=174;break}f[Z>>2]=e;f[Z+8>>2]=g|-2147483648;f[Z+4>>2]=h}Pta(e,52671,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,Z|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(Z);if(!g)break f}else{y=0;za(3);y=0;na=174}while(0);if((na|0)==174)e=Pa()|0;Oa(i|0);break f}y=0;ia(382,ga|0);da=y;y=0;if(da&1)break g;g=f[ga>>2]|0;f[g>>2]=f[Q>>2];f[g+4>>2]=w;f[g+8>>2]=x;f[g+12>>2]=0;e=f[K>>2]|0;f[P>>2]=h;y=0;f[Y>>2]=f[P>>2];e=ua(107,e|0,Y|0)|0;da=y;y=0;i:do if(!(da&1)?(f[g+16>>2]=f[e>>2],T=f[K>>2]|0,f[S>>2]=f[g>>2],y=0,f[Y>>2]=f[S>>2],T=ua(143,T|0,Y|0)|0,da=y,y=0,!(da&1)):0){if(T|0){i=zb(20)|0;f[aa>>2]=0;f[aa+4>>2]=0;f[aa+8>>2]=0;h=uHa(52179)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[aa+11>>0]=h;e=aa}else{g=h+16&-16;y=0;e=la(150,g|0)|0;da=y;y=0;if(da&1){na=190;break}f[aa>>2]=e;f[aa+8>>2]=g|-2147483648;f[aa+4>>2]=h}Pta(e,52179,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,aa|0,f[ea>>2]|0,f[fa>>2]|0);fa=y;y=0;if(fa&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(aa);if(!g)break i}else{y=0;za(3);y=0;na=190}while(0);if((na|0)==190)e=Pa()|0;Oa(i|0);break}fa=f[K>>2]|0;f[ga>>2]=0;y=0;ja(1471,fa|0,g|0);fa=y;y=0;if(!(fa&1)){if(!(f[M>>2]|0)){BU(L);UM(i);f[ga>>2]=0;break h}i=zb(20)|0;f[ba>>2]=0;f[ba+4>>2]=0;f[ba+8>>2]=0;h=uHa(52695)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[ba+11>>0]=h;e=ba}else{g=h+16&-16;y=0;e=la(150,g|0)|0;fa=y;y=0;if(fa&1){na=203;break}f[ba>>2]=e;f[ba+8>>2]=g|-2147483648;f[ba+4>>2]=h}Pta(e,52695,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,ba|0);fa=y;y=0;if(fa&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(ba);if(!g)break i}else{y=0;za(3);y=0;na=203}while(0);if((na|0)==203)e=Pa()|0;Oa(i|0)}else na=189}else na=189;while(0);if((na|0)==189)e=Pa()|0;g=f[ga>>2]|0;f[ga>>2]=0;if(g|0)$Ja(g);break f}else{if(d){i=zb(20)|0;f[_>>2]=0;f[_+4>>2]=0;f[_+8>>2]=0;h=uHa(52729)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[_+11>>0]=h;e=_}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=219;break}f[_>>2]=e;f[_+8>>2]=g|-2147483648;f[_+4>>2]=h}Pta(e,52729,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,_|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(_);if(!g)break f}else{y=0;za(3);y=0;na=219}while(0);if((na|0)==219)e=Pa()|0;Oa(i|0);break f}if(!(b[F>>0]|0))e=f[N>>2]|0;else{y=0;ia(381,O|0);ga=y;y=0;if(ga&1)break g;e=f[N>>2]|0;f[e+8>>2]=f[18737]}if(e|0?(y=0,ja(1725,e|0,f[U>>2]|0),ga=y,y=0,ga&1):0)break g;e=f[M>>2]|0;if(!e){y=0;ia(380,R|0);ga=y;y=0;if(ga&1)break g;y=0;e=la(168,f[a+4>>2]|0)|0;ga=y;y=0;if(ga&1)break g;f[W>>2]=e;e=f[M>>2]|0}if((f[e+4>>2]|0)!=(f[U>>2]|0)){i=zb(20)|0;f[ca>>2]=0;f[ca+4>>2]=0;f[ca+8>>2]=0;h=uHa(52752)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[ca+11>>0]=h;e=ca}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=241;break}f[ca>>2]=e;f[ca+8>>2]=g|-2147483648;f[ca+4>>2]=h}Pta(e,52752,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,ca|0,f[ea>>2]|0,f[fa>>2]|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(ca);if(!g)break f}else{y=0;za(3);y=0;na=241}while(0);if((na|0)==241)e=Pa()|0;Oa(i|0);break f}f[e+36>>2]=f[W>>2];f[(f[M>>2]|0)+32>>2]=h;e=f[K>>2]|0;f[V>>2]=f[f[M>>2]>>2];y=0;f[Y>>2]=f[V>>2];e=ua(96,e|0,Y|0)|0;ga=y;y=0;if(ga&1)break g;if(!e){ga=f[K>>2]|0;na=f[M>>2]|0;f[M>>2]=0;y=0;ja(65,ga|0,na|0);na=y;y=0;if(na&1)break g;BU(L);UM(i);break}i=zb(20)|0;f[da>>2]=0;f[da+4>>2]=0;f[da+8>>2]=0;h=uHa(52773)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[da+11>>0]=h;e=da}else{g=h+16&-16;y=0;e=la(150,g|0)|0;ga=y;y=0;if(ga&1){na=254;break}f[da>>2]=e;f[da+8>>2]=g|-2147483648;f[da+4>>2]=h}Pta(e,52773,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,da|0,f[ea>>2]|0,f[fa>>2]|0);ga=y;y=0;if(ga&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(da);if(!g)break f}else{y=0;za(3);y=0;na=254}while(0);if((na|0)==254)e=Pa()|0;Oa(i|0);break f}while(0);a3(ka);a3(ha);a3(ma);u=$;return}while(0);e=Pa()|0;na=46;break}}a3(ka);a3(ha);a3(ma)}$a(e|0)}function kc(a,c,d,e,g,i,j,k,l,m,n){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;V=u;u=u+512|0;Q=V+96|0;o=V+104|0;aa=V+88|0;L=V+80|0;M=V+76|0;N=V+504|0;O=V+72|0;P=V+68|0;W=V+56|0;X=V+44|0;Y=V+32|0;Z=V+20|0;_=V+8|0;R=V+4|0;U=V;f[Q>>2]=n;f[aa>>2]=o;$=aa+4|0;f[$>>2]=399;f[L>>2]=o;f[M>>2]=o+400;f[W>>2]=0;f[W+4>>2]=0;f[W+8>>2]=0;n=0;while(1){if((n|0)==3)break;f[W+(n<<2)>>2]=0;n=n+1|0}f[X>>2]=0;f[X+4>>2]=0;f[X+8>>2]=0;n=0;while(1){if((n|0)==3)break;f[X+(n<<2)>>2]=0;n=n+1|0}f[Y>>2]=0;f[Y+4>>2]=0;f[Y+8>>2]=0;n=0;while(1){if((n|0)==3)break;f[Y+(n<<2)>>2]=0;n=n+1|0}f[Z>>2]=0;f[Z+4>>2]=0;f[Z+8>>2]=0;n=0;while(1){if((n|0)==3)break;f[Z+(n<<2)>>2]=0;n=n+1|0}f[_>>2]=0;f[_+4>>2]=0;f[_+8>>2]=0;n=0;while(1){if((n|0)==3)break;f[_+(n<<2)>>2]=0;n=n+1|0}y=0;ta(2,d|0,e|0,N|0,O|0,P|0,W|0,X|0,Y|0,Z|0,R|0);T=y;y=0;a:do if(T&1)c=Pa()|0;else{f[m>>2]=f[l>>2];H=Y+8+3|0;I=Y+4|0;J=Z+8+3|0;K=Z+4|0;z=(g&512|0)!=0;A=X+8+3|0;B=X+4|0;C=_+8+3|0;D=_+4|0;E=N+3|0;F=W+11|0;G=W+4|0;T=0;x=0;n=f[R>>2]|0;w=o;b:while(1){g=(T|0)!=0;if(x>>>0>=4){S=251;break}e=f[a>>2]|0;do if(e){d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}}else e=gKa(f[d>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;d=1;break}else{d=(f[a>>2]|0)==0;break}}else d=1;while(0);if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;e=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;v=y;y=0;if(v&1){S=34;break}}else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0)){if(!d){S=251;break}}else S=31}else S=31;if((S|0)==31){S=0;if(d){c=0;S=251;break}else c=0}e=(x|0)!=3;c:do switch(b[N+x>>0]|0){case 1:{if(e){d=f[a>>2]|0;e=f[d+12>>2]|0;if((e|0)==(f[d+16>>2]|0)){y=0;e=la(f[(f[d>>2]|0)+36>>2]|0,d|0)|0;S=y;y=0;if(S&1){S=34;break b}}else e=gKa(f[e>>2]|0)|0;y=0;e=oa(f[(f[k>>2]|0)+12>>2]|0,k|0,8192,e|0)|0;S=y;y=0;if(S&1){S=34;break b}if(!e){S=46;break b}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;S=y;y=0;if(S&1){S=34;break b}}else{f[d>>2]=g+4;e=gKa(f[g>>2]|0)|0}y=0;ja(2048,_|0,e|0);S=y;y=0;if(S&1){S=34;break b}else{e=c;q=c;g=c;S=48}}else{d=T;e=w}break}case 0:{if(e){e=c;q=c;g=c;S=48}else{d=T;e=w}break}case 3:{o=b[H>>0]|0;e=o<<24>>24<0?f[I>>2]|0:o&255;g=b[J>>0]|0;p=g<<24>>24<0?f[K>>2]|0:g&255;if((e|0)==(0-p|0)){d=T;e=w}else{if(!e){e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}o=b[J>>0]|0}else{e=gKa(f[d>>2]|0)|0;o=g}if((e|0)!=(f[(o<<24>>24<0?f[Z>>2]|0:Z)>>2]|0)){d=T;e=w;break c}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}e=b[J>>0]|0}else{f[d>>2]=g+4;e=o}b[j>>0]=1;d=(e<<24>>24<0?f[K>>2]|0:e&255)>>>0>1?Z:T;e=w;break c}g=f[a>>2]|0;q=f[g+12>>2]|0;d=f[g+16>>2]|0;e=(q|0)==(d|0);if(!p){if(e){y=0;e=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){S=34;break b}o=b[H>>0]|0}else e=gKa(f[q>>2]|0)|0;if((e|0)!=(f[(o<<24>>24<0?f[Y>>2]|0:Y)>>2]|0)){b[j>>0]=1;d=T;e=w;break c}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}e=b[H>>0]|0}else{f[d>>2]=g+4;e=o}d=(e<<24>>24<0?f[I>>2]|0:e&255)>>>0>1?Y:T;e=w;break c}if(e){y=0;e=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){S=34;break b}d=f[a>>2]|0;o=b[H>>0]|0;r=d;p=f[d+12>>2]|0;d=f[d+16>>2]|0}else{e=gKa(f[q>>2]|0)|0;r=g;p=q}g=r+12|0;d=(p|0)==(d|0);if((e|0)==(f[(o<<24>>24<0?f[Y>>2]|0:Y)>>2]|0)){if(d){y=0;la(f[(f[r>>2]|0)+40>>2]|0,r|0)|0;v=y;y=0;if(v&1){S=34;break b}e=b[H>>0]|0}else{f[g>>2]=p+4;e=o}d=(e<<24>>24<0?f[I>>2]|0:e&255)>>>0>1?Y:T;e=w;break c}if(d){y=0;e=la(f[(f[r>>2]|0)+36>>2]|0,r|0)|0;v=y;y=0;if(v&1){S=34;break b}}else e=gKa(f[p>>2]|0)|0;o=b[J>>0]|0;if((e|0)!=(f[(o<<24>>24<0?f[Z>>2]|0:Z)>>2]|0)){S=114;break b}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}e=b[J>>0]|0}else{f[d>>2]=g+4;e=o}b[j>>0]=1;d=(e<<24>>24<0?f[K>>2]|0:e&255)>>>0>1?Z:T;e=w}break}case 2:{if(!(x>>>0<2|g)?!(z|(x|0)==2&(b[E>>0]|0)!=0):0){d=0;e=w;break c}g=b[A>>0]|0;d=f[X>>2]|0;e=g<<24>>24<0?d:X;d:do if((x|0)!=0?(h[N+(x+-1)>>0]|0)<2:0){s=e;e=g;while(1){v=e<<24>>24<0;g=s;if((g|0)==((v?d:X)+((v?f[B>>2]|0:e&255)<<2)|0))break;y=0;e=oa(f[(f[k>>2]|0)+12>>2]|0,k|0,8192,f[g>>2]|0)|0;v=y;y=0;if(v&1){S=124;break b}if(!e){S=122;break}s=g+4|0;e=b[A>>0]|0;d=f[X>>2]|0}if((S|0)==122){S=0;e=b[A>>0]|0;d=f[X>>2]|0}o=e<<24>>24<0?d:X;r=o;q=s-r>>2;p=b[C>>0]|0;g=p<<24>>24<0;p=g?f[D>>2]|0:p&255;if(q>>>0>p>>>0){t=c;v=c;o=r;g=c}else{p=(g?f[_>>2]|0:_)+(p<<2)|0;g=p+(0-q<<2)|0;while(1){if((g|0)==(p|0)){t=c;v=c;o=s;g=c;break d}if((f[g>>2]|0)!=(f[o>>2]|0)){t=c;v=c;o=r;g=c;break d}o=o+4|0;g=g+4|0}}}else{t=c;v=c;o=e;e=g;g=c}while(0);while(1){s=e<<24>>24<0;e=(s?d:X)+((s?f[B>>2]|0:e&255)<<2)|0;if((o|0)==(e|0)){c=v;break}c=f[a>>2]|0;do if(c){e=f[c+12>>2]|0;if((e|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;s=y;y=0;if(s&1){S=153;break b}}else c=gKa(f[e>>2]|0)|0;if(TDa(c)|0){f[a>>2]=0;d=1;break}else{d=(f[a>>2]|0)==0;break}}else d=1;while(0);if(g){c=f[g+12>>2]|0;if((c|0)==(f[g+16>>2]|0)){y=0;c=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;s=y;y=0;if(s&1){S=153;break b}}else c=gKa(f[c>>2]|0)|0;if(!(TDa(c)|0))if(d^(t|0)==0){p=t;c=v;q=t}else{e=o;c=v;break}else{e=0;c=0;S=143}}else{e=t;c=v;S=143}if((S|0)==143){S=0;if(d){e=o;break}else{p=e;q=0}}e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=153;break b}}else e=gKa(f[d>>2]|0)|0;if((e|0)!=(f[o>>2]|0)){e=o;break}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=154;break b}}else f[d>>2]=g+4;t=p;v=c;o=o+4|0;e=b[A>>0]|0;d=f[X>>2]|0;g=q}if(z?(v=b[A>>0]|0,t=v<<24>>24<0,(e|0)!=((t?f[X>>2]|0:X)+((t?f[B>>2]|0:v&255)<<2)|0)):0){S=157;break b}else{d=T;e=w}break}case 4:{p=0;d=c;q=c;o=c;e=w;while(1){c=f[a>>2]|0;do if(c){g=f[c+12>>2]|0;if((g|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;w=y;y=0;if(w&1){S=181;break b}}else c=gKa(f[g>>2]|0)|0;if(TDa(c)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(o){c=f[o+12>>2]|0;if((c|0)==(f[o+16>>2]|0)){y=0;c=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;w=y;y=0;if(w&1){S=181;break b}}else c=gKa(f[c>>2]|0)|0;if(!(TDa(c)|0))if(g^(d|0)==0){s=d;c=q;r=d}else{o=d;c=q;break}else{d=0;c=0;S=170}}else{c=q;S=170}if((S|0)==170){S=0;if(g){o=d;break}else{s=d;r=0}}d=f[a>>2]|0;g=f[d+12>>2]|0;if((g|0)==(f[d+16>>2]|0)){y=0;d=la(f[(f[d>>2]|0)+36>>2]|0,d|0)|0;w=y;y=0;if(w&1){S=181;break b}}else d=gKa(f[g>>2]|0)|0;y=0;g=oa(f[(f[k>>2]|0)+12>>2]|0,k|0,2048,d|0)|0;w=y;y=0;if(w&1){S=183;break b}if(g){g=f[m>>2]|0;if((g|0)==(f[Q>>2]|0)){y=0;ya(142,l|0,m|0,Q|0);w=y;y=0;if(w&1){S=183;break b}g=f[m>>2]|0}f[m>>2]=g+4;f[g>>2]=d;p=p+1|0}else{w=b[F>>0]|0;if(!((d|0)==(f[P>>2]|0)&(p|0?((w<<24>>24<0?f[G>>2]|0:w&255)|0)!=0:0))){o=s;break}if((e|0)==(f[M>>2]|0)){y=0;ya(141,aa|0,L|0,M|0);w=y;y=0;if(w&1){S=183;break b}e=f[L>>2]|0}w=e+4|0;f[L>>2]=w;f[e>>2]=p;p=0;e=w}d=f[a>>2]|0;g=d+12|0;o=f[g>>2]|0;if((o|0)==(f[d+16>>2]|0)){y=0;la(f[(f[d>>2]|0)+40>>2]|0,d|0)|0;w=y;y=0;if(w&1){S=181;break b}else{d=s;q=c;o=r;continue}}else{f[g>>2]=o+4;d=s;q=c;o=r;continue}}if(p|0?(f[aa>>2]|0)!=(e|0):0){if((e|0)==(f[M>>2]|0)){y=0;ya(141,aa|0,L|0,M|0);w=y;y=0;if(w&1){S=182;break b}e=f[L>>2]|0}r=e+4|0;f[L>>2]=r;f[e>>2]=p}else r=e;e:do if((n|0)>0){e=f[a>>2]|0;do if(e){d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=182;break b}}else e=gKa(f[d>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;d=1;break}else{d=(f[a>>2]|0)==0;break}}else d=1;while(0);if(o){e=f[o+12>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;e=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;w=y;y=0;if(w&1){S=182;break b}}else e=gKa(f[e>>2]|0)|0;if(!(TDa(e)|0)){if(!d){S=249;break b}}else{c=0;S=211}}else S=211;if((S|0)==211){S=0;if(d){S=249;break b}else o=0}e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=182;break b}}else e=gKa(f[d>>2]|0)|0;if((e|0)!=(f[O>>2]|0)){S=249;break b}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=182;break b}else{p=o;g=o}}else{f[d>>2]=g+4;p=o;g=o}while(1){if((n|0)<=0)break e;e=f[a>>2]|0;do if(e){d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=180;break b}}else e=gKa(f[d>>2]|0)|0;if(TDa(e)|0){f[a>>2]=0;d=1;break}else{d=(f[a>>2]|0)==0;break}}else d=1;while(0);do if(g){e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;e=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;w=y;y=0;if(w&1){S=180;break b}}else e=gKa(f[e>>2]|0)|0;if(TDa(e)|0){e=0;c=0;S=233;break}if(d^(p|0)==0){q=p;o=p}else{S=249;break b}}else{e=p;S=233}while(0);if((S|0)==233){S=0;if(d){S=249;break b}else{q=e;o=0}}e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=180;break b}}else e=gKa(f[d>>2]|0)|0;y=0;e=oa(f[(f[k>>2]|0)+12>>2]|0,k|0,2048,e|0)|0;w=y;y=0;if(w&1){S=180;break b}if(!e){S=249;break b}if((f[m>>2]|0)==(f[Q>>2]|0)?(y=0,ya(142,l|0,m|0,Q|0),w=y,y=0,w&1):0){S=180;break b}e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=180;break b}}else e=gKa(f[d>>2]|0)|0;d=f[m>>2]|0;f[m>>2]=d+4;f[d>>2]=e;n=n+-1|0;e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;w=y;y=0;if(w&1){S=180;break b}else{p=q;g=o;continue}}else{f[d>>2]=g+4;p=q;g=o;continue}}}while(0);if((f[m>>2]|0)==(f[l>>2]|0)){S=249;break b}else{d=T;e=r}break}default:{d=T;e=w}}while(0);f:do if((S|0)==48)while(1){S=0;c=f[a>>2]|0;do if(c){d=f[c+12>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;v=y;y=0;if(v&1){S=34;break b}}else c=gKa(f[d>>2]|0)|0;if(TDa(c)|0){f[a>>2]=0;d=1;break}else{d=(f[a>>2]|0)==0;break}}else d=1;while(0);if(g){c=f[g+12>>2]|0;if((c|0)==(f[g+16>>2]|0)){y=0;c=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){S=34;break b}}else c=gKa(f[c>>2]|0)|0;if(!(TDa(c)|0))if(d^(e|0)==0){p=e;c=q;o=e}else{d=T;c=q;e=w;break f}else{e=0;c=0;S=60}}else{c=q;S=60}if((S|0)==60){S=0;if(d){d=T;e=w;break f}else{p=e;o=0}}e=f[a>>2]|0;d=f[e+12>>2]|0;if((d|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;v=y;y=0;if(v&1){S=34;break b}}else e=gKa(f[d>>2]|0)|0;y=0;e=oa(f[(f[k>>2]|0)+12>>2]|0,k|0,8192,e|0)|0;v=y;y=0;if(v&1){S=34;break b}if(!e){d=T;e=w;break f}e=f[a>>2]|0;d=e+12|0;g=f[d>>2]|0;if((g|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;S=y;y=0;if(S&1){S=34;break b}}else{f[d>>2]=g+4;e=gKa(f[g>>2]|0)|0}y=0;ja(2048,_|0,e|0);S=y;y=0;if(S&1){S=34;break b}else{e=p;q=c;g=o;S=48}}while(0);T=d;x=x+1|0;w=e}g:switch(S|0){case 34:{c=Pa()|0;f[R>>2]=n;break a}case 46:{f[R>>2]=n;f[i>>2]=f[i>>2]|4;c=0;break}case 114:{f[R>>2]=n;f[i>>2]=f[i>>2]|4;c=0;break}case 124:{c=Pa()|0;f[R>>2]=n;break a}case 153:{c=Pa()|0;f[R>>2]=n;break a}case 154:{c=Pa()|0;f[R>>2]=n;break a}case 157:{f[R>>2]=n;f[i>>2]=f[i>>2]|4;c=0;break}case 180:{c=Pa()|0;f[R>>2]=n;break a}case 181:{c=Pa()|0;f[R>>2]=n;break a}case 182:{c=Pa()|0;f[R>>2]=n;break a}case 183:{c=Pa()|0;f[R>>2]=n;break a}case 249:{f[R>>2]=n;f[i>>2]=f[i>>2]|4;c=0;break}case 251:{f[R>>2]=n;h:do if(g){o=T+8+3|0;p=T+4|0;e=1;g=c;i:while(1){n=b[o>>0]|0;if(n<<24>>24<0)n=f[p>>2]|0;else n=n&255;if(e>>>0>=n>>>0)break h;n=f[a>>2]|0;do if(n){c=f[n+12>>2]|0;if((c|0)==(f[n+16>>2]|0)){y=0;n=la(f[(f[n>>2]|0)+36>>2]|0,n|0)|0;R=y;y=0;if(R&1){S=278;break i}}else n=gKa(f[c>>2]|0)|0;if(TDa(n)|0){f[a>>2]=0;c=1;break}else{c=(f[a>>2]|0)==0;break}}else c=1;while(0);if(g){n=f[g+12>>2]|0;if((n|0)==(f[g+16>>2]|0)){y=0;n=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;R=y;y=0;if(R&1){S=278;break}}else n=gKa(f[n>>2]|0)|0;if(!(TDa(n)|0)){if(!c){S=277;break}}else S=269}else S=269;if((S|0)==269){S=0;if(c){S=277;break}else g=0}n=f[a>>2]|0;c=f[n+12>>2]|0;if((c|0)==(f[n+16>>2]|0)){y=0;n=la(f[(f[n>>2]|0)+36>>2]|0,n|0)|0;R=y;y=0;if(R&1){S=278;break}}else n=gKa(f[c>>2]|0)|0;if((b[o>>0]|0)<0)c=f[T>>2]|0;else c=T;if((n|0)!=(f[c+(e<<2)>>2]|0)){S=277;break}n=e+1|0;c=f[a>>2]|0;e=c+12|0;d=f[e>>2]|0;if((d|0)==(f[c+16>>2]|0)){y=0;la(f[(f[c>>2]|0)+40>>2]|0,c|0)|0;R=y;y=0;if(R&1){S=278;break}else{e=n;continue}}else{f[e>>2]=d+4;e=n;continue}}if((S|0)==277){f[i>>2]=f[i>>2]|4;c=0;break g}else if((S|0)==278){c=Pa()|0;break a}}while(0);n=f[aa>>2]|0;if((n|0)!=(w|0)){f[U>>2]=0;Iu(W,n,w,U);if(!(f[U>>2]|0)){c=1;break}else{f[i>>2]=f[i>>2]|4;c=0;break}}else c=1;break}}jta(_);jta(Z);jta(Y);jta(X);zta(W);n=f[aa>>2]|0;f[aa>>2]=0;if(n|0?(y=0,ia(f[$>>2]|0,n|0),aa=y,y=0,aa&1):0){aa=ab(0)|0;lDa(aa)}u=V;return c|0}while(0);jta(_);jta(Z);jta(Y);jta(X);zta(W);n=f[aa>>2]|0;f[aa>>2]=0;if(n|0?(y=0,ia(f[$>>2]|0,n|0),aa=y,y=0,aa&1):0){aa=ab(0)|0;lDa(aa)}$a(c|0);return 0}function lc(a,c,e,g,i,j,k,l,m,n,o){a=a|0;c=c|0;e=e|0;g=g|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;V=u;u=u+512|0;Q=V+88|0;p=V+96|0;aa=V+80|0;L=V+72|0;M=V+68|0;N=V+500|0;O=V+497|0;P=V+496|0;W=V+56|0;X=V+44|0;Y=V+32|0;Z=V+20|0;_=V+8|0;R=V+4|0;U=V;f[Q>>2]=o;f[aa>>2]=p;$=aa+4|0;f[$>>2]=399;f[L>>2]=p;f[M>>2]=p+400;f[W>>2]=0;f[W+4>>2]=0;f[W+8>>2]=0;o=0;while(1){if((o|0)==3)break;f[W+(o<<2)>>2]=0;o=o+1|0}f[X>>2]=0;f[X+4>>2]=0;f[X+8>>2]=0;o=0;while(1){if((o|0)==3)break;f[X+(o<<2)>>2]=0;o=o+1|0}f[Y>>2]=0;f[Y+4>>2]=0;f[Y+8>>2]=0;o=0;while(1){if((o|0)==3)break;f[Y+(o<<2)>>2]=0;o=o+1|0}f[Z>>2]=0;f[Z+4>>2]=0;f[Z+8>>2]=0;o=0;while(1){if((o|0)==3)break;f[Z+(o<<2)>>2]=0;o=o+1|0}f[_>>2]=0;f[_+4>>2]=0;f[_+8>>2]=0;o=0;while(1){if((o|0)==3)break;f[_+(o<<2)>>2]=0;o=o+1|0}y=0;ta(1,e|0,g|0,N|0,O|0,P|0,W|0,X|0,Y|0,Z|0,R|0);S=y;y=0;a:do if(S&1)o=Pa()|0;else{f[n>>2]=f[m>>2];G=l+8|0;H=Y+11|0;I=Y+4|0;J=Z+11|0;K=Z+4|0;x=(i&512|0)!=0;z=X+11|0;A=X+4|0;B=_+11|0;C=_+4|0;D=N+3|0;E=W+11|0;F=W+4|0;S=0;w=0;v=p;b:while(1){e=(S|0)!=0;if(w>>>0>=4){T=254;break}o=f[a>>2]|0;do if(o){g=f[o+12>>2]|0;if((g|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=35;break b}}else o=oHa(b[g>>0]|0)|0;if(bDa(o,-1)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(c){o=f[c+12>>2]|0;if((o|0)==(f[c+16>>2]|0)){y=0;o=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;t=y;y=0;if(t&1){T=35;break}}else o=oHa(b[o>>0]|0)|0;if(!(bDa(o,-1)|0)){if(!g){T=254;break}}else T=31}else T=31;if((T|0)==31){T=0;if(g){c=0;T=254;break}else c=0}o=(w|0)!=3;c:do switch(b[N+w>>0]|0){case 1:{if(o){g=f[a>>2]|0;o=f[g+12>>2]|0;if((o|0)==(f[g+16>>2]|0)){y=0;o=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;T=y;y=0;if(T&1){T=35;break b}}else o=oHa(b[o>>0]|0)|0;if((o&255)<<24>>24<=-1){T=48;break b}if(!(d[(f[G>>2]|0)+(o<<24>>24<<1)>>1]&8192)){T=48;break b}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;T=y;y=0;if(T&1){T=35;break b}}else{f[g>>2]=e+1;o=oHa(b[e>>0]|0)|0}y=0;ja(82,_|0,o&255|0);T=y;y=0;if(T&1){T=35;break b}else{o=c;p=c;e=c;T=50}}else{g=S;o=v}break}case 0:{if(o){o=c;p=c;e=c;T=50}else{g=S;o=v}break}case 3:{l=b[H>>0]|0;o=l<<24>>24<0?f[I>>2]|0:l&255;e=b[J>>0]|0;i=e<<24>>24<0?f[K>>2]|0:e&255;if((o|0)==(0-i|0)){g=S;o=v}else{if(!o){o=f[a>>2]|0;g=f[o+12>>2]|0;if((g|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=35;break b}l=b[J>>0]|0}else{o=oHa(b[g>>0]|0)|0;l=e}if((o&255)<<24>>24!=(b[(l<<24>>24<0?f[Z>>2]|0:Z)>>0]|0)){g=S;o=v;break c}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=35;break b}o=b[J>>0]|0}else{f[g>>2]=e+1;o=l}b[k>>0]=1;g=(o<<24>>24<0?f[K>>2]|0:o&255)>>>0>1?Z:S;o=v;break c}e=f[a>>2]|0;p=f[e+12>>2]|0;g=f[e+16>>2]|0;o=(p|0)==(g|0);if(!i){if(o){y=0;o=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;t=y;y=0;if(t&1){T=35;break b}l=b[H>>0]|0}else o=oHa(b[p>>0]|0)|0;if((o&255)<<24>>24!=(b[(l<<24>>24<0?f[Y>>2]|0:Y)>>0]|0)){b[k>>0]=1;g=S;o=v;break c}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=35;break b}o=b[H>>0]|0}else{f[g>>2]=e+1;o=l}g=(o<<24>>24<0?f[I>>2]|0:o&255)>>>0>1?Y:S;o=v;break c}if(o){y=0;o=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;t=y;y=0;if(t&1){T=35;break b}g=f[a>>2]|0;l=b[H>>0]|0;q=g;i=f[g+12>>2]|0;g=f[g+16>>2]|0}else{o=oHa(b[p>>0]|0)|0;q=e;i=p}e=q+12|0;g=(i|0)==(g|0);if((o&255)<<24>>24==(b[(l<<24>>24<0?f[Y>>2]|0:Y)>>0]|0)){if(g){y=0;la(f[(f[q>>2]|0)+40>>2]|0,q|0)|0;t=y;y=0;if(t&1){T=35;break b}o=b[H>>0]|0}else{f[e>>2]=i+1;o=l}g=(o<<24>>24<0?f[I>>2]|0:o&255)>>>0>1?Y:S;o=v;break c}if(g){y=0;o=la(f[(f[q>>2]|0)+36>>2]|0,q|0)|0;t=y;y=0;if(t&1){T=35;break b}}else o=oHa(b[i>>0]|0)|0;l=b[J>>0]|0;if((o&255)<<24>>24!=(b[(l<<24>>24<0?f[Z>>2]|0:Z)>>0]|0)){T=116;break b}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=35;break b}o=b[J>>0]|0}else{f[g>>2]=e+1;o=l}b[k>>0]=1;g=(o<<24>>24<0?f[K>>2]|0:o&255)>>>0>1?Z:S;o=v}break}case 2:{if(!(w>>>0<2|e)?!(x|(w|0)==2&(b[D>>0]|0)!=0):0){g=0;o=v;break c}q=b[z>>0]|0;o=q<<24>>24<0;r=f[X>>2]|0;g=o?r:X;p=g;d:do if((w|0)!=0?(h[N+(w+-1)>>0]|0)<2:0){o=g+(o?f[A>>2]|0:q&255)|0;i=p;while(1){e=i;if((e|0)==(o|0))break;l=b[e>>0]|0;if(l<<24>>24<=-1)break;if(!(d[(f[G>>2]|0)+(l<<24>>24<<1)>>1]&8192))break;i=e+1|0}l=i-p|0;e=b[B>>0]|0;o=e<<24>>24<0;e=o?f[C>>2]|0:e&255;if(l>>>0<=e>>>0){e=(o?f[_>>2]|0:_)+e|0;o=e+(0-l)|0;while(1){if((o|0)==(e|0)){s=c;t=c;e=i;g=q;o=r;l=c;break d}if((b[o>>0]|0)!=(b[g>>0]|0)){s=c;t=c;e=p;g=q;o=r;l=c;break d}g=g+1|0;o=o+1|0}}else{s=c;t=c;e=p;g=q;o=r;l=c}}else{s=c;t=c;e=p;g=q;o=r;l=c}while(0);while(1){p=g<<24>>24<0;o=(p?o:X)+(p?f[A>>2]|0:g&255)|0;p=e;if((p|0)==(o|0)){c=t;break}c=f[a>>2]|0;do if(c){o=f[c+12>>2]|0;if((o|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;r=y;y=0;if(r&1){T=154;break b}}else c=oHa(b[o>>0]|0)|0;if(bDa(c,-1)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(l){c=f[l+12>>2]|0;if((c|0)==(f[l+16>>2]|0)){y=0;c=la(f[(f[l>>2]|0)+36>>2]|0,l|0)|0;r=y;y=0;if(r&1){T=154;break b}}else c=oHa(b[c>>0]|0)|0;if(!(bDa(c,-1)|0))if(g^(s|0)==0){l=s;c=t;i=s}else{o=p;c=t;break}else{o=0;c=0;T=144}}else{o=s;c=t;T=144}if((T|0)==144){T=0;if(g){o=p;break}else{l=o;i=0}}o=f[a>>2]|0;g=f[o+12>>2]|0;if((g|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=154;break b}}else o=oHa(b[g>>0]|0)|0;if((o&255)<<24>>24!=(b[p>>0]|0)){o=p;break}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=155;break b}}else f[g>>2]=e+1;s=l;t=c;e=p+1|0;g=b[z>>0]|0;o=f[X>>2]|0;l=i}if(x?(t=b[z>>0]|0,s=t<<24>>24<0,(o|0)!=((s?f[X>>2]|0:X)+(s?f[A>>2]|0:t&255)|0)):0){T=158;break b}else{g=S;o=v}break}case 4:{r=b[P>>0]|0;p=0;i=c;o=c;l=c;c=v;while(1){g=f[a>>2]|0;do if(g){e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=182;break b}}else g=oHa(b[e>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;e=1;break}else{e=(f[a>>2]|0)==0;break}}else e=1;while(0);if(l){g=f[l+12>>2]|0;if((g|0)==(f[l+16>>2]|0)){y=0;g=la(f[(f[l>>2]|0)+36>>2]|0,l|0)|0;v=y;y=0;if(v&1){T=182;break b}}else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0))if(e^(i|0)==0){g=i;q=i}else break;else{g=0;o=0;T=171}}else{g=i;T=171}if((T|0)==171){T=0;if(e){i=g;break}else q=0}e=f[a>>2]|0;l=f[e+12>>2]|0;if((l|0)==(f[e+16>>2]|0)){y=0;e=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;v=y;y=0;if(v&1){T=182;break b}}else e=oHa(b[l>>0]|0)|0;l=e&255;if(l<<24>>24>-1?(d[(f[G>>2]|0)+(e<<24>>24<<1)>>1]&2048)!=0:0){e=f[n>>2]|0;if((e|0)==(f[Q>>2]|0)){y=0;ya(140,m|0,n|0,Q|0);v=y;y=0;if(v&1){T=184;break b}e=f[n>>2]|0}f[n>>2]=e+1;b[e>>0]=l;p=p+1|0}else{v=b[E>>0]|0;if(!(l<<24>>24==r<<24>>24&(p|0?((v<<24>>24<0?f[F>>2]|0:v&255)|0)!=0:0))){i=g;break}if((c|0)==(f[M>>2]|0)){y=0;ya(141,aa|0,L|0,M|0);v=y;y=0;if(v&1){T=184;break b}c=f[L>>2]|0}v=c+4|0;f[L>>2]=v;f[c>>2]=p;p=0;c=v}e=f[a>>2]|0;l=e+12|0;i=f[l>>2]|0;if((i|0)==(f[e+16>>2]|0)){y=0;la(f[(f[e>>2]|0)+40>>2]|0,e|0)|0;v=y;y=0;if(v&1){T=182;break b}else{i=g;l=q;continue}}else{f[l>>2]=i+1;i=g;l=q;continue}}if(p|0?(f[aa>>2]|0)!=(c|0):0){if((c|0)==(f[M>>2]|0)){y=0;ya(141,aa|0,L|0,M|0);v=y;y=0;if(v&1){T=183;break b}c=f[L>>2]|0}r=c+4|0;f[L>>2]=r;f[c>>2]=p}else r=c;c=f[R>>2]|0;if((c|0)>0){g=f[a>>2]|0;do if(g){e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=183;break b}}else g=oHa(b[e>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;e=1;break}else{e=(f[a>>2]|0)==0;break}}else e=1;while(0);if(i){g=f[i+12>>2]|0;if((g|0)==(f[i+16>>2]|0)){y=0;g=la(f[(f[i>>2]|0)+36>>2]|0,i|0)|0;v=y;y=0;if(v&1){T=183;break b}}else g=oHa(b[g>>0]|0)|0;if(!(bDa(g,-1)|0)){if(!e){T=252;break b}}else{o=0;T=212}}else T=212;if((T|0)==212){T=0;if(e){T=252;break b}else i=0}g=f[a>>2]|0;e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=183;break b}}else g=oHa(b[e>>0]|0)|0;if((g&255)<<24>>24!=(b[O>>0]|0)){T=252;break b}g=f[a>>2]|0;e=g+12|0;l=f[e>>2]|0;if((l|0)==(f[g+16>>2]|0)){y=0;la(f[(f[g>>2]|0)+40>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=183;break b}else{p=i;l=i}}else{f[e>>2]=l+1;p=i;l=i}while(1){if((c|0)<=0)break;g=f[a>>2]|0;do if(g){e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=181;break b}}else g=oHa(b[e>>0]|0)|0;if(bDa(g,-1)|0){f[a>>2]=0;e=1;break}else{e=(f[a>>2]|0)==0;break}}else e=1;while(0);do if(l){g=f[l+12>>2]|0;if((g|0)==(f[l+16>>2]|0)){y=0;g=la(f[(f[l>>2]|0)+36>>2]|0,l|0)|0;v=y;y=0;if(v&1){T=181;break b}}else g=oHa(b[g>>0]|0)|0;if(bDa(g,-1)|0){g=0;o=0;T=234;break}if(e^(p|0)==0){q=p;i=p}else{T=251;break b}}else{g=p;T=234}while(0);if((T|0)==234){T=0;if(e){T=251;break b}else{q=g;i=0}}g=f[a>>2]|0;e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=181;break b}}else g=oHa(b[e>>0]|0)|0;if((g&255)<<24>>24<=-1){T=251;break b}if(!(d[(f[G>>2]|0)+(g<<24>>24<<1)>>1]&2048)){T=251;break b}if((f[n>>2]|0)==(f[Q>>2]|0)?(y=0,ya(140,m|0,n|0,Q|0),v=y,y=0,v&1):0){T=181;break b}g=f[a>>2]|0;e=f[g+12>>2]|0;if((e|0)==(f[g+16>>2]|0)){y=0;g=la(f[(f[g>>2]|0)+36>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=181;break b}}else g=oHa(b[e>>0]|0)|0;e=f[n>>2]|0;f[n>>2]=e+1;b[e>>0]=g;c=c+-1|0;g=f[a>>2]|0;e=g+12|0;l=f[e>>2]|0;if((l|0)==(f[g+16>>2]|0)){y=0;la(f[(f[g>>2]|0)+40>>2]|0,g|0)|0;v=y;y=0;if(v&1){T=181;break b}else{p=q;l=i;continue}}else{f[e>>2]=l+1;p=q;l=i;continue}}f[R>>2]=c;c=o}else c=o;if((f[n>>2]|0)==(f[m>>2]|0)){T=252;break b}else{g=S;o=r}break}default:{g=S;o=v}}while(0);e:do if((T|0)==50)while(1){T=0;c=f[a>>2]|0;do if(c){g=f[c+12>>2]|0;if((g|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;t=y;y=0;if(t&1){T=34;break b}}else c=oHa(b[g>>0]|0)|0;if(bDa(c,-1)|0){f[a>>2]=0;g=1;break}else{g=(f[a>>2]|0)==0;break}}else g=1;while(0);if(e){c=f[e+12>>2]|0;if((c|0)==(f[e+16>>2]|0)){y=0;c=la(f[(f[e>>2]|0)+36>>2]|0,e|0)|0;t=y;y=0;if(t&1){T=34;break b}}else c=oHa(b[c>>0]|0)|0;if(!(bDa(c,-1)|0))if(g^(o|0)==0){i=o;c=p;l=o}else{g=S;c=p;o=v;break e}else{o=0;c=0;T=62}}else{c=p;T=62}if((T|0)==62){T=0;if(g){g=S;o=v;break e}else{i=o;l=0}}o=f[a>>2]|0;g=f[o+12>>2]|0;if((g|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+36>>2]|0,o|0)|0;t=y;y=0;if(t&1){T=34;break b}}else o=oHa(b[g>>0]|0)|0;if((o&255)<<24>>24<=-1){g=S;o=v;break e}if(!(d[(f[G>>2]|0)+(o<<24>>24<<1)>>1]&8192)){g=S;o=v;break e}o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;o=la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;T=y;y=0;if(T&1){T=34;break b}}else{f[g>>2]=e+1;o=oHa(b[e>>0]|0)|0}y=0;ja(82,_|0,o&255|0);T=y;y=0;if(T&1){T=34;break b}else{o=i;p=c;e=l;T=50}}while(0);S=g;w=w+1|0;v=o}f:switch(T|0){case 34:{o=Pa()|0;break a}case 35:{o=Pa()|0;break a}case 48:{f[j>>2]=f[j>>2]|4;o=0;break}case 116:{f[j>>2]=f[j>>2]|4;o=0;break}case 154:{o=Pa()|0;break a}case 155:{o=Pa()|0;break a}case 158:{f[j>>2]=f[j>>2]|4;o=0;break}case 181:{o=Pa()|0;f[R>>2]=c;break a}case 182:{o=Pa()|0;break a}case 183:{o=Pa()|0;break a}case 184:{o=Pa()|0;break a}case 251:{f[R>>2]=c;T=252;break}case 254:{g:do if(e){i=S+11|0;p=S+4|0;g=1;l=c;h:while(1){c=b[i>>0]|0;if(c<<24>>24<0)c=f[p>>2]|0;else c=c&255;if(g>>>0>=c>>>0)break g;c=f[a>>2]|0;do if(c){o=f[c+12>>2]|0;if((o|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;R=y;y=0;if(R&1){T=281;break h}}else c=oHa(b[o>>0]|0)|0;if(bDa(c,-1)|0){f[a>>2]=0;o=1;break}else{o=(f[a>>2]|0)==0;break}}else o=1;while(0);if(l){c=f[l+12>>2]|0;if((c|0)==(f[l+16>>2]|0)){y=0;c=la(f[(f[l>>2]|0)+36>>2]|0,l|0)|0;R=y;y=0;if(R&1){T=281;break}}else c=oHa(b[c>>0]|0)|0;if(!(bDa(c,-1)|0)){if(!o){T=280;break}}else T=272}else T=272;if((T|0)==272){T=0;if(o){T=280;break}else l=0}c=f[a>>2]|0;o=f[c+12>>2]|0;if((o|0)==(f[c+16>>2]|0)){y=0;c=la(f[(f[c>>2]|0)+36>>2]|0,c|0)|0;R=y;y=0;if(R&1){T=281;break}}else c=oHa(b[o>>0]|0)|0;if((b[i>>0]|0)<0)o=f[S>>2]|0;else o=S;if((c&255)<<24>>24!=(b[o+g>>0]|0)){T=280;break}c=g+1|0;o=f[a>>2]|0;g=o+12|0;e=f[g>>2]|0;if((e|0)==(f[o+16>>2]|0)){y=0;la(f[(f[o>>2]|0)+40>>2]|0,o|0)|0;R=y;y=0;if(R&1){T=281;break}else{g=c;continue}}else{f[g>>2]=e+1;g=c;continue}}if((T|0)==280){f[j>>2]=f[j>>2]|4;o=0;break f}else if((T|0)==281){o=Pa()|0;break a}}while(0);c=f[aa>>2]|0;if((c|0)!=(v|0)){f[U>>2]=0;Iu(W,c,v,U);if(!(f[U>>2]|0)){o=1;break}else{f[j>>2]=f[j>>2]|4;o=0;break}}else o=1;break}}if((T|0)==252){f[j>>2]=f[j>>2]|4;o=0}zta(_);zta(Z);zta(Y);zta(X);zta(W);c=f[aa>>2]|0;f[aa>>2]=0;if(c|0?(y=0,ia(f[$>>2]|0,c|0),aa=y,y=0,aa&1):0){aa=ab(0)|0;lDa(aa)}u=V;return o|0}while(0);zta(_);zta(Z);zta(Y);zta(X);zta(W);c=f[aa>>2]|0;f[aa>>2]=0;if(c|0?(y=0,ia(f[$>>2]|0,c|0),aa=y,y=0,aa&1):0){aa=ab(0)|0;lDa(aa)}$a(o|0);return 0}function mc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0;i=u;u=u+32|0;g=i;a:do if((c-a|0)>1){h=a+2|0;e=a+1|0;b:do switch(b[a>>0]|0){case 97:switch(b[e>>0]|0){case 97:{EQ(g,72385);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 110:case 100:{QQ(g,72396);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 78:{EQ(g,72406);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 83:{QQ(g,72417);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 99:switch(b[e>>0]|0){case 108:{EQ(g,72427);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 109:{QQ(g,72438);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 111:{QQ(g,72448);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 118:{g=d+63|0;j=b[g>>0]|0;b[g>>0]=0;e=ic(h,c,d)|0;b[g>>0]=j;if((e|0)==(h|0))break a;c=f[d+4>>2]|0;if((f[d>>2]|0)==(c|0))break a;x4(c+-24|0,0,72458)|0;b[d+60>>0]=1;a=e;break a}default:break a}case 100:switch(b[e>>0]|0){case 97:{UJ(g,72468);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 101:{QQ(g,72486);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 108:{EK(g);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 118:{QQ(g,72496);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 86:{EQ(g,72506);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 101:switch(b[e>>0]|0){case 111:{QQ(g,72517);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 79:{EQ(g,72527);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 113:{EQ(g,72538);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 103:switch(b[e>>0]|0){case 101:{EQ(g,72549);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 116:{QQ(g,72560);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 105:{if((b[e>>0]|0)!=120)break a;EQ(g,72570);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 108:switch(b[e>>0]|0){case 101:{EQ(g,72581);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 105:{e=Zh(h,c,d)|0;if((e|0)==(h|0))break a;c=f[d+4>>2]|0;if((f[d>>2]|0)==(c|0))break a;x4(c+-24|0,0,72592)|0;a=e;break a}case 115:{EQ(g,72604);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 83:{YJ(g,72615);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 116:{QQ(g,72627);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 109:switch(b[e>>0]|0){case 105:{QQ(g,72637);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 73:{EQ(g,72647);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 108:{QQ(g,72486);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 76:{EQ(g,72658);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 109:{EQ(g,72669);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 110:switch(b[e>>0]|0){case 97:{VJ(g,72680);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 101:{EQ(g,72695);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 103:{QQ(g,72637);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 116:{QQ(g,72706);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 119:{XJ(g,72716);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 111:switch(b[e>>0]|0){case 111:{EQ(g,72729);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 114:{QQ(g,72740);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 82:{EQ(g,72750);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 112:switch(b[e>>0]|0){case 109:{YJ(g,72761);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 108:{QQ(g,72773);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 76:{EQ(g,72783);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 112:{EQ(g,72794);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 115:{QQ(g,72773);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 116:{EQ(g,72805);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 113:{if((b[e>>0]|0)!=117)break a;QQ(g,72816);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 114:switch(b[e>>0]|0){case 109:{QQ(g,72826);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 77:{EQ(g,72836);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 115:{EQ(g,72847);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}case 83:{YJ(g,72858);a=d+4|0;c=f[a>>2]|0;if(c>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,g|0);j=y;y=0;if(j&1){a=Pa()|0;Xka(g);break b}}else{ZL(c,g);f[a>>2]=(f[a>>2]|0)+24}Xka(g);a=h;break a}default:break a}case 118:{if(((b[e>>0]|0)+-48|0)>>>0>=10)break a;e=Zh(h,c,d)|0;if((e|0)==(h|0))break a;c=f[d+4>>2]|0;if((f[d>>2]|0)==(c|0))break a;x4(c+-24|0,0,72458)|0;a=e;break a}default:break a}while(0);$a(a|0)}while(0);u=i;return a|0}
function GY(a,b){a=a|0;b=b|0;X9(a,rsa(f[b>>2]|0)|0);return}function HY(a,b){a=a|0;b=b|0;X9(a,lsa(f[b>>2]|0)|0);return}function IY(a,b){a=a|0;b=b|0;X9(a,msa(f[b>>2]|0)|0);return}function JY(a,b){a=a|0;b=b|0;X9(a,nsa(f[b>>2]|0)|0);return}function KY(a,b){a=a|0;b=b|0;X9(a,ssa(f[b>>2]|0)|0);return}function LY(a,c){a=a|0;c=c|0;var d=0;d=u;u=u+16|0;if(b[a+104>>0]|0)jz(d,a+108|0,c,c);u=d;return}function MY(a){a=a|0;var b=0;b=a+4|0;yN(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function NY(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return bf(a,f[b>>2]|0,f[c>>2]|0,d,e,g,16820,16852)|0}function OY(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Ve(a,f[b>>2]|0,f[c>>2]|0,d,e,g,69087,69095)|0}function PY(a,b){a=a|0;b=b|0;var c=0;c=UAa(a,0)|0;if(jha(f[c>>2]|0,f[18862]|0)|0){c=UAa(a,1)|0;l6(gKa(f[c>>2]|0)|0,b)|0;return}else Na(23316,51343,1615,23334)}function QY(a,b){a=a|0;b=b|0;a=a+184|0;if(!(WS(a,b)|0))Na(35947,35371,611,35970);else{b=KM(a,b)|0;return f[b>>2]|0}return 0}function RY(a,b){a=a|0;b=b|0;a=a+220|0;if(!(WS(a,b)|0))Na(51667,35371,626,51690);else{b=KM(a,b)|0;return f[b>>2]|0}return 0}function SY(a){a=a|0;var b=0,c=0,d=0;d=a+8|0;b=f[a+12>>2]|0;a=f[d>>2]|0;while(1){if((a|0)==(b|0))break;c=f[a>>2]|0;if(c|0)Lb[f[(f[c>>2]|0)+4>>2]&511](c);a=a+4|0}E4(d);return}function TY(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-40|0;f[c>>2]=d;KDa(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function UY(a,b){a=a|0;b=b|0;X9(a,tsa(f[b>>2]|0)|0);return}function VY(a,b){a=a|0;b=b|0;bwa(a,b);ala(a+-16+16|0,b);bwa(a,0);return}function WY(a,b){a=a|0;b=b|0;var c=0;b=ksa(f[b>>2]|0)|0;c=b+8|0;if(pJa(f[c>>2]|0)|0){a=KM(a+28|0,c)|0;f[a>>2]=b}return}function XY(a){a=a|0;BI(f[a+4>>2]|0);return}function YY(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=nV(36)|0;f[d+4>>2]=0;f[d+8>>2]=0;f[d>>2]=7020;e=d+12|0;xma(e,b,f[c>>2]|0);f[a>>2]=e;f[a+4>>2]=d;return}function ZY(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;X$(a,f[c>>2]|0,b,-1);gP(a,44);zya(a);c=UAa(b,2)|0;X$(a,f[c>>2]|0,b,1);return}function _Y(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=b;Pz(c+8|0,a+56|0,b,d);u=c;return}function $Y(a,b,c){a=a|0;b=b|0;c=c|0;return AT(a,b,f[c+8>>2]|0)|0}function aZ(a,b,c){a=a|0;b=b|0;c=c|0;a=a+4|0;while(1){if((b|0)==(c|0))break;f[f[a>>2]>>2]=f[b>>2];f[a>>2]=(f[a>>2]|0)+4;b=b+4|0}return}function bZ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,g=0;d=a;a=b-a>>2;while(1){if(!a)break;b=(a|0)/2|0;g=d+(b<<2)|0;e=(f[g>>2]|0)>>>0<c>>>0;d=e?g+4|0:d;a=e?a+-1-b|0:b}return d|0}function cZ(a,b){a=a|0;b=b|0;bwa(a,b);rla(a+-16+16|0,b);bwa(a,0);return}function dZ(a,b){a=a|0;b=b|0;var c=0;b=rsa(f[b>>2]|0)|0;c=b+8|0;if(pJa(f[c>>2]|0)|0){a=KM(a+28|0,c)|0;f[a>>2]=b}return}function eZ(a){a=a|0;IH(f[a+4>>2]|0);return}function fZ(a){a=a|0;$R(a);return}function gZ(a,b){a=a|0;b=b|0;X9(a,Asa(f[b>>2]|0)|0);return}function hZ(a,b){a=a|0;b=b|0;b=DR(a,b)|0;return yra(f[a+32>>2]|0,b)|0}function iZ(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Gza(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function jZ(a,b){a=a|0;b=b|0;Ewa(a,b);nA(a+-16+16|0,b);Ewa(a,0);return}function kZ(a){a=a|0;var b=0,c=0;c=(f[a+4>>2]|0)-(f[a>>2]|0)>>2;while(1){b=c+-1|0;if((c|0)<=0)break;wp(f[(f[a>>2]|0)+(b<<2)>>2]|0);c=b}return}function lZ(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[a>>2]|0;bra(a,b);c=f[a+4>>2]|0;b=0;while(1){if((b|0)==(c|0))break;f[(f[a>>2]|0)+(b<<2)>>2]=f[d+(b<<2)>>2];b=b+1|0}return}function mZ(a,b){a=a|0;b=b|0;if(!(bv(f[a+44>>2]|0,b)|0))ZB(a+16|0,b+36|0);return}function nZ(a){a=a|0;var b=0;switch(f[a+8>>2]|0){case 3:case 1:case 0:{f[a+4>>2]=1;break}case 2:{b=bga(a+16|0,0)|0;f[a+4>>2]=(f[(f[b>>2]|0)+4>>2]|0)==5?5:1;break}default:Ka()}return}function oZ(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Kza(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function pZ(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-40|0;f[c>>2]=d;KDa(d)}$Ja(f[a>>2]|0)}return}function qZ(a,b){a=a|0;b=b|0;a=a+4|0;f[b>>2]=8080;b=b+4|0;f[b>>2]=f[a>>2];f[b+4>>2]=f[a+4>>2];f[b+8>>2]=f[a+8>>2];return}function rZ(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{S5(a,+((f[c>>2]|0)>>>0));break}case 2:{S5(a,+((f[c>>2]|0)>>>0)+4294967296.0*+((f[c+4>>2]|0)>>>0));break}default:Ka()}return}function sZ(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{tda(a,+((f[c>>2]|0)>>>0));break}case 2:{tda(a,+((f[c>>2]|0)>>>0)+4294967296.0*+((f[c+4>>2]|0)>>>0));break}default:Ka()}return}function tZ(a,b){a=a|0;b=b|0;bwa(a,b);kI(a+-16|0,b);bwa(a,0);return}function uZ(a,b){a=a|0;b=b|0;bwa(a,b);Wla(a+-16+16|0,b);bwa(a,0);return}function vZ(a,b){a=a|0;b=b|0;var c=0;c=jN(f[b+36>>2]|0)|0;b=(aj(f[a+44>>2]|0,b)|0)+4|0;f[b>>2]=c;return}function wZ(a,b){a=a|0;b=b|0;a=f[(f[a+4>>2]|0)+36>>2]|0;Mb[f[(f[a>>2]|0)+20>>2]&4095](a,b);return}function xZ(a,c){a=a|0;c=c|0;b[a>>0]=0;f[a+4>>2]=c;c=c+(f[(f[c>>2]|0)+-12>>2]|0)|0;if(!(f[c+16>>2]|0)){c=f[c+72>>2]|0;if(c|0)Wp(c)|0;b[a>>0]=1}return}function yZ(a,c){a=a|0;c=c|0;b[a>>0]=0;f[a+4>>2]=c;c=c+(f[(f[c>>2]|0)+-12>>2]|0)|0;if(!(f[c+16>>2]|0)){c=f[c+72>>2]|0;if(c|0)Yp(c)|0;b[a>>0]=1}return}function zZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Nf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function AZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Of(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function BZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Pf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function CZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Ef(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function DZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Ff(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function EZ(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Gf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function FZ(a,b){a=a|0;b=b|0;eba(a,Vqa(f[b>>2]|0)|0);return}function GZ(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+8|0;a=b;b=f[c>>2]|0;do{d=b;f[d>>2]=0;f[d+4>>2]=0;b=(f[c>>2]|0)+8|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function HZ(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=a+8|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;Kqa(d)}a=f[a>>2]|0;if(a|0)$Ja(a);return}function IZ(){var a=0,b=0;a=zb(8)|0;y=0;ja(76,a|0,72988);b=y;y=0;if(b&1){b=Pa()|0;Oa(a|0);$a(b|0)}else{f[a>>2]=18236;ub(a|0,5832,318)}}function JZ(){var a=0,b=0;a=zb(8)|0;y=0;ja(76,a|0,72988);b=y;y=0;if(b&1){b=Pa()|0;Oa(a|0);$a(b|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}function KZ(a,b){a=a|0;b=b|0;b=Era(f[b>>2]|0)|0;A5(f[a+24>>2]|0,b);return}function LZ(a,b){a=a|0;b=b|0;Ewa(a,b);yA(a+-16+16|0,b);Ewa(a,0);return}function MZ(a,b){a=a|0;b=b|0;Ewa(a,b);zA(a+-16+16|0,b);Ewa(a,0);return}function NZ(a,b){a=a|0;b=b|0;bwa(a,b);jma(a+-16+16|0,b);bwa(a,0);return}function OZ(a){a=a|0;var b=0,c=0,d=0,e=0;c=a+32|0;d=a+36|0;b=f[a+40>>2]|0;while(1){if(!b)break;e=b+-1|0;$b[f[(f[c>>2]|0)+(e<<2)>>2]&255](0,a,f[(f[d>>2]|0)+(e<<2)>>2]|0);b=e}return}function PZ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=a+4|0;a=c-b|0;if((a|0)>0){rq(f[d>>2]|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+(a>>>2<<2)}return}function QZ(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;while(1){a=f[a>>2]|0;if(!a){a=0;break}c=f[a+16>>2]|0;if(c>>>0>b>>>0)continue;if(c>>>0>=b>>>0){a=1;break}a=a+4|0}return a|0}function RZ(){var a=0,b=0;a=zb(8)|0;y=0;ja(76,a|0,70478);b=y;y=0;if(b&1){b=Pa()|0;Oa(a|0);$a(b|0)}else{f[a>>2]=18236;ub(a|0,5832,318)}}function SZ(){var a=0,b=0;a=zb(8)|0;y=0;ja(76,a|0,70478);b=y;y=0;if(b&1){b=Pa()|0;Oa(a|0);$a(b|0)}else{f[a>>2]=18216;ub(a|0,5816,318)}}function TZ(a,b){a=a|0;b=b|0;eba(a,fra(f[b>>2]|0)|0);return}function UZ(a,b){a=a|0;b=b|0;var c=0;c=Nta(f[a+4>>2]|0)|0;if((lxa(b)|0)>>>0>1){b=sra(a,lj(b,1)|0)|0;f[c+8>>2]=b}return c|0}function VZ(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Gza(d)}$Ja(f[a>>2]|0)}return}function WZ(a){a=a|0;var b=0;X8(f[a+8>>2]|0);b=f[a>>2]|0;f[a>>2]=0;if(b|0)$Ja(b);return}function XZ(a,b){a=a|0;b=b|0;b=Qra(f[b>>2]|0)|0;iQ(f[a+24>>2]|0,b);return}function YZ(a,b){a=a|0;b=b|0;b=Sra(f[b>>2]|0)|0;HW(f[a+24>>2]|0,b);return}function ZZ(a,b){a=a|0;b=b|0;Ewa(a,b);KA(a+-16+16|0,b);Ewa(a,0);return}function _Z(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;jz(c,a+64|0,b,b);u=c;return}function $Z(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;jz(c,a+52|0,b,b);u=c;return}function a_(a,c,d,e,g){a=a|0;c=c|0;d=d|0;e=e|0;g=g|0;var h=0,i=0;h=d-c|0;a=g;g=c;while(1){if((g|0)==(d|0))break;i=f[g>>2]|0;b[a>>0]=i>>>0<128?i&255:e;a=a+1|0;g=g+4|0}return c+(h>>>2<<2)|0}function b_(a){a=a|0;var b=0,c=0,d=0;d=a+8|0;switch(f[a>>2]|0){case 3:case 1:{c=f[d>>2]|0;b=((c|0)<0)<<31>>31;break}case 4:case 2:{c=d;b=f[c+4>>2]|0;c=f[c>>2]|0;break}default:Ka()}J=b;return c|0}function c_(a,b){a=a|0;b=b|0;eba(a,gra(f[b>>2]|0)|0);return}function d_(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;jz(c,a+24|0,b,b);u=c;return}function e_(a,b){a=a|0;b=b|0;b=DR(a,b)|0;return Una(f[a+32>>2]|0,b)|0}function f_(a,b){a=a|0;b=b|0;Dca(a);f[a>>2]=8744;f[a+44>>2]=b;return}function g_(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-16|0;f[c>>2]=d;Kza(d)}$Ja(f[a>>2]|0)}return}function h_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;if(bDa(a,f[b+8>>2]|0)|0)hA(b,c,d,e);return}function i_(a,b){a=a|0;b=b|0;var c=0,d=0;d=u;u=u+16|0;c=d;if(Sba(a,b)|0){a=f[(f[a+40>>2]|0)+(b<<2)>>2]|0;f[c>>2]=a}else{cJa(c);a=f[c>>2]|0}u=d;return a|0}function j_(a,b){a=a|0;b=b|0;Ewa(a,b);OA(a+-16+16|0,b);Ewa(a,0);return}function k_(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0;e=0;do{i=a;a=a>>>7;g=pJa(a)|0;h=e;e=e+1|0;b[(f[c>>2]|0)+(h+d)>>0]=g?i|128:i&127}while(g);return e|0}function l_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Qf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function m_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Sf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function n_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Tf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function o_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Hf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function p_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Jf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function q_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Kf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function r_(a){a=a|0;f[a>>2]=8592;E4(a+64|0);RV(a+44|0);Uqa(a);return}function s_(a,b){a=a|0;b=b|0;eba(a,pra(f[b>>2]|0)|0);return}function t_(a,b){a=a|0;b=b|0;eba(a,kra(f[b>>2]|0)|0);return}function u_(a,b){a=a|0;b=b|0;eba(a,lra(f[b>>2]|0)|0);return}function v_(a,b){a=a|0;b=b|0;bwa(a,b);Gka(a,b);bwa(a,0);return}function w_(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;RF(a,c);if(!(pJa(f[c>>2]|0)|0))jva(f[a+16>>2]|0,f[b+12>>2]|0)|0;return}function x_(a){a=a|0;var c=0,d=0;if(!(b[a+8>>0]|0)){d=a+4|0;c=(f[d>>2]|0)+-1|0;f[d>>2]=c;zaa(f[a>>2]|0,c)|0}c3(f[a>>2]|0,41)|0;return}function y_(a){a=+a;var b=0,c=0;p[s>>3]=a;b=f[s+4>>2]|0;c=b&2146435072;if(!(c>>>0>1126170624|(c|0)==1126170624&0>0)){b=(b|0)<0;a=(b?4503599627370496.0:-4503599627370496.0)+((b?-4503599627370496.0:4503599627370496.0)+a);if(a==0.0)a=b?-0.0:0.0}return +a}function z_(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+4|0;a=c-b|0;if((a|0)>0){rq(f[d>>2]|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+(a>>>3<<3)}return}function A_(a){a=a|0;var b=0,c=0,d=0;b=f[a>>2]|0;if(b|0){c=a+4|0;while(1){d=f[c>>2]|0;if((d|0)==(b|0))break;d=d+-24|0;f[c>>2]=d;Kqa(d)}$Ja(f[a>>2]|0)}return}function B_(a,b){a=a|0;b=b|0;b=Yra(f[b>>2]|0)|0;A5(f[a+24>>2]|0,b);return}function C_(a,b){a=a|0;b=b|0;b=Zra(f[b>>2]|0)|0;TW(f[a+24>>2]|0,b);return}function D_(a,b){a=a|0;b=b|0;bwa(a,b);pna(a+-16+16|0,b);bwa(a,0);return}function E_(a,b){a=a|0;b=b|0;Ewa(a,b);YA(a+-16+16|0,b);Ewa(a,0);return}function F_(a){a=a|0;f[a>>2]=7364;E4(a+72|0);oW(a+60|0);E4(a+48|0);Uqa(a);return}function G_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Rf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function H_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Uf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function I_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return If(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function J_(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;return Lf(f[b>>2]|0,f[c>>2]|0,d,e,g)|0}function K_(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;X$(a,f[c>>2]|0,b,-1);gP(a,91);b=UAa(b,2)|0;Cg(a,f[b>>2]|0);gP(a,93);return}function L_(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-20|0;f[c>>2]=e;d=e}a=f[a>>2]|0;if(a|0)$Ja(a);return}function M_(a,c){a=a|0;c=c|0;var d=0,e=0;if((a|0)!=(c|0)){d=b[c+11>>0]|0;e=d<<24>>24<0;aC(a,e?f[c>>2]|0:c,e?f[c+4>>2]|0:d&255)|0}return a|0}function N_(a,b){a=a|0;b=b|0;Wt(a,fra(f[b>>2]|0)|0);return}function O_(a,b){a=a|0;b=b|0;eba(a,ura(f[b>>2]|0)|0);return}function P_(a,b){a=a|0;b=b|0;eba(a,vra(f[b>>2]|0)|0);return}function Q_(a,b){a=a|0;b=b|0;eba(a,wra(f[b>>2]|0)|0);return}function R_(a,b){a=a|0;b=b|0;Ewa(a,b);hB(a+-16+16|0,b);Ewa(a,0);return}function S_(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=Y(e,f)|0;d=a>>>16;a=(c>>>16)+(Y(e,d)|0)|0;e=b>>>16;b=Y(e,f)|0;return (J=(a>>>16)+(Y(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function T_(a,b){a=a|0;b=b|0;a=a+172|0;if(!(WS(a,b)|0))a=0;else{a=KM(a,b)|0;a=f[a>>2]|0}return a|0}function U_(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+4|0;a=b;b=f[c>>2]|0;do{d=b;f[d>>2]=0;f[d+4>>2]=0;b=(f[c>>2]|0)+8|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function V_(a){a=a|0;eJ(f[a+4>>2]|0);return}function W_(a,b){a=a|0;b=b|0;eba(a,Era(f[b>>2]|0)|0);return}function X_(a,b){a=a|0;b=b|0;eba(a,Lra(f[b>>2]|0)|0);return}function Y_(a,b){a=a|0;b=b|0;Ewa(a,b);xB(a+-16+16|0,b);Ewa(a,0);return}function Z_(a,b){a=a|0;b=b|0;Ewa(a,b);yB(a+-16+16|0,b);Ewa(a,0);return}function __(a,b){a=a|0;b=b|0;Ewa(a,b);zB(a+-16+16|0,b);Ewa(a,0);return}function $_(a,b){a=a|0;b=b|0;Ewa(a,b);AB(a+-16+16|0,b);Ewa(a,0);return}function a$(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;Pz(c,a+40|0,f[b>>2]|0,b);u=c;return}function b$(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;Pz(c,a+28|0,f[b>>2]|0,b);u=c;return}function c$(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;b=b+8|0;jz(c,a+80|0,b,b);u=c;return}function d$(a,b){a=+a;b=+b;var c=0,d=0;p[s>>3]=a;d=f[s>>2]|0;c=f[s+4>>2]|0;p[s>>3]=b;c=f[s+4>>2]&-2147483648|c&2147483647;f[s>>2]=d;f[s+4>>2]=c;return +(+p[s>>3])}function e$(a){a=a|0;Sma(a+52|0);bea(a+40|0);Rba(a+12|0);return}function f$(a){a=a|0;cT(a);return}function g$(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-12|0;f[c>>2]=e;d=e}a=f[a>>2]|0;if(a|0)$Ja(a);return}function h$(a,b){a=a|0;b=b|0;b=Xra(f[b>>2]|0)|0;Cna(f[a+24>>2]|0,b);return}function i$(a,b){a=a|0;b=b|0;b=lsa(f[b>>2]|0)|0;O5(f[a+24>>2]|0,b);return}function j$(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;while(1){b=Ec(a,b)|0;if(!b)break;jva(f[c>>2]|0,b)|0}return}function k$(a){a=a|0;xK(a);return}function l$(a,c){a=a|0;c=c|0;var d=0,e=0,g=0;Xia(a,b[c>>0]|0);e=iJ(c)|0;g=e+1|0;GD(a,g);d=a+12|0;yCa((f[a+4>>2]|0)+(f[d>>2]|0)|0,c,g)|0;f[d>>2]=(f[d>>2]|0)+e;return}function m$(a,b){a=a|0;b=b|0;rx(a,pra(f[b>>2]|0)|0);return}function n$(a,b){a=a|0;b=b|0;bwa(a,b);Wna(a+-16+16|0,b);bwa(a,0);return}function o$(a,b){a=a|0;b=b|0;Ewa(a,b);TB(a+-16+16|0,b);Ewa(a,0);return}function p$(a,b){a=a|0;b=b|0;Ewa(a,b);VB(a+-16+16|0,b);Ewa(a,0);return}function q$(a){a=a|0;oI(f[a+4>>2]|0);return}function r$(a){a=a|0;VH(a,f[a+4>>2]|0);return}function s$(a){a=a|0;kJ(f[a+4>>2]|0);return}function t$(a,b){a=a|0;b=b|0;b=jsa(f[b>>2]|0)|0;Cna(f[a+24>>2]|0,b);return}function u$(a,b){a=a|0;b=b|0;b=ksa(f[b>>2]|0)|0;Cna(f[a+24>>2]|0,b);return}function v$(a,b){a=a|0;b=b|0;Ewa(a,b);Jw(a,b);Ewa(a,0);return}function w$(a,b){a=a|0;b=b|0;a=a+208|0;if(!(WS(a,b)|0))a=0;else{a=KM(a,b)|0;a=f[a>>2]|0}return a|0}function x$(a,c){a=a|0;c=c|0;a:do if(!(b[a+24>>0]|0)){switch(f[c+8>>2]|0){case 31:case 30:case 29:case 28:case 6:case 5:case 4:case 3:break;default:break a}b[a+78>>0]=1}while(0);return}function y$(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{S5(a,+(f[c>>2]|0));break}case 2:{S5(a,+((f[c>>2]|0)>>>0)+4294967296.0*+(f[c+4>>2]|0));break}default:Ka()}return}function z$(a,b){a=a|0;b=b|0;var c=0;c=b+8|0;switch(f[b>>2]|0){case 1:{tda(a,+(f[c>>2]|0));break}case 2:{tda(a,+((f[c>>2]|0)>>>0)+4294967296.0*+(f[c+4>>2]|0));break}default:Ka()}return}function A$(a,b){a=a|0;b=b|0;eba(a,Xra(f[b>>2]|0)|0);return}function B$(a,b){a=a|0;b=b|0;eba(a,Qra(f[b>>2]|0)|0);return}function C$(a,b){a=a|0;b=b|0;eba(a,Rra(f[b>>2]|0)|0);return}function D$(a,b){a=a|0;b=b|0;eba(a,Sra(f[b>>2]|0)|0);return}function E$(a){a=a|0;var b=0;y=0;ia(372,a|0);b=y;y=0;if(b&1){b=ab(0)|0;E4(a+8|0);lDa(b)}else{E4(a+8|0);return}}function F$(a){a=a|0;var b=0;switch(a|0){case 0:{b=39269;break}case 1:{b=39265;break}case 2:{b=39261;break}case 3:{b=39257;break}case 4:{b=39253;break}case 5:{b=42577;break}default:Ka()}return b|0}function G$(a){a=a|0;xG(f[a+4>>2]|0);return}function H$(a,b){a=a|0;b=b|0;b=rsa(f[b>>2]|0)|0;Cna(f[a+24>>2]|0,b);return}function I$(a,b){a=a|0;b=b|0;a=a+184|0;if(!(WS(a,b)|0))a=0;else{a=KM(a,b)|0;a=f[a>>2]|0}return a|0}function J$(a,b){a=a|0;b=b|0;a=a+220|0;if(!(WS(a,b)|0))a=0;else{a=KM(a,b)|0;a=f[a>>2]|0}return a|0}function K$(a,b){a=a|0;b=b|0;a=a+196|0;if(!(WS(a,b)|0))a=0;else{a=KM(a,b)|0;a=f[a>>2]|0}return a|0}function L$(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var g=0,h=0;g=u;u=u+16|0;h=g;f[h>>2]=e;e=psa(c)|0;c=vz(a,b,d,h)|0;if(e|0)psa(e)|0;u=g;return c|0}function M$(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+12>>2]=0;f[a+16>>2]=d;if(!b)d=0;else d=nV(b)|0;f[a>>2]=d;c=d+c|0;f[a+8>>2]=c;f[a+4>>2]=c;f[a+12>>2]=d+b;return}function N$(a,b){a=a|0;b=b|0;eba(a,Yra(f[b>>2]|0)|0);return}function O$(a,b){a=a|0;b=b|0;eba(a,Zra(f[b>>2]|0)|0);return}function P$(a,b){a=a|0;b=b|0;eba(a,_ra(f[b>>2]|0)|0);return}function Q$(a,b){a=a|0;b=b|0;eba(a,jsa(f[b>>2]|0)|0);return}function R$(a,b){a=a|0;b=b|0;eba(a,ksa(f[b>>2]|0)|0);return}function S$(a,b){a=a|0;b=b|0;Ewa(a,b);oC(a+-16+16|0,b);Ewa(a,0);return}function T$(a,b){a=a|0;b=b|0;Ewa(a,b);pC(a+-16+16|0,b);Ewa(a,0);return}function U$(a,b){a=a|0;b=b|0;Ewa(a,b);qC(a+-16+16|0,b);Ewa(a,0);return}function V$(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=u;u=u+16|0;c=d;f[c>>2]=f[a>>2];while(1){e=(f[c>>2]|0)+(4-1)&~(4-1);a=f[e>>2]|0;f[c>>2]=e+4;if(b>>>0>1)b=b+-1|0;else break}u=d;return a|0}function W$(a){a=a|0;wT(a);return}function X$(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(Yr(c,b,d)|0){gP(a,40);Cg(a,b);gP(a,41)}else Cg(a,b);return}function Y$(a){a=a|0;var b=0,c=0,d=0;d=a+8|0;switch(f[a>>2]|0){case 1:{c=f[d>>2]|0;b=((c|0)<0)<<31>>31;break}case 2:{c=d;b=f[c+4>>2]|0;c=f[c>>2]|0;break}default:Ka()}J=b;return c|0}function Z$(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)!=(c|0)){d=Y(f[a+136>>2]|0,c>>>0<b>>>0?c:b)|0;b=d+(b>>>0<c>>>0?c:b)|0;c=(f[a+140>>2]|0)+(b>>>5<<2)|0;f[c>>2]=1<<(b&31)|f[c>>2]}return}function _$(a,b){a=a|0;b=b|0;var c=0;l$(a,42598);c=UAa(b,1)|0;if(!(Ata(f[c>>2]|0)|0)){gP(a,32);c=UAa(b,1)|0;Cg(a,f[c>>2]|0)}return}function $$(a,b){a=a|0;b=b|0;g9(a,Era(f[b>>2]|0)|0);return}function a0(a,b){a=a|0;b=b|0;g9(a,Lra(f[b>>2]|0)|0);return}function b0(a,b){a=a|0;b=b|0;eba(a,rsa(f[b>>2]|0)|0);return}function c0(a,b){a=a|0;b=b|0;eba(a,lsa(f[b>>2]|0)|0);return}function d0(a,b){a=a|0;b=b|0;eba(a,msa(f[b>>2]|0)|0);return}function e0(a,b){a=a|0;b=b|0;eba(a,nsa(f[b>>2]|0)|0);return}function f0(a,b){a=a|0;b=b|0;eba(a,ssa(f[b>>2]|0)|0);return}function g0(a,b){a=a|0;b=b|0;Ewa(a,b);xC(a+-16+16|0,b);Ewa(a,0);return}function h0(a,c){a=a|0;c=c|0;Bia(a);b[a+28>>0]=c;c=a+32|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;f[c+12>>2]=0;f[c+16>>2]=0;f[c+20>>2]=0;gua(a+56|0);return}function i0(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return Qb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)|0}function j0(a){a=a|0;if(!a)return;else{j0(f[a>>2]|0);j0(f[a+4>>2]|0);$Ja(a);return}}function k0(a){a=a|0;uI(f[a+4>>2]|0);return}function l0(a,c){a=a|0;c=c|0;Ob[f[(f[a>>2]|0)+24>>2]&255](a)|0;c=Jta(f[c>>2]|0,79356)|0;f[a+36>>2]=c;c=(Ob[f[(f[c>>2]|0)+28>>2]&255](c)|0)&1;b[a+44>>0]=c;return}function m0(a,c){a=a|0;c=c|0;Ob[f[(f[a>>2]|0)+24>>2]&255](a)|0;c=Jta(f[c>>2]|0,79348)|0;f[a+36>>2]=c;c=(Ob[f[(f[c>>2]|0)+28>>2]&255](c)|0)&1;b[a+44>>0]=c;return}function n0(a){a=a|0;var b=0;a=a+8|0;b=psa(f[a>>2]|0)|0;if(b|0)psa(b)|0;a=f[a>>2]|0;if(!a)return 1;a=psa(a)|0;b=eIa()|0;if(a|0)psa(a)|0;return (b|0)==1|0}function o0(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;Cg(a,f[c>>2]|0);gP(a,46);b=UAa(b,2)|0;l$(a,voa(gKa(f[b>>2]|0)|0)|0);return}function p0(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b+12|0;c=b+16|0;d=f[e>>2]|0;f[e>>2]=f[c>>2];f[c>>2]=d;b=b+8|0;a=dea(f[a>>2]|0,20,f[b>>2]|0)|0;f[b>>2]=a;return}function q0(a,b){a=a|0;b=b|0;ipa(a);f[a>>2]=6336;f[a+4>>2]=b;return}function r0(a,b){a=a|0;b=b|0;b=Asa(f[b>>2]|0)|0;Cna(f[a+24>>2]|0,b);return}function s0(a,b){a=a|0;b=b|0;jy(a,pra(f[b>>2]|0)|0);return}function t0(a,b){a=a|0;b=b|0;eba(a,tsa(f[b>>2]|0)|0);return}function u0(a,b){a=a|0;b=b|0;bwa(a,b);Gv(a+-16|0,b);bwa(a,0);return}function v0(a){a=a|0;Ifa(a+48|0);t7(a+36|0);wsa(a);return}function w0(a){a=a|0;LJ(f[a+4>>2]|0);return}function x0(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-8|0;f[c>>2]=e;d=e}a=f[a>>2]|0;if(a|0)$Ja(a);return}function y0(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,42605,0)|0;zea(a);kF(a,f[b+8>>2]|0);x_(a);return}function z0(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-16|0;f[c>>2]=e;d=e}a=f[a>>2]|0;if(a|0)$Ja(a);return}function A0(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=a+40|0;e=1;while(1){b[f>>0]=e;Fl(a,d);if(Uc(a,c,d)|0)e=0;else break}return}function B0(a,b){a=a|0;b=b|0;eba(a,Asa(f[b>>2]|0)|0);return}function C0(a){a=a|0;qka(a);f[a>>2]=9328;nka(a+44|0);gua(a+108|0);f[a+120>>2]=0;f[a+124>>2]=0;f[a+128>>2]=0;return}function D0(a,b){a=a|0;b=b|0;var c=0;c=(Cn(a,f[b+24>>2]|0)|0)+2|0;a=c+(Cn(a,f[b+28>>2]|0)|0)|0;return a+(0-(h[b+20>>0]|0)&10)|0}function E0(a){a=a|0;var b=0,c=0;b=f[a>>2]|0;a=(f[a+4>>2]|0)-b>>2;if(!a)Na(50136,50144,37,50171);else c=0;while(1){if((c|0)==(a|0))break;f[b+(c<<2)>>2]=c;c=c+1|0}return}function F0(a){a=+a;var b=0,c=0;c=u;u=u+16|0;b=c;n[b>>2]=a;if(((JAa(a)|0)&2147483647)>>>0>2139095040){b=(rIa(b)|0)&8388607;u=c;return b|0}else Na(39011,39045,97,39066);return 0}function G0(a,b){a=a|0;b=b|0;Ewa(a,b);cD(a+-16+16|0,b);Ewa(a,0);return}function H0(a,b){a=a|0;b=b|0;Ewa(a,b);dD(a+-16+16|0,b);Ewa(a,0);return}function I0(a,b){a=a|0;b=b|0;var c=0;c=nV(48)|0;yaa(c,b);WN(a,c);return}function J0(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+4|0;a=c-b|0;if((a|0)>0){rq(f[d>>2]|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+(a>>>2<<2)}return}function K0(a){a=a|0;bI(f[a+4>>2]|0);return}function L0(a){a=a|0;jJ(a,f[a+4>>2]|0);return}function M0(a){a=a|0;MI(f[a+4>>2]|0);return}function N0(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;e=nV(20)|0;f[a>>2]=e;f[a+4>>2]=c+4;f[e+16>>2]=f[d>>2];b[a+8>>0]=1;return}function O0(a,b){a=a|0;b=b|0;Ewa(a,b);gD(a+-16+16|0,b);Ewa(a,0);return}function P0(a,b){a=a|0;b=b|0;bwa(a,b);li(a+-16|0,b);bwa(a,0);return}function Q0(a){a=a|0;f[a>>2]=7928;Sma(a+68|0);R1(a+56|0);Dra(a);return}function R0(a,b){a=a|0;b=b|0;var c=0;c=nV(52)|0;a6(c,b);WN(a,c);return}function S0(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((c|0)<(a|0)&(a|0)<(c+d|0)){e=a;c=c+d|0;a=a+d|0;while((d|0)>0){a=a-1|0;c=c-1|0;d=d-1|0;b[a>>0]=b[c>>0]|0}a=e}else rq(a,c,d)|0;return a|0}function T0(a){a=a|0;QI(f[a+4>>2]|0);return}function U0(a,b){a=a|0;b=b|0;Vea(Vea(Vea(76852,26880)|0,b)|0,26887)|0;ub(zb(1)|0,264,0)}function V0(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+32|0;d=c;AM(d,a+108|0,b);Rua(d);u=c;return}function W0(a,b){a=a|0;b=b|0;var c=0;c=nV(12)|0;f[c+8>>2]=f[b>>2];f[c+4>>2]=a;b=f[a>>2]|0;f[c>>2]=b;f[b+4>>2]=c;f[a>>2]=c;b=a+8|0;f[b>>2]=(f[b>>2]|0)+1;return}function X0(a,b){a=a|0;b=b|0;cA(a,b+36|0);return}function Y0(a,b){a=a|0;b=b|0;Ewa(a,b);kD(a+-16+16|0,b);Ewa(a,0);return}function Z0(a,b){a=a|0;b=b|0;Ewa(a,b);lD(a+-16+16|0,b);Ewa(a,0);return}function _0(a,b){a=a|0;b=b|0;bwa(a,b);ci(a+-16|0,b);bwa(a,0);return}function $0(a,b){a=a|0;b=b|0;bwa(a,b);ev(a+-16|0,b);bwa(a,0);return}function a1(a,b){a=a|0;b=b|0;bwa(a,b);Yl(a+-16|0,b);bwa(a,0);return}function b1(a,b){a=a|0;b=b|0;oG(b,a);L4(f[b>>2]|0);return}function c1(a){a=a|0;var b=0,c=0;b=a+4|0;c=gKa(f[(f[b>>2]|0)+84>>2]|0)|0;a=a+12|0;Ypa(c,f[a>>2]|0,0);vfa(f[b>>2]|0,f[a>>2]|0)|0;return}function d1(a,b){a=a|0;b=b|0;bC(a+44|0);return}function e1(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;b=u;u=u+48|0;d=b;vX(d,f[a+16>>2]|0);yh(d,c);u=b;return}function f1(a,b){a=a|0;b=b|0;ql(a,Sra(f[b>>2]|0)|0);return}function g1(a,b){a=a|0;b=b|0;var c=0,d=0;d=f[a+16>>2]|0;c=gKa(f[d>>2]|0)|0;jva(d,b)|0;Cy(a+44|0,c,b);return b|0}function h1(a,c){a=a|0;c=c|0;f[a>>2]=c;hV(a+4|0,42);b[a+2504>>0]=1;return}function i1(a,b){a=a|0;b=b|0;Nx(a,pra(f[b>>2]|0)|0);return}function j1(a,b){a=a|0;b=b|0;Ewa(a,b);sD(a+-16+16|0,b);Ewa(a,0);return}function k1(a,b){a=a|0;b=b|0;bwa(a,b);Lx(a+-16|0,b);bwa(a,0);return}function l1(a){a=a|0;Yna(a);f[a>>2]=6160;gza(a+4|0);f[a+16>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;return}function m1(a){a=a|0;AU(a);return}function n1(a,b){a=a|0;b=b|0;var c=0;if(b>>>0>357913941)SZ();else{c=nV(b*12|0)|0;f[a+4>>2]=c;f[a>>2]=c;f[a+8>>2]=c+(b*12|0);return}}function o1(a,b){a=a|0;b=b|0;var c=0;c=Uva(f[a+4>>2]|0)|0;b=sra(a,lj(b,1)|0)|0;f[c+8>>2]=b;_wa(c);return c|0}function p1(a,c){a=a|0;c=c|0;b[a+104>>0]=1;c=c+36|0;mC(a+44|0,c);fB(a+16|0,c);return}function q1(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;switch(b|0){case 5:case 2:case 1:break;default:xR(a,d,c)}return}function r1(a){a=a|0;yK(f[a+4>>2]|0);return}function s1(a){a=a|0;sU(a);return}function t1(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<c>>>0){b=(Y(f[a+136>>2]|0,b)|0)+c|0;c=(f[a+140>>2]|0)+(b>>>5<<2)|0;f[c>>2]=1<<(b&31)|f[c>>2];return}else Na(50224,50016,242,50235)}function u1(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=u;u=u+16|0;d=c+4|0;e=c;cJa(e);f[d>>2]=f[e>>2];b=Xt(a,d,b)|0;u=c;return b|0}function v1(a,c,d,e,f,g){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;g=uH(a,c,d,y9(g)|0,e,f,g)|0;b[g+20>>0]=1;return g|0}function w1(a,b){a=a|0;b=b|0;bwa(a,b);BM(a+-16|0,b);bwa(a,0);return}function x1(a,b){a=a|0;b=b|0;bwa(a,b);os(a+-16|0,b);bwa(a,0);return}function y1(a){a=+a;var b=0,c=0;c=(n[s>>2]=a,f[s>>2]|0);b=(c>>>23&255)+-118|0;if((b|0)>31)return +a;else{b=(b|0)<9?2147483647:-1>>>b;return +((b&c|0)==0?a:(f[s>>2]=c&~b,+n[s>>2]))}return 0.0}function z1(a){a=a|0;PJ(a,f[a+4>>2]|0);return}function A1(a){a=a|0;IK(f[a+4>>2]|0);return}function B1(a,b){a=a|0;b=b|0;cA(a,b+8|0);return}function C1(a){a=a|0;oma(a);f[a>>2]=7544;gua(a+56|0);gua(a+68|0);f[a+84>>2]=0;return}function D1(a){a=a|0;mL(a+4|0);return}function E1(a){a=a|0;f[18711]=a;if(!a){Vea(76684,23123)|0;Vea(76684,37450)|0}else Vea(76684,22722)|0;return}function F1(a){a=a|0;var c=0;if((Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0)==-1)a=-1;else{c=a+12|0;a=f[c>>2]|0;f[c>>2]=a+1;a=oHa(b[a>>0]|0)|0}return a|0}function G1(a,b,c,e){a=a|0;b=b|0;c=c|0;e=e|0;while(1){if((b|0)==(c|0))break;a=f[b>>2]|0;if(a>>>0<128)a=j[18668+(a<<1)>>1]|0;else a=0;d[e>>1]=a;e=e+2|0;b=b+4|0}return c|0}function H1(a){a=a|0;_J(a,f[a+4>>2]|0);return}function I1(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,39157,0)|0;c3(sQ(a,f[b+8>>2]|0)|0,41)|0;return}function J1(a){a=a|0;var c=0,d=0,e=0;d=f[a>>2]|0;e=(b[d>>0]|0)+-48|0;if(e>>>0<10){c=0;do{c=e+(c*10|0)|0;d=d+1|0;f[a>>2]=d;e=(b[d>>0]|0)+-48|0}while(e>>>0<10)}else c=0;return c|0}function K1(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+4|0;a=c-b|0;if((a|0)>0){rq(f[d>>2]|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+a}return}function L1(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;e=u;u=u+16|0;g=e;f[g>>2]=d;d=psa(b)|0;b=cX(a,c,g)|0;if(d|0)psa(d)|0;u=e;return b|0}function M1(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-4|0;f[c>>2]=e;d=e}a=f[a>>2]|0;if(a|0)$Ja(a);return}function N1(a,b){a=a|0;b=b|0;a=a+16|0;if((Mo(f[a>>2]|0)|0)==(b<<24>>24|0)){On(f[a>>2]|0)|0;a=1}else a=0;return a|0}function O1(a){a=a|0;gK(a,f[a+4>>2]|0);return}function P1(a){a=a|0;hK(a,f[a+4>>2]|0);return}function Q1(a){a=a|0;iK(a,f[a+4>>2]|0);return}function R1(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-20|0;f[a>>2]=d;b=d}$Ja(c)}return}function S1(a,b,c,e){a=a|0;b=b|0;c=c|0;e=e|0;while(1){if((c|0)==(e|0)){c=e;break}a=f[c>>2]|0;if(a>>>0>=128)break;if(!((d[18668+(a<<1)>>1]&b)<<16>>16))break;c=c+4|0}return c|0}function T1(a,c,d){a=a|0;c=c|0;d=d|0;a=a+c|0;if(gCa(a)|0)f[a>>2]=d;else{b[a>>0]=d;b[a+1>>0]=d>>8;b[a+2>>0]=d>>16;b[a+3>>0]=d>>24}return}function U1(a,c){a=a|0;c=c|0;var d=0;d=c+8|0;if(pJa(f[d>>2]|0)|0)WU(a+80|0,d);if((f[c+4>>2]|0)==5)b[a+26>>0]=1;return}function V1(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{rJa(b);b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function W1(a,c,d,e,f,g){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;g=RR(a,c,d,e,y9(g)|0,f,g)|0;b[g+20>>0]=1;return g|0}function X1(a,b){a=a|0;b=b|0;ng(a,ksa(f[b>>2]|0)|0);return}function Y1(a,b){a=a|0;b=b|0;var c=0;c=(f[a+4>>2]|0)-(f[a>>2]|0)|0;WO(a,b>>>0>4096?b:4096);if(b>>>0<4096&c>>>0>b>>>0)Kz((f[a>>2]|0)+b|0,0,4096-b|0)|0;return}function Z1(a,b){a=a|0;b=b|0;if((b+-1|0)>>>0<2){b=(b|0)==1?f[18903]|0:f[18887]|0;return Nq(a,b,MBa(0.0)|0)|0}else Na(51534,51469,236,51577);return 0}function _1(){wHa();nHa();lHa();jHa();hHa();aEa();$Da();ova();nva();mva();lva();return}function $1(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+32|0;d=c;MM(d,b);rm(d,a);D8(d);u=c;return a|0}function a2(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{gxa(b);b=(f[c>>2]|0)+16|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function b2(a,b){a=a|0;b=b|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=f[b+16>>2];return}function c2(){var a=0,b=0,c=0;a=nV(60)|0;b=a;c=b+60|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));G6(a);return a|0}function d2(a){a=a|0;eka(a+12|0);s1(a);return}function e2(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-12|0;f[a>>2]=d;b=d}$Ja(c)}return}function f2(a,b){a=a|0;b=b|0;bwa(a,b);Rt(a+-16|0,b);bwa(a,0);return}function g2(a,b){a=a|0;b=b|0;bwa(a,b);dy(a,b);bwa(a,0);return}function h2(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=u;u=u+16|0;d=e;f[d>>2]=f[c>>2];a=Rb[f[(f[a>>2]|0)+16>>2]&127](a,b,d)|0;if(a)f[c>>2]=f[d>>2];u=e;return a&1|0}function i2(a){a=a|0;_K(f[a+4>>2]|0);return}function j2(a){a=a|0;$K(f[a+4>>2]|0);return}function k2(a){a=a|0;aL(f[a+4>>2]|0);return}function l2(a){a=a|0;var b=0;b=zb(8)|0;y=0;ja(2045,b|0,a|0);a=y;y=0;if(a&1){a=Pa()|0;Oa(b|0);$a(a|0)}else ub(b|0,5784,320)}function m2(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function n2(a,b){a=a|0;b=b|0;Mx(a,msa(f[b>>2]|0)|0);return}function o2(a,b){a=a|0;b=b|0;Nx(a,ssa(f[b>>2]|0)|0);return}function p2(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;xA(a,b);b=b+16|0}return}function q2(a){a=a|0;f[a>>2]=9328;HCa(f[a+120>>2]|0);Cta(a+108|0);i6(a+44|0);Uqa(a);return}function r2(a,b){a=a|0;b=b|0;var c=0,d=0;c=PCa(b)|0;d=a+4096|0;b=f[d>>2]|0;if((a+4096-b|0)>>>0<c>>>0)b=rc(c)|0;else f[d>>2]=b+c;return b|0}function s2(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;if(!((a|0)==0&(c|0)==0))do{d=d+-1|0;b[d>>0]=h[65392+(a&15)>>0]|0|e;a=Bna(a|0,c|0,4)|0;c=J}while(!((a|0)==0&(c|0)==0));return d|0}function t2(a,b){a=a|0;b=b|0;sw(a,jsa(f[b>>2]|0)|0);return}function u2(a,b){a=a|0;b=b|0;Wh(a,ksa(f[b>>2]|0)|0);return}function v2(a,b){a=a|0;b=b|0;bwa(a,b);mZ(a+-16|0,b);bwa(a,0);return}function w2(a,b){a=a|0;b=b|0;b=wAa(b)|0;if((b|0?bDa(f[b+8>>2]|0,f[a+36>>2]|0)|0:0)?f[b+16>>2]|0:0){a=a+48|0;f[a>>2]=(f[a>>2]|0)+1}return}function x2(a){a=a|0;hL(f[a+4>>2]|0);return}function y2(a,b){a=a|0;b=b|0;var c=0;b=b+8|0;c=f[b>>2]|0;if(vva(f[a+24>>2]|0,c)|0)f[b>>2]=f[(f[f[a+28>>2]>>2]|0)+(c<<2)>>2];return}function z2(a,b){a=a|0;b=b|0;var c=0,d=0;d=iJ(b)|0;c=nV(d+13|0)|0;f[c>>2]=d;f[c+4>>2]=d;f[c+8>>2]=0;c=EFa(c)|0;rq(c|0,b|0,d+1|0)|0;f[a>>2]=c;return}function A2(a){a=a|0;var c=0,d=0;a:do if(b[a>>0]|0){gP(a,10);d=a+16|0;c=0;while(1){if((c|0)>=(f[d>>2]|0))break a;gP(a,32);c=c+1|0}}while(0);return}function B2(a,b){a=a|0;b=b|0;y2(a,Era(f[b>>2]|0)|0);return}function C2(a,b){a=a|0;b=b|0;y2(a,Lra(f[b>>2]|0)|0);return}function D2(a,b){a=a|0;b=b|0;bwa(a,b);Vq(a+-16|0,b);bwa(a,0);return}function E2(a,b){a=a|0;b=b|0;a=a+b|0;b=a;a=a+4|0;J=h[a>>0]|h[a+1>>0]<<8|h[a+2>>0]<<16|h[a+3>>0]<<24;return h[b>>0]|h[b+1>>0]<<8|h[b+2>>0]<<16|h[b+3>>0]<<24|0}function F2(a){a=a|0;var c=0;c=b[w+(a&255)>>0]|0;if((c|0)<8)return c|0;c=b[w+(a>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=b[w+(a>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (b[w+(a>>>24)>>0]|0)+24|0}function G2(a){a=a|0;rL(f[a+4>>2]|0);return}function H2(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=u;u=u+16|0;c=e;f[c>>2]=d;b=psa(b)|0;c=gW(a,68346,c)|0;if(b|0)psa(b)|0;u=e;return c|0}function I2(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(bDa(a,f[b+8>>2]|0)|0)YL(b,c,d);return}function J2(a){a=a|0;var c=0,d=0;c=b[a+11>>0]|0;if(c<<24>>24<0)d=f[a+4>>2]|0;else d=c&255;c=b[a+12+11>>0]|0;if(c<<24>>24<0)c=f[a+16>>2]|0;else c=c&255;return c+d|0}function K2(a,b){a=a|0;b=b|0;if(!b)Na(23382,23391,43,72604);else return Vea(c3(a,36)|0,b)|0;return 0}function L2(a,b){a=a|0;b=b|0;Mv(a,ssa(f[b>>2]|0)|0);return}function M2(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+32|0;d=c;iN(d,a,b);Rua(d);u=c;return}function N2(a,b){a=a|0;b=b|0;VU(a,b,0);$P(a+48|0,b);return}function O2(a,b){a=a|0;b=b|0;var c=0,d=0;c=b+4|0;d=f[b>>2]|0;f[d+4>>2]=f[c>>2];f[f[c>>2]>>2]=d;a=a+8|0;f[a>>2]=(f[a>>2]|0)+-1;$Ja(b);return}function P2(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;a=b;b=f[c>>2]|0;do{cJa(b);b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function Q2(a){a=a|0;var c=0;c=f[a+44>>2]|0;a=f[a+32>>2]|0;gKa(a)|0;a=(aj(c,a)|0)+8|0;b[a>>0]=0;return}function R2(a,b){a=a|0;b=b|0;var c=0,d=0;b=a+28|0;c=f[b>>2]|0;a=0;while(1){if((a|0)==-1)break;d=a+-1|0;f[b>>2]=c+(d<<2);a=d}return}function S2(a,b){a=a|0;b=b|0;var c=0;if((b|0)<0)SZ();else{b=((b+-1|0)>>>5)+1|0;c=nV(b<<2)|0;f[a>>2]=c;f[a+4>>2]=0;f[a+8>>2]=b;return}}function T2(a,b){a=a|0;b=b|0;var c=0;if(b>>>0>536870911)SZ();else{c=nV(b<<3)|0;f[a+4>>2]=c;f[a>>2]=c;f[a+8>>2]=c+(b<<3);return}}function U2(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=f[c+100>>2]|0;a=c+104|0;while(1){b=f[a>>2]|0;if((b|0)==(d|0))break;c=b+-16|0;f[a>>2]=c;Gza(c)}return}function V2(a,b){a=a|0;b=b|0;var c=0,d=0;f[a>>2]=f[b>>2];c=b+4|0;f[a+4>>2]=f[c>>2];d=b+8|0;f[a+8>>2]=f[d>>2];f[b>>2]=0;f[d>>2]=0;f[c>>2]=0;return}function W2(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{rJa(b);b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function X2(a,b){a=a|0;b=b|0;if((a|0)!=(b|0))qo(a,f[b>>2]|0,b+4|0);return a|0}function Y2(a,b){a=a|0;b=b|0;var c=0;b=b+24|0;c=SN(a,b)|0;if((c|0)!=(a+4|0))f[b>>2]=f[c+20>>2];return}function Z2(a){a=a|0;var b=0,c=0;b=nV(56)|0;y=0;ia(343,b|0);c=y;y=0;if(c&1){c=Pa()|0;$Ja(b);$a(c|0)}else{WN(a,b);return}}function _2(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{gxa(b);b=(f[c>>2]|0)+16|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function $2(a){a=a|0;FL(f[a+4>>2]|0);return}function a3(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-8|0;f[a>>2]=d;b=d}$Ja(c)}return}function b3(a){a=a|0;Bka(a);f[a>>2]=9040;f[a+44>>2]=0;gua(a+48|0);gua(a+60|0);return}function c3(a,c){a=a|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;b[e>>0]=c;c=kl(a,e,1)|0;u=d;return c|0}function d3(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{f[b>>2]=0;b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function e3(a){a=a|0;$V(a);return}function f3(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-16|0;f[a>>2]=d;b=d}$Ja(c)}return}function g3(a,b){a=a|0;b=b|0;switch(f[b>>2]|0){case 3:{tda(a,+K(+(+Hoa(b))));break}case 4:{S5(a,+K(+(+Goa(b))));break}default:Ka()}return}function h3(a){a=a|0;var b=0;b=nV(48)|0;f_(b,f[a+44>>2]|0);return b|0}function i3(a){a=a|0;var b=0,c=0;b=f[a>>2]|0;c=a+4|0;f[a>>2]=c;f[(f[c>>2]|0)+8>>2]=0;f[c>>2]=0;f[a+8>>2]=0;a=f[b+4>>2]|0;return ((a|0)==0?b:a)|0}function j3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b+(d>>>10<<2)|0;if((c|0)==(b|0))b=0;else b=(f[e>>2]|0)+((d&1023)<<2)|0;f[a>>2]=e;f[a+4>>2]=b;return}function k3(a,b){a=a|0;b=b|0;switch(f[b>>2]|0){case 3:{tda(a,+SJa(+Hoa(b)));break}case 4:{S5(a,+VJa(+Goa(b)));break}default:Ka()}return}function l3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Bna(a|0,b|0,c&63|0)|0;f=J;d=Aoa(0,0,c|0,d|0)|0;d=gna(a|0,b|0,d&63|0)|0;J=f|J;return e|d|0}function m3(a,b){a=a|0;b=b|0;em(a,Asa(f[b>>2]|0)|0);return}function n3(a){a=a|0;fK(f[a+4>>2]|0);return}function o3(a){a=a|0;XK(a,f[a+4>>2]|0);return}function p3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=gna(a|0,b|0,c&63|0)|0;f=J;d=Aoa(0,0,c|0,d|0)|0;d=Bna(a|0,b|0,d&63|0)|0;J=f|J;return e|d|0}function q3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=dua(f[a>>2]|0)|0;f[a+8>>2]=f[b>>2];f[a+12>>2]=c;f[a+16>>2]=d;$5(a);return a|0}function r3(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Cca(a,JU(a,b,c)|0,d,e)|0}function s3(a,b){a=a|0;b=b|0;pka(a);f[a>>2]=8968;f[a+44>>2]=b;return}function t3(a){a=a|0;var b=0,c=0;y=0;b=wa(49)|0;c=y;y=0;if(c&1){c=ab(0)|0;lDa(c)}else{c=f[b>>2]|0;f[a>>2]=c;Vxa(c);return}}function u3(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;c=b+4|0;d=f[b>>2]|0;f[d+4>>2]=f[c>>2];f[f[c>>2]>>2]=d;a=a+8|0;f[a>>2]=(f[a>>2]|0)+-1;$Ja(b);return}function v3(a,b){a=a|0;b=b|0;switch(f[b>>2]|0){case 3:{tda(a,+M(+(+Hoa(b))));break}case 4:{S5(a,+M(+(+Goa(b))));break}default:Ka()}return}function w3(a,b){a=a|0;b=b|0;switch(f[b>>2]|0){case 3:{tda(a,+X(+(+Hoa(b))));break}case 4:{S5(a,+X(+(+Goa(b))));break}default:Ka()}return}function x3(a,b){a=a|0;b=b|0;var c=0;c=gKa(f[a+36>>2]|0)|0;Mf(b,c,uya(f[a+40>>2]|0)|0);return}function y3(a){a=a|0;aM(f[a+4>>2]|0);return}function z3(a){a=a|0;Iba(a);f[a>>2]=6836;bda(a+16|0);f[a+80>>2]=0;f[a+84>>2]=0;gua(a+88|0);f[a+100>>2]=0;f[a+104>>2]=0;f[a+108>>2]=0;return}function A3(a,b){a=a|0;b=b|0;if((a|0)!=(b|0))tr(a,f[b>>2]|0,f[b+4>>2]|0);return a|0}function B3(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;n[a+16>>2]=1.0;b=a+20|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;n[a+36>>2]=1.0;return}function C3(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;a=b;b=f[c>>2]|0;do{cJa(b);b=(f[c>>2]|0)+4|0;f[c>>2]=b;a=a+-1|0}while((a|0)!=0);return}function D3(a,b){a=a|0;b=b|0;Lna(a+16|0,Vqa(f[b>>2]|0)|0);return}function E3(a){a=a|0;var b=0;switch(a|0){case 1:{b=0;break}case 2:{b=1;break}case 4:{b=2;break}case 8:{b=3;break}case 16:{b=4;break}case 32:{b=5;break}default:Ka()}return b|0}function F3(a){a=a|0;var b=0;b=epa(f[a+12>>2]|0,1)|0;f[a+4>>2]=b;f[a>>2]=b;f[a+8>>2]=b+24;return}function G3(a){a=a|0;jL(a,f[a+4>>2]|0);return}function H3(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=DJa(jpa(a)|0)|0;f[d>>2]=b;b=CJa(jpa(a)|0)|0;f[b>>2]=c;return a|0}function I3(a,b){a=a|0;b=b|0;c3(a,34)|0;Vea(a,b)|0;return c3(a,34)|0}function J3(a,b){a=a|0;b=b|0;fw(a,Xra(f[b>>2]|0)|0);return}function K3(a,b){a=a|0;b=b|0;Lna(a+16|0,fra(f[b>>2]|0)|0);return}function L3(a){a=a|0;Ora(a+56|0);oW(a+44|0);E4(a+32|0);Rba(a);return}function M3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a>>2]=8080;f[a+4>>2]=b;f[a+8>>2]=c;f[a+12>>2]=d;f[a+16>>2]=a;return}function N3(a){a=a|0;kM(f[a+4>>2]|0);return}function O3(a){a=a|0;lM(f[a+4>>2]|0);return}function P3(a,b){a=a|0;b=b|0;var c=0,d=0;b=a+44|0;c=f[b>>2]|0;a=0;while(1){if((a|0)==-1)break;d=a+-1|0;f[b>>2]=c+(d<<2);a=d}return}function Q3(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;Wb[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function R3(a,b){a=a|0;b=b|0;Lna(a+16|0,gra(f[b>>2]|0)|0);return}function S3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;c=Hsa(b|0,c|0,1,0)|0;b=J;if(!(b>>>0>0|(b|0)==0&c>>>0>1)?(g=(f[a+4>>2]|0)<0,e=(d&64)==0,e|g):0)return e&g|0;return 1}function T3(a){a=a|0;f[a>>2]=7544;uoa(a+68|0);uoa(a+56|0);Dra(a);return}function U3(a,b){a=a|0;b=b|0;if(!b)a=0;else a=(OO(a+56|0,b)|0)!=(a+60|0);return a|0}function V3(a){a=a|0;CL(a,f[a+4>>2]|0);return}function W3(a){a=a|0;lW(a);return}function X3(a,b,c,e){a=a|0;b=b|0;c=c|0;e=e|0;while(1){if((c|0)==(e|0)){c=e;break}a=f[c>>2]|0;if(a>>>0<128?(d[18668+(a<<1)>>1]&b)<<16>>16:0)break;c=c+4|0}return c|0}function Y3(a){a=a|0;var b=0,c=0,d=0;b=f[a+4>>2]|0;d=f[a+8>>2]|0;c=(f[a>>2]|0)+(d>>1)|0;if(!(d&1))a=b;else a=f[(f[c>>2]|0)+b>>2]|0;Lb[a&511](c);return}function Z3(a){a=a|0;var b=0;if((f[a>>2]|0?(b=f[a+4>>2]|0,b|0):0)?(b=efa(b+12|0)|0,(f[b>>2]|0)!=(f[a>>2]|0)):0)Na(49201,49135,106,49228);return}function _3(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;PA(a,b);b=b+16|0}return}function $3(a){a=a|0;E4(a+20|0);sfa(a+4|0);return}function a4(a){a=a|0;var b=0,c=0,d=0;b=nV(96)|0;c=b;d=c+96|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(d|0));Eca(b);f[a>>2]=b;return}function b4(a,b){a=a|0;b=b|0;if(!a)Na(33261,33266,974,33287);else{b=Rb[f[(f[a>>2]|0)+8>>2]&127](a,b,0)|0;BL(b);return b|0}return 0}function c4(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;cDa(a);rJa(a+16|0);f[a>>2]=7;d=DJa(a)|0;f[d>>2]=b;a=CJa(a)|0;f[a>>2]=c;return}function d4(a,b){a=a|0;b=b|0;Lna(a+16|0,pra(f[b>>2]|0)|0);return}function e4(a,b){a=a|0;b=b|0;Lna(a+16|0,kra(f[b>>2]|0)|0);return}function f4(a,b){a=a|0;b=b|0;Lna(a+16|0,lra(f[b>>2]|0)|0);return}function g4(a,b){a=a|0;b=b|0;var c=0;if(b>>>0>1073741823)SZ();else{c=nV(b<<2)|0;f[a+4>>2]=c;f[a>>2]=c;f[a+8>>2]=c+(b<<2);return}}function h4(a){a=a|0;var b=0;b=a+4|0;gV(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function i4(a){a=a|0;KW(a);return}function j4(a,c){a=a|0;c=c|0;var d=0;d=a+8|0;a=c;c=f[d>>2]|0;do{b[c>>0]=0;c=(f[d>>2]|0)+1|0;f[d>>2]=c;a=a+-1|0}while((a|0)!=0);return}function k4(a,b){a=a|0;b=b|0;switch(f[b>>2]|0){case 3:{tda(a,+y1(+Hoa(b)));break}case 4:{S5(a,+rM(+Goa(b)));break}default:Ka()}return}function l4(a){a=a|0;var b=0;switch(a<<24>>24|0){case 105:{b=1;break}case 106:{b=2;break}case 102:{b=3;break}case 100:{b=4;break}case 118:{b=0;break}default:Ka()}return b|0}function m4(a){a=a|0;var b=0,c=0,d=0,e=0;b=f[a+4>>2]|0;c=a+8|0;d=f[c>>2]|0;while(1){if((d|0)==(b|0))break;e=d+-1|0;f[c>>2]=e;d=e}$Ja(f[a>>2]|0);return}function n4(a,b){a=a|0;b=b|0;b5(a,ksa(f[b>>2]|0)|0);return}function o4(a,b){a=a|0;b=b|0;Lna(a+16|0,ura(f[b>>2]|0)|0);return}function p4(a,b){a=a|0;b=b|0;Lna(a+16|0,vra(f[b>>2]|0)|0);return}function q4(a,b){a=a|0;b=b|0;Lna(a+16|0,wra(f[b>>2]|0)|0);return}function r4(a){a=a|0;var b=0;if(!(f[a+32>>2]|0))Na(46579,35371,355,35506);if((f[(f[a+24>>2]|0)+4>>2]|0)!=5?(f[(f[a+28>>2]|0)+4>>2]|0)!=5:0)b=0;else b=5;f[a+4>>2]=b;return}function s4(a){a=a|0;switch(a|0){case 0:{a=1;break}case 1:{a=2;break}case 2:{a=4;break}case 3:{a=8;break}case 4:{a=16;break}case 5:{a=32;break}default:a=1<<a}return a|0}function t4(a){a=a|0;switch(a|0){case -1:{a=32;break}case 0:{a=0;break}default:if((_na(a+1|0)|0)==1)a=32-(p8(a)|0)|0;else a=0}return a|0}function u4(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[a+(b<<2)>>2]=0;b=b+1|0}f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function v4(a,b,c){a=a|0;b=b|0;c=c|0;Mj(a,b,c);return}function w4(a){a=a|0;var b=0;if((Ob[f[(f[a>>2]|0)+36>>2]&255](a)|0)==-1)a=-1;else{b=a+12|0;a=f[b>>2]|0;f[b>>2]=a+4;a=gKa(f[a>>2]|0)|0}return a|0}function x4(a,b,c){a=a|0;b=b|0;c=c|0;return hu(a,b,c,uHa(c)|0)|0}function y4(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;PDa(b,xqa(Vta()|0,a)|0);u=c;return f[b>>2]|0}function z4(a,b){a=a|0;b=b|0;Qz(a,b+36|0);return}function A4(){var a=0;a=nV(28)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;Hqa(a);return a|0}function B4(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=u;u=u+16|0;jf(a,b,c,d);u=d;return}function C4(a){a=+a;var b=0;b=(n[s>>2]=a,f[s>>2]|0);switch((b>>>23&255)<<24>>24){case 0:{b=b&2147483647|0?3:2;break}case -1:{b=(b&8388607|0)==0&1;break}default:b=4}return b|0}function D4(a){a=a|0;_W(a);return}function E4(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-4|0;f[a>>2]=d;b=d}$Ja(c)}return}function F4(a){a=a|0;var b=0,c=0,d=0;c=f[a>>2]|0;if(c|0){a=a+4|0;b=f[a>>2]|0;while(1){if((b|0)==(c|0))break;d=b+-1|0;f[a>>2]=d;b=d}$Ja(c)}return}function G4(a,b){a=a|0;b=b|0;b5(a,rsa(f[b>>2]|0)|0);return}function H4(a,b){a=a|0;b=b|0;Lna(a+16|0,Era(f[b>>2]|0)|0);return}function I4(a,b){a=a|0;b=b|0;Lna(a+16|0,Lra(f[b>>2]|0)|0);return}function J4(a){a=a|0;Ria(a+24|0);Fba(a+12|0);E4(a);return}function K4(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Mta(f[a>>2]|0)|0;f[a+16>>2]=b;f[a+8>>2]=c;f[a+12>>2]=d;WW(a);return a|0}function L4(a){a=a|0;var b=0;b=a+4|0;MV(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function M4(a){a=a|0;bM(a,f[a+4>>2]|0);return}function N4(a,b){a=a|0;b=b|0;tS(a,ksa(f[b>>2]|0)|0);return}function O4(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;TA(a,b);b=b+16|0}return}function P4(a){a=a|0;var b=0,c=0;b=a+4|0;c=f[b>>2]|0;a=(f[c+4>>2]|0)-(f[c>>2]|0)|0;om(c,0)|0;Zq(f[b>>2]|0,0)|0;return a|0}function Q4(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=c+8|0;Tb[f[(f[b>>2]|0)+16>>2]&15](a,b,f[c>>2]|0,f[c+4>>2]|0,0,d);return}function R4(a){a=a|0;var b=0;b=f[a+12>>2]|0;if((b|0)!=0?(f[b+4>>2]|0)==5:0)a=0;else{a=f[a+16>>2]|0;if(!a)a=1;else a=(f[a+4>>2]|0)!=5}return a|0}function S4(a){a=a|0;$M(f[a+4>>2]|0);return}function T4(a){a=a|0;rX(a);return}function U4(a,b){a=a|0;b=b|0;tS(a,rsa(f[b>>2]|0)|0);return}function V4(a,b){a=a|0;b=b|0;Lna(a+16|0,Xra(f[b>>2]|0)|0);return}function W4(a,b){a=a|0;b=b|0;Lna(a+16|0,Qra(f[b>>2]|0)|0);return}function X4(a,b){a=a|0;b=b|0;Lna(a+16|0,Rra(f[b>>2]|0)|0);return}function Y4(a,b){a=a|0;b=b|0;Lna(a+16|0,Sra(f[b>>2]|0)|0);return}function Z4(a,b){a=a|0;b=b|0;b=Lra(f[b>>2]|0)|0;bta(f[a+24>>2]|0,f[b+8>>2]|0);return}function _4(a){a=a|0;var b=0;switch(a|0){case 1:{b=105;break}case 2:{b=106;break}case 3:{b=102;break}case 4:{b=100;break}case 0:{b=118;break}default:Ka()}return b|0}function $4(a,b){a=a|0;b=b|0;Tu(a,Xra(f[b>>2]|0)|0);return}function a5(a,b,c){a=a|0;b=b|0;c=c|0;b=gia(a,b,1)|0;return nC(a,b,gia(a,c,1)|0)|0}function b5(a,b){a=a|0;b=b|0;b=b+8|0;if(pJa(f[b>>2]|0)|0)WU(a+24|0,b);return}function c5(a,c){a=a|0;c=c|0;var d=0;d=a+4|0;a=c;c=f[d>>2]|0;do{b[c>>0]=0;c=(f[d>>2]|0)+1|0;f[d>>2]=c;a=a+-1|0}while((a|0)!=0);return}function d5(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;cDa(a);PDa(a+16|0,0);f[a>>2]=6;d=CJa(a)|0;f[d>>2]=b;a=DJa(a)|0;f[a>>2]=c;return}function e5(a,b){a=a|0;b=b|0;Qz(a,b+8|0);return}function f5(a,b){a=a|0;b=b|0;Lna(a+16|0,Yra(f[b>>2]|0)|0);return}function g5(a,b){a=a|0;b=b|0;Lna(a+16|0,Zra(f[b>>2]|0)|0);return}function h5(a,b){a=a|0;b=b|0;Lna(a+16|0,_ra(f[b>>2]|0)|0);return}function i5(a,b){a=a|0;b=b|0;Lna(a+16|0,jsa(f[b>>2]|0)|0);return}function j5(a,b){a=a|0;b=b|0;Lna(a+16|0,ksa(f[b>>2]|0)|0);return}function k5(a,b){a=a|0;b=b|0;Aqa(a,Vqa(f[b>>2]|0)|0);return}function l5(a,b){a=a|0;b=b|0;var c=0;c=b+20|0;wk(a,b,b+24|0,wk(a,b,c,0,0)|0,c)|0;return}function m5(a,c,d){a=a|0;c=c|0;d=d|0;while(1){if((c|0)==(d|0))break;a=b[c>>0]|0;if(a<<24>>24>-1)a=f[13080+(a<<24>>24<<2)>>2]&255;b[c>>0]=a;c=c+1|0}return d|0}function n5(a,c,d){a=a|0;c=c|0;d=d|0;while(1){if((c|0)==(d|0))break;a=b[c>>0]|0;if(a<<24>>24>-1)a=f[11544+(a<<24>>24<<2)>>2]&255;b[c>>0]=a;c=c+1|0}return d|0}function o5(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;d=b+4|0;c=b;rJa(d);PDa(c,0);c4(a,f[d>>2]|0,f[c>>2]|0);u=b;return}function p5(a,b,c){a=a|0;b=b|0;c=c|0;b=kaa(f[a>>2]|0,b)|0;AW(b+12|0,c);Do(b);return b|0}function q5(a){a=a|0;var b=0;switch(a|0){case 1:{b=0;break}case 3:{b=2;break}case 4:{b=1;break}case 2:{b=8;break}case 0:{b=9;break}default:Ka()}return b|0}function r5(a){a=a|0;var b=0;b=a+4|0;aV(a,f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function s5(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Ota(a)|0;f[a+8>>2]=b;f[a+12>>2]=c;f[a+16>>2]=d;GV(a);return a|0}function t5(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;dB(a,b);b=b+16|0}return}function u5(a,b){a=a|0;b=b|0;Lna(a+16|0,rsa(f[b>>2]|0)|0);return}function v5(a,b){a=a|0;b=b|0;Lna(a+16|0,lsa(f[b>>2]|0)|0);return}function w5(a,b){a=a|0;b=b|0;Lna(a+16|0,msa(f[b>>2]|0)|0);return}function x5(a,b){a=a|0;b=b|0;Lna(a+16|0,nsa(f[b>>2]|0)|0);return}function y5(a,b){a=a|0;b=b|0;Lna(a+16|0,ssa(f[b>>2]|0)|0);return}function z5(a,b){a=a|0;b=b|0;Aqa(a,fra(f[b>>2]|0)|0);return}function A5(a,b){a=a|0;b=b|0;if(U3(a,f[b+12>>2]|0)|0)_Y(a,b);return}function B5(a,b){a=a|0;b=b|0;var c=0;c=UAa(b,1)|0;if(yja(gKa(f[c>>2]|0)|0)|0){c=UAa(b,1)|0;WH(a,f[c>>2]|0)}return}function C5(a){a=a|0;moa(a);f[a>>2]=8592;rna(a+44|0);f[a+64>>2]=0;f[a+68>>2]=0;f[a+72>>2]=0;return}function D5(a,b){a=a|0;b=b|0;wW(a,jsa(f[b>>2]|0)|0);return}function E5(a,b){a=a|0;b=b|0;Iqa(a+16|0,Vqa(f[b>>2]|0)|0);return}function F5(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;g=a;f[g>>2]=0;f[g+4>>2]=0;g=a+8|0;f[g>>2]=-1;f[g+4>>2]=-1;return}function G5(a,b){a=a|0;b=b|0;Lna(a+16|0,tsa(f[b>>2]|0)|0);return}function H5(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;CC(a,b);b=b+16|0}return}function I5(a,b){a=a|0;b=b|0;Aqa(a,gra(f[b>>2]|0)|0);return}function J5(a,b){a=a|0;b=b|0;var c=0;c=a+8|0;f[c>>2]=f[b>>2];f[c+4>>2]=f[b+4>>2];f[c+8>>2]=f[b+8>>2];f[c+12>>2]=f[b+12>>2];f[a+4>>2]=f[c>>2];return a|0}function K5(a){a=a|0;oX(a+20|0);Sma(a);return}function L5(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;MM(a+8|0,c);VBa(a+32|0,b);return}function M5(a,b){a=a|0;b=b|0;b=Lra(f[b>>2]|0)|0;tta(f[a+104>>2]|0,f[b+8>>2]|0);return}function N5(a,b){a=a|0;b=b|0;Iqa(a+16|0,fra(f[b>>2]|0)|0);return}function O5(a,b){a=a|0;b=b|0;if(U3(a,f[b+24>>2]|0)|0)_Y(a,b);return}function P5(a){a=a|0;var b=0;b=dAa(a)|0;if(!b)a=(jsa(a)|0)+12|0;else a=b+8|0;return f[a>>2]|0}function Q5(a,b){a=a|0;b=b|0;var c=0;jS(a);f[a>>2]=2;c=kha()|0;f[a+8>>2]=c;aja(c,b);return a|0}function R5(a,b){a=a|0;b=b|0;AW((QAa(f[(f[a+84>>2]|0)+104>>2]|0)|0)+12|0,b);kBa(a);return}function S5(a,b){a=a|0;b=+b;var c=0,d=0;c=u;u=u+16|0;d=c;p[d>>3]=b;f[a>>2]=4;d=EAa(d)|0;a=a+8|0;f[a>>2]=d;f[a+4>>2]=J;u=c;return}function T5(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;eB(a,b);b=b+16|0}return}function U5(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;fB(a,b);b=b+16|0}return}function V5(a,b){a=a|0;b=b|0;Aqa(a,pra(f[b>>2]|0)|0);return}function W5(a,b){a=a|0;b=b|0;Aqa(a,kra(f[b>>2]|0)|0);return}function X5(a,b){a=a|0;b=b|0;Aqa(a,lra(f[b>>2]|0)|0);return}function Y5(a,b){a=a|0;b=b|0;var c=0;c=b+32|0;wk(a,b,b+28|0,wk(a,b,c,0,0)|0,c)|0;return}function Z5(a,b){a=a|0;b=b|0;Lna(a+16|0,Asa(f[b>>2]|0)|0);return}function _5(a,b){a=a|0;b=b|0;Iqa(a+16|0,gra(f[b>>2]|0)|0);return}function $5(a){a=a|0;var b=0;b=f[a+16>>2]|0;if((b|0)!=0?(f[b+4>>2]|0)!=5:0){b=f[a+12>>2]|0;if(!b)b=0;else b=f[b+4>>2]|0}else b=5;f[a+4>>2]=b;return}function a6(a,b){a=a|0;b=b|0;nla(a);f[a>>2]=9256;f[a+44>>2]=b;f[a+48>>2]=0;return}function b6(a,b){a=a|0;b=b|0;return (jja(b)|0)>>>0<(a+1|0)>>>0|0}function c6(a,b){a=a|0;b=b|0;if(Afa(a,b)|0)return f[(f[a+8>>2]|0)+(b<<2)>>2]|0;else{b=zb(4)|0;fJa(b);ub(b|0,5864,326)}return 0}function d6(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;while(1){if((c|0)==(d|0))break;a=b[c>>0]|0;b[f>>0]=a<<24>>24>-1?a:e;f=f+1|0;c=c+1|0}return d|0}function e6(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=CJa(Oqa(a)|0)|0;f[d>>2]=b;b=DJa(Oqa(a)|0)|0;f[b>>2]=c;return a|0}function f6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;gB(a,b);b=b+16|0}return}function g6(a,b){a=a|0;b=b|0;Gya(a);Wva(a+8|0,b);cJa(a+24|0);f[a+28>>2]=0;f[a+32>>2]=0;f[a+4>>2]=5;return}function h6(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xwa(a);f[a+24>>2]=b;f[a+28>>2]=c;f[a+32>>2]=d;return}function i6(a){a=a|0;$fa(a+48|0);Waa(a+36|0);wsa(a);return}function j6(a,b){a=a|0;b=b|0;var c=0;c=b+24|0;wk(a,b,b+28|0,wk(a,b,c,0,0)|0,c)|0;return}function k6(a,b){a=a|0;b=b|0;var c=0;c=b+12|0;wk(a,b,b+16|0,wk(a,b,c,0,0)|0,c)|0;return}function l6(a,b){a=a|0;b=b|0;if(hJa(f[a>>2]|0)|0){RW(f[a+8>>2]|0,b);return a|0}else Na(51333,51343,414,23227);return 0}function m6(a,b){a=a|0;b=b|0;Aqa(a,ura(f[b>>2]|0)|0);return}function n6(a,b){a=a|0;b=b|0;Aqa(a,vra(f[b>>2]|0)|0);return}function o6(a,b){a=a|0;b=b|0;Aqa(a,wra(f[b>>2]|0)|0);return}function p6(a,b){a=a|0;b=b|0;Iqa(a+16|0,pra(f[b>>2]|0)|0);return}function q6(a,b){a=a|0;b=b|0;Iqa(a+16|0,kra(f[b>>2]|0)|0);return}function r6(a,b){a=a|0;b=b|0;Iqa(a+16|0,lra(f[b>>2]|0)|0);return}function s6(a){a=a|0;var c=0,d=0;d=u;u=u+16|0;c=d;rHa(c);yz(c,a);u=d;return (b[c>>0]|0)!=0|0}function t6(a){a=a|0;var c=0,d=0,e=0,g=0;c=f[a+48>>2]|0;d=a+52|0;e=f[d>>2]|0;while(1){if((e|0)==(c|0))break;g=e+-4|0;f[d>>2]=g;e=g}b[a+45>>0]=0;return}function u6(a){a=a|0;f[a>>2]=7112;uoa(a+56|0);uoa(a+44|0);Uqa(a);return}function v6(a,b){a=a|0;b=b|0;var c=0;c=(Cn(a,f[b+28>>2]|0)|0)+2|0;return c+(Ska(a,f[b+32>>2]|0)|0)|0}function w6(a){a=a|0;RN(f[a+4>>2]|0);return}function x6(a,b){a=a|0;b=b|0;b=fE(a,b)|0;return b|0}function y6(a,b){a=a|0;b=b|0;EA(a,b+36|0);return}function z6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;kB(a,b);b=b+16|0}return}function A6(a,b){a=a|0;b=b|0;Bra(a,Vqa(f[b>>2]|0)|0);return}function B6(a,b,c){a=a|0;b=b|0;c=c|0;eja(b,s4(Nm(a)|0)|0,0)|0;eja(c,Nm(a)|0,0)|0;return}function C6(a,b){a=a|0;b=b|0;return (oU(a,b)|0)!=0|0}function D6(a){a=a|0;zS(a);XO(a+12|0);return}function E6(a,b){a=a|0;b=b|0;var c=0;if((b|0)<0)SZ();else{c=nV(b)|0;f[a+4>>2]=c;f[a>>2]=c;f[a+8>>2]=c+b;return}}function F6(a){a=a|0;QN(f[a+4>>2]|0);return}function G6(a){a=a|0;bqa(a);a=a+36|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function H6(a,b){a=a|0;b=b|0;lpa(a+16|0,Vqa(f[b>>2]|0)|0);return}function I6(a,b){a=a|0;b=b|0;Aqa(a,Era(f[b>>2]|0)|0);return}function J6(a,b){a=a|0;b=b|0;Aqa(a,Lra(f[b>>2]|0)|0);return}function K6(){var a=0;a=nV(28)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;Kra(a);return a|0}function L6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;qB(a,b);b=b+16|0}return}function M6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;lB(a,b);b=b+16|0}return}function N6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;mB(a,b);b=b+16|0}return}function O6(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;nB(a,b);b=b+16|0}return}function P6(a,b){a=a|0;b=b|0;Bra(a,fra(f[b>>2]|0)|0);return}function Q6(a,b){a=a|0;b=b|0;Iqa(a+16|0,ura(f[b>>2]|0)|0);return}function R6(a,b){a=a|0;b=b|0;Iqa(a+16|0,vra(f[b>>2]|0)|0);return}function S6(a,b){a=a|0;b=b|0;Iqa(a+16|0,wra(f[b>>2]|0)|0);return}function T6(a,b){a=a|0;b=b|0;b=b+36|0;mC(a+44|0,b);eC(a+16|0,b);return}function U6(a){a=a|0;_ja(a+40|0);a3(a+28|0);Rua(a);return}function V6(a){a=a|0;f[a>>2]=14616;t3(a+4|0);a=a+8|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function W6(a){a=a|0;f[a>>2]=14552;t3(a+4|0);a=a+8|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function X6(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;a=0;while(1){if((b|0)==(c|0))break;d=(f[b>>2]|0)+(a<<4)|0;e=d&-268435456;a=(e>>>24|e)^d;b=b+4|0}return a|0}function Y6(a,b){a=a|0;b=b|0;lpa(a+16|0,fra(f[b>>2]|0)|0);return}function Z6(){var a=0;f[18577]=0;f[18576]=17564;f[18578]=46;f[18579]=44;f[18580]=0;f[18581]=0;f[18582]=0;a=0;while(1){if((a|0)==3)break;f[74320+(a<<2)>>2]=0;a=a+1|0}return}function _6(a){a=a|0;XY(a);return}function $6(a){a=a|0;if(!a){a=zb(4)|0;f[a>>2]=0;vFa(a);ub(a|0,464,22)}else return Ob[f[(f[a>>2]|0)+24>>2]&255](a)|0;return 0}function a7(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;a=0;while(1){if((c|0)==(d|0))break;e=(b[c>>0]|0)+(a<<4)|0;f=e&-268435456;a=(f>>>24|f)^e;c=c+1|0}return a|0}function b7(a,b){a=a|0;b=b|0;LA(a,b+36|0);return}function c7(a,b){a=a|0;b=b|0;b=(Rra(f[b>>2]|0)|0)+8|0;$ca(a,f[b>>2]|0);return}function d7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;sB(a,b);b=b+16|0}return}function e7(a,b){a=a|0;b=b|0;Bra(a,gra(f[b>>2]|0)|0);return}function f7(a,b){a=a|0;b=b|0;Iqa(a+16|0,Era(f[b>>2]|0)|0);return}function g7(a,b){a=a|0;b=b|0;Iqa(a+16|0,Lra(f[b>>2]|0)|0);return}function h7(a){a=a|0;ula(a);f[a>>2]=7112;gua(a+44|0);gua(a+56|0);return}function i7(a,c,d){a=a|0;c=c|0;d=d|0;if(!((a|0)==0&(c|0)==0))do{d=d+-1|0;b[d>>0]=a&7|48;a=Bna(a|0,c|0,3)|0;c=J}while(!((a|0)==0&(c|0)==0));return d|0}function j7(a){a=a|0;var c=0,d=0;c=b[a+11>>0]|0;d=c<<24>>24<0;return $z(d?f[a>>2]|0:a,d?f[a+4>>2]|0:c&255)|0}function k7(a,b){a=a|0;b=b|0;lpa(a+16|0,gra(f[b>>2]|0)|0);return}function l7(a,b){a=a|0;b=b|0;Aqa(a,Xra(f[b>>2]|0)|0);return}function m7(a,b){a=a|0;b=b|0;Aqa(a,Qra(f[b>>2]|0)|0);return}function n7(a,b){a=a|0;b=b|0;Aqa(a,Rra(f[b>>2]|0)|0);return}function o7(a,b){a=a|0;b=b|0;Aqa(a,Sra(f[b>>2]|0)|0);return}function p7(a){a=a|0;E4(a+48|0);E4(a+36|0);E4(a+24|0);Rua(a);return}function q7(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[a+48>>2]|0;b=a+52|0;a=f[b>>2]|0;while(1){if((a|0)==(c|0))break;d=a+-4|0;f[b>>2]=d;a=d}return}function r7(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;zD(a,b);f[a+12>>2]=c;f[a+16>>2]=d;return}function s7(){var a=0;f[18571]=0;f[18570]=17524;b[74288]=46;b[74289]=44;f[18573]=0;f[18574]=0;f[18575]=0;a=0;while(1){if((a|0)==3)break;f[74292+(a<<2)>>2]=0;a=a+1|0}return}function t7(a){a=a|0;eZ(a);return}function u7(a,b){a=a|0;b=b|0;gP(a,34);b=UAa(b,1)|0;l$(a,voa(gKa(f[b>>2]|0)|0)|0);gP(a,34);return}function v7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;wB(a,b);b=b+16|0}return}function w7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;tB(a,b);b=b+16|0}return}function x7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;uB(a,b);b=b+16|0}return}function y7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;vB(a,b);b=b+16|0}return}function z7(a,b){a=a|0;b=b|0;Bra(a,pra(f[b>>2]|0)|0);return}function A7(a,b){a=a|0;b=b|0;Bra(a,kra(f[b>>2]|0)|0);return}function B7(a,b){a=a|0;b=b|0;Bra(a,lra(f[b>>2]|0)|0);return}function C7(a,b){a=a|0;b=b|0;return eA(a,b,uHa(b)|0)|0}function D7(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;d=b+4|0;c=b;PDa(d,0);PDa(c,0);d5(a,f[d>>2]|0,f[c>>2]|0);u=b;return}function E7(){var a=0,b=0;b=u;u=u+16|0;a=b;PDa(a,0);u=b;return f[a>>2]|0}function F7(a,b){a=a|0;b=b|0;Vqa(f[b>>2]|0)|0;kva(a);return}function G7(a,b){a=a|0;b=b|0;lpa(a+16|0,pra(f[b>>2]|0)|0);return}function H7(a,b){a=a|0;b=b|0;lpa(a+16|0,kra(f[b>>2]|0)|0);return}function I7(a,b){a=a|0;b=b|0;lpa(a+16|0,lra(f[b>>2]|0)|0);return}function J7(a,b){a=a|0;b=b|0;Aqa(a,Yra(f[b>>2]|0)|0);return}function K7(a,b){a=a|0;b=b|0;Aqa(a,Zra(f[b>>2]|0)|0);return}function L7(a,b){a=a|0;b=b|0;Aqa(a,_ra(f[b>>2]|0)|0);return}function M7(a,b){a=a|0;b=b|0;Aqa(a,jsa(f[b>>2]|0)|0);return}function N7(a,b){a=a|0;b=b|0;Aqa(a,ksa(f[b>>2]|0)|0);return}function O7(a){a=a|0;var b=0,c=0,d=0;b=u;u=u+16|0;c=b+4|0;d=b;f[d>>2]=f[18946];f[c>>2]=f[d>>2];Qwa(a,c);u=b;return}function P7(a,c){a=a|0;c=c|0;Pm(a,c);if(nJa(f[c>>2]|0)|0)b[a+26>>0]=1;return BP(a)|0}function Q7(a){a=a|0;E4(a+48|0);E4(a+36|0);HCa(f[a+24>>2]|0);Rua(a);return}function R7(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+20|0;e=f[d>>2]|0;a=(f[a+16>>2]|0)-e|0;a=a>>>0>c>>>0?c:a;rq(e|0,b|0,a|0)|0;f[d>>2]=(f[d>>2]|0)+a;return c|0}function S7(a,b){a=a|0;b=b|0;return (WS(a,b)|0)!=0|0}function T7(a){a=a|0;f3(a);return}function U7(a){a=a|0;yN(a,f[a+4>>2]|0);return}function V7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;a=f[b>>2]|0;if(a>>>0<128)a=f[13080+(a<<2)>>2]|0;f[b>>2]=a;b=b+4|0}return c|0}function W7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;a=f[b>>2]|0;if(a>>>0<128)a=f[11544+(a<<2)>>2]|0;f[b>>2]=a;b=b+4|0}return c|0}function X7(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)>256){gBa();b=18020}else{_Aa();b=18016}f[a>>2]=c;f[a+4>>2]=b;return}function Y7(a,c){a=a|0;c=c|0;var d=0;b[a>>0]=1;b[a+1>>0]=1;d=a+4|0;f[d>>2]=0;f[d+4>>2]=0;f[d+8>>2]=0;f[d+12>>2]=0;b[d+16>>0]=0;f[a+24>>2]=c;return}function Z7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;EB(a,b);b=b+16|0}return}function _7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;FB(a,b);b=b+16|0}return}function $7(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;BB(a,b);b=b+16|0}return}function a8(a,b){a=a|0;b=b|0;b=(Lra(f[b>>2]|0)|0)+8|0;ns(a,f[b>>2]|0);return}function b8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Xra(f[b>>2]|0)|0);return}function c8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Qra(f[b>>2]|0)|0);return}function d8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Rra(f[b>>2]|0)|0);return}function e8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Sra(f[b>>2]|0)|0);return}function f8(a,b){a=a|0;b=b|0;gA(a,b,uHa(b)|0);return}function g8(a,b){a=a|0;b=b|0;fra(f[b>>2]|0)|0;kva(a);return}function h8(a,b){a=a|0;b=b|0;Aqa(a,rsa(f[b>>2]|0)|0);return}function i8(a,b){a=a|0;b=b|0;Aqa(a,lsa(f[b>>2]|0)|0);return}function j8(a,b){a=a|0;b=b|0;Aqa(a,msa(f[b>>2]|0)|0);return}function k8(a,b){a=a|0;b=b|0;Aqa(a,nsa(f[b>>2]|0)|0);return}function l8(a,b){a=a|0;b=b|0;Aqa(a,ssa(f[b>>2]|0)|0);return}function m8(a,b){a=a|0;b=b|0;Bra(a,ura(f[b>>2]|0)|0);return}function n8(a,b){a=a|0;b=b|0;Bra(a,vra(f[b>>2]|0)|0);return}function o8(a,b){a=a|0;b=b|0;Bra(a,wra(f[b>>2]|0)|0);return}function p8(a){a=a|0;a=a>>>1|a;a=a>>>2|a;a=a>>>4|a;a=a>>>8|a;a=a>>>16|a;if(!a)a=32;else{a=40279+((Y(a,130329821)|0)>>>27)|0;a=h[a>>0]|0}return a|0}function q8(a){a=+a;var b=0;b=(n[s>>2]=a,f[s>>2]|0);if((b&2130706432)>>>0<=1249902592){b=(b|0)<0;a=(b?8388608.0:-8388608.0)+((b?-8388608.0:8388608.0)+a);if(a==0.0)a=b?-0.0:0.0}return +a}function r8(a){a=a|0;E4(a+44|0);Cta(a+32|0);Rua(a);return}function s8(a){a=a|0;var b=0;b=f[18633]|0;do{f[b>>2]=0;b=(f[18633]|0)+4|0;f[18633]=b;a=a+-1|0}while((a|0)!=0);return}function t8(a,b){a=a|0;b=b|0;lpa(a+16|0,ura(f[b>>2]|0)|0);return}function u8(a,b){a=a|0;b=b|0;lpa(a+16|0,vra(f[b>>2]|0)|0);return}function v8(a,b){a=a|0;b=b|0;lpa(a+16|0,wra(f[b>>2]|0)|0);return}function w8(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;GB(a,b);b=b+16|0}return}function x8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Yra(f[b>>2]|0)|0);return}function y8(a,b){a=a|0;b=b|0;Iqa(a+16|0,Zra(f[b>>2]|0)|0);return}function z8(a,b){a=a|0;b=b|0;Iqa(a+16|0,_ra(f[b>>2]|0)|0);return}function A8(a,b){a=a|0;b=b|0;Iqa(a+16|0,jsa(f[b>>2]|0)|0);return}function B8(a,b){a=a|0;b=b|0;Iqa(a+16|0,ksa(f[b>>2]|0)|0);return}function C8(a,b){a=a|0;b=b|0;var c=0;c=(Ska(a,f[b+12>>2]|0)|0)+1|0;return c+(Ska(a,f[b+16>>2]|0)|0)|0}function D8(a){a=a|0;var b=0;b=f[a+16>>2]|0;if((b|0)!=(a|0)){if(b|0)Lb[f[(f[b>>2]|0)+20>>2]&511](b)}else Lb[f[(f[b>>2]|0)+16>>2]&511](b);return}function E8(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+11>>0]=1;_ma(a,1,45)|0;SBa(a+1|0,0);return}function F8(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;PDa(b,Q5(Vta()|0,a)|0);u=c;return f[b>>2]|0}function G8(a,b){a=a|0;b=b|0;gra(f[b>>2]|0)|0;kva(a);return}function H8(a,b){a=a|0;b=b|0;$w(a,Vqa(f[b>>2]|0)|0);return}function I8(a,b){a=a|0;b=b|0;Aqa(a,tsa(f[b>>2]|0)|0);return}function J8(a,b){a=a|0;b=b|0;Bra(a,Era(f[b>>2]|0)|0);return}function K8(a,b){a=a|0;b=b|0;Bra(a,Lra(f[b>>2]|0)|0);return}function L8(a){a=a|0;f[a>>2]=7256;D4(a+44|0);Uqa(a);return}function M8(a,b){a=a|0;b=b|0;lpa(a+16|0,Era(f[b>>2]|0)|0);return}function N8(a,b){a=a|0;b=b|0;lpa(a+16|0,Lra(f[b>>2]|0)|0);return}function O8(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;JB(a,b);b=b+16|0}return}function P8(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;KB(a,b);b=b+16|0}return}function Q8(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;LB(a,b);b=b+16|0}return}function R8(a,b){a=a|0;b=b|0;Iqa(a+16|0,rsa(f[b>>2]|0)|0);return}function S8(a,b){a=a|0;b=b|0;Iqa(a+16|0,lsa(f[b>>2]|0)|0);return}function T8(a,b){a=a|0;b=b|0;Iqa(a+16|0,msa(f[b>>2]|0)|0);return}function U8(a,b){a=a|0;b=b|0;Iqa(a+16|0,nsa(f[b>>2]|0)|0);return}function V8(a,b){a=a|0;b=b|0;Iqa(a+16|0,ssa(f[b>>2]|0)|0);return}function W8(a){a=a|0;var b=0;b=nV(16)|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;f[b+12>>2]=0;iJa(b);f[a>>2]=b;return}function X8(a){a=a|0;var b=0;while(1){if(!a)break;b=f[a>>2]|0;$Ja(a);a=b}return}function Y8(a,b){a=a|0;b=b|0;pra(f[b>>2]|0)|0;kva(a);return}function Z8(a,b){a=a|0;b=b|0;kra(f[b>>2]|0)|0;kva(a);return}function _8(a,b){a=a|0;b=b|0;lra(f[b>>2]|0)|0;kva(a);return}function $8(a,b){a=a|0;b=b|0;GR(a,fra(f[b>>2]|0)|0);return}function a9(a,b){a=a|0;b=b|0;return hF(a,b)|0}function b9(a,b){a=a|0;b=b|0;Aqa(a,Asa(f[b>>2]|0)|0);return}function c9(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;QB(a,b);b=b+16|0}return}function d9(a,b){a=a|0;b=b|0;Iqa(a+16|0,tsa(f[b>>2]|0)|0);return}function e9(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;gua(a+12|0);gua(a+24|0);f[a+36>>2]=0;return}function f9(a){a=a|0;var b=0;if(f[a+68>>2]|0){b=f[a+116>>2]|0;a=a+112|0;if(b|0)f[b+112>>2]=f[a>>2];a=f[a>>2]|0;f[((a|0)==0?10644:a+116|0)>>2]=b}return}function g9(a,b){a=a|0;b=b|0;b=b+8|0;a=EN(a+24|0,b)|0;f[b>>2]=f[a>>2];return}function h9(a){a=+a;var b=0,c=0;c=u;u=u+16|0;b=c;PDa(b,Jua(Vta()|0,a)|0);u=c;return f[b>>2]|0}function i9(a,b){a=a|0;b=b|0;var c=0;if((a|0)!=0?(c=Iza(a)|0,(c|0)!=0):0)a=(f[c+8>>2]|0)==(b|0)?c:0;else a=0;return a|0}function j9(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Tua(a)|0;f[a+8>>2]=b;f[a+12>>2]=c;f[a+16>>2]=d;qO(a);return a|0}function k9(a,b){a=a|0;b=b|0;Hr(a,fra(f[b>>2]|0)|0);return}function l9(a,b){a=a|0;b=b|0;Bra(a,Xra(f[b>>2]|0)|0);return}function m9(a,b){a=a|0;b=b|0;Bra(a,Qra(f[b>>2]|0)|0);return}function n9(a,b){a=a|0;b=b|0;Bra(a,Rra(f[b>>2]|0)|0);return}function o9(a,b){a=a|0;b=b|0;Bra(a,Sra(f[b>>2]|0)|0);return}function p9(a){a=a|0;var b=0;fla(a);f[a>>2]=7364;a=a+48|0;b=a+36|0;do{f[a>>2]=0;a=a+4|0}while((a|0)<(b|0));return}function q9(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;aa(10)}function r9(a,b){a=a|0;b=b|0;ura(f[b>>2]|0)|0;kva(a);return}function s9(a,b){a=a|0;b=b|0;vra(f[b>>2]|0)|0;kva(a);return}function t9(a,b){a=a|0;b=b|0;wra(f[b>>2]|0)|0;kva(a);return}function u9(a,b){a=a|0;b=b|0;lpa(a+16|0,Xra(f[b>>2]|0)|0);return}function v9(a,b){a=a|0;b=b|0;lpa(a+16|0,Qra(f[b>>2]|0)|0);return}function w9(a,b){a=a|0;b=b|0;lpa(a+16|0,Rra(f[b>>2]|0)|0);return}function x9(a,b){a=a|0;b=b|0;lpa(a+16|0,Sra(f[b>>2]|0)|0);return}function y9(a){a=a|0;var b=0;switch(a|0){case 0:{Ka();break}case 3:case 1:{b=4;break}case 2:{b=8;break}case 4:{b=8;break}default:Ka()}return b|0}function z9(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;f[a+104>>2]=b;c=f[a+8>>2]|0;d=f[a+4>>2]|0;e=c-d|0;f[a+108>>2]=e;f[a+100>>2]=(b|0)!=0&(e|0)>(b|0)?d+b|0:c;return}function A9(a,b){a=a|0;b=b|0;f[a>>2]=0;f[a+4>>2]=0;b=f[b>>2]|0;f[a+8>>2]=0;f[a+12>>2]=b;return}function B9(a,c){a=a|0;c=c|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+8+3>>0]=1;$va(a,1,45);FCa(a+4|0,0);return}function C9(a,b){a=a|0;b=b|0;ys(a,fra(f[b>>2]|0)|0);return}function D9(a,b){a=a|0;b=b|0;b=(nsa(f[b>>2]|0)|0)+8|0;jba(a,f[b>>2]|0);return}function E9(a,b){a=a|0;b=b|0;Bra(a,Yra(f[b>>2]|0)|0);return}function F9(a,b){a=a|0;b=b|0;Bra(a,Zra(f[b>>2]|0)|0);return}function G9(a,b){a=a|0;b=b|0;Bra(a,_ra(f[b>>2]|0)|0);return}function H9(a,b){a=a|0;b=b|0;Bra(a,jsa(f[b>>2]|0)|0);return}function I9(a,b){a=a|0;b=b|0;Bra(a,ksa(f[b>>2]|0)|0);return}function J9(a,b){a=a|0;b=b|0;Iqa(a+16|0,Asa(f[b>>2]|0)|0);return}function K9(a){a=a|0;a=(Sra(a)|0)+16|0;return t4(csa((_ra(f[a>>2]|0)|0)+8|0)|0)|0}function L9(a,b){a=a|0;b=b|0;var c=0;c=a+64|0;if((f[c>>2]|0)==0?(b=qF(b,58843)|0,f[c>>2]=b,(b|0)!=0):0)f[a+88>>2]=16;else a=0;return a|0}function M9(a,b){a=a|0;b=b|0;var c=0;c=5381;while(1){if(!a)break;c=c*33^a&255;a=a>>>8}while(1){if(!b)break;a=c*33^b&255;b=b>>>8;c=a}return c|0}function N9(a,b){a=a|0;b=b|0;d_(a,jsa(f[b>>2]|0)|0);return}function O9(a,b){a=a|0;b=b|0;Era(f[b>>2]|0)|0;kva(a);return}function P9(a,b){a=a|0;b=b|0;Lra(f[b>>2]|0)|0;kva(a);return}function Q9(a,b){a=a|0;b=b|0;lpa(a+16|0,Yra(f[b>>2]|0)|0);return}function R9(a,b){a=a|0;b=b|0;lpa(a+16|0,Zra(f[b>>2]|0)|0);return}function S9(a,b){a=a|0;b=b|0;lpa(a+16|0,_ra(f[b>>2]|0)|0);return}function T9(a,b){a=a|0;b=b|0;lpa(a+16|0,jsa(f[b>>2]|0)|0);return}function U9(a,b){a=a|0;b=b|0;lpa(a+16|0,ksa(f[b>>2]|0)|0);return}function V9(a,b){a=a|0;b=b|0;gra(f[b>>2]|0)|0;rza(a);return}function W9(a,c){a=a|0;c=c|0;c=(Zra(f[c>>2]|0)|0)+20|0;oga(a,b[c>>0]|0);return}function X9(a,b){a=a|0;b=b|0;Cq(a,b);return}function Y9(a){a=a|0;var b=0;a=nV(56)|0;y=0;ia(352,a|0);b=y;y=0;if(b&1){b=Pa()|0;$Ja(a);$a(b|0)}else return a|0;return 0}function Z9(a,b){a=a|0;b=b|0;f[a>>2]=b;gua(a+4|0);return}function _9(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((f[a+4>>2]|0)==(b|0)?(d=a+28|0,(f[d>>2]|0)!=1):0)f[d>>2]=c;return}function $9(a,b){a=a|0;b=b|0;Bra(a,rsa(f[b>>2]|0)|0);return}function aaa(a,b){a=a|0;b=b|0;Bra(a,lsa(f[b>>2]|0)|0);return}function baa(a,b){a=a|0;b=b|0;Bra(a,msa(f[b>>2]|0)|0);return}function caa(a,b){a=a|0;b=b|0;Bra(a,nsa(f[b>>2]|0)|0);return}function daa(a,b){a=a|0;b=b|0;Bra(a,ssa(f[b>>2]|0)|0);return}function eaa(a,b,c){a=a|0;b=b|0;c=c|0;$g(c);cj(c);return}function faa(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=b+4|0;if((f[d>>2]|0)!=(c|0)){f[d>>2]=c;wm(a,b)}return}function gaa(a){a=a|0;var b=0,c=0;c=a+92|0;b=f[c>>2]|0;f[c>>2]=0;if((b|0)==((f[a+4>>2]|0)-(f[a>>2]|0)>>2|0))return;else Na(28444,28384,188,28466)}function haa(a,b){a=a|0;b=b|0;var c=0;c=nV(20)|0;Sqa(c,b);WN(a,c);return}function iaa(a){a=a|0;gKa(a)|0;if(hJa(f[a>>2]|0)|0){a=UAa(a,0)|0;a=jha(f[a>>2]|0,f[18943]|0)|0}else a=0;return a|0}function jaa(a){a=a|0;gKa(a)|0;if(hJa(f[a>>2]|0)|0){a=UAa(a,0)|0;a=jha(f[a>>2]|0,f[18942]|0)|0}else a=0;return a|0}function kaa(a,b){a=a|0;b=b|0;a=osa(a)|0;if(b|0){AW(a+12|0,b);Do(a)}return a|0}function laa(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;WB(a,b);b=b+16|0}return}function maa(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;YB(a,b);b=b+16|0}return}function naa(a,b){a=a|0;b=b|0;lpa(a+16|0,rsa(f[b>>2]|0)|0);return}function oaa(a,b){a=a|0;b=b|0;lpa(a+16|0,lsa(f[b>>2]|0)|0);return}function paa(a,b){a=a|0;b=b|0;lpa(a+16|0,msa(f[b>>2]|0)|0);return}function qaa(a,b){a=a|0;b=b|0;lpa(a+16|0,nsa(f[b>>2]|0)|0);return}function raa(a,b){a=a|0;b=b|0;lpa(a+16|0,ssa(f[b>>2]|0)|0);return}function saa(a,c,e){a=a|0;c=c|0;e=e|0;a=a+c|0;if(fCa(a)|0)d[a>>1]=e;else{b[a>>0]=e;b[a+1>>0]=e>>8}return}function taa(){TIa();EIa();BIa();zIa();xIa();eJa();_Ia();ZIa();return}function uaa(a){a=a|0;OQ(a+4|0);return}function vaa(a){a=a|0;var b=0;a=f[a+8>>2]|0;if(a){b=psa(a)|0;a=eIa()|0;if(b)psa(b)|0}else a=1;return a|0}function waa(a){a=a|0;var b=0;a=nV(56)|0;y=0;ia(343,a|0);b=y;y=0;if(b&1){b=Pa()|0;$Ja(a);$a(b|0)}else return a|0;return 0}function xaa(a,b){a=a|0;b=b|0;Bra(a,tsa(f[b>>2]|0)|0);return}function yaa(a,b){a=a|0;b=b|0;Wka(a);f[a>>2]=9184;f[a+44>>2]=b;return}function zaa(a,b){a=a|0;b=b|0;var c=0;c=0;while(1){if((c|0)==(b|0))break;Vea(a,72117)|0;c=c+1|0}return a|0}function Aaa(a,b,c){a=a|0;b=b|0;c=c|0;c3(a,40)|0;Vea(a,b)|0;return a|0}function Baa(a,b){a=+a;b=+b;var c=0;c=(n[s>>2]=a,f[s>>2]|0);return +(f[s>>2]=(n[s>>2]=b,f[s>>2]|0)&-2147483648|c&2147483647,+n[s>>2])}function Caa(a){a=a|0;var b=0,c=0;c=u;u=u+16|0;b=c;if((yL(a)|0)==0?(Rb[f[a+32>>2]&127](a,b,1)|0)==1:0)a=h[b>>0]|0;else a=-1;u=c;return a|0}function Daa(a){a=a|0;V_(a);return}function Eaa(a){a=a|0;Gn(a,uHa(73504)|0);return}function Faa(a){a=a|0;var b=0,c=0;c=f[(f[a+12>>2]|0)+4>>2]|0;b=a+4|0;if((c|0)==5)a=5;else{a=pJa(f[b>>2]|0)|0;a=a?c:0}f[b>>2]=a;return}function Gaa(a,b,c){a=a|0;b=b|0;c=c|0;a=mua(f[a>>2]|0)|0;f[a+8>>2]=f[b>>2];f[a+12>>2]=c;xza(a);return a|0}function Haa(a,b){a=a|0;b=b|0;Xra(f[b>>2]|0)|0;kva(a);return}function Iaa(a,b){a=a|0;b=b|0;Qra(f[b>>2]|0)|0;kva(a);return}function Jaa(a,b){a=a|0;b=b|0;Rra(f[b>>2]|0)|0;kva(a);return}function Kaa(a,b){a=a|0;b=b|0;Sra(f[b>>2]|0)|0;kva(a);return}function Laa(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;ZB(a,b);b=b+16|0}return}function Maa(a,b){a=a|0;b=b|0;lpa(a+16|0,tsa(f[b>>2]|0)|0);return}function Naa(a){a=a|0;var b=0;b=nV(48)|0;s3(b,f[a+44>>2]|0);return b|0}function Oaa(a){a=a|0;f[a>>2]=6372;return}function Paa(a){a=a|0;gKa(a)|0;if(hJa(f[a>>2]|0)|0){a=UAa(a,0)|0;a=jha(f[a>>2]|0,f[18936]|0)|0}else a=0;return a|0}function Qaa(a,b){a=a|0;b=b|0;b=(nsa(f[b>>2]|0)|0)+8|0;GS(a,f[b>>2]|0);return}function Raa(a,c){a=a|0;c=c|0;c=(lsa(f[c>>2]|0)|0)+20|0;Qga(a,b[c>>0]|0);return}function Saa(a,b){a=a|0;b=b|0;Fs(a,Vqa(f[b>>2]|0)|0);return}function Taa(a){a=a|0;switch(a|0){case 41:case 40:case 34:case 33:case 32:case 27:case 25:case 16:case 15:case 9:case 8:case 7:case 2:case 0:{a=1;break}default:a=0}return a|0}function Uaa(a,b){a=a|0;b=b|0;var c=0;c=f[a>>2]|0;if(((f[a+4>>2]|0)-c|0)>>>0>b>>>0)return c+b|0;else RZ();return 0}function Vaa(a){a=a|0;q$(a);return}function Waa(a){a=a|0;s$(a);return}function Xaa(a,b){a=a|0;b=b|0;Yra(f[b>>2]|0)|0;kva(a);return}function Yaa(a,b){a=a|0;b=b|0;Zra(f[b>>2]|0)|0;kva(a);return}function Zaa(a,b){a=a|0;b=b|0;_ra(f[b>>2]|0)|0;kva(a);return}function _aa(a,b){a=a|0;b=b|0;jsa(f[b>>2]|0)|0;kva(a);return}function $aa(a,b){a=a|0;b=b|0;ksa(f[b>>2]|0)|0;kva(a);return}function aba(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;eC(a,b);b=b+16|0}return}function bba(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;fC(a,b);b=b+16|0}return}function cba(a,b){a=a|0;b=b|0;b=ssa(f[b>>2]|0)|0;Y2(f[a+44>>2]|0,b);return}function dba(a,b){a=a|0;b=b|0;Bra(a,Asa(f[b>>2]|0)|0);return}function eba(a,b){a=a|0;b=b|0;bpa(f[a+24>>2]|0,b);return}function fba(a,b){a=a|0;b=b|0;var c=0;c=f[(f[b+8>>2]|0)+4>>2]|0;np(a,rCa(c)|0|(c|0)==5,b);return}function gba(a){a=a|0;return wna(a+4|0)|0}function hba(a,b){a=a|0;b=b|0;lpa(a+16|0,Asa(f[b>>2]|0)|0);return}function iba(a,b){a=a|0;b=b|0;b=(nsa(f[b>>2]|0)|0)+8|0;w2(a,f[b>>2]|0);return}function jba(a,b){a=a|0;b=b|0;if(!(rCa(f[b+4>>2]|0)|0))jva(f[a>>2]|0,b)|0;return}function kba(a){a=a|0;Qua(a+12|0);W3(a);return}function lba(a){a=a|0;G$(a);return}function mba(a,b){a=a|0;b=b|0;rsa(f[b>>2]|0)|0;kva(a);return}function nba(a,b){a=a|0;b=b|0;lsa(f[b>>2]|0)|0;kva(a);return}function oba(a,b){a=a|0;b=b|0;msa(f[b>>2]|0)|0;kva(a);return}function pba(a,b){a=a|0;b=b|0;nsa(f[b>>2]|0)|0;kva(a);return}function qba(a,b){a=a|0;b=b|0;ssa(f[b>>2]|0)|0;kva(a);return}function rba(a,b,c){a=a|0;b=b|0;c=c|0;while(1){if((b|0)==(c|0))break;hC(a,b);b=b+16|0}return}function sba(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[a+(b<<2)>>2]=0;b=b+1|0}f[a+32>>2]=0;return}function tba(a){a=a|0;Mla(a);f[a>>2]=9472;kia(a+44|0);f[a+104>>2]=0;f[a+108>>2]=0;f[a+112>>2]=0;return}function uba(a){a=a|0;var b=0,c=0;a=UCa(f[a>>2]|0)|0;c=a+8|0;b=f[c>>2]|0;f[c>>2]=b+-1;if((b+-1|0)<0)$Ja(a);return}function vba(a,b){a=a|0;b=b|0;hE(a,ura(f[b>>2]|0)|0);return}function wba(a,b){a=a|0;b=b|0;hE(a,vra(f[b>>2]|0)|0);return}function xba(a,b){a=a|0;b=b|0;Iq(a,fra(f[b>>2]|0)|0);return}function yba(a,b){a=a|0;b=b|0;hma(a,Vqa(f[b>>2]|0)|0);return}function zba(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(c|0){d=a;while(1){c=c+-1|0;f[d>>2]=f[b>>2];if(!c)break;else{b=b+4|0;d=d+4|0}}}return a|0}function Aba(a,c){a=a|0;c=c|0;var d=0;a=vIa(a)|0;d=iJ(a)|0;if(d>>>0<1024){rq(c|0,a|0,d+1|0)|0;a=0}else{rq(c|0,a|0,1023)|0;b[c+1023>>0]=0;a=34}return a|0}function Bba(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;g=u;u=u+16|0;e=g|0;bi(a,b,c,d,e)|0;u=g;return (J=f[e+4>>2]|0,f[e>>2]|0)|0}function Cba(a,b,c){a=a|0;b=b|0;c=c|0;Xwa(a);f[a+24>>2]=b;f[a+28>>2]=c;return}function Dba(a){a=a|0;var b=0;b=a+4|0;j0(f[b>>2]|0);f[a+8>>2]=0;f[a>>2]=b;f[b>>2]=0;return}function Eba(a){a=a|0;UP(f[a+4>>2]|0);return}function Fba(a){a=a|0;r$(a);return}function Gba(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=a;f[d>>2]=0;f[d+4>>2]=0;d=a+8|0;f[d>>2]=-1;f[d+4>>2]=-1;return}function Hba(a,b){a=a|0;b=b|0;tsa(f[b>>2]|0)|0;kva(a);return}function Iba(a){a=a|0;var b=0;f[a>>2]=6124;b=a+4|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;f[b+(a<<2)>>2]=0;a=a+1|0}return}function Jba(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Y(d>>>0<c>>>0?d:c,a)|0;d=a+(c>>>0<d>>>0?d:c)|0;return (1<<(d&31)&f[b+(d>>>5<<2)>>2]|0)!=0|0}function Kba(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return bc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Lba(a,b){a=a|0;b=b|0;var c=0;a=a+8|0;c=f[a>>2]|0;Kz(c|0,0,b*12|0)|0;f[a>>2]=c+(b*12|0);return}function Mba(a,b,c){a=a|0;b=b|0;c=c|0;a=ota(f[a>>2]|0)|0;f[a+8>>2]=b;f[a+12>>2]=c;_la(a,1);return a|0}function Nba(a,b){a=a|0;b=b|0;by(a,wra(f[b>>2]|0)|0);return}function Oba(a,b){a=a|0;b=b|0;Vqa(f[b>>2]|0)|0;kla(a);return}function Pba(a,b){a=a|0;b=b|0;Ns(a,Xra(f[b>>2]|0)|0);return}function Qba(a){a=a|0;k0(a);return}function Rba(a){a=a|0;var b=0,c=0;ZW(a);b=a+24|0;if(f[b>>2]|0?(c=f[b>>2]|0,c|0):0){Rba(c);$Ja(c)}E4(a);return}function Sba(a,b){a=a|0;b=b|0;var c=0;c=f[a+40>>2]|0;if((f[a+44>>2]|0)-c>>2>>>0>b>>>0)a=pJa(f[c+(b<<2)>>2]|0)|0;else a=0;return a|0}function Tba(a,b){a=a|0;b=b|0;var c=0,d=0;d=a+12|0;c=f[d>>2]|0;Cg(a,b);if((f[d>>2]|0)==(c|0))l$(a,24628);return}function Uba(a,b){a=a|0;b=b|0;if(hJa(f[a>>2]|0)|0)return bga(f[a+8>>2]|0,b)|0;else Na(51333,51343,409,72570);return 0}function Vba(a,b){a=a|0;b=b|0;Asa(f[b>>2]|0)|0;kva(a);return}function Wba(a,b){a=a|0;b=b|0;Bs(a,fra(f[b>>2]|0)|0);return}function Xba(a){a=a|0;E4(a+12|0);zta(a);return}function Yba(a){a=a|0;w0(a);return}function Zba(a){a=a|0;var b=0;b=a+8|0;if(!((f[b>>2]|0)!=0?(Fva(b)|0)!=-1:0))Lb[f[(f[a>>2]|0)+16>>2]&511](a);return}function _ba(a){a=a|0;var c=0;Iba(a);f[a>>2]=8816;b[a+16>>0]=0;c=a+20|0;f[c>>2]=0;f[c+4>>2]=0;f[c+8>>2]=0;f[c+12>>2]=0;n[a+36>>2]=1.0;return}function $ba(a,b){a=a|0;b=b|0;pra(f[b>>2]|0)|0;Ssa(a);return}function aca(a){a=a|0;ly(a);wc(a);ei(a);return}function bca(a){a=a|0;var b=0;while(1){b=f[a>>2]|0;if(b|0){a=b;continue}b=f[a+4>>2]|0;if(!b)break;else a=b}return a|0}function cca(a,b){a=a|0;b=b|0;Hn(a,pra(f[b>>2]|0)|0);return}function dca(a,b){a=a|0;b=b|0;BK(a,jsa(f[b>>2]|0)|0);return}function eca(a,b){a=a|0;b=b|0;Mxa(Vqa(f[b>>2]|0)|0);return}function fca(a,b){a=a|0;b=b|0;b=b+8|0;if(pJa(f[b>>2]|0)|0)WU(a+80|0,b);return}function gca(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((f[a>>2]|0)==(b|0)?(f[a+4>>2]|0)==(c|0):0)b=(f[a+8>>2]|0)==(d|0);else b=0;return b|0}function hca(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;f[a+4>>2]=-1;Ot(a+8|0,c,f[b>>2]|0);return}function ica(a,c){a=a|0;c=c|0;b[a>>0]=1;Wva(a+4|0,c);rJa(a+20|0);f[a+28>>2]=-1;f[a+32>>2]=-1;f[a+36>>2]=0;return}function jca(a){a=a|0;if((!(dga(a)|0)?(f[a+48>>2]|0)==0:0)?(b[a+26>>0]|0)==0:0)a=(b[a+78>>0]|0)!=0;else a=1;return a|0}function kca(a,c){a=a|0;c=c|0;f[a>>2]=c;f[a+4>>2]=c+144;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;Tqa(a+20|0);b[a+36>>0]=0;return}function lca(a){a=a|0;mia(a+4|0);return}function mca(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b;d=f[e+4>>2]|0;c=a;f[c>>2]=f[e>>2];f[c+4>>2]=d;eK(a+8|0,b+8|0);return}function nca(a,b){a=a|0;b=b|0;FE(a,pra(f[b>>2]|0)|0);return}function oca(a,b){a=a|0;b=b|0;kra(f[b>>2]|0)|0;kla(a);return}function pca(a,b){a=a|0;b=b|0;lra(f[b>>2]|0)|0;kla(a);return}function qca(a,b){a=a|0;b=b|0;lp(a,pra(f[b>>2]|0)|0);return}function rca(a,b){a=a|0;b=b|0;FF(a,kra(f[b>>2]|0)|0);return}function sca(a,b){a=a|0;b=b|0;dx(a,lra(f[b>>2]|0)|0);return}function tca(a,b){a=a|0;b=b|0;TC(a,b+8|0);Qu(a,b);return}function uca(a,b){a=a|0;b=b|0;nt(a,pra(f[b>>2]|0)|0);return}function vca(a,b){a=a|0;b=b|0;_z(a,gra(f[b>>2]|0)|0);return}function wca(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;ava(a);return}function xca(a,b){a=a|0;b=b|0;c3(a,40)|0;Vea(a,b)|0;return a|0}function yca(a,b){a=a|0;b=b|0;b=gKa(f[b+16>>2]|0)|0;return (((tJa(a)|0)^1)<<31>>31)+b|0}function zca(a){a=a|0;K0(a);return}function Aca(a){a=a|0;M0(a);return}function Bca(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==2){b=b+8|0;Ysa(a,f[b>>2]|0,f[b+4>>2]|0);f[a>>2]=4;return}else Na(39935,39045,36,39957)}function Cca(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return JU(a,JU(a,b,c)|0,d)|0}function Dca(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8780;return}function Eca(a){a=a|0;var c=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+12>>0]=0;a=a+16|0;c=a+76|0;do{f[a>>2]=0;a=a+4|0}while((a|0)<(c|0));return}function Fca(){var a=0,b=0;b=u;u=u+16|0;a=b;PDa(a,DAa(Vta()|0)|0);u=b;return f[a>>2]|0}function Gca(a,b){a=a|0;b=b|0;fsa(a,pra(f[b>>2]|0)|0);return}function Hca(a,b){a=a|0;b=b|0;oya(fra(f[b>>2]|0)|0);return}function Ica(a){a=a|0;if(!(((f[(f[a+16>>2]|0)+4>>2]|0)!=5?(f[(f[a+20>>2]|0)+4>>2]|0)!=5:0)?(f[(f[a+24>>2]|0)+4>>2]|0)!=5:0))f[a+4>>2]=5;return}function Jca(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Y(c,b)|0;a=Lv(a,e,d)|0;if((a|0)==(e|0))a=(b|0)==0?0:c;else a=(a>>>0)/(b>>>0)|0;return a|0}function Kca(a){a=a|0;Xwa(a);gua(a+24|0);cJa(a+36|0);return}function Lca(a){a=a|0;T0(a);return}function Mca(a,b){a=a|0;b=b|0;wra(f[b>>2]|0)|0;kla(a);return}function Nca(a,b){a=a|0;b=b|0;d_(a,ksa(f[b>>2]|0)|0);return}function Oca(a){a=a|0;iha(a);f[a>>2]=8e3;f[a+44>>2]=0;f[a+48>>2]=0;f[a+52>>2]=0;return}function Pca(a,c,d){a=a|0;c=c|0;d=d|0;f[a>>2]=c;f[a+4>>2]=d;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;b[a+24>>0]=0;return}function Qca(a,b){a=a|0;b=b|0;return vr(a,b)|0}function Rca(a,b){a=a|0;b=b|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;f[a+(b<<2)>>2]=0;b=b+1|0}return}function Sca(a,b){a=a|0;b=b|0;xA(a,b+36|0);return}function Tca(a,b){a=a|0;b=b|0;Wy(a,Era(f[b>>2]|0)|0);return}function Uca(a,b){a=a|0;b=b|0;Xu(a,pra(f[b>>2]|0)|0);return}function Vca(a,b){a=a|0;b=b|0;SO(a,ura(f[b>>2]|0)|0);return}function Wca(a,b){a=a|0;b=b|0;Vl(a,Era(f[b>>2]|0)|0);return}function Xca(a,b){a=a|0;b=b|0;Rl(a,Lra(f[b>>2]|0)|0);return}function Yca(a,b){a=a|0;b=b|0;gra(f[b>>2]|0)|0;sCa(a);return}function Zca(a,b){a=a|0;b=b|0;_Z(a,ura(f[b>>2]|0)|0);return}function _ca(a,b){a=a|0;b=b|0;$Z(a,vra(f[b>>2]|0)|0);return}function $ca(a,c){a=a|0;c=c|0;if(ata(c)|0)g1(a,c)|0;else b[a+104>>0]=0;return}function ada(a){a=a|0;var b=0;b=nV(12)|0;f[b>>2]=0;f[b+4>>2]=0;f[b+8>>2]=0;cCa(b);f[a>>2]=b;return}function bda(a){a=a|0;var c=0,d=0,e=0;c=a+56|0;d=a;e=d+52|0;do{f[d>>2]=0;d=d+4|0}while((d|0)<(e|0));b[a+52>>0]=0;f[c>>2]=1;f[a+60>>2]=0;return}function cda(a){a=a|0;L0(a);return}function dda(a,b){a=a|0;b=b|0;d_(a,rsa(f[b>>2]|0)|0);return}function eda(a,b,c){a=a|0;b=b|0;c=c|0;return gia(a+32|0,c,b)|0}function fda(a){a=a|0;var b=0;b=f[a>>2]|0;if(b){b=Qa(b|0,0)|0;if(!b){f[a>>2]=0;return}}else b=22;kX(b,71126)}function gda(a,b){a=a|0;b=b|0;Jva(a+16|0);return}function hda(a,b){a=a|0;b=b|0;Qk(a,ksa(f[b>>2]|0)|0);return}function ida(a,b){a=a|0;b=b|0;Qm(a,Xra(f[b>>2]|0)|0);return}function jda(a,b){a=a|0;b=b|0;tx(a,Qra(f[b>>2]|0)|0);return}function kda(a,b){a=a|0;b=b|0;ey(a,Sra(f[b>>2]|0)|0);return}function lda(a,b){a=a|0;b=b|0;SO(a,Era(f[b>>2]|0)|0);return}function mda(a,b){a=a|0;b=b|0;WK(a,Era(f[b>>2]|0)|0);return}function nda(a,b){a=a|0;b=b|0;cC(a,wra(f[b>>2]|0)|0);return}function oda(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];f[a+4>>2]=f[b+4>>2];f[a+8>>2]=f[b+8>>2];f[a+12>>2]=f[b+12>>2];cJa(a+16|0);return}function pda(a){a=a|0;if(!(((f[(f[a+8>>2]|0)+4>>2]|0)!=5?(f[(f[a+12>>2]|0)+4>>2]|0)!=5:0)?(f[(f[a+16>>2]|0)+4>>2]|0)!=5:0))f[a+4>>2]=5;return}function qda(a){a=a|0;var b=0.0;switch(f[a>>2]|0){case 3:{b=+Hoa(a);break}case 4:{b=+Goa(a);break}default:Ka()}return +b}function rda(a,b){a=a|0;b=b|0;fra(f[b>>2]|0)|0;ZCa(a);return}function sda(){var a=0,b=0;a=u;u=u+16|0;if(!(kb(79472,41)|0)){b=db(f[19869]|0)|0;u=a;return b|0}else qra(71421,a);return 0}function tda(a,b){a=a|0;b=+b;var c=0,d=0;c=u;u=u+16|0;d=c;n[d>>2]=b;f[a>>2]=3;d=rIa(d)|0;f[a+8>>2]=d;u=c;return}function uda(a,b){a=a|0;b=b|0;if(rCa(f[b+4>>2]|0)|0)b=Una(f[a>>2]|0,b)|0;return b|0}function vda(a,b,c){a=a|0;b=b|0;c=c|0;a=fta(f[a>>2]|0)|0;f[a+8>>2]=f[b>>2];f[a+12>>2]=c;return a|0}function wda(a,b){a=a|0;b=b|0;Fg(a,Xra(f[b>>2]|0)|0);return}function xda(a,b){a=a|0;b=b|0;RH(a,Qra(f[b>>2]|0)|0);return}function yda(a,b){a=a|0;b=b|0;JK(a,Sra(f[b>>2]|0)|0);return}function zda(a,b){a=a|0;b=b|0;Is(a,Lra(f[b>>2]|0)|0);return}function Ada(a,b){a=a|0;b=b|0;HO(a,Era(f[b>>2]|0)|0);return}function Bda(a,b){a=a|0;b=b|0;a$(a,Era(f[b>>2]|0)|0);return}function Cda(a,b){a=a|0;b=b|0;b$(a,Lra(f[b>>2]|0)|0);return}function Dda(a,b){a=a|0;b=b|0;zD(a,b);f[a+12>>2]=-1;f[a+16>>2]=-1;return}function Eda(){var a=0;if(!(b[74656]|0)){b[74656]=1;a=74544}else a=nV(112)|0;f[18633]=a;f[18632]=a;f[18634]=a+112;return}function Fda(a){a=a|0;r1(a);return}function Gda(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((b|0)==(d|0))a=bN(a,c)|0;else a=0;return a|0}function Hda(a,b){a=a|0;b=b|0;LL(a,f[b+8>>2]|0);return}function Ida(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;c=f[a>>2]|0;Kz(c|0,0,b*12|0)|0;f[a>>2]=c+(b*12|0);return}function Jda(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==41861?a+4|0:0)|0}function Kda(a){a=a|0;E4(a+48|0);E4(a+36|0);Oha(a);return}function Lda(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;f[a+24>>2]=0;Cva(a);return}function Mda(a,b){a=a|0;b=b|0;Wy(a,Yra(f[b>>2]|0)|0);return}function Nda(a,b){a=a|0;b=b|0;hy(a,Zra(f[b>>2]|0)|0);return}function Oda(a,b){a=a|0;b=b|0;hr(a,jsa(f[b>>2]|0)|0);return}function Pda(a,b){a=a|0;b=b|0;zr(a,ksa(f[b>>2]|0)|0);return}function Qda(a,b){a=a|0;b=b|0;Ur(a,Xra(f[b>>2]|0)|0);return}function Rda(a,b){a=a|0;b=b|0;FD(a,Era(f[b>>2]|0)|0);return}function Sda(a,b){a=a|0;b=b|0;Kia(a,Lra(f[b>>2]|0)|0);return}function Tda(a,b){a=a|0;b=b|0;LO(a,Era(f[b>>2]|0)|0);return}function Uda(a,b){a=a|0;b=b|0;LO(a,Lra(f[b>>2]|0)|0);return}function Vda(a,b){a=a|0;b=b|0;JN(a,Era(f[b>>2]|0)|0);return}function Wda(a,b){a=a|0;b=b|0;OV(a,Era(f[b>>2]|0)|0);return}function Xda(a,b){a=a|0;b=b|0;aU(a,Lra(f[b>>2]|0)|0);return}function Yda(a,b){a=a|0;b=b|0;l5(a,wra(f[b>>2]|0)|0);return}function Zda(a,b){a=a|0;b=b|0;BY(76852,b)|0;return a|0}function _da(){var a=0,c=0,d=0;a=nV(44)|0;c=a;d=c+44|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(d|0));_ba(a);b[a+16>>0]=1;return a|0}function $da(a,b){a=a|0;b=b|0;if(!b)Na(41783,41787,26,41802);else{b=Cn(a,b)|0;f[a>>2]=b;return}}function aea(a){a=a|0;var b=0;b=f[a+32>>2]|0;if((b|0)!=0?(f[b+4>>2]|0)==5:0)a=0;else a=(f[(f[a+28>>2]|0)+4>>2]|0)!=5;return a|0}function bea(a){a=a|0;A1(a);return}function cea(a,c){a=a|0;c=c|0;c=Xpa(gKa(c)|0)|0;l$(a,xh(+p[c>>3],(b[a+1>>0]|0)!=0)|0);return}function dea(a,b,c){a=a|0;b=b|0;c=c|0;a=aua(a)|0;f[a+8>>2]=b;f[a+12>>2]=c;qt(a);return a|0}function eea(a,b){a=a|0;b=b|0;xA(a,b+8|0);return}function fea(){var a=0;if((b[74016]|0)==0?twa(74016)|0:0){a=lb(45445)|0;if(!a)a=0;else a=PH(a)|0;f[18972]=a}return f[18972]|0}function gea(a){a=a|0;f[a>>2]=6004;f[a+64>>2]=6044;f[a+8>>2]=6024;Mea(a+12|0);return}function hea(a,b){a=a|0;b=b|0;var c=0,d=0;RO(a,b);d=b+32|0;c=f[d+4>>2]|0;b=a+32|0;f[b>>2]=f[d>>2];f[b+4>>2]=c;return}function iea(a,b,c){a=a|0;b=b|0;c=c|0;a=ota(a)|0;f[a+8>>2]=b;f[a+12>>2]=c;Faa(a);return a|0}function jea(a,b){a=a|0;b=b|0;SO(a,Yra(f[b>>2]|0)|0);return}function kea(a,b){a=a|0;b=b|0;KK(a,Zra(f[b>>2]|0)|0);return}function lea(a,b){a=a|0;b=b|0;Ko(a,jsa(f[b>>2]|0)|0);return}function mea(a,b){a=a|0;b=b|0;fD(a,ksa(f[b>>2]|0)|0);return}function nea(a,b){a=a|0;b=b|0;lv(a,Era(f[b>>2]|0)|0);return}function oea(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=S_(e,f)|0;a=J;return (J=(Y(b,f)|0)+(Y(d,e)|0)+a|a&0,c|0|0)|0}function pea(){f[18965]=0;f[18966]=0;f[18964]=75860;return}function qea(a,b,c){a=a|0;b=b|0;c=c|0;a=gta(f[a>>2]|0)|0;f[a+8>>2]=f[b>>2];f[a+4>>2]=c;return a|0}function rea(a,b){a=a|0;b=b|0;FE(a,ssa(f[b>>2]|0)|0);return}function sea(a,b){a=a|0;b=b|0;ZO(a,Rra(f[b>>2]|0)|0);return}function tea(a,c){a=a|0;c=c|0;f[a>>2]=18176;z2(a+4|0,(b[c+11>>0]|0)<0?f[c>>2]|0:c);return}function uea(a,b){a=a|0;b=b|0;rsa(f[b>>2]|0)|0;Q2(a);return}function vea(a,b){a=a|0;b=b|0;QP(a,jsa(f[b>>2]|0)|0);return}function wea(a,b){a=a|0;b=b|0;sk(a,ksa(f[b>>2]|0)|0);return}function xea(a,b){a=a|0;b=b|0;tA(a,jsa(f[b>>2]|0)|0);return}function yea(a,b){a=a|0;b=b|0;nga(a,ksa(f[b>>2]|0)|0);return}function zea(a){a=a|0;if(!(b[a+8>>0]|0)){c3(f[a>>2]|0,10)|0;a=a+4|0;f[a>>2]=(f[a>>2]|0)+1}return}function Aea(a){a=a|0;z1(a);return}function Bea(a){a=a|0;var b=0,c=0;b=u;u=u+16|0;c=b;f[c>>2]=a;a=y4(c)|0;u=b;return a|0}function Cea(a,b){a=a|0;b=b|0;if(Sba(a,b)|0)a=f[(f[a+40>>2]|0)+(b<<2)>>2]|0;else a=EI(b)|0;return a|0}function Dea(a,b){a=a|0;b=b|0;QD(a,ssa(f[b>>2]|0)|0);return}function Eea(a,b){a=a|0;b=b|0;OF(a,rsa(f[b>>2]|0)|0);return}function Fea(a,b){a=a|0;b=b|0;az(a,lsa(f[b>>2]|0)|0);return}function Gea(a,b){a=a|0;b=b|0;esa(a,msa(f[b>>2]|0)|0);return}function Hea(a,b){a=a|0;b=b|0;bz(a,nsa(f[b>>2]|0)|0);return}function Iea(a,b){a=a|0;b=b|0;fsa(a,ssa(f[b>>2]|0)|0);return}function Jea(a,b){a=a|0;b=b|0;Rra(f[b>>2]|0)|0;sCa(a);return}function Kea(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=gKa(f[b>>2]|0)|0;PN(f[a+4>>2]|0,b,c,d);return}function Lea(a,c){a=a|0;c=c|0;Epa(a);cJa(a+36|0);b[a+40>>0]=0;f[a+44>>2]=0;f[a+48>>2]=0;f[a+52>>2]=c;return}function Mea(a){a=a|0;f[a>>2]=6060;zta(a+32|0);vwa(a);return}function Nea(a,c){a=a|0;c=c|0;f[a>>2]=18156;z2(a+4|0,(b[c+11>>0]|0)<0?f[c>>2]|0:c);return}function Oea(a,b){a=a|0;b=b|0;tua(a,Zra(f[b>>2]|0)|0);return}function Pea(a,b){a=a|0;b=b|0;Gu(a,Xra(f[b>>2]|0)|0);return}function Qea(a,b){a=a|0;b=b|0;x$(a,Sra(f[b>>2]|0)|0);return}function Rea(a,b){a=a|0;b=b|0;aAa(ura(f[b>>2]|0)|0);return}function Sea(a,b){a=a|0;b=b|0;bAa(wra(f[b>>2]|0)|0);return}function Tea(a,b){a=a|0;b=b|0;Aaa(f[a>>2]|0,39217,0)|0;Uv(a,b);return}function Uea(a){a=a|0;f[a>>2]=9472;E4(a+104|0);Q7(a+44|0);Uqa(a);return}function Vea(a,b){a=a|0;b=b|0;return kl(a,b,uHa(b)|0)|0}function Wea(a){a=a|0;H1(a);return}function Xea(a,b,c,d,e,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;f[e>>2]=c;f[i>>2]=g;return 3}function Yea(a,b){a=a|0;b=b|0;iI(a,rsa(f[b>>2]|0)|0);return}function Zea(a,b){a=a|0;b=b|0;YO(a,lsa(f[b>>2]|0)|0);return}function _ea(a,b){a=a|0;b=b|0;Vu(a,msa(f[b>>2]|0)|0);return}function $ea(a,b){a=a|0;b=b|0;ZO(a,nsa(f[b>>2]|0)|0);return}function afa(a,b){a=a|0;b=b|0;Xu(a,ssa(f[b>>2]|0)|0);return}function bfa(){var a=0;y=0;ua(53,76852,60408)|0;a=y;y=0;if(!(a&1)){y=0;ia(338,1);y=0}a=ab(0)|0;lDa(a)}function cfa(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;Ot(a+4|0,c,f[b>>2]|0);return}function dfa(a){a=a|0;f[a>>2]=6456;Wea(a+44|0);Uqa(a);return}function efa(a){a=a|0;var b=0;b=f[a+4>>2]|0;if(!b)Na(53148,51766,193,53174);else return (f[a>>2]|0)+(b+-1<<2)|0;return 0}function ffa(a,b){a=a|0;b=b|0;Ft(a,Xra(f[b>>2]|0)|0);return}function gfa(a,b){a=a|0;b=b|0;lF(a,Qra(f[b>>2]|0)|0);return}function hfa(a,b){a=a|0;b=b|0;IR(a,Rra(f[b>>2]|0)|0);return}function ifa(a,b){a=a|0;b=b|0;xp(a,Sra(f[b>>2]|0)|0);return}function jfa(a,b){a=a|0;b=b|0;yx(a,Xra(f[b>>2]|0)|0);return}function kfa(a,b){a=a|0;b=b|0;Vva(a,pra(f[b>>2]|0)|0);return}function lfa(a,b,c){a=a|0;b=b|0;c=c|0;xY(a,b,c<<4);return}function mfa(a){a=a|0;var b=0,c=0;b=u;u=u+16|0;c=b;a=gKa(f[a+60>>2]|0)|0;f[c>>2]=a;a=Qza(wb(6,c|0)|0)|0;u=b;return a|0}function nfa(a){a=a|0;i2(a);return}function ofa(a){a=a|0;O1(a);return}function pfa(a){a=a|0;P1(a);return}function qfa(a){a=a|0;Q1(a);return}function rfa(a){a=a|0;j2(a);return}function sfa(a){a=a|0;k2(a);return}function tfa(a,b){a=a|0;b=b|0;b=f[b>>2]|0;f[a>>2]=b;b=(UCa(b)|0)+8|0;f[b>>2]=(f[b>>2]|0)+1;return}function ufa(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==1){b=f[b+8>>2]|0;Ysa(a,b,((b|0)<0)<<31>>31);return}else Na(39999,39045,196,40234)}function vfa(a,b){a=a|0;b=b|0;var c=0;a=a+84|0;c=f[a>>2]|0;if(c|0)wxa(f[c+104>>2]|0);f[a>>2]=b;return b|0}function wfa(a,b){a=a|0;b=b|0;Rra(f[b>>2]|0)|0;KLa()}function xfa(a,b){a=a|0;b=b|0;w_(a,rsa(f[b>>2]|0)|0);return}function yfa(){var a=0,b=0,c=0;a=nV(88)|0;b=a;c=b+88|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));C1(a);return a|0}function zfa(a){a=a|0;Pra(a+16|0);zta(a);return}function Afa(a,b){a=a|0;b=b|0;var c=0;c=f[a+8>>2]|0;if((f[a+12>>2]|0)-c>>2>>>0>b>>>0)a=(f[c+(b<<2)>>2]|0)!=0;else a=0;return a|0}function Bfa(a,b){a=a|0;b=b|0;Kt(a,ksa(f[b>>2]|0)|0);return}function Cfa(a,b){a=a|0;b=b|0;tna(a,Yra(f[b>>2]|0)|0);return}function Dfa(a,b){a=a|0;b=b|0;c$(a,jsa(f[b>>2]|0)|0);return}function Efa(a,b){a=a|0;b=b|0;fca(a,ksa(f[b>>2]|0)|0);return}function Ffa(a,b){a=a|0;b=b|0;wqa(a,Era(f[b>>2]|0)|0);return}function Gfa(a,b){a=a|0;b=b|0;HAa(Era(f[b>>2]|0)|0);return}function Hfa(a){a=a|0;var b=0;b=u;u=u+16|0;Xe(a);if(!(sb(f[19869]|0,0)|0)){u=b;return}else qra(71520,b)}function Ifa(a){a=a|0;x2(a);return}function Jfa(a){a=a|0;return Gqa(f[a+4>>2]|0)|0}function Kfa(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;while(1){if((c|0)==(d|0))break;b[e>>0]=b[c>>0]|0;e=e+1|0;c=c+1|0}return d|0}function Lfa(a,b){a=a|0;b=b|0;sga(a,ssa(f[b>>2]|0)|0);return}function Mfa(a,b){a=a|0;b=b|0;gva(a,lsa(f[b>>2]|0)|0);return}function Nfa(){var a=0,b=0,c=0;a=nV(56)|0;b=a;c=b+56|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Oca(a);return a|0}function Ofa(a){a=a|0;Iba(a);YK(a+16|0);f[a>>2]=9624;return}function Pfa(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Ib[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Qfa(a,b){a=a|0;b=b|0;gra(f[b>>2]|0)|0;cla(a);return}function Rfa(a,b){a=a|0;b=b|0;Xg(a,Yra(f[b>>2]|0)|0);return}function Sfa(a,b){a=a|0;b=b|0;Nv(a,Zra(f[b>>2]|0)|0);return}function Tfa(a,b){a=a|0;b=b|0;BO(a,jsa(f[b>>2]|0)|0);return}function Ufa(a,b){a=a|0;b=b|0;lh(a,ksa(f[b>>2]|0)|0);return}function Vfa(a,b){a=a|0;b=b|0;AK(a,jsa(f[b>>2]|0)|0);return}function Wfa(a,b){a=a|0;b=b|0;Y5(a,Xra(f[b>>2]|0)|0);return}function Xfa(a,b){a=a|0;b=b|0;yoa(a,Qra(f[b>>2]|0)|0);return}function Yfa(a,b){a=a|0;b=b|0;Ju(a,Xra(f[b>>2]|0)|0);return}function Zfa(a,b){a=a|0;b=b|0;Hs(a,Rra(f[b>>2]|0)|0);return}function _fa(a){a=a|0;Qua(a+12|0);Daa(a);return}function $fa(a){a=a|0;G2(a);return}function aga(a){a=a|0;if((Fva(a+4|0)|0)==-1){Lb[f[(f[a>>2]|0)+8>>2]&511](a);a=1}else a=0;return a|0}function bga(a,b){a=a|0;b=b|0;if((f[a+4>>2]|0)>>>0>b>>>0)return (f[a>>2]|0)+(b<<2)|0;else Na(51745,51766,169,72570);return 0}function cga(a,b){a=a|0;b=b|0;XS(a,rsa(f[b>>2]|0)|0);return}function dga(a){a=a|0;if(((b[a+27>>0]|0)==0?(f[a+72>>2]|0)==0:0)?(b[a+77>>0]|0)==0:0)a=(b[a+79>>0]|0)!=0;else a=1;return a|0}function ega(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;while(1){if((c|0)==(d|0))break;f[e>>2]=b[c>>0];e=e+4|0;c=c+1|0}return d|0}function fga(a,b){a=a|0;b=b|0;uM(a,Asa(f[b>>2]|0)|0);return}function gga(a,b){a=a|0;b=b|0;msa(f[b>>2]|0)|0;Mva(a);return}function hga(a,b){a=a|0;b=b|0;ssa(f[b>>2]|0)|0;ZCa(a);return}function iga(a,b){a=a|0;b=b|0;k6(a,Sra(f[b>>2]|0)|0);return}function jga(a,b){a=a|0;b=b|0;Lo(a,Xra(f[b>>2]|0)|0);return}function kga(a,b){a=a|0;b=b|0;OCa(pra(f[b>>2]|0)|0);return}function lga(a,b){a=a|0;b=b|0;gu(a,Xra(f[b>>2]|0)|0);return}function mga(a,b){a=a|0;b=b|0;PA(a,b+36|0);return}function nga(a,b){a=a|0;b=b|0;var c=0;c=gKa(f[a+20>>2]|0)|0;Mf(b,c,f[a+40>>2]|0);return}function oga(a,c){a=a|0;c=c|0;var d=0;b[a+77>>0]=1;d=a+79|0;b[d>>0]=b[d>>0]|c;if(!(b[a+24>>0]|0))b[a+78>>0]=1;return}function pga(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==46597?a+4|0:0)|0}function qga(a,b){a=a|0;b=b|0;U1(a,rsa(f[b>>2]|0)|0);return}function rga(){var a=0,b=0,c=0;a=nV(72)|0;b=a;c=b+72|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));b3(a);return a|0}function sga(a,b){a=a|0;b=b|0;b=KM(a+44|0,b+24|0)|0;f[b>>2]=(f[b>>2]|0)+1;return}function tga(a,b){a=a|0;b=b|0;return ay(a,b,uHa(b)|0)|0}function uga(a,b){a=a|0;b=b|0;PD(a,Era(f[b>>2]|0)|0);return}function vga(a,b){a=a|0;b=b|0;tt(a,Lra(f[b>>2]|0)|0);return}function wga(a,b){a=a|0;b=b|0;Fv(a,Asa(f[b>>2]|0)|0);return}function xga(a,b){a=a|0;b=b|0;wqa(a,Yra(f[b>>2]|0)|0);return}function yga(a,b){a=a|0;b=b|0;j6(a,Zra(f[b>>2]|0)|0);return}function zga(a,b){a=a|0;b=b|0;k6(a,jsa(f[b>>2]|0)|0);return}function Aga(a,b){a=a|0;b=b|0;x3(a,ksa(f[b>>2]|0)|0);return}function Bga(a,b){a=a|0;b=b|0;cQ(a,ksa(f[b>>2]|0)|0);return}function Cga(a,b){a=a|0;b=b|0;Uq(a,jsa(f[b>>2]|0)|0);return}function Dga(a,b){a=a|0;b=b|0;tp(a,ksa(f[b>>2]|0)|0);return}function Ega(a){a=a|0;f[a>>2]=7184;Kja(a+44|0);Uqa(a);return}function Fga(a){a=a|0;var b=0;a=a+4|0;b=f[a>>2]|0;if(!b)Na(53148,51766,198,53165);else{f[a>>2]=b+-1;return}}function Gga(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(c|0){d=a;while(1){c=c+-1|0;f[d>>2]=b;if(!c)break;else d=d+4|0}}return a|0}function Hga(a){a=a|0;a=fwa(a,115)|0;if((((a|0)!=0?(b[a+1>>0]|0)!=0:0)?(b[a+2>>0]|0)!=0:0)?(b[a+3>>0]|0)!=0:0)a=Fh(a)|0;else a=0;return a|0}function Iga(a,b){a=a|0;b=b|0;gsa(Zra(f[b>>2]|0)|0);return}function Jga(a,b){a=a|0;b=b|0;Iv(a,rsa(f[b>>2]|0)|0);return}function Kga(a,b){a=a|0;b=b|0;DD(a,lsa(f[b>>2]|0)|0);return}function Lga(a,b){a=a|0;b=b|0;VM(a,msa(f[b>>2]|0)|0);return}function Mga(a,b){a=a|0;b=b|0;fba(a,nsa(f[b>>2]|0)|0);return}function Nga(a,b){a=a|0;b=b|0;Cp(a,ssa(f[b>>2]|0)|0);return}function Oga(a,b){a=a|0;b=b|0;Rqa(a,Rra(f[b>>2]|0)|0);return}function Pga(){var a=0,b=0,c=0;a=nV(56)|0;b=a;c=b+56|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Tha(a);return a|0}function Qga(a,c){a=a|0;c=c|0;var d=0;b[a+76>>0]=1;d=a+79|0;b[d>>0]=b[d>>0]|c;if(!(b[a+24>>0]|0))b[a+78>>0]=1;return}function Rga(a){a=a|0;switch(a&74){case 64:{a=8;break}case 8:{a=16;break}case 0:{a=0;break}default:a=10}return a|0}function Sga(a,b){a=a|0;b=b|0;return UA(a,b,tHa(b)|0)|0}function Tga(a,b){a=a|0;b=b|0;return aC(a,b,uHa(b)|0)|0}function Uga(a,b){a=a|0;b=b|0;return lC(a,b,uHa(b)|0)|0}function Vga(a,b){a=a|0;b=b|0;Iz(a,Era(f[b>>2]|0)|0);return}function Wga(a,b){a=a|0;b=b|0;SH(a,jsa(f[b>>2]|0)|0);return}function Xga(a,b){a=a|0;b=b|0;St(a,ksa(f[b>>2]|0)|0);return}function Yga(a,b){a=a|0;b=b|0;IBa(Qra(f[b>>2]|0)|0);return}function Zga(a,b){a=a|0;b=b|0;JBa(Sra(f[b>>2]|0)|0);return}function _ga(a,b){a=a|0;b=b|0;qW(a,jsa(f[b>>2]|0)|0);return}function $ga(a,b){a=a|0;b=b|0;_q(a,ksa(f[b>>2]|0)|0);return}function aha(a){a=a|0;kT(f[a+4>>2]|0);return}function bha(a){a=a|0;$2(a);return}function cha(a,b){a=a|0;b=b|0;gsa(lsa(f[b>>2]|0)|0);return}function dha(a,b){a=a|0;b=b|0;Lma(a,rsa(f[b>>2]|0)|0);return}function eha(){var a=0,b=0,c=0;a=nV(56)|0;b=a;c=b+56|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));jia(a);return a|0}function fha(){var a=0,b=0,c=0;a=nV(48)|0;b=a;c=b+48|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Qsa(a);return a|0}function gha(){var a=0,b=0,c=0;a=nV(48)|0;b=a;c=b+48|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));npa(a);return a|0}function hha(a){a=a|0;c3(xca(a,42577)|0,41)|0;return}function iha(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8124;return}function jha(a,b){a=a|0;b=b|0;gKa(a)|0;if(tJa(f[a>>2]|0)|0)a=bDa(f[a+8>>2]|0,b)|0;else a=0;return a|0}function kha(){var a=0;a=tn(75352,12)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;wFa(a);return a|0}function lha(a,b,c){a=a|0;b=b|0;c=c|0;b=KM(a+88|0,b)|0;f[b>>2]=c;return}function mha(a){a=a|0;n3(a);return}function nha(a){a=a|0;y=0;la(224,a|0)|0;a=y;y=0;if(a&1){a=ab(0)|0;lDa(a)}else return}function oha(a,b){a=a|0;b=b|0;Lqa(a,lsa(f[b>>2]|0)|0);return}function pha(a,b){a=a|0;b=b|0;Rqa(a,nsa(f[b>>2]|0)|0);return}function qha(a,b){a=a|0;b=b|0;Vva(a,ssa(f[b>>2]|0)|0);return}function rha(a,b){a=a|0;b=b|0;PA(a,b+8|0);return}function sha(){var a=0,b=0,c=0;a=nV(84)|0;b=a;c=b+84|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));p9(a);return a|0}function tha(a,b){a=a|0;b=b|0;b=gia(a,b,2)|0;return dea(f[a>>2]|0,24,b)|0}function uha(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,g=0;e=u;u=u+16|0;g=e;f[g>>2]=d;d=vz(a,b,c,g)|0;u=e;return d|0}function vha(a,b){a=a|0;b=b|0;TA(a,b+36|0);return}function wha(a,b){a=a|0;b=b|0;Ly(a,Asa(f[b>>2]|0)|0);return}function xha(a,b){a=a|0;b=b|0;iCa(Yra(f[b>>2]|0)|0);return}function yha(a,b){a=a|0;b=b|0;jCa(Zra(f[b>>2]|0)|0);return}function zha(a,b){a=a|0;b=b|0;kCa(_ra(f[b>>2]|0)|0);return}function Aha(a,b){a=a|0;b=b|0;tC(a,b+36|0);return}function Bha(a,b){a=a|0;b=b|0;var c=0;c=nV(4)|0;VBa(c,b);f[a>>2]=c;return}function Cha(a){a=a|0;nja(a+44|0);xla(a+16|0);HP(a);return}function Dha(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==41456?a+4|0:0)|0}function Eha(a,b){a=a|0;b=b|0;var c=0;c=f[18889]|0;return Nq(a,c,Fza(b)|0)|0}function Fha(a){a=a|0;a=(Sra(a)|0)+16|0;return csa((_ra(f[a>>2]|0)|0)+8|0)|0}function Gha(a,b){a=a|0;b=b|0;Rra(f[b>>2]|0)|0;cla(a);return}function Hha(a,b){a=a|0;b=b|0;XD(a,rsa(f[b>>2]|0)|0);return}function Iha(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;Lza(a);return a|0}function Jha(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));lta(a);return a|0}function Kha(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;gAa(a);return}function Lha(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Vb[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Mha(){f[18613]=0;f[18612]=17648;UIa();f[18612]=15496;f[18614]=15544;return}function Nha(){f[18609]=0;f[18608]=17648;VIa();f[18608]=15412;f[18610]=15460;return}function Oha(a){a=a|0;f3(a+24|0);E4(a+12|0);E4(a);return}function Pha(a,b){a=a|0;b=b|0;Cu(a,ksa(f[b>>2]|0)|0);return}function Qha(a,b){a=a|0;b=b|0;Lj(a,Xra(f[b>>2]|0)|0);return}function Rha(a,b){a=a|0;b=b|0;NP(a,Asa(f[b>>2]|0)|0);return}function Sha(a,b){a=a|0;b=b|0;var c=0;switch(b|0){case 1:{c=31;break}case 2:{c=63;break}default:Ka()}return c&a|0}function Tha(a){a=a|0;Jka(a);f[a>>2]=7256;gua(a+44|0);return}function Uha(a,b){a=a|0;b=b|0;a=(Cn(a,f[b+24>>2]|0)|0)+1|0;return a+(0-(h[b+20>>0]|0)&10)|0}function Vha(a,b){a=a|0;b=b|0;var c=0,d=0;c=u;u=u+16|0;d=c;f[d>>2]=a;f[d+4>>2]=b;Qza(fb(91,d|0)|0)|0;u=c;return}function Wha(a){a=a|0;uoa(a+24|0);Rua(a);return}function Xha(a,b){a=a|0;b=b|0;return U3(a,b)|0}function Yha(a){a=a|0;y3(a);return}function Zha(){var a=0;f[18621]=0;f[18620]=17648;a=gpa()|0;f[18622]=a;f[18620]=16884;return}function _ha(){var a=0;f[18617]=0;f[18616]=17648;a=gpa()|0;f[18618]=a;f[18616]=16860;return}function $ha(a,b){a=a|0;b=b|0;if(bDa(a,b)|0)a=1;else a=bDa(b,5936)|0;return a|0}function aia(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((b|0)==4){Ysa(a,c,d);f[a>>2]=2;return}else Na(39903,39045,50,39925)}function bia(){var a=0,b=0,c=0;a=nV(68)|0;b=a;c=b+68|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));h7(a);return a|0}function cia(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));sta(a);return a|0}function dia(){var a=0,b=0,c=0;a=nV(88)|0;b=a;c=b+88|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));LX(a);return a|0}function eia(a,b){a=a|0;b=b|0;if((b|0)==0&0==0)a=(p8(a)|0)+32|0;else a=p8(b)|0;return a|0}function fia(a,c){a=a|0;c=c|0;Xwa(a);f[a+24>>2]=f[c>>2];b[a+28>>0]=0;f[a+32>>2]=0;return}function gia(a,b,c){a=a|0;b=b|0;c=c|0;a=pta(f[a>>2]|0)|0;f[a+8>>2]=b;f[a+4>>2]=c;return a|0}function hia(a,b){a=a|0;b=b|0;Ws(a,Asa(f[b>>2]|0)|0);return}function iia(a){a=a|0;f[a>>2]=8e3;a3(a+44|0);Uqa(a);return}function jia(a){a=a|0;Tka(a);f[a>>2]=7184;gua(a+44|0);return}function kia(a){a=a|0;var b=0;Xwa(a);a=a+24|0;b=a+36|0;do{f[a>>2]=0;a=a+4|0}while((a|0)<(b|0));return}function lia(a,b){a=a|0;b=b|0;Dya(a);Wva(a+8|0,b);cJa(a+24|0);return}function mia(a){a=a|0;O3(a);return}function nia(a){a=a|0;o3(a);return}function oia(a){a=a|0;cja(a);oCa(a+56|0);return}function pia(a){a=a|0;mja(a);oCa(a+60|0);return}function qia(a,b){a=a|0;b=b|0;KCa(rsa(f[b>>2]|0)|0);return}function ria(a,b){a=a|0;b=b|0;LCa(lsa(f[b>>2]|0)|0);return}function sia(a,b){a=a|0;b=b|0;MCa(msa(f[b>>2]|0)|0);return}function tia(a,b){a=a|0;b=b|0;NCa(nsa(f[b>>2]|0)|0);return}function uia(a,b){a=a|0;b=b|0;OCa(ssa(f[b>>2]|0)|0);return}function via(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Gta(a);return a|0}function wia(a,b,c){a=a|0;b=b|0;c=c|0;b=gKa(f[b>>2]|0)|0;T1(f[a+4>>2]|0,b,c);return}function xia(a,b,c){a=a|0;b=b|0;c=c|0;b=gKa(f[b>>2]|0)|0;saa(f[a+4>>2]|0,b,c);return}function yia(){var a=0,b=0,c=0;a=nV(116)|0;b=a;c=b+116|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));tba(a);return a|0}function zia(){var a=0,b=0,c=0;a=nV(120)|0;b=a;c=b+120|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));VN(a);return a|0}function Aia(a,b,c){a=a|0;b=b|0;c=c|0;zj(a,b,c);return}function Bia(a){a=a|0;var b=0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=32768;b=yLa()|0;f[a+20>>2]=b;f[a+24>>2]=0;return}function Cia(a){a=a|0;Gja(a);f[a>>2]=8196;gua(a+44|0);return}function Dia(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;b[a>>0]=0;f[a+20>>2]=c;b[a+24>>0]=d&1;b[a+25>>0]=e&1;return a|0}function Eia(a,b){a=a|0;b=b|0;$l(a,ksa(f[b>>2]|0)|0);return}function Fia(a,b){a=a|0;b=b|0;ks(a,jsa(f[b>>2]|0)|0);return}function Gia(a,b){a=a|0;b=b|0;Oq(a,ksa(f[b>>2]|0)|0);return}function Hia(a,b){a=a|0;b=b|0;dB(a,b+36|0);return}function Iia(a,b,c){a=a|0;b=b|0;c=c|0;b=gKa(f[b>>2]|0)|0;Fwa(f[a+4>>2]|0,b,c);return}function Jia(a){a=a|0;var b=0;b=nV(48)|0;yaa(b,f[a+44>>2]|0);return b|0}function Kia(a,b){a=a|0;b=b|0;gp(a,rCa(f[b+4>>2]|0)|0,b);return}function Lia(a,b){a=a|0;b=b|0;Eya(a);Wva(a+8|0,b);cJa(a+24|0);return}function Mia(a){a=a|0;oia(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Nia(a){a=a|0;Vpa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Oia(a){a=a|0;pia(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Pia(a){a=a|0;Wpa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Qia(a){a=a|0;N3(a);return}function Ria(a){a=a|0;G3(a);return}function Sia(a){a=a|0;gea(a);oCa(a+64|0);return}function Tia(a,b){a=a|0;b=b|0;var c=0;a=a+8|0;c=f[a>>2]|0;Kz(c|0,0,b<<2|0)|0;f[a>>2]=c+(b<<2);return}function Uia(a){a=a|0;var b=0;b=nV(8)|0;f[b>>2]=9832;f[b+4>>2]=f[a+4>>2];return b|0}function Via(a){a=a|0;var b=0;b=nV(8)|0;f[b>>2]=9788;f[b+4>>2]=f[a+4>>2];return b|0}function Wia(a){a=a|0;var b=0;b=nV(8)|0;f[b>>2]=9744;f[b+4>>2]=f[a+4>>2];return b|0}function Xia(a,c){a=a|0;c=c|0;var d=0;d=a+20|0;if(b[d>>0]|0?(b[d>>0]=0,Kua(c)|0):0)gP(a,32);return}function Yia(a,b){a=a|0;b=b|0;TA(a,b+8|0);return}function Zia(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;f[c>>2]=b;if((b|0)==0?(f[(f[a+12>>2]|0)+4>>2]|0)==5:0)f[c>>2]=5;return}function _ia(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Uta(a);return a|0}function $ia(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7820;return}function aja(a,b){a=a|0;b=b|0;if((f[a+8>>2]|0)>>>0<b>>>0)lZ(a,b);return}function bja(a,b){a=a|0;b=b|0;var c=0;c=a+16|0;f[c>>2]=0;if(b|0){f[a>>2]=9660;f[a+4>>2]=b;f[c>>2]=a}return}function cja(a){a=a|0;f[a>>2]=9984;f[a+56>>2]=10004;Mea(a+4|0);return}function dja(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==45151?a+4|0:0)|0}function eja(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295)Na(24282,24325,71,72417);else{f[a>>2]=b;return a|0}return 0}function fja(a,b){a=a|0;b=b|0;CC(a,b+36|0);return}function gja(a,b){a=a|0;b=b|0;an(a,Asa(f[b>>2]|0)|0);return}function hja(a,b){a=a|0;b=b|0;var c=0;c=nV(48)|0;dna(c,b);WN(a,c);return}function ija(a){a=a|0;var b=0;gua(a);b=a+12|0;f[b>>2]=b;f[a+16>>2]=b;f[a+20>>2]=0;return}function jja(a){a=a|0;if(!a)a=1;else a=gKa(f[a+16>>2]|0)|0;return a|0}function kja(a){a=a|0;Sia(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function lja(a){a=a|0;qqa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function mja(a){a=a|0;f[a>>2]=9708;f[a+60>>2]=9728;Mea(a+8|0);return}function nja(a){a=a|0;y=0;la(223,a|0)|0;a=y;y=0;if(a&1){a=ab(0)|0;lDa(a)}else return}function oja(a){a=a|0;if((f[a>>2]|0)==4){a=a+8|0;J=f[a+4>>2]|0;return f[a>>2]|0}else Na(39903,23947,68,24267);return 0}function pja(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==3){uAa(a,f[b+8>>2]|0);f[a>>2]=1;return}else Na(39967,39045,43,39989)}function qja(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==1){uAa(a,f[b+8>>2]|0);f[a>>2]=3;return}else Na(39999,39045,29,40021)}function rja(a,b){a=a|0;b=b|0;Ao(a,ssa(f[b>>2]|0)|0);return}function sja(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));isa(a);return a|0}function tja(a,b){a=a|0;b=b|0;if(!a)a=(Hna(b)|0)+32|0;else a=Hna(a)|0;return a|0}function uja(a){a=a|0;var b=0;b=nV(52)|0;a6(b,f[a+44>>2]|0);return b|0}function vja(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;f[a+4>>2]=c;f[a+8>>2]=0;Z3(a);return}function wja(a,b){a=a|0;b=b|0;return Jz(b,a,0)|0}function xja(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==33807?a+12|0:0)|0}function yja(a){a=a|0;if(hJa(f[a>>2]|0)|0)return gKa(f[(f[a+8>>2]|0)+4>>2]|0)|0;else Na(51333,51343,393,23222);return 0}function zja(a){a=a|0;var b=0,c=0;a=nV(76)|0;b=a;c=b+76|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));C5(a);return a|0}function Aja(a,b){a=a|0;b=b|0;eB(a,b+36|0);return}function Bja(a){a=a|0;a=(Sra(a)|0)+16|0;return 32-(FR(f[a>>2]|0)|0)|0}function Cja(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0>c>>>0)return a+(c<<2)|0;else Na(51745,51766,169,72570);return 0}function Dja(a,b){a=a|0;b=b|0;Gi(a,nsa(f[b>>2]|0)|0);return}function Eja(a,b){a=a|0;b=b|0;sg(a,rsa(f[b>>2]|0)|0);return}function Fja(a,b){a=a|0;b=b|0;bya(a);cJa(a+12|0);Wva(a+16|0,b);return}function Gja(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8232;return}function Hja(a,b){a=a|0;b=b|0;Kya(a);cJa(a+8|0);Wva(a+12|0,b);return}function Ija(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((b+1|0)>>>0<=1?(d=(f[a>>2]|0)<0,e=(c&64)==0,e|d):0)return e&d|0;return 1}function Jja(){var a=0,b=0,c=0;a=nV(112)|0;b=a;c=b+112|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));z3(a);return a|0}function Kja(a){a=a|0;V3(a);return}function Lja(a,b){a=a|0;b=b|0;f[b>>2]=9832;f[b+4>>2]=f[a+4>>2];return}function Mja(a,b){a=a|0;b=b|0;f[b>>2]=9788;f[b+4>>2]=f[a+4>>2];return}function Nja(a,b){a=a|0;b=b|0;f[b>>2]=9744;f[b+4>>2]=f[a+4>>2];return}function Oja(a){a=a|0;f[a>>2]=8196;Rma(a+44|0);Uqa(a);return}function Pja(a,b){a=a|0;b=b|0;dB(a,b+8|0);return}function Qja(a,b){a=a|0;b=b|0;Fya(a);Wva(a+8|0,b);cJa(a+24|0);return}function Rja(a,b){a=a|0;b=b|0;b=gKa(f[b>>2]|0)|0;b=E2(f[a+4>>2]|0,b)|0;return b|0}function Sja(a,b){a=a|0;b=b|0;kB(a,b+36|0);return}function Tja(a,b){a=a|0;b=b|0;qDa(Asa(f[b>>2]|0)|0);return}function Uja(){var a=0,b=0,c=0;a=nV(76)|0;b=a;c=b+76|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));C5(a);return a|0}function Vja(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));_ba(a);return a|0}function Wja(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<c>>>0)Na(43146,43110,118,43168);else return b>>>0>c>>>0|a<<24>>24!=0|0;return 0}function Xja(a){a=a|0;rD(a+16|0);wva(a);return}function Yja(a){a=a|0;var b=0;f[a>>2]=17404;a=a+8|0;b=f[a>>2]|0;if((b|0)!=(gpa()|0))LDa(f[a>>2]|0);return}function Zja(a){a=a|0;gV(f[a+4>>2]|0);return}function _ja(a){a=a|0;Eba(a);return}function $ja(a,b){a=a|0;b=b|0;Jma(rsa(f[b>>2]|0)|0);return}function aka(a,b){a=a|0;b=b|0;CC(a,b+8|0);return}function bka(a){a=a|0;c3(xca(a,42589)|0,41)|0;return}function cka(a,b){a=a|0;b=b|0;Mb[f[f[b>>2]>>2]&4095](b,42577);NBa(a);return}function dka(a,b,c){a=a|0;b=b|0;c=c|0;return Ar(a,b,c)|0}function eka(a){a=a|0;aK(a);return}function fka(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==4){tda(a,+Goa(b));return}else Na(39903,39045,216,40043)}function gka(a,b){a=a|0;b=b|0;UR(a,Asa(f[b>>2]|0)|0);return}function hka(a,b){a=a|0;b=b|0;qB(a,b+36|0);return}function ika(a,b){a=a|0;b=b|0;lB(a,b+36|0);return}function jka(a,b){a=a|0;b=b|0;mB(a,b+36|0);return}function kka(a,b){a=a|0;b=b|0;nB(a,b+36|0);return}function lka(){var a=0,b=0,c=0;a=nV(56)|0;b=a;c=b+56|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Cia(a);return a|0}function mka(){var a=0,b=0,c=0;a=nV(104)|0;b=a;c=b+104|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));zqa(a);return a|0}function nka(a){a=a|0;Epa(a);gua(a+36|0);gua(a+48|0);return}function oka(a){a=a|0;Xja(a);$Ja(a);return}function pka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9004;return}function qka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9364;return}function rka(a,b,c){a=a|0;b=b|0;c=c|0;xY(a,b,c*24|0);return}function ska(a,b,c){a=a|0;b=b|0;c=c|0;c=M9(M9(f[a>>2]|0,c)|0,b)|0;f[a>>2]=c;return}function tka(a){a=a|0;Xwa(a);gua(a+24|0);return}function uka(a,b){a=a|0;b=b|0;var c=0;a=a+4|0;c=f[a>>2]|0;Kz(c|0,0,b<<2|0)|0;f[a>>2]=c+(b<<2);return}function vka(a){a=a|0;S4(a);return}function wka(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Hm(c,d,e)|0}function xka(a){a=a|0;var c=0,d=0;c=5381;while(1){d=b[a>>0]|0;if(!(d<<24>>24))break;a=a+1|0;c=d<<24>>24^c*33}return c|0}function yka(a,b){a=a|0;b=b|0;eB(a,b+8|0);return}function zka(a,b){a=a|0;b=b|0;fB(a,b+8|0);return}function Aka(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;a=Y(e>>>0<d>>>0?e:d,a)|0;return b[c+(a+(d>>>0<e>>>0?e:d))>>0]|0}function Bka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9076;return}function Cka(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Nb[a&63](b|0,c|0,d|0,e|0,f|0,g|0)|0}function Dka(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return $m(c,d,e)|0}function Eka(a){a=a|0;if((f[a>>2]|0)==2){a=a+8|0;J=f[a+4>>2]|0;return f[a>>2]|0}else Na(39935,23947,61,24245);return 0}function Fka(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==3){S5(a,+Hoa(b));return}else Na(39967,39045,206,40057)}function Gka(a,b){a=a|0;b=b|0;KC(a,b+36|0);return}function Hka(a,b){a=a|0;b=b|0;sB(a,b+36|0);return}function Ika(a,b){a=a|0;b=b|0;Ka();return 0}function Jka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7292;return}function Kka(a,b){a=a|0;b=b|0;return r2(a,b<<4)|0}function Lka(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=(b|0)<0?-1:0;return b>>c-32|0}function Mka(a){a=a|0;return Bea(f[a+8>>2]|0)|0}function Nka(a){a=a|0;var b=0;b=a+16|0;f[b>>2]=f[b>>2]|1;if(!(f[a+20>>2]&1))return;else vb()}function Oka(a){a=a|0;M4(a);return}function Pka(a,b){a=a|0;b=b|0;gB(a,b+8|0);return}function Qka(a,b){a=a|0;b=b|0;return b>>>0<1106247679|(b|0)==1106247679&a>>>0<4292870145|(b|0)<0&(b>>>0<3220176896|(b|0)==-1074790400&a>>>0<0)|0}function Rka(a,b){a=a|0;b=b|0;return b>>>0<1105199103|(b|0)==1105199103&a>>>0<4290772993|(b|0)<0&(b>>>0<3252682752|(b|0)==-1042284544&a>>>0<1)|0}function Ska(a,b){a=a|0;b=b|0;if(!b)a=0;else a=Cn(a,b)|0;return a|0}function Tka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7220;return}function Uka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8412;return}function Vka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8484;return}function Wka(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9220;return}function Xka(a){a=a|0;zta(a+12|0);zta(a);return}function Yka(a,b){a=a|0;b=b|0;Xwa(a);f[a+28>>2]=b;return}function Zka(a,b){a=a|0;b=b|0;Oj(a,Asa(f[b>>2]|0)|0);return}function _ka(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;f[a+16>>2]=0;f[a+20>>2]=0;return}function $ka(a,b){a=a|0;b=b|0;wB(a,b+36|0);return}function ala(a,b){a=a|0;b=b|0;tB(a,b+36|0);return}function bla(a,b){a=a|0;b=b|0;vB(a,b+36|0);return}function cla(a){a=a|0;b1(f[a+44>>2]|0,a+48|0);return}function dla(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;f[a>>2]=c;f[a+4>>2]=d;f[a+8>>2]=e;b[a+12>>0]=0;return}function ela(){var a=0,b=0,c=0;a=nV(44)|0;b=a;c=b+44|0;do{f[b>>2]=0;b=b+4|0}while((b|0)<(c|0));Kva(a);return a|0}function fla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7400;return}function gla(a){a=a|0;return Zwa(a+32|0)|0}function hla(a){a=a|0;MV(f[a+4>>2]|0);return}function ila(a,b){a=a|0;b=b|0;f[b>>2]=8852;return}function jla(a,b){a=a|0;b=b|0;kB(a,b+8|0);return}function kla(a){a=a|0;b[a+76>>0]=1;b[a+77>>0]=1;b[a+79>>0]=1;if(!(b[a+24>>0]|0))b[a+78>>0]=1;return}function lla(a,b){a=a|0;b=b|0;b=b+36|0;a=Fq(a,f[b>>2]|0)|0;f[b>>2]=a;return}function mla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7892;return}function nla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9292;return}function ola(a,b){a=a|0;b=b|0;l$(a,24684);b=UAa(b,1)|0;Cg(a,f[b>>2]|0);return}function pla(a,b){a=a|0;b=b|0;TC(a,b+36|0);return}function qla(a,b){a=a|0;b=b|0;EB(a,b+36|0);return}function rla(a,b){a=a|0;b=b|0;FB(a,b+36|0);return}function sla(a,b){a=a|0;b=b|0;BB(a,b+36|0);return}function tla(a,b){a=a|0;b=b|0;f[a>>2]=b;if(b|0){b=nc(b)|0;f[a+4>>2]=b}return}function ula(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7148;return}function vla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=7508;return}function wla(a){a=a|0;Xwa(a);cJa(a+32|0);return}function xla(a){a=a|0;y=0;la(226,a|0)|0;a=y;y=0;if(a&1){a=ab(0)|0;lDa(a)}else return}function yla(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((b|0)==2){uAa(a,c);return}else Na(39935,39045,211,40207)}function zla(a,b){a=a|0;b=b|0;if((f[b>>2]|0)==1){Ysa(a,f[b+8>>2]|0,0);return}else Na(39999,39045,201,40221)}function Ala(a,b){a=a|0;b=b|0;qB(a,b+8|0);return}function Bla(a,b){a=a|0;b=b|0;lB(a,b+8|0);return}function Cla(a,b){a=a|0;b=b|0;mB(a,b+8|0);return}function Dla(a,b){a=a|0;b=b|0;nB(a,b+8|0);return}function Ela(a,b){a=a|0;b=b|0;f[a+4>>2]=b;if((b|0)==0?gKa(f[a+16>>2]|0)|0:0)dr(a);return}function Fla(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;OBa(a);return a|0}function Gla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8556;return}function Hla(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;aa(8);return 0}function Ila(a,b){a=a|0;b=b|0;Dq(a,f[b>>2]|0,f[b+4>>2]|0,68099);f[a>>2]=14836;return}function Jla(a,b){a=a|0;b=b|0;GB(a,b+36|0);return}function Kla(a,b){a=a|0;b=b|0;SC(a,b+36|0);return}function Lla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8304;return}function Mla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=9508;return}function Nla(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;return Kb[a&3](b|0,c|0,d|0,e|0,f|0,+g)|0}function Ola(a){a=a|0;var b=0;b=f[a>>2]|0;f[a>>2]=0;if(b|0){Cha(b);$Ja(b)}return}function Pla(a,b){a=a|0;b=b|0;sB(a,b+8|0);return}function Qla(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;YBa(a);return a|0}function Rla(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=6492;return}function Sla(){xJa();tFa();mHa();kHa();iHa();gHa();return}function Tla(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=u;u=u+16|0;e=d;f[e>>2]=c;c=gW(a,b,e)|0;u=d;return c|0}function Ula(a){a=a|0;pX(a+4|0);return}function Vla(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a+28>>2]=b;f[a+32>>2]=c;f[a+36>>2]=d;return a|0}function Wla(a,b){a=a|0;b=b|0;JB(a,b+36|0);return}function Xla(a,b){a=a|0;b=b|0;LB(a,b+36|0);return}function Yla(){var a=0;a=u;u=u+16|0;if(!(Ja(79476,407)|0)){u=a;return}else qra(71470,a)}function Zla(a){a=a|0;aV(a,f[a+4>>2]|0);return}function _la(a,b){a=a|0;b=b|0;if(b)b=f[(f[a+12>>2]|0)+4>>2]|0;else b=0;f[a+4>>2]=b;Faa(a);return}function $la(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;if(c>>>0>0|(c|0)==0&b>>>0>4294967295)Na(24282,24325,68,24336);else return}function ama(a,b){a=a|0;b=b|0;wB(a,b+8|0);return}function bma(a,b){a=a|0;b=b|0;tB(a,b+8|0);return}function cma(a,b){a=a|0;b=b|0;uB(a,b+8|0);return}function dma(a,b){a=a|0;b=b|0;vB(a,b+8|0);return}function ema(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;hCa(a);return a|0}function fma(a,b){a=a|0;b=b|0;b=gKa(f[b>>2]|0)|0;return qna(f[a+4>>2]|0,b)|0}function gma(a,b){a=a|0;b=b|0;b=gKa(f[b>>2]|0)|0;return jua(f[a+4>>2]|0,b)|0}function hma(a,b){a=a|0;b=b|0;ds(a,b,b+16|0,b+20|0,b+24|0);return}function ima(a){a=a|0;a=nV(8)|0;f[a>>2]=8852;return a|0}function jma(a,b){a=a|0;b=b|0;QB(a,b+36|0);return}function kma(a,b){a=a|0;b=b|0;b=gKa(f[b>>2]|0)|0;return yza(f[a+4>>2]|0,b)|0}function lma(a,b){a=a|0;b=b|0;return b>>>0<1139802112|(b|0)==1139802112&a>>>0<0|(b|0)<0&(b>>>0<3220176896|(b|0)==-1074790400&a>>>0<0)|0}function mma(a,b){a=a|0;b=b|0;return b>>>0<1138753536|(b|0)==1138753536&a>>>0<0|(b|0)<0&(b>>>0<3286237184|(b|0)==-1008730112&a>>>0<1)|0}function nma(a,b,c){a=a|0;b=b|0;c=c|0;a=a+48|0;c=M9(M9(f[a>>2]|0,c)|0,b)|0;f[a>>2]=c;return}function oma(a){a=a|0;Iba(a);Epa(a+16|0);f[a>>2]=7580;return}function pma(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Tb[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function qma(a,b){a=a|0;b=b|0;return cK(b,a)|0}function rma(a){a=a|0;if((b[74168]|0)==0?twa(74168)|0:0){Ml();f[19767]=78780}return f[19767]|0}function sma(a,b){a=a|0;b=b|0;f[b>>2]=8036;return}function tma(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==58149?a+4|0:0)|0}function uma(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==55989?a+4|0:0)|0}function vma(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==55003?a+4|0:0)|0}function wma(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;Jh(a,c);b[a+32>>0]=d&1;f[a+36>>2]=e;return}function xma(a,b,c){a=a|0;b=b|0;c=c|0;qya(a,b);f[a>>2]=7048;f[a+8>>2]=c;f[a+20>>2]=0;return}function yma(a,b){a=a|0;b=b|0;EB(a,b+8|0);return}function zma(a,b){a=a|0;b=b|0;FB(a,b+8|0);return}function Ama(a,b){a=a|0;b=b|0;BB(a,b+8|0);return}function Bma(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;vCa(a);return a|0}function Cma(a,b,c){a=a|0;b=b|0;c=c|0;Y1(a+4|0,gKa(f[c>>2]|0)|0);return}function Dma(a,b){a=a|0;b=b|0;zD(a,b);return}function Ema(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=8932;return}function Fma(a){a=a|0;a=78776;do{a=a+-12|0;jta(a)}while((a|0)!=78488);return}function Gma(a){a=a|0;a=77964;do{a=a+-12|0;zta(a)}while((a|0)!=77676);return}function Hma(){return nM(f[18677]|0)|0}function Ima(a){a=a|0;if((b[74088]|0)==0?twa(74088)|0:0){Nl();f[19564]=77968}return f[19564]|0}function Jma(a){a=a|0;if(sGa(f[f[a+12>>2]>>2]|0)|0)_ua(a);return}function Kma(a,c){a=a|0;c=c|0;Tna(a,(b[c+11>>0]|0)<0?f[c>>2]|0:c,0);return}function Lma(a,b){a=a|0;b=b|0;b=b+12|0;a=Fq(a,f[b>>2]|0)|0;f[b>>2]=a;return}function Mma(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=6584;return}function Nma(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=6728;return}function Oma(a){a=a|0;a=79068;do{a=a+-12|0;jta(a)}while((a|0)!=78780);return}function Pma(a){a=a|0;a=78256;do{a=a+-12|0;zta(a)}while((a|0)!=77968);return}function Qma(a){a=a|0;a=79240;do{a=a+-12|0;jta(a)}while((a|0)!=79072);return}function Rma(a){a=a|0;w6(a);return}function Sma(a){a=a|0;WZ(a);return}function Tma(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a>>2]=d;f[a+4>>2]=b;f[a+8>>2]=c;return}function Uma(a){a=a|0;if((b[74184]|0)==0?twa(74184)|0:0){lq();f[19810]=79072}return f[19810]|0}function Vma(a){a=a|0;if((b[74152]|0)==0?twa(74152)|0:0){IJ();f[19694]=78488}return f[19694]|0}function Wma(a,b){a=a|0;b=b|0;GB(a,b+8|0);return}function Xma(a){a=a|0;Iba(a);Xwa(a+16|0);f[a>>2]=6656;return}function Yma(a){a=a|0;return Vn(f[a>>2]|0)|0}function Zma(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];xL(a+4|0,b+4|0);return}function _ma(a,b,c){a=a|0;b=b|0;c=c|0;if(b|0)Kz(a|0,(oHa(c)|0)&255|0,b|0)|0;return a|0}function $ma(a){a=a|0;if((b[74104]|0)==0?twa(74104)|0:0){mq();f[19607]=78260}return f[19607]|0}function ana(a){a=a|0;if((b[74072]|0)==0?twa(74072)|0:0){KJ();f[19491]=77676}return f[19491]|0}function bna(a){a=a|0;F4(a+20|0);Sma(a);return}function cna(a,b){a=a|0;b=b|0;b=KM(a+88|0,b)|0;return f[b>>2]|0}function dna(a,b){a=a|0;b=b|0;Ema(a);f[a>>2]=8896;f[a+44>>2]=b;return}function ena(a){a=a|0;f[a>>2]=9148;Yha(a+16|0);wva(a);return}function fna(a){a=a|0;var b=0;b=nV(20)|0;_pa(b);f[a>>2]=b;return}function gna(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}J=a<<c-32;return 0}function hna(a){a=a|0;F6(a);return}function ina(a){a=a|0;a=f[a+12>>2]|0;if(a|0)$Ja(a);return}function jna(a,b){a=a|0;b=b|0;JB(a,b+8|0);return}function kna(a,b){a=a|0;b=b|0;KB(a,b+8|0);return}function lna(a,b){a=a|0;b=b|0;LB(a,b+8|0);return}function mna(a){a=a|0;if(f[18711]|0)Vea(76684,22050)|0;dra(a);return}function nna(a){a=a|0;a=78428;do{a=a+-12|0;zta(a)}while((a|0)!=78260);return}function ona(a){a=a|0;var b=0;b=nV(8)|0;f[b>>2]=9660;f[b+4>>2]=f[a+4>>2];return b|0}function pna(a,b){a=a|0;b=b|0;WB(a,b+36|0);return}function qna(a,b){a=a|0;b=b|0;b=a+b|0;return h[b>>0]|h[b+1>>0]<<8|h[b+2>>0]<<16|h[b+3>>0]<<24|0}function rna(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;n[a+16>>2]=1.0;return}function sna(a,b){a=a|0;b=b|0;QB(a,b+8|0);return}function tna(a,c){a=a|0;c=c|0;if((b[a+24>>0]|0)==0?((f[c+8>>2]|0)+-25|0)>>>0<8:0)b[a+78>>0]=1;return}function una(a){a=a|0;Iba(a);Hza(a+16|0);f[a>>2]=6800;return}function vna(a){a=a|0;var b=0;b=a+12|0;a=f[b>>2]|0;f[b>>2]=0;if(a|0){E4(a);$Ja(a)}return}function wna(a){a=a|0;return wH(a)|0}function xna(a){a=a|0;a=nV(8)|0;f[a>>2]=8036;return a|0}function yna(a,b){a=a|0;b=b|0;Vqa(f[b>>2]|0)|0;return}function zna(a){a=a|0;return zW(a)|0}function Ana(a){a=a|0;Iba(a);Epa(a+16|0);f[a>>2]=7964;return}function Bna(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=0;return b>>>c-32|0}function Cna(a,b){a=a|0;b=b|0;_Y(a,b);return}function Dna(a){a=a|0;if((b[a+27>>0]|0)==0?(b[a+76>>0]|0)==0:0)a=(b[a+77>>0]|0)!=0;else a=1;return a|0}function Ena(a){a=a|0;if(!((f[(f[a+8>>2]|0)+4>>2]|0)!=5?(f[(f[a+12>>2]|0)+4>>2]|0)!=5:0))f[a+4>>2]=5;return}function Fna(a){a=a|0;if(!((f[(f[a+20>>2]|0)+4>>2]|0)!=5?(f[(f[a+24>>2]|0)+4>>2]|0)!=5:0))f[a+4>>2]=5;return}function Gna(a,b){a=a|0;b=b|0;fra(f[b>>2]|0)|0;return}function Hna(a){a=a|0;if(!a)a=32;else{a=40247+((Y(a&0-a,125613361)|0)>>>27)|0;a=h[a>>0]|0}return a|0}function Ina(){var a=0;a=nV(16)|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;YCa(a);return a|0}function Jna(a,b){a=a|0;b=b|0;f[a+8>>2]=b;b=tn(f[a+12>>2]|0,b<<2)|0;f[a>>2]=b;return}function Kna(){PIa();CIa();AIa();yIa();wIa();return}function Lna(a,b){a=a|0;b=b|0;j$(a+-16|0,b);return}function Mna(a){a=a|0;f[a>>2]=6160;E4(a+16|0);sya(a+4|0);return}function Nna(a,b){a=a|0;b=b|0;Xwa(a);f[a+24>>2]=b;return}function Ona(a){a=a|0;UC(a);if((f[(f[a+28>>2]|0)+4>>2]|0)==5)f[a+4>>2]=5;return}function Pna(){var a=0;if(f[18711]|0)Vea(76684,22339)|0;a=nV(64)|0;bda(a);return a|0}function Qna(a){a=a|0;var b=0;iKa();b=f[19125]|0;f[a+56>>2]=b;if(b|0)f[b+52>>2]=a;f[19125]=a;eKa();return a|0}function Rna(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;d=d-c|0;return (d>>>0<e>>>0?d:e)|0}function Sna(a,b){a=a|0;b=b|0;f[b>>2]=9660;f[b+4>>2]=f[a+4>>2];return}function Tna(a,b,c){a=a|0;b=b|0;c=c|0;if(!b)Na(23177,23179,64,23214);else{re(a,b,c);return}}function Una(a,b){a=a|0;b=b|0;a=Uva(a)|0;f[a+8>>2]=b;_wa(a);return a|0}function Vna(a,b){a=a|0;b=b|0;gra(f[b>>2]|0)|0;return}function Wna(a,b){a=a|0;b=b|0;hC(a,b+36|0);return}function Xna(a){a=a|0;iya(a);rJa(a+12|0);rJa(a+16|0);f[a+32>>2]=0;return}function Yna(a){a=a|0;f[a>>2]=6248;return}function Zna(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=u;u=u+16|0;d=a;f[d>>2]=c;jt(10288,b,d)|0;u=a;return}function _na(a){a=a|0;a=a-(a>>>1&1431655765)|0;a=(a>>>2&858993459)+(a&858993459)|0;return (Y((a>>>4)+a&252645135,16843009)|0)>>>24|0}function $na(a,b){a=a|0;b=b|0;WB(a,b+8|0);return}function aoa(a,b){a=a|0;b=b|0;YB(a,b+8|0);return}function boa(a,b){a=a|0;b=b|0;a=a+16|0;if(bDa(f[a>>2]|0,f[b>>2]|0)|0)rJa(a);return}function coa(){FH(74424,CV(79324)|0);return}function doa(){FH(74416,CV(79316)|0);return}function eoa(){FH(74408,CV(79308)|0);return}function foa(){FH(74400,CV(79300)|0);return}function goa(a){a=a|0;Ora(a+4|0);return}function hoa(a,b,c){a=a|0;b=b|0;c=c|0;qya(a,b);f[a>>2]=6980;f[a+8>>2]=c;return}function ioa(a,b){a=a|0;b=b|0;pra(f[b>>2]|0)|0;return}function joa(a,b){a=a|0;b=b|0;kra(f[b>>2]|0)|0;return}function koa(a,b){a=a|0;b=b|0;lra(f[b>>2]|0)|0;return}function loa(a){a=a|0;f[a>>2]=8664;Ria(a+16|0);wva(a);return}function moa(a){a=a|0;Iba(a);Hza(a+16|0);f[a>>2]=8628;return}function noa(a){a=a|0;Iba(a);Epa(a+16|0);f[a>>2]=6420;return}function ooa(a){a=a|0;Iba(a);Epa(a+16|0);f[a>>2]=9436;return}function poa(){FH(74480,CV(79260)|0);return}function qoa(){FH(74464,CV(79252)|0);return}function roa(){FH(74448,CV(79244)|0);return}function soa(){FH(74432,CV(78432)|0);return}function toa(a){a=a|0;Csa(a+4|0);return}function uoa(a){a=a|0;U7(a);return}function voa(a){a=a|0;if(tJa(f[a>>2]|0)|0)return f[a+8>>2]|0;else Na(23410,51343,230,24501);return 0}function woa(a){a=a|0;f[a>>2]=8816;Sma(a+20|0);wva(a);return}function xoa(a,b){a=a|0;b=b|0;ZB(a,b+8|0);return}function yoa(a,b){a=a|0;b=b|0;ds(a,b,b+8|0,b+12|0,b+16|0);return}function zoa(){}function Aoa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (J=d,a-c>>>0|0)|0}function Boa(){FH(74360,CV(77620)|0);return}function Coa(){FH(74352,CV(77612)|0);return}function Doa(){FH(74344,CV(77604)|0);return}function Eoa(){FH(74336,CV(77580)|0);return}function Foa(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<128)a=(d[18668+(c<<1)>>1]&b)<<16>>16!=0;else a=0;return a|0}function Goa(a){a=a|0;if((f[a>>2]|0)==4)return +(+iIa(a+8|0));else Na(39903,23947,63,23968);return +(0.0)}function Hoa(a){a=a|0;if((f[a>>2]|0)==3)return +(+hIa(a+8|0));else Na(39967,23947,62,23961);return +(0.0)}function Ioa(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];uS(a+4|0,b+4|0);return}function Joa(a){a=a|0;m1(a);return}function Koa(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=0;f[a+8>>2]=b;f[a+12>>2]=0;f[a+16>>2]=c;return}function Loa(a,b){a=a|0;b=b|0;eC(a,b+8|0);return}function Moa(a,b){a=a|0;b=b|0;fC(a,b+8|0);return}function Noa(a,b){a=a|0;b=b|0;ura(f[b>>2]|0)|0;return}function Ooa(a,b){a=a|0;b=b|0;vra(f[b>>2]|0)|0;return}function Poa(a,b){a=a|0;b=b|0;wra(f[b>>2]|0)|0;return}function Qoa(a,c){a=a|0;c=c|0;if(nJa(c)|0){b[a+26>>0]=1;c=1}else c=0;return c|0}function Roa(a){a=+a;Mra(a)|0;if((J|0)<0)return 0;else return a<=18446744073709551616.0&(qJa(a)|0)|0;return 0}function Soa(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Yb[a&31](b|0,c|0,d|0,e|0,f|0)|0}function Toa(a){a=a|0;e2(a+4|0);return}function Uoa(a,b,c){a=a|0;b=b|0;c=c|0;return ((f[b>>2]|0)==(c|0)?(f[b+4>>2]|0)==(a|0):0)|0}function Voa(a,b){a=a|0;b=b|0;Era(f[b>>2]|0)|0;return}function Woa(a){a=a|0;var b=0;b=nV(24)|0;Spa(b);f[a>>2]=b;return}function Xoa(a,b){a=a|0;b=b|0;Lra(f[b>>2]|0)|0;return}function Yoa(a,b){a=a|0;b=b|0;hC(a,b+8|0);return}function Zoa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f[a>>2]=b;f[a+4>>2]=c;f[a+8>>2]=d;return}function _oa(a){a=a|0;var c=0;c=nV(172)|0;gI(c,(b[a+44>>0]|0)!=0,(b[a+45>>0]|0)!=0);return c|0}function $oa(a){a=a|0;var b=0,c=0;c=(iJ(a)|0)+1|0;b=rc(c)|0;if(!b)b=0;else rq(b|0,a|0,c|0)|0;return b|0}function apa(a){a=a|0;return wza(a+32|0)|0}function bpa(a,b){a=a|0;b=b|0;N2(a,b);return}function cpa(a){a=a|0;hpa(a);oCa(a+104|0);return}function dpa(a){a=a|0;Cta(a+24|0);Rua(a);return}function epa(a,b){a=a|0;b=b|0;return r2(a,b*24|0)|0}function fpa(a,b){a=a|0;b=b|0;if(!b)b=0;else b=ts(f[b>>2]|0,f[b+4>>2]|0,a)|0;return (b|0?b:a)|0}function gpa(){var a=0;if((b[74032]|0)==0?twa(74032)|0:0){a=Iy(2147483647,68349,0)|0;f[19391]=a}return f[19391]|0}function hpa(a){a=a|0;f[a>>2]=9880;f[a+104>>2]=9900;_I(a+4|0);return}function ipa(a){a=a|0;f[a>>2]=6348;return}function jpa(a){a=a|0;if(gIa(f[a>>2]|0)|0)return a|0;else Na(51441,51392,79,51456);return 0}function kpa(a,b,c){a=a|0;b=b|0;c=c|0;qya(a,b);f[a>>2]=7088;f[a+8>>2]=c;return}function lpa(a,b){a=a|0;b=b|0;lY(a+-16|0,f[b>>2]|0);return}function mpa(a,c){a=a|0;c=c|0;b[a+8>>0]=c&1;f[a+12>>2]=c?83563:72117;f[a+16>>2]=c?83563:60408;return}function npa(a){a=a|0;Vka(a);f[a>>2]=8448;f[a+44>>2]=0;return}function opa(a){a=a|0;Tra(a,2);f[a>>2]=6912;f[a+20>>2]=0;ija(a+24|0);return}function ppa(a){a=a|0;return bga(f[a>>2]|0,f[a+4>>2]|0)|0}function qpa(a){a=a|0;cpa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function rpa(a){a=a|0;pva(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function spa(a,b){a=a|0;b=b|0;f[a>>2]=9832;f[a+4>>2]=b;f[a+16>>2]=a;return}function tpa(a,b){a=a|0;b=b|0;f[a>>2]=9788;f[a+4>>2]=b;f[a+16>>2]=a;return}function upa(a,b){a=a|0;b=b|0;f[a>>2]=9744;f[a+4>>2]=b;f[a+16>>2]=a;return}function vpa(a){a=a|0;aha(a);return}function wpa(a){a=a|0;if(aga(a)|0)Zba(a);return}function xpa(a){a=a|0;Cg(a,f[a+24>>2]|0);b[(f[a+4>>2]|0)+(f[a+12>>2]|0)>>0]=0;return}function ypa(a,b){a=a|0;b=b|0;Xra(f[b>>2]|0)|0;return}function zpa(a,b){a=a|0;b=b|0;Qra(f[b>>2]|0)|0;return}function Apa(a,b){a=a|0;b=b|0;Rra(f[b>>2]|0)|0;return}function Bpa(a,b){a=a|0;b=b|0;Sra(f[b>>2]|0)|0;return}function Cpa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (a|0)!=(c|0)|(b|0)!=(d|0)|0}function Dpa(a,b){a=a|0;b=b|0;MF(a+120|0,a+104|0);return}function Epa(a){a=a|0;Xwa(a);f[a+24>>2]=0;f[a+28>>2]=0;f[a+32>>2]=0;return}function Fpa(a){a=a|0;if(!a)return 0;else{a=f[a+4>>2]|0;return ((a|0)==5?0:a)|0}return 0}function Gpa(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;return cc[a&7](b|0,c|0,d|0,e|0,+f)|0}function Hpa(a){a=a|0;Kwa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Ipa(a){a=a|0;xva(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Jpa(a){a=a|0;Lwa(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Kpa(a){a=a|0;yva(a+(f[(f[a>>2]|0)+-12>>2]|0)|0);return}function Lpa(){if((b[74680]|0)==0?twa(74680)|0:0){Eua();f[19848]=79388}return f[19848]|0}function Mpa(){if((b[74512]|0)==0?twa(74512)|0:0){jxa();f[19846]=79380}return f[19846]|0}function Npa(a,b){a=a|0;b=b|0;Yra(f[b>>2]|0)|0;return}function Opa(a,b){a=a|0;b=b|0;Zra(f[b>>2]|0)|0;return}function Ppa(a,b){a=a|0;b=b|0;_ra(f[b>>2]|0)|0;return}function Qpa(a,b){a=a|0;b=b|0;jsa(f[b>>2]|0)|0;return}function Rpa(a,b){a=a|0;b=b|0;ksa(f[b>>2]|0)|0;return}function Spa(a){a=a|0;cJa(a);cJa(a+4|0);cJa(a+8|0);cJa(a+16|0);f[a+20>>2]=0;return}function Tpa(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;aa(14)}function Upa(a,b){a=a|0;b=b|0;PDa(a,b);ija(a+4|0);return}function Vpa(a){a=a|0;oia(a);$Ja(a);return}function Wpa(a){a=a|0;pia(a);$Ja(a);return}function Xpa(a){a=a|0;if(aJa(f[a>>2]|0)|0)return a+8|0;else Na(24571,51343,238,24582);return 0}function Ypa(a,b,c){a=a|0;b=b|0;c=c|0;KN(a,b,c,0);return}function Zpa(a){a=a|0;k$(a+16|0);return}function _pa(a){a=a|0;cJa(a);a=a+4|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;return}function $pa(a,b){a=a|0;b=b|0;var c=0;c=a+4|0;f[c>>2]=(f[c>>2]|0)+b;return a|0}function aqa(a,b){a=a|0;b=b|0;return ((f[b+8>>2]|0)-(f[b+4>>2]|0)>>2)+a|0}function bqa(a){a=a|0;gza(a);gza(a+12|0);f[a+24>>2]=0;f[a+28>>2]=0;f[a+32>>2]=0;return}function cqa(a,b){a=a|0;b=b|0;rsa(f[b>>2]|0)|0;return}function dqa(a,b){a=a|0;b=b|0;lsa(f[b>>2]|0)|0;return}function eqa(a,b){a=a|0;b=b|0;msa(f[b>>2]|0)|0;return}function fqa(a,b){a=a|0;b=b|0;nsa(f[b>>2]|0)|0;return}function gqa(a,b){a=a|0;b=b|0;ssa(f[b>>2]|0)|0;return}function hqa(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];xH(a+4|0,b+4|0);return}function iqa(a){a=a|0;Hya(a);cJa(a+8|0);f[a+12>>2]=0;f[a+16>>2]=0;return}function jqa(a,b){a=a|0;b=b|0;HK(a,b,f[b+36>>2]|0);return}function kqa(a,b){a=a|0;b=b|0;pla(a,b);return}function lqa(a,b){a=a|0;b=b|0;f[a+132>>2]=b;return}function mqa(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;fAa(a);return}function nqa(a){a=a|0;var b=0;b=tn(a,32)|0;lia(b,a);return b|0}function oqa(a){a=a|0;Sia(a+-8|0);return}function pqa(a){a=a|0;qqa(a+-8|0);return}function qqa(a){a=a|0;Sia(a);$Ja(a);return}function rqa(a){a=a|0;return 2088}function sqa(a,b){a=a|0;b=b|0;return ((f[b+4>>2]|0)==51009?a+4|0:0)|0}function tqa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (gca(a,b,c,d)|0)^1|0}function uqa(a){a=a|0;if(tJa(f[a>>2]|0)|0)return a+8|0;else Na(23410,51343,234,23421);return 0}function vqa(a){a=a|0;jya(a);rJa(a+12|0);rJa(a+16|0);return}function wqa(a,b){a=a|0;b=b|0;wk(a,b,b+12|0,0,0)|0;return}function xqa(a,b){a=a|0;b=b|0;jS(a);f[a>>2]=0;jBa(a+8|0,b);return a|0}function yqa(a,b){a=a|0;b=b|0;tsa(f[b>>2]|0)|0;return}function zqa(a){a=a|0;Mma(a);f[a>>2]=6548;nka(a+44|0);return}function Aqa(a,b){a=a|0;b=b|0;qX(a,b);return}function Bqa(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Jb[a&7](b|0,c|0,d|0,e|0,f|0)}function Cqa(a){a=a|0;if((a+-97&255)<26)return 1;else return a<<24>>24==36|(a<<24>>24==95|(a+-65&255)<26)|0;return 0}function Dqa(a){a=a|0;f[a>>2]=6548;i6(a+44|0);Uqa(a);return}function Eqa(a){a=a|0;Tra(a,1);f[a>>2]=6872;gua(a+20|0);return}function Fqa(a){a=a|0;return lua(a)|0}function Gqa(a){a=a|0;return xya(a)|0}function Hqa(a){a=a|0;Iba(a);f[a>>2]=9148;gua(a+16|0);return}function Iqa(a,b){a=a|0;b=b|0;ug(a+-16|0,b);return}function Jqa(a,b){a=a|0;b=b|0;Epa(a);cJa(a+36|0);f[a+40>>2]=b;return}function Kqa(a){a=a|0;F4(a+12|0);zta(a);return}function Lqa(a,b){a=a|0;b=b|0;wk(a,b,b+24|0,0,0)|0;return}function Mqa(a){a=a|0;var b=0;b=tn(a,28)|0;Lia(b,a);return b|0}function Nqa(a){a=a|0;f[a>>2]=8852;f[a+16>>2]=a;return}function Oqa(a){a=a|0;if(bJa(f[a>>2]|0)|0)return a|0;else Na(51381,51392,74,51432);return 0}function Pqa(a){a=a|0;return ((f[a+24>>2]|0)-(f[a+20>>2]|0)>>2)+((f[a+12>>2]|0)-(f[a+8>>2]|0)>>2)|0}function Qqa(a,b){a=a|0;b=b|0;Asa(f[b>>2]|0)|0;return}function Rqa(a,b){a=a|0;b=b|0;wk(a,b,b+8|0,0,0)|0;return}function Sqa(a,b){a=a|0;b=b|0;Iba(a);f[a>>2]=7688;f[a+16>>2]=b;return}function Tqa(a){a=a|0;b[a>>0]=0;b[a+1>>0]=0;a=a+4|0;f[a>>2]=0;f[a+4>>2]=0;d[a+8>>1]=0;return}function Uqa(a){a=a|0;Rua(a+16|0);wva(a);return}function Vqa(a){a=a|0;if((f[a>>2]|0)==24)return a|0;else Na(24726,24325,210,24757);return 0}function Wqa(a){a=a|0;Mea(a);$Ja(a);return}function Xqa(a){a=a|0;if((f[a>>2]|0)==3)return f[a+8>>2]|0;else Na(39967,23947,67,24252);return 0}function Yqa(a,b){a=a|0;b=b|0;f[a>>2]=b;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;return}function Zqa(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;f[a+4>>2]=0;f[a+8>>2]=c;return}function _qa(a,b){a=a|0;b=b|0;return (xra(a,b)|0)!=0|0}function $qa(a){a=a|0;j0(f[a+4>>2]|0);return}function ara(a,b,c){a=a|0;b=b|0;c=c|0;if(!c)a=0;else a=jT(a,b,c)|0;return a|0}function bra(a,b){a=a|0;b=b|0;f[a+8>>2]=b;b=tn(75352,b<<2)|0;f[a>>2]=b;return}function cra(a,b){a=a|0;b=b|0;return Gj(a,b,0)|0}function dra(a){a=a|0;cK(a,76684)|0;return}function era(a,b){a=a|0;b=b|0;f[a+52>>2]=b;return}function fra(a){a=a|0;if((f[a>>2]|0)==8)return a|0;else Na(24726,24325,210,24757);return 0}function gra(a){a=a|0;if((f[a>>2]|0)==23)return a|0;else Na(24726,24325,210,24757);return 0}function hra(a){a=a|0;D8(a+8|0);return}function ira(a,b){a=a|0;b=b|0;b=M9(f[a>>2]|0,b)|0;f[a>>2]=b;return}function jra(a,c){a=a|0;c=c|0;b[a>>0]=2;b[a+1>>0]=3;b[a+2>>0]=0;b[a+3>>0]=4;return}function kra(a){a=a|0;if((f[a>>2]|0)==27)return a|0;else Na(24726,24325,210,24757);return 0}function lra(a){a=a|0;if((f[a>>2]|0)==26)return a|0;else Na(24726,24325,210,24757);return 0}function mra(a){a=a|0;Y3(f[f[a>>2]>>2]|0);return}function nra(a){a=a|0;if(!(f[a+16>>2]|0))a=(f[a+12>>2]|0)==0;else a=0;return a|0}function ora(a,b){a=a|0;b=b|0;bL(a,b);return}function pra(a){a=a|0;if((f[a>>2]|0)==7)return a|0;else Na(24726,24325,210,24757);return 0}function qra(a,b){a=a|0;b=b|0;var c=0;c=u;u=u+16|0;f[c>>2]=b;jt(10288,a,c)|0;GN();Ka()}function rra(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f[e>>2]=c;return 3}function sra(a,b){a=a|0;b=b|0;return rk(a,b)|0}function tra(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];eK(a+4|0,b+4|0);return}function ura(a){a=a|0;if((f[a>>2]|0)==12)return a|0;else Na(24726,24325,210,24757);return 0}function vra(a){a=a|0;if((f[a>>2]|0)==11)return a|0;else Na(24726,24325,210,24757);return 0}function wra(a){a=a|0;if((f[a>>2]|0)==25)return a|0;else Na(24726,24325,210,24757);return 0}function xra(a,b){a=a|0;b=b|0;return QZ(a,b)|0}function yra(a,b){a=a|0;b=b|0;a=Nta(a)|0;f[a+8>>2]=b;return a|0}function zra(a,b){a=a|0;b=b|0;return u1(gKa(f[a+32>>2]|0)|0,b)|0}function Ara(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];ZH(a+4|0,b+4|0);return}function Bra(a,b){a=a|0;b=b|0;pn(a,b);return}function Cra(a){a=a|0;zca(a+4|0);return}function Dra(a){a=a|0;wsa(a+16|0);wva(a);return}function Era(a){a=a|0;if((f[a>>2]|0)==10)return a|0;else Na(24726,24325,210,24757);return 0}function Fra(a){a=a|0;var b=0;b=tn(a,40)|0;ica(b,a);return b|0}function Gra(a){a=a|0;f[a>>2]=8036;f[a+16>>2]=a;return}function Hra(a){a=a|0;if(qIa(b[a>>0]|0)|0)a=(b[a+24>>0]|0)!=0;else a=0;return a|0}function Ira(a,b,c){a=a|0;b=b|0;c=c|0;return bDa(a,b)|0}function Jra(a){a=a|0;return (cra(a,1)|0)!=0|0}function Kra(a){a=a|0;Iba(a);f[a>>2]=8664;gua(a+16|0);return}function Lra(a){a=a|0;if((f[a>>2]|0)==9)return a|0;else Na(24726,24325,210,24757);return 0}function Mra(a){a=+a;var b=0;p[s>>3]=a;b=f[s>>2]|0;J=f[s+4>>2]|0;return b|0}function Nra(a){a=a|0;var c=0;f[a>>2]=17472;c=f[a+8>>2]|0;if(c|0?b[a+12>>0]|0:0)ZJa(c);return}function Ora(a){a=a|0;Zja(a);return}function Pra(a){a=a|0;D8(a+16|0);zta(a);return}function Qra(a){a=a|0;if((f[a>>2]|0)==18)return a|0;else Na(24726,24325,210,24757);return 0}function Rra(a){a=a|0;if((f[a>>2]|0)==20)return a|0;else Na(24726,24325,210,24757);return 0}function Sra(a){a=a|0;if((f[a>>2]|0)==17)return a|0;else Na(24726,24325,210,24757);return 0}function Tra(a,b){a=a|0;b=b|0;f[a>>2]=6892;f[a+4>>2]=-1;f[a+8>>2]=0;f[a+16>>2]=b;return}function Ura(a){a=a|0;var b=0;b=tn(a,36)|0;g6(b,a);return b|0}function Vra(a,b){a=a|0;b=+b;p[a+16>>3]=b;return}function Wra(a){a=a|0;if(qIa(b[a>>0]|0)|0)a=(b[a+25>>0]|0)!=0;else a=0;return a|0}function Xra(a){a=a|0;if((f[a>>2]|0)==5)return a|0;else Na(24726,24325,210,24757);return 0}function Yra(a){a=a|0;if((f[a>>2]|0)==16)return a|0;else Na(24726,24325,210,24757);return 0}function Zra(a){a=a|0;if((f[a>>2]|0)==14)return a|0;else Na(24726,24325,210,24757);return 0}function _ra(a){a=a|0;if((f[a>>2]|0)==15)return a|0;else Na(24726,24325,210,24757);return 0}function $ra(a){a=a|0;a=tn(a,28)|0;wca(a);return a|0}function asa(){return gT()|0}function bsa(a){a=a|0;return 2952}function csa(a){a=a|0;if((f[a>>2]|0)==1)return f[a+8>>2]|0;else Na(39999,23947,60,24238);return 0}function dsa(){var a=0;a=nV(196)|0;Kz(a|0,0,196)|0;Txa(a);return a|0}function esa(a,b){a=a|0;b=b|0;dt(a,b);return}function fsa(a,b){a=a|0;b=b|0;et(a,b);return}function gsa(a){a=a|0;ms(a+24|0,a+12|0);return}function hsa(a,b){a=a|0;b=b|0;return ZN(a,b)|0}function isa(a){a=a|0;$ia(a);f[a>>2]=7760;return}function jsa(a){a=a|0;if((f[a>>2]|0)==4)return a|0;else Na(24726,24325,210,24757);return 0}function ksa(a){a=a|0;if((f[a>>2]|0)==1)return a|0;else Na(24726,24325,210,24757);return 0}function lsa(a){a=a|0;if((f[a>>2]|0)==13)return a|0;else Na(24726,24325,210,24757);return 0}function msa(a){a=a|0;if((f[a>>2]|0)==21)return a|0;else Na(24726,24325,210,24757);return 0}function nsa(a){a=a|0;if((f[a>>2]|0)==19)return a|0;else Na(24726,24325,210,24757);return 0}function osa(a){a=a|0;var b=0;b=tn(a,28)|0;Hja(b,a);return b|0}function psa(a){a=a|0;var b=0;b=f[2650]|0;if(a|0)f[2650]=(a|0)==(-1|0)?76428:a;return ((b|0)==76428?-1:b)|0}function qsa(a){a=a|0;var b=0;b=f[a>>2]|0;if((b|0)!=(gpa()|0))LDa(f[a>>2]|0);return}function rsa(a){a=a|0;if((f[a>>2]|0)==3)return a|0;else Na(24726,24325,210,24757);return 0}function ssa(a){a=a|0;if((f[a>>2]|0)==6)return a|0;else Na(24726,24325,210,24757);return 0}function tsa(a){a=a|0;if((f[a>>2]|0)==22)return a|0;else Na(24726,24325,210,24757);return 0}function usa(a){a=a|0;J4(a+36|0);wsa(a);return}function vsa(a){a=a|0;Epa(a);e9(a+36|0);return}function wsa(a){a=a|0;E4(a+24|0);Rua(a);return}function xsa(a){a=a|0;var b=0;b=tn(a,32)|0;Fja(b,a);return b|0}function ysa(a){a=a|0;var b=0;b=tn(a,28)|0;Qja(b,a);return b|0}function zsa(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return _b[a&31](b|0,c|0,d|0,e|0)|0}function Asa(a){a=a|0;if((f[a>>2]|0)==2)return a|0;else Na(24726,24325,210,24757);return 0}function Bsa(a){a=a|0;a=UJa(a|0)|0;if(!a)return;else kX(a,70540)}function Csa(a){a=a|0;hla(a);return}function Dsa(a,b,c){a=a|0;b=b|0;c=c|0;$b[f[(f[c>>2]|0)+24>>2]&255](a,c,b);return}function Esa(a,b){a=a|0;b=b|0;l$(a,voa(gKa(b)|0)|0);return}function Fsa(a,b,c){a=a|0;b=b|0;c=c|0;VBa(a,b);f[a+4>>2]=c;return}function Gsa(a){a=a|0;a=tn(a,8)|0;dDa(a);return a|0}function Hsa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (J=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function Isa(a){a=a|0;a=tn(a,16)|0;mqa(a);return a|0}function Jsa(a){a=a|0;a=tn(a,24)|0;Kha(a);return a|0}function Ksa(){FH(74264,CV(79364)|0);return}function Lsa(){FH(74272,CV(79372)|0);return}function Msa(a,b){a=a|0;b=b|0;zD(a,b+16|0);return}function Nsa(a,b){a=a|0;b=b|0;zD(a,b+12|0);return}function Osa(){var a=0;a=tn(75352,24)|0;o5(a);return a|0}function Psa(a,b){a=a|0;b=b|0;jX(a,b);return a|0}
function Ic(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,i=0,j=0,k=0,l=0.0,m=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0;O=u;u=u+288|0;I=O+8|0;K=O+17|0;L=O;M=O+16|0;e=b[c>>0]|0;a:do if(e<<24>>24){z=a+4|0;A=a+100|0;B=a+108|0;C=a+8|0;D=K+10|0;E=K+33|0;y=I+4|0;F=K+46|0;G=K+94|0;H=K+1|0;j=c;t=0;c=0;i=0;g=0;b:while(1){c:do if(!(kEa(e&255)|0)){e=e<<24>>24==37;d:do if(e){m=j+1|0;k=b[m>>0]|0;e:do switch(k<<24>>24){case 37:break d;case 42:{x=0;j=j+2|0;break}default:{e=(k&255)+-48|0;if(e>>>0<10?(b[j+2>>0]|0)==36:0){x=V$(d,e)|0;j=j+3|0;break e}j=(f[d>>2]|0)+(4-1)&~(4-1);x=f[j>>2]|0;f[d>>2]=j+4;j=m}}while(0);e=b[j>>0]|0;k=e&255;if((k+-48|0)>>>0<10){m=0;do{m=(m*10|0)+-48+k|0;j=j+1|0;e=b[j>>0]|0;k=e&255}while((k+-48|0)>>>0<10)}else m=0;e=e<<24>>24==109;w=(x|0)!=0;i=e?0:i;g=e?0:g;j=e?j+1|0:j;e=w&e;k=j+1|0;switch(b[j>>0]|0){case 104:{v=(b[k>>0]|0)==104;o=v?-2:-1;j=v?j+2|0:k;break}case 108:{v=(b[k>>0]|0)==108;o=v?3:1;j=v?j+2|0:k;break}case 106:{o=3;j=k;break}case 116:case 122:{o=1;j=k;break}case 76:{o=2;j=k;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{o=0;break}default:{N=135;break b}}r=h[j>>0]|0;s=(r&47|0)==3;r=s?r|32:r;s=s?1:o;q=r&255;switch(q<<24>>24){case 99:{m=(m|0)>1?m:1;break}case 91:break;case 110:{oO(x,s,t,((t|0)<0)<<31>>31);k=t;break c}default:{z9(a,0);do{k=f[z>>2]|0;if(k>>>0<(f[A>>2]|0)>>>0){f[z>>2]=k+1;k=h[k>>0]|0}else k=kz(a)|0}while((kEa(k)|0)!=0);if(!(f[A>>2]|0))k=f[z>>2]|0;else{k=(f[z>>2]|0)+-1|0;f[z>>2]=k}t=(f[B>>2]|0)+t+k-(f[C>>2]|0)|0}}z9(a,m);k=f[z>>2]|0;o=f[A>>2]|0;if(k>>>0<o>>>0)f[z>>2]=k+1;else{if((kz(a)|0)<0){N=135;break b}o=f[A>>2]|0}if(o|0)f[z>>2]=(f[z>>2]|0)+-1;f:do switch(q<<24>>24){case 91:case 99:case 115:{v=(r|0)==99;g:do if((r|16|0)==115){Kz(H|0,-1,256)|0;b[K>>0]=0;if((r|0)==115){b[E>>0]=0;b[D>>0]=0;b[D+1>>0]=0;b[D+2>>0]=0;b[D+3>>0]=0;b[D+4>>0]=0}}else{k=j+1|0;r=(b[k>>0]|0)==94;q=r&1;j=r?j+2|0:k;Kz(H|0,r&1|0,256)|0;b[K>>0]=0;switch(b[j>>0]|0){case 45:{k=F;N=62;break}case 93:{k=G;N=62;break}default:r=(q^1)&255}if((N|0)==62){N=0;r=(q^1)&255;b[k>>0]=r;j=j+1|0}while(1){k=b[j>>0]|0;h:do switch(k<<24>>24){case 0:{N=135;break b}case 93:break g;case 45:{q=j+1|0;k=b[q>>0]|0;switch(k<<24>>24){case 93:case 0:{k=45;break h}default:{}}j=b[j+-1>>0]|0;if((j&255)<(k&255)){j=j&255;do{j=j+1|0;b[K+j>>0]=r;k=b[q>>0]|0}while((j|0)<(k&255|0));j=q}else j=q;break}default:{}}while(0);b[K+((k&255)+1)>>0]=r;j=j+1|0}}while(0);k=v?m+1|0:31;r=(s|0)==1;i:do if(r){if(e){g=rc(k<<2)|0;if(!g){i=0;g=0;e=1;N=135;break b}}else g=x;f[I>>2]=0;f[y>>2]=0;q=k;i=0;j:while(1){o=(g|0)==0;do{k:while(1){k=f[z>>2]|0;if(k>>>0<(f[A>>2]|0)>>>0){f[z>>2]=k+1;k=h[k>>0]|0}else k=kz(a)|0;if(!(b[K+(k+1)>>0]|0))break j;b[M>>0]=k;switch($p(L,M,1,I)|0){case -1:{i=0;N=135;break b}case -2:break;default:break k}}if(!o){f[g+(i<<2)>>2]=f[L>>2];i=i+1|0}}while(!(e&(i|0)==(q|0)));i=q<<1|1;k=LM(g,i<<2)|0;if(!k){i=0;e=1;N=135;break b}else{s=q;q=i;g=k;i=s}}if(!(vya(I)|0)){i=0;N=135;break b}else{k=i;i=0;q=g}}else{if(e){i=rc(k)|0;if(!i){i=0;g=0;e=1;N=135;break b}else{o=k;g=0}while(1){do{k=f[z>>2]|0;if(k>>>0<(f[A>>2]|0)>>>0){f[z>>2]=k+1;k=h[k>>0]|0}else k=kz(a)|0;if(!(b[K+(k+1)>>0]|0)){k=g;q=0;g=0;break i}b[i+g>>0]=k;g=g+1|0}while((g|0)!=(o|0));g=o<<1|1;k=LM(i,g)|0;if(!k){g=0;e=1;N=135;break b}else{s=o;o=g;i=k;g=s}}}if(!x){i=o;while(1){g=f[z>>2]|0;if(g>>>0<i>>>0){f[z>>2]=g+1;g=h[g>>0]|0}else g=kz(a)|0;if(!(b[K+(g+1)>>0]|0)){k=0;i=0;q=0;g=0;break i}i=f[A>>2]|0}}else{k=0;i=o;while(1){g=f[z>>2]|0;if(g>>>0<i>>>0){f[z>>2]=g+1;g=h[g>>0]|0}else g=kz(a)|0;if(!(b[K+(g+1)>>0]|0)){i=x;q=0;g=0;break i}b[x+k>>0]=g;k=k+1|0;i=f[A>>2]|0}}}while(0);if(!(f[A>>2]|0))o=f[z>>2]|0;else{o=(f[z>>2]|0)+-1|0;f[z>>2]=o}o=o-(f[C>>2]|0)+(f[B>>2]|0)|0;if(!o){N=137;break b}if(!((o|0)==(m|0)|v^1)){N=137;break b}do if(e)if(r){f[x>>2]=q;break}else{f[x>>2]=i;break}while(0);if(!v){if(q|0)f[q+(k<<2)>>2]=0;if(!i)i=0;else b[i+k>>0]=0}break}case 120:case 88:case 112:{k=16;N=123;break}case 111:{k=8;N=123;break}case 117:case 100:{k=10;N=123;break}case 105:{k=0;N=123;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{l=+Hg(a,s,0);if((f[B>>2]|0)==((f[C>>2]|0)-(f[z>>2]|0)|0)){N=137;break b}if(x)switch(s|0){case 0:{n[x>>2]=l;break f}case 1:{p[x>>3]=l;break f}case 2:{p[x>>3]=l;break f}default:break f}break}default:{}}while(0);do if((N|0)==123){N=0;k=Ke(a,k,0,-1,-1)|0;if((f[B>>2]|0)==((f[C>>2]|0)-(f[z>>2]|0)|0)){N=137;break b}if(w&(r|0)==112){f[x>>2]=k;break}else{oO(x,s,k,J);break}}while(0);c=(w&1)+c|0;k=(f[B>>2]|0)+t+(f[z>>2]|0)-(f[C>>2]|0)|0;break c}while(0);j=j+(e&1)|0;z9(a,0);e=f[z>>2]|0;if(e>>>0<(f[A>>2]|0)>>>0){f[z>>2]=e+1;e=h[e>>0]|0}else e=kz(a)|0;if((e|0)!=(h[j>>0]|0)){N=20;break b}k=t+1|0}else{while(1){e=j+1|0;if(!(kEa(h[e>>0]|0)|0))break;else j=e}z9(a,0);do{e=f[z>>2]|0;if(e>>>0<(f[A>>2]|0)>>>0){f[z>>2]=e+1;e=h[e>>0]|0}else e=kz(a)|0}while((kEa(e)|0)!=0);if(!(f[A>>2]|0))e=f[z>>2]|0;else{e=(f[z>>2]|0)+-1|0;f[z>>2]=e}k=(f[B>>2]|0)+t+e-(f[C>>2]|0)|0}while(0);j=j+1|0;e=b[j>>0]|0;if(!(e<<24>>24))break a;else t=k}if((N|0)==20){if(f[A>>2]|0)f[z>>2]=(f[z>>2]|0)+-1;if((c|0)!=0|(e|0)>-1)break;else{e=0;N=136}}else if((N|0)==135){e=e&1;if(!c)N=136}else if((N|0)==137)e=e&1;if((N|0)==136)c=-1;if(e){Xe(i);Xe(g)}}else c=0;while(0);u=O;return c|0}function Jc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0;w=u;u=u+80|0;t=w+72|0;q=w+68|0;e=w+52|0;z=w+36|0;r=w+56|0;o=w+48|0;s=w+24|0;p=w+20|0;g=w+16|0;v=w+12|0;x=w;d=rr(lj(c,0)|0)|0;a:do if(!(bDa(d,f[18752]|0)|0)){if(!(aDa(d,f[18763]|0)|0)){cJa(q);cJa(e);i=xs(c,q,e)|0;d=f[q>>2]|0;if(!(pJa(d)|0)){d=EI(f[a+44>>2]|0)|0;f[q>>2]=d}e=a+12|0;h=f[e>>2]|0;if((h|0)==(f[a+16>>2]|0))XC(a+8|0,q);else{f[h>>2]=d;f[e>>2]=(f[e>>2]|0)+4}n=a+44|0;f[n>>2]=(f[n>>2]|0)+1;n=a+52|0;l=KM(n,q)|0;f[l>>2]=0;f[z>>2]=0;l=z+4|0;f[l>>2]=0;f[z+8>>2]=0;m=z+8|0;d=0;b:while(1){y=0;e=la(202,c|0)|0;k=y;y=0;if(k&1){l=26;break}if(i>>>0>=e>>>0){l=82;break}y=0;k=ua(51,c|0,i|0)|0;j=y;y=0;if(j&1){l=26;break}y=0;e=ua(51,k|0,0)|0;j=y;y=0;if(j&1){l=27;break}y=0;e=la(203,e|0)|0;j=y;y=0;if(j&1){l=27;break}c:do if(!(bDa(e,f[18761]|0)|0)){if(bDa(e,f[18752]|0)|0){y=0;d=ua(51,k|0,1)|0;j=y;y=0;if(j&1){l=28;break b}y=0;d=ua(138,a|0,d|0)|0;j=y;y=0;if(j&1){l=28;break b}e=f[a>>2]|0;f[o>>2]=d;y=0;f[t>>2]=f[o>>2];e=ua(139,e|0,t|0)|0;j=y;y=0;if(j&1){l=50;break b}if(!e){l=42;break b}k=f[a>>2]|0;f[p>>2]=d;y=0;f[t>>2]=f[p>>2];d=ua(107,k|0,t|0)|0;k=y;y=0;if(k&1){l=50;break b}e=f[d+4>>2]|0;y=0;h=ua(137,n|0,q|0)|0;k=y;y=0;if(k&1){l=50;break b}f[h>>2]=e;break}if(bDa(e,f[18762]|0)|0){y=0;e=la(202,k|0)|0;j=y;y=0;if(j&1){l=28;break b}if(e>>>0>1){y=0;e=ua(51,k|0,1)|0;j=y;y=0;if(j&1){l=69;break b}if(Hra(e)|0){y=0;e=ua(51,k|0,2)|0;k=y;y=0;if(k&1){l=70;break b}y=0;e=la(203,e|0)|0;k=y;y=0;if(k&1){l=70;break b}y=0;e=ua(136,e|0,1)|0;k=y;y=0;if(k&1){l=70;break b}f[t>>2]=e;h=f[l>>2]|0;if(h>>>0>=(f[m>>2]|0)>>>0){y=0;ja(73,z|0,t|0);k=y;y=0;if(k&1){l=70;break b}}else{f[h>>2]=e;f[l>>2]=h+4}break}else h=1;while(1){y=0;e=la(202,k|0)|0;j=y;y=0;if(j&1){l=69;break b}if(h>>>0>=e>>>0)break c;j=h+1|0;y=0;e=ua(51,k|0,h|0)|0;h=y;y=0;if(h&1){l=80;break b}y=0;e=la(203,e|0)|0;h=y;y=0;if(h&1){l=80;break b}y=0;e=ua(136,e|0,1)|0;h=y;y=0;if(h&1){l=80;break b}f[t>>2]=e;h=f[l>>2]|0;if(h>>>0>=(f[m>>2]|0)>>>0){y=0;ja(73,z|0,t|0);h=y;y=0;if(h&1){l=80;break b}}else{f[h>>2]=e;f[l>>2]=h+4}h=j}}}}else{y=0;e=la(202,k|0)|0;j=y;y=0;if(j&1){l=28;break b}if(e>>>0>2){l=18;break b}y=0;e=ua(51,k|0,1)|0;k=y;y=0;if(k&1){l=28;break b}y=0;e=la(203,e|0)|0;k=y;y=0;if(k&1){l=28;break b}y=0;e=ua(136,e|0,0)|0;k=y;y=0;if(k&1){l=28;break b}y=0;h=ua(137,n|0,q|0)|0;k=y;y=0;if(k&1){l=28;break b}f[h>>2]=e}while(0);i=i+1|0}d:switch(l|0){case 18:{i=k+32|0;g=k+28|0;j=zb(20)|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;h=uHa(52593)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[r+11>>0]=h;d=r}else{e=h+16&-16;y=0;d=la(150,e|0)|0;x=y;y=0;if(x&1){l=29;break}f[r>>2]=d;f[r+8>>2]=e|-2147483648;f[r+4>>2]=h}Pta(d,52593,h)|0;SBa(d+h|0,0);y=0;Ca(79,j|0,r|0,f[g>>2]|0,f[i>>2]|0);x=y;y=0;if(x&1)e=1;else{y=0;ya(79,j|0,64,361);y=0;e=0}d=Pa()|0;zta(r);if(!e)break d}else{y=0;za(3);y=0;l=29}while(0);if((l|0)==29)d=Pa()|0;Oa(j|0);break}case 26:{d=Pa()|0;break}case 27:{d=Pa()|0;break}case 28:{d=Pa()|0;break}case 42:{i=k+32|0;g=k+28|0;j=zb(20)|0;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;h=uHa(52614)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[s+11>>0]=h;d=s}else{e=h+16&-16;y=0;d=la(150,e|0)|0;x=y;y=0;if(x&1){l=51;break}f[s>>2]=d;f[s+8>>2]=e|-2147483648;f[s+4>>2]=h}Pta(d,52614,h)|0;SBa(d+h|0,0);y=0;Ca(79,j|0,s|0,f[g>>2]|0,f[i>>2]|0);x=y;y=0;if(x&1)e=1;else{y=0;ya(79,j|0,64,361);y=0;e=0}d=Pa()|0;zta(s);if(!e)break d}else{y=0;za(3);y=0;l=51}while(0);if((l|0)==51)d=Pa()|0;Oa(j|0);break}case 50:{d=Pa()|0;break}case 69:{d=Pa()|0;break}case 70:{d=Pa()|0;break}case 80:{d=Pa()|0;break}case 82:{e:do if(!d){y=0;ia(379,g|0);s=y;y=0;if(s&1){d=Pa()|0;break d}y=0;e=ua(137,n|0,q|0)|0;s=y;y=0;f:do if(s&1)l=88;else{d=f[g>>2]|0;f[d+4>>2]=f[e>>2];jX(d+8|0,z);i=f[a>>2]|0;h=f[i>>2]|0;i=f[i+4>>2]|0;j=i;k=h;e=1;while(1){if((h|0)==(i|0))break;s=HJ(f[h>>2]|0,d)|0;e=e&(s^1);if(s)break;else h=h+4|0}do if(!e){f[g>>2]=0;if(d|0){Nza(d);$Ja(d)}}else{y=0;e=la(153,j-k>>2|0)|0;s=y;y=0;if(s&1){d=Pa()|0;break f}f[d>>2]=e;h=a+24|0;i=f[h>>2]|0;if((i|0)==(f[a+28>>2]|0)){y=0;ja(68,a+20|0,d|0);s=y;y=0;if(s&1){l=88;break f}}else{f[i>>2]=e;f[h>>2]=(f[h>>2]|0)+4}e=f[a>>2]|0;f[v>>2]=f[d>>2];y=0;f[t>>2]=f[v>>2];e=ua(139,e|0,t|0)|0;v=y;y=0;if(v&1){l=88;break f}if(!e){x=f[a>>2]|0;f[g>>2]=0;y=0;ja(64,x|0,d|0);x=y;y=0;if(x&1){l=88;break f}f[g>>2]=0;break}i=zb(20)|0;f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;h=uHa(53982)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[x+11>>0]=h;d=x}else{e=h+16&-16;y=0;d=la(150,e|0)|0;w=y;y=0;if(w&1){l=106;break}f[x>>2]=d;f[x+8>>2]=e|-2147483648;f[x+4>>2]=h}Pta(d,53982,h)|0;SBa(d+h|0,0);y=0;Ca(79,i|0,x|0,f[c+28>>2]|0,f[c+32>>2]|0);c=y;y=0;if(c&1)e=1;else{y=0;ya(79,i|0,64,361);y=0;e=0}d=Pa()|0;zta(x);if(!e)break f}else{y=0;za(3);y=0;l=106}while(0);if((l|0)==106)d=Pa()|0;Oa(i|0);break f}while(0);break e}while(0);if((l|0)==88)d=Pa()|0;e=f[g>>2]|0;f[g>>2]=0;if(e|0){Nza(e);$Ja(e)}break d}while(0);E4(z);break a}}E4(z);$a(d|0)}}else ve(a,c);while(0);u=w;return}function Kc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+32|0;n=o+12|0;m=o;e=c;a:do if((e-a|0)>2){if((b[a>>0]|0)==103){g=(b[a+1>>0]|0)==115;i=g;g=g?a+2|0:a}else{i=0;g=a}h=Fi(g,c,d)|0;if((h|0)!=(g|0)){if(!i){a=h;break}e=f[d+4>>2]|0;if((f[d>>2]|0)==(e|0))break;x4(e+-24|0,0,72157)|0;a=h;break}if(((e-g|0)>2?(b[g>>0]|0)==115:0)?(b[g+1>>0]|0)==114:0){h=g+2|0;b:do if((b[h>>0]|0)==78){l=g+3|0;e=rg(l,c,d)|0;if((e|0)==(l|0)|(e|0)==(c|0))break a;i=Ce(e,c,d)|0;l=d+4|0;do if((i|0)==(e|0))k=d;else{e=f[l>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);e=f[l>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;k=h+-24|0;f[l>>2]=k;Xka(k);h=f[l>>2]|0}k=b[n+11>>0]|0;j=k<<24>>24<0;y=0;oa(73,e+-48|0,(j?f[n>>2]|0:n)|0,(j?f[n+4>>2]|0:k&255)|0)|0;k=y;y=0;if(k&1){a=Pa()|0;zta(n);break b}if((i|0)!=(c|0)){zta(n);e=i;k=d;break}g=f[l>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break;m=g+-24|0;f[l>>2]=m;Xka(m);g=f[l>>2]|0}zta(n);break a}while(0);i=m+11|0;j=m+4|0;while(1){if((b[e>>0]|0)==69){g=43;break}h=dka(e,c,d)|0;if((h|0)==(e|0)|(h|0)==(c|0))break a;e=f[l>>2]|0;if(((e-(f[k>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);g=f[l>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break;p=g+-24|0;f[l>>2]=p;Xka(p);g=f[l>>2]|0}y=0;oa(77,n|0,0,72157)|0;p=y;y=0;if(p&1){g=40;break}f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];e=0;while(1){if((e|0)==3)break;f[n+(e<<2)>>2]=0;e=e+1|0}p=b[i>>0]|0;g=p<<24>>24<0;y=0;oa(73,(f[l>>2]|0)+-24|0,(g?f[m>>2]|0:m)|0,(g?f[j>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){g=41;break}zta(m);zta(n);e=h}if((g|0)==40)a=Pa()|0;else if((g|0)==41){a=Pa()|0;zta(m)}else if((g|0)==43){p=e+1|0;g=Fi(p,c,d)|0;if((g|0)==(p|0)){e=f[l>>2]|0;if((f[d>>2]|0)==(e|0))break a;g=e+-24|0;while(1){if((e|0)==(g|0))break a;p=e+-24|0;f[l>>2]=p;Xka(p);e=f[l>>2]|0}}e=f[l>>2]|0;if(((e-(f[k>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);e=f[l>>2]|0;a=e+-24|0;while(1){if((e|0)==(a|0))break;p=e+-24|0;f[l>>2]=p;Xka(p);e=f[l>>2]|0}y=0;oa(77,n|0,0,72157)|0;p=y;y=0;do if(!(p&1)){f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}p=b[m+11>>0]|0;d=p<<24>>24<0;y=0;oa(73,(f[l>>2]|0)+-24|0,(d?f[m>>2]|0:m)|0,(d?f[m+4>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){a=Pa()|0;zta(m);break}else{zta(m);zta(n);a=g;break a}}else a=Pa()|0;while(0);zta(n);break}zta(n)}else{e=rg(h,c,d)|0;if((e|0)!=(h|0)){j=Ce(e,c,d)|0;do if((j|0)!=(e|0)){i=d+4|0;e=f[i>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);e=f[i>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;p=h+-24|0;f[i>>2]=p;Xka(p);h=f[i>>2]|0}p=b[n+11>>0]|0;l=p<<24>>24<0;y=0;oa(73,e+-48|0,(l?f[n>>2]|0:n)|0,(l?f[n+4>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){a=Pa()|0;zta(n);break b}else{zta(n);e=j;break}}while(0);h=Fi(e,c,d)|0;if((h|0)==(e|0)){h=d+4|0;e=f[h>>2]|0;if((f[d>>2]|0)==(e|0))break a;g=e+-24|0;while(1){if((e|0)==(g|0))break a;p=e+-24|0;f[h>>2]=p;Xka(p);e=f[h>>2]|0}}g=d+4|0;e=f[g>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);e=f[g>>2]|0;a=e+-24|0;while(1){if((e|0)==(a|0))break;p=e+-24|0;f[g>>2]=p;Xka(p);e=f[g>>2]|0}y=0;oa(77,n|0,0,72157)|0;p=y;y=0;do if(!(p&1)){f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}p=b[m+11>>0]|0;d=p<<24>>24<0;y=0;oa(73,(f[g>>2]|0)+-24|0,(d?f[m>>2]|0:m)|0,(d?f[m+4>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){a=Pa()|0;zta(m);break}else{zta(m);zta(n);a=h;break a}}else a=Pa()|0;while(0);zta(n);break}j=dka(h,c,d)|0;if((j|0)==(h|0)|(j|0)==(c|0))break a;if(i){e=d+4|0;g=f[e>>2]|0;if((f[d>>2]|0)==(g|0))break a;x4(g+-24|0,0,72157)|0;l=e}else l=d+4|0;i=m+11|0;k=m+4|0;e=j;while(1){if((b[e>>0]|0)==69){g=109;break}h=dka(e,c,d)|0;if((h|0)==(e|0)|(h|0)==(c|0))break a;e=f[l>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);g=f[l>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break;p=g+-24|0;f[l>>2]=p;Xka(p);g=f[l>>2]|0}y=0;oa(77,n|0,0,72157)|0;p=y;y=0;if(p&1){g=106;break}f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];e=0;while(1){if((e|0)==3)break;f[n+(e<<2)>>2]=0;e=e+1|0}p=b[i>>0]|0;j=p<<24>>24<0;y=0;oa(73,(f[l>>2]|0)+-24|0,(j?f[m>>2]|0:m)|0,(j?f[k>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){g=107;break}zta(m);zta(n);e=h}if((g|0)==106)a=Pa()|0;else if((g|0)==107){a=Pa()|0;zta(m)}else if((g|0)==109){p=e+1|0;g=Fi(p,c,d)|0;if((g|0)==(p|0)){e=f[l>>2]|0;if((f[d>>2]|0)==(e|0))break a;g=e+-24|0;while(1){if((e|0)==(g|0))break a;p=e+-24|0;f[l>>2]=p;Xka(p);e=f[l>>2]|0}}e=f[l>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(n,e+-24|0);e=f[l>>2]|0;a=e+-24|0;while(1){if((e|0)==(a|0))break;p=e+-24|0;f[l>>2]=p;Xka(p);e=f[l>>2]|0}y=0;oa(77,n|0,0,72157)|0;p=y;y=0;do if(!(p&1)){f[m>>2]=f[n>>2];f[m+4>>2]=f[n+4>>2];f[m+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}p=b[m+11>>0]|0;d=p<<24>>24<0;y=0;oa(73,(f[l>>2]|0)+-24|0,(d?f[m>>2]|0:m)|0,(d?f[m+4>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){a=Pa()|0;zta(m);break}else{zta(m);zta(n);a=g;break a}}else a=Pa()|0;while(0);zta(n);break}zta(n)}while(0);$a(a|0)}}while(0);u=o;return a|0}function Lc(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;w=u;u=u+128|0;E=w+104|0;F=w+80|0;G=w+56|0;D=w+40|0;x=w+92|0;B=w+68|0;t=w+52|0;C=w+28|0;v=w+24|0;z=w+12|0;A=w;s=a+12|0;do if(b[s>>0]|0){d=Vea(76852,57789)|0;Axa(E,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[E>>2]|0,77556)|0;r=y;y=0;if(!(r&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,r=y,y=0,!(r&1)):0){pza(E);jn(d,g)|0;Yp(d)|0;break}G=Pa()|0;pza(E);$a(G|0)}while(0);r=Nm(a)|0;do if(b[s>>0]|0){d=vj(Vea(76852,57222)|0,r)|0;Axa(E,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[E>>2]|0,77556)|0;q=y;y=0;if(!(q&1)?(y=0,h=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,q=y,y=0,!(q&1)):0){pza(E);jn(d,h)|0;Yp(d)|0;break}G=Pa()|0;pza(E);$a(G|0)}while(0);j=G+11|0;k=D+11|0;l=D+4|0;m=a+64|0;n=a+68|0;o=a+60|0;p=G+8|0;q=G+4|0;i=0;a:while(1){if(i>>>0>=r>>>0){h=13;break}if(b[s>>0]|0){e=Vea(76852,57228)|0;Axa(E,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[E>>2]|0,77556)|0;h=y;y=0;if(h&1){h=17;break}y=0;d=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0;h=y;y=0;if(h&1){h=17;break}pza(E);jn(e,d)|0;Yp(e)|0}h=nV(24)|0;Spa(h);f[G>>2]=0;f[G+4>>2]=0;f[G+8>>2]=0;e=uHa(57804)|0;if(e>>>0>4294967279){h=20;break}if(e>>>0<11){b[j>>0]=e;d=G}else{g=e+16&-16;d=nV(g)|0;f[G>>2]=d;f[p>>2]=g|-2147483648;f[q>>2]=e}Pta(d,57804,e)|0;SBa(d+e|0,0);y=0;ja(62,D|0,i|0);g=y;y=0;if(g&1){h=31;break}g=b[k>>0]|0;e=g<<24>>24<0;y=0;oa(37,G|0,(e?f[D>>2]|0:D)|0,(e?f[l>>2]|0:g&255)|0)|0;g=y;y=0;if(g&1){h=32;break}f[F>>2]=f[G>>2];f[F+4>>2]=f[G+4>>2];f[F+8>>2]=f[G+8>>2];d=0;while(1){if((d|0)==3)break;f[G+(d<<2)>>2]=0;d=d+1|0}y=0;ja(582,E|0,F|0);g=y;y=0;if(g&1){h=33;break}f[h>>2]=f[E>>2];zta(F);zta(D);zta(G);g=kg(a)|0;f[h+4>>2]=g;g=kg(a)|0;f[h+8>>2]=g;g=Nm(a)|0;f[h+12>>2]=g;b:do switch(g|0){case 0:{g=Nm(a)|0;e=f[a>>2]|0;d=f[e>>2]|0;if(g>>>0>=(f[e+4>>2]|0)-d>>2>>>0){h=37;break a}g=f[f[d+(g<<2)>>2]>>2]|0;f[h+16>>2]=g;if(!(pJa(g)|0)){h=65;break a}d=f[m>>2]|0;if((d|0)==(f[n>>2]|0)){XC(o,h);break b}else{f[d>>2]=f[h>>2];f[m>>2]=(f[m>>2]|0)+4;break b}}case 1:{if((Om(a)|0)!=-16){h=70;break a}b[(f[a>>2]|0)+60>>0]=1;b[(f[a>>2]|0)+61>>0]=1;g=f[a>>2]|0;$la(t,-1,0);op(a,g+68|0,g+72|0,E,f[t>>2]|0);if(b[E>>0]|0){h=82;break a}break}case 2:{b[(f[a>>2]|0)+112>>0]=1;b[(f[a>>2]|0)+113>>0]=1;g=f[a>>2]|0;$la(v,65535,0);op(a,g+92|0,g+96|0,g+114|0,f[v>>2]|0);break}case 3:{g=Op(a)|0;f[h+20>>2]=g;if(Nm(a)|0){h=97;break a}break}default:{h=108;break a}}while(0);cu(f[a>>2]|0,h);i=i+1|0}c:switch(h|0){case 13:{u=w;return}case 17:{G=Pa()|0;pza(E);$a(G|0)}case 20:{JZ();break}case 31:{c=Pa()|0;h=35;break}case 32:{c=Pa()|0;h=34;break}case 33:{c=Pa()|0;zta(F);h=34;break}case 37:{e=zb(20)|0;y=0;ja(62,G|0,g|0);C=y;y=0;if(!(C&1)){y=0;ua(81,G|0,57812)|0;C=y;y=0;if(C&1){c=Pa()|0;d=1}else{f[F>>2]=f[G>>2];f[F+4>>2]=f[G+4>>2];f[F+8>>2]=f[G+8>>2];c=0;while(1){if((c|0)==3)break;f[G+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,F|0,57836)|0;C=y;y=0;if(C&1){c=Pa()|0;d=1}else{f[E>>2]=f[F>>2];f[E+4>>2]=f[F+4>>2];f[E+8>>2]=f[F+8>>2];c=0;while(1){if((c|0)==3)break;f[F+(c<<2)>>2]=0;c=c+1|0}C=f[a>>2]|0;y=0;ja(62,D|0,(f[C+4>>2]|0)-(f[C>>2]|0)>>2|0);C=y;y=0;if(C&1){c=Pa()|0;d=1}else{C=b[D+11>>0]|0;B=C<<24>>24<0;y=0;oa(37,E|0,(B?f[D>>2]|0:D)|0,(B?f[D+4>>2]|0:C&255)|0)|0;C=y;y=0;if(C&1){c=Pa()|0;d=1}else{f[x>>2]=f[E>>2];f[x+4>>2]=f[E+4>>2];f[x+8>>2]=f[E+8>>2];c=0;while(1){if((c|0)==3)break;f[E+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,e|0,x|0);C=y;y=0;if(C&1)d=1;else{y=0;ya(79,e|0,64,361);y=0;d=0}c=Pa()|0;zta(x)}zta(D)}zta(E)}zta(F)}zta(G);if(!d)break}else c=Pa()|0;Oa(e|0);break}case 65:{Na(57840,54283,1529,57864);break}case 70:{g=zb(20)|0;f[B>>2]=0;f[B+4>>2]=0;f[B+8>>2]=0;e=uHa(57876)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[B+11>>0]=e;c=B}else{d=e+16&-16;y=0;c=la(150,d|0)|0;G=y;y=0;if(G&1){h=78;break}f[B>>2]=c;f[B+8>>2]=d|-2147483648;f[B+4>>2]=e}Pta(c,57876,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,B|0);G=y;y=0;if(G&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(B);if(!d)break c}else{y=0;za(3);y=0;h=78}while(0);if((h|0)==78)c=Pa()|0;Oa(g|0);break}case 82:{g=zb(20)|0;f[C>>2]=0;f[C+4>>2]=0;f[C+8>>2]=0;e=uHa(54829)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[C+11>>0]=e;c=C}else{d=e+16&-16;y=0;c=la(150,d|0)|0;G=y;y=0;if(G&1){h=90;break}f[C>>2]=c;f[C+8>>2]=d|-2147483648;f[C+4>>2]=e}Pta(c,54829,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,C|0);G=y;y=0;if(G&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(C);if(d)h=92}else{y=0;za(3);y=0;h=90}while(0);if((h|0)==90){c=Pa()|0;h=92}if((h|0)==92)Oa(g|0);break}case 97:{g=zb(20)|0;f[z>>2]=0;f[z+4>>2]=0;f[z+8>>2]=0;e=uHa(57911)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[z+11>>0]=e;c=z}else{d=e+16&-16;y=0;c=la(150,d|0)|0;G=y;y=0;if(G&1){h=105;break}f[z>>2]=c;f[z+8>>2]=d|-2147483648;f[z+4>>2]=e}Pta(c,57911,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,z|0);G=y;y=0;if(G&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(z);if(!d)break c}else{y=0;za(3);y=0;h=105}while(0);if((h|0)==105)c=Pa()|0;Oa(g|0);break}case 108:{g=zb(20)|0;f[A>>2]=0;f[A+4>>2]=0;f[A+8>>2]=0;e=uHa(57946)|0;do if(e>>>0<=4294967279){if(e>>>0<11){b[A+11>>0]=e;c=A}else{d=e+16&-16;y=0;c=la(150,d|0)|0;G=y;y=0;if(G&1){h=116;break}f[A>>2]=c;f[A+8>>2]=d|-2147483648;f[A+4>>2]=e}Pta(c,57946,e)|0;SBa(c+e|0,0);y=0;ja(583,g|0,A|0);G=y;y=0;if(G&1)d=1;else{y=0;ya(79,g|0,64,361);y=0;d=0}c=Pa()|0;zta(A);if(!d)break c}else{y=0;za(3);y=0;h=116}while(0);if((h|0)==116)c=Pa()|0;Oa(g|0);break}}if((h|0)==34){zta(D);h=35}if((h|0)==35)zta(G);$a(c|0)}function Mc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;q=u;u=u+48|0;s=q+36|0;i=q+24|0;r=q+12|0;p=q;n=a+36|0;a:do if((f[n>>2]|0)==(f[a+116>>2]|0)){h=zb(20)|0;f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(55469)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[i+11>>0]=g;d=i}else{e=g+16&-16;y=0;d=la(150,e|0)|0;s=y;y=0;if(s&1){j=10;break}f[i>>2]=d;f[i+8>>2]=e|-2147483648;f[i+4>>2]=g}Pta(d,55469,g)|0;SBa(d+g|0,0);y=0;ja(583,h|0,i|0);s=y;y=0;if(s&1)e=1;else{y=0;ya(79,h|0,64,361);y=0;e=0}d=Pa()|0;zta(i);if(!e)break a}else{y=0;za(3);y=0;j=10}while(0);if((j|0)==10)d=Pa()|0;Oa(h|0)}else{m=a+12|0;do if(b[m>>0]|0){e=Vea(76852,55619)|0;k=a+236|0;d=(f[k>>2]|0)+1|0;f[k>>2]=d;d=Vea(wj(e,d)|0,55636)|0;d=vj(d,f[n>>2]|0)|0;Axa(s,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[s>>2]|0,77556)|0;k=y;y=0;if(!(k&1)?(y=0,g=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,k=y,y=0,!(k&1)):0){pza(s);jn(d,g)|0;Yp(d)|0;break}r=Pa()|0;pza(s);$a(r|0)}while(0);g=a+20|0;d=f[g>>2]|0;i=a+112|0;j=a+44|0;k=a+204|0;b:do if(d|0){h=a+24|0;while(1){if(!d)break b;e=f[n>>2]|0;if(d>>>0>e>>>0)break b;if(d>>>0<e>>>0){e=Vea(76852,55641)|0;e=vj(e,f[g>>2]|0)|0;Axa(s,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[s>>2]|0,77556)|0;t=y;y=0;if(t&1)break;y=0;d=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0;t=y;y=0;if(t&1)break;pza(s);jn(e,d)|0;Yp(e)|0}f[k>>2]=f[h>>2];f[k+4>>2]=f[h+4>>2];f[k+8>>2]=f[h+8>>2];b[j>>0]=(f[i>>2]|0)!=0&1;Jl(a);d=f[g>>2]|0}t=Pa()|0;pza(s);$a(t|0)}while(0);g=Tk(a)|0;do if(!(b[m>>0]|0))e=g&255;else{e=g&255;h=wj(Vea(76852,55675)|0,e)|0;Axa(s,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[s>>2]|0,77556)|0;t=y;y=0;if(!(t&1)?(y=0,l=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,t=y,y=0,!(t&1)):0){pza(s);jn(h,l)|0;Yp(h)|0;break}t=Pa()|0;pza(s);$a(t|0)}while(0);d=a+4|0;do switch(g<<24>>24){case 2:{g=osa(f[d>>2]|0)|0;f[c>>2]=g;df(a,ksa(g)|0);g=2;break}case 4:{g=Tua(f[d>>2]|0)|0;f[c>>2]=g;dl(a,Asa(g)|0);g=4;break}case 3:{g=mua(f[d>>2]|0)|0;f[c>>2]=g;fo(a,rsa(g)|0);g=3;break}case 13:case 12:{t=dua(f[d>>2]|0)|0;f[c>>2]=t;qs(a,jsa(t)|0,g);break}case 14:{g=Ura(f[d>>2]|0)|0;f[c>>2]=g;Oi(a,Xra(g)|0);g=14;break}case 16:{g=fi(a)|0;f[c>>2]=g;g=16;break}case 17:{g=nqa(f[d>>2]|0)|0;f[c>>2]=g;vh(a,fra(g)|0);g=17;break}case 32:{g=pta(f[d>>2]|0)|0;f[c>>2]=g;$h(a,Lra(g)|0);g=32;break}case 33:case 34:{t=ota(f[d>>2]|0)|0;f[c>>2]=t;Xh(a,Era(t)|0,g);break}case 35:{g=gta(f[d>>2]|0)|0;f[c>>2]=g;Ij(a,vra(g)|0);g=35;break}case 36:{g=fta(f[d>>2]|0)|0;f[c>>2]=g;Uu(a,ura(g)|0);g=36;break}case 27:{g=Mta(f[d>>2]|0)|0;f[c>>2]=g;mu(a,Qra(g)|0);g=27;break}case 15:{g=Nta(f[d>>2]|0)|0;f[c>>2]=g;um(a,Rra(g)|0);g=15;break}case 1:{g=ewa(f[d>>2]|0)|0;f[c>>2]=g;tsa(g)|0;lA(b[m>>0]|0);g=1;break}case 0:{g=Gsa(f[d>>2]|0)|0;f[c>>2]=g;gra(g)|0;Nz(b[m>>0]|0);g=0;break}case 26:{g=Uva(f[d>>2]|0)|0;f[c>>2]=g;ux(a,nsa(g)|0);g=26;break}case 5:case 11:{f[c>>2]=0;break}case -2:{d=Tk(a)|0;if(((((!(pg(a,c,d,1)|0)?!(zk(a,c,d,1)|0):0)?!(uf(a,c,d)|0):0)?!(Ci(a,c,d)|0):0)?!(qq(a,c,d)|0):0)?!(Ks(a,c,d)|0):0){g=zb(20)|0;y=0;ja(593,s|0,d&255|0);t=y;y=0;do if(!(t&1)){y=0;ua(81,s|0,55698)|0;t=y;y=0;if(t&1){d=Pa()|0;zta(s);break}f[r>>2]=f[s>>2];f[r+4>>2]=f[s+4>>2];f[r+8>>2]=f[s+8>>2];d=0;while(1){if((d|0)==3)break;f[s+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,g|0,r|0);t=y;y=0;if(t&1)e=1;else{y=0;ya(79,g|0,64,361);y=0;e=0}d=Pa()|0;zta(r);zta(s);if(!e)break a}else d=Pa()|0;while(0);Oa(g|0);break a}else g=d;break}default:if(((((!(vf(a,c,g)|0)?!(Ch(a,c,g)|0):0)?!(sl(a,c,g)|0):0)?!(pg(a,c,g,0)|0):0)?!(zk(a,c,g,0)|0):0)?!(uj(a,c,g)|0):0){g=zb(20)|0;y=0;ja(593,s|0,e|0);t=y;y=0;do if(!(t&1)){y=0;ua(81,s|0,55733)|0;t=y;y=0;if(t&1){d=Pa()|0;zta(s);break}f[p>>2]=f[s>>2];f[p+4>>2]=f[s+4>>2];f[p+8>>2]=f[s+8>>2];d=0;while(1){if((d|0)==3)break;f[s+(d<<2)>>2]=0;d=d+1|0}y=0;ja(583,g|0,p|0);t=y;y=0;if(t&1)e=1;else{y=0;ya(79,g|0,64,361);y=0;e=0}d=Pa()|0;zta(p);zta(s);if(!e)break a}else d=Pa()|0;while(0);Oa(g|0);break a}}while(0);if(!((b[j>>0]|0)==0|(f[c>>2]|0)==0)){t=Xi((f[i>>2]|0)+64|0,c)|0;f[t>>2]=f[k>>2];f[t+4>>2]=f[k+4>>2];f[t+8>>2]=f[k+8>>2]}do if(b[m>>0]|0){e=Vea(76852,55748)|0;t=a+236|0;d=f[t>>2]|0;f[t>>2]=d+-1;d=Vea(wj(e,d)|0,55636)|0;d=vj(d,f[n>>2]|0)|0;Axa(s,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[s>>2]|0,77556)|0;t=y;y=0;if(!(t&1)?(y=0,o=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,t=y,y=0,!(t&1)):0){pza(s);jn(d,o)|0;Yp(d)|0;break}t=Pa()|0;pza(s);$a(t|0)}while(0);u=q;return g&255|0}while(0);$a(d|0);return 0}function Nc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;v=u;u=u+96|0;o=v+80|0;k=v+68|0;i=v+64|0;l=v+60|0;h=v+52|0;m=v+56|0;r=v+40|0;q=v+28|0;n=v+24|0;s=v+12|0;p=v;e=(f[a>>2]|0)+60|0;a:do if(!(b[e>>0]|0)){b[e>>0]=1;b[(f[a>>2]|0)+61>>0]=d&1;if((lxa(c)|0)!=1){if(Hra(lj(c,1)|0)|0){FCa(o,rr(lj(c,1)|0)|0);f[(f[a>>2]|0)+64>>2]=f[o>>2];e=2}else e=1;if((e|0)!=(lxa(c)|0)){cJa(i);cJa(l);t=lj(c,e)|0;b:do if(fIa(b[t>>0]|0)|0){g=lj(c,e)|0;x=rr(lj(g,0)|0)|0;t=c+32|0;e=e+1|0;k=c+28|0;c:do if(bDa(x,f[18757]|0)|0){ada(h);y=0;g=ua(51,g|0,1)|0;x=y;y=0;d:do if(!(x&1)?(y=0,j=la(203,g|0)|0,x=y,y=0,!(x&1)):0){FCa(o,j);i=f[h>>2]|0;f[i>>2]=f[o>>2];f[i+4>>2]=f[(f[a>>2]|0)+64>>2];f[i+8>>2]=1;g=f[a>>2]|0;f[m>>2]=f[i>>2];y=0;f[o>>2]=f[m>>2];g=ua(140,g|0,o|0)|0;x=y;y=0;do if(!(x&1)){if(!g){x=f[a>>2]|0;f[h>>2]=0;y=0;ja(69,x|0,i|0);x=y;y=0;if(x&1)break;f[h>>2]=0;break b}j=zb(20)|0;f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;i=uHa(52137)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[r+11>>0]=i;e=r}else{g=i+16&-16;y=0;e=la(150,g|0)|0;x=y;y=0;if(x&1){w=33;break}f[r>>2]=e;f[r+8>>2]=g|-2147483648;f[r+4>>2]=i}Pta(e,52137,i)|0;SBa(e+i|0,0);y=0;Ca(79,j|0,r|0,f[k>>2]|0,f[t>>2]|0);x=y;y=0;if(x&1)g=1;else{y=0;ya(79,j|0,64,361);y=0;g=0}e=Pa()|0;zta(r);if(!g)break d}else{y=0;za(3);y=0;w=33}while(0);if((w|0)==33)e=Pa()|0;Oa(j|0);break d}while(0);e=Pa()|0}else w=31;while(0);if((w|0)==31)e=Pa()|0;g=f[h>>2]|0;f[h>>2]=0;if(g|0)$Ja(g)}else{x=rr(lj(g,0)|0)|0;if(!(bDa(x,f[18756]|0)|0)){i=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;h=uHa(52196)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[p+11>>0]=h;e=p}else{g=h+16&-16;y=0;e=la(150,g|0)|0;x=y;y=0;if(x&1){w=81;break}f[p>>2]=e;f[p+8>>2]=g|-2147483648;f[p+4>>2]=h}Pta(e,52196,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,p|0);x=y;y=0;if(x&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(p);if(!g)break c}else{y=0;za(3);y=0;w=81}while(0);if((w|0)==81)e=Pa()|0;Oa(i|0);break}FCa(o,rr(lj(g,1)|0)|0);j=f[o>>2]|0;f[i>>2]=j;FCa(o,rr(lj(g,2)|0)|0);g=f[o>>2]|0;f[l>>2]=g;if(!d){i=zb(20)|0;f[q>>2]=0;f[q+4>>2]=0;f[q+8>>2]=0;h=uHa(52154)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[q+11>>0]=h;e=q}else{g=h+16&-16;y=0;e=la(150,g|0)|0;x=y;y=0;if(x&1){w=51;break}f[q>>2]=e;f[q+8>>2]=g|-2147483648;f[q+4>>2]=h}Pta(e,52154,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,q|0);x=y;y=0;if(x&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(q);if(!g)break c}else{y=0;za(3);y=0;w=51}while(0);if((w|0)==51)e=Pa()|0;Oa(i|0);break}Woa(h);i=f[h>>2]|0;f[i+12>>2]=1;f[i+4>>2]=j;f[i+8>>2]=g;f[i>>2]=j;g=f[a>>2]|0;f[n>>2]=j;y=0;f[o>>2]=f[n>>2];g=ua(143,g|0,o|0)|0;x=y;y=0;e:do if(x&1)w=64;else{if(!g){x=f[a>>2]|0;f[h>>2]=0;y=0;ja(1471,x|0,i|0);x=y;y=0;if(x&1){w=64;break}f[h>>2]=0;break b}j=zb(20)|0;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;i=uHa(52179)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[s+11>>0]=i;e=s}else{g=i+16&-16;y=0;e=la(150,g|0)|0;x=y;y=0;if(x&1){w=65;break}f[s>>2]=e;f[s+8>>2]=g|-2147483648;f[s+4>>2]=i}Pta(e,52179,i)|0;SBa(e+i|0,0);y=0;Ca(79,j|0,s|0,f[k>>2]|0,f[t>>2]|0);x=y;y=0;if(x&1)g=1;else{y=0;ya(79,j|0,64,361);y=0;g=0}e=Pa()|0;zta(s);if(!g)break e}else{y=0;za(3);y=0;w=65}while(0);if((w|0)==65)e=Pa()|0;Oa(j|0)}while(0);if((w|0)==64)e=Pa()|0;g=f[h>>2]|0;f[h>>2]=0;if(g|0)$Ja(g)}while(0);break a}while(0);do if((e|0)!=(lxa(c)|0)){if(!(Hra(lj(c,e)|0)|0)){x=rr(lj(c,e)|0)|0;g=e+1|0;if(bDa(x,f[18738]|0)|0){ki(a,lj(c,g)|0,1,0);h=f[a>>2]|0;x=f[h+76>>2]|0;e=x;if((f[h+80>>2]|0)==(x|0)){e=0;g=0}else{e=(f[e+8>>2]|0)-(f[e+4>>2]|0)>>2;g=0}x=h+72|0;eja(x,e,g)|0;f[(f[a>>2]|0)+68>>2]=f[x>>2];break}x=rr(lj(c,(lxa(c)|0)+-1|0)|0)|0;if(bDa(x,f[18738]|0)|0){if(e>>>0<((lxa(c)|0)+-1|0)>>>0){e=PH(rr(lj(c,e)|0)|0)|0;eja((f[a>>2]|0)+68|0,e,((e|0)<0)<<31>>31)|0;e=g}if(e>>>0>=((lxa(c)|0)+-1|0)>>>0)break;x=PH(rr(lj(c,e)|0)|0)|0;eja((f[a>>2]|0)+72|0,x,((x|0)<0)<<31>>31)|0;break}}ki(a,c,e,0);h=f[a>>2]|0;x=f[h+76>>2]|0;e=x;if((f[h+80>>2]|0)==(x|0)){e=0;g=0}else{e=(f[e+8>>2]|0)-(f[e+4>>2]|0)>>2;g=0}x=h+72|0;eja(x,e,g)|0;f[(f[a>>2]|0)+68>>2]=f[x>>2]}while(0)}}u=v;return}else{i=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;h=uHa(52117)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[k+11>>0]=h;e=k}else{g=h+16&-16;y=0;e=la(150,g|0)|0;x=y;y=0;if(x&1){w=10;break}f[k>>2]=e;f[k+8>>2]=g|-2147483648;f[k+4>>2]=h}Pta(e,52117,h)|0;SBa(e+h|0,0);y=0;ja(583,i|0,k|0);x=y;y=0;if(x&1)g=1;else{y=0;ya(79,i|0,64,361);y=0;g=0}e=Pa()|0;zta(k);if(!g)break a}else{y=0;za(3);y=0;w=10}while(0);if((w|0)==10)e=Pa()|0;Oa(i|0)}while(0);$a(e|0)}function Oc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;s=u;u=u+112|0;w=s+88|0;t=s+76|0;v=s+64|0;r=s+52|0;o=s+16|0;p=s;q=s+40|0;i=c;a:do if((i-a|0)>3){e=b[a>>0]|0;if(e<<24>>24==103){n=(b[a+1>>0]|0)==115;e=n?a+2|0:a;g=e;e=b[e>>0]|0}else{n=0;g=a}if(e<<24>>24==110){l=b[g+1>>0]|0;m=l<<24>>24==97;switch(l<<24>>24){case 97:case 119:break;default:{e=a;break a}}e=g+2|0;b:do if((e|0)!=(c|0)){l=0;while(1){if((b[e>>0]|0)==95)break;h=fc(e,c,d)|0;e=(h|0)==(e|0);g=(h|0)==(c|0);if(e|g)break b;else{l=l|(e|g)^1;e=h}}k=e+1|0;g=ic(k,c,d)|0;if(!((g|0)==(k|0)|(g|0)==(c|0))){e=b[g>>0]|0;c:do if(!((i-g|0)>2&e<<24>>24==112))if(e<<24>>24==69){j=0;k=g}else break b;else{if((b[g+1>>0]|0)!=105)break b;e=g+2|0;while(1){if((b[e>>0]|0)==69){j=1;k=e;break c}k=e;e=fc(e,c,d)|0;if((e|0)==(k|0)|(e|0)==(c|0))break b}}while(0);f[w>>2]=0;f[w+4>>2]=0;f[w+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[w+(e<<2)>>2]=0;e=e+1|0}d:do if(j){h=d+4|0;e=f[h>>2]|0;if((f[d>>2]|0)==(e|0)){e=a;g=1;i=99}else{y=0;ja(2054,t|0,e+-24|0);c=y;y=0;if(c&1){e=Pa()|0;i=103;break}e=w+11|0;if((b[e>>0]|0)<0){SBa(f[w>>2]|0,0);f[w+4>>2]=0}else{SBa(w,0);b[e>>0]=0}Sq(w);f[w>>2]=f[t>>2];f[w+4>>2]=f[t+4>>2];f[w+8>>2]=f[t+8>>2];e=0;while(1){if((e|0)==3)break;f[t+(e<<2)>>2]=0;e=e+1|0}zta(t);e=f[h>>2]|0;g=e+-24|0;while(1){if((e|0)==(g|0)){c=d;e=g;i=34;break d}c=e+-24|0;f[h>>2]=c;Xka(c);e=f[h>>2]|0}}}else{e=d+4|0;h=e;c=d;e=f[e>>2]|0;i=34}while(0);do if((i|0)==34)if((f[c>>2]|0)!=(e|0)){y=0;ja(2054,t|0,e+-24|0);i=y;y=0;if(i&1){e=Pa()|0;i=103;break}g=f[h>>2]|0;i=g+-24|0;e=g;while(1){if((e|0)==(i|0))break;x=e+-24|0;f[h>>2]=x;Xka(x);e=f[h>>2]|0}f[v>>2]=0;f[v+4>>2]=0;f[v+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[v+(e<<2)>>2]=0;e=e+1|0}e:do if(l)if((f[c>>2]|0)==(i|0)){e=a;g=1;i=98}else{y=0;ja(2054,r|0,g+-48|0);x=y;y=0;if(x&1){e=Pa()|0;i=102;break}e=v+11|0;if((b[e>>0]|0)<0){SBa(f[v>>2]|0,0);f[v+4>>2]=0}else{SBa(v,0);b[e>>0]=0}Sq(v);f[v>>2]=f[r>>2];f[v+4>>2]=f[r+4>>2];f[v+8>>2]=f[r+8>>2];e=0;while(1){if((e|0)==3)break;f[r+(e<<2)>>2]=0;e=e+1|0}zta(r);g=f[h>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0)){i=55;break e}x=g+-24|0;f[h>>2]=x;Xka(x);g=f[h>>2]|0}}else i=55;while(0);f:do if((i|0)==55){f[r>>2]=0;f[r+4>>2]=0;f[r+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[r+(e<<2)>>2]=0;e=e+1|0}if(n?(y=0,ja(2062,r|0,72157),x=y,y=0,x&1):0)i=60;else i=61;g:do if((i|0)==61){if(m){y=0;ua(165,r|0,72367)|0;x=y;y=0;if(x&1){i=60;break}}else{y=0;ua(165,r|0,72117)|0;x=y;y=0;if(x&1){i=60;break}}h:do if(l){y=0;ya(149,p|0,72085,v|0);x=y;y=0;if(x&1)e=Pa()|0;else{y=0;ua(165,p|0,72371)|0;x=y;y=0;do if(!(x&1)){f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];e=0;while(1){if((e|0)==3)break;f[p+(e<<2)>>2]=0;e=e+1|0}x=b[o+11>>0]|0;n=x<<24>>24<0;y=0;oa(73,r|0,(n?f[o>>2]|0:o)|0,(n?f[o+4>>2]|0:x&255)|0)|0;x=y;y=0;if(x&1){e=Pa()|0;zta(o);break}else{zta(o);zta(p);break h}}else e=Pa()|0;while(0);zta(p)}break g}while(0);x=b[t+11>>0]|0;n=x<<24>>24<0;y=0;oa(73,r|0,(n?f[t>>2]|0:t)|0,(n?f[t+4>>2]|0:x&255)|0)|0;x=y;y=0;if(x&1)i=60;else{i:do if(j){y=0;ya(149,p|0,72080,w|0);x=y;y=0;if(x&1)e=Pa()|0;else{y=0;ua(165,p|0,72083)|0;x=y;y=0;do if(!(x&1)){f[o>>2]=f[p>>2];f[o+4>>2]=f[p+4>>2];f[o+8>>2]=f[p+8>>2];e=0;while(1){if((e|0)==3)break;f[p+(e<<2)>>2]=0;e=e+1|0}x=b[o+11>>0]|0;n=x<<24>>24<0;y=0;oa(73,r|0,(n?f[o>>2]|0:o)|0,(n?f[o+4>>2]|0:x&255)|0)|0;x=y;y=0;if(x&1){e=Pa()|0;zta(o);break}else{zta(o);zta(p);break i}}else e=Pa()|0;while(0);zta(p)}break g}while(0);f[q>>2]=f[r>>2];f[q+4>>2]=f[r+4>>2];f[q+8>>2]=f[r+8>>2];e=0;while(1){if((e|0)==3)break;f[r+(e<<2)>>2]=0;e=e+1|0}hM(o,q);e=f[h>>2]|0;do if(e>>>0<(f[d+8>>2]|0)>>>0){ZL(e,o);f[h>>2]=(f[h>>2]|0)+24}else{y=0;ja(2056,d|0,o|0);x=y;y=0;if(!(x&1))break;e=Pa()|0;Xka(o);zta(q);break g}while(0);Xka(o);zta(q);zta(r);e=k+1|0;g=0;i=98;break f}}while(0);if((i|0)==60)e=Pa()|0;zta(r);i=102}while(0);if((i|0)==98){zta(v);zta(t);i=99;break}else if((i|0)==102){zta(v);zta(t);i=103;break}}else{e=a;g=1;i=99}while(0);if((i|0)==99){zta(w);if(!g)break a;else break}else if((i|0)==103){zta(w);$a(e|0)}}}while(0);e=a}else e=a}else e=a;while(0);u=s;return e|0}function Pc(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0;i=u;u=u+144|0;t=i+120|0;o=i+96|0;v=i+108|0;l=i+84|0;p=i+72|0;x=i+60|0;z=i+48|0;A=i+36|0;w=i+24|0;s=i+12|0;n=i;_x(a);of(a);r=a+36|0;d=a+8|0;e=a+48|0;g=t+4|0;h=a+180|0;c=f[r>>2]|0;a:while(1){if(!($ua(f[d>>2]|0,c)|0)){q=130;break}j=Nm(a)|0;m=Nm(a)|0;k=f[r>>2]|0;c=k+m|0;B=f[d>>2]|0;if(c>>>0>((f[B+4>>2]|0)-(f[B>>2]|0)|0)>>>0){q=4;break}b:do switch(j|0){case 10:{q=34;break}case 0:{q=40;break}default:{f[v>>2]=j;My(t,e,j,v);if(!(b[g>>0]|0)){q=17;break a}do switch(j|0){case 10:{q=34;break b}case 8:{Gy(a);break b}case 5:{Lh(a);break b}case 1:{Te(a);break b}case 2:{Lc(a);break b}case 3:{mh(a);break b}case 7:{yf(a);break b}case 9:{Kg(a);break b}case 6:{jg(a);JW(h);Fk(a,-1)|0;break b}case 11:{Sg(a);break b}case 4:{cf(a);break b}default:{q=40;break b}}while(0)}}while(0);if((q|0)==34){q=0;Dc(a)}else if((q|0)==40){q=0;cy(a,m);if((f[r>>2]|0)>>>0>c>>>0){q=41;break}f[r>>2]=c}if((f[r>>2]|0)!=(c|0)){q=86;break}}c:do if((q|0)==4){e=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;d=uHa(54006)|0;do if(d>>>0<=4294967279){if(d>>>0<11){b[o+11>>0]=d;c=o}else{a=d+16&-16;y=0;c=la(150,a|0)|0;B=y;y=0;if(B&1){q=12;break}f[o>>2]=c;f[o+8>>2]=a|-2147483648;f[o+4>>2]=d}Pta(c,54006,d)|0;SBa(c+d|0,0);y=0;ja(583,e|0,o|0);B=y;y=0;if(B&1)a=1;else{y=0;ya(79,e|0,64,361);y=0;a=0}c=Pa()|0;zta(o);if(!a)break c}else{y=0;za(3);y=0;q=12}while(0);if((q|0)==12)c=Pa()|0;Oa(e|0)}else if((q|0)==17){d=zb(20)|0;y=0;ja(62,t|0,j|0);B=y;y=0;do if(!(B&1)){y=0;ua(81,t|0,54042)|0;B=y;y=0;if(B&1){c=Pa()|0;zta(t);break}f[l>>2]=f[t>>2];f[l+4>>2]=f[t+4>>2];f[l+8>>2]=f[t+8>>2];c=0;while(1){if((c|0)==3)break;f[t+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,d|0,l|0);B=y;y=0;if(B&1)a=1;else{y=0;ya(79,d|0,64,361);y=0;a=0}c=Pa()|0;zta(l);zta(t);if(!a)break c}else c=Pa()|0;while(0);Oa(d|0)}else if((q|0)==41){d=zb(20)|0;y=0;ja(62,A|0,k|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{y=0;ua(81,A|0,54072)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[z>>2]=f[A>>2];f[z+4>>2]=f[A+4>>2];f[z+8>>2]=f[A+8>>2];c=0;while(1){if((c|0)==3)break;f[A+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,z|0,54107)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];c=0;while(1){if((c|0)==3)break;f[z+(c<<2)>>2]=0;c=c+1|0}y=0;ja(62,w|0,m|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{B=b[w+11>>0]|0;q=B<<24>>24<0;y=0;oa(37,x|0,(q?f[w>>2]|0:w)|0,(q?f[w+4>>2]|0:B&255)|0)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[v>>2]=f[x>>2];f[v+4>>2]=f[x+4>>2];f[v+8>>2]=f[x+8>>2];c=0;while(1){if((c|0)==3)break;f[x+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,v|0,54122)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[t>>2]=f[v>>2];f[t+4>>2]=f[v+4>>2];f[t+8>>2]=f[v+8>>2];c=0;while(1){if((c|0)==3)break;f[v+(c<<2)>>2]=0;c=c+1|0}y=0;ja(62,s|0,f[r>>2]|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{B=b[s+11>>0]|0;r=B<<24>>24<0;y=0;oa(37,t|0,(r?f[s>>2]|0:s)|0,(r?f[s+4>>2]|0:B&255)|0)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[p>>2]=f[t>>2];f[p+4>>2]=f[t+4>>2];f[p+8>>2]=f[t+8>>2];c=0;while(1){if((c|0)==3)break;f[t+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,d|0,p|0);B=y;y=0;if(B&1)a=1;else{y=0;ya(79,d|0,64,361);y=0;a=0}c=Pa()|0;zta(p)}zta(s)}zta(t)}zta(v)}zta(w)}zta(x)}zta(z)}zta(A)}if(a)Oa(d|0)}else if((q|0)==86){d=zb(20)|0;y=0;ja(62,A|0,k|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{y=0;ua(81,A|0,54156)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[z>>2]=f[A>>2];f[z+4>>2]=f[A+4>>2];f[z+8>>2]=f[A+8>>2];c=0;while(1){if((c|0)==3)break;f[A+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,z|0,54107)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[x>>2]=f[z>>2];f[x+4>>2]=f[z+4>>2];f[x+8>>2]=f[z+8>>2];c=0;while(1){if((c|0)==3)break;f[z+(c<<2)>>2]=0;c=c+1|0}y=0;ja(62,w|0,m|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{B=b[w+11>>0]|0;q=B<<24>>24<0;y=0;oa(37,x|0,(q?f[w>>2]|0:w)|0,(q?f[w+4>>2]|0:B&255)|0)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[v>>2]=f[x>>2];f[v+4>>2]=f[x+4>>2];f[v+8>>2]=f[x+8>>2];c=0;while(1){if((c|0)==3)break;f[x+(c<<2)>>2]=0;c=c+1|0}y=0;ua(50,v|0,54122)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[t>>2]=f[v>>2];f[t+4>>2]=f[v+4>>2];f[t+8>>2]=f[v+8>>2];c=0;while(1){if((c|0)==3)break;f[v+(c<<2)>>2]=0;c=c+1|0}y=0;ja(62,s|0,f[r>>2]|0);B=y;y=0;if(B&1){c=Pa()|0;a=1}else{B=b[s+11>>0]|0;r=B<<24>>24<0;y=0;oa(37,t|0,(r?f[s>>2]|0:s)|0,(r?f[s+4>>2]|0:B&255)|0)|0;B=y;y=0;if(B&1){c=Pa()|0;a=1}else{f[n>>2]=f[t>>2];f[n+4>>2]=f[t+4>>2];f[n+8>>2]=f[t+8>>2];c=0;while(1){if((c|0)==3)break;f[t+(c<<2)>>2]=0;c=c+1|0}y=0;ja(583,d|0,n|0);B=y;y=0;if(B&1)a=1;else{y=0;ya(79,d|0,64,361);y=0;a=0}c=Pa()|0;zta(n)}zta(s)}zta(t)}zta(v)}zta(w)}zta(x)}zta(z)}zta(A)}if(a)Oa(d|0)}else if((q|0)==130){xf(a);u=i;return}while(0);$a(c|0)}function Qc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0;z=u;u=u+112|0;s=z;g=z+96|0;l=z+100|0;h=z+72|0;i=z+56|0;m=z+92|0;p=z+80|0;k=z+76|0;o=z+60|0;n=z+44|0;t=z+40|0;v=z+36|0;A=z+24|0;w=z+20|0;x=z+16|0;e=(f[a>>2]|0)+112|0;a:do if(!(b[e>>0]|0)){b[e>>0]=1;b[(f[a>>2]|0)+113>>0]=d&1;b[(f[a>>2]|0)+114>>0]=0;if(Hra(lj(c,1)|0)|0){FCa(s,rr(lj(c,1)|0)|0);f[(f[a>>2]|0)+88>>2]=f[s>>2];e=2}else e=1;cJa(h);cJa(i);r=lj(c,e)|0;b:do if(fIa(b[r>>0]|0)|0){d=lj(c,e)|0;C=rr(lj(d,0)|0)|0;q=c+28|0;l=e+1|0;r=c+32|0;if(bDa(C,f[18757]|0)|0){ada(g);y=0;e=ua(51,d|0,1)|0;C=y;y=0;c:do if(!(C&1)?(y=0,j=la(203,e|0)|0,C=y,y=0,!(C&1)):0){FCa(s,j);d=f[g>>2]|0;f[d>>2]=f[s>>2];f[d+4>>2]=f[(f[a>>2]|0)+88>>2];f[d+8>>2]=2;e=f[a>>2]|0;f[m>>2]=f[d>>2];y=0;f[s>>2]=f[m>>2];e=ua(140,e|0,s|0)|0;C=y;y=0;do if(!(C&1)){if(!e){C=f[a>>2]|0;f[g>>2]=0;y=0;ja(69,C|0,d|0);C=y;y=0;if(C&1)break;f[g>>2]=0;e=l;B=73;break b}i=zb(20)|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;h=uHa(52137)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[p+11>>0]=h;e=p}else{d=h+16&-16;y=0;e=la(150,d|0)|0;C=y;y=0;if(C&1){B=31;break}f[p>>2]=e;f[p+8>>2]=d|-2147483648;f[p+4>>2]=h}Pta(e,52137,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,p|0,f[q>>2]|0,f[r>>2]|0);C=y;y=0;if(C&1)d=1;else{y=0;ya(79,i|0,64,361);y=0;d=0}e=Pa()|0;zta(p);if(!d)break c}else{y=0;za(3);y=0;B=31}while(0);if((B|0)==31)e=Pa()|0;Oa(i|0);break c}while(0);e=Pa()|0}else B=29;while(0);if((B|0)==29)e=Pa()|0;d=f[g>>2]|0;f[g>>2]=0;if(d|0)$Ja(d);B=95;break}C=rr(lj(d,0)|0)|0;if(!(bDa(C,f[18756]|0)|0)){if(lxa(d)|0?(C=rr(lj(d,0)|0)|0,!(aDa(C,f[18756]|0)|0)):0){h=zb(20)|0;f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;g=uHa(52484)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[n+11>>0]=g;e=n}else{d=g+16&-16;y=0;e=la(150,d|0)|0;C=y;y=0;if(C&1){B=69;break}f[n>>2]=e;f[n+8>>2]=d|-2147483648;f[n+4>>2]=g}Pta(e,52484,g)|0;SBa(e+g|0,0);y=0;ja(583,h|0,n|0);C=y;y=0;if(C&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}e=Pa()|0;zta(n);if(!d){B=95;break b}}else{y=0;za(3);y=0;B=69}while(0);if((B|0)==69)e=Pa()|0;Oa(h|0);B=95;break}$k(a,lj(c,e)|0,1,0);C=f[a>>2]|0;B=f[C+100>>2]|0;eja(C+92|0,(f[B+8>>2]|0)-(f[B+4>>2]|0)|0,0)|0;B=94;break}FCa(s,rr(lj(d,1)|0)|0);C=f[s>>2]|0;f[h>>2]=C;FCa(s,rr(lj(d,2)|0)|0);e=f[s>>2]|0;f[i>>2]=e;Woa(g);d=f[g>>2]|0;f[d+12>>2]=2;f[d+4>>2]=C;f[d+8>>2]=e;f[d>>2]=C;e=f[a>>2]|0;f[k>>2]=C;y=0;f[s>>2]=f[k>>2];e=ua(143,e|0,s|0)|0;C=y;y=0;d:do if(C&1)B=50;else{if(!e){C=f[a>>2]|0;f[g>>2]=0;y=0;ja(1471,C|0,d|0);C=y;y=0;if(C&1){B=50;break}f[g>>2]=0;e=l;B=73;break b}i=zb(20)|0;f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;h=uHa(52179)|0;do if(h>>>0<=4294967279){if(h>>>0<11){b[o+11>>0]=h;e=o}else{d=h+16&-16;y=0;e=la(150,d|0)|0;C=y;y=0;if(C&1){B=51;break}f[o>>2]=e;f[o+8>>2]=d|-2147483648;f[o+4>>2]=h}Pta(e,52179,h)|0;SBa(e+h|0,0);y=0;Ca(79,i|0,o|0,f[q>>2]|0,f[r>>2]|0);C=y;y=0;if(C&1)d=1;else{y=0;ya(79,i|0,64,361);y=0;d=0}e=Pa()|0;zta(o);if(!d)break d}else{y=0;za(3);y=0;B=51}while(0);if((B|0)==51)e=Pa()|0;Oa(i|0)}while(0);if((B|0)==50)e=Pa()|0;d=f[g>>2]|0;f[g>>2]=0;if(d|0)$Ja(d);B=95}else B=73;while(0);e:do if((B|0)==73){m=a+4|0;n=A+4|0;o=A+8|0;l=dm(a,c,e)|0;while(1){if(l>>>0>=(lxa(c)|0)>>>0){B=94;break e}d=lj(c,l)|0;rJa(t);C=rr(lj(d,0)|0)|0;if(bDa(C,f[18759]|0)|0){eja(t,0,0)|0;e=1}else{e=pq(lj(d,1)|0,52502)|0;f[t>>2]=e;e=2}e=rr(lj(d,e)|0)|0;k=cua(f[m>>2]|0)|0;f[v>>2]=k;f[k+4>>2]=1;uAa(s,gKa(f[t>>2]|0)|0);d=k+8|0;f[d>>2]=f[s>>2];f[d+4>>2]=f[s+4>>2];f[d+8>>2]=f[s+8>>2];f[d+12>>2]=f[s+12>>2];d=iJ(e)|0;if(!d){e=f[a>>2]|0;f[A>>2]=0;d=e+104|0;h=f[d>>2]|0;if(h>>>0<(f[e+108>>2]|0)>>>0){$la(g,0,0);f[s>>2]=f[g>>2];FM(h,k,83563,s);f[d>>2]=(f[d>>2]|0)+16}else qr(e+100|0,v,A)}else{f[A>>2]=0;f[n>>2]=0;f[o>>2]=0;y=0;ya(104,e|0,d|0,A|0);C=y;y=0;if(C&1){B=86;break}e=f[a>>2]|0;j=f[A>>2]|0;f[w>>2]=j;d=(f[n>>2]|0)-j|0;f[x>>2]=d;h=e+104|0;i=f[h>>2]|0;if(i>>>0>=(f[e+108>>2]|0)>>>0){y=0;Ca(80,e+100|0,v|0,w|0,x|0);C=y;y=0;if(C&1){B=87;break}}else{y=0;ya(71,g|0,d|0,0);C=y;y=0;if(C&1){B=87;break}y=0;f[s>>2]=f[g>>2];Ca(56,i|0,k|0,j|0,s|0);C=y;y=0;if(C&1){B=87;break}f[h>>2]=(f[h>>2]|0)+16}F4(A)}l=l+1|0}if((B|0)==86)e=Pa()|0;else if((B|0)==87)e=Pa()|0;F4(A);B=95}while(0);if((B|0)==94){u=z;return}else if((B|0)==95)break}else{h=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;g=uHa(52466)|0;do if(g>>>0<=4294967279){if(g>>>0<11){b[l+11>>0]=g;e=l}else{d=g+16&-16;y=0;e=la(150,d|0)|0;C=y;y=0;if(C&1){B=10;break}f[l>>2]=e;f[l+8>>2]=d|-2147483648;f[l+4>>2]=g}Pta(e,52466,g)|0;SBa(e+g|0,0);y=0;ja(583,h|0,l|0);C=y;y=0;if(C&1)d=1;else{y=0;ya(79,h|0,64,361);y=0;d=0}e=Pa()|0;zta(l);if(!d)break a}else{y=0;za(3);y=0;B=10}while(0);if((B|0)==10)e=Pa()|0;Oa(h|0)}while(0);$a(e|0)}function Rc(a){a=a|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0;H=u;u=u+240|0;I=H+160|0;l=H+156|0;K=H+8|0;C=H+152|0;k=H;if((b[74008]|0)==0?twa(74008)|0:0){B=fea()|0;f[18970]=B}a:do if((b[a+36>>0]|0)==0?(b[a+20>>0]|0)!=0|(f[18970]|0)!=0:0){c=Vea(76852,44700)|0;Axa(I,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[I>>2]|0,77556)|0;B=y;y=0;if(!(B&1)?(y=0,e=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,B=y,y=0,!(B&1)):0){pza(I);jn(c,e)|0;Yp(c)|0;g=a+8|0;h=f[g>>2]|0;i=a+12|0;j=f[i>>2]|0;B=0;e=h;while(1){if((e|0)==(j|0))break;c=f[e>>2]|0;d=b[c+4+11>>0]|0;if(d<<24>>24<0)c=f[c+8>>2]|0;else c=d&255;B=B>>>0<c>>>0?c:B;e=e+4|0}if((f[18970]|0)>2){dCa(l,44731);h=f[a>>2]|0;f[I>>2]=f[l>>2];mf(I,h);h=f[g>>2]|0;j=f[i>>2]|0}w=K+64|0;l=K+8|0;z=K+12|0;o=K+4|0;p=K+64|0;q=K+136|0;r=K+140|0;x=K+44|0;s=K+56|0;t=K+60|0;v=K+8|0;A=a+21|0;m=0.0;b:while(1){if((h|0)==(j|0)){d=19;break}i=f[h>>2]|0;f[l>>2]=6024;f[K>>2]=84;f[w>>2]=104;f[o>>2]=0;dX(p,z);f[q>>2]=0;f[r>>2]=-1;f[K>>2]=6004;f[w>>2]=6044;f[l>>2]=6024;W6(z);f[z>>2]=6060;f[x>>2]=0;f[x+4>>2]=0;f[x+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[x+(c<<2)>>2]=0;c=c+1|0}f[s>>2]=0;f[t>>2]=24;f[I>>2]=0;f[I+4>>2]=0;f[I+8>>2]=0;c=0;while(1){if((c|0)==3)break;f[I+(c<<2)>>2]=0;c=c+1|0}y=0;ja(117,z|0,I|0);k=y;y=0;if(k&1){d=30;break}zta(I);if((f[18970]|0)==2?(y=0,ua(109,f[a>>2]|0,v|0)|0,k=y,y=0,k&1):0){d=33;break}y=0;c=ua(53,76852,44807)|0;k=y;y=0;if(k&1){d=33;break}k=i+4|0;y=0;c=ua(100,c|0,k|0)|0;g=y;y=0;if(g&1){d=33;break}y=0;ua(53,c|0,44837)|0;g=y;y=0;if(g&1){d=33;break}e=k+11|0;g=i+8|0;d=0;while(1){c=b[e>>0]|0;if(c<<24>>24<0)c=f[g>>2]|0;else c=c&255;if(d>>>0>=(B-c|0)>>>0)break;y=0;ua(67,76852,32)|0;c=y;y=0;if(c&1){d=45;break b}d=d+1|0}e=jI()|0;g=J;y=0;c=la(f[(f[i>>2]|0)+20>>2]|0,i|0)|0;d=y;y=0;if(d&1){d=49;break}c:do if(!c){y=0;ya(f[(f[i>>2]|0)+12>>2]|0,i|0,a|0,f[a>>2]|0);i=y;y=0;if(i&1){d=49;break b}}else{c=f[a>>2]|0;d=f[c+40>>2]|0;c=f[c+36>>2]|0;while(1){if((c|0)==(d|0))break c;y=0;ya(95,a|0,i|0,f[c>>2]|0);L=y;y=0;if(L&1){d=52;break b}c=c+4|0}}while(0);c=jI()|0;c=Aoa(c|0,J|0,e|0,g|0)|0;n=(+(c>>>0)+4294967296.0*+(J|0))/1.0e9;y=0;c=ra(1,76852,+n)|0;L=y;y=0;if(L&1){d=72;break}y=0;d=ua(53,c|0,44764)|0;L=y;y=0;if(L&1){d=72;break}Axa(I,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;c=ua(46,f[I>>2]|0,77556)|0;L=y;y=0;if(L&1){d=58;break}y=0;c=ua(f[(f[c>>2]|0)+28>>2]|0,c|0,10)|0;L=y;y=0;if(L&1){d=58;break}pza(I);y=0;ua(63,d|0,c|0)|0;L=y;y=0;if(L&1){d=72;break}y=0;la(159,d|0)|0;L=y;y=0;if(L&1){d=72;break}m=m+n;y=0;ua(53,76852,44842)|0;L=y;y=0;if(L&1){d=72;break}c=I;d=c+80|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(d|0));HR(I);y=0;c=xa(6,I|0,f[a>>2]|0,0,(b[A>>0]|0)!=0|0)|0;L=y;y=0;if(L&1){d=75;break}iR(I);e=f[18970]|0;if(!c){d=64;break}if((e|0)>2){y=0;ja(582,C|0,k|0);L=y;y=0;if(L&1){d=72;break}L=f[a>>2]|0;y=0;f[I>>2]=f[C>>2];ja(1472,I|0,L|0);L=y;y=0;if(L&1){d=72;break}}Sia(K);h=h+4|0}d:switch(d|0){case 19:{c=Vea(Aj(Vea(76852,44738)|0,m)|0,44764)|0;Axa(I,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[I>>2]|0,77556)|0;L=y;y=0;if(!(L&1)?(y=0,G=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,L=y,y=0,!(L&1)):0){pza(I);jn(c,G)|0;Yp(c)|0;Vea(76852,44774)|0;c=I;d=c+80|0;do{f[c>>2]=0;c=c+4|0}while((c|0)<(d|0));HR(I);y=0;c=xa(6,I|0,f[a>>2]|0,0,(b[A>>0]|0)!=0|0)|0;L=y;y=0;if(L&1){c=Pa()|0;iR(I);d=107;break a}iR(I);if(c){d=106;break a}Vea(76852,45060)|0;Ka()}L=Pa()|0;pza(I);$a(L|0)}case 30:{L=Pa()|0;zta(I);zta(x);vwa(z);oCa(w);$a(L|0)}case 33:{c=Pa()|0;break}case 45:{c=Pa()|0;break}case 49:{c=Pa()|0;break}case 52:{c=Pa()|0;break}case 58:{c=Pa()|0;pza(I);d=74;break}case 64:{do if((e|0)>1){y=0;c=ua(53,76852,44871)|0;L=y;y=0;if((!(L&1)?(y=0,D=ua(100,c|0,k|0)|0,L=y,y=0,!(L&1)):0)?(y=0,E=ua(53,D|0,44883)|0,L=y,y=0,!(L&1)):0){y=0;ja(118,I|0,z|0);L=y;y=0;if(L&1)c=Pa()|0;else{y=0;c=ua(100,E|0,I|0)|0;L=y;y=0;if(!(L&1)?(y=0,ua(53,c|0,60408)|0,L=y,y=0,!(L&1)):0){zta(I);d=82;break}c=Pa()|0;zta(I)}break d}}else{y=0;c=ua(53,76852,44871)|0;L=y;y=0;if((!(L&1)?(y=0,F=ua(100,c|0,k|0)|0,L=y,y=0,!(L&1)):0)?(y=0,ua(53,F|0,44932)|0,L=y,y=0,!(L&1)):0)d=82}while(0);if((d|0)==82){y=0;za(6);y=0}c=Pa()|0;d=74;break}case 72:{c=Pa()|0;d=74;break}case 75:{c=Pa()|0;iR(I);break}}Sia(K);d=107;break}L=Pa()|0;pza(I);$a(L|0)}else d=91;while(0);e:do if((d|0)==91){f[I>>2]=0;g=I+4|0;f[g>>2]=0;f[I+8>>2]=0;f[K>>2]=I;f[K+4>>2]=a;h=f[a+12>>2]|0;i=I+8|0;e=f[a+8>>2]|0;f:while(1){if((e|0)==(h|0)){d=93;break}c=f[e>>2]|0;f[k>>2]=c;j=c;y=0;d=la(f[(f[c>>2]|0)+20>>2]|0,c|0)|0;L=y;y=0;if(L&1){d=99;break}do if(d){c=f[g>>2]|0;if((c|0)==(f[i>>2]|0)){y=0;ja(1473,I|0,k|0);L=y;y=0;if(L&1){d=99;break f}else break}else{f[c>>2]=j;f[g>>2]=(f[g>>2]|0)+4;break}}else{y=0;ia(369,K|0);L=y;y=0;if(L&1){d=99;break f}y=0;ya(f[(f[c>>2]|0)+12>>2]|0,c|0,a|0,f[a>>2]|0);L=y;y=0;if(L&1){d=99;break f}}while(0);e=e+4|0}do if((d|0)==93){y=0;ia(369,K|0);L=y;y=0;if(L&1){c=Pa()|0;break}else{E4(I);d=106;break e}}else if((d|0)==99)c=Pa()|0;while(0);E4(I);d=107}while(0);if((d|0)==106){u=H;return}else if((d|0)==107)$a(c|0)}function Sc(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;U=u;u=u+1056|0;a=U+1032|0;b=U+1008|0;m=U+984|0;z=U+960|0;K=U+936|0;P=U+912|0;Q=U+888|0;R=U+864|0;S=U+840|0;T=U+816|0;c=U+792|0;d=U+768|0;e=U+744|0;f=U+720|0;g=U+696|0;h=U+672|0;i=U+648|0;j=U+624|0;k=U+600|0;l=U+576|0;n=U+552|0;o=U+528|0;p=U+504|0;q=U+480|0;r=U+456|0;s=U+432|0;t=U+408|0;v=U+384|0;w=U+360|0;x=U+336|0;A=U+312|0;B=U+288|0;C=U+264|0;D=U+240|0;E=U+216|0;F=U+192|0;G=U+168|0;H=U+144|0;I=U+120|0;J=U+96|0;L=U+72|0;M=U+48|0;N=U+24|0;O=U;bja(a,5);y=0;ya(73,46303,29317,a|0);V=y;y=0;do if(!(V&1)){D8(a);bja(b,6);y=0;ya(73,29350,29375,b|0);V=y;y=0;if(V&1){a=Pa()|0;D8(b);break}D8(b);bja(m,7);y=0;ya(73,29421,29434,m|0);V=y;y=0;if(V&1){a=Pa()|0;D8(m);break}D8(m);bja(z,8);y=0;ya(73,29494,29507,z|0);V=y;y=0;if(V&1){a=Pa()|0;D8(z);break}D8(z);bja(K,9);y=0;ya(73,29537,29541,K|0);V=y;y=0;if(V&1){a=Pa()|0;D8(K);break}D8(K);bja(P,10);y=0;ya(73,29566,29597,P|0);V=y;y=0;if(V&1){a=Pa()|0;D8(P);break}D8(P);bja(Q,11);y=0;ya(73,29625,29642,Q|0);V=y;y=0;if(V&1){a=Pa()|0;D8(Q);break}D8(Q);bja(R,12);y=0;ya(73,29690,29711,R|0);V=y;y=0;if(V&1){a=Pa()|0;D8(R);break}D8(R);bja(S,13);y=0;ya(73,29785,29794,S|0);V=y;y=0;if(V&1){a=Pa()|0;D8(S);break}D8(S);bja(T,14);y=0;ya(73,29812,29832,T|0);V=y;y=0;if(V&1){a=Pa()|0;D8(T);break}D8(T);bja(c,15);y=0;ya(73,29881,29903,c|0);V=y;y=0;if(V&1){a=Pa()|0;D8(c);break}D8(c);bja(d,16);y=0;ya(73,29953,29963,d|0);V=y;y=0;if(V&1){a=Pa()|0;D8(d);break}D8(d);bja(e,17);y=0;ya(73,30016,30030,e|0);V=y;y=0;if(V&1){a=Pa()|0;D8(e);break}D8(e);bja(f,18);y=0;ya(73,30088,30106,f|0);V=y;y=0;if(V&1){a=Pa()|0;D8(f);break}D8(f);bja(g,19);y=0;ya(73,30171,30106,g|0);V=y;y=0;if(V&1){a=Pa()|0;D8(g);break}D8(g);bja(h,20);y=0;ya(73,30189,30204,h|0);V=y;y=0;if(V&1){a=Pa()|0;D8(h);break}D8(h);bja(i,21);y=0;ya(73,46357,30256,i|0);V=y;y=0;if(V&1){a=Pa()|0;D8(i);break}D8(i);bja(j,22);y=0;ya(73,30287,30295,j|0);V=y;y=0;if(V&1){a=Pa()|0;D8(j);break}D8(j);bja(k,23);y=0;ya(73,30311,30314,k|0);V=y;y=0;if(V&1){a=Pa()|0;D8(k);break}D8(k);bja(l,24);y=0;ya(73,30324,30346,l|0);V=y;y=0;if(V&1){a=Pa()|0;D8(l);break}D8(l);bja(n,25);y=0;ya(73,30381,30397,n|0);V=y;y=0;if(V&1){a=Pa()|0;D8(n);break}D8(n);bja(o,26);y=0;ya(73,30433,30449,o|0);V=y;y=0;if(V&1){a=Pa()|0;D8(o);break}D8(o);bja(p,27);y=0;ya(73,30507,30518,p|0);V=y;y=0;if(V&1){a=Pa()|0;D8(p);break}D8(p);bja(q,28);y=0;ya(73,30564,30570,q|0);V=y;y=0;if(V&1){a=Pa()|0;D8(q);break}D8(q);bja(r,29);y=0;ya(73,30599,30614,r|0);V=y;y=0;if(V&1){a=Pa()|0;D8(r);break}D8(r);bja(s,30);y=0;ya(73,30652,30663,s|0);V=y;y=0;if(V&1){a=Pa()|0;D8(s);break}D8(s);bja(t,31);y=0;ya(73,30697,30714,t|0);V=y;y=0;if(V&1){a=Pa()|0;D8(t);break}D8(t);bja(v,32);y=0;ya(73,30731,30755,v|0);V=y;y=0;if(V&1){a=Pa()|0;D8(v);break}D8(v);bja(w,33);y=0;ya(73,30800,30815,w|0);V=y;y=0;if(V&1){a=Pa()|0;D8(w);break}D8(w);bja(x,34);y=0;ya(73,30859,30873,x|0);V=y;y=0;if(V&1){a=Pa()|0;D8(x);break}D8(x);bja(A,35);y=0;ya(73,46265,30897,A|0);V=y;y=0;if(V&1){a=Pa()|0;D8(A);break}D8(A);bja(B,36);y=0;ya(73,30947,30977,B|0);V=y;y=0;if(V&1){a=Pa()|0;D8(B);break}D8(B);bja(C,37);y=0;ya(73,46283,31008,C|0);V=y;y=0;if(V&1){a=Pa()|0;D8(C);break}D8(C);bja(D,38);y=0;ya(73,31064,31082,D|0);V=y;y=0;if(V&1){a=Pa()|0;D8(D);break}D8(D);bja(E,39);y=0;ya(73,46342,31118,E|0);V=y;y=0;if(V&1){a=Pa()|0;D8(E);break}D8(E);bja(F,40);y=0;ya(73,31151,31160,F|0);V=y;y=0;if(V&1){a=Pa()|0;D8(F);break}D8(F);bja(G,41);y=0;ya(73,46319,31214,G|0);V=y;y=0;if(V&1){a=Pa()|0;D8(G);break}D8(G);bja(H,42);y=0;ya(73,31257,31267,H|0);V=y;y=0;if(V&1){a=Pa()|0;D8(H);break}D8(H);bja(I,43);y=0;ya(73,31325,31214,I|0);V=y;y=0;if(V&1){a=Pa()|0;D8(I);break}D8(I);bja(J,44);y=0;ya(73,31347,31214,J|0);V=y;y=0;if(V&1){a=Pa()|0;D8(J);break}D8(J);bja(L,45);y=0;ya(73,31375,31214,L|0);V=y;y=0;if(V&1){a=Pa()|0;D8(L);break}D8(L);bja(M,46);y=0;ya(73,31409,31413,M|0);V=y;y=0;if(V&1){a=Pa()|0;D8(M);break}D8(M);bja(N,47);y=0;ya(73,31469,31475,N|0);V=y;y=0;if(V&1){a=Pa()|0;D8(N);break}D8(N);bja(O,48);y=0;ya(73,46335,31529,O|0);V=y;y=0;if(V&1){a=Pa()|0;D8(O);break}else{D8(O);u=U;return}}else{V=Pa()|0;D8(a);a=V}while(0);$a(a|0)}function Tc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;N=u;u=u+272|0;O=N+48|0;P=N+232|0;z=N+216|0;B=N+200|0;i=N+260|0;M=N+184|0;k=N+256|0;j=N+252|0;l=N+248|0;p=N+160|0;m=N+212|0;E=N+144|0;q=N+176|0;F=N+108|0;G=N+104|0;H=N+24|0;I=N;J=N+84|0;e=f[a>>2]|0;C=c+28|0;x=c+24|0;r=a+8|0;a:do if(Xha(e,c)|0){tI(P,1,e,f[r>>2]|0,f[18679]|0);y=0;ga(4,z|0,f[c+32>>2]|0,f[a>>2]|0,f[r>>2]|0,f[18679]|0);L=y;y=0;if(L&1)d=Pa()|0;else{Qya(B);d=f[r>>2]|0;g=f[P+8>>2]|0;FCa(i,gKa(g)|0);y=0;f[O>>2]=f[i>>2];d=ua(60,d|0,O|0)|0;L=y;y=0;if(L&1)d=Pa()|0;else{f[B+8>>2]=d;Qya(M);d=f[r>>2]|0;e=f[z+8>>2]|0;FCa(k,gKa(e)|0);y=0;f[O>>2]=f[k>>2];d=ua(60,d|0,O|0)|0;L=y;y=0;if(L&1)d=Pa()|0;else{f[M+8>>2]=d;i=O;j=c;k=i+36|0;do{f[i>>2]=f[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));f[O+24>>2]=B;f[O+28>>2]=M;y=0;d=oa(42,a|0,f[x>>2]|0,g|0)|0;M=y;y=0;if(((((!(M&1)?(y=0,t=la(157,d|0)|0,M=y,y=0,!(M&1)):0)?(y=0,v=oa(42,a|0,f[C>>2]|0,e|0)|0,M=y,y=0,!(M&1)):0)?(y=0,ja(78,t|0,v|0),M=y,y=0,!(M&1)):0)?(y=0,w=oa(43,a|0,O|0,f[a+4>>2]|0)|0,O=y,y=0,!(O&1)):0)?(y=0,ja(78,t|0,w|0),O=y,y=0,!(O&1)):0){iX(z);iX(P);d=t;L=71;break}d=Pa()|0}}iX(z)}iX(P);L=72}else{v=gKa(f[c+16>>2]|0)|0;w=c+8|0;if(v|0?v>>>0<(h[w>>0]|0)>>>0:0){tI(P,1,e,f[r>>2]|0,f[18679]|0);Aya(z);e=f[r>>2]|0;g=gKa(f[P+8>>2]|0)|0;FCa(j,g);y=0;f[O>>2]=f[j>>2];e=ua(60,e|0,O|0)|0;v=y;y=0;if(!(v&1)?(f[z+8>>2]=e,f[z+12>>2]=f[x>>2],y=0,K=oa(38,a|0,z|0,f[18679]|0)|0,z=y,y=0,!(z&1)):0){Qya(B);e=f[r>>2]|0;FCa(l,g);y=0;f[O>>2]=f[l>>2];e=ua(60,e|0,O|0)|0;z=y;y=0;if(!(z&1)?(f[B+8>>2]=e,y=0,ga(4,M|0,f[(f[C>>2]|0)+4>>2]|0,f[a>>2]|0,f[r>>2]|0,f[18679]|0),z=y,y=0,!(z&1)):0){Aya(p);e=f[r>>2]|0;g=gKa(f[M+8>>2]|0)|0;FCa(m,g);y=0;f[O>>2]=f[m>>2];e=ua(60,e|0,O|0)|0;z=y;y=0;if(!(z&1)?(f[p+8>>2]=e,f[p+12>>2]=f[C>>2],y=0,D=oa(38,a|0,p|0,f[18679]|0)|0,C=y,y=0,!(C&1)):0){Qya(E);e=f[r>>2]|0;FCa(q,g);y=0;f[O>>2]=f[q>>2];e=ua(60,e|0,O|0)|0;C=y;y=0;if(C&1)d=Pa()|0;else{f[E+8>>2]=e;i=F;j=c;k=i+36|0;do{f[i>>2]=f[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));f[F+24>>2]=B;b[F+8>>0]=1;PDa(G,0);e=c+32|0;b:do if((f[e>>2]|0)==1){Mua(O);uAa(H,255);i=O+8|0;f[i>>2]=f[H>>2];f[i+4>>2]=f[H+4>>2];f[i+8>>2]=f[H+8>>2];f[i+12>>2]=f[H+12>>2];f[O+4>>2]=1;i=H+8|0;j=H+4|0;k=I+8|0;l=I+12|0;m=I+16|0;n=I+4|0;o=J+8|0;p=J+12|0;q=J+16|0;r=J+4|0;s=F+28|0;t=F+12|0;g=0;v=f[G>>2]|0;while(1){if(g>>>0>=(h[w>>0]|0)>>>0)break;Mua(H);uAa(I,g<<3);f[i>>2]=f[I>>2];f[i+4>>2]=f[I+4>>2];f[i+8>>2]=f[I+8>>2];f[i+12>>2]=f[I+12>>2];f[j>>2]=1;Yya(I);f[k>>2]=36;f[l>>2]=E;f[m>>2]=H;f[n>>2]=1;Yya(J);f[o>>2]=7;f[p>>2]=g|0?I:E;f[q>>2]=O;f[r>>2]=1;f[s>>2]=J;y=0;e=oa(38,a|0,F|0,f[18679]|0)|0;c=y;y=0;if(c&1){L=42;break}if(g){y=0;e=ua(61,v|0,e|0)|0;c=y;y=0;if(c&1){L=42;break}}JCa(t)|0;g=g+1|0;v=e}if((L|0)==42){d=Pa()|0;f[G>>2]=v;break}f[G>>2]=v;y=0;e=ua(61,K|0,D|0)|0;O=y;y=0;if(!(O&1)?(y=0,d=ua(61,e|0,v|0)|0,O=y,y=0,!(O&1)):0){iX(M);iX(P);L=71;break a}else L=36}else{y=0;d=ua(53,76852,23921)|0;N=y;y=0;if(!(N&1)?(y=0,A=ua(62,d|0,f[e>>2]|0)|0,N=y,y=0,!(N&1)):0){Axa(O,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[O>>2]|0,77556)|0;N=y;y=0;do if(!(N&1)){y=0;d=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0;N=y;y=0;if(N&1)break;pza(O);y=0;ua(63,A|0,d|0)|0;O=y;y=0;if(O&1){L=36;break b}y=0;la(159,A|0)|0;O=y;y=0;if(O&1){L=36;break b}y=0;za(6);y=0;L=36;break b}while(0);d=Pa()|0;pza(O);L=37}else L=36}while(0);if((L|0)==36){d=Pa()|0;L=37}}}else d=Pa()|0;iX(M)}else d=Pa()|0}else d=Pa()|0;iX(P);L=72;break}d=AT(a,f[x>>2]|0,f[18680]|0)|0;e=gKa(f[c+12>>2]|0)|0;if(!e)g=d;else{g=f[18905]|0;g=Fw(Nq(d,g,MBa(+(e>>>0))|0)|0,0)|0}e=AT(a,f[C>>2]|0,f[18680]|0)|0;PDa(P,0);d=c+32|0;c:do switch(f[d>>2]|0){case 1:{switch(b[w>>0]|0){case 2:{n=1;o=75536;break c}case 1:{n=0;o=75540;break c}case 4:{n=2;o=75532;break c}default:Ka()}break}case 3:{n=2;o=75528;break}case 4:{n=3;o=75512;break}default:{d=wj(Vea(76852,23921)|0,f[d>>2]|0)|0;Axa(O,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[O>>2]|0,77556)|0;P=y;y=0;if(!(P&1)?(y=0,s=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,P=y,y=0,!(P&1)):0){pza(O);jn(d,s)|0;Yp(d)|0;Ka()}P=Pa()|0;pza(O);$a(P|0)}}while(0);d=Bea(f[o>>2]|0)|0;d=AR(d,Eha(g,n)|0)|0;d=Nq(d,f[18859]|0,e)|0;L=71}while(0);if((L|0)==71){u=N;return d|0}else if((L|0)==72)$a(d|0);return 0}function Uc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0.0,i=0.0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;J=u;u=u+144|0;G=J+96|0;L=J+72|0;M=J+32|0;K=J+8|0;E=J+4|0;F=J;B3(M);I=d+36|0;H=d+40|0;s=f[H>>2]|0;D=a+20|0;t=c+20|0;v=a+40|0;w=M+4|0;A=M+12|0;x=M+16|0;z=M+8|0;r=f[I>>2]|0;a:while(1){if((r|0)==(s|0)){C=3;break}y=0;e=ua(111,D|0,f[r>>2]|0)|0;C=y;y=0;if(C&1){C=40;break}b:do if(UK(e,t,(b[v>>0]|0)!=0)|0){o=f[r>>2]|0;q=CBa(o)|0;k=f[w>>2]|0;p=(k|0)==0;c:do if(!p){l=k+-1|0;m=(l&k|0)==0;if(!m)if(q>>>0<k>>>0)g=q;else g=(q>>>0)%(k>>>0)|0;else g=l&q;e=f[(f[M>>2]|0)+(g<<2)>>2]|0;if(e)while(1){e=f[e>>2]|0;if(!e)break c;j=f[e+4>>2]|0;if((j|0)!=(q|0)){if(!m){if(j>>>0>=k>>>0)j=(j>>>0)%(k>>>0)|0}else j=j&l;if((j|0)!=(g|0))break c}if(bDa(f[e+8>>2]|0,f[o>>2]|0)|0)break b}}else g=0;while(0);y=0;Ca(71,L|0,M|0,q|0,o|0);C=y;y=0;if(C&1){C=40;break a}h=+(((f[A>>2]|0)+1|0)>>>0);i=+n[x>>2];do if(p|h>+(k>>>0)*i){C=(k>>>0<3|(k+-1&k|0)!=0)&1|k<<1;B=~~+X(+(h/i))>>>0;y=0;ja(77,M|0,(C>>>0<B>>>0?B:C)|0);C=y;y=0;if(C&1){C=28;break a}e=f[w>>2]|0;g=e+-1|0;if(!(g&e)){k=e;g=g&q;break}if(q>>>0<e>>>0){k=e;g=q}else{k=e;g=(q>>>0)%(e>>>0)|0}}while(0);e=f[(f[M>>2]|0)+(g<<2)>>2]|0;if(!e){j=f[L>>2]|0;f[j>>2]=f[z>>2];f[z>>2]=j;f[(f[M>>2]|0)+(g<<2)>>2]=z;e=f[j>>2]|0;if(e|0){e=f[e+4>>2]|0;g=k+-1|0;if(g&k){if(e>>>0>=k>>>0)e=(e>>>0)%(k>>>0)|0}else e=e&g;f[(f[M>>2]|0)+(e<<2)>>2]=j}}else{C=f[L>>2]|0;f[C>>2]=f[e>>2];f[e>>2]=C}f[A>>2]=(f[A>>2]|0)+1}while(0);r=r+4|0}d:do if((C|0)==3){e:do if(!(f[A>>2]|0))e=0;else{g=f[H>>2]|0;A=M+20|0;e=f[I>>2]|0;while(1){if((e|0)==(g|0))break;y=0;ua(112,A|0,f[e>>2]|0)|0;B=y;y=0;if(B&1){C=48;break}e=e+4|0}if((C|0)==48){e=Pa()|0;break d}kca(G,d);XAa(G,1);y=0;ja(1510,G|0,M|0);B=y;y=0;if(!(B&1)?(y=0,ia(341,G|0),B=y,y=0,!(B&1)):0){SY(G);f[L>>2]=0;f[L+4>>2]=0;f[L+8>>2]=0;f[L+12>>2]=0;n[L+16>>2]=1.0;t=K+16|0;f[K>>2]=0;f[K+4>>2]=0;f[K+8>>2]=0;f[K+12>>2]=0;n[t>>2]=1.0;v=f[H>>2]|0;w=K+4|0;B=K+12|0;x=K+8|0;s=f[I>>2]|0;f:while(1){if((s|0)==(v|0)){C=52;break}y=0;e=ua(112,A|0,f[s>>2]|0)|0;z=y;y=0;if(z&1){C=58;break}z=f[e+4>>2]|0;r=f[e>>2]|0;while(1){if((r|0)==(z|0))break;f[E>>2]=f[f[r+4>>2]>>2];y=0;ya(96,d|0,f[s>>2]|0,r|0);q=y;y=0;if(q&1){C=98;break f}y=0;e=ua(113,L|0,E|0)|0;q=y;y=0;if(q&1){C=98;break f}f[e>>2]=(f[e>>2]|0)+1;l=f[s>>2]|0;f[F>>2]=l;f[G>>2]=l;q=$z(G,4)|0;k=f[w>>2]|0;p=(k|0)==0;g:do if(!p){m=k+-1|0;o=(m&k|0)==0;if(!o)if(q>>>0<k>>>0)g=q;else g=(q>>>0)%(k>>>0)|0;else g=m&q;e=f[(f[K>>2]|0)+(g<<2)>>2]|0;if(!e)C=75;else do{e=f[e>>2]|0;if(!e){C=75;break g}j=f[e+4>>2]|0;if((j|0)!=(q|0)){do if(o)j=j&m;else{if(j>>>0<k>>>0)break;j=(j>>>0)%(k>>>0)|0}while(0);if((j|0)!=(g|0)){C=75;break g}}}while((f[e+8>>2]|0)!=(l|0))}else{g=0;C=75}while(0);if((C|0)==75){C=0;y=0;Ca(72,G|0,K|0,q|0,F|0);o=y;y=0;if(o&1){C=99;break f}h=+(((f[B>>2]|0)+1|0)>>>0);i=+n[t>>2];do if(p|h>+(k>>>0)*i){p=(k>>>0<3|(k+-1&k|0)!=0)&1|k<<1;o=~~+X(+(h/i))>>>0;y=0;ja(1511,K|0,(p>>>0<o>>>0?o:p)|0);p=y;y=0;if(p&1){C=82;break f}e=f[w>>2]|0;g=e+-1|0;if(!(g&e)){k=e;g=g&q;break}if(q>>>0<e>>>0){k=e;g=q;break}k=e;g=(q>>>0)%(e>>>0)|0}while(0);e=f[(f[K>>2]|0)+(g<<2)>>2]|0;if(!e){j=f[G>>2]|0;f[j>>2]=f[x>>2];f[x>>2]=j;f[(f[K>>2]|0)+(g<<2)>>2]=x;e=f[j>>2]|0;if(e|0){e=f[e+4>>2]|0;g=k+-1|0;do if(!(g&k))e=e&g;else{if(e>>>0<k>>>0)break;e=(e>>>0)%(k>>>0)|0}while(0);f[(f[K>>2]|0)+(e<<2)>>2]=j}}else{q=f[G>>2]|0;f[q>>2]=f[e>>2];f[e>>2]=q}f[B>>2]=(f[B>>2]|0)+1}y=0;e=ua(113,L|0,E|0)|0;q=y;y=0;if(q&1){C=98;break f}e=f[e>>2]|0;y=0;g=ua(111,D|0,E|0)|0;q=y;y=0;if(q&1){C=98;break f}if(e>>>0>(f[g>>2]|0)>>>0){C=97;break f}r=r+8|0}s=s+4|0}do if((C|0)==52){e=K+8|0;while(1){e=f[e>>2]|0;if(!e)break;y=0;ia(371,f[(f[e+8>>2]|0)+36>>2]|0);G=y;y=0;if(G&1){C=107;break}}if((C|0)==107){e=Pa()|0;break}if(!((b[a+16>>0]|0)==0|(f[B>>2]|0)==0)?(y=0,ya(97,K|0,d|0,c|0),G=y,y=0,G&1):0){e=Pa()|0;break}y=0;e=xa(18,f[I>>2]|0,f[H>>2]|0,a|0,L|0)|0;G=y;y=0;if(G&1){e=Pa()|0;break}else{uC(I,e,f[H>>2]|0);e=(f[L+12>>2]|0)!=0;Sma(K);Sma(L);break e}}else if((C|0)==58)e=Pa()|0;else if((C|0)==82){e=Pa()|0;g=f[G>>2]|0;f[G>>2]=0;if(g|0)$Ja(g);C=100}else if((C|0)==97){y=0;Ca(52,46178,46231,282,46255);y=0;C=98}else if((C|0)==99){e=Pa()|0;C=100}while(0);if((C|0)==98){e=Pa()|0;C=102}else if((C|0)==100)C=102;Sma(K);Sma(L);break d}e=Pa()|0;SY(G);break d}while(0);K5(M);u=J;return e|0}else if((C|0)==28){e=Pa()|0;g=f[L>>2]|0;f[L>>2]=0;if(g|0)$Ja(g);C=41}else if((C|0)==40){e=Pa()|0;C=41}while(0);K5(M);$a(e|0);return 0}function Vc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+64|0;m=o+40|0;h=o+24|0;i=o+12|0;l=o;a:do if((c-a|0)>2?(b[a>>0]|0)==85:0){j=a+2|0;b:do switch(b[a+1>>0]|0){case 116:{f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;g=uHa(72886)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[h+11>>0]=g;e=h}else{n=g+16&-16;e=QCa(n)|0;f[h>>2]=e;f[h+8>>2]=n|-2147483648;f[h+4>>2]=g}Pta(e,72886,g)|0;SBa(e+g|0,0);hM(m,h);i=d+4|0;e=f[i>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,m|0);n=y;y=0;if(n&1){a=Pa()|0;Xka(m);zta(h);break b}}else{ZL(e,m);f[i>>2]=(f[i>>2]|0)+24}Xka(m);zta(h);if((j|0)==(c|0)){g=f[i>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;c=g+-24|0;f[i>>2]=c;Xka(c);g=f[i>>2]|0}}if(((b[j>>0]|0)+-48|0)>>>0<10){e=a+3|0;while(1){if((e|0)==(c|0)){e=c;break}if(((b[e>>0]|0)+-48|0)>>>0>=10)break;e=e+1|0}jl((f[i>>2]|0)+-24|0,j,e)}else e=j;kA((f[i>>2]|0)+-24|0,39);if((e|0)!=(c|0)?(b[e>>0]|0)==95:0){a=e+1|0;break a}g=f[i>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;c=g+-24|0;f[i>>2]=c;Xka(c);g=f[i>>2]|0}}case 108:{f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;g=uHa(72895)|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[i+11>>0]=g;e=i}else{n=g+16&-16;e=QCa(n)|0;f[i>>2]=e;f[i+8>>2]=n|-2147483648;f[i+4>>2]=g}Pta(e,72895,g)|0;SBa(e+g|0,0);hM(m,i);n=d+4|0;e=f[n>>2]|0;if(e>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,m|0);k=y;y=0;if(k&1){a=Pa()|0;Xka(m);zta(i);break b}}else{ZL(e,m);f[n>>2]=(f[n>>2]|0)+24}Xka(m);zta(i);c:do if((b[j>>0]|0)==118){kA((f[n>>2]|0)+-24|0,41);e=a+3|0}else{e=ic(j,c,d)|0;if((e|0)==(j|0)){g=f[n>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;c=g+-24|0;f[n>>2]=c;Xka(c);g=f[n>>2]|0}}g=f[n>>2]|0;if(((g-(f[d>>2]|0)|0)/24|0)>>>0<2)break a;HL(m,g+-24|0);i=f[n>>2]|0;g=i+-24|0;h=i;while(1){if((h|0)==(g|0))break;k=h+-24|0;f[n>>2]=k;Xka(k);h=f[n>>2]|0}j=m+11|0;h=b[j>>0]|0;g=h<<24>>24<0;k=m+4|0;y=0;oa(73,i+-48|0,(g?f[m>>2]|0:m)|0,(g?f[k>>2]|0:h&255)|0)|0;i=y;y=0;d:do if(!(i&1)){while(1){y=0;i=oa(76,e|0,c|0,d|0)|0;h=y;y=0;if(h&1){g=52;break d}if((i|0)==(e|0)){g=68;break}e=f[n>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2){g=96;break}y=0;ja(2054,l|0,e+-24|0);h=y;y=0;if(h&1){g=67;break}if((b[j>>0]|0)<0){SBa(f[m>>2]|0,0);f[k>>2]=0}else{SBa(m,0);b[j>>0]=0}Sq(m);f[m>>2]=f[l>>2];f[m+4>>2]=f[l+4>>2];f[m+8>>2]=f[l+8>>2];e=0;while(1){if((e|0)==3)break;f[l+(e<<2)>>2]=0;e=e+1|0}zta(l);e=f[n>>2]|0;g=e+-24|0;h=e;while(1){if((h|0)==(g|0))break;p=h+-24|0;f[n>>2]=p;Xka(p);h=f[n>>2]|0}p=b[j>>0]|0;if(!((p<<24>>24<0?f[k>>2]|0:p&255)|0)){e=i;continue}y=0;ua(165,e+-48|0,72307)|0;p=y;y=0;if(p&1){g=52;break d}p=b[j>>0]|0;h=p<<24>>24<0;y=0;oa(73,(f[n>>2]|0)+-24|0,(h?f[m>>2]|0:m)|0,(h?f[k>>2]|0:p&255)|0)|0;p=y;y=0;if(p&1){g=52;break d}else e=i}if((g|0)==67){a=Pa()|0;break}else if((g|0)==68){y=0;ua(165,(f[n>>2]|0)+-24|0,72083)|0;p=y;y=0;if(p&1){g=52;break}zta(m);break c}else if((g|0)==96){zta(m);break a}}else g=52;while(0);if((g|0)==52)a=Pa()|0;zta(m);break b}while(0);if((e|0)!=(c|0)?(b[e>>0]|0)==69:0){i=e+1|0;if((i|0)==(c|0)){g=f[n>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;p=g+-24|0;f[n>>2]=p;Xka(p);g=f[n>>2]|0}}if(((b[i>>0]|0)+-48|0)>>>0<10){e=e+2|0;while(1){if((e|0)==(c|0)){e=c;break}if(((b[e>>0]|0)+-48|0)>>>0>=10)break;e=e+1|0}g=(f[n>>2]|0)+-24|0;if((b[g+11>>0]|0)<0)h=f[g>>2]|0;else h=g;Bj(g,h+7|0,i,e)|0}else e=i;if((e|0)!=(c|0)?(b[e>>0]|0)==95:0){a=e+1|0;break a}g=f[n>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;p=g+-24|0;f[n>>2]=p;Xka(p);g=f[n>>2]|0}}g=f[n>>2]|0;e=g+-24|0;while(1){if((g|0)==(e|0))break a;p=g+-24|0;f[n>>2]=p;Xka(p);g=f[n>>2]|0}}default:break a}while(0);$a(a|0)}while(0);u=o;return a|0}function Wc(a,c,d,e,g,i){a=a|0;c=+c;d=d|0;e=e|0;g=g|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;G=u;u=u+560|0;l=G+8|0;t=G;F=G+524|0;E=F;m=G+512|0;f[t>>2]=0;D=m+12|0;Mra(c)|0;if((J|0)<0){c=-c;B=1;A=65361}else{B=(g&2049|0)!=0&1;A=(g&2048|0)==0?((g&1|0)==0?65362:65367):65364}Mra(c)|0;C=J&2146435072;do if(C>>>0<2146435072|(C|0)==2146435072&0<0){q=+wJa(c,t)*2.0;j=q!=0.0;if(j)f[t>>2]=(f[t>>2]|0)+-1;w=i|32;if((w|0)==97){r=i&32;p=(r|0)==0?A:A+9|0;o=B|2;j=12-e|0;do if(!(e>>>0>11|(j|0)==0)){c=8.0;do{j=j+-1|0;c=c*16.0}while((j|0)!=0);if((b[p>>0]|0)==45){c=-(c+(-q-c));break}else{c=q+c-c;break}}else c=q;while(0);k=f[t>>2]|0;j=(k|0)<0?0-k|0:k;j=ZJ(j,((j|0)<0)<<31>>31,D)|0;if((j|0)==(D|0)){j=m+11|0;b[j>>0]=48}b[j+-1>>0]=(k>>31&2)+43;n=j+-2|0;b[n>>0]=i+15;m=(e|0)<1;l=(g&8|0)==0;j=F;do{C=~~c;k=j+1|0;b[j>>0]=h[65392+C>>0]|r;c=(c-+(C|0))*16.0;if((k-E|0)==1?!(l&(m&c==0.0)):0){b[k>>0]=46;j=j+2|0}else j=k}while(c!=0.0);C=j-E|0;E=D-n|0;D=(e|0)!=0&(C+-2|0)<(e|0)?e+2|0:C;j=E+o+D|0;yQ(a,32,d,j,g);Nwa(a,p,o);yQ(a,48,d,j,g^65536);Nwa(a,F,C);yQ(a,48,D-C|0,0,0);Nwa(a,n,E);yQ(a,32,d,j,g^8192);break}k=(e|0)<0?6:e;if(j){j=(f[t>>2]|0)+-28|0;f[t>>2]=j;c=q*268435456.0}else{c=q;j=f[t>>2]|0}C=(j|0)<0?l:l+288|0;l=C;do{y=~~c>>>0;f[l>>2]=y;l=l+4|0;c=(c-+(y>>>0))*1.0e9}while(c!=0.0);if((j|0)>0){m=C;o=l;while(1){n=(j|0)<29?j:29;j=o+-4|0;if(j>>>0>=m>>>0){l=0;do{x=gna(f[j>>2]|0,0,n|0)|0;x=Hsa(x|0,J|0,l|0,0)|0;y=J;v=Bba(x|0,y|0,1e9,0)|0;f[j>>2]=v;l=Uxa(x|0,y|0,1e9,0)|0;j=j+-4|0}while(j>>>0>=m>>>0);if(l){m=m+-4|0;f[m>>2]=l}}l=o;while(1){if(l>>>0<=m>>>0)break;j=l+-4|0;if(!(f[j>>2]|0))l=j;else break}j=(f[t>>2]|0)-n|0;f[t>>2]=j;if((j|0)>0)o=l;else break}}else m=C;if((j|0)<0){e=((k+25|0)/9|0)+1|0;s=(w|0)==102;do{r=0-j|0;r=(r|0)<9?r:9;if(m>>>0<l>>>0){n=(1<<r)+-1|0;o=1e9>>>r;p=0;j=m;do{y=f[j>>2]|0;f[j>>2]=(y>>>r)+p;p=Y(y&n,o)|0;j=j+4|0}while(j>>>0<l>>>0);j=(f[m>>2]|0)==0?m+4|0:m;if(!p){m=j;j=l}else{f[l>>2]=p;m=j;j=l+4|0}}else{m=(f[m>>2]|0)==0?m+4|0:m;j=l}l=s?C:m;l=(j-l>>2|0)>(e|0)?l+(e<<2)|0:j;j=(f[t>>2]|0)+r|0;f[t>>2]=j}while((j|0)<0);j=m;e=l}else{j=m;e=l}y=C;if(j>>>0<e>>>0){l=(y-j>>2)*9|0;n=f[j>>2]|0;if(n>>>0>=10){m=10;do{m=m*10|0;l=l+1|0}while(n>>>0>=m>>>0)}}else l=0;s=(w|0)==103;v=(k|0)!=0;m=k-((w|0)!=102?l:0)+((v&s)<<31>>31)|0;if((m|0)<(((e-y>>2)*9|0)+-9|0)){m=m+9216|0;r=C+4+(((m|0)/9|0)+-1024<<2)|0;m=((m|0)%9|0)+1|0;if((m|0)<9){n=10;do{n=n*10|0;m=m+1|0}while((m|0)!=9)}else n=10;o=f[r>>2]|0;p=(o>>>0)%(n>>>0)|0;m=(r+4|0)==(e|0);if(!(m&(p|0)==0)){q=(((o>>>0)/(n>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;x=(n|0)/2|0;c=p>>>0<x>>>0?.5:m&(p|0)==(x|0)?1.0:1.5;if(B){x=(b[A>>0]|0)==45;c=x?-c:c;q=x?-q:q}m=o-p|0;f[r>>2]=m;if(q+c!=q){x=m+n|0;f[r>>2]=x;if(x>>>0>999999999){l=r;while(1){m=l+-4|0;f[l>>2]=0;if(m>>>0<j>>>0){j=j+-4|0;f[j>>2]=0}x=(f[m>>2]|0)+1|0;f[m>>2]=x;if(x>>>0>999999999)l=m;else break}}else m=r;l=(y-j>>2)*9|0;o=f[j>>2]|0;if(o>>>0>=10){n=10;do{n=n*10|0;l=l+1|0}while(o>>>0>=n>>>0)}}else m=r}else m=r;m=m+4|0;m=e>>>0>m>>>0?m:e;x=j}else{m=e;x=j}w=m;while(1){if(w>>>0<=x>>>0){t=0;break}j=w+-4|0;if(!(f[j>>2]|0))w=j;else{t=1;break}}e=0-l|0;do if(s){j=((v^1)&1)+k|0;if((j|0)>(l|0)&(l|0)>-5){n=i+-1|0;k=j+-1-l|0}else{n=i+-2|0;k=j+-1|0}j=g&8;if(!j){if(t?(z=f[w+-4>>2]|0,(z|0)!=0):0)if(!((z>>>0)%10|0)){m=0;j=10;do{j=j*10|0;m=m+1|0}while(!((z>>>0)%(j>>>0)|0|0))}else m=0;else m=9;j=((w-y>>2)*9|0)+-9|0;if((n|32|0)==102){r=j-m|0;r=(r|0)>0?r:0;k=(k|0)<(r|0)?k:r;r=0;break}else{r=j+l-m|0;r=(r|0)>0?r:0;k=(k|0)<(r|0)?k:r;r=0;break}}else r=j}else{n=i;r=g&8}while(0);s=k|r;o=(s|0)!=0&1;p=(n|32|0)==102;if(p){v=0;j=(l|0)>0?l:0}else{j=(l|0)<0?e:l;j=ZJ(j,((j|0)<0)<<31>>31,D)|0;m=D;if((m-j|0)<2)do{j=j+-1|0;b[j>>0]=48}while((m-j|0)<2);b[j+-1>>0]=(l>>31&2)+43;j=j+-2|0;b[j>>0]=n;v=j;j=m-j|0}j=B+1+k+o+j|0;yQ(a,32,d,j,g);Nwa(a,A,B);yQ(a,48,d,j,g^65536);if(p){n=x>>>0>C>>>0?C:x;r=F+9|0;o=r;p=F+8|0;m=n;do{l=ZJ(f[m>>2]|0,0,r)|0;if((m|0)==(n|0)){if((l|0)==(r|0)){b[p>>0]=48;l=p}}else if(l>>>0>F>>>0){Kz(F|0,48,l-E|0)|0;do l=l+-1|0;while(l>>>0>F>>>0)}Nwa(a,l,o-l|0);m=m+4|0}while(m>>>0<=C>>>0);if(s|0)Nwa(a,72374,1);if(m>>>0<w>>>0&(k|0)>0)while(1){l=ZJ(f[m>>2]|0,0,r)|0;if(l>>>0>F>>>0){Kz(F|0,48,l-E|0)|0;do l=l+-1|0;while(l>>>0>F>>>0)}Nwa(a,l,(k|0)<9?k:9);m=m+4|0;l=k+-9|0;if(!(m>>>0<w>>>0&(k|0)>9)){k=l;break}else k=l}yQ(a,48,k+9|0,9,0)}else{s=t?w:x+4|0;if((k|0)>-1){t=F+9|0;r=(r|0)==0;e=t;o=0-E|0;p=F+8|0;n=x;do{l=ZJ(f[n>>2]|0,0,t)|0;if((l|0)==(t|0)){b[p>>0]=48;l=p}do if((n|0)==(x|0)){m=l+1|0;Nwa(a,l,1);if(r&(k|0)<1){l=m;break}Nwa(a,72374,1);l=m}else{if(l>>>0<=F>>>0)break;Kz(F|0,48,l+o|0)|0;do l=l+-1|0;while(l>>>0>F>>>0)}while(0);E=e-l|0;Nwa(a,l,(k|0)>(E|0)?E:k);k=k-E|0;n=n+4|0}while(n>>>0<s>>>0&(k|0)>-1)}yQ(a,48,k+18|0,18,0);Nwa(a,v,D-v|0)}yQ(a,32,d,j,g^8192)}else{F=(i&32|0)!=0;j=B+3|0;yQ(a,32,d,j,g&-65537);Nwa(a,A,B);Nwa(a,c!=c|0.0!=0.0?(F?67309:65388):F?65380:65384,3);yQ(a,32,d,j,g^8192)}while(0);u=G;return ((j|0)<(d|0)?d:j)|0}function Xc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=u;u=u+96|0;p=o+72|0;n=o+48|0;m=o+36|0;i=o+24|0;k=o+12|0;l=o;a:do if(((a|0)!=(c|0)?(b[a>>0]|0)==65:0)?(j=a+1|0,(j|0)!=(c|0)):0){e=b[j>>0]|0;if(e<<24>>24==95){n=a+2|0;c=ic(n,c,d)|0;if((c|0)==(n|0))break;g=d+4|0;e=f[g>>2]|0;if((f[d>>2]|0)==(e|0))break;aD(p,e+-12|0,2);a=uHa(72077)|0;n=b[p+11>>0]|0;if((a|0)==((n<<24>>24<0?f[p+4>>2]|0:n&255)|0)){y=0;a=oa(78,p|0,72077,a|0)|0;n=y;y=0;if(n&1){n=ab(0)|0;lDa(n)}zta(p);if(!a)zK((f[g>>2]|0)+-12|0)}else zta(p);x4((f[g>>2]|0)+-12|0,0,73518)|0;a=c;break}if((e+-49&255)<9){h=pL(j,c)|0;if((h|0)==(c|0))break;if((b[h>>0]|0)!=95)break;l=h+1|0;i=ic(l,c,d)|0;if((i|0)==(l|0))break;c=d+4|0;e=f[c>>2]|0;if((f[d>>2]|0)==(e|0))break;aD(p,e+-12|0,2);a=uHa(72077)|0;l=b[p+11>>0]|0;if((a|0)==((l<<24>>24<0?f[p+4>>2]|0:l&255)|0)){y=0;a=oa(78,p|0,72077,a|0)|0;l=y;y=0;if(l&1){l=ab(0)|0;lDa(l)}zta(p);if(!a)zK((f[c>>2]|0)+-12|0)}else zta(p);d=(f[c>>2]|0)+-12|0;f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;g=h-j|0;if(g>>>0>4294967279)JZ();if(g>>>0<11){b[m+11>>0]=g;c=m}else{l=g+16&-16;c=QCa(l)|0;f[m>>2]=c;f[m+8>>2]=l|-2147483648;f[m+4>>2]=g}a=j;e=c;while(1){if((a|0)==(h|0))break;SBa(e,b[a>>0]|0);a=a+1|0;e=e+1|0}SBa(c+g|0,0);y=0;oa(77,m|0,0,72077)|0;l=y;y=0;if(l&1)a=Pa()|0;else{f[n>>2]=f[m>>2];f[n+4>>2]=f[m+4>>2];f[n+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,n|0,72132)|0;l=y;y=0;do if(!(l&1)){f[p>>2]=f[n>>2];f[p+4>>2]=f[n+4>>2];f[p+8>>2]=f[n+8>>2];a=0;while(1){if((a|0)==3)break;f[n+(a<<2)>>2]=0;a=a+1|0}l=b[p+11>>0]|0;k=l<<24>>24<0;y=0;xa(25,d|0,0,(k?f[p>>2]|0:p)|0,(k?f[p+4>>2]|0:l&255)|0)|0;l=y;y=0;if(l&1){a=Pa()|0;zta(p);break}else{zta(p);zta(n);zta(m);a=i;break a}}else a=Pa()|0;while(0);zta(n)}zta(m)}else{e=fc(j,c,d)|0;if((e|0)==(j|0)|(e|0)==(c|0))break;if((b[e>>0]|0)!=95)break;j=e+1|0;h=ic(j,c,d)|0;if((h|0)==(j|0))break;g=d+4|0;e=f[g>>2]|0;if(((e-(f[d>>2]|0)|0)/24|0)>>>0<2)break;ZL(p,e+-24|0);a=f[g>>2]|0;e=a+-24|0;c=a;while(1){if((c|0)==(e|0))break;j=c+-24|0;f[g>>2]=j;Xka(j);c=f[g>>2]|0}ZL(n,a+-48|0);a=f[g>>2]|0;c=a+-24|0;e=c+11|0;if((b[e>>0]|0)<0){SBa(f[c>>2]|0,0);f[a+-20>>2]=0;a=c}else{SBa(c,0);b[e>>0]=0;a=c}Sq(c);f[a>>2]=f[p>>2];f[a+4>>2]=f[p+4>>2];f[a+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}e=p+12|0;y=0;ya(147,m|0,e|0,2);j=y;y=0;if(j&1)a=Pa()|0;else{a=uHa(72077)|0;j=b[m+11>>0]|0;if((a|0)==((j<<24>>24<0?f[m+4>>2]|0:j&255)|0)){y=0;a=oa(78,m|0,72077,a|0)|0;j=y;y=0;if(j&1){j=ab(0)|0;lDa(j)}zta(m);if(!a)zK(e)}else zta(m);y=0;ja(2054,l|0,n|0);j=y;y=0;if(j&1)a=Pa()|0;else{y=0;oa(77,l|0,0,72077)|0;j=y;y=0;if(j&1)a=Pa()|0;else{f[k>>2]=f[l>>2];f[k+4>>2]=f[l+4>>2];f[k+8>>2]=f[l+8>>2];a=0;while(1){if((a|0)==3)break;f[l+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,k|0,72132)|0;j=y;y=0;do if(j&1)a=Pa()|0;else{f[i>>2]=f[k>>2];f[i+4>>2]=f[k+4>>2];f[i+8>>2]=f[k+8>>2];a=0;while(1){if((a|0)==3)break;f[k+(a<<2)>>2]=0;a=a+1|0}j=b[e+11>>0]|0;d=j<<24>>24<0;y=0;oa(73,i|0,(d?f[e>>2]|0:e)|0,(d?f[p+16>>2]|0:j&255)|0)|0;j=y;y=0;if(j&1){a=Pa()|0;zta(i);break}f[m>>2]=f[i>>2];f[m+4>>2]=f[i+4>>2];f[m+8>>2]=f[i+8>>2];a=0;while(1){if((a|0)==3)break;f[i+(a<<2)>>2]=0;a=a+1|0}a=f[g>>2]|0;c=a+-12|0;e=c+11|0;if((b[e>>0]|0)<0){SBa(f[c>>2]|0,0);f[a+-8>>2]=0;a=c}else{SBa(c,0);b[e>>0]=0;a=c}Sq(c);f[a>>2]=f[m>>2];f[a+4>>2]=f[m+4>>2];f[a+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}zta(m);zta(i);zta(k);zta(l);Xka(n);Xka(p);a=h;break a}while(0);zta(k)}zta(l)}}Xka(n);Xka(p)}$a(a|0)}while(0);u=o;return a|0}function Yc(a,c){a=a|0;c=c|0;var d=0,e=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;C=u;u=u+128|0;B=C+92|0;D=C+64|0;p=C+48|0;e=C+88|0;j=C+84|0;n=C+32|0;m=C+80|0;x=C+4|0;z=C;g=f[a>>2]|0;l=a+8|0;o=c+24|0;a:do if(Xha(g,c)|0){tI(D,1,g,f[l>>2]|0,f[18679]|0);Qya(p);A=f[l>>2]|0;g=f[D+8>>2]|0;FCa(e,gKa(g)|0);y=0;f[B>>2]=f[e>>2];e=ua(60,A|0,B|0)|0;A=y;y=0;if(A&1)d=Pa()|0;else{f[p+8>>2]=e;f[B>>2]=f[c>>2];f[B+4>>2]=f[c+4>>2];f[B+8>>2]=f[c+8>>2];f[B+12>>2]=f[c+12>>2];f[B+16>>2]=f[c+16>>2];f[B+20>>2]=f[c+20>>2];f[B+24>>2]=p;y=0;e=oa(42,a|0,f[o>>2]|0,g|0)|0;A=y;y=0;if(((!(A&1)?(y=0,d=la(157,e|0)|0,A=y,y=0,!(A&1)):0)?(y=0,i=oa(43,a|0,B|0,f[a+4>>2]|0)|0,a=y,y=0,!(a&1)):0)?(y=0,ja(78,d|0,i|0),a=y,y=0,!(a&1)):0){iX(D);v=65;break}d=Pa()|0}iX(D);v=66}else{e=gKa(f[c+16>>2]|0)|0;i=c+4|0;A=c+8|0;if(e|0?e>>>0<(h[A>>0]|0)>>>0:0){tI(D,1,g,f[l>>2]|0,f[18679]|0);Aya(p);d=f[l>>2]|0;e=gKa(f[D+8>>2]|0)|0;FCa(j,e);y=0;f[B>>2]=f[j>>2];d=ua(60,d|0,B|0)|0;t=y;y=0;if(!(t&1)?(f[p+8>>2]=d,f[p+12>>2]=f[o>>2],y=0,w=oa(38,a|0,p|0,f[18679]|0)|0,t=y,y=0,!(t&1)):0){Qya(n);d=f[l>>2]|0;FCa(m,e);y=0;f[B>>2]=f[m>>2];d=ua(60,d|0,B|0)|0;t=y;y=0;if(t&1)d=Pa()|0;else{f[n+8>>2]=d;f[x>>2]=f[c>>2];f[x+4>>2]=f[c+4>>2];f[x+8>>2]=f[c+8>>2];f[x+12>>2]=f[c+12>>2];f[x+16>>2]=f[c+16>>2];f[x+20>>2]=f[c+20>>2];f[x+24>>2]=n;b[x+8>>0]=1;PDa(z,0);do if((f[i>>2]|0)!=1){y=0;d=ua(53,76852,23856)|0;C=y;y=0;if(!(C&1)?(y=0,q=ua(62,d|0,f[i>>2]|0)|0,C=y,y=0,!(C&1)):0){Axa(B,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[B>>2]|0,77556)|0;C=y;y=0;if(!(C&1)?(y=0,r=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,C=y,y=0,!(C&1)):0){pza(B);y=0;ua(63,q|0,r|0)|0;C=y;y=0;if(C&1){v=42;break}y=0;la(159,q|0)|0;C=y;y=0;if(C&1){v=42;break}y=0;za(6);y=0;v=42;break}d=Pa()|0;pza(B)}else v=42}else{y=0;d=oa(38,a|0,x|0,f[18680]|0)|0;B=y;y=0;if(!(B&1)?(y=0,k=ua(58,d|0,0)|0,B=y,y=0,!(B&1)):0){f[z>>2]=k;j=x+12|0;i=1;while(1){if(i>>>0>=(h[A>>0]|0)>>>0){v=23;break}JCa(j)|0;y=0;d=oa(38,a|0,x|0,f[18680]|0)|0;B=y;y=0;if(B&1){v=31;break}y=0;e=ua(58,d|0,0)|0;B=y;y=0;if(B&1){v=31;break}g=f[18888]|0;y=0;d=ma(1,+(+(i<<3>>>0)))|0;B=y;y=0;if(B&1){v=32;break}y=0;d=oa(41,e|0,g|0,d|0)|0;B=y;y=0;if(B&1){v=32;break}y=0;d=oa(41,k|0,f[18903]|0,d|0)|0;B=y;y=0;if(B&1){v=33;break}i=i+1|0;k=d}if((v|0)==23){f[z>>2]=k;y=0;d=ua(61,w|0,k|0)|0;a=y;y=0;if(a&1){v=42;break}iX(D);v=65;break a}else if((v|0)==31){d=Pa()|0;f[z>>2]=k;break}else if((v|0)==32){d=Pa()|0;f[z>>2]=k;break}else if((v|0)==33){d=Pa()|0;f[z>>2]=k;break}}d=Pa()|0}while(0);if((v|0)==42)d=Pa()|0}}else d=Pa()|0;iX(D);v=66;break}d=AT(a,f[o>>2]|0,f[18680]|0)|0;e=gKa(f[c+12>>2]|0)|0;if(!e)g=d;else{g=f[18905]|0;g=Fw(Nq(d,g,MBa(+(e>>>0))|0)|0,0)|0}PDa(D,0);b:do switch(f[i>>2]|0){case 1:{d=c+9|0;switch(b[A>>0]|0){case 1:{d=b[d>>0]|0?f[18885]|0:f[18881]|0;e=0;break b}case 2:{d=b[d>>0]|0?f[18884]|0:f[18880]|0;e=1;break b}case 4:{d=b[d>>0]|0?f[18883]|0:f[18879]|0;e=2;break b}default:{d=c3(Vea(76852,23881)|0,b[A>>0]|0)|0;Axa(B,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[B>>2]|0,77556)|0;D=y;y=0;if(!(D&1)?(y=0,t=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,D=y,y=0,!(D&1)):0){pza(B);jn(d,t)|0;Yp(d)|0;Ka()}D=Pa()|0;pza(B);$a(D|0)}}}case 3:{d=f[18882]|0;e=2;break}case 4:{d=f[18878]|0;e=3;break}default:{d=wj(Vea(76852,23856)|0,f[i>>2]|0)|0;Axa(B,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;e=ua(46,f[B>>2]|0,77556)|0;D=y;y=0;if(!(D&1)?(y=0,s=ua(f[(f[e>>2]|0)+28>>2]|0,e|0,10)|0,D=y,y=0,!(D&1)):0){pza(B);jn(d,s)|0;Yp(d)|0;Ka()}D=Pa()|0;pza(B);$a(D|0)}}while(0);d=Bea(d)|0;d=AR(d,Eha(g,e)|0)|0;d=Fw(d,q5(f[i>>2]|0)|0)|0;v=65}while(0);if((v|0)==65){u=C;return d|0}else if((v|0)==66)$a(d|0);return 0}function Zc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=u;u=u+64|0;o=n+40|0;m=n+24|0;p=n+12|0;h=n;a:do if(((c-a|0)>3?(b[a>>0]|0)==68:0)?(b[a+1>>0]|0)==118:0){k=a+2|0;g=b[k>>0]|0;do if((g+-49&255)<9){e=pL(k,c)|0;if((e|0)==(c|0))break a;if((b[e>>0]|0)!=95)break a;i=e-k|0;g=e+1|0;if((g|0)==(c|0))break a;if((b[g>>0]|0)==112){a=e+2|0;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;if(i>>>0>4294967279)JZ();if(i>>>0<11){b[p+11>>0]=i;e=p}else{c=i+16&-16;e=QCa(c)|0;f[p>>2]=e;f[p+8>>2]=c|-2147483648;f[p+4>>2]=i}Pta(e,k,i)|0;SBa(e+i|0,0);y=0;oa(77,p|0,0,72134)|0;c=y;y=0;if(c&1)a=Pa()|0;else{f[m>>2]=f[p>>2];f[m+4>>2]=f[p+4>>2];f[m+8>>2]=f[p+8>>2];e=0;while(1){if((e|0)==3)break;f[p+(e<<2)>>2]=0;e=e+1|0}y=0;ua(165,m|0,72132)|0;c=y;y=0;do if(c&1)a=Pa()|0;else{f[h>>2]=f[m>>2];f[h+4>>2]=f[m+4>>2];f[h+8>>2]=f[m+8>>2];e=0;while(1){if((e|0)==3)break;f[m+(e<<2)>>2]=0;e=e+1|0}hM(o,h);e=d+4|0;g=f[e>>2]|0;if(g>>>0>=(f[d+8>>2]|0)>>>0){y=0;ja(2056,d|0,o|0);d=y;y=0;if(d&1){a=Pa()|0;Xka(o);zta(h);break}}else{ZL(g,o);f[e>>2]=(f[e>>2]|0)+24}Xka(o);zta(h);zta(m);zta(p);break a}while(0);zta(m)}zta(p);break}else{h=ic(g,c,d)|0;if((h|0)==(g|0))break a;e=d+4|0;if((f[d>>2]|0)==(f[e>>2]|0))break a;f[p>>2]=0;f[p+4>>2]=0;f[p+8>>2]=0;if(i>>>0>4294967279)JZ();if(i>>>0<11){b[p+11>>0]=i;a=p}else{d=i+16&-16;a=QCa(d)|0;f[p>>2]=a;f[p+8>>2]=d|-2147483648;f[p+4>>2]=i}Pta(a,k,i)|0;SBa(a+i|0,0);y=0;oa(77,p|0,0,72123)|0;d=y;y=0;if(d&1)a=Pa()|0;else{f[m>>2]=f[p>>2];f[m+4>>2]=f[p+4>>2];f[m+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}y=0;ua(165,m|0,72132)|0;d=y;y=0;do if(!(d&1)){f[o>>2]=f[m>>2];f[o+4>>2]=f[m+4>>2];f[o+8>>2]=f[m+8>>2];a=0;while(1){if((a|0)==3)break;f[m+(a<<2)>>2]=0;a=a+1|0}d=b[o+11>>0]|0;c=d<<24>>24<0;y=0;oa(73,(f[e>>2]|0)+-24|0,(c?f[o>>2]|0:o)|0,(c?f[o+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(o);break}else{zta(o);zta(m);zta(p);a=h;break a}}else a=Pa()|0;while(0);zta(m)}zta(p);break}}else{f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;e=0;while(1){if((e|0)==3)break;f[o+(e<<2)>>2]=0;e=e+1|0}b:do if(g<<24>>24!=95){y=0;e=oa(81,k|0,c|0,d|0)|0;i=y;y=0;if(!(i&1))if((e|0)!=(k|0)){i=d+4|0;g=f[i>>2]|0;if((f[d>>2]|0)==(g|0))l=91;else{y=0;ja(2054,m|0,g+-24|0);k=y;y=0;if(k&1){a=Pa()|0;break}g=o+11|0;if((b[g>>0]|0)<0){SBa(f[o>>2]|0,0);f[o+4>>2]=0}else{SBa(o,0);b[g>>0]=0}Sq(o);f[o>>2]=f[m>>2];f[o+4>>2]=f[m+4>>2];f[o+8>>2]=f[m+8>>2];g=0;while(1){if((g|0)==3)break;f[m+(g<<2)>>2]=0;g=g+1|0}zta(m);h=f[i>>2]|0;g=h+-24|0;while(1){if((h|0)==(g|0)){l=72;break b}l=h+-24|0;f[i>>2]=l;Xka(l);h=f[i>>2]|0}}}else{e=k;l=72}else l=60}else{e=k;l=72}while(0);c:do if((l|0)==72){d:do if(((e|0)!=(c|0)?(b[e>>0]|0)==95:0)?(j=e+1|0,(j|0)!=(c|0)):0){y=0;g=oa(76,j|0,c|0,d|0)|0;c=y;y=0;if(c&1){l=60;break c}if((g|0)!=(j|0)){e=d+4|0;if((f[d>>2]|0)==(f[e>>2]|0)){l=91;break c}y=0;ya(149,p|0,72123,o|0);d=y;y=0;if(d&1)a=Pa()|0;else{y=0;ua(165,p|0,72132)|0;d=y;y=0;do if(!(d&1)){f[m>>2]=f[p>>2];f[m+4>>2]=f[p+4>>2];f[m+8>>2]=f[p+8>>2];a=0;while(1){if((a|0)==3)break;f[p+(a<<2)>>2]=0;a=a+1|0}d=b[m+11>>0]|0;c=d<<24>>24<0;y=0;oa(73,(f[e>>2]|0)+-24|0,(c?f[m>>2]|0:m)|0,(c?f[m+4>>2]|0:d&255)|0)|0;d=y;y=0;if(d&1){a=Pa()|0;zta(m);break}else{zta(m);zta(p);a=g;break d}}else a=Pa()|0;while(0);zta(p)}break c}}while(0);zta(o);break a}while(0);if((l|0)==60)a=Pa()|0;else if((l|0)==91){zta(o);break a}zta(o)}while(0);$a(a|0)}while(0);u=n;return a|0}function _c(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0;p=u;u=u+288|0;k=p+252|0;l=p+240|0;o=p+264|0;m=p;f[a>>2]=c;f[a+4>>2]=c+144;w=a+8|0;f[a+48>>2]=0;x=a+52|0;g=w;h=g+36|0;do{f[g>>2]=0;g=g+4|0}while((g|0)<(h|0));gua(x);t=a+64|0;f[t>>2]=0;f[t+4>>2]=0;f[t+8>>2]=0;f[t+12>>2]=0;n[a+80>>2]=1.0;v=a+84|0;f[v>>2]=0;r=a+88|0;gua(r);s=a+112|0;e9(s);y=0;g=la(202,d|0)|0;h=y;y=0;a:do if(!(h&1)){if(!g){e=zb(20)|0;f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;i=uHa(51951)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[k+11>>0]=i;g=k}else{h=i+16&-16;y=0;g=la(150,h|0)|0;p=y;y=0;if(p&1){q=12;break}f[k>>2]=g;f[k+8>>2]=h|-2147483648;f[k+4>>2]=i}Pta(g,51951,i)|0;SBa(g+i|0,0);y=0;ja(583,e|0,k|0);p=y;y=0;if(p&1)h=1;else{y=0;ya(79,e|0,64,361);y=0;h=0}g=Pa()|0;zta(k);if(!h){h=g;break a}}else{y=0;za(3);y=0;q=12}while(0);if((q|0)==12)g=Pa()|0;Oa(e|0);h=g;break}y=0;g=ua(51,d|0,0)|0;k=y;y=0;if(!(k&1)?(y=0,i=la(203,g|0)|0,k=y,y=0,!(k&1)):0){if(aDa(i,f[18765]|0)|0){e=zb(20)|0;f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;i=uHa(51983)|0;do if(i>>>0<=4294967279){if(i>>>0<11){b[l+11>>0]=i;g=l}else{h=i+16&-16;y=0;g=la(150,h|0)|0;p=y;y=0;if(p&1){q=26;break}f[l>>2]=g;f[l+8>>2]=h|-2147483648;f[l+4>>2]=i}Pta(g,51983,i)|0;SBa(g+i|0,0);y=0;ja(583,e|0,l|0);p=y;y=0;if(p&1)h=1;else{y=0;ya(79,e|0,64,361);y=0;h=0}g=Pa()|0;zta(l);if(!h){h=g;break a}}else{y=0;za(3);y=0;q=26}while(0);if((q|0)==26)g=Pa()|0;Oa(e|0);h=g;break}y=0;g=la(202,d|0)|0;l=y;y=0;if(!(l&1)){b:do if((g|0)!=1){y=0;g=ua(51,d|0,1)|0;l=y;y=0;do if(!(l&1)){do if(Hra(g)|0)if(!e)h=2;else{y=0;g=ua(51,d|0,1)|0;l=y;y=0;if(!(l&1)?(y=0,j=la(203,g|0)|0,l=y,y=0,!(l&1)):0){FCa(o,j);f[e>>2]=f[o>>2];h=2;break}h=Pa()|0;break a}else h=1;while(0);y=0;g=la(202,d|0)|0;l=y;y=0;if(!(l&1)){if(h>>>0<g>>>0){y=0;g=ua(51,d|0,h|0)|0;l=y;y=0;if(l&1)break;if(qIa(b[g>>0]|0)|0){f[o>>2]=0;f[o+4>>2]=0;f[o+8>>2]=0;while(1){y=0;g=la(202,d|0)|0;q=y;y=0;if(q&1){q=50;break}if(h>>>0>=g>>>0){q=52;break}g=h;h=h+1|0;y=0;g=ua(51,d|0,g|0)|0;q=y;y=0;if(q&1){q=50;break}y=0;g=la(204,g|0)|0;q=y;y=0;if(q&1){q=50;break}i=iJ(g)|0;if(!i)continue;y=0;ya(104,g|0,i|0,o|0);q=y;y=0;if(q&1){q=51;break}}do if((q|0)==50)g=Pa()|0;else if((q|0)==51)g=Pa()|0;else if((q|0)==52){Cr(m,c,o,0);y=0;ia(346,m|0);d=y;y=0;if(d&1){g=Pa()|0;Jx(m);break}else{Jx(m);F4(o);break b}}while(0);F4(o);h=g;break a}}k=a+44|0;f[k>>2]=0;j=h;g=0;while(1){y=0;i=la(202,d|0)|0;o=y;y=0;if(o&1)break;if(j>>>0>=i>>>0){q=59;break}y=0;e=ua(51,d|0,j|0)|0;o=y;y=0;if(o&1)break;y=0;ja(1991,a|0,e|0);o=y;y=0;if(o&1)break;y=0;ja(1992,a|0,e|0);o=y;y=0;if(o&1)break;y=0;i=ua(51,e|0,0)|0;o=y;y=0;if(o&1)break;y=0;i=la(203,i|0)|0;o=y;y=0;if(o&1)break;if(bDa(i,f[18763]|0)|0){y=0;i=la(205,e|0)|0;o=y;y=0;if(o&1)break;g=((i^1)&1)+g|0}j=j+1|0}c:do if((q|0)==59){f[k>>2]=(f[k>>2]|0)-g;while(1){y=0;g=la(202,d|0)|0;o=y;y=0;if(o&1)break c;if(h>>>0>=g>>>0)break b;y=0;g=ua(51,d|0,h|0)|0;o=y;y=0;if(o&1)break c;y=0;ja(1993,a|0,g|0);o=y;y=0;if(o&1)break c;h=h+1|0}}while(0);h=Pa()|0;break a}}while(0);h=Pa()|0;break a}while(0);u=p;return}else q=11}else q=11}else q=11;while(0);if((q|0)==11)h=Pa()|0;J4(s);Wea(r);g=f[v>>2]|0;f[v>>2]=0;if(g|0){XV(g);$Ja(g)}Sma(t);Wea(x);E4(a+32|0);E4(a+20|0);E4(w);$a(h|0)}function $c(a,b,c,d,e,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;g=g|0;var i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0;H=u;u=u+512|0;E=H;F=d+c|0;G=0-F|0;B=a+4|0;C=a+100|0;k=0;a:while(1){switch(b|0){case 46:{z=6;break a}case 48:break;default:{v=0;o=k;p=0;n=0;break a}}b=f[B>>2]|0;if(b>>>0<(f[C>>2]|0)>>>0){f[B>>2]=b+1;b=h[b>>0]|0;k=1;continue}else{b=kz(a)|0;k=1;continue}}if((z|0)==6){b=f[B>>2]|0;if(b>>>0<(f[C>>2]|0)>>>0){f[B>>2]=b+1;b=h[b>>0]|0}else b=kz(a)|0;if((b|0)==48){k=0;b=0;while(1){k=Hsa(k|0,b|0,-1,-1)|0;n=J;b=f[B>>2]|0;if(b>>>0<(f[C>>2]|0)>>>0){f[B>>2]=b+1;b=h[b>>0]|0}else b=kz(a)|0;if((b|0)==48)b=n;else{v=1;o=1;p=k;break}}}else{v=1;o=k;p=0;n=0}}f[E>>2]=0;m=b+-48|0;l=(b|0)==46;b:do if(l|m>>>0<10){z=E+496|0;w=0;k=0;t=0;x=v;A=o;v=l;y=m;o=0;l=0;c:while(1){do if(v)if(!x){x=1;m=A;p=o;n=l}else break c;else{o=Hsa(o|0,l|0,1,0)|0;l=J;v=(b|0)!=48;if((k|0)>=125){if(!v){m=A;break}f[z>>2]=f[z>>2]|1;m=A;break}m=E+(k<<2)|0;if(!w)b=y;else b=b+-48+((f[m>>2]|0)*10|0)|0;f[m>>2]=b;w=w+1|0;m=(w|0)==9;w=m?0:w;k=(m&1)+k|0;t=v?o:t;m=1}while(0);b=f[B>>2]|0;if(b>>>0<(f[C>>2]|0)>>>0){f[B>>2]=b+1;b=h[b>>0]|0}else b=kz(a)|0;y=b+-48|0;v=(b|0)==46;if(!(v|y>>>0<10)){v=x;z=29;break b}else A=m}b=w;m=(A|0)!=0;z=37}else{w=0;k=0;t=0;m=o;o=0;l=0;z=29}while(0);do if((z|0)==29){A=(v|0)==0;p=A?o:p;n=A?l:n;m=(m|0)!=0;if(!(m&(b|32|0)==101))if((b|0)>-1){b=w;z=37;break}else{b=w;z=39;break}m=Em(a,g)|0;b=J;if((m|0)==0&(b|0)==-2147483648){if(!g){z9(a,0);i=0.0;break}if(!(f[C>>2]|0)){m=0;b=0}else{f[B>>2]=(f[B>>2]|0)+-1;m=0;b=0}}y=Hsa(m|0,b|0,p|0,n|0)|0;b=w;n=J;z=41}while(0);if((z|0)==37)if(f[C>>2]|0){f[B>>2]=(f[B>>2]|0)+-1;if(m){y=p;z=41}else z=40}else z=39;if((z|0)==39)if(m){y=p;z=41}else z=40;do if((z|0)==40){f[2619]=22;z9(a,0);i=0.0}else if((z|0)==41){m=f[E>>2]|0;if(!m){i=+(e|0)*0.0;break}if(((l|0)<0|(l|0)==0&o>>>0<10)&((y|0)==(o|0)&(n|0)==(l|0))?(c|0)>30|(m>>>c|0)==0:0){i=+(e|0)*+(m>>>0);break}a=(d|0)/-2|0;C=((a|0)<0)<<31>>31;if((n|0)>(C|0)|(n|0)==(C|0)&y>>>0>a>>>0){f[2619]=34;i=+(e|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}a=d+-106|0;C=((a|0)<0)<<31>>31;if((n|0)<(C|0)|(n|0)==(C|0)&y>>>0<a>>>0){f[2619]=34;i=+(e|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(b){if((b|0)<9){m=E+(k<<2)|0;l=f[m>>2]|0;do{l=l*10|0;b=b+1|0}while((b|0)!=9);f[m>>2]=l}k=k+1|0}if((t|0)<9?(t|0)<=(y|0)&(y|0)<18:0){b=f[E>>2]|0;if((y|0)==9){i=+(e|0)*+(b>>>0);break}if((y|0)<9){i=+(e|0)*+(b>>>0)/+(f[14104+(8-y<<2)>>2]|0);break}a=c+27+(Y(y,-3)|0)|0;if((a|0)>30|(b>>>a|0)==0){i=+(e|0)*+(b>>>0)*+(f[14104+(y+-10<<2)>>2]|0);break}}b=(y|0)%9|0;if(!b){b=0;m=0}else{t=(y|0)>-1?b:b+9|0;o=f[14104+(8-t<<2)>>2]|0;if(k){p=1e9/(o|0)|0;m=0;n=0;l=y;b=0;do{B=E+(b<<2)|0;C=f[B>>2]|0;a=((C>>>0)/(o>>>0)|0)+m|0;f[B>>2]=a;m=Y(p,(C>>>0)%(o>>>0)|0)|0;a=(b|0)==(n|0)&(a|0)==0;l=a?l+-9|0:l;n=a?n+1&127:n;b=b+1|0}while((b|0)!=(k|0));if(!m)m=n;else{f[E+(k<<2)>>2]=m;m=n;k=k+1|0}}else{m=0;k=0;l=y}b=0;y=9-t+l|0}d:while(1){t=(y|0)<18;v=(y|0)==18;w=E+(m<<2)|0;while(1){if(!t){if(!v){l=y;break d}if((f[w>>2]|0)>>>0>=9007199){l=18;break d}}l=0;x=k;k=k+127|0;while(1){n=k&127;o=E+(n<<2)|0;k=gna(f[o>>2]|0,0,29)|0;k=Hsa(k|0,J|0,l|0,0)|0;l=J;if(l>>>0>0|(l|0)==0&k>>>0>1e9){p=Uxa(k|0,l|0,1e9,0)|0;k=Bba(k|0,l|0,1e9,0)|0}else p=0;f[o>>2]=k;a=(n|0)==(m|0);x=(k|0)==0&(((n|0)!=(x+127&127|0)|a)^1)?n:x;if(a)break;else{l=p;k=n+-1|0}}b=b+-29|0;if(p|0)break;else k=x}m=m+127&127;k=x+127&127;l=E+((x+126&127)<<2)|0;if((m|0)==(x|0))f[l>>2]=f[l>>2]|f[E+(k<<2)>>2];else k=x;f[E+(m<<2)>>2]=p;y=y+9|0}e:while(1){w=k+1&127;x=E+((k+127&127)<<2)|0;while(1){p=(l|0)==18;v=(l|0)>27?9:1;y=m;while(1){m=0;while(1){n=m+y&127;if((n|0)==(k|0)){D=2;z=88;break}n=f[E+(n<<2)>>2]|0;o=f[14136+(m<<2)>>2]|0;if(n>>>0<o>>>0){D=2;z=88;break}if(n>>>0>o>>>0)break;m=m+1|0;if((m|0)>=2){D=m;z=88;break}}if((z|0)==88?(z=0,p&(D|0)==2):0){i=0.0;n=0;break e}b=v+b|0;if((y|0)==(k|0))y=k;else break}p=(1<<v)+-1|0;t=1e9>>>v;o=0;m=y;n=y;do{B=E+(n<<2)|0;C=f[B>>2]|0;a=(C>>>v)+o|0;f[B>>2]=a;o=Y(C&p,t)|0;a=(n|0)==(m|0)&(a|0)==0;l=a?l+-9|0:l;m=a?m+1&127:m;n=n+1&127}while((n|0)!=(k|0));if(!o)continue;if((w|0)!=(m|0))break;f[x>>2]=f[x>>2]|1}f[E+(k<<2)>>2]=o;k=w}do{m=n+y&127;l=k+1&127;if((m|0)==(k|0)){f[E+(l+-1<<2)>>2]=0;k=l}i=i*1.0e9+ +((f[E+(m<<2)>>2]|0)>>>0);n=n+1|0}while((n|0)!=2);s=+(e|0);j=s*i;n=b+53|0;o=n-d|0;p=(o|0)<(c|0);m=p?((o|0)>0?o:0):c;if((m|0)<53){I=+lJa(+KI(1.0,105-m|0),j);q=+EJa(j,+KI(1.0,53-m|0));r=I;i=q;q=I+(j-q)}else{r=0.0;i=0.0;q=j}l=y+2&127;if((l|0)!=(k|0)){l=f[E+(l<<2)>>2]|0;do if(l>>>0>=5e8){if((l|0)!=5e8){i=s*.75+i;break}if((y+3&127|0)==(k|0)){i=s*.5+i;break}else{i=s*.75+i;break}}else{if((l|0)==0?(y+3&127|0)==(k|0):0)break;i=s*.25+i}while(0);if((53-m|0)>1?!(+EJa(i,1.0)!=0.0):0)j=i+1.0;else j=i}else j=i;i=q+j-r;do if((n&2147483647|0)>(-2-F|0)){F=!(+L(+i)>=9007199254740992.0);b=((F^1)&1)+b|0;i=F?i:i*.5;if((b+50|0)<=(G|0)?!(j!=0.0&(p&((m|0)!=(o|0)|F))):0)break;f[2619]=34}while(0);i=+oJa(i,b)}while(0);u=H;return +i}function ad(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,2017,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,2016,bga(d,b)|0);c=b}}case 2:{JJ(a,2018,b);LE(a,(Asa(c)|0)+16|0);JJ(a,2016,(Asa(c)|0)+12|0);JJ(a,2016,(Asa(c)|0)+8|0);break}case 3:{JJ(a,2019,b);JJ(a,2016,(rsa(c)|0)+12|0);break}case 4:{JJ(a,2020,b);LE(a,(jsa(c)|0)+16|0);LE(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,2021,b);JJ(a,2016,(Xra(c)|0)+28|0);LE(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,2022,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,2016,bga(d,b)|0);c=b}}case 7:{JJ(a,2023,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,2016,bga(d,b)|0);c=b}}case 8:{JJ(a,2024,b);b=fra(c)|0;JJ(a,2016,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,2016,bga(d,b)|0);c=b}}case 9:{JJ(a,2025,b);break}case 10:{JJ(a,2026,b);JJ(a,2016,(Era(c)|0)+12|0);break}case 11:{JJ(a,2027,b);break}case 12:{JJ(a,2028,b);JJ(a,2016,(ura(c)|0)+12|0);break}case 13:{JJ(a,2029,b);JJ(a,2016,(lsa(c)|0)+24|0);break}case 14:{JJ(a,2030,b);JJ(a,2016,(Zra(c)|0)+28|0);JJ(a,2016,(Zra(c)|0)+24|0);break}case 25:{JJ(a,2031,b);JJ(a,2016,(wra(c)|0)+24|0);JJ(a,2016,(wra(c)|0)+20|0);break}case 24:{JJ(a,2032,b);JJ(a,2016,(Vqa(c)|0)+24|0);JJ(a,2016,(Vqa(c)|0)+20|0);JJ(a,2016,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,2033,b);JJ(a,2016,(lra(c)|0)+16|0);JJ(a,2016,(lra(c)|0)+12|0);JJ(a,2016,(lra(c)|0)+8|0);break}case 27:{JJ(a,2034,b);JJ(a,2016,(kra(c)|0)+12|0);JJ(a,2016,(kra(c)|0)+8|0);break}case 15:{JJ(a,2035,b);break}case 16:{JJ(a,2036,b);JJ(a,2016,(Yra(c)|0)+12|0);break}case 17:{JJ(a,2037,b);JJ(a,2016,(Sra(c)|0)+16|0);JJ(a,2016,(Sra(c)|0)+12|0);break}case 18:{JJ(a,2038,b);JJ(a,2016,(Qra(c)|0)+16|0);JJ(a,2016,(Qra(c)|0)+12|0);JJ(a,2016,(Qra(c)|0)+8|0);break}case 19:{JJ(a,2039,b);JJ(a,2016,(nsa(c)|0)+8|0);break}case 20:{JJ(a,2040,b);LE(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,2041,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,2016,bga(d,b)|0);c=b}}case 22:{JJ(a,2042,b);break}case 23:{JJ(a,2043,b);break}default:Ka()}while(0);return}function bd(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;q=u;u=u+176|0;e=q+152|0;s=q+136|0;r=q+96|0;g=q+84|0;h=q+72|0;i=q+60|0;j=q+48|0;k=q+36|0;l=q+24|0;m=q+12|0;n=q;f[s>>2]=0;f[s+4>>2]=0;f[s+8>>2]=0;p=c+36|0;LV(s,p);y=0;ia(363,c|0);t=y;y=0;do if(t&1)a=Pa()|0;else{a=a+8|0;while(1){a=f[a>>2]|0;if(!a)break;y=0;ja(65,c|0,f[a+8>>2]|0);t=y;y=0;if(t&1){o=13;break}}if((o|0)==13){a=Pa()|0;break}t=d+20|0;f[e>>2]=f[t>>2];f[e+4>>2]=f[t+4>>2];f[e+8>>2]=f[t+8>>2];f[e+12>>2]=f[t+12>>2];QU(r,c,e);XAa(r,1);jDa(r);f[g>>2]=0;f[g+4>>2]=0;f[g+8>>2]=0;e=uHa(46265)|0;do if(e>>>0>4294967279){y=0;za(3);y=0;o=68}else{if(e>>>0<11){b[g+11>>0]=e;a=g}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[g>>2]=a;f[g+8>>2]=d|-2147483648;f[g+4>>2]=e}Pta(a,46265,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,g|0);t=y;y=0;if(t&1){a=Pa()|0;zta(g);break}zta(g);f[h>>2]=0;f[h+4>>2]=0;f[h+8>>2]=0;e=uHa(46283)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[h+11>>0]=e;a=h}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[h>>2]=a;f[h+8>>2]=d|-2147483648;f[h+4>>2]=e}Pta(a,46283,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,h|0);t=y;y=0;if(t&1){a=Pa()|0;zta(h);break}zta(h);f[i>>2]=0;f[i+4>>2]=0;f[i+8>>2]=0;e=uHa(46303)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[i+11>>0]=e;a=i}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[i>>2]=a;f[i+8>>2]=d|-2147483648;f[i+4>>2]=e}Pta(a,46303,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,i|0);t=y;y=0;if(t&1){a=Pa()|0;zta(i);break}zta(i);f[j>>2]=0;f[j+4>>2]=0;f[j+8>>2]=0;e=uHa(46319)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[j+11>>0]=e;a=j}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[j>>2]=a;f[j+8>>2]=d|-2147483648;f[j+4>>2]=e}Pta(a,46319,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,j|0);t=y;y=0;if(t&1){a=Pa()|0;zta(j);break}zta(j);f[k>>2]=0;f[k+4>>2]=0;f[k+8>>2]=0;e=uHa(46335)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[k+11>>0]=e;a=k}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[k>>2]=a;f[k+8>>2]=d|-2147483648;f[k+4>>2]=e}Pta(a,46335,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,k|0);t=y;y=0;if(t&1){a=Pa()|0;zta(k);break}zta(k);f[l>>2]=0;f[l+4>>2]=0;f[l+8>>2]=0;e=uHa(46342)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[l+11>>0]=e;a=l}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[l>>2]=a;f[l+8>>2]=d|-2147483648;f[l+4>>2]=e}Pta(a,46342,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,l|0);t=y;y=0;if(t&1){a=Pa()|0;zta(l);break}zta(l);f[m>>2]=0;f[m+4>>2]=0;f[m+8>>2]=0;e=uHa(46265)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[m+11>>0]=e;a=m}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[m>>2]=a;f[m+8>>2]=d|-2147483648;f[m+4>>2]=e}Pta(a,46265,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,m|0);t=y;y=0;if(t&1){a=Pa()|0;zta(m);break}zta(m);f[n>>2]=0;f[n+4>>2]=0;f[n+8>>2]=0;e=uHa(46357)|0;if(e>>>0>4294967279){y=0;za(3);y=0;o=68;break}if(e>>>0<11){b[n+11>>0]=e;a=n}else{d=e+16&-16;y=0;a=la(150,d|0)|0;t=y;y=0;if(t&1){o=68;break}f[n>>2]=a;f[n+8>>2]=d|-2147483648;f[n+4>>2]=e}Pta(a,46357,e)|0;SBa(a+e|0,0);y=0;ja(1516,r|0,n|0);t=y;y=0;if(t&1){a=Pa()|0;zta(n);break}zta(n);y=0;ia(341,r|0);t=y;y=0;if(t&1){o=68;break}d=f[c+40>>2]|0;a=f[p>>2]|0;while(1){if((a|0)==(d|0))break;f[a>>2]=0;a=a+4|0}LV(s,p);y=0;ia(363,c|0);t=y;y=0;if(t&1){o=68;break}SY(r);mP(s);u=q;return}while(0);if((o|0)==68)a=Pa()|0;SY(r)}while(0);mP(s);$a(a|0)}function cd(a,c,e,g,h){a=a|0;c=c|0;e=e|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;G=u;u=u+64|0;C=G+16|0;D=G;A=G+24|0;E=G+8|0;F=G+20|0;f[C>>2]=c;x=(a|0)!=0;y=A+40|0;z=y;A=A+39|0;B=E+4|0;j=0;i=0;n=0;a:while(1){do if((i|0)>-1)if((j|0)>(2147483647-i|0)){f[2619]=75;i=-1;break}else{i=j+i|0;break}while(0);j=b[c>>0]|0;if(!(j<<24>>24)){w=87;break}else k=c;b:while(1){switch(j<<24>>24){case 37:{j=k;w=9;break b}case 0:{j=k;break b}default:{}}v=k+1|0;f[C>>2]=v;j=b[v>>0]|0;k=v}c:do if((w|0)==9)while(1){w=0;if((b[k+1>>0]|0)!=37)break c;j=j+1|0;k=k+2|0;f[C>>2]=k;if((b[k>>0]|0)==37)w=9;else break}while(0);j=j-c|0;if(x)Nwa(a,c,j);if(j|0){c=k;continue}l=k+1|0;j=(b[l>>0]|0)+-48|0;if(j>>>0<10){v=(b[k+2>>0]|0)==36;t=v?j:-1;n=v?1:n;l=v?k+3|0:l}else t=-1;f[C>>2]=l;j=b[l>>0]|0;k=(j<<24>>24)+-32|0;d:do if(k>>>0<32){m=0;o=j;while(1){j=1<<k;if(!(j&75913)){j=o;break d}m=j|m;l=l+1|0;f[C>>2]=l;j=b[l>>0]|0;k=(j<<24>>24)+-32|0;if(k>>>0>=32)break;else o=j}}else m=0;while(0);if(j<<24>>24==42){k=l+1|0;j=(b[k>>0]|0)+-48|0;if(j>>>0<10?(b[l+2>>0]|0)==36:0){f[h+(j<<2)>>2]=10;j=f[g+((b[k>>0]|0)+-48<<3)>>2]|0;n=1;l=l+3|0}else{if(n|0){i=-1;break}if(x){n=(f[e>>2]|0)+(4-1)&~(4-1);j=f[n>>2]|0;f[e>>2]=n+4;n=0;l=k}else{j=0;n=0;l=k}}f[C>>2]=l;v=(j|0)<0;j=v?0-j|0:j;m=v?m|8192:m}else{j=J1(C)|0;if((j|0)<0){i=-1;break}l=f[C>>2]|0}do if((b[l>>0]|0)==46){k=l+1|0;if((b[k>>0]|0)!=42){f[C>>2]=k;k=J1(C)|0;l=f[C>>2]|0;break}o=l+2|0;k=(b[o>>0]|0)+-48|0;if(k>>>0<10?(b[l+3>>0]|0)==36:0){f[h+(k<<2)>>2]=10;k=f[g+((b[o>>0]|0)+-48<<3)>>2]|0;l=l+4|0;f[C>>2]=l;break}if(n|0){i=-1;break a}if(x){v=(f[e>>2]|0)+(4-1)&~(4-1);k=f[v>>2]|0;f[e>>2]=v+4}else k=0;f[C>>2]=o;l=o}else k=-1;while(0);s=0;while(1){if(((b[l>>0]|0)+-65|0)>>>0>57){i=-1;break a}v=l+1|0;f[C>>2]=v;o=b[(b[l>>0]|0)+-65+(64880+(s*58|0))>>0]|0;q=o&255;if((q+-1|0)>>>0<8){s=q;l=v}else break}if(!(o<<24>>24)){i=-1;break}r=(t|0)>-1;do if(o<<24>>24==19)if(r){i=-1;break a}else w=49;else{if(r){f[h+(t<<2)>>2]=q;r=g+(t<<3)|0;t=f[r+4>>2]|0;w=D;f[w>>2]=f[r>>2];f[w+4>>2]=t;w=49;break}if(!x){i=0;break a}Zl(D,q,e)}while(0);if((w|0)==49?(w=0,!x):0){j=0;c=v;continue}l=b[l>>0]|0;l=(s|0)!=0&(l&15|0)==3?l&-33:l;r=m&-65537;t=(m&8192|0)==0?m:r;e:do switch(l|0){case 110:switch((s&255)<<24>>24){case 0:{f[f[D>>2]>>2]=i;j=0;c=v;continue a}case 1:{f[f[D>>2]>>2]=i;j=0;c=v;continue a}case 2:{j=f[D>>2]|0;f[j>>2]=i;f[j+4>>2]=((i|0)<0)<<31>>31;j=0;c=v;continue a}case 3:{d[f[D>>2]>>1]=i;j=0;c=v;continue a}case 4:{b[f[D>>2]>>0]=i;j=0;c=v;continue a}case 6:{f[f[D>>2]>>2]=i;j=0;c=v;continue a}case 7:{j=f[D>>2]|0;f[j>>2]=i;f[j+4>>2]=((i|0)<0)<<31>>31;j=0;c=v;continue a}default:{j=0;c=v;continue a}}case 112:{l=120;k=k>>>0>8?k:8;c=t|8;w=61;break}case 88:case 120:{c=t;w=61;break}case 111:{l=D;c=f[l>>2]|0;l=f[l+4>>2]|0;q=i7(c,l,y)|0;r=z-q|0;m=0;o=65344;k=(t&8|0)==0|(k|0)>(r|0)?k:r+1|0;r=t;w=67;break}case 105:case 100:{l=D;c=f[l>>2]|0;l=f[l+4>>2]|0;if((l|0)<0){c=Aoa(0,0,c|0,l|0)|0;l=J;m=D;f[m>>2]=c;f[m+4>>2]=l;m=1;o=65344;w=66;break e}else{m=(t&2049|0)!=0&1;o=(t&2048|0)==0?((t&1|0)==0?65344:65346):65345;w=66;break e}}case 117:{l=D;m=0;o=65344;c=f[l>>2]|0;l=f[l+4>>2]|0;w=66;break}case 99:{b[A>>0]=f[D>>2];c=A;m=0;o=65344;q=y;l=1;k=r;break}case 109:{l=vIa(f[2619]|0)|0;w=71;break}case 115:{l=f[D>>2]|0;l=l|0?l:65354;w=71;break}case 67:{f[E>>2]=f[D>>2];f[B>>2]=0;f[D>>2]=E;q=-1;l=E;w=75;break}case 83:{c=f[D>>2]|0;if(!k){yQ(a,32,j,0,t);c=0;w=84}else{q=k;l=c;w=75}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{j=Wc(a,+p[D>>3],j,k,t,l)|0;c=v;continue a}default:{m=0;o=65344;q=y;l=k;k=t}}while(0);f:do if((w|0)==61){t=D;s=f[t>>2]|0;t=f[t+4>>2]|0;q=s2(s,t,y,l&32)|0;o=(c&8|0)==0|(s|0)==0&(t|0)==0;m=o?0:2;o=o?65344:65344+(l>>4)|0;r=c;c=s;l=t;w=67}else if((w|0)==66){q=ZJ(c,l,y)|0;r=t;w=67}else if((w|0)==71){w=0;t=Nt(l,0,k)|0;s=(t|0)==0;c=l;m=0;o=65344;q=s?l+k|0:t;l=s?k:t-l|0;k=r}else if((w|0)==75){w=0;o=l;c=0;k=0;while(1){m=f[o>>2]|0;if(!m)break;k=uxa(F,m)|0;if((k|0)<0|k>>>0>(q-c|0)>>>0)break;c=k+c|0;if(q>>>0>c>>>0)o=o+4|0;else break}if((k|0)<0){i=-1;break a}yQ(a,32,j,c,t);if(!c){c=0;w=84}else{m=0;while(1){k=f[l>>2]|0;if(!k){w=84;break f}k=uxa(F,k)|0;m=k+m|0;if((m|0)>(c|0)){w=84;break f}Nwa(a,F,k);if(m>>>0>=c>>>0){w=84;break}else l=l+4|0}}}while(0);if((w|0)==67){w=0;l=(c|0)!=0|(l|0)!=0;t=(k|0)!=0|l;l=((l^1)&1)+(z-q)|0;c=t?q:y;q=y;l=t?((k|0)>(l|0)?k:l):k;k=(k|0)>-1?r&-65537:r}else if((w|0)==84){w=0;yQ(a,32,j,c,t^8192);j=(j|0)>(c|0)?j:c;c=v;continue}s=q-c|0;r=(l|0)<(s|0)?s:l;t=r+m|0;j=(j|0)<(t|0)?t:j;yQ(a,32,j,t,k);Nwa(a,o,m);yQ(a,48,j,t,k^65536);yQ(a,48,r,s,0);Nwa(a,c,s);yQ(a,32,j,t,k^8192);c=v}g:do if((w|0)==87)if(!a)if(!n)i=0;else{i=1;while(1){c=f[h+(i<<2)>>2]|0;if(!c){j=0;break}Zl(g+(i<<3)|0,c,e);i=i+1|0;if((i|0)>=10){i=1;break g}}while(1){c=i+1|0;if(j|0){i=-1;break g}if((c|0)>=10){i=1;break g}i=c;j=f[h+(c<<2)>>2]|0}}while(0);u=G;return i|0}function dd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1141,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1140,bga(d,b)|0);c=b}}case 2:{JJ(a,1142,b);cF(a,(Asa(c)|0)+16|0);JJ(a,1140,(Asa(c)|0)+12|0);JJ(a,1140,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1143,b);JJ(a,1140,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1144,b);cF(a,(jsa(c)|0)+16|0);cF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1145,b);JJ(a,1140,(Xra(c)|0)+28|0);cF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1146,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1140,bga(d,b)|0);c=b}}case 7:{JJ(a,1147,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1140,bga(d,b)|0);c=b}}case 8:{JJ(a,1148,b);b=fra(c)|0;JJ(a,1140,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1140,bga(d,b)|0);c=b}}case 9:{JJ(a,1149,b);break}case 10:{JJ(a,1150,b);JJ(a,1140,(Era(c)|0)+12|0);break}case 11:{JJ(a,1151,b);break}case 12:{JJ(a,1152,b);JJ(a,1140,(ura(c)|0)+12|0);break}case 13:{JJ(a,1153,b);JJ(a,1140,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1154,b);JJ(a,1140,(Zra(c)|0)+28|0);JJ(a,1140,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1155,b);JJ(a,1140,(wra(c)|0)+24|0);JJ(a,1140,(wra(c)|0)+20|0);break}case 24:{JJ(a,1156,b);JJ(a,1140,(Vqa(c)|0)+24|0);JJ(a,1140,(Vqa(c)|0)+20|0);JJ(a,1140,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1157,b);JJ(a,1140,(lra(c)|0)+16|0);JJ(a,1140,(lra(c)|0)+12|0);JJ(a,1140,(lra(c)|0)+8|0);break}case 27:{JJ(a,1158,b);JJ(a,1140,(kra(c)|0)+12|0);JJ(a,1140,(kra(c)|0)+8|0);break}case 15:{JJ(a,1159,b);break}case 16:{JJ(a,1160,b);JJ(a,1140,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1161,b);JJ(a,1140,(Sra(c)|0)+16|0);JJ(a,1140,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1162,b);JJ(a,1140,(Qra(c)|0)+16|0);JJ(a,1140,(Qra(c)|0)+12|0);JJ(a,1140,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1163,b);JJ(a,1140,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1164,b);cF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1165,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1140,bga(d,b)|0);c=b}}case 22:{JJ(a,1166,b);break}case 23:{JJ(a,1167,b);break}default:Ka()}while(0);return}function ed(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1480,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1479,bga(c,a)|0);b=a}}case 2:{JJ(d,1481,b);gF(d,(Asa(c)|0)+16|0);JJ(d,1479,(Asa(c)|0)+12|0);JJ(d,1479,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1482,b);JJ(d,1479,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1483,b);gF(d,(jsa(c)|0)+16|0);gF(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1484,b);JJ(d,1479,(Xra(c)|0)+28|0);gF(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1485,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1479,bga(c,a)|0);b=a}}case 7:{JJ(d,1486,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1479,bga(c,a)|0);b=a}}case 8:{JJ(d,1487,b);b=fra(c)|0;JJ(d,1479,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1479,bga(c,a)|0);b=a}}case 9:{JJ(d,1488,b);break}case 10:{JJ(d,1489,b);JJ(d,1479,(Era(c)|0)+12|0);break}case 11:{JJ(d,1490,b);break}case 12:{JJ(d,1491,b);JJ(d,1479,(ura(c)|0)+12|0);break}case 13:{JJ(d,1492,b);JJ(d,1479,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1493,b);JJ(d,1479,(Zra(c)|0)+28|0);JJ(d,1479,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1494,b);JJ(d,1479,(wra(c)|0)+24|0);JJ(d,1479,(wra(c)|0)+20|0);break}case 24:{JJ(d,1495,b);JJ(d,1479,(Vqa(c)|0)+24|0);JJ(d,1479,(Vqa(c)|0)+20|0);JJ(d,1479,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1496,b);JJ(d,1479,(lra(c)|0)+16|0);JJ(d,1479,(lra(c)|0)+12|0);JJ(d,1479,(lra(c)|0)+8|0);break}case 27:{JJ(d,1497,b);JJ(d,1479,(kra(c)|0)+12|0);JJ(d,1479,(kra(c)|0)+8|0);break}case 15:{JJ(d,1498,b);break}case 16:{JJ(d,1499,b);JJ(d,1479,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1500,b);JJ(d,1479,(Sra(c)|0)+16|0);JJ(d,1479,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1501,b);JJ(d,1479,(Qra(c)|0)+16|0);JJ(d,1479,(Qra(c)|0)+12|0);JJ(d,1479,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1502,b);JJ(d,1479,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1503,b);gF(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1504,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1479,bga(c,a)|0);b=a}}case 22:{JJ(d,1505,b);break}case 23:{JJ(d,1506,b);break}default:Ka()}while(0);return}function fd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1518,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1517,bga(d,b)|0);c=b}}case 2:{JJ(a,1519,b);dF(a,(Asa(c)|0)+16|0);JJ(a,1517,(Asa(c)|0)+12|0);JJ(a,1517,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1520,b);JJ(a,1517,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1521,b);dF(a,(jsa(c)|0)+16|0);dF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1522,b);JJ(a,1517,(Xra(c)|0)+28|0);dF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1523,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1517,bga(d,b)|0);c=b}}case 7:{JJ(a,1524,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1517,bga(d,b)|0);c=b}}case 8:{JJ(a,1525,b);b=fra(c)|0;JJ(a,1517,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1517,bga(d,b)|0);c=b}}case 9:{JJ(a,1526,b);break}case 10:{JJ(a,1527,b);JJ(a,1517,(Era(c)|0)+12|0);break}case 11:{JJ(a,1528,b);break}case 12:{JJ(a,1529,b);JJ(a,1517,(ura(c)|0)+12|0);break}case 13:{JJ(a,1530,b);JJ(a,1517,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1531,b);JJ(a,1517,(Zra(c)|0)+28|0);JJ(a,1517,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1532,b);JJ(a,1517,(wra(c)|0)+24|0);JJ(a,1517,(wra(c)|0)+20|0);break}case 24:{JJ(a,1533,b);JJ(a,1517,(Vqa(c)|0)+24|0);JJ(a,1517,(Vqa(c)|0)+20|0);JJ(a,1517,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1534,b);JJ(a,1517,(lra(c)|0)+16|0);JJ(a,1517,(lra(c)|0)+12|0);JJ(a,1517,(lra(c)|0)+8|0);break}case 27:{JJ(a,1535,b);JJ(a,1517,(kra(c)|0)+12|0);JJ(a,1517,(kra(c)|0)+8|0);break}case 15:{JJ(a,1536,b);break}case 16:{JJ(a,1537,b);JJ(a,1517,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1538,b);JJ(a,1517,(Sra(c)|0)+16|0);JJ(a,1517,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1539,b);JJ(a,1517,(Qra(c)|0)+16|0);JJ(a,1517,(Qra(c)|0)+12|0);JJ(a,1517,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1540,b);JJ(a,1517,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1541,b);dF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1542,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1517,bga(d,b)|0);c=b}}case 22:{JJ(a,1543,b);break}case 23:{JJ(a,1544,b);break}default:Ka()}while(0);return}function gd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,936,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,935,bga(d,b)|0);c=b}}case 2:{JJ(a,937,b);bF(a,(Asa(c)|0)+16|0);JJ(a,935,(Asa(c)|0)+12|0);JJ(a,935,(Asa(c)|0)+8|0);break}case 3:{JJ(a,938,b);JJ(a,935,(rsa(c)|0)+12|0);break}case 4:{JJ(a,939,b);bF(a,(jsa(c)|0)+16|0);bF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,940,b);JJ(a,935,(Xra(c)|0)+28|0);bF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,941,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,935,bga(d,b)|0);c=b}}case 7:{JJ(a,942,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,935,bga(d,b)|0);c=b}}case 8:{JJ(a,943,b);b=fra(c)|0;JJ(a,935,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,935,bga(d,b)|0);c=b}}case 9:{JJ(a,944,b);break}case 10:{JJ(a,945,b);JJ(a,935,(Era(c)|0)+12|0);break}case 11:{JJ(a,946,b);break}case 12:{JJ(a,947,b);JJ(a,935,(ura(c)|0)+12|0);break}case 13:{JJ(a,948,b);JJ(a,935,(lsa(c)|0)+24|0);break}case 14:{JJ(a,949,b);JJ(a,935,(Zra(c)|0)+28|0);JJ(a,935,(Zra(c)|0)+24|0);break}case 25:{JJ(a,950,b);JJ(a,935,(wra(c)|0)+24|0);JJ(a,935,(wra(c)|0)+20|0);break}case 24:{JJ(a,951,b);JJ(a,935,(Vqa(c)|0)+24|0);JJ(a,935,(Vqa(c)|0)+20|0);JJ(a,935,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,952,b);JJ(a,935,(lra(c)|0)+16|0);JJ(a,935,(lra(c)|0)+12|0);JJ(a,935,(lra(c)|0)+8|0);break}case 27:{JJ(a,953,b);JJ(a,935,(kra(c)|0)+12|0);JJ(a,935,(kra(c)|0)+8|0);break}case 15:{JJ(a,954,b);break}case 16:{JJ(a,955,b);JJ(a,935,(Yra(c)|0)+12|0);break}case 17:{JJ(a,956,b);JJ(a,935,(Sra(c)|0)+16|0);JJ(a,935,(Sra(c)|0)+12|0);break}case 18:{JJ(a,957,b);JJ(a,935,(Qra(c)|0)+16|0);JJ(a,935,(Qra(c)|0)+12|0);JJ(a,935,(Qra(c)|0)+8|0);break}case 19:{JJ(a,958,b);JJ(a,935,(nsa(c)|0)+8|0);break}case 20:{JJ(a,959,b);bF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,960,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,935,bga(d,b)|0);c=b}}case 22:{JJ(a,961,b);break}case 23:{JJ(a,962,b);break}default:Ka()}while(0);return}function hd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,992,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,991,bga(d,b)|0);c=b}}case 2:{JJ(a,993,b);rF(a,(Asa(c)|0)+16|0);JJ(a,991,(Asa(c)|0)+12|0);JJ(a,991,(Asa(c)|0)+8|0);break}case 3:{JJ(a,994,b);JJ(a,991,(rsa(c)|0)+12|0);break}case 4:{JJ(a,995,b);rF(a,(jsa(c)|0)+16|0);rF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,996,b);JJ(a,991,(Xra(c)|0)+28|0);rF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,997,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,991,bga(d,b)|0);c=b}}case 7:{JJ(a,998,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,991,bga(d,b)|0);c=b}}case 8:{JJ(a,999,b);b=fra(c)|0;JJ(a,991,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,991,bga(d,b)|0);c=b}}case 9:{JJ(a,1e3,b);break}case 10:{JJ(a,1001,b);JJ(a,991,(Era(c)|0)+12|0);break}case 11:{JJ(a,1002,b);break}case 12:{JJ(a,1003,b);JJ(a,991,(ura(c)|0)+12|0);break}case 13:{JJ(a,1004,b);JJ(a,991,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1005,b);JJ(a,991,(Zra(c)|0)+28|0);JJ(a,991,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1006,b);JJ(a,991,(wra(c)|0)+24|0);JJ(a,991,(wra(c)|0)+20|0);break}case 24:{JJ(a,1007,b);JJ(a,991,(Vqa(c)|0)+24|0);JJ(a,991,(Vqa(c)|0)+20|0);JJ(a,991,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1008,b);JJ(a,991,(lra(c)|0)+16|0);JJ(a,991,(lra(c)|0)+12|0);JJ(a,991,(lra(c)|0)+8|0);break}case 27:{JJ(a,1009,b);JJ(a,991,(kra(c)|0)+12|0);JJ(a,991,(kra(c)|0)+8|0);break}case 15:{JJ(a,1010,b);break}case 16:{JJ(a,1011,b);JJ(a,991,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1012,b);JJ(a,991,(Sra(c)|0)+16|0);JJ(a,991,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1013,b);JJ(a,991,(Qra(c)|0)+16|0);JJ(a,991,(Qra(c)|0)+12|0);JJ(a,991,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1014,b);JJ(a,991,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1015,b);rF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1016,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,991,bga(d,b)|0);c=b}}case 22:{JJ(a,1017,b);break}case 23:{JJ(a,1018,b);break}default:Ka()}while(0);return}function id(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,300,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,299,bga(d,b)|0);c=b}}case 2:{JJ(a,301,b);mF(a,(Asa(c)|0)+16|0);JJ(a,299,(Asa(c)|0)+12|0);JJ(a,299,(Asa(c)|0)+8|0);break}case 3:{JJ(a,302,b);JJ(a,299,(rsa(c)|0)+12|0);break}case 4:{JJ(a,303,b);mF(a,(jsa(c)|0)+16|0);mF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,304,b);JJ(a,299,(Xra(c)|0)+28|0);mF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,305,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,299,bga(d,b)|0);c=b}}case 7:{JJ(a,306,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,299,bga(d,b)|0);c=b}}case 8:{JJ(a,307,b);b=fra(c)|0;JJ(a,299,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,299,bga(d,b)|0);c=b}}case 9:{JJ(a,308,b);break}case 10:{JJ(a,309,b);JJ(a,299,(Era(c)|0)+12|0);break}case 11:{JJ(a,310,b);break}case 12:{JJ(a,311,b);JJ(a,299,(ura(c)|0)+12|0);break}case 13:{JJ(a,312,b);JJ(a,299,(lsa(c)|0)+24|0);break}case 14:{JJ(a,313,b);JJ(a,299,(Zra(c)|0)+28|0);JJ(a,299,(Zra(c)|0)+24|0);break}case 25:{JJ(a,314,b);JJ(a,299,(wra(c)|0)+24|0);JJ(a,299,(wra(c)|0)+20|0);break}case 24:{JJ(a,315,b);JJ(a,299,(Vqa(c)|0)+24|0);JJ(a,299,(Vqa(c)|0)+20|0);JJ(a,299,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,316,b);JJ(a,299,(lra(c)|0)+16|0);JJ(a,299,(lra(c)|0)+12|0);JJ(a,299,(lra(c)|0)+8|0);break}case 27:{JJ(a,317,b);JJ(a,299,(kra(c)|0)+12|0);JJ(a,299,(kra(c)|0)+8|0);break}case 15:{JJ(a,318,b);break}case 16:{JJ(a,319,b);JJ(a,299,(Yra(c)|0)+12|0);break}case 17:{JJ(a,320,b);JJ(a,299,(Sra(c)|0)+16|0);JJ(a,299,(Sra(c)|0)+12|0);break}case 18:{JJ(a,321,b);JJ(a,299,(Qra(c)|0)+16|0);JJ(a,299,(Qra(c)|0)+12|0);JJ(a,299,(Qra(c)|0)+8|0);break}case 19:{JJ(a,322,b);JJ(a,299,(nsa(c)|0)+8|0);break}case 20:{JJ(a,323,b);mF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,324,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,299,bga(d,b)|0);c=b}}case 22:{JJ(a,325,b);break}case 23:{JJ(a,326,b);break}default:Ka()}while(0);return}function jd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,785,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,784,bga(d,b)|0);c=b}}case 2:{JJ(a,786,b);pF(a,(Asa(c)|0)+16|0);JJ(a,784,(Asa(c)|0)+12|0);JJ(a,784,(Asa(c)|0)+8|0);break}case 3:{JJ(a,787,b);JJ(a,784,(rsa(c)|0)+12|0);break}case 4:{JJ(a,788,b);pF(a,(jsa(c)|0)+16|0);pF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,789,b);JJ(a,784,(Xra(c)|0)+28|0);pF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,790,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,784,bga(d,b)|0);c=b}}case 7:{JJ(a,791,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,784,bga(d,b)|0);c=b}}case 8:{JJ(a,792,b);b=fra(c)|0;JJ(a,784,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,784,bga(d,b)|0);c=b}}case 9:{JJ(a,793,b);break}case 10:{JJ(a,794,b);JJ(a,784,(Era(c)|0)+12|0);break}case 11:{JJ(a,795,b);break}case 12:{JJ(a,796,b);JJ(a,784,(ura(c)|0)+12|0);break}case 13:{JJ(a,797,b);JJ(a,784,(lsa(c)|0)+24|0);break}case 14:{JJ(a,798,b);JJ(a,784,(Zra(c)|0)+28|0);JJ(a,784,(Zra(c)|0)+24|0);break}case 25:{JJ(a,799,b);JJ(a,784,(wra(c)|0)+24|0);JJ(a,784,(wra(c)|0)+20|0);break}case 24:{JJ(a,800,b);JJ(a,784,(Vqa(c)|0)+24|0);JJ(a,784,(Vqa(c)|0)+20|0);JJ(a,784,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,801,b);JJ(a,784,(lra(c)|0)+16|0);JJ(a,784,(lra(c)|0)+12|0);JJ(a,784,(lra(c)|0)+8|0);break}case 27:{JJ(a,802,b);JJ(a,784,(kra(c)|0)+12|0);JJ(a,784,(kra(c)|0)+8|0);break}case 15:{JJ(a,803,b);break}case 16:{JJ(a,804,b);JJ(a,784,(Yra(c)|0)+12|0);break}case 17:{JJ(a,805,b);JJ(a,784,(Sra(c)|0)+16|0);JJ(a,784,(Sra(c)|0)+12|0);break}case 18:{JJ(a,806,b);JJ(a,784,(Qra(c)|0)+16|0);JJ(a,784,(Qra(c)|0)+12|0);JJ(a,784,(Qra(c)|0)+8|0);break}case 19:{JJ(a,807,b);JJ(a,784,(nsa(c)|0)+8|0);break}case 20:{JJ(a,808,b);pF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,809,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,784,bga(d,b)|0);c=b}}case 22:{JJ(a,810,b);break}case 23:{JJ(a,811,b);break}default:Ka()}while(0);return}function kd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,815,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,812,bga(d,b)|0);c=b}}case 2:{JJ(a,816,b);tF(a,(Asa(c)|0)+16|0);JJ(a,812,(Asa(c)|0)+12|0);JJ(a,812,(Asa(c)|0)+8|0);break}case 3:{JJ(a,817,b);JJ(a,812,(rsa(c)|0)+12|0);break}case 4:{JJ(a,818,b);tF(a,(jsa(c)|0)+16|0);tF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,819,b);JJ(a,812,(Xra(c)|0)+28|0);tF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,820,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,812,bga(d,b)|0);c=b}}case 7:{JJ(a,821,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,812,bga(d,b)|0);c=b}}case 8:{JJ(a,822,b);b=fra(c)|0;JJ(a,812,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,812,bga(d,b)|0);c=b}}case 9:{JJ(a,823,b);break}case 10:{JJ(a,824,b);JJ(a,812,(Era(c)|0)+12|0);break}case 11:{JJ(a,825,b);break}case 12:{JJ(a,826,b);JJ(a,812,(ura(c)|0)+12|0);break}case 13:{JJ(a,827,b);JJ(a,812,(lsa(c)|0)+24|0);break}case 14:{JJ(a,828,b);JJ(a,812,(Zra(c)|0)+28|0);JJ(a,812,(Zra(c)|0)+24|0);break}case 25:{JJ(a,829,b);JJ(a,812,(wra(c)|0)+24|0);JJ(a,812,(wra(c)|0)+20|0);break}case 24:{JJ(a,830,b);JJ(a,812,(Vqa(c)|0)+24|0);JJ(a,812,(Vqa(c)|0)+20|0);JJ(a,812,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,831,b);JJ(a,812,(lra(c)|0)+16|0);JJ(a,812,(lra(c)|0)+12|0);JJ(a,812,(lra(c)|0)+8|0);break}case 27:{JJ(a,832,b);JJ(a,812,(kra(c)|0)+12|0);JJ(a,812,(kra(c)|0)+8|0);break}case 15:{JJ(a,833,b);break}case 16:{JJ(a,834,b);JJ(a,812,(Yra(c)|0)+12|0);break}case 17:{JJ(a,835,b);JJ(a,812,(Sra(c)|0)+16|0);JJ(a,812,(Sra(c)|0)+12|0);break}case 18:{JJ(a,836,b);JJ(a,812,(Qra(c)|0)+16|0);JJ(a,812,(Qra(c)|0)+12|0);JJ(a,812,(Qra(c)|0)+8|0);break}case 19:{JJ(a,837,b);JJ(a,812,(nsa(c)|0)+8|0);break}case 20:{JJ(a,838,b);tF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,839,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,812,bga(d,b)|0);c=b}}case 22:{JJ(a,840,b);break}case 23:{JJ(a,841,b);break}default:Ka()}while(0);return}function ld(a){a=a|0;var b=0,c=0,d=0,e=0.0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0;x=u;u=u+64|0;z=x+48|0;A=x+36|0;D=x+16|0;B=x+4|0;w=x;c=a+140|0;b=f[a+136>>2]|0;Fo(c,Y(b,b)|0);c=f[c>>2]|0;b=f[a+144>>2]|0;b=(c+(b>>>5<<2)-c<<3)+(b&31)|0;d=0;while(1){if((b|0)<=0)break;t=c;f[t>>2]=f[t>>2]&~(1<<d);v=(d|0)==31;b=b+-1|0;c=v?t+4|0:c;d=v?0:d+1|0}r=D+16|0;f[D>>2]=0;f[D+4>>2]=0;f[D+8>>2]=0;f[D+12>>2]=0;n[r>>2]=1.0;o=f[a+60>>2]|0;p=a+152|0;s=D+4|0;t=D+12|0;v=D+8|0;m=f[a+56>>2]|0;a:while(1){if((m|0)==(o|0)){C=6;break}c=f[m>>2]|0;f[z>>2]=c;b=c;if(Qt(p,z)|0){f[A>>2]=c;f[z>>2]=c;l=$z(z,4)|0;j=f[s>>2]|0;k=(j|0)==0;b:do if(!k){h=j+-1|0;i=(h&j|0)==0;if(!i)if(l>>>0<j>>>0)c=l;else c=(l>>>0)%(j>>>0)|0;else c=h&l;d=f[(f[D>>2]|0)+(c<<2)>>2]|0;if(!d)C=22;else do{d=f[d>>2]|0;if(!d){C=22;break b}a=f[d+4>>2]|0;if((a|0)!=(l|0)){if(!i){if(a>>>0>=j>>>0)a=(a>>>0)%(j>>>0)|0}else a=a&h;if((a|0)!=(c|0)){C=22;break b}}}while((f[d+8>>2]|0)!=(b|0))}else{c=0;C=22}while(0);if((C|0)==22){C=0;y=0;Ca(78,z|0,D|0,l|0,A|0);q=y;y=0;if(q&1){C=43;break}e=+(((f[t>>2]|0)+1|0)>>>0);g=+n[r>>2];do if(k|e>+(j>>>0)*g){q=(j>>>0<3|(j+-1&j|0)!=0)&1|j<<1;k=~~+X(+(e/g))>>>0;y=0;ja(1942,D|0,(q>>>0<k>>>0?k:q)|0);q=y;y=0;if(q&1){C=29;break a}b=f[s>>2]|0;c=b+-1|0;if(!(c&b)){a=b;c=c&l;break}if(l>>>0<b>>>0){a=b;c=l}else{a=b;c=(l>>>0)%(b>>>0)|0}}else a=j;while(0);b=f[(f[D>>2]|0)+(c<<2)>>2]|0;if(!b){d=f[z>>2]|0;f[d>>2]=f[v>>2];f[v>>2]=d;f[(f[D>>2]|0)+(c<<2)>>2]=v;b=f[d>>2]|0;if(b|0){b=f[b+4>>2]|0;c=a+-1|0;if(c&a){if(b>>>0>=a>>>0)b=(b>>>0)%(a>>>0)|0}else b=b&c;f[(f[D>>2]|0)+(b<<2)>>2]=d}}else{q=f[z>>2]|0;f[q>>2]=f[b>>2];f[b>>2]=q}f[t>>2]=(f[t>>2]|0)+1;b=f[m>>2]|0}y=0;ja(1943,b+24|0,b|0);q=y;y=0;if(q&1){C=45;break}}m=m+4|0}if((C|0)==6){p=D+8|0;q=B+4|0;c:while(1){if(!(f[t>>2]|0)){C=102;break}b=f[p>>2]|0;i=f[b+8>>2]|0;EJ(D,b);gza(B);b=i+12|0;y=0;c=oa(66,i+36|0,b|0,B|0)|0;o=y;y=0;if(o&1){C=49;break}d:do if(c){if(((f[i+16>>2]|0)-(f[b>>2]|0)|0)>>>0>=((f[q>>2]|0)-(f[B>>2]|0)|0)>>>0){C=51;break c}y=0;ua(132,b|0,B|0)|0;o=y;y=0;if(o&1){C=49;break c}y=0;ja(1943,i+24|0,B|0);o=y;y=0;if(o&1){C=49;break c}h=f[i+4>>2]|0;c=f[i>>2]|0;d=h-c|0;b=f[B>>2]|0;a=(f[q>>2]|0)-b|0;e:do if((d|0)==(a|0))while(1){if((c|0)==(h|0))break d;if((f[c>>2]|0)!=(f[b>>2]|0))break e;b=b+4|0;c=c+4|0}while(0);if(d>>>0>=a>>>0){C=60;break c}y=0;ua(132,i|0,B|0)|0;o=y;y=0;if(o&1){C=49;break c}o=f[i+52>>2]|0;m=f[i+48>>2]|0;while(1){if((m|0)==(o|0))break d;h=f[m>>2]|0;f[w>>2]=h;f[z>>2]=h;l=$z(z,4)|0;a=f[s>>2]|0;k=(a|0)==0;f:do if(!k){i=a+-1|0;j=(i&a|0)==0;if(!j)if(l>>>0<a>>>0)c=l;else c=(l>>>0)%(a>>>0)|0;else c=i&l;b=f[(f[D>>2]|0)+(c<<2)>>2]|0;if(!b)C=78;else do{b=f[b>>2]|0;if(!b){C=78;break f}d=f[b+4>>2]|0;if((d|0)!=(l|0)){do if(j)d=d&i;else{if(d>>>0<a>>>0)break;d=(d>>>0)%(a>>>0)|0}while(0);if((d|0)!=(c|0)){C=78;break f}}}while((f[b+8>>2]|0)!=(h|0))}else{c=0;C=78}while(0);if((C|0)==78){C=0;y=0;Ca(77,A|0,D|0,l|0,w|0);j=y;y=0;if(j&1){C=98;break c}e=+(((f[t>>2]|0)+1|0)>>>0);g=+n[r>>2];do if(k|e>+(a>>>0)*g){k=(a>>>0<3|(a+-1&a|0)!=0)&1|a<<1;j=~~+X(+(e/g))>>>0;y=0;ja(1942,D|0,(k>>>0<j>>>0?j:k)|0);k=y;y=0;if(k&1){C=85;break c}b=f[s>>2]|0;c=b+-1|0;if(!(c&b)){a=b;c=c&l;break}if(l>>>0<b>>>0){a=b;c=l;break}a=b;c=(l>>>0)%(b>>>0)|0}while(0);b=f[(f[D>>2]|0)+(c<<2)>>2]|0;do if(!b){d=f[A>>2]|0;f[d>>2]=f[v>>2];f[v>>2]=d;f[(f[D>>2]|0)+(c<<2)>>2]=v;b=f[d>>2]|0;if(!b)break;b=f[b+4>>2]|0;c=a+-1|0;do if(!(c&a))b=b&c;else{if(b>>>0<a>>>0)break;b=(b>>>0)%(a>>>0)|0}while(0);f[(f[D>>2]|0)+(b<<2)>>2]=d}else{l=f[A>>2]|0;f[l>>2]=f[b>>2];f[b>>2]=l}while(0);f[t>>2]=(f[t>>2]|0)+1}m=m+4|0}}while(0);E4(B)}if((C|0)==51){y=0;Ca(52,50252,50016,345,50292);y=0;C=49}else if((C|0)==60){y=0;Ca(52,50305,50016,354,50292);y=0;C=49}else if((C|0)==85){b=Pa()|0;c=f[A>>2]|0;f[A>>2]=0;if(c|0)$Ja(c);C=99}else if((C|0)==98){b=Pa()|0;C=99}else if((C|0)==102){Sma(D);u=x;return}if((C|0)==49)b=Pa()|0;E4(B)}else if((C|0)==29){b=Pa()|0;c=f[z>>2]|0;f[z>>2]=0;if(c|0)$Ja(c);C=44}else if((C|0)==43){b=Pa()|0;C=44}else if((C|0)==45)b=Pa()|0;Sma(D);$a(b|0)}function md(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,610,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,609,bga(d,b)|0);c=b}}case 2:{JJ(a,611,b);DF(a,(Asa(c)|0)+16|0);JJ(a,609,(Asa(c)|0)+12|0);JJ(a,609,(Asa(c)|0)+8|0);break}case 3:{JJ(a,612,b);JJ(a,609,(rsa(c)|0)+12|0);break}case 4:{JJ(a,613,b);DF(a,(jsa(c)|0)+16|0);DF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,614,b);JJ(a,609,(Xra(c)|0)+28|0);DF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,615,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,609,bga(d,b)|0);c=b}}case 7:{JJ(a,616,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,609,bga(d,b)|0);c=b}}case 8:{JJ(a,617,b);b=fra(c)|0;JJ(a,609,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,609,bga(d,b)|0);c=b}}case 9:{JJ(a,618,b);break}case 10:{JJ(a,619,b);JJ(a,609,(Era(c)|0)+12|0);break}case 11:{JJ(a,620,b);break}case 12:{JJ(a,621,b);JJ(a,609,(ura(c)|0)+12|0);break}case 13:{JJ(a,622,b);JJ(a,609,(lsa(c)|0)+24|0);break}case 14:{JJ(a,623,b);JJ(a,609,(Zra(c)|0)+28|0);JJ(a,609,(Zra(c)|0)+24|0);break}case 25:{JJ(a,624,b);JJ(a,609,(wra(c)|0)+24|0);JJ(a,609,(wra(c)|0)+20|0);break}case 24:{JJ(a,625,b);JJ(a,609,(Vqa(c)|0)+24|0);JJ(a,609,(Vqa(c)|0)+20|0);JJ(a,609,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,626,b);JJ(a,609,(lra(c)|0)+16|0);JJ(a,609,(lra(c)|0)+12|0);JJ(a,609,(lra(c)|0)+8|0);break}case 27:{JJ(a,627,b);JJ(a,609,(kra(c)|0)+12|0);JJ(a,609,(kra(c)|0)+8|0);break}case 15:{JJ(a,628,b);break}case 16:{JJ(a,629,b);JJ(a,609,(Yra(c)|0)+12|0);break}case 17:{JJ(a,630,b);JJ(a,609,(Sra(c)|0)+16|0);JJ(a,609,(Sra(c)|0)+12|0);break}case 18:{JJ(a,631,b);JJ(a,609,(Qra(c)|0)+16|0);JJ(a,609,(Qra(c)|0)+12|0);JJ(a,609,(Qra(c)|0)+8|0);break}case 19:{JJ(a,632,b);JJ(a,609,(nsa(c)|0)+8|0);break}case 20:{JJ(a,633,b);DF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,634,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,609,bga(d,b)|0);c=b}}case 22:{JJ(a,635,b);break}case 23:{JJ(a,636,b);break}default:Ka()}while(0);return}function nd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1789,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1788,bga(d,b)|0);c=b}}case 2:{JJ(a,1790,b);GF(a,(Asa(c)|0)+16|0);JJ(a,1788,(Asa(c)|0)+12|0);JJ(a,1788,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1791,b);JJ(a,1788,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1792,b);GF(a,(jsa(c)|0)+16|0);GF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1793,b);JJ(a,1788,(Xra(c)|0)+28|0);GF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1794,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1788,bga(d,b)|0);c=b}}case 7:{JJ(a,1795,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1788,bga(d,b)|0);c=b}}case 8:{JJ(a,1796,b);b=fra(c)|0;JJ(a,1788,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1788,bga(d,b)|0);c=b}}case 9:{JJ(a,1797,b);break}case 10:{JJ(a,1798,b);JJ(a,1788,(Era(c)|0)+12|0);break}case 11:{JJ(a,1799,b);break}case 12:{JJ(a,1800,b);JJ(a,1788,(ura(c)|0)+12|0);break}case 13:{JJ(a,1801,b);JJ(a,1788,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1802,b);JJ(a,1788,(Zra(c)|0)+28|0);JJ(a,1788,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1803,b);JJ(a,1788,(wra(c)|0)+24|0);JJ(a,1788,(wra(c)|0)+20|0);break}case 24:{JJ(a,1804,b);JJ(a,1788,(Vqa(c)|0)+24|0);JJ(a,1788,(Vqa(c)|0)+20|0);JJ(a,1788,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1805,b);JJ(a,1788,(lra(c)|0)+16|0);JJ(a,1788,(lra(c)|0)+12|0);JJ(a,1788,(lra(c)|0)+8|0);break}case 27:{JJ(a,1806,b);JJ(a,1788,(kra(c)|0)+12|0);JJ(a,1788,(kra(c)|0)+8|0);break}case 15:{JJ(a,1807,b);break}case 16:{JJ(a,1808,b);JJ(a,1788,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1809,b);JJ(a,1788,(Sra(c)|0)+16|0);JJ(a,1788,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1810,b);JJ(a,1788,(Qra(c)|0)+16|0);JJ(a,1788,(Qra(c)|0)+12|0);JJ(a,1788,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1811,b);JJ(a,1788,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1812,b);GF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1813,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1788,bga(d,b)|0);c=b}}case 22:{JJ(a,1814,b);break}case 23:{JJ(a,1815,b);break}default:Ka()}while(0);return}function od(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1817,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1816,bga(d,b)|0);c=b}}case 2:{JJ(a,1818,b);NF(a,(Asa(c)|0)+16|0);JJ(a,1816,(Asa(c)|0)+12|0);JJ(a,1816,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1819,b);JJ(a,1816,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1820,b);NF(a,(jsa(c)|0)+16|0);NF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1821,b);JJ(a,1816,(Xra(c)|0)+28|0);NF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1822,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1816,bga(d,b)|0);c=b}}case 7:{JJ(a,1823,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1816,bga(d,b)|0);c=b}}case 8:{JJ(a,1824,b);b=fra(c)|0;JJ(a,1816,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1816,bga(d,b)|0);c=b}}case 9:{JJ(a,1825,b);break}case 10:{JJ(a,1826,b);JJ(a,1816,(Era(c)|0)+12|0);break}case 11:{JJ(a,1827,b);break}case 12:{JJ(a,1828,b);JJ(a,1816,(ura(c)|0)+12|0);break}case 13:{JJ(a,1829,b);JJ(a,1816,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1830,b);JJ(a,1816,(Zra(c)|0)+28|0);JJ(a,1816,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1831,b);JJ(a,1816,(wra(c)|0)+24|0);JJ(a,1816,(wra(c)|0)+20|0);break}case 24:{JJ(a,1832,b);JJ(a,1816,(Vqa(c)|0)+24|0);JJ(a,1816,(Vqa(c)|0)+20|0);JJ(a,1816,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1833,b);JJ(a,1816,(lra(c)|0)+16|0);JJ(a,1816,(lra(c)|0)+12|0);JJ(a,1816,(lra(c)|0)+8|0);break}case 27:{JJ(a,1834,b);JJ(a,1816,(kra(c)|0)+12|0);JJ(a,1816,(kra(c)|0)+8|0);break}case 15:{JJ(a,1835,b);break}case 16:{JJ(a,1836,b);JJ(a,1816,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1837,b);JJ(a,1816,(Sra(c)|0)+16|0);JJ(a,1816,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1838,b);JJ(a,1816,(Qra(c)|0)+16|0);JJ(a,1816,(Qra(c)|0)+12|0);JJ(a,1816,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1839,b);JJ(a,1816,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1840,b);NF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1841,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1816,bga(d,b)|0);c=b}}case 22:{JJ(a,1842,b);break}case 23:{JJ(a,1843,b);break}default:Ka()}while(0);return}function pd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,121,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,63,bga(d,b)|0);c=b}}case 2:{JJ(a,122,b);AF(a,(Asa(c)|0)+16|0);JJ(a,63,(Asa(c)|0)+12|0);JJ(a,63,(Asa(c)|0)+8|0);break}case 3:{JJ(a,123,b);JJ(a,63,(rsa(c)|0)+12|0);break}case 4:{JJ(a,124,b);AF(a,(jsa(c)|0)+16|0);AF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,125,b);JJ(a,63,(Xra(c)|0)+28|0);AF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,126,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,63,bga(d,b)|0);c=b}}case 7:{JJ(a,127,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,63,bga(d,b)|0);c=b}}case 8:{JJ(a,128,b);b=fra(c)|0;JJ(a,63,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,63,bga(d,b)|0);c=b}}case 9:{JJ(a,129,b);break}case 10:{JJ(a,130,b);JJ(a,63,(Era(c)|0)+12|0);break}case 11:{JJ(a,131,b);break}case 12:{JJ(a,132,b);JJ(a,63,(ura(c)|0)+12|0);break}case 13:{JJ(a,133,b);JJ(a,63,(lsa(c)|0)+24|0);break}case 14:{JJ(a,134,b);JJ(a,63,(Zra(c)|0)+28|0);JJ(a,63,(Zra(c)|0)+24|0);break}case 25:{JJ(a,135,b);JJ(a,63,(wra(c)|0)+24|0);JJ(a,63,(wra(c)|0)+20|0);break}case 24:{JJ(a,136,b);JJ(a,63,(Vqa(c)|0)+24|0);JJ(a,63,(Vqa(c)|0)+20|0);JJ(a,63,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,137,b);JJ(a,63,(lra(c)|0)+16|0);JJ(a,63,(lra(c)|0)+12|0);JJ(a,63,(lra(c)|0)+8|0);break}case 27:{JJ(a,138,b);JJ(a,63,(kra(c)|0)+12|0);JJ(a,63,(kra(c)|0)+8|0);break}case 15:{JJ(a,139,b);break}case 16:{JJ(a,140,b);JJ(a,63,(Yra(c)|0)+12|0);break}case 17:{JJ(a,141,b);JJ(a,63,(Sra(c)|0)+16|0);JJ(a,63,(Sra(c)|0)+12|0);break}case 18:{JJ(a,142,b);JJ(a,63,(Qra(c)|0)+16|0);JJ(a,63,(Qra(c)|0)+12|0);JJ(a,63,(Qra(c)|0)+8|0);break}case 19:{JJ(a,143,b);JJ(a,63,(nsa(c)|0)+8|0);break}case 20:{JJ(a,144,b);AF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,145,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,63,bga(d,b)|0);c=b}}case 22:{JJ(a,146,b);break}case 23:{JJ(a,147,b);break}default:Ka()}while(0);return}function qd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1111,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1110,bga(c,a)|0);b=a}}case 2:{JJ(d,1112,b);WF(d,(Asa(c)|0)+16|0);JJ(d,1110,(Asa(c)|0)+12|0);JJ(d,1110,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1113,b);JJ(d,1110,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1114,b);WF(d,(jsa(c)|0)+16|0);WF(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1115,b);JJ(d,1110,(Xra(c)|0)+28|0);WF(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1116,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1110,bga(c,a)|0);b=a}}case 7:{JJ(d,1117,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1110,bga(c,a)|0);b=a}}case 8:{JJ(d,1118,b);b=fra(c)|0;JJ(d,1110,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1110,bga(c,a)|0);b=a}}case 9:{JJ(d,1119,b);break}case 10:{JJ(d,1120,b);JJ(d,1110,(Era(c)|0)+12|0);break}case 11:{JJ(d,1121,b);break}case 12:{JJ(d,1122,b);JJ(d,1110,(ura(c)|0)+12|0);break}case 13:{JJ(d,1123,b);JJ(d,1110,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1124,b);JJ(d,1110,(Zra(c)|0)+28|0);JJ(d,1110,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1125,b);JJ(d,1110,(wra(c)|0)+24|0);JJ(d,1110,(wra(c)|0)+20|0);break}case 24:{JJ(d,1126,b);JJ(d,1110,(Vqa(c)|0)+24|0);JJ(d,1110,(Vqa(c)|0)+20|0);JJ(d,1110,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1127,b);JJ(d,1110,(lra(c)|0)+16|0);JJ(d,1110,(lra(c)|0)+12|0);JJ(d,1110,(lra(c)|0)+8|0);break}case 27:{JJ(d,1128,b);JJ(d,1110,(kra(c)|0)+12|0);JJ(d,1110,(kra(c)|0)+8|0);break}case 15:{JJ(d,1129,b);break}case 16:{JJ(d,1130,b);JJ(d,1110,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1131,b);JJ(d,1110,(Sra(c)|0)+16|0);JJ(d,1110,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1132,b);JJ(d,1110,(Qra(c)|0)+16|0);JJ(d,1110,(Qra(c)|0)+12|0);JJ(d,1110,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1133,b);JJ(d,1110,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1134,b);WF(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1135,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1110,bga(c,a)|0);b=a}}case 22:{JJ(d,1136,b);break}case 23:{JJ(d,1137,b);break}default:Ka()}while(0);return}function rd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1730,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1729,bga(d,b)|0);c=b}}case 2:{JJ(a,1731,b);_F(a,(Asa(c)|0)+16|0);JJ(a,1729,(Asa(c)|0)+12|0);JJ(a,1729,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1732,b);JJ(a,1729,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1733,b);_F(a,(jsa(c)|0)+16|0);_F(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1734,b);JJ(a,1729,(Xra(c)|0)+28|0);_F(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1735,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1729,bga(d,b)|0);c=b}}case 7:{JJ(a,1736,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1729,bga(d,b)|0);c=b}}case 8:{JJ(a,1737,b);b=fra(c)|0;JJ(a,1729,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1729,bga(d,b)|0);c=b}}case 9:{JJ(a,1738,b);break}case 10:{JJ(a,1739,b);JJ(a,1729,(Era(c)|0)+12|0);break}case 11:{JJ(a,1740,b);break}case 12:{JJ(a,1741,b);JJ(a,1729,(ura(c)|0)+12|0);break}case 13:{JJ(a,1742,b);JJ(a,1729,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1743,b);JJ(a,1729,(Zra(c)|0)+28|0);JJ(a,1729,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1744,b);JJ(a,1729,(wra(c)|0)+24|0);JJ(a,1729,(wra(c)|0)+20|0);break}case 24:{JJ(a,1745,b);JJ(a,1729,(Vqa(c)|0)+24|0);JJ(a,1729,(Vqa(c)|0)+20|0);JJ(a,1729,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1746,b);JJ(a,1729,(lra(c)|0)+16|0);JJ(a,1729,(lra(c)|0)+12|0);JJ(a,1729,(lra(c)|0)+8|0);break}case 27:{JJ(a,1747,b);JJ(a,1729,(kra(c)|0)+12|0);JJ(a,1729,(kra(c)|0)+8|0);break}case 15:{JJ(a,1748,b);break}case 16:{JJ(a,1749,b);JJ(a,1729,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1750,b);JJ(a,1729,(Sra(c)|0)+16|0);JJ(a,1729,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1751,b);JJ(a,1729,(Qra(c)|0)+16|0);JJ(a,1729,(Qra(c)|0)+12|0);JJ(a,1729,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1752,b);JJ(a,1729,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1753,b);_F(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1754,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1729,bga(d,b)|0);c=b}}case 22:{JJ(a,1755,b);break}case 23:{JJ(a,1756,b);break}default:Ka()}while(0);return}function sd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1023,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1022,bga(c,a)|0);b=a}}case 2:{JJ(d,1024,b);mG(d,(Asa(c)|0)+16|0);JJ(d,1022,(Asa(c)|0)+12|0);JJ(d,1022,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1025,b);JJ(d,1022,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1026,b);mG(d,(jsa(c)|0)+16|0);mG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1027,b);JJ(d,1022,(Xra(c)|0)+28|0);mG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1028,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1022,bga(c,a)|0);b=a}}case 7:{JJ(d,1029,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1022,bga(c,a)|0);b=a}}case 8:{JJ(d,1030,b);b=fra(c)|0;JJ(d,1022,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1022,bga(c,a)|0);b=a}}case 9:{JJ(d,1031,b);break}case 10:{JJ(d,1032,b);JJ(d,1022,(Era(c)|0)+12|0);break}case 11:{JJ(d,1033,b);break}case 12:{JJ(d,1034,b);JJ(d,1022,(ura(c)|0)+12|0);break}case 13:{JJ(d,1035,b);JJ(d,1022,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1036,b);JJ(d,1022,(Zra(c)|0)+28|0);JJ(d,1022,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1037,b);JJ(d,1022,(wra(c)|0)+24|0);JJ(d,1022,(wra(c)|0)+20|0);break}case 24:{JJ(d,1038,b);JJ(d,1022,(Vqa(c)|0)+24|0);JJ(d,1022,(Vqa(c)|0)+20|0);JJ(d,1022,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1039,b);JJ(d,1022,(lra(c)|0)+16|0);JJ(d,1022,(lra(c)|0)+12|0);JJ(d,1022,(lra(c)|0)+8|0);break}case 27:{JJ(d,1040,b);JJ(d,1022,(kra(c)|0)+12|0);JJ(d,1022,(kra(c)|0)+8|0);break}case 15:{JJ(d,1041,b);break}case 16:{JJ(d,1042,b);JJ(d,1022,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1043,b);JJ(d,1022,(Sra(c)|0)+16|0);JJ(d,1022,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1044,b);JJ(d,1022,(Qra(c)|0)+16|0);JJ(d,1022,(Qra(c)|0)+12|0);JJ(d,1022,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1045,b);JJ(d,1022,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1046,b);mG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1047,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1022,bga(c,a)|0);b=a}}case 22:{JJ(d,1048,b);break}case 23:{JJ(d,1049,b);break}default:Ka()}while(0);return}
function td(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,555,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,552,bga(d,b)|0);c=b}}case 2:{JJ(a,556,b);YF(a,(Asa(c)|0)+16|0);JJ(a,552,(Asa(c)|0)+12|0);JJ(a,552,(Asa(c)|0)+8|0);break}case 3:{JJ(a,557,b);JJ(a,552,(rsa(c)|0)+12|0);break}case 4:{JJ(a,558,b);YF(a,(jsa(c)|0)+16|0);YF(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,559,b);JJ(a,552,(Xra(c)|0)+28|0);YF(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,560,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,552,bga(d,b)|0);c=b}}case 7:{JJ(a,561,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,552,bga(d,b)|0);c=b}}case 8:{JJ(a,562,b);b=fra(c)|0;JJ(a,552,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,552,bga(d,b)|0);c=b}}case 9:{JJ(a,563,b);break}case 10:{JJ(a,564,b);JJ(a,552,(Era(c)|0)+12|0);break}case 11:{JJ(a,565,b);break}case 12:{JJ(a,566,b);JJ(a,552,(ura(c)|0)+12|0);break}case 13:{JJ(a,567,b);JJ(a,552,(lsa(c)|0)+24|0);break}case 14:{JJ(a,568,b);JJ(a,552,(Zra(c)|0)+28|0);JJ(a,552,(Zra(c)|0)+24|0);break}case 25:{JJ(a,569,b);JJ(a,552,(wra(c)|0)+24|0);JJ(a,552,(wra(c)|0)+20|0);break}case 24:{JJ(a,570,b);JJ(a,552,(Vqa(c)|0)+24|0);JJ(a,552,(Vqa(c)|0)+20|0);JJ(a,552,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,571,b);JJ(a,552,(lra(c)|0)+16|0);JJ(a,552,(lra(c)|0)+12|0);JJ(a,552,(lra(c)|0)+8|0);break}case 27:{JJ(a,572,b);JJ(a,552,(kra(c)|0)+12|0);JJ(a,552,(kra(c)|0)+8|0);break}case 15:{JJ(a,573,b);break}case 16:{JJ(a,574,b);JJ(a,552,(Yra(c)|0)+12|0);break}case 17:{JJ(a,575,b);JJ(a,552,(Sra(c)|0)+16|0);JJ(a,552,(Sra(c)|0)+12|0);break}case 18:{JJ(a,576,b);JJ(a,552,(Qra(c)|0)+16|0);JJ(a,552,(Qra(c)|0)+12|0);JJ(a,552,(Qra(c)|0)+8|0);break}case 19:{JJ(a,577,b);JJ(a,552,(nsa(c)|0)+8|0);break}case 20:{JJ(a,578,b);YF(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,579,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,552,bga(d,b)|0);c=b}}case 22:{JJ(a,580,b);break}case 23:{JJ(a,581,b);break}default:Ka()}while(0);return}function ud(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1226,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1225,bga(c,a)|0);b=a}}case 2:{JJ(d,1227,b);rG(d,(Asa(c)|0)+16|0);JJ(d,1225,(Asa(c)|0)+12|0);JJ(d,1225,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1228,b);JJ(d,1225,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1229,b);rG(d,(jsa(c)|0)+16|0);rG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1230,b);JJ(d,1225,(Xra(c)|0)+28|0);rG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1231,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1225,bga(c,a)|0);b=a}}case 7:{JJ(d,1232,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1225,bga(c,a)|0);b=a}}case 8:{JJ(d,1233,b);b=fra(c)|0;JJ(d,1225,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1225,bga(c,a)|0);b=a}}case 9:{JJ(d,1234,b);break}case 10:{JJ(d,1235,b);JJ(d,1225,(Era(c)|0)+12|0);break}case 11:{JJ(d,1236,b);break}case 12:{JJ(d,1237,b);JJ(d,1225,(ura(c)|0)+12|0);break}case 13:{JJ(d,1238,b);JJ(d,1225,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1239,b);JJ(d,1225,(Zra(c)|0)+28|0);JJ(d,1225,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1240,b);JJ(d,1225,(wra(c)|0)+24|0);JJ(d,1225,(wra(c)|0)+20|0);break}case 24:{JJ(d,1241,b);JJ(d,1225,(Vqa(c)|0)+24|0);JJ(d,1225,(Vqa(c)|0)+20|0);JJ(d,1225,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1242,b);JJ(d,1225,(lra(c)|0)+16|0);JJ(d,1225,(lra(c)|0)+12|0);JJ(d,1225,(lra(c)|0)+8|0);break}case 27:{JJ(d,1243,b);JJ(d,1225,(kra(c)|0)+12|0);JJ(d,1225,(kra(c)|0)+8|0);break}case 15:{JJ(d,1244,b);break}case 16:{JJ(d,1245,b);JJ(d,1225,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1246,b);JJ(d,1225,(Sra(c)|0)+16|0);JJ(d,1225,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1247,b);JJ(d,1225,(Qra(c)|0)+16|0);JJ(d,1225,(Qra(c)|0)+12|0);JJ(d,1225,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1248,b);JJ(d,1225,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1249,b);rG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1250,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1225,bga(c,a)|0);b=a}}case 22:{JJ(d,1251,b);break}case 23:{JJ(d,1252,b);break}default:Ka()}while(0);return}function vd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1198,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1197,bga(d,b)|0);c=b}}case 2:{JJ(a,1199,b);pG(a,(Asa(c)|0)+16|0);JJ(a,1197,(Asa(c)|0)+12|0);JJ(a,1197,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1200,b);JJ(a,1197,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1201,b);pG(a,(jsa(c)|0)+16|0);pG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1202,b);JJ(a,1197,(Xra(c)|0)+28|0);pG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1203,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1197,bga(d,b)|0);c=b}}case 7:{JJ(a,1204,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1197,bga(d,b)|0);c=b}}case 8:{JJ(a,1205,b);b=fra(c)|0;JJ(a,1197,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1197,bga(d,b)|0);c=b}}case 9:{JJ(a,1206,b);break}case 10:{JJ(a,1207,b);JJ(a,1197,(Era(c)|0)+12|0);break}case 11:{JJ(a,1208,b);break}case 12:{JJ(a,1209,b);JJ(a,1197,(ura(c)|0)+12|0);break}case 13:{JJ(a,1210,b);JJ(a,1197,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1211,b);JJ(a,1197,(Zra(c)|0)+28|0);JJ(a,1197,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1212,b);JJ(a,1197,(wra(c)|0)+24|0);JJ(a,1197,(wra(c)|0)+20|0);break}case 24:{JJ(a,1213,b);JJ(a,1197,(Vqa(c)|0)+24|0);JJ(a,1197,(Vqa(c)|0)+20|0);JJ(a,1197,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1214,b);JJ(a,1197,(lra(c)|0)+16|0);JJ(a,1197,(lra(c)|0)+12|0);JJ(a,1197,(lra(c)|0)+8|0);break}case 27:{JJ(a,1215,b);JJ(a,1197,(kra(c)|0)+12|0);JJ(a,1197,(kra(c)|0)+8|0);break}case 15:{JJ(a,1216,b);break}case 16:{JJ(a,1217,b);JJ(a,1197,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1218,b);JJ(a,1197,(Sra(c)|0)+16|0);JJ(a,1197,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1219,b);JJ(a,1197,(Qra(c)|0)+16|0);JJ(a,1197,(Qra(c)|0)+12|0);JJ(a,1197,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1220,b);JJ(a,1197,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1221,b);pG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1222,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1197,bga(d,b)|0);c=b}}case 22:{JJ(a,1223,b);break}case 23:{JJ(a,1224,b);break}default:Ka()}while(0);return}function wd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1758,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1757,bga(d,b)|0);c=b}}case 2:{JJ(a,1759,b);sG(a,(Asa(c)|0)+16|0);JJ(a,1757,(Asa(c)|0)+12|0);JJ(a,1757,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1760,b);JJ(a,1757,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1761,b);sG(a,(jsa(c)|0)+16|0);sG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1762,b);JJ(a,1757,(Xra(c)|0)+28|0);sG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1763,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1757,bga(d,b)|0);c=b}}case 7:{JJ(a,1764,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1757,bga(d,b)|0);c=b}}case 8:{JJ(a,1765,b);b=fra(c)|0;JJ(a,1757,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1757,bga(d,b)|0);c=b}}case 9:{JJ(a,1766,b);break}case 10:{JJ(a,1767,b);JJ(a,1757,(Era(c)|0)+12|0);break}case 11:{JJ(a,1768,b);break}case 12:{JJ(a,1769,b);JJ(a,1757,(ura(c)|0)+12|0);break}case 13:{JJ(a,1770,b);JJ(a,1757,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1771,b);JJ(a,1757,(Zra(c)|0)+28|0);JJ(a,1757,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1772,b);JJ(a,1757,(wra(c)|0)+24|0);JJ(a,1757,(wra(c)|0)+20|0);break}case 24:{JJ(a,1773,b);JJ(a,1757,(Vqa(c)|0)+24|0);JJ(a,1757,(Vqa(c)|0)+20|0);JJ(a,1757,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1774,b);JJ(a,1757,(lra(c)|0)+16|0);JJ(a,1757,(lra(c)|0)+12|0);JJ(a,1757,(lra(c)|0)+8|0);break}case 27:{JJ(a,1775,b);JJ(a,1757,(kra(c)|0)+12|0);JJ(a,1757,(kra(c)|0)+8|0);break}case 15:{JJ(a,1776,b);break}case 16:{JJ(a,1777,b);JJ(a,1757,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1778,b);JJ(a,1757,(Sra(c)|0)+16|0);JJ(a,1757,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1779,b);JJ(a,1757,(Qra(c)|0)+16|0);JJ(a,1757,(Qra(c)|0)+12|0);JJ(a,1757,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1780,b);JJ(a,1757,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1781,b);sG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1782,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1757,bga(d,b)|0);c=b}}case 22:{JJ(a,1783,b);break}case 23:{JJ(a,1784,b);break}default:Ka()}while(0);return}function xd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1574,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1573,bga(c,a)|0);b=a}}case 2:{JJ(d,1575,b);EG(d,(Asa(c)|0)+16|0);JJ(d,1573,(Asa(c)|0)+12|0);JJ(d,1573,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1576,b);JJ(d,1573,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1577,b);EG(d,(jsa(c)|0)+16|0);EG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1578,b);JJ(d,1573,(Xra(c)|0)+28|0);EG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1579,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1573,bga(c,a)|0);b=a}}case 7:{JJ(d,1580,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1573,bga(c,a)|0);b=a}}case 8:{JJ(d,1581,b);b=fra(c)|0;JJ(d,1573,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1573,bga(c,a)|0);b=a}}case 9:{JJ(d,1582,b);break}case 10:{JJ(d,1583,b);JJ(d,1573,(Era(c)|0)+12|0);break}case 11:{JJ(d,1584,b);break}case 12:{JJ(d,1585,b);JJ(d,1573,(ura(c)|0)+12|0);break}case 13:{JJ(d,1586,b);JJ(d,1573,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1587,b);JJ(d,1573,(Zra(c)|0)+28|0);JJ(d,1573,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1588,b);JJ(d,1573,(wra(c)|0)+24|0);JJ(d,1573,(wra(c)|0)+20|0);break}case 24:{JJ(d,1589,b);JJ(d,1573,(Vqa(c)|0)+24|0);JJ(d,1573,(Vqa(c)|0)+20|0);JJ(d,1573,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1590,b);JJ(d,1573,(lra(c)|0)+16|0);JJ(d,1573,(lra(c)|0)+12|0);JJ(d,1573,(lra(c)|0)+8|0);break}case 27:{JJ(d,1591,b);JJ(d,1573,(kra(c)|0)+12|0);JJ(d,1573,(kra(c)|0)+8|0);break}case 15:{JJ(d,1592,b);break}case 16:{JJ(d,1593,b);JJ(d,1573,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1594,b);JJ(d,1573,(Sra(c)|0)+16|0);JJ(d,1573,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1595,b);JJ(d,1573,(Qra(c)|0)+16|0);JJ(d,1573,(Qra(c)|0)+12|0);JJ(d,1573,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1596,b);JJ(d,1573,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1597,b);EG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1598,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1573,bga(c,a)|0);b=a}}case 22:{JJ(d,1599,b);break}case 23:{JJ(d,1600,b);break}default:Ka()}while(0);return}function yd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1695,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1691,bga(c,a)|0);b=a}}case 2:{JJ(d,1692,b);FG(d,(Asa(c)|0)+16|0);JJ(d,1691,(Asa(c)|0)+12|0);JJ(d,1691,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1696,b);JJ(d,1691,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1697,b);FG(d,(jsa(c)|0)+16|0);FG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1698,b);JJ(d,1691,(Xra(c)|0)+28|0);FG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1699,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1691,bga(c,a)|0);b=a}}case 7:{JJ(d,1700,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1691,bga(c,a)|0);b=a}}case 8:{JJ(d,1701,b);b=fra(c)|0;JJ(d,1691,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1691,bga(c,a)|0);b=a}}case 9:{JJ(d,1702,b);break}case 10:{JJ(d,1703,b);JJ(d,1691,(Era(c)|0)+12|0);break}case 11:{JJ(d,1704,b);break}case 12:{JJ(d,1705,b);JJ(d,1691,(ura(c)|0)+12|0);break}case 13:{JJ(d,1706,b);JJ(d,1691,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1707,b);JJ(d,1691,(Zra(c)|0)+28|0);JJ(d,1691,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1708,b);JJ(d,1691,(wra(c)|0)+24|0);JJ(d,1691,(wra(c)|0)+20|0);break}case 24:{JJ(d,1709,b);JJ(d,1691,(Vqa(c)|0)+24|0);JJ(d,1691,(Vqa(c)|0)+20|0);JJ(d,1691,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1710,b);JJ(d,1691,(lra(c)|0)+16|0);JJ(d,1691,(lra(c)|0)+12|0);JJ(d,1691,(lra(c)|0)+8|0);break}case 27:{JJ(d,1711,b);JJ(d,1691,(kra(c)|0)+12|0);JJ(d,1691,(kra(c)|0)+8|0);break}case 15:{JJ(d,1712,b);break}case 16:{JJ(d,1713,b);JJ(d,1691,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1714,b);JJ(d,1691,(Sra(c)|0)+16|0);JJ(d,1691,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1715,b);JJ(d,1691,(Qra(c)|0)+16|0);JJ(d,1691,(Qra(c)|0)+12|0);JJ(d,1691,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1716,b);JJ(d,1691,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1717,b);FG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1718,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1691,bga(c,a)|0);b=a}}case 22:{JJ(d,1719,b);break}case 23:{JJ(d,1720,b);break}default:Ka()}while(0);return}function zd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1602,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1601,bga(c,a)|0);b=a}}case 2:{JJ(d,1603,b);KG(d,(Asa(c)|0)+16|0);JJ(d,1601,(Asa(c)|0)+12|0);JJ(d,1601,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1604,b);JJ(d,1601,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1605,b);KG(d,(jsa(c)|0)+16|0);KG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1606,b);JJ(d,1601,(Xra(c)|0)+28|0);KG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1607,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1601,bga(c,a)|0);b=a}}case 7:{JJ(d,1608,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1601,bga(c,a)|0);b=a}}case 8:{JJ(d,1609,b);b=fra(c)|0;JJ(d,1601,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1601,bga(c,a)|0);b=a}}case 9:{JJ(d,1610,b);break}case 10:{JJ(d,1611,b);JJ(d,1601,(Era(c)|0)+12|0);break}case 11:{JJ(d,1612,b);break}case 12:{JJ(d,1613,b);JJ(d,1601,(ura(c)|0)+12|0);break}case 13:{JJ(d,1614,b);JJ(d,1601,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1615,b);JJ(d,1601,(Zra(c)|0)+28|0);JJ(d,1601,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1616,b);JJ(d,1601,(wra(c)|0)+24|0);JJ(d,1601,(wra(c)|0)+20|0);break}case 24:{JJ(d,1617,b);JJ(d,1601,(Vqa(c)|0)+24|0);JJ(d,1601,(Vqa(c)|0)+20|0);JJ(d,1601,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1618,b);JJ(d,1601,(lra(c)|0)+16|0);JJ(d,1601,(lra(c)|0)+12|0);JJ(d,1601,(lra(c)|0)+8|0);break}case 27:{JJ(d,1619,b);JJ(d,1601,(kra(c)|0)+12|0);JJ(d,1601,(kra(c)|0)+8|0);break}case 15:{JJ(d,1620,b);break}case 16:{JJ(d,1621,b);JJ(d,1601,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1622,b);JJ(d,1601,(Sra(c)|0)+16|0);JJ(d,1601,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1623,b);JJ(d,1601,(Qra(c)|0)+16|0);JJ(d,1601,(Qra(c)|0)+12|0);JJ(d,1601,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1624,b);JJ(d,1601,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1625,b);KG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1626,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1601,bga(c,a)|0);b=a}}case 22:{JJ(d,1627,b);break}case 23:{JJ(d,1628,b);break}default:Ka()}while(0);return}function Ad(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1348,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1347,bga(c,a)|0);b=a}}case 2:{JJ(d,1349,b);PG(d,(Asa(c)|0)+16|0);JJ(d,1347,(Asa(c)|0)+12|0);JJ(d,1347,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1350,b);JJ(d,1347,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1351,b);PG(d,(jsa(c)|0)+16|0);PG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1352,b);JJ(d,1347,(Xra(c)|0)+28|0);PG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1353,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1347,bga(c,a)|0);b=a}}case 7:{JJ(d,1354,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1347,bga(c,a)|0);b=a}}case 8:{JJ(d,1355,b);b=fra(c)|0;JJ(d,1347,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1347,bga(c,a)|0);b=a}}case 9:{JJ(d,1356,b);break}case 10:{JJ(d,1357,b);JJ(d,1347,(Era(c)|0)+12|0);break}case 11:{JJ(d,1358,b);break}case 12:{JJ(d,1359,b);JJ(d,1347,(ura(c)|0)+12|0);break}case 13:{JJ(d,1360,b);JJ(d,1347,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1361,b);JJ(d,1347,(Zra(c)|0)+28|0);JJ(d,1347,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1362,b);JJ(d,1347,(wra(c)|0)+24|0);JJ(d,1347,(wra(c)|0)+20|0);break}case 24:{JJ(d,1363,b);JJ(d,1347,(Vqa(c)|0)+24|0);JJ(d,1347,(Vqa(c)|0)+20|0);JJ(d,1347,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1364,b);JJ(d,1347,(lra(c)|0)+16|0);JJ(d,1347,(lra(c)|0)+12|0);JJ(d,1347,(lra(c)|0)+8|0);break}case 27:{JJ(d,1365,b);JJ(d,1347,(kra(c)|0)+12|0);JJ(d,1347,(kra(c)|0)+8|0);break}case 15:{JJ(d,1366,b);break}case 16:{JJ(d,1367,b);JJ(d,1347,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1368,b);JJ(d,1347,(Sra(c)|0)+16|0);JJ(d,1347,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1369,b);JJ(d,1347,(Qra(c)|0)+16|0);JJ(d,1347,(Qra(c)|0)+12|0);JJ(d,1347,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1370,b);JJ(d,1347,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1371,b);PG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1372,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1347,bga(c,a)|0);b=a}}case 22:{JJ(d,1373,b);break}case 23:{JJ(d,1374,b);break}default:Ka()}while(0);return}function Bd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1378,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1377,bga(c,a)|0);b=a}}case 2:{JJ(d,1379,b);QG(d,(Asa(c)|0)+16|0);JJ(d,1377,(Asa(c)|0)+12|0);JJ(d,1377,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1380,b);JJ(d,1377,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1381,b);QG(d,(jsa(c)|0)+16|0);QG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1382,b);JJ(d,1377,(Xra(c)|0)+28|0);QG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1383,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1377,bga(c,a)|0);b=a}}case 7:{JJ(d,1384,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1377,bga(c,a)|0);b=a}}case 8:{JJ(d,1385,b);b=fra(c)|0;JJ(d,1377,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1377,bga(c,a)|0);b=a}}case 9:{JJ(d,1386,b);break}case 10:{JJ(d,1387,b);JJ(d,1377,(Era(c)|0)+12|0);break}case 11:{JJ(d,1388,b);break}case 12:{JJ(d,1389,b);JJ(d,1377,(ura(c)|0)+12|0);break}case 13:{JJ(d,1390,b);JJ(d,1377,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1391,b);JJ(d,1377,(Zra(c)|0)+28|0);JJ(d,1377,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1392,b);JJ(d,1377,(wra(c)|0)+24|0);JJ(d,1377,(wra(c)|0)+20|0);break}case 24:{JJ(d,1393,b);JJ(d,1377,(Vqa(c)|0)+24|0);JJ(d,1377,(Vqa(c)|0)+20|0);JJ(d,1377,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1394,b);JJ(d,1377,(lra(c)|0)+16|0);JJ(d,1377,(lra(c)|0)+12|0);JJ(d,1377,(lra(c)|0)+8|0);break}case 27:{JJ(d,1395,b);JJ(d,1377,(kra(c)|0)+12|0);JJ(d,1377,(kra(c)|0)+8|0);break}case 15:{JJ(d,1396,b);break}case 16:{JJ(d,1397,b);JJ(d,1377,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1398,b);JJ(d,1377,(Sra(c)|0)+16|0);JJ(d,1377,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1399,b);JJ(d,1377,(Qra(c)|0)+16|0);JJ(d,1377,(Qra(c)|0)+12|0);JJ(d,1377,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1400,b);JJ(d,1377,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1401,b);QG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1402,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1377,bga(c,a)|0);b=a}}case 22:{JJ(d,1403,b);break}case 23:{JJ(d,1404,b);break}default:Ka()}while(0);return}function Cd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1636,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1635,bga(c,a)|0);b=a}}case 2:{JJ(d,1637,b);RG(d,(Asa(c)|0)+16|0);JJ(d,1635,(Asa(c)|0)+12|0);JJ(d,1635,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1638,b);JJ(d,1635,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1639,b);RG(d,(jsa(c)|0)+16|0);RG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1640,b);JJ(d,1635,(Xra(c)|0)+28|0);RG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1641,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1635,bga(c,a)|0);b=a}}case 7:{JJ(d,1642,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1635,bga(c,a)|0);b=a}}case 8:{JJ(d,1643,b);b=fra(c)|0;JJ(d,1635,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1635,bga(c,a)|0);b=a}}case 9:{JJ(d,1644,b);break}case 10:{JJ(d,1645,b);JJ(d,1635,(Era(c)|0)+12|0);break}case 11:{JJ(d,1646,b);break}case 12:{JJ(d,1647,b);JJ(d,1635,(ura(c)|0)+12|0);break}case 13:{JJ(d,1648,b);JJ(d,1635,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1649,b);JJ(d,1635,(Zra(c)|0)+28|0);JJ(d,1635,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1650,b);JJ(d,1635,(wra(c)|0)+24|0);JJ(d,1635,(wra(c)|0)+20|0);break}case 24:{JJ(d,1651,b);JJ(d,1635,(Vqa(c)|0)+24|0);JJ(d,1635,(Vqa(c)|0)+20|0);JJ(d,1635,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1652,b);JJ(d,1635,(lra(c)|0)+16|0);JJ(d,1635,(lra(c)|0)+12|0);JJ(d,1635,(lra(c)|0)+8|0);break}case 27:{JJ(d,1653,b);JJ(d,1635,(kra(c)|0)+12|0);JJ(d,1635,(kra(c)|0)+8|0);break}case 15:{JJ(d,1654,b);break}case 16:{JJ(d,1655,b);JJ(d,1635,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1656,b);JJ(d,1635,(Sra(c)|0)+16|0);JJ(d,1635,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1657,b);JJ(d,1635,(Qra(c)|0)+16|0);JJ(d,1635,(Qra(c)|0)+12|0);JJ(d,1635,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1658,b);JJ(d,1635,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1659,b);RG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1660,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1635,bga(c,a)|0);b=a}}case 22:{JJ(d,1661,b);break}case 23:{JJ(d,1662,b);break}default:Ka()}while(0);return}function Dd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,329,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,240,bga(d,b)|0);c=b}}case 2:{JJ(a,330,b);nG(a,(Asa(c)|0)+16|0);JJ(a,240,(Asa(c)|0)+12|0);JJ(a,240,(Asa(c)|0)+8|0);break}case 3:{JJ(a,331,b);JJ(a,240,(rsa(c)|0)+12|0);break}case 4:{JJ(a,332,b);nG(a,(jsa(c)|0)+16|0);nG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,333,b);JJ(a,240,(Xra(c)|0)+28|0);nG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,334,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,240,bga(d,b)|0);c=b}}case 7:{JJ(a,335,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,240,bga(d,b)|0);c=b}}case 8:{JJ(a,336,b);b=fra(c)|0;JJ(a,240,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,240,bga(d,b)|0);c=b}}case 9:{JJ(a,337,b);break}case 10:{JJ(a,338,b);JJ(a,240,(Era(c)|0)+12|0);break}case 11:{JJ(a,339,b);break}case 12:{JJ(a,340,b);JJ(a,240,(ura(c)|0)+12|0);break}case 13:{JJ(a,341,b);JJ(a,240,(lsa(c)|0)+24|0);break}case 14:{JJ(a,342,b);JJ(a,240,(Zra(c)|0)+28|0);JJ(a,240,(Zra(c)|0)+24|0);break}case 25:{JJ(a,343,b);JJ(a,240,(wra(c)|0)+24|0);JJ(a,240,(wra(c)|0)+20|0);break}case 24:{JJ(a,344,b);JJ(a,240,(Vqa(c)|0)+24|0);JJ(a,240,(Vqa(c)|0)+20|0);JJ(a,240,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,345,b);JJ(a,240,(lra(c)|0)+16|0);JJ(a,240,(lra(c)|0)+12|0);JJ(a,240,(lra(c)|0)+8|0);break}case 27:{JJ(a,346,b);JJ(a,240,(kra(c)|0)+12|0);JJ(a,240,(kra(c)|0)+8|0);break}case 15:{JJ(a,347,b);break}case 16:{JJ(a,348,b);JJ(a,240,(Yra(c)|0)+12|0);break}case 17:{JJ(a,349,b);JJ(a,240,(Sra(c)|0)+16|0);JJ(a,240,(Sra(c)|0)+12|0);break}case 18:{JJ(a,350,b);JJ(a,240,(Qra(c)|0)+16|0);JJ(a,240,(Qra(c)|0)+12|0);JJ(a,240,(Qra(c)|0)+8|0);break}case 19:{JJ(a,351,b);JJ(a,240,(nsa(c)|0)+8|0);break}case 20:{JJ(a,352,b);nG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,353,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,240,bga(d,b)|0);c=b}}case 22:{JJ(a,354,b);break}case 23:{JJ(a,355,b);break}default:Ka()}while(0);return}function Ed(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1051,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1050,bga(c,a)|0);b=a}}case 2:{JJ(d,1052,b);WG(d,(Asa(c)|0)+16|0);JJ(d,1050,(Asa(c)|0)+12|0);JJ(d,1050,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1053,b);JJ(d,1050,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1054,b);WG(d,(jsa(c)|0)+16|0);WG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1055,b);JJ(d,1050,(Xra(c)|0)+28|0);WG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1056,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1050,bga(c,a)|0);b=a}}case 7:{JJ(d,1057,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1050,bga(c,a)|0);b=a}}case 8:{JJ(d,1058,b);b=fra(c)|0;JJ(d,1050,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1050,bga(c,a)|0);b=a}}case 9:{JJ(d,1059,b);break}case 10:{JJ(d,1060,b);JJ(d,1050,(Era(c)|0)+12|0);break}case 11:{JJ(d,1061,b);break}case 12:{JJ(d,1062,b);JJ(d,1050,(ura(c)|0)+12|0);break}case 13:{JJ(d,1063,b);JJ(d,1050,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1064,b);JJ(d,1050,(Zra(c)|0)+28|0);JJ(d,1050,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1065,b);JJ(d,1050,(wra(c)|0)+24|0);JJ(d,1050,(wra(c)|0)+20|0);break}case 24:{JJ(d,1066,b);JJ(d,1050,(Vqa(c)|0)+24|0);JJ(d,1050,(Vqa(c)|0)+20|0);JJ(d,1050,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1067,b);JJ(d,1050,(lra(c)|0)+16|0);JJ(d,1050,(lra(c)|0)+12|0);JJ(d,1050,(lra(c)|0)+8|0);break}case 27:{JJ(d,1068,b);JJ(d,1050,(kra(c)|0)+12|0);JJ(d,1050,(kra(c)|0)+8|0);break}case 15:{JJ(d,1069,b);break}case 16:{JJ(d,1070,b);JJ(d,1050,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1071,b);JJ(d,1050,(Sra(c)|0)+16|0);JJ(d,1050,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1072,b);JJ(d,1050,(Qra(c)|0)+16|0);JJ(d,1050,(Qra(c)|0)+12|0);JJ(d,1050,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1073,b);JJ(d,1050,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1074,b);WG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1075,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1050,bga(c,a)|0);b=a}}case 22:{JJ(d,1076,b);break}case 23:{JJ(d,1077,b);break}default:Ka()}while(0);return}function Fd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1664,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1663,bga(c,a)|0);b=a}}case 2:{JJ(d,1665,b);XG(d,(Asa(c)|0)+16|0);JJ(d,1663,(Asa(c)|0)+12|0);JJ(d,1663,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1666,b);JJ(d,1663,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1667,b);XG(d,(jsa(c)|0)+16|0);XG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1668,b);JJ(d,1663,(Xra(c)|0)+28|0);XG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1669,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1663,bga(c,a)|0);b=a}}case 7:{JJ(d,1670,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1663,bga(c,a)|0);b=a}}case 8:{JJ(d,1671,b);b=fra(c)|0;JJ(d,1663,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1663,bga(c,a)|0);b=a}}case 9:{JJ(d,1672,b);break}case 10:{JJ(d,1673,b);JJ(d,1663,(Era(c)|0)+12|0);break}case 11:{JJ(d,1674,b);break}case 12:{JJ(d,1675,b);JJ(d,1663,(ura(c)|0)+12|0);break}case 13:{JJ(d,1676,b);JJ(d,1663,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1677,b);JJ(d,1663,(Zra(c)|0)+28|0);JJ(d,1663,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1678,b);JJ(d,1663,(wra(c)|0)+24|0);JJ(d,1663,(wra(c)|0)+20|0);break}case 24:{JJ(d,1679,b);JJ(d,1663,(Vqa(c)|0)+24|0);JJ(d,1663,(Vqa(c)|0)+20|0);JJ(d,1663,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1680,b);JJ(d,1663,(lra(c)|0)+16|0);JJ(d,1663,(lra(c)|0)+12|0);JJ(d,1663,(lra(c)|0)+8|0);break}case 27:{JJ(d,1681,b);JJ(d,1663,(kra(c)|0)+12|0);JJ(d,1663,(kra(c)|0)+8|0);break}case 15:{JJ(d,1682,b);break}case 16:{JJ(d,1683,b);JJ(d,1663,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1684,b);JJ(d,1663,(Sra(c)|0)+16|0);JJ(d,1663,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1685,b);JJ(d,1663,(Qra(c)|0)+16|0);JJ(d,1663,(Qra(c)|0)+12|0);JJ(d,1663,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1686,b);JJ(d,1663,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1687,b);XG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1688,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1663,bga(c,a)|0);b=a}}case 22:{JJ(d,1689,b);break}case 23:{JJ(d,1690,b);break}default:Ka()}while(0);return}function Gd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1960,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1947,bga(c,a)|0);b=a}}case 2:{JJ(d,1961,b);YG(d,(Asa(c)|0)+16|0);JJ(d,1947,(Asa(c)|0)+12|0);JJ(d,1947,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1962,b);JJ(d,1947,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1963,b);YG(d,(jsa(c)|0)+16|0);YG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1964,b);JJ(d,1947,(Xra(c)|0)+28|0);YG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1965,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1947,bga(c,a)|0);b=a}}case 7:{JJ(d,1966,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1947,bga(c,a)|0);b=a}}case 8:{JJ(d,1967,b);b=fra(c)|0;JJ(d,1947,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1947,bga(c,a)|0);b=a}}case 9:{JJ(d,1968,b);break}case 10:{JJ(d,1969,b);JJ(d,1947,(Era(c)|0)+12|0);break}case 11:{JJ(d,1970,b);break}case 12:{JJ(d,1971,b);JJ(d,1947,(ura(c)|0)+12|0);break}case 13:{JJ(d,1972,b);JJ(d,1947,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1973,b);JJ(d,1947,(Zra(c)|0)+28|0);JJ(d,1947,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1974,b);JJ(d,1947,(wra(c)|0)+24|0);JJ(d,1947,(wra(c)|0)+20|0);break}case 24:{JJ(d,1975,b);JJ(d,1947,(Vqa(c)|0)+24|0);JJ(d,1947,(Vqa(c)|0)+20|0);JJ(d,1947,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1976,b);JJ(d,1947,(lra(c)|0)+16|0);JJ(d,1947,(lra(c)|0)+12|0);JJ(d,1947,(lra(c)|0)+8|0);break}case 27:{JJ(d,1977,b);JJ(d,1947,(kra(c)|0)+12|0);JJ(d,1947,(kra(c)|0)+8|0);break}case 15:{JJ(d,1978,b);break}case 16:{JJ(d,1979,b);JJ(d,1947,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1980,b);JJ(d,1947,(Sra(c)|0)+16|0);JJ(d,1947,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1981,b);JJ(d,1947,(Qra(c)|0)+16|0);JJ(d,1947,(Qra(c)|0)+12|0);JJ(d,1947,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1982,b);JJ(d,1947,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1983,b);YG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1984,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1947,bga(c,a)|0);b=a}}case 22:{JJ(d,1985,b);break}case 23:{JJ(d,1986,b);break}default:Ka()}while(0);return}function Hd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1289,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1286,bga(d,b)|0);c=b}}case 2:{JJ(a,1290,b);LG(a,(Asa(c)|0)+16|0);JJ(a,1286,(Asa(c)|0)+12|0);JJ(a,1286,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1291,b);JJ(a,1286,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1292,b);LG(a,(jsa(c)|0)+16|0);LG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1293,b);JJ(a,1286,(Xra(c)|0)+28|0);LG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1294,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1286,bga(d,b)|0);c=b}}case 7:{JJ(a,1295,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1286,bga(d,b)|0);c=b}}case 8:{JJ(a,1296,b);b=fra(c)|0;JJ(a,1286,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1286,bga(d,b)|0);c=b}}case 9:{JJ(a,1297,b);break}case 10:{JJ(a,1298,b);JJ(a,1286,(Era(c)|0)+12|0);break}case 11:{JJ(a,1299,b);break}case 12:{JJ(a,1300,b);JJ(a,1286,(ura(c)|0)+12|0);break}case 13:{JJ(a,1301,b);JJ(a,1286,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1302,b);JJ(a,1286,(Zra(c)|0)+28|0);JJ(a,1286,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1303,b);JJ(a,1286,(wra(c)|0)+24|0);JJ(a,1286,(wra(c)|0)+20|0);break}case 24:{JJ(a,1304,b);JJ(a,1286,(Vqa(c)|0)+24|0);JJ(a,1286,(Vqa(c)|0)+20|0);JJ(a,1286,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1305,b);JJ(a,1286,(lra(c)|0)+16|0);JJ(a,1286,(lra(c)|0)+12|0);JJ(a,1286,(lra(c)|0)+8|0);break}case 27:{JJ(a,1306,b);JJ(a,1286,(kra(c)|0)+12|0);JJ(a,1286,(kra(c)|0)+8|0);break}case 15:{JJ(a,1307,b);break}case 16:{JJ(a,1308,b);JJ(a,1286,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1309,b);JJ(a,1286,(Sra(c)|0)+16|0);JJ(a,1286,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1310,b);JJ(a,1286,(Qra(c)|0)+16|0);JJ(a,1286,(Qra(c)|0)+12|0);JJ(a,1286,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1311,b);JJ(a,1286,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1312,b);LG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1313,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1286,bga(d,b)|0);c=b}}case 22:{JJ(a,1314,b);break}case 23:{JJ(a,1315,b);break}default:Ka()}while(0);return}function Id(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1081,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1078,bga(c,a)|0);b=a}}case 2:{JJ(d,1082,b);fH(d,(Asa(c)|0)+16|0);JJ(d,1078,(Asa(c)|0)+12|0);JJ(d,1078,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1083,b);JJ(d,1078,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1084,b);fH(d,(jsa(c)|0)+16|0);fH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1085,b);JJ(d,1078,(Xra(c)|0)+28|0);fH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1086,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1078,bga(c,a)|0);b=a}}case 7:{JJ(d,1087,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1078,bga(c,a)|0);b=a}}case 8:{JJ(d,1088,b);b=fra(c)|0;JJ(d,1078,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1078,bga(c,a)|0);b=a}}case 9:{JJ(d,1089,b);break}case 10:{JJ(d,1090,b);JJ(d,1078,(Era(c)|0)+12|0);break}case 11:{JJ(d,1091,b);break}case 12:{JJ(d,1092,b);JJ(d,1078,(ura(c)|0)+12|0);break}case 13:{JJ(d,1093,b);JJ(d,1078,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1094,b);JJ(d,1078,(Zra(c)|0)+28|0);JJ(d,1078,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1095,b);JJ(d,1078,(wra(c)|0)+24|0);JJ(d,1078,(wra(c)|0)+20|0);break}case 24:{JJ(d,1096,b);JJ(d,1078,(Vqa(c)|0)+24|0);JJ(d,1078,(Vqa(c)|0)+20|0);JJ(d,1078,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1097,b);JJ(d,1078,(lra(c)|0)+16|0);JJ(d,1078,(lra(c)|0)+12|0);JJ(d,1078,(lra(c)|0)+8|0);break}case 27:{JJ(d,1098,b);JJ(d,1078,(kra(c)|0)+12|0);JJ(d,1078,(kra(c)|0)+8|0);break}case 15:{JJ(d,1099,b);break}case 16:{JJ(d,1100,b);JJ(d,1078,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1101,b);JJ(d,1078,(Sra(c)|0)+16|0);JJ(d,1078,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1102,b);JJ(d,1078,(Qra(c)|0)+16|0);JJ(d,1078,(Qra(c)|0)+12|0);JJ(d,1078,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1103,b);JJ(d,1078,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1104,b);fH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1105,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1078,bga(c,a)|0);b=a}}case 22:{JJ(d,1106,b);break}case 23:{JJ(d,1107,b);break}default:Ka()}while(0);return}function Jd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1406,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1405,bga(c,a)|0);b=a}}case 2:{JJ(d,1407,b);kH(d,(Asa(c)|0)+16|0);JJ(d,1405,(Asa(c)|0)+12|0);JJ(d,1405,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1408,b);JJ(d,1405,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1409,b);kH(d,(jsa(c)|0)+16|0);kH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1410,b);JJ(d,1405,(Xra(c)|0)+28|0);kH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1411,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1405,bga(c,a)|0);b=a}}case 7:{JJ(d,1412,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1405,bga(c,a)|0);b=a}}case 8:{JJ(d,1413,b);b=fra(c)|0;JJ(d,1405,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1405,bga(c,a)|0);b=a}}case 9:{JJ(d,1414,b);break}case 10:{JJ(d,1415,b);JJ(d,1405,(Era(c)|0)+12|0);break}case 11:{JJ(d,1416,b);break}case 12:{JJ(d,1417,b);JJ(d,1405,(ura(c)|0)+12|0);break}case 13:{JJ(d,1418,b);JJ(d,1405,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1419,b);JJ(d,1405,(Zra(c)|0)+28|0);JJ(d,1405,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1420,b);JJ(d,1405,(wra(c)|0)+24|0);JJ(d,1405,(wra(c)|0)+20|0);break}case 24:{JJ(d,1421,b);JJ(d,1405,(Vqa(c)|0)+24|0);JJ(d,1405,(Vqa(c)|0)+20|0);JJ(d,1405,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1422,b);JJ(d,1405,(lra(c)|0)+16|0);JJ(d,1405,(lra(c)|0)+12|0);JJ(d,1405,(lra(c)|0)+8|0);break}case 27:{JJ(d,1423,b);JJ(d,1405,(kra(c)|0)+12|0);JJ(d,1405,(kra(c)|0)+8|0);break}case 15:{JJ(d,1424,b);break}case 16:{JJ(d,1425,b);JJ(d,1405,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1426,b);JJ(d,1405,(Sra(c)|0)+16|0);JJ(d,1405,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1427,b);JJ(d,1405,(Qra(c)|0)+16|0);JJ(d,1405,(Qra(c)|0)+12|0);JJ(d,1405,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1428,b);JJ(d,1405,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1429,b);kH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1430,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1405,bga(c,a)|0);b=a}}case 22:{JJ(d,1431,b);break}case 23:{JJ(d,1432,b);break}default:Ka()}while(0);return}function Kd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,271,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,270,bga(d,b)|0);c=b}}case 2:{JJ(a,272,b);tG(a,(Asa(c)|0)+16|0);JJ(a,270,(Asa(c)|0)+12|0);JJ(a,270,(Asa(c)|0)+8|0);break}case 3:{JJ(a,273,b);JJ(a,270,(rsa(c)|0)+12|0);break}case 4:{JJ(a,274,b);tG(a,(jsa(c)|0)+16|0);tG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,275,b);JJ(a,270,(Xra(c)|0)+28|0);tG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,276,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,270,bga(d,b)|0);c=b}}case 7:{JJ(a,277,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,270,bga(d,b)|0);c=b}}case 8:{JJ(a,278,b);b=fra(c)|0;JJ(a,270,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,270,bga(d,b)|0);c=b}}case 9:{JJ(a,279,b);break}case 10:{JJ(a,280,b);JJ(a,270,(Era(c)|0)+12|0);break}case 11:{JJ(a,281,b);break}case 12:{JJ(a,282,b);JJ(a,270,(ura(c)|0)+12|0);break}case 13:{JJ(a,283,b);JJ(a,270,(lsa(c)|0)+24|0);break}case 14:{JJ(a,284,b);JJ(a,270,(Zra(c)|0)+28|0);JJ(a,270,(Zra(c)|0)+24|0);break}case 25:{JJ(a,285,b);JJ(a,270,(wra(c)|0)+24|0);JJ(a,270,(wra(c)|0)+20|0);break}case 24:{JJ(a,286,b);JJ(a,270,(Vqa(c)|0)+24|0);JJ(a,270,(Vqa(c)|0)+20|0);JJ(a,270,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,287,b);JJ(a,270,(lra(c)|0)+16|0);JJ(a,270,(lra(c)|0)+12|0);JJ(a,270,(lra(c)|0)+8|0);break}case 27:{JJ(a,288,b);JJ(a,270,(kra(c)|0)+12|0);JJ(a,270,(kra(c)|0)+8|0);break}case 15:{JJ(a,289,b);break}case 16:{JJ(a,290,b);JJ(a,270,(Yra(c)|0)+12|0);break}case 17:{JJ(a,291,b);JJ(a,270,(Sra(c)|0)+16|0);JJ(a,270,(Sra(c)|0)+12|0);break}case 18:{JJ(a,292,b);JJ(a,270,(Qra(c)|0)+16|0);JJ(a,270,(Qra(c)|0)+12|0);JJ(a,270,(Qra(c)|0)+8|0);break}case 19:{JJ(a,293,b);JJ(a,270,(nsa(c)|0)+8|0);break}case 20:{JJ(a,294,b);tG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,295,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,270,bga(d,b)|0);c=b}}case 22:{JJ(a,296,b);break}case 23:{JJ(a,297,b);break}default:Ka()}while(0);return}function Ld(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,907,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,904,bga(c,a)|0);b=a}}case 2:{JJ(d,908,b);DG(d,(Asa(c)|0)+16|0);JJ(d,904,(Asa(c)|0)+12|0);JJ(d,904,(Asa(c)|0)+8|0);break}case 3:{JJ(d,909,b);JJ(d,904,(rsa(c)|0)+12|0);break}case 4:{JJ(d,910,b);DG(d,(jsa(c)|0)+16|0);DG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,911,b);JJ(d,904,(Xra(c)|0)+28|0);DG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,912,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,904,bga(c,a)|0);b=a}}case 7:{JJ(d,913,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,904,bga(c,a)|0);b=a}}case 8:{JJ(d,914,b);b=fra(c)|0;JJ(d,904,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,904,bga(c,a)|0);b=a}}case 9:{JJ(d,915,b);break}case 10:{JJ(d,916,b);JJ(d,904,(Era(c)|0)+12|0);break}case 11:{JJ(d,917,b);break}case 12:{JJ(d,918,b);JJ(d,904,(ura(c)|0)+12|0);break}case 13:{JJ(d,919,b);JJ(d,904,(lsa(c)|0)+24|0);break}case 14:{JJ(d,920,b);JJ(d,904,(Zra(c)|0)+28|0);JJ(d,904,(Zra(c)|0)+24|0);break}case 25:{JJ(d,921,b);JJ(d,904,(wra(c)|0)+24|0);JJ(d,904,(wra(c)|0)+20|0);break}case 24:{JJ(d,922,b);JJ(d,904,(Vqa(c)|0)+24|0);JJ(d,904,(Vqa(c)|0)+20|0);JJ(d,904,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,923,b);JJ(d,904,(lra(c)|0)+16|0);JJ(d,904,(lra(c)|0)+12|0);JJ(d,904,(lra(c)|0)+8|0);break}case 27:{JJ(d,924,b);JJ(d,904,(kra(c)|0)+12|0);JJ(d,904,(kra(c)|0)+8|0);break}case 15:{JJ(d,925,b);break}case 16:{JJ(d,926,b);JJ(d,904,(Yra(c)|0)+12|0);break}case 17:{JJ(d,927,b);JJ(d,904,(Sra(c)|0)+16|0);JJ(d,904,(Sra(c)|0)+12|0);break}case 18:{JJ(d,928,b);JJ(d,904,(Qra(c)|0)+16|0);JJ(d,904,(Qra(c)|0)+12|0);JJ(d,904,(Qra(c)|0)+8|0);break}case 19:{JJ(d,929,b);JJ(d,904,(nsa(c)|0)+8|0);break}case 20:{JJ(d,930,b);DG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,931,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,904,bga(c,a)|0);b=a}}case 22:{JJ(d,932,b);break}case 23:{JJ(d,933,b);break}default:Ka()}while(0);return}function Md(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1256,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1255,bga(c,a)|0);b=a}}case 2:{JJ(d,1257,b);pH(d,(Asa(c)|0)+16|0);JJ(d,1255,(Asa(c)|0)+12|0);JJ(d,1255,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1258,b);JJ(d,1255,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1259,b);pH(d,(jsa(c)|0)+16|0);pH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1260,b);JJ(d,1255,(Xra(c)|0)+28|0);pH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1261,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1255,bga(c,a)|0);b=a}}case 7:{JJ(d,1262,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1255,bga(c,a)|0);b=a}}case 8:{JJ(d,1263,b);b=fra(c)|0;JJ(d,1255,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1255,bga(c,a)|0);b=a}}case 9:{JJ(d,1264,b);break}case 10:{JJ(d,1265,b);JJ(d,1255,(Era(c)|0)+12|0);break}case 11:{JJ(d,1266,b);break}case 12:{JJ(d,1267,b);JJ(d,1255,(ura(c)|0)+12|0);break}case 13:{JJ(d,1268,b);JJ(d,1255,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1269,b);JJ(d,1255,(Zra(c)|0)+28|0);JJ(d,1255,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1270,b);JJ(d,1255,(wra(c)|0)+24|0);JJ(d,1255,(wra(c)|0)+20|0);break}case 24:{JJ(d,1271,b);JJ(d,1255,(Vqa(c)|0)+24|0);JJ(d,1255,(Vqa(c)|0)+20|0);JJ(d,1255,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1272,b);JJ(d,1255,(lra(c)|0)+16|0);JJ(d,1255,(lra(c)|0)+12|0);JJ(d,1255,(lra(c)|0)+8|0);break}case 27:{JJ(d,1273,b);JJ(d,1255,(kra(c)|0)+12|0);JJ(d,1255,(kra(c)|0)+8|0);break}case 15:{JJ(d,1274,b);break}case 16:{JJ(d,1275,b);JJ(d,1255,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1276,b);JJ(d,1255,(Sra(c)|0)+16|0);JJ(d,1255,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1277,b);JJ(d,1255,(Qra(c)|0)+16|0);JJ(d,1255,(Qra(c)|0)+12|0);JJ(d,1255,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1278,b);JJ(d,1255,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1279,b);pH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1280,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1255,bga(c,a)|0);b=a}}case 22:{JJ(d,1281,b);break}case 23:{JJ(d,1282,b);break}default:Ka()}while(0);return}function Nd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1875,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1874,bga(c,a)|0);b=a}}case 2:{JJ(d,1876,b);qH(d,(Asa(c)|0)+16|0);JJ(d,1874,(Asa(c)|0)+12|0);JJ(d,1874,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1877,b);JJ(d,1874,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1878,b);qH(d,(jsa(c)|0)+16|0);qH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1879,b);JJ(d,1874,(Xra(c)|0)+28|0);qH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1880,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1874,bga(c,a)|0);b=a}}case 7:{JJ(d,1881,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1874,bga(c,a)|0);b=a}}case 8:{JJ(d,1882,b);b=fra(c)|0;JJ(d,1874,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1874,bga(c,a)|0);b=a}}case 9:{JJ(d,1883,b);break}case 10:{JJ(d,1884,b);JJ(d,1874,(Era(c)|0)+12|0);break}case 11:{JJ(d,1885,b);break}case 12:{JJ(d,1886,b);JJ(d,1874,(ura(c)|0)+12|0);break}case 13:{JJ(d,1887,b);JJ(d,1874,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1888,b);JJ(d,1874,(Zra(c)|0)+28|0);JJ(d,1874,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1889,b);JJ(d,1874,(wra(c)|0)+24|0);JJ(d,1874,(wra(c)|0)+20|0);break}case 24:{JJ(d,1890,b);JJ(d,1874,(Vqa(c)|0)+24|0);JJ(d,1874,(Vqa(c)|0)+20|0);JJ(d,1874,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1891,b);JJ(d,1874,(lra(c)|0)+16|0);JJ(d,1874,(lra(c)|0)+12|0);JJ(d,1874,(lra(c)|0)+8|0);break}case 27:{JJ(d,1892,b);JJ(d,1874,(kra(c)|0)+12|0);JJ(d,1874,(kra(c)|0)+8|0);break}case 15:{JJ(d,1893,b);break}case 16:{JJ(d,1894,b);JJ(d,1874,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1895,b);JJ(d,1874,(Sra(c)|0)+16|0);JJ(d,1874,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1896,b);JJ(d,1874,(Qra(c)|0)+16|0);JJ(d,1874,(Qra(c)|0)+12|0);JJ(d,1874,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1897,b);JJ(d,1874,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1898,b);qH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1899,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1874,bga(c,a)|0);b=a}}case 22:{JJ(d,1900,b);break}case 23:{JJ(d,1901,b);break}default:Ka()}while(0);return}function Od(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1847,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1844,bga(c,a)|0);b=a}}case 2:{JJ(d,1848,b);rH(d,(Asa(c)|0)+16|0);JJ(d,1844,(Asa(c)|0)+12|0);JJ(d,1844,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1849,b);JJ(d,1844,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1850,b);rH(d,(jsa(c)|0)+16|0);rH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1851,b);JJ(d,1844,(Xra(c)|0)+28|0);rH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1852,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1844,bga(c,a)|0);b=a}}case 7:{JJ(d,1853,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1844,bga(c,a)|0);b=a}}case 8:{JJ(d,1854,b);b=fra(c)|0;JJ(d,1844,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1844,bga(c,a)|0);b=a}}case 9:{JJ(d,1855,b);break}case 10:{JJ(d,1856,b);JJ(d,1844,(Era(c)|0)+12|0);break}case 11:{JJ(d,1857,b);break}case 12:{JJ(d,1858,b);JJ(d,1844,(ura(c)|0)+12|0);break}case 13:{JJ(d,1859,b);JJ(d,1844,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1860,b);JJ(d,1844,(Zra(c)|0)+28|0);JJ(d,1844,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1861,b);JJ(d,1844,(wra(c)|0)+24|0);JJ(d,1844,(wra(c)|0)+20|0);break}case 24:{JJ(d,1862,b);JJ(d,1844,(Vqa(c)|0)+24|0);JJ(d,1844,(Vqa(c)|0)+20|0);JJ(d,1844,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1863,b);JJ(d,1844,(lra(c)|0)+16|0);JJ(d,1844,(lra(c)|0)+12|0);JJ(d,1844,(lra(c)|0)+8|0);break}case 27:{JJ(d,1864,b);JJ(d,1844,(kra(c)|0)+12|0);JJ(d,1844,(kra(c)|0)+8|0);break}case 15:{JJ(d,1865,b);break}case 16:{JJ(d,1866,b);JJ(d,1844,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1867,b);JJ(d,1844,(Sra(c)|0)+16|0);JJ(d,1844,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1868,b);JJ(d,1844,(Qra(c)|0)+16|0);JJ(d,1844,(Qra(c)|0)+12|0);JJ(d,1844,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1869,b);JJ(d,1844,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1870,b);rH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1871,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1844,bga(c,a)|0);b=a}}case 22:{JJ(d,1872,b);break}case 23:{JJ(d,1873,b);break}default:Ka()}while(0);return}function Pd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1318,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1285,bga(d,b)|0);c=b}}case 2:{JJ(a,1319,b);eH(a,(Asa(c)|0)+16|0);JJ(a,1285,(Asa(c)|0)+12|0);JJ(a,1285,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1320,b);JJ(a,1285,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1321,b);eH(a,(jsa(c)|0)+16|0);eH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1322,b);JJ(a,1285,(Xra(c)|0)+28|0);eH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1323,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1285,bga(d,b)|0);c=b}}case 7:{JJ(a,1324,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1285,bga(d,b)|0);c=b}}case 8:{JJ(a,1325,b);b=fra(c)|0;JJ(a,1285,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1285,bga(d,b)|0);c=b}}case 9:{JJ(a,1326,b);break}case 10:{JJ(a,1327,b);JJ(a,1285,(Era(c)|0)+12|0);break}case 11:{JJ(a,1328,b);break}case 12:{JJ(a,1329,b);JJ(a,1285,(ura(c)|0)+12|0);break}case 13:{JJ(a,1330,b);JJ(a,1285,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1331,b);JJ(a,1285,(Zra(c)|0)+28|0);JJ(a,1285,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1332,b);JJ(a,1285,(wra(c)|0)+24|0);JJ(a,1285,(wra(c)|0)+20|0);break}case 24:{JJ(a,1333,b);JJ(a,1285,(Vqa(c)|0)+24|0);JJ(a,1285,(Vqa(c)|0)+20|0);JJ(a,1285,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1334,b);JJ(a,1285,(lra(c)|0)+16|0);JJ(a,1285,(lra(c)|0)+12|0);JJ(a,1285,(lra(c)|0)+8|0);break}case 27:{JJ(a,1335,b);JJ(a,1285,(kra(c)|0)+12|0);JJ(a,1285,(kra(c)|0)+8|0);break}case 15:{JJ(a,1336,b);break}case 16:{JJ(a,1337,b);JJ(a,1285,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1338,b);JJ(a,1285,(Sra(c)|0)+16|0);JJ(a,1285,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1339,b);JJ(a,1285,(Qra(c)|0)+16|0);JJ(a,1285,(Qra(c)|0)+12|0);JJ(a,1285,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1340,b);JJ(a,1285,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1341,b);eH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1342,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1285,bga(d,b)|0);c=b}}case 22:{JJ(a,1343,b);break}case 23:{JJ(a,1344,b);break}default:Ka()}while(0);return}function Qd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1906,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1905,bga(d,b)|0);c=b}}case 2:{JJ(a,1907,b);gH(a,(Asa(c)|0)+16|0);JJ(a,1905,(Asa(c)|0)+12|0);JJ(a,1905,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1908,b);JJ(a,1905,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1909,b);gH(a,(jsa(c)|0)+16|0);gH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1910,b);JJ(a,1905,(Xra(c)|0)+28|0);gH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1911,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1905,bga(d,b)|0);c=b}}case 7:{JJ(a,1912,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1905,bga(d,b)|0);c=b}}case 8:{JJ(a,1913,b);b=fra(c)|0;JJ(a,1905,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1905,bga(d,b)|0);c=b}}case 9:{JJ(a,1914,b);break}case 10:{JJ(a,1915,b);JJ(a,1905,(Era(c)|0)+12|0);break}case 11:{JJ(a,1916,b);break}case 12:{JJ(a,1917,b);JJ(a,1905,(ura(c)|0)+12|0);break}case 13:{JJ(a,1918,b);JJ(a,1905,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1919,b);JJ(a,1905,(Zra(c)|0)+28|0);JJ(a,1905,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1920,b);JJ(a,1905,(wra(c)|0)+24|0);JJ(a,1905,(wra(c)|0)+20|0);break}case 24:{JJ(a,1921,b);JJ(a,1905,(Vqa(c)|0)+24|0);JJ(a,1905,(Vqa(c)|0)+20|0);JJ(a,1905,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1922,b);JJ(a,1905,(lra(c)|0)+16|0);JJ(a,1905,(lra(c)|0)+12|0);JJ(a,1905,(lra(c)|0)+8|0);break}case 27:{JJ(a,1923,b);JJ(a,1905,(kra(c)|0)+12|0);JJ(a,1905,(kra(c)|0)+8|0);break}case 15:{JJ(a,1924,b);break}case 16:{JJ(a,1925,b);JJ(a,1905,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1926,b);JJ(a,1905,(Sra(c)|0)+16|0);JJ(a,1905,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1927,b);JJ(a,1905,(Qra(c)|0)+16|0);JJ(a,1905,(Qra(c)|0)+12|0);JJ(a,1905,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1928,b);JJ(a,1905,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1929,b);gH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1930,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1905,bga(d,b)|0);c=b}}case 22:{JJ(a,1931,b);break}case 23:{JJ(a,1932,b);break}default:Ka()}while(0);return}function Rd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,1169,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1168,bga(d,b)|0);c=b}}case 2:{JJ(a,1170,b);lH(a,(Asa(c)|0)+16|0);JJ(a,1168,(Asa(c)|0)+12|0);JJ(a,1168,(Asa(c)|0)+8|0);break}case 3:{JJ(a,1171,b);JJ(a,1168,(rsa(c)|0)+12|0);break}case 4:{JJ(a,1172,b);lH(a,(jsa(c)|0)+16|0);lH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,1173,b);JJ(a,1168,(Xra(c)|0)+28|0);lH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,1174,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1168,bga(d,b)|0);c=b}}case 7:{JJ(a,1175,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1168,bga(d,b)|0);c=b}}case 8:{JJ(a,1176,b);b=fra(c)|0;JJ(a,1168,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1168,bga(d,b)|0);c=b}}case 9:{JJ(a,1177,b);break}case 10:{JJ(a,1178,b);JJ(a,1168,(Era(c)|0)+12|0);break}case 11:{JJ(a,1179,b);break}case 12:{JJ(a,1180,b);JJ(a,1168,(ura(c)|0)+12|0);break}case 13:{JJ(a,1181,b);JJ(a,1168,(lsa(c)|0)+24|0);break}case 14:{JJ(a,1182,b);JJ(a,1168,(Zra(c)|0)+28|0);JJ(a,1168,(Zra(c)|0)+24|0);break}case 25:{JJ(a,1183,b);JJ(a,1168,(wra(c)|0)+24|0);JJ(a,1168,(wra(c)|0)+20|0);break}case 24:{JJ(a,1184,b);JJ(a,1168,(Vqa(c)|0)+24|0);JJ(a,1168,(Vqa(c)|0)+20|0);JJ(a,1168,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,1185,b);JJ(a,1168,(lra(c)|0)+16|0);JJ(a,1168,(lra(c)|0)+12|0);JJ(a,1168,(lra(c)|0)+8|0);break}case 27:{JJ(a,1186,b);JJ(a,1168,(kra(c)|0)+12|0);JJ(a,1168,(kra(c)|0)+8|0);break}case 15:{JJ(a,1187,b);break}case 16:{JJ(a,1188,b);JJ(a,1168,(Yra(c)|0)+12|0);break}case 17:{JJ(a,1189,b);JJ(a,1168,(Sra(c)|0)+16|0);JJ(a,1168,(Sra(c)|0)+12|0);break}case 18:{JJ(a,1190,b);JJ(a,1168,(Qra(c)|0)+16|0);JJ(a,1168,(Qra(c)|0)+12|0);JJ(a,1168,(Qra(c)|0)+8|0);break}case 19:{JJ(a,1191,b);JJ(a,1168,(nsa(c)|0)+8|0);break}case 20:{JJ(a,1192,b);lH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,1193,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,1168,bga(d,b)|0);c=b}}case 22:{JJ(a,1194,b);break}case 23:{JJ(a,1195,b);break}default:Ka()}while(0);return}function Sd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=u;u=u+96|0;r=t+68|0;s=t+48|0;j=t+32|0;h=t+64|0;p=t+16|0;k=t;i=t+12|0;d=f[a>>2]|0;q=b+12|0;do if(Xha(d,b)|0){e=a+8|0;tI(s,f[(f[q>>2]|0)+4>>2]|0,d,f[e>>2]|0,f[18679]|0);Qya(j);d=f[e>>2]|0;g=f[s+8>>2]|0;FCa(h,gKa(g)|0);y=0;f[r>>2]=f[h>>2];d=ua(60,d|0,r|0)|0;l=y;y=0;if(!(l&1)?(f[j+8>>2]=d,m=b+16|0,y=0,ga(4,p|0,f[(f[m>>2]|0)+4>>2]|0,f[a>>2]|0,f[e>>2]|0,f[18679]|0),l=y,y=0,!(l&1)):0){Qya(k);d=f[e>>2]|0;e=f[p+8>>2]|0;FCa(i,gKa(e)|0);y=0;f[r>>2]=f[i>>2];d=ua(60,d|0,r|0)|0;l=y;y=0;if(l&1)c=Pa()|0;else{f[k+8>>2]=d;f[r>>2]=f[b>>2];f[r+4>>2]=f[b+4>>2];f[r+8>>2]=f[b+8>>2];f[r+12>>2]=j;f[r+16>>2]=k;y=0;d=oa(42,a|0,f[q>>2]|0,g|0)|0;q=y;y=0;if(((((!(q&1)?(y=0,c=la(157,d|0)|0,q=y,y=0,!(q&1)):0)?(y=0,n=oa(42,a|0,f[m>>2]|0,e|0)|0,q=y,y=0,!(q&1)):0)?(y=0,ja(78,c|0,n|0),q=y,y=0,!(q&1)):0)?(y=0,o=oa(43,a|0,r|0,f[a+4>>2]|0)|0,r=y,y=0,!(r&1)):0)?(y=0,ja(78,c|0,o|0),r=y,y=0,!(r&1)):0){iX(p);iX(s);break}c=Pa()|0}iX(p)}else c=Pa()|0;iX(s);$a(c|0)}else{d=AT(a,f[q>>2]|0,f[18680]|0)|0;c=AT(a,f[b+16>>2]|0,f[18680]|0)|0;PDa(s,0);e=b+4|0;a:do switch(f[b+8>>2]|0){case 0:{c=Nq(d,f[18905]|0,c)|0;l=55;break}case 1:{c=Nq(d,f[18904]|0,c)|0;l=55;break}case 2:if((f[e>>2]|0)==1){c=vC(f[18788]|0,d,c)|0;break a}else{c=Nq(d,f[18890]|0,c)|0;break a}case 3:{c=Nq(Z1(d,1)|0,f[18892]|0,Z1(c,1)|0)|0;l=55;break}case 4:{c=Nq(Z1(d,2)|0,f[18892]|0,Z1(c,2)|0)|0;l=55;break}case 5:{c=Nq(Z1(d,1)|0,f[18891]|0,Z1(c,1)|0)|0;l=55;break}case 6:{c=Nq(Z1(d,2)|0,f[18891]|0,Z1(c,2)|0)|0;l=55;break}case 7:{c=Nq(d,f[18902]|0,c)|0;l=55;break}case 8:{c=Nq(d,f[18903]|0,c)|0;l=55;break}case 9:{c=Nq(d,f[18901]|0,c)|0;l=55;break}case 10:{c=Nq(d,f[18888]|0,c)|0;l=55;break}case 11:{c=Nq(d,f[18887]|0,c)|0;l=55;break}case 12:{c=Nq(d,f[18889]|0,c)|0;l=55;break}case 55:{c=vC(f[18781]|0,d,c)|0;l=55;break}case 56:{c=vC(f[18780]|0,d,c)|0;l=55;break}case 15:if((f[(f[q>>2]|0)+4>>2]|0)==1){r=Z1(d,1)|0;s=f[18894]|0;c=Nq(r,s,Z1(c,1)|0)|0;break a}else{c=Nq(d,f[18894]|0,c)|0;break a}case 16:if((f[(f[q>>2]|0)+4>>2]|0)==1){r=Z1(d,1)|0;s=f[18893]|0;c=Nq(r,s,Z1(c,1)|0)|0;break a}else{c=Nq(d,f[18893]|0,c)|0;break a}case 17:{c=Nq(Z1(d,1)|0,f[18898]|0,Z1(c,1)|0)|0;break}case 18:{c=Nq(Z1(d,2)|0,f[18898]|0,Z1(c,2)|0)|0;break}case 19:{c=Nq(Z1(d,1)|0,f[18896]|0,Z1(c,1)|0)|0;break}case 20:{c=Nq(Z1(d,2)|0,f[18896]|0,Z1(c,2)|0)|0;break}case 21:{c=Nq(Z1(d,1)|0,f[18895]|0,Z1(c,1)|0)|0;break}case 22:{c=Nq(Z1(d,2)|0,f[18895]|0,Z1(c,2)|0)|0;break}case 23:{c=Nq(Z1(d,1)|0,f[18897]|0,Z1(c,1)|0)|0;break}case 24:{c=Nq(Z1(d,2)|0,f[18897]|0,Z1(c,2)|0)|0;break}case 13:{c=vC(f[18775]|0,d,c)|0;break}case 14:{c=vC(f[18773]|0,d,c)|0;break}default:{c=wja(Vea(76852,24056)|0,b)|0;Axa(r,76852+(f[(f[19213]|0)+-12>>2]|0)|0);y=0;d=ua(46,f[r>>2]|0,77556)|0;t=y;y=0;if(!(t&1)?(y=0,g=ua(f[(f[d>>2]|0)+28>>2]|0,d|0,10)|0,t=y,y=0,!(t&1)):0){pza(r);jn(c,g)|0;Yp(c)|0;Ka()}t=Pa()|0;pza(r);$a(t|0)}}while(0);if((l|0)==55){f[s>>2]=c;c=Fw(c,q5(f[e>>2]|0)|0)|0}}while(0);u=t;return c|0}function Td(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,694,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,693,bga(c,a)|0);b=a}}case 2:{JJ(d,695,b);UG(d,(Asa(c)|0)+16|0);JJ(d,693,(Asa(c)|0)+12|0);JJ(d,693,(Asa(c)|0)+8|0);break}case 3:{JJ(d,696,b);JJ(d,693,(rsa(c)|0)+12|0);break}case 4:{JJ(d,697,b);UG(d,(jsa(c)|0)+16|0);UG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,698,b);JJ(d,693,(Xra(c)|0)+28|0);UG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,699,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,693,bga(c,a)|0);b=a}}case 7:{JJ(d,700,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,693,bga(c,a)|0);b=a}}case 8:{JJ(d,701,b);b=fra(c)|0;JJ(d,693,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,693,bga(c,a)|0);b=a}}case 9:{JJ(d,702,b);break}case 10:{JJ(d,703,b);JJ(d,693,(Era(c)|0)+12|0);break}case 11:{JJ(d,704,b);break}case 12:{JJ(d,705,b);JJ(d,693,(ura(c)|0)+12|0);break}case 13:{JJ(d,706,b);JJ(d,693,(lsa(c)|0)+24|0);break}case 14:{JJ(d,707,b);JJ(d,693,(Zra(c)|0)+28|0);JJ(d,693,(Zra(c)|0)+24|0);break}case 25:{JJ(d,708,b);JJ(d,693,(wra(c)|0)+24|0);JJ(d,693,(wra(c)|0)+20|0);break}case 24:{JJ(d,709,b);JJ(d,693,(Vqa(c)|0)+24|0);JJ(d,693,(Vqa(c)|0)+20|0);JJ(d,693,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,710,b);JJ(d,693,(lra(c)|0)+16|0);JJ(d,693,(lra(c)|0)+12|0);JJ(d,693,(lra(c)|0)+8|0);break}case 27:{JJ(d,711,b);JJ(d,693,(kra(c)|0)+12|0);JJ(d,693,(kra(c)|0)+8|0);break}case 15:{JJ(d,712,b);break}case 16:{JJ(d,713,b);JJ(d,693,(Yra(c)|0)+12|0);break}case 17:{JJ(d,714,b);JJ(d,693,(Sra(c)|0)+16|0);JJ(d,693,(Sra(c)|0)+12|0);break}case 18:{JJ(d,715,b);JJ(d,693,(Qra(c)|0)+16|0);JJ(d,693,(Qra(c)|0)+12|0);JJ(d,693,(Qra(c)|0)+8|0);break}case 19:{JJ(d,716,b);JJ(d,693,(nsa(c)|0)+8|0);break}case 20:{JJ(d,717,b);UG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,718,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,693,bga(c,a)|0);b=a}}case 22:{JJ(d,719,b);break}case 23:{JJ(d,720,b);break}default:Ka()}while(0);return}function Ud(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1437,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 2:{JJ(d,1439,b);AH(d,(Asa(c)|0)+16|0);JJ(d,1433,(Asa(c)|0)+12|0);JJ(d,1433,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1440,b);JJ(d,1433,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1441,b);AH(d,(jsa(c)|0)+16|0);AH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1442,b);JJ(d,1433,(Xra(c)|0)+28|0);AH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1447,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 7:{JJ(d,1448,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 8:{JJ(d,1449,b);b=fra(c)|0;JJ(d,1433,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 9:{JJ(d,1450,b);break}case 10:{JJ(d,1451,b);JJ(d,1433,(Era(c)|0)+12|0);break}case 11:{JJ(d,1452,b);break}case 12:{JJ(d,1453,b);JJ(d,1433,(ura(c)|0)+12|0);break}case 13:{JJ(d,1454,b);JJ(d,1433,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1455,b);JJ(d,1433,(Zra(c)|0)+28|0);JJ(d,1433,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1456,b);JJ(d,1433,(wra(c)|0)+24|0);JJ(d,1433,(wra(c)|0)+20|0);break}case 24:{JJ(d,1457,b);JJ(d,1433,(Vqa(c)|0)+24|0);JJ(d,1433,(Vqa(c)|0)+20|0);JJ(d,1433,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1458,b);JJ(d,1433,(lra(c)|0)+16|0);JJ(d,1433,(lra(c)|0)+12|0);JJ(d,1433,(lra(c)|0)+8|0);break}case 27:{JJ(d,1459,b);JJ(d,1433,(kra(c)|0)+12|0);JJ(d,1433,(kra(c)|0)+8|0);break}case 15:{JJ(d,1460,b);break}case 16:{JJ(d,1461,b);JJ(d,1433,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1462,b);JJ(d,1433,(Sra(c)|0)+16|0);JJ(d,1433,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1463,b);JJ(d,1433,(Qra(c)|0)+16|0);JJ(d,1433,(Qra(c)|0)+12|0);JJ(d,1433,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1464,b);JJ(d,1433,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1443,b);AH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1465,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1433,bga(c,a)|0);b=a}}case 22:{JJ(d,1466,b);break}case 23:{JJ(d,1444,b);break}default:Ka()}while(0);return}function Vd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,754,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,753,bga(d,b)|0);c=b}}case 2:{JJ(a,755,b);IG(a,(Asa(c)|0)+16|0);JJ(a,753,(Asa(c)|0)+12|0);JJ(a,753,(Asa(c)|0)+8|0);break}case 3:{JJ(a,756,b);JJ(a,753,(rsa(c)|0)+12|0);break}case 4:{JJ(a,757,b);IG(a,(jsa(c)|0)+16|0);IG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,758,b);JJ(a,753,(Xra(c)|0)+28|0);IG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,759,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,753,bga(d,b)|0);c=b}}case 7:{JJ(a,760,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,753,bga(d,b)|0);c=b}}case 8:{JJ(a,761,b);b=fra(c)|0;JJ(a,753,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,753,bga(d,b)|0);c=b}}case 9:{JJ(a,762,b);break}case 10:{JJ(a,763,b);JJ(a,753,(Era(c)|0)+12|0);break}case 11:{JJ(a,764,b);break}case 12:{JJ(a,765,b);JJ(a,753,(ura(c)|0)+12|0);break}case 13:{JJ(a,766,b);JJ(a,753,(lsa(c)|0)+24|0);break}case 14:{JJ(a,767,b);JJ(a,753,(Zra(c)|0)+28|0);JJ(a,753,(Zra(c)|0)+24|0);break}case 25:{JJ(a,768,b);JJ(a,753,(wra(c)|0)+24|0);JJ(a,753,(wra(c)|0)+20|0);break}case 24:{JJ(a,769,b);JJ(a,753,(Vqa(c)|0)+24|0);JJ(a,753,(Vqa(c)|0)+20|0);JJ(a,753,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,770,b);JJ(a,753,(lra(c)|0)+16|0);JJ(a,753,(lra(c)|0)+12|0);JJ(a,753,(lra(c)|0)+8|0);break}case 27:{JJ(a,771,b);JJ(a,753,(kra(c)|0)+12|0);JJ(a,753,(kra(c)|0)+8|0);break}case 15:{JJ(a,772,b);break}case 16:{JJ(a,773,b);JJ(a,753,(Yra(c)|0)+12|0);break}case 17:{JJ(a,774,b);JJ(a,753,(Sra(c)|0)+16|0);JJ(a,753,(Sra(c)|0)+12|0);break}case 18:{JJ(a,775,b);JJ(a,753,(Qra(c)|0)+16|0);JJ(a,753,(Qra(c)|0)+12|0);JJ(a,753,(Qra(c)|0)+8|0);break}case 19:{JJ(a,776,b);JJ(a,753,(nsa(c)|0)+8|0);break}case 20:{JJ(a,777,b);IG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,778,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,753,bga(d,b)|0);c=b}}case 22:{JJ(a,779,b);break}case 23:{JJ(a,780,b);break}default:Ka()}while(0);return}function Wd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,725,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,724,bga(d,b)|0);c=b}}case 2:{JJ(a,726,b);JG(a,(Asa(c)|0)+16|0);JJ(a,724,(Asa(c)|0)+12|0);JJ(a,724,(Asa(c)|0)+8|0);break}case 3:{JJ(a,727,b);JJ(a,724,(rsa(c)|0)+12|0);break}case 4:{JJ(a,728,b);JG(a,(jsa(c)|0)+16|0);JG(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,729,b);JJ(a,724,(Xra(c)|0)+28|0);JG(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,730,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,724,bga(d,b)|0);c=b}}case 7:{JJ(a,731,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,724,bga(d,b)|0);c=b}}case 8:{JJ(a,732,b);b=fra(c)|0;JJ(a,724,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,724,bga(d,b)|0);c=b}}case 9:{JJ(a,733,b);break}case 10:{JJ(a,734,b);JJ(a,724,(Era(c)|0)+12|0);break}case 11:{JJ(a,735,b);break}case 12:{JJ(a,736,b);JJ(a,724,(ura(c)|0)+12|0);break}case 13:{JJ(a,737,b);JJ(a,724,(lsa(c)|0)+24|0);break}case 14:{JJ(a,738,b);JJ(a,724,(Zra(c)|0)+28|0);JJ(a,724,(Zra(c)|0)+24|0);break}case 25:{JJ(a,739,b);JJ(a,724,(wra(c)|0)+24|0);JJ(a,724,(wra(c)|0)+20|0);break}case 24:{JJ(a,740,b);JJ(a,724,(Vqa(c)|0)+24|0);JJ(a,724,(Vqa(c)|0)+20|0);JJ(a,724,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,741,b);JJ(a,724,(lra(c)|0)+16|0);JJ(a,724,(lra(c)|0)+12|0);JJ(a,724,(lra(c)|0)+8|0);break}case 27:{JJ(a,742,b);JJ(a,724,(kra(c)|0)+12|0);JJ(a,724,(kra(c)|0)+8|0);break}case 15:{JJ(a,743,b);break}case 16:{JJ(a,744,b);JJ(a,724,(Yra(c)|0)+12|0);break}case 17:{JJ(a,745,b);JJ(a,724,(Sra(c)|0)+16|0);JJ(a,724,(Sra(c)|0)+12|0);break}case 18:{JJ(a,746,b);JJ(a,724,(Qra(c)|0)+16|0);JJ(a,724,(Qra(c)|0)+12|0);JJ(a,724,(Qra(c)|0)+8|0);break}case 19:{JJ(a,747,b);JJ(a,724,(nsa(c)|0)+8|0);break}case 20:{JJ(a,748,b);JG(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,749,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,724,bga(d,b)|0);c=b}}case 22:{JJ(a,750,b);break}case 23:{JJ(a,751,b);break}default:Ka()}while(0);return}function Xd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,666,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,665,bga(c,a)|0);b=a}}case 2:{JJ(d,667,b);VG(d,(Asa(c)|0)+16|0);JJ(d,665,(Asa(c)|0)+12|0);JJ(d,665,(Asa(c)|0)+8|0);break}case 3:{JJ(d,668,b);JJ(d,665,(rsa(c)|0)+12|0);break}case 4:{JJ(d,669,b);VG(d,(jsa(c)|0)+16|0);VG(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,670,b);JJ(d,665,(Xra(c)|0)+28|0);VG(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,671,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,665,bga(c,a)|0);b=a}}case 7:{JJ(d,672,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,665,bga(c,a)|0);b=a}}case 8:{JJ(d,673,b);b=fra(c)|0;JJ(d,665,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,665,bga(c,a)|0);b=a}}case 9:{JJ(d,674,b);break}case 10:{JJ(d,675,b);JJ(d,665,(Era(c)|0)+12|0);break}case 11:{JJ(d,676,b);break}case 12:{JJ(d,677,b);JJ(d,665,(ura(c)|0)+12|0);break}case 13:{JJ(d,678,b);JJ(d,665,(lsa(c)|0)+24|0);break}case 14:{JJ(d,679,b);JJ(d,665,(Zra(c)|0)+28|0);JJ(d,665,(Zra(c)|0)+24|0);break}case 25:{JJ(d,680,b);JJ(d,665,(wra(c)|0)+24|0);JJ(d,665,(wra(c)|0)+20|0);break}case 24:{JJ(d,681,b);JJ(d,665,(Vqa(c)|0)+24|0);JJ(d,665,(Vqa(c)|0)+20|0);JJ(d,665,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,682,b);JJ(d,665,(lra(c)|0)+16|0);JJ(d,665,(lra(c)|0)+12|0);JJ(d,665,(lra(c)|0)+8|0);break}case 27:{JJ(d,683,b);JJ(d,665,(kra(c)|0)+12|0);JJ(d,665,(kra(c)|0)+8|0);break}case 15:{JJ(d,684,b);break}case 16:{JJ(d,685,b);JJ(d,665,(Yra(c)|0)+12|0);break}case 17:{JJ(d,686,b);JJ(d,665,(Sra(c)|0)+16|0);JJ(d,665,(Sra(c)|0)+12|0);break}case 18:{JJ(d,687,b);JJ(d,665,(Qra(c)|0)+16|0);JJ(d,665,(Qra(c)|0)+12|0);JJ(d,665,(Qra(c)|0)+8|0);break}case 19:{JJ(d,688,b);JJ(d,665,(nsa(c)|0)+8|0);break}case 20:{JJ(d,689,b);VG(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,690,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,665,bga(c,a)|0);b=a}}case 22:{JJ(d,691,b);break}case 23:{JJ(d,692,b);break}default:Ka()}while(0);return}function Yd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,1546,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1545,bga(c,a)|0);b=a}}case 2:{JJ(d,1547,b);CH(d,(Asa(c)|0)+16|0);JJ(d,1545,(Asa(c)|0)+12|0);JJ(d,1545,(Asa(c)|0)+8|0);break}case 3:{JJ(d,1548,b);JJ(d,1545,(rsa(c)|0)+12|0);break}case 4:{JJ(d,1549,b);CH(d,(jsa(c)|0)+16|0);CH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,1550,b);JJ(d,1545,(Xra(c)|0)+28|0);CH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,1551,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1545,bga(c,a)|0);b=a}}case 7:{JJ(d,1552,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1545,bga(c,a)|0);b=a}}case 8:{JJ(d,1553,b);b=fra(c)|0;JJ(d,1545,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1545,bga(c,a)|0);b=a}}case 9:{JJ(d,1554,b);break}case 10:{JJ(d,1555,b);JJ(d,1545,(Era(c)|0)+12|0);break}case 11:{JJ(d,1556,b);break}case 12:{JJ(d,1557,b);JJ(d,1545,(ura(c)|0)+12|0);break}case 13:{JJ(d,1558,b);JJ(d,1545,(lsa(c)|0)+24|0);break}case 14:{JJ(d,1559,b);JJ(d,1545,(Zra(c)|0)+28|0);JJ(d,1545,(Zra(c)|0)+24|0);break}case 25:{JJ(d,1560,b);JJ(d,1545,(wra(c)|0)+24|0);JJ(d,1545,(wra(c)|0)+20|0);break}case 24:{JJ(d,1561,b);JJ(d,1545,(Vqa(c)|0)+24|0);JJ(d,1545,(Vqa(c)|0)+20|0);JJ(d,1545,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,1562,b);JJ(d,1545,(lra(c)|0)+16|0);JJ(d,1545,(lra(c)|0)+12|0);JJ(d,1545,(lra(c)|0)+8|0);break}case 27:{JJ(d,1563,b);JJ(d,1545,(kra(c)|0)+12|0);JJ(d,1545,(kra(c)|0)+8|0);break}case 15:{JJ(d,1564,b);break}case 16:{JJ(d,1565,b);JJ(d,1545,(Yra(c)|0)+12|0);break}case 17:{JJ(d,1566,b);JJ(d,1545,(Sra(c)|0)+16|0);JJ(d,1545,(Sra(c)|0)+12|0);break}case 18:{JJ(d,1567,b);JJ(d,1545,(Qra(c)|0)+16|0);JJ(d,1545,(Qra(c)|0)+12|0);JJ(d,1545,(Qra(c)|0)+8|0);break}case 19:{JJ(d,1568,b);JJ(d,1545,(nsa(c)|0)+8|0);break}case 20:{JJ(d,1569,b);CH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,1570,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,1545,bga(c,a)|0);b=a}}case 22:{JJ(d,1571,b);break}case 23:{JJ(d,1572,b);break}default:Ka()}while(0);return}function Zd(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,847,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,842,bga(c,a)|0);b=a}}case 2:{JJ(d,844,b);cH(d,(Asa(c)|0)+16|0);JJ(d,842,(Asa(c)|0)+12|0);JJ(d,842,(Asa(c)|0)+8|0);break}case 3:{JJ(d,848,b);JJ(d,842,(rsa(c)|0)+12|0);break}case 4:{JJ(d,849,b);cH(d,(jsa(c)|0)+16|0);cH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,850,b);JJ(d,842,(Xra(c)|0)+28|0);cH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,851,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,842,bga(c,a)|0);b=a}}case 7:{JJ(d,852,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,842,bga(c,a)|0);b=a}}case 8:{JJ(d,853,b);b=fra(c)|0;JJ(d,842,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,842,bga(c,a)|0);b=a}}case 9:{JJ(d,854,b);break}case 10:{JJ(d,855,b);JJ(d,842,(Era(c)|0)+12|0);break}case 11:{JJ(d,856,b);break}case 12:{JJ(d,857,b);JJ(d,842,(ura(c)|0)+12|0);break}case 13:{JJ(d,858,b);JJ(d,842,(lsa(c)|0)+24|0);break}case 14:{JJ(d,859,b);JJ(d,842,(Zra(c)|0)+28|0);JJ(d,842,(Zra(c)|0)+24|0);break}case 25:{JJ(d,860,b);JJ(d,842,(wra(c)|0)+24|0);JJ(d,842,(wra(c)|0)+20|0);break}case 24:{JJ(d,861,b);JJ(d,842,(Vqa(c)|0)+24|0);JJ(d,842,(Vqa(c)|0)+20|0);JJ(d,842,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,862,b);JJ(d,842,(lra(c)|0)+16|0);JJ(d,842,(lra(c)|0)+12|0);JJ(d,842,(lra(c)|0)+8|0);break}case 27:{JJ(d,863,b);JJ(d,842,(kra(c)|0)+12|0);JJ(d,842,(kra(c)|0)+8|0);break}case 15:{JJ(d,864,b);break}case 16:{JJ(d,865,b);JJ(d,842,(Yra(c)|0)+12|0);break}case 17:{JJ(d,866,b);JJ(d,842,(Sra(c)|0)+16|0);JJ(d,842,(Sra(c)|0)+12|0);break}case 18:{JJ(d,867,b);JJ(d,842,(Qra(c)|0)+16|0);JJ(d,842,(Qra(c)|0)+12|0);JJ(d,842,(Qra(c)|0)+8|0);break}case 19:{JJ(d,868,b);JJ(d,842,(nsa(c)|0)+8|0);break}case 20:{JJ(d,869,b);cH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,870,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,842,bga(c,a)|0);b=a}}case 22:{JJ(d,871,b);break}case 23:{JJ(d,872,b);break}default:Ka()}while(0);return}function _d(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,489,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 2:{JJ(d,491,b);hH(d,(Asa(c)|0)+16|0);JJ(d,482,(Asa(c)|0)+12|0);JJ(d,482,(Asa(c)|0)+8|0);break}case 3:{JJ(d,492,b);JJ(d,482,(rsa(c)|0)+12|0);break}case 4:{JJ(d,493,b);hH(d,(jsa(c)|0)+16|0);hH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,494,b);JJ(d,482,(Xra(c)|0)+28|0);hH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,499,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 7:{JJ(d,500,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 8:{JJ(d,501,b);b=fra(c)|0;JJ(d,482,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 9:{JJ(d,502,b);break}case 10:{JJ(d,503,b);JJ(d,482,(Era(c)|0)+12|0);break}case 11:{JJ(d,504,b);break}case 12:{JJ(d,505,b);JJ(d,482,(ura(c)|0)+12|0);break}case 13:{JJ(d,506,b);JJ(d,482,(lsa(c)|0)+24|0);break}case 14:{JJ(d,507,b);JJ(d,482,(Zra(c)|0)+28|0);JJ(d,482,(Zra(c)|0)+24|0);break}case 25:{JJ(d,508,b);JJ(d,482,(wra(c)|0)+24|0);JJ(d,482,(wra(c)|0)+20|0);break}case 24:{JJ(d,509,b);JJ(d,482,(Vqa(c)|0)+24|0);JJ(d,482,(Vqa(c)|0)+20|0);JJ(d,482,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,510,b);JJ(d,482,(lra(c)|0)+16|0);JJ(d,482,(lra(c)|0)+12|0);JJ(d,482,(lra(c)|0)+8|0);break}case 27:{JJ(d,511,b);JJ(d,482,(kra(c)|0)+12|0);JJ(d,482,(kra(c)|0)+8|0);break}case 15:{JJ(d,512,b);break}case 16:{JJ(d,513,b);JJ(d,482,(Yra(c)|0)+12|0);break}case 17:{JJ(d,514,b);JJ(d,482,(Sra(c)|0)+16|0);JJ(d,482,(Sra(c)|0)+12|0);break}case 18:{JJ(d,515,b);JJ(d,482,(Qra(c)|0)+16|0);JJ(d,482,(Qra(c)|0)+12|0);JJ(d,482,(Qra(c)|0)+8|0);break}case 19:{JJ(d,516,b);JJ(d,482,(nsa(c)|0)+8|0);break}case 20:{JJ(d,495,b);hH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,517,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,482,bga(c,a)|0);b=a}}case 22:{JJ(d,518,b);break}case 23:{JJ(d,496,b);break}default:Ka()}while(0);return}function $d(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,638,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,637,bga(c,a)|0);b=a}}case 2:{JJ(d,639,b);nH(d,(Asa(c)|0)+16|0);JJ(d,637,(Asa(c)|0)+12|0);JJ(d,637,(Asa(c)|0)+8|0);break}case 3:{JJ(d,640,b);JJ(d,637,(rsa(c)|0)+12|0);break}case 4:{JJ(d,641,b);nH(d,(jsa(c)|0)+16|0);nH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,642,b);JJ(d,637,(Xra(c)|0)+28|0);nH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,643,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,637,bga(c,a)|0);b=a}}case 7:{JJ(d,644,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,637,bga(c,a)|0);b=a}}case 8:{JJ(d,645,b);b=fra(c)|0;JJ(d,637,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,637,bga(c,a)|0);b=a}}case 9:{JJ(d,646,b);break}case 10:{JJ(d,647,b);JJ(d,637,(Era(c)|0)+12|0);break}case 11:{JJ(d,648,b);break}case 12:{JJ(d,649,b);JJ(d,637,(ura(c)|0)+12|0);break}case 13:{JJ(d,650,b);JJ(d,637,(lsa(c)|0)+24|0);break}case 14:{JJ(d,651,b);JJ(d,637,(Zra(c)|0)+28|0);JJ(d,637,(Zra(c)|0)+24|0);break}case 25:{JJ(d,652,b);JJ(d,637,(wra(c)|0)+24|0);JJ(d,637,(wra(c)|0)+20|0);break}case 24:{JJ(d,653,b);JJ(d,637,(Vqa(c)|0)+24|0);JJ(d,637,(Vqa(c)|0)+20|0);JJ(d,637,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,654,b);JJ(d,637,(lra(c)|0)+16|0);JJ(d,637,(lra(c)|0)+12|0);JJ(d,637,(lra(c)|0)+8|0);break}case 27:{JJ(d,655,b);JJ(d,637,(kra(c)|0)+12|0);JJ(d,637,(kra(c)|0)+8|0);break}case 15:{JJ(d,656,b);break}case 16:{JJ(d,657,b);JJ(d,637,(Yra(c)|0)+12|0);break}case 17:{JJ(d,658,b);JJ(d,637,(Sra(c)|0)+16|0);JJ(d,637,(Sra(c)|0)+12|0);break}case 18:{JJ(d,659,b);JJ(d,637,(Qra(c)|0)+16|0);JJ(d,637,(Qra(c)|0)+12|0);JJ(d,637,(Qra(c)|0)+8|0);break}case 19:{JJ(d,660,b);JJ(d,637,(nsa(c)|0)+8|0);break}case 20:{JJ(d,661,b);nH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,662,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,637,bga(c,a)|0);b=a}}case 22:{JJ(d,663,b);break}case 23:{JJ(d,664,b);break}default:Ka()}while(0);return}function ae(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,874,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,873,bga(c,a)|0);b=a}}case 2:{JJ(d,875,b);oH(d,(Asa(c)|0)+16|0);JJ(d,873,(Asa(c)|0)+12|0);JJ(d,873,(Asa(c)|0)+8|0);break}case 3:{JJ(d,876,b);JJ(d,873,(rsa(c)|0)+12|0);break}case 4:{JJ(d,877,b);oH(d,(jsa(c)|0)+16|0);oH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,878,b);JJ(d,873,(Xra(c)|0)+28|0);oH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,879,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,873,bga(c,a)|0);b=a}}case 7:{JJ(d,880,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,873,bga(c,a)|0);b=a}}case 8:{JJ(d,881,b);b=fra(c)|0;JJ(d,873,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,873,bga(c,a)|0);b=a}}case 9:{JJ(d,882,b);break}case 10:{JJ(d,883,b);JJ(d,873,(Era(c)|0)+12|0);break}case 11:{JJ(d,884,b);break}case 12:{JJ(d,885,b);JJ(d,873,(ura(c)|0)+12|0);break}case 13:{JJ(d,886,b);JJ(d,873,(lsa(c)|0)+24|0);break}case 14:{JJ(d,887,b);JJ(d,873,(Zra(c)|0)+28|0);JJ(d,873,(Zra(c)|0)+24|0);break}case 25:{JJ(d,888,b);JJ(d,873,(wra(c)|0)+24|0);JJ(d,873,(wra(c)|0)+20|0);break}case 24:{JJ(d,889,b);JJ(d,873,(Vqa(c)|0)+24|0);JJ(d,873,(Vqa(c)|0)+20|0);JJ(d,873,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,890,b);JJ(d,873,(lra(c)|0)+16|0);JJ(d,873,(lra(c)|0)+12|0);JJ(d,873,(lra(c)|0)+8|0);break}case 27:{JJ(d,891,b);JJ(d,873,(kra(c)|0)+12|0);JJ(d,873,(kra(c)|0)+8|0);break}case 15:{JJ(d,892,b);break}case 16:{JJ(d,893,b);JJ(d,873,(Yra(c)|0)+12|0);break}case 17:{JJ(d,894,b);JJ(d,873,(Sra(c)|0)+16|0);JJ(d,873,(Sra(c)|0)+12|0);break}case 18:{JJ(d,895,b);JJ(d,873,(Qra(c)|0)+16|0);JJ(d,873,(Qra(c)|0)+12|0);JJ(d,873,(Qra(c)|0)+8|0);break}case 19:{JJ(d,896,b);JJ(d,873,(nsa(c)|0)+8|0);break}case 20:{JJ(d,897,b);oH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,898,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,873,bga(c,a)|0);b=a}}case 22:{JJ(d,899,b);break}case 23:{JJ(d,900,b);break}default:Ka()}while(0);return}function be(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,455,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,454,bga(d,b)|0);c=b}}case 2:{JJ(a,456,b);bH(a,(Asa(c)|0)+16|0);JJ(a,454,(Asa(c)|0)+12|0);JJ(a,454,(Asa(c)|0)+8|0);break}case 3:{JJ(a,457,b);JJ(a,454,(rsa(c)|0)+12|0);break}case 4:{JJ(a,458,b);bH(a,(jsa(c)|0)+16|0);bH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,459,b);JJ(a,454,(Xra(c)|0)+28|0);bH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,460,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,454,bga(d,b)|0);c=b}}case 7:{JJ(a,461,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,454,bga(d,b)|0);c=b}}case 8:{JJ(a,462,b);b=fra(c)|0;JJ(a,454,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,454,bga(d,b)|0);c=b}}case 9:{JJ(a,463,b);break}case 10:{JJ(a,464,b);JJ(a,454,(Era(c)|0)+12|0);break}case 11:{JJ(a,465,b);break}case 12:{JJ(a,466,b);JJ(a,454,(ura(c)|0)+12|0);break}case 13:{JJ(a,467,b);JJ(a,454,(lsa(c)|0)+24|0);break}case 14:{JJ(a,468,b);JJ(a,454,(Zra(c)|0)+28|0);JJ(a,454,(Zra(c)|0)+24|0);break}case 25:{JJ(a,469,b);JJ(a,454,(wra(c)|0)+24|0);JJ(a,454,(wra(c)|0)+20|0);break}case 24:{JJ(a,470,b);JJ(a,454,(Vqa(c)|0)+24|0);JJ(a,454,(Vqa(c)|0)+20|0);JJ(a,454,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,471,b);JJ(a,454,(lra(c)|0)+16|0);JJ(a,454,(lra(c)|0)+12|0);JJ(a,454,(lra(c)|0)+8|0);break}case 27:{JJ(a,472,b);JJ(a,454,(kra(c)|0)+12|0);JJ(a,454,(kra(c)|0)+8|0);break}case 15:{JJ(a,473,b);break}case 16:{JJ(a,474,b);JJ(a,454,(Yra(c)|0)+12|0);break}case 17:{JJ(a,475,b);JJ(a,454,(Sra(c)|0)+16|0);JJ(a,454,(Sra(c)|0)+12|0);break}case 18:{JJ(a,476,b);JJ(a,454,(Qra(c)|0)+16|0);JJ(a,454,(Qra(c)|0)+12|0);JJ(a,454,(Qra(c)|0)+8|0);break}case 19:{JJ(a,477,b);JJ(a,454,(nsa(c)|0)+8|0);break}case 20:{JJ(a,478,b);bH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,479,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,454,bga(d,b)|0);c=b}}case 22:{JJ(a,480,b);break}case 23:{JJ(a,481,b);break}default:Ka()}while(0);return}function ce(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,520,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,519,bga(d,b)|0);c=b}}case 2:{JJ(a,521,b);dH(a,(Asa(c)|0)+16|0);JJ(a,519,(Asa(c)|0)+12|0);JJ(a,519,(Asa(c)|0)+8|0);break}case 3:{JJ(a,522,b);JJ(a,519,(rsa(c)|0)+12|0);break}case 4:{JJ(a,523,b);dH(a,(jsa(c)|0)+16|0);dH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,524,b);JJ(a,519,(Xra(c)|0)+28|0);dH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,525,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,519,bga(d,b)|0);c=b}}case 7:{JJ(a,526,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,519,bga(d,b)|0);c=b}}case 8:{JJ(a,527,b);b=fra(c)|0;JJ(a,519,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,519,bga(d,b)|0);c=b}}case 9:{JJ(a,528,b);break}case 10:{JJ(a,529,b);JJ(a,519,(Era(c)|0)+12|0);break}case 11:{JJ(a,530,b);break}case 12:{JJ(a,531,b);JJ(a,519,(ura(c)|0)+12|0);break}case 13:{JJ(a,532,b);JJ(a,519,(lsa(c)|0)+24|0);break}case 14:{JJ(a,533,b);JJ(a,519,(Zra(c)|0)+28|0);JJ(a,519,(Zra(c)|0)+24|0);break}case 25:{JJ(a,534,b);JJ(a,519,(wra(c)|0)+24|0);JJ(a,519,(wra(c)|0)+20|0);break}case 24:{JJ(a,535,b);JJ(a,519,(Vqa(c)|0)+24|0);JJ(a,519,(Vqa(c)|0)+20|0);JJ(a,519,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,536,b);JJ(a,519,(lra(c)|0)+16|0);JJ(a,519,(lra(c)|0)+12|0);JJ(a,519,(lra(c)|0)+8|0);break}case 27:{JJ(a,537,b);JJ(a,519,(kra(c)|0)+12|0);JJ(a,519,(kra(c)|0)+8|0);break}case 15:{JJ(a,538,b);break}case 16:{JJ(a,539,b);JJ(a,519,(Yra(c)|0)+12|0);break}case 17:{JJ(a,540,b);JJ(a,519,(Sra(c)|0)+16|0);JJ(a,519,(Sra(c)|0)+12|0);break}case 18:{JJ(a,541,b);JJ(a,519,(Qra(c)|0)+16|0);JJ(a,519,(Qra(c)|0)+12|0);JJ(a,519,(Qra(c)|0)+8|0);break}case 19:{JJ(a,542,b);JJ(a,519,(nsa(c)|0)+8|0);break}case 20:{JJ(a,543,b);dH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,544,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,519,bga(d,b)|0);c=b}}case 22:{JJ(a,545,b);break}case 23:{JJ(a,546,b);break}default:Ka()}while(0);return}function de(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,963,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,903,bga(d,b)|0);c=b}}case 2:{JJ(a,964,b);iH(a,(Asa(c)|0)+16|0);JJ(a,903,(Asa(c)|0)+12|0);JJ(a,903,(Asa(c)|0)+8|0);break}case 3:{JJ(a,965,b);JJ(a,903,(rsa(c)|0)+12|0);break}case 4:{JJ(a,966,b);iH(a,(jsa(c)|0)+16|0);iH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,967,b);JJ(a,903,(Xra(c)|0)+28|0);iH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,968,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,903,bga(d,b)|0);c=b}}case 7:{JJ(a,969,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,903,bga(d,b)|0);c=b}}case 8:{JJ(a,970,b);b=fra(c)|0;JJ(a,903,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,903,bga(d,b)|0);c=b}}case 9:{JJ(a,971,b);break}case 10:{JJ(a,972,b);JJ(a,903,(Era(c)|0)+12|0);break}case 11:{JJ(a,973,b);break}case 12:{JJ(a,974,b);JJ(a,903,(ura(c)|0)+12|0);break}case 13:{JJ(a,975,b);JJ(a,903,(lsa(c)|0)+24|0);break}case 14:{JJ(a,976,b);JJ(a,903,(Zra(c)|0)+28|0);JJ(a,903,(Zra(c)|0)+24|0);break}case 25:{JJ(a,977,b);JJ(a,903,(wra(c)|0)+24|0);JJ(a,903,(wra(c)|0)+20|0);break}case 24:{JJ(a,978,b);JJ(a,903,(Vqa(c)|0)+24|0);JJ(a,903,(Vqa(c)|0)+20|0);JJ(a,903,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,979,b);JJ(a,903,(lra(c)|0)+16|0);JJ(a,903,(lra(c)|0)+12|0);JJ(a,903,(lra(c)|0)+8|0);break}case 27:{JJ(a,980,b);JJ(a,903,(kra(c)|0)+12|0);JJ(a,903,(kra(c)|0)+8|0);break}case 15:{JJ(a,981,b);break}case 16:{JJ(a,982,b);JJ(a,903,(Yra(c)|0)+12|0);break}case 17:{JJ(a,983,b);JJ(a,903,(Sra(c)|0)+16|0);JJ(a,903,(Sra(c)|0)+12|0);break}case 18:{JJ(a,984,b);JJ(a,903,(Qra(c)|0)+16|0);JJ(a,903,(Qra(c)|0)+12|0);JJ(a,903,(Qra(c)|0)+8|0);break}case 19:{JJ(a,985,b);JJ(a,903,(nsa(c)|0)+8|0);break}case 20:{JJ(a,986,b);iH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,987,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,903,bga(d,b)|0);c=b}}case 22:{JJ(a,988,b);break}case 23:{JJ(a,989,b);break}default:Ka()}while(0);return}function ee(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,213,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,212,bga(d,b)|0);c=b}}case 2:{JJ(a,214,b);jH(a,(Asa(c)|0)+16|0);JJ(a,212,(Asa(c)|0)+12|0);JJ(a,212,(Asa(c)|0)+8|0);break}case 3:{JJ(a,215,b);JJ(a,212,(rsa(c)|0)+12|0);break}case 4:{JJ(a,216,b);jH(a,(jsa(c)|0)+16|0);jH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,217,b);JJ(a,212,(Xra(c)|0)+28|0);jH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,218,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,212,bga(d,b)|0);c=b}}case 7:{JJ(a,219,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,212,bga(d,b)|0);c=b}}case 8:{JJ(a,220,b);b=fra(c)|0;JJ(a,212,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,212,bga(d,b)|0);c=b}}case 9:{JJ(a,221,b);break}case 10:{JJ(a,222,b);JJ(a,212,(Era(c)|0)+12|0);break}case 11:{JJ(a,223,b);break}case 12:{JJ(a,224,b);JJ(a,212,(ura(c)|0)+12|0);break}case 13:{JJ(a,225,b);JJ(a,212,(lsa(c)|0)+24|0);break}case 14:{JJ(a,226,b);JJ(a,212,(Zra(c)|0)+28|0);JJ(a,212,(Zra(c)|0)+24|0);break}case 25:{JJ(a,227,b);JJ(a,212,(wra(c)|0)+24|0);JJ(a,212,(wra(c)|0)+20|0);break}case 24:{JJ(a,228,b);JJ(a,212,(Vqa(c)|0)+24|0);JJ(a,212,(Vqa(c)|0)+20|0);JJ(a,212,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,229,b);JJ(a,212,(lra(c)|0)+16|0);JJ(a,212,(lra(c)|0)+12|0);JJ(a,212,(lra(c)|0)+8|0);break}case 27:{JJ(a,230,b);JJ(a,212,(kra(c)|0)+12|0);JJ(a,212,(kra(c)|0)+8|0);break}case 15:{JJ(a,231,b);break}case 16:{JJ(a,232,b);JJ(a,212,(Yra(c)|0)+12|0);break}case 17:{JJ(a,233,b);JJ(a,212,(Sra(c)|0)+16|0);JJ(a,212,(Sra(c)|0)+12|0);break}case 18:{JJ(a,234,b);JJ(a,212,(Qra(c)|0)+16|0);JJ(a,212,(Qra(c)|0)+12|0);JJ(a,212,(Qra(c)|0)+8|0);break}case 19:{JJ(a,235,b);JJ(a,212,(nsa(c)|0)+8|0);break}case 20:{JJ(a,236,b);jH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,237,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,212,bga(d,b)|0);c=b}}case 22:{JJ(a,238,b);break}case 23:{JJ(a,239,b);break}default:Ka()}while(0);return}function fe(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,181,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,180,bga(c,a)|0);b=a}}case 2:{JJ(d,182,b);zH(d,(Asa(c)|0)+16|0);JJ(d,180,(Asa(c)|0)+12|0);JJ(d,180,(Asa(c)|0)+8|0);break}case 3:{JJ(d,183,b);JJ(d,180,(rsa(c)|0)+12|0);break}case 4:{JJ(d,184,b);zH(d,(jsa(c)|0)+16|0);zH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,185,b);JJ(d,180,(Xra(c)|0)+28|0);zH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,186,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,180,bga(c,a)|0);b=a}}case 7:{JJ(d,187,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,180,bga(c,a)|0);b=a}}case 8:{JJ(d,188,b);b=fra(c)|0;JJ(d,180,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,180,bga(c,a)|0);b=a}}case 9:{JJ(d,189,b);break}case 10:{JJ(d,190,b);JJ(d,180,(Era(c)|0)+12|0);break}case 11:{JJ(d,191,b);break}case 12:{JJ(d,192,b);JJ(d,180,(ura(c)|0)+12|0);break}case 13:{JJ(d,193,b);JJ(d,180,(lsa(c)|0)+24|0);break}case 14:{JJ(d,194,b);JJ(d,180,(Zra(c)|0)+28|0);JJ(d,180,(Zra(c)|0)+24|0);break}case 25:{JJ(d,195,b);JJ(d,180,(wra(c)|0)+24|0);JJ(d,180,(wra(c)|0)+20|0);break}case 24:{JJ(d,196,b);JJ(d,180,(Vqa(c)|0)+24|0);JJ(d,180,(Vqa(c)|0)+20|0);JJ(d,180,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,197,b);JJ(d,180,(lra(c)|0)+16|0);JJ(d,180,(lra(c)|0)+12|0);JJ(d,180,(lra(c)|0)+8|0);break}case 27:{JJ(d,198,b);JJ(d,180,(kra(c)|0)+12|0);JJ(d,180,(kra(c)|0)+8|0);break}case 15:{JJ(d,199,b);break}case 16:{JJ(d,200,b);JJ(d,180,(Yra(c)|0)+12|0);break}case 17:{JJ(d,201,b);JJ(d,180,(Sra(c)|0)+16|0);JJ(d,180,(Sra(c)|0)+12|0);break}case 18:{JJ(d,202,b);JJ(d,180,(Qra(c)|0)+16|0);JJ(d,180,(Qra(c)|0)+12|0);JJ(d,180,(Qra(c)|0)+8|0);break}case 19:{JJ(d,203,b);JJ(d,180,(nsa(c)|0)+8|0);break}case 20:{JJ(d,204,b);zH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,205,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,180,bga(c,a)|0);b=a}}case 22:{JJ(d,206,b);break}case 23:{JJ(d,207,b);break}default:Ka()}while(0);return}function ge(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,151,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,148,bga(c,a)|0);b=a}}case 2:{JJ(d,152,b);GH(d,(Asa(c)|0)+16|0);JJ(d,148,(Asa(c)|0)+12|0);JJ(d,148,(Asa(c)|0)+8|0);break}case 3:{JJ(d,153,b);JJ(d,148,(rsa(c)|0)+12|0);break}case 4:{JJ(d,154,b);GH(d,(jsa(c)|0)+16|0);GH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,155,b);JJ(d,148,(Xra(c)|0)+28|0);GH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,156,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,148,bga(c,a)|0);b=a}}case 7:{JJ(d,157,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,148,bga(c,a)|0);b=a}}case 8:{JJ(d,158,b);b=fra(c)|0;JJ(d,148,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,148,bga(c,a)|0);b=a}}case 9:{JJ(d,159,b);break}case 10:{JJ(d,160,b);JJ(d,148,(Era(c)|0)+12|0);break}case 11:{JJ(d,161,b);break}case 12:{JJ(d,162,b);JJ(d,148,(ura(c)|0)+12|0);break}case 13:{JJ(d,163,b);JJ(d,148,(lsa(c)|0)+24|0);break}case 14:{JJ(d,164,b);JJ(d,148,(Zra(c)|0)+28|0);JJ(d,148,(Zra(c)|0)+24|0);break}case 25:{JJ(d,165,b);JJ(d,148,(wra(c)|0)+24|0);JJ(d,148,(wra(c)|0)+20|0);break}case 24:{JJ(d,166,b);JJ(d,148,(Vqa(c)|0)+24|0);JJ(d,148,(Vqa(c)|0)+20|0);JJ(d,148,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,167,b);JJ(d,148,(lra(c)|0)+16|0);JJ(d,148,(lra(c)|0)+12|0);JJ(d,148,(lra(c)|0)+8|0);break}case 27:{JJ(d,168,b);JJ(d,148,(kra(c)|0)+12|0);JJ(d,148,(kra(c)|0)+8|0);break}case 15:{JJ(d,169,b);break}case 16:{JJ(d,170,b);JJ(d,148,(Yra(c)|0)+12|0);break}case 17:{JJ(d,171,b);JJ(d,148,(Sra(c)|0)+16|0);JJ(d,148,(Sra(c)|0)+12|0);break}case 18:{JJ(d,172,b);JJ(d,148,(Qra(c)|0)+16|0);JJ(d,148,(Qra(c)|0)+12|0);JJ(d,148,(Qra(c)|0)+8|0);break}case 19:{JJ(d,173,b);JJ(d,148,(nsa(c)|0)+8|0);break}case 20:{JJ(d,174,b);GH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,175,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,148,bga(c,a)|0);b=a}}case 22:{JJ(d,176,b);break}case 23:{JJ(d,177,b);break}default:Ka()}while(0);return}function he(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(a,386,b);c=ksa(c)|0;d=c+12|0;c=gKa(f[c+16>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,385,bga(d,b)|0);c=b}}case 2:{JJ(a,387,b);yH(a,(Asa(c)|0)+16|0);JJ(a,385,(Asa(c)|0)+12|0);JJ(a,385,(Asa(c)|0)+8|0);break}case 3:{JJ(a,388,b);JJ(a,385,(rsa(c)|0)+12|0);break}case 4:{JJ(a,389,b);yH(a,(jsa(c)|0)+16|0);yH(a,(jsa(c)|0)+12|0);break}case 5:{JJ(a,390,b);JJ(a,385,(Xra(c)|0)+28|0);yH(a,(Xra(c)|0)+32|0);break}case 6:{JJ(a,391,b);c=ssa(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,385,bga(d,b)|0);c=b}}case 7:{JJ(a,392,b);c=pra(c)|0;d=c+8|0;c=gKa(f[c+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,385,bga(d,b)|0);c=b}}case 8:{JJ(a,393,b);b=fra(c)|0;JJ(a,385,(fra(c)|0)+28|0);d=b+8|0;c=gKa(f[b+12>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,385,bga(d,b)|0);c=b}}case 9:{JJ(a,394,b);break}case 10:{JJ(a,395,b);JJ(a,385,(Era(c)|0)+12|0);break}case 11:{JJ(a,396,b);break}case 12:{JJ(a,397,b);JJ(a,385,(ura(c)|0)+12|0);break}case 13:{JJ(a,398,b);JJ(a,385,(lsa(c)|0)+24|0);break}case 14:{JJ(a,399,b);JJ(a,385,(Zra(c)|0)+28|0);JJ(a,385,(Zra(c)|0)+24|0);break}case 25:{JJ(a,400,b);JJ(a,385,(wra(c)|0)+24|0);JJ(a,385,(wra(c)|0)+20|0);break}case 24:{JJ(a,401,b);JJ(a,385,(Vqa(c)|0)+24|0);JJ(a,385,(Vqa(c)|0)+20|0);JJ(a,385,(Vqa(c)|0)+16|0);break}case 26:{JJ(a,402,b);JJ(a,385,(lra(c)|0)+16|0);JJ(a,385,(lra(c)|0)+12|0);JJ(a,385,(lra(c)|0)+8|0);break}case 27:{JJ(a,403,b);JJ(a,385,(kra(c)|0)+12|0);JJ(a,385,(kra(c)|0)+8|0);break}case 15:{JJ(a,404,b);break}case 16:{JJ(a,405,b);JJ(a,385,(Yra(c)|0)+12|0);break}case 17:{JJ(a,406,b);JJ(a,385,(Sra(c)|0)+16|0);JJ(a,385,(Sra(c)|0)+12|0);break}case 18:{JJ(a,407,b);JJ(a,385,(Qra(c)|0)+16|0);JJ(a,385,(Qra(c)|0)+12|0);JJ(a,385,(Qra(c)|0)+8|0);break}case 19:{JJ(a,408,b);JJ(a,385,(nsa(c)|0)+8|0);break}case 20:{JJ(a,409,b);yH(a,(Rra(c)|0)+8|0);break}case 21:{JJ(a,410,b);c=msa(c)|0;d=c+16|0;c=gKa(f[c+20>>2]|0)|0;while(1){b=c+-1|0;if((c|0)<=0)break a;JJ(a,385,bga(d,b)|0);c=b}}case 22:{JJ(a,411,b);break}case 23:{JJ(a,412,b);break}default:Ka()}while(0);return}function ie(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,242,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,241,bga(c,a)|0);b=a}}case 2:{JJ(d,243,b);LH(d,(Asa(c)|0)+16|0);JJ(d,241,(Asa(c)|0)+12|0);JJ(d,241,(Asa(c)|0)+8|0);break}case 3:{JJ(d,244,b);JJ(d,241,(rsa(c)|0)+12|0);break}case 4:{JJ(d,245,b);LH(d,(jsa(c)|0)+16|0);LH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,246,b);JJ(d,241,(Xra(c)|0)+28|0);LH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,247,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,241,bga(c,a)|0);b=a}}case 7:{JJ(d,248,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,241,bga(c,a)|0);b=a}}case 8:{JJ(d,249,b);b=fra(c)|0;JJ(d,241,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,241,bga(c,a)|0);b=a}}case 9:{JJ(d,250,b);break}case 10:{JJ(d,251,b);JJ(d,241,(Era(c)|0)+12|0);break}case 11:{JJ(d,252,b);break}case 12:{JJ(d,253,b);JJ(d,241,(ura(c)|0)+12|0);break}case 13:{JJ(d,254,b);JJ(d,241,(lsa(c)|0)+24|0);break}case 14:{JJ(d,255,b);JJ(d,241,(Zra(c)|0)+28|0);JJ(d,241,(Zra(c)|0)+24|0);break}case 25:{JJ(d,256,b);JJ(d,241,(wra(c)|0)+24|0);JJ(d,241,(wra(c)|0)+20|0);break}case 24:{JJ(d,257,b);JJ(d,241,(Vqa(c)|0)+24|0);JJ(d,241,(Vqa(c)|0)+20|0);JJ(d,241,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,258,b);JJ(d,241,(lra(c)|0)+16|0);JJ(d,241,(lra(c)|0)+12|0);JJ(d,241,(lra(c)|0)+8|0);break}case 27:{JJ(d,259,b);JJ(d,241,(kra(c)|0)+12|0);JJ(d,241,(kra(c)|0)+8|0);break}case 15:{JJ(d,260,b);break}case 16:{JJ(d,261,b);JJ(d,241,(Yra(c)|0)+12|0);break}case 17:{JJ(d,262,b);JJ(d,241,(Sra(c)|0)+16|0);JJ(d,241,(Sra(c)|0)+12|0);break}case 18:{JJ(d,263,b);JJ(d,241,(Qra(c)|0)+16|0);JJ(d,241,(Qra(c)|0)+12|0);JJ(d,241,(Qra(c)|0)+8|0);break}case 19:{JJ(d,264,b);JJ(d,241,(nsa(c)|0)+8|0);break}case 20:{JJ(d,265,b);LH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,266,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,241,bga(c,a)|0);b=a}}case 22:{JJ(d,267,b);break}case 23:{JJ(d,268,b);break}default:Ka()}while(0);return}function je(a,b){a=a|0;b=b|0;var c=0,d=0;c=f[b>>2]|0;d=a+16|0;a:do switch(f[c>>2]|0){case 0:{Ka();break}case 1:{JJ(d,420,b);b=ksa(c)|0;c=b+12|0;b=gKa(f[b+16>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,413,bga(c,a)|0);b=a}}case 2:{JJ(d,421,b);MH(d,(Asa(c)|0)+16|0);JJ(d,413,(Asa(c)|0)+12|0);JJ(d,413,(Asa(c)|0)+8|0);break}case 3:{JJ(d,422,b);JJ(d,413,(rsa(c)|0)+12|0);break}case 4:{JJ(d,423,b);MH(d,(jsa(c)|0)+16|0);MH(d,(jsa(c)|0)+12|0);break}case 5:{JJ(d,424,b);JJ(d,413,(Xra(c)|0)+28|0);MH(d,(Xra(c)|0)+32|0);break}case 6:{JJ(d,425,b);b=ssa(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,413,bga(c,a)|0);b=a}}case 7:{JJ(d,426,b);b=pra(c)|0;c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,413,bga(c,a)|0);b=a}}case 8:{JJ(d,427,b);b=fra(c)|0;JJ(d,413,(fra(c)|0)+28|0);c=b+8|0;b=gKa(f[b+12>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,413,bga(c,a)|0);b=a}}case 9:{JJ(d,428,b);break}case 10:{JJ(d,429,b);JJ(d,413,(Era(c)|0)+12|0);break}case 11:{JJ(d,430,b);break}case 12:{JJ(d,431,b);JJ(d,413,(ura(c)|0)+12|0);break}case 13:{JJ(d,432,b);JJ(d,413,(lsa(c)|0)+24|0);break}case 14:{JJ(d,433,b);JJ(d,413,(Zra(c)|0)+28|0);JJ(d,413,(Zra(c)|0)+24|0);break}case 25:{JJ(d,434,b);JJ(d,413,(wra(c)|0)+24|0);JJ(d,413,(wra(c)|0)+20|0);break}case 24:{JJ(d,435,b);JJ(d,413,(Vqa(c)|0)+24|0);JJ(d,413,(Vqa(c)|0)+20|0);JJ(d,413,(Vqa(c)|0)+16|0);break}case 26:{JJ(d,436,b);JJ(d,413,(lra(c)|0)+16|0);JJ(d,413,(lra(c)|0)+12|0);JJ(d,413,(lra(c)|0)+8|0);break}case 27:{JJ(d,437,b);JJ(d,413,(kra(c)|0)+12|0);JJ(d,413,(kra(c)|0)+8|0);break}case 15:{JJ(d,438,b);break}case 16:{JJ(d,439,b);JJ(d,413,(Yra(c)|0)+12|0);break}case 17:{JJ(d,440,b);JJ(d,413,(Sra(c)|0)+16|0);JJ(d,413,(Sra(c)|0)+12|0);break}case 18:{JJ(d,441,b);JJ(d,413,(Qra(c)|0)+16|0);JJ(d,413,(Qra(c)|0)+12|0);JJ(d,413,(Qra(c)|0)+8|0);break}case 19:{JJ(d,442,b);JJ(d,413,(nsa(c)|0)+8|0);break}case 20:{JJ(d,443,b);MH(d,(Rra(c)|0)+8|0);break}case 21:{JJ(d,444,b);b=msa(c)|0;c=b+16|0;b=gKa(f[b+20>>2]|0)|0;while(1){a=b+-1|0;if((b|0)<=0)break a;JJ(d,413,bga(c,a)|0);b=a}}case 22:{JJ(d,445,b);break}case 23:{JJ(d,446,b);break}default:Ka()}while(0);return}
function Qsa(a){a=a|0;Uka(a);f[a>>2]=8376;return}function Rsa(a,b){a=a|0;b=b|0;a=a+48|0;b=M9(f[a>>2]|0,b)|0;f[a>>2]=b;return}function Ssa(a){a=a|0;b[a+27>>0]=1;if(b[a+25>>0]|0)b[a+26>>0]=1;return}function Tsa(a,b){a=a|0;b=b|0;f[a+40>>2]=b;return}function Usa(){FH(74248,CV(79356)|0);return}function Vsa(){FH(74240,CV(79348)|0);return}function Wsa(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=f[11544+(b<<24>>24<<2)>>2]&255;return b|0}function Xsa(a){a=a|0;if(!(b[a>>0]|0))b[a+20>>0]=1;else gP(a,32);return}function Ysa(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=2;a=a+8|0;f[a>>2]=b;f[a+4>>2]=c;return}function Zsa(a,b){a=a|0;b=b|0;return (Cn(a,b)|0)*5|0}function _sa(a){a=a|0;E4(a+32|0);Rua(a);return}function $sa(a){a=a|0;return 2056}function ata(a){a=a|0;if(!a)a=0;else a=(f[a+4>>2]|0)==5;return a|0}function bta(a,b){a=a|0;b=b|0;b=a+(b<<2)|0;f[b>>2]=(f[b>>2]|0)+1;return}function cta(){var a=0;a=f[18830]|0;if(!a)a=0;else a=(b[a+12>>0]|0)!=0;return a|0}function dta(a){a=a|0;f[a>>2]=6872;vka(a+20|0);return}function eta(a,b){a=a|0;b=b|0;return a>>>0<=b>>>0&(a+4096|0)>>>0>=b>>>0|0}function fta(a){a=a|0;a=tn(a,16)|0;yua(a);return a|0}function gta(a){a=a|0;a=tn(a,12)|0;zua(a);return a|0}function hta(a){a=a|0;a=tn(a,28)|0;Lda(a);return a|0}function ita(a){a=a|0;var b=0;b=a;while(1)if(!(f[b>>2]|0))break;else b=b+4|0;return b-a>>2|0}function jta(a){a=a|0;if((b[a+8+3>>0]|0)<0)$Ja(f[a>>2]|0);return}function kta(a,b,c){a=a|0;b=b|0;c=c|0;return -1}function lta(a){a=a|0;mla(a);f[a>>2]=7856;return}function mta(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;aa(21);return 0}function nta(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=f[13080+((b&255)<<2)>>2]&255;return b|0}function ota(a){a=a|0;a=tn(a,16)|0;Aya(a);return a|0}function pta(a){a=a|0;a=tn(a,12)|0;Qya(a);return a|0}function qta(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=f[b>>2];f[a+4>>2]=c;return}function rta(a){a=a|0;kZ(a+40|0);return}function sta(a){a=a|0;vla(a);f[a>>2]=7472;return}function tta(a,b){a=a|0;b=b|0;a=a+(b<<2)|0;f[a>>2]=(f[a>>2]|0)+1;return}function uta(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;dc[a&127](b|0,c|0,d|0,e|0)}function vta(){FH(74392,CV(79292)|0);return}function wta(){FH(74384,CV(79284)|0);return}function xta(){FH(74376,CV(79276)|0);return}function yta(){FH(74368,CV(79268)|0);return}function zta(a){a=a|0;if((b[a+11>>0]|0)<0)$Ja(f[a>>2]|0);return}function Ata(a){a=a|0;if(!(gKa(a)|0))a=1;else a=nJa(f[a>>2]|0)|0;return a|0}function Bta(a){a=a|0;var b=0;b=nV(48)|0;dna(b,f[a+44>>2]|0);return b|0}function Cta(a){a=a|0;Zla(a);return}function Dta(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=c;f[a+4>>2]=b;return}function Eta(){var a=0;a=nV(132)|0;Kz(a|0,0,132)|0;C0(a);return a|0}function Fta(a){a=a|0;if(!a)return;else Na(48712,48740,388,48775)}function Gta(a){a=a|0;Gla(a);f[a>>2]=8520;return}function Hta(a){a=a|0;bxa(a+4|0);return}function Ita(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)S0(a|0,b|0,c|0)|0;return a|0}function Jta(a,b){a=a|0;b=b|0;return c6(a,CV(b)|0)|0}function Kta(a){a=a|0;return 2816}function Lta(){var a=0;a=tn(75352,24)|0;D7(a);return a|0}function Mta(a){a=a|0;a=tn(a,20)|0;Wya(a);return a|0}function Nta(a){a=a|0;a=tn(a,12)|0;fFa(a);return a|0}function Ota(a){a=a|0;a=tn(a,20)|0;Yya(a);return a|0}function Pta(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)rq(a|0,b|0,c|0)|0;return a|0}function Qta(a){a=a|0;return csa((_ra(a)|0)+8|0)|0}function Rta(a,b){a=a|0;b=b|0;Vea(76852,b)|0;return a|0}function Sta(a){a=a|0;_za(a);f[a>>2]=7796;return}function Tta(a){a=a|0;return Bya(a)|0}function Uta(a){a=a|0;Lla(a);f[a>>2]=8268;return}function Vta(){var a=0;a=tn(75352,16)|0;cDa(a);return a|0}function Wta(a){a=a|0;return vfa(a,DT(a)|0)|0}function Xta(a){a=a|0;cya(a);f[a+8>>2]=0;f[a+4>>2]=5;return}function Yta(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;b[a+12>>0]=0;return}function Zta(a){a=a|0;if(!a)return;else Na(35017,35038,90,48775)}function _ta(a,b){a=a|0;b=b|0;return Cn(a,b)|0}function $ta(a){a=a|0;if(!a)return 0;else return ((f[a+16>>2]|0)==1?a:0)|0;return 0}function aua(a){a=a|0;a=tn(a,16)|0;hza(a);return a|0}function bua(a){a=a|0;a=tn(a,36)|0;AFa(a);return a|0}function cua(a){a=a|0;a=tn(a,24)|0;Mua(a);return a|0}function dua(a){a=a|0;a=tn(a,20)|0;lBa(a);return a|0}function eua(a){a=a|0;f[a>>2]=17564;zta(a+16|0);return}function fua(a){a=a|0;f[a>>2]=17524;zta(a+12|0);return}function gua(a){a=a|0;f[a+4>>2]=0;f[a+8>>2]=0;f[a>>2]=a+4;return}function hua(a,b){a=a|0;b=b|0;f[a>>2]=18156;tfa(a+4|0,b+4|0);return}function iua(a,b){a=a|0;b=b|0;pxa(a,b,f[b+4>>2]|0);return}function jua(a,b){a=a|0;b=b|0;b=a+b|0;return h[b>>0]|h[b+1>>0]<<8|0}function kua(a){a=a|0;Vea(a,58652)|0;return}function lua(a){a=a|0;return (f[a+92>>2]|0)==((f[a+4>>2]|0)-(f[a>>2]|0)>>2|0)|0}function mua(a){a=a|0;a=tn(a,16)|0;sva(a);return a|0}function nua(a){a=a|0;a=tn(a,28)|0;vqa(a);return a|0}function oua(){var a=0;f[18563]=0;f[18562]=17404;a=gpa()|0;f[18564]=a;return}function pua(){FH(74304,CV(77596)|0);return}function qua(){FH(74280,CV(77572)|0);return}function rua(){FH(74504,CV(79340)|0);return}function sua(){FH(74496,CV(79332)|0);return}function tua(a,b){a=a|0;b=b|0;Xm(a,b);return}function uua(a,b){a=a|0;b=b|0;f[a>>2]=0;f[a+4>>2]=b;f[a+8>>2]=0;return}function vua(a){a=a|0;if(!a)return 0;else return ((f[a+16>>2]|0)==0?a:0)|0;return 0}function wua(){FH(74208,CV(77548)|0);return}function xua(){FH(74200,CV(77540)|0);return}function yua(a){a=a|0;kya(a);cJa(a+8|0);return}function zua(a){a=a|0;lya(a);cJa(a+8|0);return}function Aua(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];f[a+4>>2]=f[b+4>>2];return}function Bua(a,b){a=a|0;b=b|0;return Ska(a,b)|0}function Cua(a,c){a=a|0;c=c|0;f[a>>2]=c;b[a+4>>0]=b[c>>0]|0;return}function Dua(a){a=a|0;if(a|0)Lb[f[(f[a>>2]|0)+4>>2]&511](a);return}function Eua(){var a=0;a=Mpa()|0;zwa(79388,f[a>>2]|0);return}function Fua(){f[18607]=0;f[18606]=17216;return}function Gua(){f[18605]=0;f[18604]=17188;return}function Hua(){f[18603]=0;f[18602]=17160;return}function Iua(){f[18601]=0;f[18600]=17132;return}function Jua(a,b){a=a|0;b=+b;jS(a);f[a>>2]=1;p[a+8>>3]=b;return a|0}function Kua(a){a=a|0;if(Cqa(a)|0)return 1;else return (a+-48&255)<10|0;return 0}function Lua(a){a=a|0;ht(f[a+4>>2]|0,f[a+8>>2]|0);return}function Mua(a){a=a|0;hya(a);gxa(a+8|0);return}function Nua(a){a=a|0;if(!a)return 0;else return ((f[a+16>>2]|0)==2?a:0)|0;return 0}function Oua(){FH(74232,CV(77588)|0);return}function Pua(){FH(74216,CV(77556)|0);return}function Qua(a){a=a|0;XO(a);return}function Rua(a){a=a|0;a3(a+4|0);return}function Sua(a,b){a=a|0;b=b|0;f[a>>2]=b;f[a+4>>2]=f[b>>2];return}function Tua(a){a=a|0;a=tn(a,20)|0;jIa(a);return a|0}function Uua(){f[18591]=0;f[18590]=15360;return}function Vua(){f[18589]=0;f[18588]=15308;return}function Wua(){f[18587]=0;f[18586]=15244;return}function Xua(){f[18585]=0;f[18584]=15180;return}function Yua(a){a=a|0;Dra(a);$Ja(a);return}function Zua(){var a=0;a=nV(196)|0;Kz(a|0,0,196)|0;_M(a);return a|0}function _ua(a){a=a|0;iAa(a);return}function $ua(a,b){a=a|0;b=b|0;return ((f[a+4>>2]|0)-(f[a>>2]|0)|0)>>>0>b>>>0|0}function ava(a){a=a|0;_xa(a);rJa(a+12|0);return}function bva(a){a=a|0;a=a+4|0;f[a>>2]=(f[a>>2]|0)+1;return}function cva(a){a=a|0;qsa(a+8|0);$Ja(a);return}function dva(a){a=a|0;uwa(a);$Ja(a);return}function eva(a){a=a|0;vwa(a);$Ja(a);return}function fva(a,b){a=a|0;b=b|0;a=_na(a)|0;return (_na(b)|0)+a|0}function gva(a,b){a=a|0;b=b|0;Ym(a,b);return}function hva(a,b){a=a|0;b=b|0;if(b>>>0<128)b=f[13080+(b<<2)>>2]|0;return b|0}function iva(a,b){a=a|0;b=b|0;if(b>>>0<128)b=f[11544+(b<<2)>>2]|0;return b|0}function jva(a,b){a=a|0;b=b|0;f[a>>2]=b;return b|0}function kva(a){a=a|0;mwa(a);return}function lva(){gua(74832);tb(333,74832,x|0)|0;return}function mva(){gua(74820);tb(333,74820,x|0)|0;return}function nva(){gua(74808);tb(333,74808,x|0)|0;return}function ova(){gua(74796);tb(333,74796,x|0)|0;return}function pva(a){a=a|0;cpa(a);$Ja(a);return}function qva(a,b){a=a|0;b=b|0;return (f[a+12>>2]|0)-(f[a+8>>2]|0)>>2>>>0>b>>>0|0}function rva(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ka()}function sva(a){a=a|0;Iya(a);cJa(a+8|0);return}function tva(a){a=a|0;if(a|0)wpa(a);return}function uva(a,b){a=a|0;b=b|0;f[a>>2]=18176;z2(a+4|0,b);return}function vva(a,b){a=a|0;b=b|0;return (f[a+12>>2]|0)-(f[a+8>>2]|0)>>2>>>0<=b>>>0|0}function wva(a){a=a|0;f[a>>2]=6124;zta(a+4|0);return}function xva(a){a=a|0;Kwa(a);$Ja(a);return}function yva(a){a=a|0;Lwa(a);$Ja(a);return}function zva(a){a=a|0;_I(a);$Ja(a);return}function Ava(a){a=a|0;var b=0;b=TDa(a)|0;return (b?0:a)|0}function Bva(a,b){a=a|0;b=b|0;Mya(a,b);return}function Cva(a){a=a|0;Zxa(a);rJa(a+16|0);return}function Dva(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Rb[a&127](b|0,c|0,d|0)|0}function Eva(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0}function Fva(a){a=a|0;var b=0;b=f[a>>2]|0;f[a>>2]=b+-1;return b+-1|0}function Gva(a,b){a=a|0;b=b|0;f[a>>2]=18156;z2(a+4|0,b);return}function Hva(a){a=a|0;return Afa(a,CV(79348)|0)|0}function Iva(a,b){a=a|0;b=b|0;return (yV((a|0)==0?83563:a,(b|0)==0?83563:b)|0)<0|0}function Jva(a){a=a|0;f[a+64>>2]=0;return}function Kva(a){a=a|0;Xma(a);f[a>>2]=6620;return}function Lva(a){a=a|0;a=nV(196)|0;Txa(a);return a|0}function Mva(a){a=a|0;b[a+27>>0]=1;b[a+77>>0]=1;b[a+79>>0]=1;return}function Nva(a){a=a|0;return gia(a,f[a+4>>2]|0,1)|0}function Ova(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;aa(0);return 0}function Pva(a){a=a|0;if(!a)a=0;else a=(cs(a,5896)|0)!=0;return a&1|0}function Qva(a){a=a|0;var b=0;b=f[19392]|0;f[19392]=b+1;f[a+4>>2]=b+1;return}function Rva(a,b){a=a|0;b=b|0;f[a>>2]=0;f[a+4>>2]=b;return}function Sva(a){a=a|0;if((f[(f[a+12>>2]|0)+4>>2]|0)==5)f[a+4>>2]=5;return}function Tva(){var a=0;a=nV(172)|0;gI(a,0,0);return a|0}function Uva(a){a=a|0;a=tn(a,12)|0;mBa(a);return a|0}function Vva(a,b){a=a|0;b=b|0;Cz(a,b);return}function Wva(a,b){a=a|0;b=b|0;gza(a);f[a+12>>2]=b;return}function Xva(){f[18848]=0;f[18849]=0;f[18850]=0;tb(358,75392,x|0)|0;return}function Yva(){f[18845]=0;f[18846]=0;f[18847]=0;tb(357,75380,x|0)|0;return}function Zva(a){a=a|0;bCa(a+8|0);return}function _va(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)sS(a,b,c)|0;return}function $va(a,b,c){a=a|0;b=b|0;c=c|0;if(b|0)Gga(a,c,b)|0;return}function awa(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)zba(a,b,c)|0;return}function bwa(a,b){a=a|0;b=b|0;f[a+16>>2]=b;return}function cwa(a,b){a=a|0;b=b|0;KE(a,b);return}function dwa(a){a=a|0;return Lxa(a)|0}function ewa(a){a=a|0;a=tn(a,8)|0;yBa(a);return a|0}function fwa(a,c){a=a|0;c=c|0;a=Yx(a,c)|0;return ((b[a>>0]|0)==(c&255)<<24>>24?a:0)|0}function gwa(a){a=a|0;Rva(a,2147483647);return}function hwa(a){a=a|0;Tra(a,0);f[a>>2]=6932;f[a+20>>2]=0;return}function iwa(a){a=a|0;_fa(a+4|0);return}function jwa(a){a=a|0;return 4040}function kwa(a){a=a|0;return 4008}function lwa(a){a=a|0;return 3976}function mwa(a){a=a|0;a=a+24|0;f[a>>2]=(f[a>>2]|0)+1;return}function nwa(a){a=a|0;if((f[(f[a+24>>2]|0)+4>>2]|0)==5)f[a+4>>2]=5;return}function owa(){var a=0;a=nV(172)|0;gI(a,1,0);return a|0}function pwa(a){a=a|0;a=(f[a+4>>2]|0)-(f[a>>2]|0)>>2;return (a>>>0>1?a:1)|0}function qwa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Na(a|0,b|0,c|0,d|0)}function rwa(a){a=a|0;GAa(a+4|0);return}function swa(a){a=a|0;$xa(a);f[a+4>>2]=5;return}function twa(a){a=a|0;if((b[a>>0]|0)==1)a=0;else{b[a>>0]=1;a=1}return a|0}function uwa(a){a=a|0;f[a>>2]=14616;pza(a+4|0);return}function vwa(a){a=a|0;f[a>>2]=14552;pza(a+4|0);return}function wwa(a,b){a=a|0;b=b|0;return f[a+(b<<3)>>2]|0}function xwa(a,b){a=a|0;b=b|0;return (f[a+(b>>>5<<2)>>2]&1<<(b&31)|0)!=0|0}function ywa(a){a=a|0;qsa(a+8|0);return}function zwa(a,b){a=a|0;b=b|0;f[a>>2]=b;Vxa(b);return}function Awa(a){a=a|0;var b=0;b=bDa(a,-1)|0;return (b?0:a)|0}function Bwa(a,b){a=a|0;b=b|0;pxa(a,b,0);return}function Cwa(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Dwa(a,b){a=a|0;b=b|0;a=gKa(a)|0;return CG(a,gKa(b)|0)|0}function Ewa(a,b){a=a|0;b=b|0;f[a+20>>2]=b;return}function Fwa(a,c,d){a=a|0;c=c|0;d=d|0;b[a+c>>0]=d;return}function Gwa(a){a=a|0;swa(a);return a|0}function Hwa(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;aa(13)}function Iwa(a,b){a=a|0;b=b|0;return (yV(b,a)|0)>0|0}function Jwa(){var a=0;a=zb(4)|0;$Ia(a);ub(a|0,5752,316)}function Kwa(a){a=a|0;oCa(a+4|0);return}function Lwa(a){a=a|0;oCa(a+8|0);return}function Mwa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;$b[a&255](b|0,c|0,d|0)}function Nwa(a,b,c){a=a|0;b=b|0;c=c|0;if(!(f[a>>2]&32))Lv(b,c,a)|0;return}function Owa(a){a=a|0;return vJa(f[a+4>>2]|0)|0}function Pwa(a){a=a|0;Uqa(a);$Ja(a);return}function Qwa(a,b){a=a|0;b=b|0;gxa(a);f[a+16>>2]=f[b>>2];return}function Rwa(a,b){a=a|0;b=b|0;ub(zb(1)|0,1696,0)}function Swa(a){a=a|0;a=nV(88)|0;C1(a);return a|0}function Twa(){var a=0;a=nV(136)|0;Kz(a|0,0,136)|0;yI(a);return a|0}function Uwa(a){a=+a;return +a}function Vwa(a,b){a=a|0;b=b|0;hua(a,b);f[a>>2]=18196;return}function Wwa(){var a=0;a=nV(172)|0;gI(a,0,1);return a|0}function Xwa(a){a=a|0;_ka(a);return}function Ywa(a){a=a|0;Xwa(a);f[a+24>>2]=0;return}function Zwa(a){a=a|0;return Gsa(f[a>>2]|0)|0}function _wa(a){a=a|0;f[a+4>>2]=(f[(f[a+8>>2]|0)+4>>2]|0)==5?5:0;return}function $wa(a){a=a|0;a=nV(56)|0;Oca(a);return a|0}function axa(a){a=a|0;var b=0;b=u;u=u+a|0;u=u+15&-16;return b|0}function bxa(a){a=a|0;$qa(a);return}function cxa(a){a=a|0;aga(a)|0;return}function dxa(a){a=a|0;if(!a)a=1;else a=(b[a>>0]|0)==0;return a|0}function exa(a){a=a|0;a=nV(132)|0;C0(a);return a|0}function fxa(a,b){a=a|0;b=b|0;return bDa(a,b)|0}function gxa(a){a=a|0;f[a>>2]=0;a=a+8|0;f[a>>2]=0;f[a+4>>2]=0;return}function hxa(a){a=a|0;f[a>>2]=0;f[a+8>>2]=0;f[a+16>>2]=0;return}function ixa(a,b){a=a|0;b=b|0;PDa(a,b);return}function jxa(){XCa();f[19845]=74520;return}function kxa(a,b){a=a|0;b=b|0;hua(a,b);f[a>>2]=18236;return}function lxa(a){a=a|0;a=(Fr(a)|0)+4|0;return gKa(f[a>>2]|0)|0}function mxa(a){a=a|0;VZ(a+12|0);return}function nxa(){Jh(75404,28655);tb(356,75404,x|0)|0;return}function oxa(a){a=a|0;f[a+4>>2]=0;f[a+8>>2]=0;f[a+12>>2]=0;return}function pxa(a,b,c){a=a|0;b=b|0;c=c|0;f[a>>2]=b;f[a+4>>2]=c;return}function qxa(a){a=a|0;Jya(a);f[a+16>>2]=0;return}function rxa(a){a=a|0;ena(a);$Ja(a);return}function sxa(){var a=0;a=nV(172)|0;gI(a,1,1);return a|0}function txa(a){a=a|0;a=nV(72)|0;b3(a);return a|0}function uxa(a,b){a=a|0;b=b|0;if(!a)a=0;else a=hz(a,b)|0;return a|0}function vxa(a,b,c){a=a|0;b=b|0;c=c|0;return (b>>>0<128?b&255:c)|0}function wxa(a){a=a|0;Do(QAa(a)|0);return}function xxa(a){a=a|0;g_(a+16|0);return}function yxa(a){a=a|0;f[a>>2]=6912;_fa(a+24|0);return}function zxa(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;aa(5);return 0}function Axa(a,b){a=a|0;b=b|0;zwa(a,f[b+28>>2]|0);return}function Bxa(a,b,c){a=a|0;b=b|0;c=c|0;return (b<<24>>24>-1?b:c)|0}function Cxa(a,b){a=a|0;b=b|0;Wo(a,b);return}function Dxa(a,b){a=a|0;b=b|0;xo(a);return}function Exa(a,b){a=a|0;b=b|0;return Zq(a,b)|0}function Fxa(a,b){a=a|0;b=b|0;return tja(a,b)|0}function Gxa(a){a=a|0;a=nV(56)|0;Tha(a);return a|0}function Hxa(a){a=a|0;NBa(a);return}function Ixa(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Jxa(a){a=a|0;mBa(a);return a|0}function Kxa(a){a=a|0;zta(a);return}function Lxa(a){a=a|0;return ((a|0)==1?32:(a|0)==2?64:-1)|0}function Mxa(a){a=a|0;Ica(a);return}function Nxa(a){a=a|0;return (b[(f[18845]|0)+(a*40|0)+32>>0]|0)!=0|0}function Oxa(a,b){a=a|0;b=b|0;return eia(a,b)|0}function Pxa(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;aa(2);return 0}function Qxa(a,b){a=a|0;b=b|0;var c=0;c=bza(a|0)|0;return ((b|0)==0?a:c)|0}function Rxa(a,b,c){a=a|0;b=b|0;c=c|0;c=PM(a,b,c,0,-2147483648)|0;return c|0}function Sxa(a){a=a|0;Iba(a);f[a>>2]=7688;f[a+16>>2]=76684;return}function Txa(a){a=a|0;_M(a);f[a>>2]=9544;return}function Uxa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return bi(a,b,c,d,0)|0}function Vxa(a){a=a|0;Rza(a+4|0);return}function Wxa(){var a=0;a=nV(20)|0;pBa(a);return a|0}function Xxa(a){a=a|0;Mya(a,27);return}function Yxa(a){a=a|0;Mya(a,26);return}function Zxa(a){a=a|0;Mya(a,25);return}function _xa(a){a=a|0;Mya(a,24);return}function $xa(a){a=a|0;Mya(a,23);return}function aya(a){a=a|0;Mya(a,22);return}function bya(a){a=a|0;Mya(a,21);return}function cya(a){a=a|0;Mya(a,20);return}function dya(a){a=a|0;Mya(a,19);return}function eya(a){a=a|0;Mya(a,18);return}function fya(a){a=a|0;Mya(a,17);return}function gya(a){a=a|0;Mya(a,16);return}function hya(a){a=a|0;Mya(a,15);return}function iya(a){a=a|0;Mya(a,14);return}function jya(a){a=a|0;Mya(a,13);return}function kya(a){a=a|0;Mya(a,12);return}function lya(a){a=a|0;Mya(a,11);return}function mya(a){a=a|0;Mya(a,10);return}function nya(a){a=a|0;a=nV(84)|0;p9(a);return a|0}function oya(a){a=a|0;Ona(a);return}function pya(a){a=a|0;f[a>>2]=18176;uba(a+4|0);return}function qya(a,b){a=a|0;b=b|0;f[a>>2]=7100;f[a+4>>2]=b;return}function rya(a,b){a=a|0;b=b|0;YH(a,b);return}function sya(a){a=a|0;F4(a);return}function tya(a){a=a|0;a=nV(196)|0;_M(a);return a|0}function uya(a){a=a|0;return a+20|0}function vya(a){a=a|0;if(!a)a=1;else a=(f[a>>2]|0)==0;return a&1|0}function wya(){WIa();tb(355,75352,x|0)|0;return}function xya(a){a=a|0;return Tk(a)|0}function yya(a){a=a|0;Yja(a);$Ja(a);return}function zya(a){a=a|0;if(b[a>>0]|0)gP(a,32);return}function Aya(a){a=a|0;mya(a);return}function Bya(a){a=a|0;yBa(a);return a|0}function Cya(a){a=a|0;Mya(a,9);return}function Dya(a){a=a|0;Mya(a,8);return}function Eya(a){a=a|0;Mya(a,7);return}function Fya(a){a=a|0;Mya(a,6);return}function Gya(a){a=a|0;Mya(a,5);return}function Hya(a){a=a|0;Mya(a,4);return}function Iya(a){a=a|0;Mya(a,3);return}function Jya(a){a=a|0;Mya(a,2);return}function Kya(a){a=a|0;Mya(a,1);return}function Lya(a){a=a|0;a=nV(44)|0;lta(a);return a|0}function Mya(a,b){a=a|0;b=b|0;f[a>>2]=b;f[a+4>>2]=0;return}function Nya(){f[18555]=0;f[18554]=17472;b[74228]=0;f[18556]=18668;return}function Oya(a){a=a|0;f[a>>2]=18156;uba(a+4|0);return}function Pya(a){a=a|0;return (gKa(a)|0)==0|0}function Qya(a){a=a|0;Cya(a);return}function Rya(a){a=a|0;return (f[a+12>>2]|0)-(f[a+8>>2]|0)>>2|0}function Sya(){f[18567]=0;f[18566]=17784;return}function Tya(){f[18569]=0;f[18568]=17832;return}function Uya(a,b){a=a|0;b=b|0;return a>>>(b&31)|a<<(0-b&31)|0}function Vya(a){a=a|0;return (f[a+24>>2]|0)-(f[a+20>>2]|0)>>2|0}function Wya(a){a=a|0;eya(a);return}function Xya(a,b){a=a|0;b=b|0;f[a+116>>2]=f[b>>2];return}function Yya(a){a=a|0;fya(a);return}function Zya(a){a=a|0;a=nV(68)|0;h7(a);return a|0}function _ya(a){a=a|0;a=nV(88)|0;LX(a);return a|0}function $ya(a,b,c){a=a|0;b=b|0;c=c|0;return Xb[a&255](b|0,c|0)|0}function aza(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;aa(11)}function bza(a){a=a|0;return (a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function cza(a){a=a|0;Vxa(a);return}function dza(){oua();return}function eza(){f[18561]=0;f[18560]=17736;return}function fza(a,b){a=a|0;b=b|0;return a<<(b&31)|a>>>(0-b&31)|0}function gza(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;f[a+8>>2]=0;return}function hza(a){a=a|0;gya(a);return}function iza(a){a=a|0;return a>>>0<1602224128|(a|0)<0&a>>>0<3212836864|0}function jza(a){a=a|0;return a>>>0<1593835520|(a|0)<0&a>>>0<3741319169|0}function kza(a){a=a|0;return a>>>0<1333788672|(a|0)<0&a>>>0<3212836864|0}function lza(a){a=a|0;return a>>>0<1325400064|(a|0)<0&a>>>0<3472883713|0}function mza(a){a=a|0;return ((f[a>>2]|0)==23?a:0)|0}function nza(a,b,c){a=a|0;b=b|0;c=c|0;c=PM(a,b,c,-1,-1)|0;return c|0}function oza(){Kn();tb(389,83562,x|0)|0;return}function pza(a){a=a|0;aga(f[a>>2]|0)|0;return}function qza(a,b,c){a=a|0;b=b|0;c=c|0;return}function rza(a){a=a|0;b[a+104>>0]=0;return}function sza(a){a=a|0;a=nV(116)|0;tba(a);return a|0}function tza(a){a=a|0;a=nV(120)|0;VN(a);return a|0}function uza(){gO();tb(359,75856,x|0)|0;return}function vza(a,b){a=a|0;b=b|0;return (JD(a,b)|0)^1|0}function wza(a){a=a|0;return ewa(f[a>>2]|0)|0}function xza(a){a=a|0;f[a+4>>2]=f[(f[a+12>>2]|0)+4>>2];return}function yza(a,c){a=a|0;c=c|0;return b[a+c>>0]|0}function zza(){var a=0;a=nV(20)|0;_Ba(a);return a|0}function Aza(a){a=a|0;T3(a);$Ja(a);return}function Bza(a){a=a|0;a=nV(44)|0;Uta(a);return a|0}function Cza(a){a=a|0;return ((f[a>>2]|0)==12?a:0)|0}function Dza(a){a=a|0;return ((f[a>>2]|0)==11?a:0)|0}function Eza(a,b){a=a|0;b=b|0;return (yV(a,b)|0)==0|0}function Fza(a){a=a|0;return h9(+(a>>>0))|0}function Gza(a){a=a|0;F4(a+4|0);return}function Hza(a){a=a|0;Xwa(a);return}function Iza(a){a=a|0;return ((f[a>>2]|0)==10?a:0)|0}function Jza(a){a=a|0;return 3872}function Kza(a){a=a|0;E4(a+4|0);return}function Lza(a){a=a|0;Iba(a);f[a>>2]=7328;return}function Mza(a){a=a|0;iia(a);$Ja(a);return}function Nza(a){a=a|0;E4(a+8|0);return}function Oza(a){a=a|0;a=nV(44)|0;isa(a);return a|0}function Pza(a){a=a|0;return ((f[a>>2]|0)==9?a:0)|0}function Qza(a){a=a|0;if(a>>>0>4294963200){f[2619]=0-a;a=-1}return a|0}function Rza(a){a=a|0;f[a>>2]=(f[a>>2]|0)+1;return}function Sza(){f[18599]=0;f[18598]=17076;return}function Tza(){f[18597]=0;f[18596]=17020;return}function Uza(){f[18595]=0;f[18594]=16964;return}function Vza(){f[18593]=0;f[18592]=16908;return}function Wza(a){a=a|0;uwa(a);return}function Xza(a){a=a|0;vwa(a);return}function Yza(a){a=a|0;return 2}function Zza(){Vea(76852,24403)|0;return}function _za(a){a=a|0;f[a>>2]=7808;return}function $za(a,b){a=a|0;b=b|0;Ka()}function aAa(a){a=a|0;Sva(a);return}function bAa(a){a=a|0;Fna(a);return}function cAa(a){a=a|0;return ((f[a>>2]|0)==18?a:0)|0}function dAa(a){a=a|0;return ((f[a>>2]|0)==20?a:0)|0}function eAa(a){a=a|0;return ((f[a>>2]|0)==17?a:0)|0}function fAa(a){a=a|0;Xxa(a);return}function gAa(a){a=a|0;Yxa(a);return}function hAa(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aa(16);return 0}function iAa(a){a=a|0;yBa(a);return}function jAa(a){a=a|0;loa(a);$Ja(a);return}function kAa(a){a=a|0;q2(a);$Ja(a);return}function lAa(a,b){a=a|0;b=b|0;return (a|0)!=(0-b|0)|0}function mAa(a){a=a|0;return ((f[a>>2]|0)==5?a:0)|0}function nAa(a){a=a|0;return ((f[a>>2]|0)==16?a:0)|0}function oAa(a){a=a|0;return ((f[a>>2]|0)==14?a:0)|0}function pAa(a){a=a|0;return ((f[a>>2]|0)==15?a:0)|0}function qAa(a){a=a|0;f[a+4>>2]=0;return}function rAa(a,c){a=a|0;c=c|0;b[a>>0]=c;return}function sAa(a,b,c){a=a|0;b=b|0;c=+c;return Ub[a&1](b|0,+c)|0}function tAa(a,b,c){a=a|0;b=b|0;c=c|0;return $p(0,a,b,c|0?c:76504)|0}function uAa(a,b){a=a|0;b=b|0;f[a>>2]=1;f[a+8>>2]=b;return}function vAa(a,b){a=a|0;b=b|0;return f[a+(b<<2)>>2]|0}function wAa(a){a=a|0;return ((f[a>>2]|0)==4?a:0)|0}function xAa(a){a=a|0;return ((f[a>>2]|0)==1?a:0)|0}function yAa(a){a=a|0;return ((f[a>>2]|0)==13?a:0)|0}function zAa(a){a=a|0;return ((f[a>>2]|0)==19?a:0)|0}function AAa(a,b,c){a=a|0;b=b|0;c=c|0;c=nza(a,b,c)|0;return c|0}function BAa(a,b,c){a=a|0;b=b|0;c=c|0;ub(a|0,b|0,c|0)}function CAa(a,b){a=a|0;b=b|0;return a<<24>>24==b<<24>>24|0}function DAa(a){a=a|0;jS(a);f[a>>2]=3;return a|0}function EAa(a){a=a|0;J=f[a+4>>2]|0;return f[a>>2]|0}function FAa(a){a=a|0;zT(a);$Ja(a);return}function GAa(a){a=a|0;hT(a+4|0);return}function HAa(a){a=a|0;Faa(a);return}function IAa(a){a=a|0;return ((f[a>>2]|0)==3?a:0)|0}function JAa(a){a=+a;return (n[s>>2]=a,f[s>>2]|0)|0}function KAa(a,b){a=a|0;b=b|0;if(!y){y=a;z=b}}function LAa(a,b,c){a=a|0;b=b|0;c=c|0;Mb[a&4095](b|0,c|0)}function MAa(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;aa(22);return 0}function NAa(a){a=a|0;return _l(a,0)|0}function OAa(a){a=a|0;return Pl(a,0)|0}function PAa(a){a=a|0;a=nV(112)|0;z3(a);return a|0}function QAa(a){a=a|0;return ksa(a)|0}function RAa(a,b,c){a=a|0;b=b|0;c=c|0;Ka()}function SAa(a,b,c){a=a|0;b=b|0;c=c|0;c=Rxa(a,b,c)|0;return c|0}function TAa(){if(!(b[74024]|0))twa(74024)|0;return}function UAa(a,b){a=a|0;b=b|0;return Uba(gKa(a)|0,b)|0}function VAa(a){a=a|0;L8(a);$Ja(a);return}function WAa(a){a=a|0;vHa(a);return}function XAa(a,c){a=a|0;c=c|0;b[a+36>>0]=c&1;return}function YAa(a){a=a|0;return ((f[a>>2]|0)==2?a:0)|0}function ZAa(a,b){a=a|0;b=b|0;return Fa(a|0,b|0)|0}function _Aa(){if(!(b[74688]|0))twa(74688)|0;return}function $Aa(a){a=a|0;UC(a);return}function aBa(){var a=0;a=nV(20)|0;Sxa(a);return a|0}function bBa(a){a=a|0;f[a>>2]=0;f[a+4>>2]=0;return}function cBa(){SIa();DIa();return}function dBa(a,b){a=a|0;b=b|0;b=PM(a,b,10,-2147483648,0)|0;return b|0}function eBa(a){a=a|0;return (a|0)!=10060&((a|0)!=0&(a|0)!=76452)&1|0}function fBa(a){a=a|0;yDa(a);$Ja(a);return}function gBa(){if(!(b[74696]|0))twa(74696)|0;return}function hBa(){f[18627]=0;f[18626]=17276;return}function iBa(){f[18625]=0;f[18624]=17244;return}function jBa(a,b){a=a|0;b=b|0;f[a>>2]=f[b>>2];return}function kBa(a){a=a|0;Wta(a)|0;return}function lBa(a){a=a|0;iqa(a);f[a+4>>2]=5;return}function mBa(a){a=a|0;dya(a);return}function nBa(a){a=a|0;return Hna(a)|0}function oBa(a){a=a|0;Ega(a);$Ja(a);return}function pBa(a){a=a|0;Sxa(a);f[a>>2]=7724;return}function qBa(a,b){a=a|0;b=b|0;return -1}function rBa(){f[18553]=0;f[18552]=15148;return}function sBa(){f[18551]=0;f[18550]=15116;return}function tBa(a){a=a|0;return _l(a,1)|0}function uBa(a){a=a|0;return Pl(a,1)|0}function vBa(a,b){a=a|0;b=b|0;return 0}function wBa(a){a=a|0;a=nV(104)|0;zqa(a);return a|0}function xBa(a){a=a|0;a=nV(136)|0;yI(a);return a|0}function yBa(a){a=a|0;aya(a);return}function zBa(a){a=a|0;$5(a);return}function ABa(a){a=a|0;Do(a);return}function BBa(){f[18830]=0;tb(353,75320,x|0)|0;return}function CBa(a){a=a|0;return (f[a>>2]|0)*33^5381|0}function DBa(a,b){a=a|0;b=b|0;return fva(a,b)|0}function EBa(a,b){a=a|0;b=b|0;J=0;return a&63|0}function FBa(a){a=a|0;return pJa(f[a+16>>2]|0)|0}function GBa(a){a=a|0;return p8(a)|0}function HBa(a){a=a|0;F_(a);$Ja(a);return}function IBa(a){a=a|0;WW(a);return}function JBa(a){a=a|0;GV(a);return}function KBa(a,b,c){a=a|0;b=b|0;c=c|0;return zI(a,b,c)|0}function LBa(){f[18559]=0;f[18558]=17668;return}function MBa(a){a=+a;return h9(a)|0}function NBa(a){a=a|0;gxa(a);cJa(a+16|0);return}function OBa(a){a=a|0;Iba(a);f[a>>2]=9112;return}function PBa(a){a=a|0;return ((a+-48|0)>>>0<10|((a|32)+-97|0)>>>0<6)&1|0}function QBa(a){a=a|0;if(!a)return;else wS()}function RBa(a,b){a=a|0;b=b|0;return b-a>>2|0}function SBa(a,c){a=a|0;c=c|0;b[a>>0]=c;return}function TBa(a){a=a|0;Wza(a);$Ja(a);return}function UBa(a){a=a|0;Xza(a);$Ja(a);return}function VBa(a,b){a=a|0;b=b|0;f[a>>2]=b+144;return}function WBa(a){a=a|0;a=nV(44)|0;Kva(a);return a|0}function XBa(a){a=a|0;xD(a);$Ja(a);return}function YBa(a){a=a|0;Iba(a);f[a>>2]=7616;return}function ZBa(a){a=a|0;BS(a);$Ja(a);return}function _Ba(a){a=a|0;Sxa(a);f[a>>2]=7652;return}function $Ba(a){a=a|0;f[a+4096>>2]=a;return}function aCa(a){a=a|0;return xka(a)|0}function bCa(a){a=a|0;hT(a+8|0);return}function cCa(a){a=a|0;cJa(a);cJa(a+4|0);return}function dCa(a,b){a=a|0;b=b|0;Tna(a,b,0);return}function eCa(a){a=a|0;return (a&7|0)==0|0}function fCa(a){a=a|0;return (a&1|0)==0|0}function gCa(a){a=a|0;return (a&3|0)==0|0}function hCa(a){a=a|0;Iba(a);f[a>>2]=8340;return}function iCa(a){a=a|0;qt(a);return}function jCa(a){a=a|0;r4(a);return}function kCa(a){a=a|0;iDa(a);return}function lCa(a){a=a|0;f[a+4096>>2]=0;return}function mCa(a){a=a|0;a=a+(_A(a)|0)|0;return (b[a>>0]|0?a:0)|0}function nCa(){var a=0;a=f[19870]|0;f[19870]=a+0;return a|0}function oCa(a){a=a|0;cW(a);return}function pCa(a){a=a|0;iEa(a);$Ja(a);return}function qCa(){Nya();return}function rCa(a){a=a|0;return (a|0)!=0&(a|0)!=5|0}function sCa(a){a=a|0;b[a+26>>0]=1;return}function tCa(a){a=a|0;u6(a);$Ja(a);return}function uCa(a){a=a|0;Q0(a);$Ja(a);return}function vCa(a){a=a|0;Iba(a);f[a>>2]=7436;return}function wCa(a){a=a|0;b[a+8>>0]=1;b[a+9>>0]=0;return}function xCa(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aa(1)}function yCa(a,b,c){a=a|0;b=b|0;c=c|0;Rs(a,b,c);return a|0}function zCa(a,b){a=a|0;b=b|0;return cb(a|0,b|0)|0}function ACa(a,b){a=a|0;b=b|0;return mb(a|0,b|0)|0}function BCa(a){a=a|0;return ((a|0)>31?-1:-1>>>(32-a|0))|0}function CCa(a,b,c){a=a|0;b=b|0;c=c|0;return SW(a,b,c)|0}function DCa(a){a=a|0;zN(a);$Ja(a);return}function ECa(a){a=a|0;return a+4|0}function FCa(a,b){a=a|0;b=b|0;f[a>>2]=b;return}function GCa(a){a=a|0;dta(a);$Ja(a);return}function HCa(a){a=a|0;if(a|0)$Ja(a);return}function ICa(a,b){a=a|0;b=b|0;return b-a|0}function JCa(a){a=a|0;f[a>>2]=(f[a>>2]|0)+1;return a|0}function KCa(a){a=a|0;xza(a);return}function LCa(a){a=a|0;nwa(a);return}function MCa(a){a=a|0;nZ(a);return}function NCa(a){a=a|0;_wa(a);return}function OCa(a){a=a|0;$Aa(a);return}function PCa(a){a=a|0;return a+15&-16|0}function QCa(a){a=a|0;return rc(a)|0}function RCa(){var a=0;a=f[4511]|0;f[4511]=a+0;return a|0}function SCa(a){a=a|0;eua(a);$Ja(a);return}function TCa(a){a=a|0;fua(a);$Ja(a);return}function UCa(a){a=a|0;return a+-12|0}function VCa(a){a=a|0;Uea(a);$Ja(a);return}function WCa(a){a=a|0;tK(a);$Ja(a);return}function XCa(){Bf();return}function YCa(a){a=a|0;Iba(a);f[a>>2]=8160;return}function ZCa(a){a=a|0;b[a+27>>0]=1;return}function _Ca(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aa(18);return 0}function $Ca(a){a=a|0;pya(a);$Ja(a);return}function aDa(a,b){a=a|0;b=b|0;return (a|0)!=(b|0)|0}function bDa(a,b){a=a|0;b=b|0;return (a|0)==(b|0)|0}function cDa(a){a=a|0;f[a>>2]=3;p[a+8>>3]=0.0;return}function dDa(a){a=a|0;swa(a);return}function eDa(a){a=a|0;dfa(a);$Ja(a);return}function fDa(a){a=a|0;return ((a+-48|0)>>>0<10|(dJa(a)|0)!=0)&1|0}function gDa(){Z6();return}function hDa(){s7();return}function iDa(a){a=a|0;f[a+4>>2]=f[a+8>>2];return}function jDa(a){a=a|0;b[a+21>>0]=0;return}function kDa(a,b){a=a|0;b=b|0;return Ob[a&255](b|0)|0}function lDa(a){a=a|0;Ya(a|0)|0;wS()}function mDa(a){a=a|0;return f[a+12>>2]|0}function nDa(a,b){a=a|0;b=b|0;return b<<24>>24|0}function oDa(a){a=a|0;Rba(a+16|0);return}function pDa(a){a=a|0;return (a+-3|0)>>>0<2|0}function qDa(a){a=a|0;qO(a);return}function rDa(a){a=a|0;cW(a);$Ja(a);return}function sDa(a){a=a|0;Nra(a);$Ja(a);return}function tDa(a){a=a|0;Oya(a);$Ja(a);return}function uDa(a){a=a|0;return f[a+8>>2]|0}function vDa(a){a=a|0;b[a>>0]=1;return}function wDa(a){a=a|0;return ib(a|0)|0}function xDa(a,b){a=a|0;b=b|0;Jca(a,1,iJ(a)|0,b)|0;return}function yDa(a){a=a|0;iEa(a);return}function zDa(a){a=a|0;return b[a+9>>0]|0}function ADa(a){a=a|0;return b[a+8>>0]|0}function BDa(){return 268435455}function CDa(a){a=a|0;return -1}function DDa(a){a=a|0;return gKa(f[a+4>>2]|0)|0}function EDa(a){a=a|0;return (yV(a,51159)|0)==0|0}function FDa(a){a=a|0;pU(a);$Ja(a);return}function GDa(a){a=a|0;r_(a);$Ja(a);return}function HDa(a){a=a|0;woa(a);$Ja(a);return}function IDa(a){a=a|0;yxa(a);$Ja(a);return}function JDa(a){a=a|0;return Ua(a|0)|0}function KDa(a){a=a|0;bna(a);return}function LDa(a){a=a|0;if(eBa(a)|0)Xe(a);return}function MDa(a){a=a|0;Oja(a);$Ja(a);return}function NDa(a){a=a|0;b[a+20>>0]=1;return}function ODa(a){a=a|0;return gb(a|0)|0}function PDa(a,b){a=a|0;b=b|0;f[a>>2]=b;return}function QDa(){return Xa()|0}function RDa(a){a=a|0;return (a|0)==11|0}function SDa(a,b){a=a|0;b=b|0;u=a;v=b}function TDa(a){a=a|0;return (a|0)==-1|0}function UDa(){return 1073741823}function VDa(a){a=a|0;return 2147483647}function WDa(a){a=a|0;Dqa(a);$Ja(a);return}function XDa(a){a=a|0;Bz(a);$Ja(a);return}function YDa(a,b){a=a|0;b=+b;return Pb[a&1](+b)|0}function ZDa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aa(23)}function _Da(a){a=a|0;return UJa(a|0)|0}function $Da(){tb(332,74768,x|0)|0;return}function aEa(){tb(332,74740,x|0)|0;return}function bEa(){Tna(75088,27781,1);return}function cEa(){Tna(75092,27797,1);return}function dEa(){Tna(75096,27813,1);return}function eEa(){Tna(75100,27829,1);return}function fEa(){Tna(75104,27845,1);return}function gEa(){Tna(75108,27863,1);return}function hEa(){Tna(75112,27881,1);return}function iEa(a){a=a|0;pya(a);return}function jEa(a){a=a|0;return (a|0)==9|0}function kEa(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function lEa(){Tna(75116,27896,1);return}function mEa(){Tna(75120,27911,1);return}function nEa(){Tna(75124,27920,1);return}function oEa(){Tna(75128,27929,1);return}function pEa(){Tna(75132,27939,1);return}function qEa(){Tna(75136,27952,1);return}function rEa(){Tna(75140,27963,1);return}function sEa(){Tna(75144,27974,1);return}function tEa(){Tna(75148,27984,1);return}function uEa(){Tna(75152,27993,1);return}function vEa(){Tna(75156,28003,1);return}function wEa(){Tna(75160,28014,1);return}function xEa(){Tna(75164,28018,1);return}function yEa(){Tna(75168,28025,1);return}function zEa(){Tna(75172,28033,1);return}function AEa(){Tna(75176,28042,1);return}function BEa(){Tna(75180,28060,1);return}function CEa(){Tna(75184,28064,1);return}function DEa(){Tna(75188,28069,1);return}function EEa(){Tna(75192,28074,1);return}function FEa(){Tna(75196,28080,1);return}function GEa(){Tna(75200,28084,1);return}function HEa(){Tna(75204,28096,1);return}function IEa(){Tna(75208,28105,1);return}function JEa(){Tna(75212,28114,1);return}function KEa(){Tna(75216,28123,1);return}function LEa(){Tna(75220,28132,1);return}function MEa(){Tna(75224,28145,1);return}function NEa(){Tna(75228,28156,1);return}function OEa(){Tna(75232,28164,1);return}function PEa(){Tna(75236,28173,1);return}function QEa(){Tna(75240,28180,1);return}function REa(){Tna(75244,28186,1);return}function SEa(){Tna(75248,28191,1);return}function TEa(){Tna(75252,28196,1);return}function UEa(){Tna(75256,28216,1);return}function VEa(){Tna(75260,28226,1);return}function WEa(){Tna(75264,28238,1);return}function XEa(){Tna(75268,28251,1);return}function YEa(){Tna(75272,28264,1);return}function ZEa(){Tna(75276,28276,1);return}function _Ea(){Tna(75280,28288,1);return}function $Ea(){Tna(75284,28299,1);return}function aFa(){Tna(75288,28310,1);return}function bFa(){Tna(75748,42598,1);return}function cFa(){Tna(75292,28321,1);return}function dFa(){Tna(75752,42617,1);return}function eFa(a){a=a|0;return _na(a)|0}function fFa(a){a=a|0;Xta(a);return}function gFa(a){a=a|0;return (a|0)==20|0}function hFa(){Tna(75296,28331,1);return}function iFa(){Tna(75756,29125,1);return}function jFa(){Tna(75300,67300,1);return}function kFa(){Tna(75760,42630,1);return}function lFa(){Tna(75304,67309,1);return}function mFa(){Tna(75764,29137,1);return}function nFa(){Tna(75308,28339,1);return}function oFa(){Tna(75768,53179,1);return}function pFa(){Tna(75700,42689,1);return}function qFa(){Tna(75704,29089,1);return}function rFa(){Tna(75712,29156,1);return}function sFa(){Tna(75312,28348,1);return}function tFa(){Tna(75344,28588,1);return}function uFa(){Tna(75772,29141,1);return}function vFa(a){a=a|0;f[a>>2]=6528;return}function wFa(a){a=a|0;gza(a);return}function xFa(a){a=a|0;return (a|0)==5|0}function yFa(a){a=a|0;return (a|0)==15|0}function zFa(a,b){a=a|0;b=b|0;Lb[a&511](b|0)}function AFa(a){a=a|0;Xna(a);return}function BFa(a){a=a|0;wva(a);$Ja(a);return}function CFa(a){a=a|0;return (a|0)==4|0}function DFa(a){a=a|0;return (a|0)==19|0}function EFa(a){a=a|0;return a+12|0}function FFa(a,b){a=a|0;b=b|0;return fpa(a,b)|0}function GFa(){Tna(75316,39293,1);return}function HFa(){Tna(75324,28487,1);return}function IFa(){Tna(75776,29147,1);return}function JFa(){Tna(75436,72151,1);return}function KFa(){Tna(75440,72275,1);return}function LFa(){Tna(75444,28781,1);return}function MFa(){Tna(75448,28788,1);return}function NFa(){Tna(75452,28794,1);return}function OFa(){Tna(75456,72374,1);return}function PFa(){Tna(75460,28798,1);return}function QFa(){Tna(75464,28802,1);return}function RFa(){Tna(75468,28810,1);return}function SFa(){Tna(75472,58655,1);return}function TFa(){Tna(75476,38997,1);return}function UFa(){Tna(75480,72153,1);return}function VFa(){Tna(75484,28815,1);return}function WFa(){Tna(75488,28817,1);return}function XFa(){Tna(75492,37658,1);return}function YFa(){Tna(75496,72085,1);return}function ZFa(){Tna(75500,28819,1);return}function _Fa(){Tna(75504,83563,1);return}function $Fa(){Tna(75508,28828,1);return}function aGa(){Tna(75512,28831,1);return}function bGa(){Tna(75516,28839,1);return}function cGa(){Tna(75520,28847,1);return}function dGa(){Tna(75524,28855,1);return}function eGa(){Tna(75528,28862,1);return}function fGa(){Tna(75532,28870,1);return}function gGa(){Tna(75536,28877,1);return}function hGa(){Tna(75540,28884,1);return}function iGa(){Tna(75544,28890,1);return}function jGa(){Tna(75548,28904,1);return}function kGa(){Tna(75552,72200,1);return}function lGa(){Tna(75556,72268,1);return}function mGa(){Tna(75560,72103,1);return}function nGa(){Tna(75564,72263,1);return}function oGa(){Tna(75568,72178,1);return}function pGa(){Tna(75572,72222,1);return}function qGa(a){a=a|0;return 4}function rGa(a,b){a=a|0;b=b|0;return b|0}function sGa(a){a=a|0;return (a|0)==22|0}function tGa(){NIa();return}function uGa(){Tna(75576,72188,1);return}function vGa(){Tna(75580,72121,1);return}function wGa(){Tna(75584,72197,1);return}function xGa(){Tna(75588,72191,1);return}function yGa(){Tna(75592,72119,1);return}function zGa(){Tna(75596,72155,1);return}function AGa(){Tna(75600,72225,1);return}function BGa(){Tna(75604,72183,1);return}function CGa(){Tna(75608,72105,1);return}function DGa(){Tna(75612,72230,1);return}function EGa(){Tna(75616,72207,1);return}function FGa(){Tna(75620,72239,1);return}function GGa(){Tna(75624,28908,1);return}function HGa(){Tna(75628,28921,1);return}function IGa(){Tna(75632,28934,1);return}function JGa(){Tna(75636,28947,1);return}function KGa(){Tna(75640,28962,1);return}function LGa(){Tna(75644,28977,1);return}function MGa(){Tna(75648,39261,1);return}function NGa(){Tna(75652,28987,1);return}function OGa(){Tna(75656,28998,1);return}function PGa(){Tna(75660,29010,1);return}function QGa(){Tna(75664,29024,1);return}function RGa(){Tna(75668,29037,1);return}function SGa(){Tna(75672,29051,1);return}function TGa(){Tna(75676,29066,1);return}function UGa(){Tna(75680,29244,1);return}function VGa(){Tna(75684,67309,1);return}function WGa(){Tna(75688,65380,1);return}function XGa(){Tna(75692,29078,1);return}function YGa(){Tna(75696,29082,1);return}function ZGa(){Tna(75708,42696,1);return}function _Ga(){Tna(75716,29098,1);return}function $Ga(){Tna(75720,53372,1);return}function aHa(){Tna(75724,29103,1);return}function bHa(){Tna(75728,29107,1);return}function cHa(){Tna(75732,29111,1);return}function dHa(){Tna(75736,29114,1);return}function eHa(){Tna(75740,29120,1);return}function fHa(){Tna(75744,52950,1);return}function gHa(){Tna(75328,28508,1);return}function hHa(){Tna(74720,19227,1);return}function iHa(){Tna(75332,28529,1);return}function jHa(){Tna(74716,19209,1);return}function kHa(){Tna(75336,28550,1);return}function lHa(){Tna(74712,19194,1);return}function mHa(){Tna(75340,28569,1);return}function nHa(){Tna(74708,19188,1);return}function oHa(a){a=a|0;return a&255|0}function pHa(a){a=a|0;return 127}function qHa(a){a=a|0;return (a|1|0)==21|0}function rHa(a){a=a|0;b[a>>0]=0;return}function sHa(){RIa();return}function tHa(a){a=a|0;return ita(a)|0}function uHa(a){a=a|0;return iJ(a)|0}function vHa(a){a=a|0;f[a+4>>2]=5;return}function wHa(){Tna(74704,19180,1);return}function xHa(a,b){a=a|0;b=b|0;return}function yHa(a,b,c){a=a|0;b=b|0;c=c|0;aa(9);return 0}function zHa(){dCa(74932,27573);return}function AHa(){dCa(74936,30564);return}function BHa(){dCa(74940,27578);return}function CHa(){dCa(74944,27587);return}function DHa(){dCa(74948,27591);return}function EHa(){dCa(74952,27611);return}function FHa(){dCa(74956,27619);return}function GHa(){dCa(74960,28810);return}function HHa(){dCa(74964,27622);return}function IHa(){dCa(74968,27627);return}function JHa(){dCa(74972,28339);return}function KHa(){dCa(74976,28348);return}function LHa(){dCa(74980,29120);return}function MHa(){dCa(74984,27637);return}function NHa(){dCa(74988,27642);return}function OHa(){dCa(74992,53179);return}function PHa(){dCa(74996,27648);return}function QHa(){dCa(75004,29098);return}function RHa(){dCa(75008,56787);return}function SHa(){dCa(75012,27674);return}function THa(){dCa(75016,27680);return}function UHa(){dCa(75020,39287);return}function VHa(){dCa(75024,27685);return}function WHa(){dCa(75028,27692);return}function XHa(){dCa(75032,27699);return}function YHa(){dCa(75036,27707);return}function ZHa(){dCa(75040,64085);return}function _Ha(){dCa(75044,27712);return}function $Ha(){dCa(75048,39404);return}function aIa(){dCa(75052,39282);return}function bIa(){dCa(75056,37588);return}function cIa(){dCa(75060,37581);return}function dIa(){dCa(75064,27719);return}function eIa(){return (f[f[2650]>>2]|0?4:1)|0}function fIa(a){a=a|0;return a<<24>>24!=0|0}function gIa(a){a=a|0;return (a|0)==7|0}function hIa(a){a=a|0;return +(+n[a>>2])}function iIa(a){a=a|0;return +(+p[a>>3])}function jIa(a){a=a|0;qxa(a);return}function kIa(){dCa(75068,27727);return}function lIa(){dCa(75072,27737);return}function mIa(){dCa(75076,27748);return}function nIa(){dCa(75e3,27662);return}function oIa(){dCa(75080,27765);return}function pIa(a){a=a|0;return 70934}function qIa(a){a=a|0;return a<<24>>24==0|0}function rIa(a){a=a|0;return f[a>>2]|0}function sIa(){HFa();return}function tIa(a,b){a=a|0;b=b|0;return +(+uIa(a,b))}function uIa(a,b){a=a|0;b=b|0;return +(+gL(a,b,2))}function vIa(a){a=a|0;return FJ(a,f[2650]|0)|0}function wIa(){dCa(75788,29185);return}function xIa(){dCa(75836,29277);return}function yIa(){dCa(75792,29194);return}function zIa(){dCa(75840,29285);return}function AIa(){dCa(75796,29203);return}function BIa(){dCa(75844,29293);return}function CIa(){dCa(75800,29212);return}function DIa(){dCa(75816,42636);return}function EIa(){dCa(75848,29301);return}function FIa(a){a=a|0;return 71059}function GIa(a,b){a=a|0;b=b|0;return +(+gL(a,b,0))}function HIa(a,b){a=a|0;b=b|0;return +(+gL(a,b,1))}function IIa(){dCa(74928,27548);return}function JIa(){dCa(75084,27776);return}function KIa(a){a=a|0;return a&31|0}function LIa(a,b){a=a|0;b=b|0;return +(+GIa(a,b))}function MIa(a,b){a=a|0;b=b|0;return +(+HIa(a,b))}function NIa(){dCa(75780,29156);return}function OIa(){dCa(75784,29162);return}function PIa(){dCa(75804,29221);return}function QIa(){dCa(75808,29230);return}function RIa(){dCa(75812,29244);return}function SIa(){dCa(75820,42642);return}function TIa(){dCa(75852,29309);return}function UIa(){f[18614]=17916;return}function VIa(){f[18610]=17880;return}function WIa(){Bia(75352);return}function XIa(){IIa();return}function YIa(){QIa();return}function ZIa(){dCa(75824,29253);return}function _Ia(){dCa(75828,29261);return}function $Ia(a){a=a|0;f[a>>2]=18136;return}function aJa(a){a=a|0;return (a|0)==1|0}function bJa(a){a=a|0;return (a|0)==6|0}function cJa(a){a=a|0;rJa(a);return}function dJa(a){a=a|0;return ((a|32)+-97|0)>>>0<26|0}function eJa(){dCa(75832,29269);return}function fJa(a){a=a|0;f[a>>2]=18276;return}function gJa(a){a=a|0;return 68034}function hJa(a){a=a|0;return (a|0)==2|0}function iJa(a){a=a|0;cJa(a);return}function jJa(){wya();return}function kJa(){OIa();return}function lJa(a,b){a=+a;b=+b;return +(+d$(a,b))}function mJa(){return 2147483647}function nJa(a){a=a|0;return (a|0)==3|0}function oJa(a,b){a=+a;b=b|0;return +(+KI(a,b))}function pJa(a){a=a|0;return (a|0)!=0|0}function qJa(a){a=+a;return +Ri(a,1.0)==0.0|0}function rJa(a){a=a|0;f[a>>2]=0;return}function sJa(a,b,c){a=a|0;b=b|0;c=c|0;aa(19)}function tJa(a){a=a|0;return (a|0)==0|0}function uJa(){BBa();return}function vJa(a){a=a|0;return Zb[a&63]()|0}function wJa(a,b){a=+a;b=b|0;return +(+nJ(a,b))}function xJa(){rJa(75348);return}function yJa(a){a=a|0;return (a+-48|0)>>>0<10|0}function zJa(a){a=a|0;return 1}function AJa(){uza();return}function BJa(a){a=a|0;return (a+-65|0)>>>0<26|0}function CJa(a){a=a|0;return a+8|0}function DJa(a){a=a|0;return a+16|0}function EJa(a,b){a=+a;b=+b;return +(+Ri(a,b))}function FJa(a){a=a|0;return sW(a)|0}function GJa(a){a=a|0;Ka();return 0}function HJa(a,b){a=a|0;b=b|0;aa(15);return 0}function IJa(){vg();return}function JJa(){oza();return}function KJa(a,b){a=a|0;b=+b;aa(12);return 0}function LJa(a){a=a|0;Ka()}function MJa(a){a=a|0;ac[a&63]()}function NJa(a){a=a|0;return 71691}function OJa(a){a=a|0;return 71663}function PJa(a){a=a|0;return PBa(a)|0}function QJa(a){a=a|0;return 71814}function RJa(){yb()}function SJa(a){a=+a;return +(+q8(a))}function TJa(a,b){a=a|0;b=b|0;aa(4)}function UJa(a){a=a|0;return 0}function VJa(a){a=+a;return +(+y_(a))}function WJa(a){a=a|0;Cb(a|0)}function XJa(){_a()}function YJa(a){a=a|0;return nV(a)|0}function ZJa(a){a=a|0;$Ja(a);return}function _Ja(a){a=a|0;u=a}function $Ja(a){a=a|0;Xe(a);return}function aKa(a){a=a|0;J=a}function bKa(a){a=a|0;return}function cKa(){return 76388}function dKa(){vb()}function eKa(){pb(76492);return}function fKa(a){a=a|0;aa(6);return 0}function gKa(a){a=a|0;return a|0}function hKa(a){a=+a;aa(7);return 0}function iKa(){Ga(76492);return}function jKa(){return}function kKa(){return 67}function lKa(){return 54}function mKa(){return J|0}function nKa(){return 10476}function oKa(){return u|0}function pKa(){return 64}function qKa(){return 51}function rKa(){return 65}function sKa(){return 52}function tKa(){return 68}function uKa(){return 55}function vKa(){return 69}function wKa(){return 56}function xKa(){return 66}function yKa(){return 53}function zKa(){return 63}function AKa(){return 50}function BKa(){return -1}function CKa(){return 36}function DKa(){return 11}function EKa(){return 37}function FKa(){return 12}function GKa(){return 39}function HKa(){return 14}function IKa(){return 38}function JKa(){return 13}function KKa(){return 31}function LKa(){return 30}function MKa(){return 71}function NKa(){return 58}function OKa(){return 72}function PKa(){return 59}function QKa(){return 73}function RKa(){return 60}function SKa(){return 74}function TKa(){return 61}function UKa(){return 75}function VKa(){return 62}function WKa(){return 70}function XKa(){return 57}function YKa(){return 29}function ZKa(){return 28}function _Ka(a){a=a|0;aa(3)}function $Ka(){return 34}function aLa(){return 26}function bLa(){return 35}function cLa(){return 10}function dLa(){return 6}function eLa(){return 5}function fLa(){return 27}function gLa(){return 43}function hLa(){return 18}function iLa(){return 42}function jLa(){return 17}function kLa(){return 45}function lLa(){return 20}function mLa(){return 44}function nLa(){return 19}function oLa(){return 47}function pLa(){return 22}function qLa(){return 46}function rLa(){return 21}function sLa(){return 49}function tLa(){return 24}function uLa(){return 48}function vLa(){return 23}function wLa(){return 32}function xLa(){return 25}function yLa(){return 10412}function zLa(){return 9}function ALa(){return 33}function BLa(){return 41}function CLa(){return 16}function DLa(){return 40}function ELa(){return 15}function FLa(){return 7}function GLa(){return 8}function HLa(){return 4}function ILa(){return 3}function JLa(){aa(17);return 0}function KLa(){Ka()}function LLa(){return 2}function MLa(){return 1}function NLa(){return 0}function OLa(){aa(20)}

// EMSCRIPTEN_END_FUNCS
var Ib=[Ova,Gx,Dy,Qg,Ah,Rg,Dh,ef,kf,Ova,Ova,Ova,Ova,Ova,Ova,Ova];var Jb=[xCa,IA,nr,ui,tI,un,dn,Sm];var Kb=[Pxa,Lg,Ig,Pxa];var Lb=[_Ka,Sia,qqa,oqa,pqa,kja,lja,Lwa,yva,Jpa,Kpa,Mea,Wqa,wva,BFa,Dra,Yua,Yua,dfa,eDa,Uqa,Pwa,bKa,ZJa,Dqa,WDa,Uqa,Pwa,Uqa,Pwa,Pwa,Bz,XDa,Uqa,Pwa,xD,XBa,Uqa,Pwa,pU,FDa,dta,GCa,bKa,ZJa,yxa,IDa,ZJa,bKa,ZJa,ina,ZJa,Lua,ZJa,bKa,ZJa,ZJa,bKa,ZJa,qz,ZJa,bKa,ZJa,c1,LJa,u6,tCa,Uqa,Pwa,Ega,oBa,Uqa,Pwa,L8,VAa,Uqa,Pwa,BFa,F_,HBa,Uqa,Pwa,BFa,Uqa,Pwa,Pwa,T3,Aza,Dra,Yua,BFa,BFa,BFa,BFa,Uqa,Pwa,Pwa,Uqa,Pwa,Pwa,Q0,uCa,Dra,Yua,iia,Mza,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,Uqa,Pwa,BFa,Oja,MDa,Uqa,Pwa,Uqa,Pwa,Pwa,BFa,Uqa,Pwa,Pwa,Uqa,Pwa,Pwa,Uqa,Pwa,Pwa,r_,GDa,Uqa,Pwa,loa,jAa,bKa,ZJa,bKa,ZJa,Uqa,Pwa,Pwa,woa,HDa,bKa,ZJa,bKa,ZJa,Uqa,Pwa,Pwa,Uqa,Pwa,Pwa,zT,FAa,Uqa,Pwa,BFa,ena,rxa,Uqa,Pwa,Pwa,Uqa,Pwa,Pwa,q2,kAa,Uqa,Pwa,tK,WCa,Dra,Yua,Uea,VCa,Uqa,Pwa,BS,ZBa,ZBa,Xja,oka,bKa,ZJa,bKa,ZJa,pia,Wpa,Oia,Pia,bKa,ZJa,bKa,ZJa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,Kwa,xva,Hpa,Ipa,cpa,pva,qpa,rpa,_I,zva,oia,Vpa,Mia,Nia,cW,rDa,vwa,eva,uwa,dva,Lwa,yva,Jpa,Kpa,Kwa,xva,Hpa,Ipa,bKa,ZJa,yDa,fBa,Wza,TBa,Xza,UBa,Wza,TBa,Xza,UBa,bKa,ZJa,Dua,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,ywa,cva,ywa,cva,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,bKa,ZJa,ZJa,Yja,yya,zN,DCa,Nra,sDa,fua,TCa,eua,SCa,ZJa,ZJa,ZJa,ZJa,ZJa,ZJa,ZJa,iEa,pCa,bKa,ZJa,bKa,bKa,ZJa,bKa,ZJa,Oya,tDa,pya,$Ca,tDa,tDa,tDa,$Ca,bKa,ZJa,ZJa,ZJa,ZJa,ZJa,xla,hna,Sp,fM,oM,aA,WJa,xpa,aca,Rc,Z2,PU,Au,Rz,Pc,Bsa,Sma,KL,cv,Nka,oL,Ola,fda,Rba,bna,pZ,aQ,Joa,dr,Kxa,kBa,Zm,WW,zea,x_,EH,EH,ll,gaa,BL,ff,Do,Fga,Ik,E0,cq,co,fna,DE,RP,Woa,ada,Kxa,ku,Ng,kq,OZ,bS,Qva,zta,Gma,Pma,nna,jta,Fma,Oma,Qma,bKa,l2,Xe,Ok,hO,mra,EU,nU,Hfa,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka,_Ka];var Mb=[TJa,xHa,U0,$za,wZ,$za,Rwa,$za,sma,qZ,MX,ila,wo,Eg,Sna,Nja,Mja,Lja,zs,xHa,l0,m0,CN,DN,Rca,Rca,Rca,E8,jra,jra,Rca,Rca,Rca,E8,jra,jra,Rca,Rca,Rca,B9,jra,jra,Rca,Rca,Rca,B9,jra,jra,xHa,xHa,Nsa,pK,oK,Msa,xy,wy,T2,dCa,Zx,YM,PY,QA,_L,pd,rt,zt,hqa,nw,XC,eu,lK,WO,XC,XC,uy,MA,Gva,XB,Dt,XC,yZ,QH,AC,YI,haa,pN,WY,dZ,Ufa,hia,Jga,Tfa,ffa,Nga,qca,xba,Sda,Rda,Ooa,Noa,Kga,Sfa,nda,Saa,sca,rca,Ppa,Rfa,ifa,gfa,Mga,hfa,Lga,yqa,Vna,XC,eN,At,Zn,g4,zD,u$,r0,H$,t$,h$,o2,i1,N_,Xoa,KZ,Ooa,Noa,i$,C_,Poa,yna,koa,joa,Ppa,B_,YZ,XZ,fqa,wfa,n2,yqa,Vna,TU,P3,fW,Pha,gka,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,MG,g4,fe,$ga,Tja,qia,_ga,lga,uia,kga,Hca,Xoa,Gfa,Ooa,Rea,ria,yha,Sea,eca,koa,joa,zha,xha,Zga,Yga,tia,Apa,sia,yqa,Vna,bB,bB,MM,EV,ee,Efa,Qqa,qga,Dfa,Pea,hga,$ba,rda,Cda,Bda,_ca,Zca,Raa,W9,Mca,Oba,pca,oca,Ppa,Cfa,Qea,zpa,fqa,Jea,gga,yqa,Yca,$T,ie,Eia,Zka,$ja,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,Dja,Apa,eqa,yqa,Vna,sC,Kd,Rpa,Qqa,cqa,dca,Pba,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,CA,id,R$,B0,b0,Q$,A$,f0,s_,TZ,X_,W_,P_,O_,c0,O$,Q_,FZ,u_,t_,P$,N$,D$,B$,e0,C$,d0,t0,c_,R2,vV,I9,dba,$9,H9,l9,daa,z7,P6,K8,J8,n8,m8,aaa,F9,o8,A6,B7,A7,G9,E9,o9,m9,caa,n9,baa,xaa,e7,ke,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Vga,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,YC,he,Xga,Qqa,Hha,Wga,jga,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Kw,ZF,XC,Dxa,Ox,CO,vu,Gia,Qqa,Eja,Fia,Qha,gqa,ioa,Gna,vga,uga,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Gha,eqa,yqa,Qfa,ju,n1,CF,b1,Jt,Ct,v_,be,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,mda,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,xt,Ui,Sz,JI,fV,yw,Tp,Bfa,Jj,Qqa,cqa,Qpa,ypa,Apa,Vna,XC,Uy,gqa,ioa,Gna,zda,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,Qaa,eqa,yqa,ce,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Z4,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,fx,QB,Vo,BD,SB,wL,GC,Vz,Rpa,Qqa,cqa,D5,$4,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Kma,Dda,W0,Le,xL,NW,Pj,LN,Ap,_o,XC,$L,Zma,XC,AW,EX,YH,g4,Ap,_o,KF,XC,EO,SA,xH,vN,g4,md,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,C2,B2,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,$d,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Uda,Tda,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Xd,Rpa,Qqa,cqa,Qpa,ypa,Lfa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Td,wea,Qqa,xfa,vea,Qda,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,v$,aB,_t,Wd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,$8,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,BC,Vd,Rpa,Qqa,cqa,Qpa,ypa,rea,nca,Gna,Xoa,Voa,wba,vba,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,FU,Zv,rU,jd,X1,m3,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,zJ,R2,vV,u2,Qqa,cqa,t2,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,kw,bh,wha,HH,q7,Rpa,cga,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,ae,Rpa,Qqa,cqa,Qpa,ypa,gqa,uca,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,NC,Hia,de,QS,P3,fW,hda,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,pA,gd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,FY,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Rpa,Rha,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Ada,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,JA,hd,Rpa,Qqa,cqa,Qpa,ypa,L2,s0,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Mm,kF,E6,sd,B8,J9,R8,A8,b8,V8,p6,N5,g7,f7,R6,Q6,S8,y8,S6,E5,r6,q6,z8,x8,e8,c8,U8,d8,T8,d9,_5,Ed,Rpa,Qqa,cqa,Qpa,ypa,gqa,cca,Gna,Xoa,Voa,Ooa,Noa,cha,Iga,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,UT,P3,fW,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,a8,Vda,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,aB,g2,qd,j5,Z5,u5,i5,V4,y5,d4,K3,I4,H4,p4,o4,v5,g5,q4,D3,f4,e4,h5,f5,Y4,W4,x5,X4,w5,G5,R3,sA,$da,dd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,f1,zpa,fqa,Apa,eqa,yqa,Vna,Rd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,nea,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,rC,vd,$aa,Vba,mba,_aa,Haa,qba,Y8,g8,P9,O9,s9,r9,nba,Yaa,t9,F7,_8,Z8,Zaa,Xaa,Kaa,Iaa,pba,Jaa,oba,Hba,G8,ud,U9,hba,naa,T9,u9,raa,G7,Y6,N8,M8,u8,t8,oaa,R9,v8,H6,I7,H7,S9,Q9,x9,v9,qaa,w9,paa,Maa,k7,XC,XC,Md,Aga,Qqa,cqa,zga,Wfa,qha,kfa,Wba,Xoa,Ffa,Ooa,Noa,oha,yga,Yda,yba,koa,joa,Ppa,xga,iga,Xfa,pha,Oga,eqa,yqa,Vna,PC,EC,uN,cN,R2,vV,yea,Qqa,cqa,xea,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,D9,Apa,eqa,yqa,Vna,R2,vV,Rpa,Qqa,cqa,Vfa,jfa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,iba,Apa,eqa,yqa,Vna,Ara,Ou,Ad,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,Mfa,Oea,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Ix,vx,Bd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xca,Wca,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Jd,Rpa,Qqa,dha,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,aX,ox,Gw,oq,Rpa,d1,Qqa,cqa,Qpa,ypa,Apa,Vna,Ez,rA,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,eqa,yqa,Gt,bt,XC,HU,cu,mf,XC,$U,Vx,Tm,MM,SS,ed,Rpa,Qqa,cqa,Qpa,ypa,gqa,m$,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Fx,Ix,eU,hja,aB,XB,XB,vA,XB,Ys,fd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,a0,$$,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,zY,eqa,yqa,Vna,Yd,Rpa,Qqa,cqa,Qpa,ypa,rja,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,xd,Rpa,Qqa,uea,Qpa,ypa,Dea,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,zd,mea,wga,Yea,lea,wda,afa,Uca,C9,Xoa,lda,Ooa,Vca,Zea,kea,Poa,yna,koa,joa,Ppa,jea,yda,xda,$ea,sea,_ea,yqa,Vna,wP,XC,fD,R0,XC,I0,Cd,Rpa,Qqa,cqa,Qpa,ypa,cba,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Fd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,zg,fga,SL,Dpa,Pda,Eea,Oda,ida,Iea,Gca,k9,Xoa,Tca,Ooa,Noa,Fea,Nda,Nba,H8,koa,joa,Ppa,Mda,kda,jda,Hea,c7,Gea,yqa,V9,S2,IE,hN,V0,Ela,n1,iY,_B,rd,N7,b9,h8,M7,l7,l8,V5,z5,J6,I6,n6,m6,i8,K7,o6,k5,X5,W5,L7,J7,o7,m7,k8,n7,j8,I8,I5,wd,Nca,Qqa,dda,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,lr,rB,jB,nd,n4,Qqa,G4,N9,J3,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,od,N4,Qqa,U4,Qpa,ypa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,vM,P3,fW,Dga,gja,cqa,Cga,Yfa,gqa,ioa,Gna,Xoa,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Zfa,eqa,yqa,vca,Nd,Bga,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,M5,Voa,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,kj,XC,Rw,Qd,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Xda,Wda,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,TP,HA,dN,Fo,WO,IU,Eo,qJ,Mh,aB,TL,eO,Sv,nv,qn,It,By,nF,ZE,As,Ss,di,gda,Gz,XC,P3,fW,Rpa,Qqa,cqa,Qpa,ypa,gqa,ioa,Gna,Qy,Xr,Ooa,Noa,dqa,Opa,Poa,yna,koa,joa,Ppa,Npa,Bpa,zpa,fqa,Apa,eqa,yqa,Vna,Ix,XC,XC,AW,Jc,am,$i,du,XC,$u,bB,aB,tE,Zx,Dma,Zg,iu,jj,tw,XC,XC,_g,ry,tg,yr,qA,_t,DO,YR,ad,qY,gZ,GY,pY,bY,KY,sX,bX,OX,NX,CX,BX,HY,nY,DX,VW,uX,tX,oY,mY,eY,cY,JY,dY,IY,UY,mX,kX,uva,Ila,xZ,OB,Nea,tea,qra,ct,kA,HL,es,Vw,AA,VT,kt,qu,Lt,f8,pW,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa,TJa];var Nb=[zxa,Sk,J_,I_,p_,q_,q_,o_,CZ,EZ,DZ,Ze,Rk,H_,G_,m_,n_,n_,l_,zZ,BZ,AZ,$e,Us,Ts,Ps,Os,OY,tJ,XE,WE,vF,NY,dJ,VE,UE,uF,Hh,Gh,sn,kh,bo,qi,ul,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa,zxa];var Ob=[fKa,UJa,UJa,DL,F1,UJa,GJa,zJa,waa,zJa,Y9,NJa,zJa,wBa,zJa,WBa,zJa,xBa,zJa,_oa,zJa,PAa,zJa,Zya,zJa,Gxa,zJa,nya,zJa,Swa,zJa,Oza,zJa,Lya,zJa,_ya,zJa,$wa,xna,$sa,QX,rqa,zJa,Bza,zJa,zja,CW,gba,Kta,zJa,h3,ima,bsa,zJa,Bta,zJa,Naa,zJa,txa,zJa,Jia,zJa,uja,zJa,exa,zJa,tza,zJa,sza,zJa,Lva,tya,ona,Owa,Jza,Wia,Jfa,lwa,Via,Jfa,kwa,Uia,Jfa,jwa,nk,Zi,mfa,CDa,UJa,UJa,CDa,w4,gJa,DDa,cE,cE,NAa,tBa,OAa,uBa,Yza,$ma,Ima,ana,$G,_G,ZG,aH,Yza,Uma,rma,Vma,dw,cw,bw,ew,pHa,pHa,UJa,pHa,pHa,UJa,VDa,VDa,UJa,VDa,VDa,UJa,UJa,UJa,qGa,n0,UJa,vaa,ADa,zDa,uDa,mDa,zJa,zJa,zJa,UJa,UJa,qGa,pIa,FIa,OJa,DDa,QJa,Vn,nV,Bea,F$,EI,Mka,q5,ppa,zQ,Yma,Yp,ksa,csa,hq,II,ppa,jsa,efa,Era,ewa,Asa,DT,Wta,_4,Mta,Fha,xx,rsa,Xra,ssa,pra,fra,Lra,vra,ura,lsa,Zra,_ra,Yra,Sra,Qra,nsa,Rra,msa,b_,LF,nc,jN,px,Se,Fra,Fr,Me,lxa,rr,rr,QK,sv,Jra,cua,Yu,osa,Sw,Nm,gt,Op,kg,Dp,Tk,at,Hi,On,iO,Hva,JDa,ODa,Wp,wDa,_Da,_Da,_Da,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa,fKa];var Pb=[hKa,MBa];var Qb=[Hla,lc,kc,Hla];var Rb=[yHa,Ixa,nE,pE,Vi,pD,JP,Cwa,nx,wq,CS,wz,HV,R7,Ixa,OE,RE,SV,Uoa,UN,DM,a7,X6,kta,kta,m5,n5,Bxa,Foa,V7,W7,vxa,uD,Ira,Ds,Cwa,JU,lC,AT,eja,$Y,Nq,HX,JF,wN,nj,Mba,gia,iea,Ye,p5,dea,GA,Aaa,gc,tO,vp,Wja,ue,qy,Gc,ay,QV,QV,pf,ko,_s,jx,dm,CCa,Dl,vk,PB,eA,se,Yg,ic,x4,bK,Zh,bs,fc,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa,yHa];var Sb=[q9,Dg,Gg,q9];var Tb=[aza,El,Gp,Tw,F5,F5,jp,_i,h_,WP,Er,aza,aza,aza,aza,aza];var Ub=[KJa,Aj];var Vb=[Hwa,Oh,_f,Kh,Vf,Hwa,Hwa,Hwa];var Wb=[Tpa,Qe,Re,Fe,He,Tpa,Tpa,Tpa];var Xb=[HJa,iz,Bl,kma,kma,gma,gma,fma,fma,Rja,Rja,Ika,Ika,Ika,Ika,Ika,Ika,Ika,Ika,xja,vBa,Dha,Jda,dja,vBa,pga,sqa,vma,uma,tma,qE,Jk,qBa,qBa,qBa,qBa,Jq,Bq,Br,mr,nta,Wsa,rGa,hva,iva,nDa,Jta,vY,JH,l6,Uga,lj,Rta,Vea,vm,zCa,UAa,nK,Fw,Cea,XX,BR,wj,jn,bga,K2,iv,c3,vj,YV,QY,GL,Tga,Zp,zra,NK,Go,vI,P7,fI,Una,tga,vq,$Q,EN,sM,SK,kaa,Hy,bga,wK,cna,EN,KM,fh,Rh,w$,J$,zaa,c3,BY,sQ,FO,vza,EN,EN,cn,UX,CM,cK,$1,aj,Mi,gj,u1,jM,EN,hsa,Zda,DR,EN,EN,EN,EL,uz,WT,EL,io,yra,uq,bN,kE,A3,GK,EL,tn,cra,KM,lo,T_,K$,KM,rk,I$,RY,sra,oo,Tv,rz,Vm,Um,IQ,pq,Th,Dn,EN,Mc,N1,Up,sM,sM,ACa,ZAa,a9,x6,C7,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa,HJa];var Yb=[hAa,rN,pO,Ol,Wr,Vr,rs,im,Qr,Sr,is,rra,Dka,CD,rK,d6,a_,rra,Rna,rra,wka,SQ,Ho,rw,hAa,hAa,hAa,hAa,hAa,hAa,hAa,hAa];var Zb=[JLa,JT,CT,BT,jO,Zua,dsa,yia,zia,Eta,A4,Fla,rga,Vja,_da,K6,Uja,via,gha,fha,ema,_ia,lka,Ina,Nfa,dia,Jha,sja,aBa,Wxa,zza,Qla,yfa,cia,Bma,sha,Iha,Pga,eha,bia,Jja,sxa,QDa,Wwa,owa,Tva,Twa,ela,mka,Lpa,sda,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa,JLa];var _b=[_Ca,Kfa,G1,X3,S1,ega,zL,dp,og,j9,ok,pw,s5,kS,q3,IM,qU,Gda,tv,oV,eT,Ex,Bt,eo,L1,hu,Ee,yj,Si,Bj,_Ca,_Ca];var $b=[sJa,qza,RAa,Kk,Xk,Cma,Iia,xia,wia,qza,RAa,RAa,RAa,ZS,uU,cV,lV,dV,YS,ZT,ET,uT,eaa,KT,U2,_T,tR,Ej,FX,e1,XW,WR,QT,cS,qza,NQ,QW,qG,lS,jU,ah,FT,GT,dU,bU,Yh,qP,A0,YU,aT,iT,nz,Ue,HT,RT,bT,IS,kU,MR,Dta,QF,fG,X7,iG,Tna,mD,Sn,gX,AO,YX,NM,$la,aN,ni,bQ,Ot,st,Nn,cfa,BAa,pt,lha,Ypa,tW,Tq,Hz,Wf,Ey,Bi,Rp,nn,Aia,fQ,Fy,Fy,dG,lf,bd,L5,vv,pe,Pk,B4,EE,Lr,Av,Lq,_v,Ey,$v,Zt,tr,Mk,HF,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,nN,ON,so,OM,$y,Ky,Ky,Mw,Lw,mt,gG,aD,$t,Mt,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa,sJa];var ac=[OLa,RJa,vw,JZ,Zza,XJa,KLa,Sc,SZ,Jwa,BQ,xua,wua,Pua,Oua,Vsa,Usa,Ksa,Lsa,qua,pua,Eoa,Doa,Coa,Boa,yta,xta,wta,vta,foa,eoa,doa,coa,soa,roa,qoa,poa,sua,rua,Eda,dKa,Yla,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa,OLa];var bc=[mta,rf,qf,sP,uP,xm,wl,Xea,Xea,nP,rP,mta,mta,mta,mta,mta];var cc=[MAa,sj,rj,qj,pj,MAa,MAa,MAa];var dc=[ZDa,Q4,rva,Bp,lg,ij,Kea,rva,lQ,yR,ZR,aS,_R,kQ,Hj,dR,JQ,AQ,PQ,eR,KO,iP,YQ,IP,nO,MP,uR,KQ,LQ,mR,jR,RM,VR,nQ,tQ,MQ,ZQ,oQ,dQ,vR,_O,iy,Gba,Gba,VF,Nw,I2,dT,cB,_c,DH,vS,qwa,yo,Vh,$C,FM,wma,vS,jz,fA,Pz,fz,cz,jw,fv,cx,vS,ex,pr,cI,vS,vS,Cv,oz,Kv,jf,vS,vS,r7,pr,pr,pr,my,$o,Dq,nq,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa,ZDa];return{_BinaryenGetFunctionTypeBySignature:Kq,_BinaryenMulInt32:LLa,_RelooperRenderAndDispose:Pu,_BinaryenDivFloat64:xKa,_BinaryenEqZInt32:lLa,_BinaryenDivUInt64:YKa,_BinaryenCtzInt32:LLa,_BinaryenBreak:Qs,_BinaryenNegFloat32:dLa,_bitshift64Lshr:Bna,_BinaryenNearestFloat32:CLa,_BinaryenUnary:dz,__GLOBAL__sub_I_wasm_cpp:Ut,_BinaryenCopySignFloat64:kKa,___cxa_demangle:dh,_BinaryenAddExport:_C,_BinaryenMaxFloat32:wKa,_bitshift64Ashr:Lka,_sbrk:PV,_memcpy:rq,_BinaryenAddFloat64:zKa,_BinaryenLeUInt32:lLa,__GLOBAL__sub_I_InstrumentLocals_cpp:taa,_BinaryenNeFloat64:MKa,_BinaryenRemSInt64:LKa,_BinaryenReinterpretInt32:kLa,_BinaryenLiteralFloat64:FW,_BinaryenFloorFloat32:FKa,_BinaryenShrUInt64:CKa,_BinaryenExtendSInt32:pLa,_BinaryenRotLInt32:JKa,_BinaryenPromoteFloat32:gLa,_BinaryenSqrtFloat32:hLa,__GLOBAL__sub_I_OptimizeInstructions_cpp:Kna,___cxa_can_catch:h2,_BinaryenTruncSFloat32ToInt64:aLa,_BinaryenEqFloat64:WKa,_BinaryenModuleAutoDrop:QL,_BinaryenGeFloat64:UKa,_emscripten_get_global_libc:cKa,dynCall_id:YDa,_BinaryenSubFloat32:qKa,__GLOBAL__sub_I_LogExecution_cpp:YIa,_BinaryenLeFloat32:RKa,_BinaryenConst:Ek,_free:Xe,__GLOBAL__sub_I_wasm_emscripten_cpp:sIa,stackSave:oKa,dynCall_viiiii:Bqa,_BinaryenCallImport:Wm,_BinaryenSwitch:hl,_BinaryenModuleOptimize:PL,_BinaryenModuleCreate:WI,runPostSets:zoa,_BinaryenClzInt32:NLa,__GLOBAL__sub_I_threads_cpp:uJa,dynCall_viiiiii:pma,dynCall_iiiiii:Soa,_RelooperCreate:Pna,_BinaryenUndefined:BKa,_BinaryenModuleInterpret:BH,_BinaryenTruncUFloat64ToInt32:KKa,_BinaryenNeInt64:BLa,_BinaryenGeUInt64:sLa,_RelooperAddBranchForSwitch:Hk,_BinaryenConvertUInt32ToFloat64:IKa,_BinaryenAbsFloat64:zLa,_BinaryenModulePrintAsmjs:Lz,_BinaryenLtSInt64:iLa,_BinaryenAddInt32:NLa,_BinaryenShrUInt32:DKa,_BinaryenInt64:LLa,setThrew:KAa,_BinaryenConvertSInt64ToFloat64:DLa,_BinaryenRemUInt32:dLa,dynCall_vii:LAa,_BinaryenReinterpretFloat32:ALa,_BinaryenNeFloat32:NKa,_BinaryenEqInt64:DLa,_malloc:rc,_BinaryenSubInt64:aLa,dynCall_iiiii:zsa,_BinaryenTruncFloat64:ELa,___cxa_is_pointer_type:Pva,_BinaryenDivSInt64:ZKa,__GLOBAL__sub_I_optimizer_shared_cpp:Sla,_BinaryenFloat64:HLa,_BinaryenDivFloat32:yKa,_BinaryenSetAPITracing:E1,stackAlloc:axa,_BinaryenAddFunction:Ii,_BinaryenLtUInt32:hLa,_BinaryenCall:_m,_BinaryenHasFeature:ILa,_BinaryenAddFunctionType:ml,___divdi3:LK,getTempRet0:mKa,_BinaryenRemSInt32:eLa,_BinaryenEqZInt64:rLa,_BinaryenBlock:km,_BinaryenModuleValidate:PI,_BinaryenConvertSInt32ToFloat32:bLa,_BinaryenLeSInt32:nLa,_BinaryenMulInt64:fLa,_BinaryenSetMemory:ig,_BinaryenLtFloat32:PKa,_BinaryenAddImport:Zs,_BinaryenCopySignFloat32:lKa,dynCall_viiii:uta,_BinaryenStore:zo,dynCall_iid:sAa,dynCall_iiiiiiiiiiii:i0,_BinaryenSetLocal:Pw,_BinaryenLeUInt64:kLa,_BinaryenPopcntInt32:HLa,_BinaryenMulFloat64:rKa,_BinaryenModuleDispose:ty,_BinaryenReinterpretInt64:qLa,_BinaryenAddInt64:xLa,_BinaryenOrInt64:ALa,_BinaryenSetGlobal:lx,_BinaryenSelect:Qq,_BinaryenShrSInt32:FKa,__GLOBAL__sub_I_Precompute_cpp:kJa,_BinaryenRotRInt64:GKa,_BinaryenDemoteFloat64:mLa,_BinaryenShlInt64:bLa,_BinaryenExpressionPrint:SF,_BinaryenModuleWrite:pv,_BinaryenGeUInt32:tLa,_BinaryenGeFloat32:VKa,_BinaryenGrowMemory:LLa,_BinaryenDrop:RB,_BinaryenModulePrint:mna,_BinaryenLeFloat64:QKa,dynCall_viiiiiiiiii:Q3,dynCall_iiiiiii:Cka,_BinaryenXorInt32:zLa,_BinaryenEqFloat32:XKa,_BinaryenGeSInt64:uLa,dynCall_viii:Mwa,_RelooperAddBlockWithSwitch:Bu,_BinaryenLiteralFloat64Bits:xQ,dynCall_iiiiiid:Nla,_BinaryenTruncFloat32:HKa,__GLOBAL__sub_I_parser_cpp:Kl,dynCall_iiiiiiiii:Kba,__GLOBAL__sub_I_wasm_binary_cpp:XIa,_BinaryenGtUInt32:pLa,dynCall_iii:$ya,__GLOBAL__sub_I_pass_cpp:AJa,__GLOBAL__sub_I_simple_ast_cpp:jJa,_memset:Kz,_BinaryenTruncUFloat64ToInt64:wLa,_BinaryenTruncSFloat64ToInt64:LKa,_BinaryenNeInt32:CLa,__GLOBAL__sub_I_binaryen_c_cpp:_1,_BinaryenModuleRead:ho,_BinaryenPageSize:NLa,_BinaryenTruncSFloat32ToInt32:xLa,_BinaryenLiteralInt64:qV,_BinaryenGtSInt32:rLa,_BinaryenGtFloat64:SKa,dynCall_viiiiiii:Lha,_i64Subtract:Aoa,_BinaryenCtzInt64:ILa,_BinaryenBinary:Pt,dynCall_i:vJa,_BinaryenLtSInt32:jLa,_BinaryenRemoveExport:$N,_BinaryenNearestFloat64:jLa,_BinaryenConvertSInt64ToFloat32:GKa,_BinaryenRemoveImport:_N,___remdi3:TG,_BinaryenTruncUFloat32ToInt32:fLa,__GLOBAL__sub_I_iostream_cpp:jKa,_BinaryenDivUInt32:HLa,_BinaryenNegFloat64:FLa,_pthread_cond_broadcast:UJa,_BinaryenHost:SG,_BinaryenMinFloat64:tKa,_BinaryenClzInt64:MLa,_BinaryenAndInt64:wLa,_BinaryenFloat32:ILa,dynCall_iiiiiiii:Pfa,_BinaryenAddFloat32:AKa,_BinaryenCurrentMemory:MLa,_BinaryenExtendUInt32:vLa,_BinaryenCeilFloat64:DKa,_BinaryenGetLocal:IF,_BinaryenMaxFloat64:vKa,establishStackSpace:SDa,_BinaryenGtUInt64:oLa,_emscripten_replace_memory:Hb,_BinaryenAbsFloat32:GLa,_BinaryenReturn:OD,__GLOBAL__sub_I_LegalizeJSInterface_cpp:sHa,dynCall_v:MJa,_BinaryenGetGlobal:dC,_RelooperAddBranch:Xq,__GLOBAL__sub_I_RelooperJumpThreading_cpp:tGa,_llvm_bswap_i32:bza,_BinaryenUnreachable:BW,_BinaryenLoop:lw,_BinaryenLeSInt64:mLa,_BinaryenConvertUInt64ToFloat32:BLa,_BinaryenSubFloat64:pKa,___udivdi3:Uxa,_BinaryenLtFloat64:OKa,_BinaryenTruncUFloat32ToInt64:ZKa,_BinaryenRotLInt64:IKa,_BinaryenEqInt32:ELa,_BinaryenConvertUInt64ToFloat64:iLa,_BinaryenSetStart:ZK,_BinaryenSqrtFloat64:nLa,__GLOBAL__sub_I_shared_constants_cpp:Ro,_BinaryenShrSInt64:EKa,_BinaryenMulFloat32:sKa,_BinaryenCallIndirect:Al,_fflush:ZP,setTempRet0:aKa,_BinaryenModuleParse:Yo,_BinaryenLiteralFloat32Bits:TR,_BinaryenGtFloat32:TKa,_BinaryenPopcntInt64:eLa,_pthread_mutex_lock:UJa,_BinaryenNone:NLa,_BinaryenRotRInt32:HKa,_BinaryenTruncSFloat64ToInt32:YKa,_RelooperAddBlock:Dz,_BinaryenConvertSInt32ToFloat64:CKa,_BinaryenWrapInt64:tLa,_BinaryenOrInt32:GLa,_BinaryenIf:us,_BinaryenFloorFloat64:JKa,_bitshift64Shl:gna,___uremdi3:Bba,_BinaryenGtSInt64:qLa,_BinaryenLiteralFloat32:GW,__GLOBAL__sub_I_InstrumentMemory_cpp:cBa,_BinaryenLiteralInt32:DW,_BinaryenReinterpretFloat64:$Ka,_i64Add:Hsa,_BinaryenXorInt64:$Ka,_BinaryenTeeLocal:Ow,_BinaryenConvertUInt32ToFloat32:EKa,_pthread_mutex_unlock:UJa,_BinaryenNop:RX,stackRestore:_Ja,_BinaryenAndInt32:FLa,_BinaryenRemUInt64:KKa,_BinaryenGeSInt32:vLa,__GLOBAL__I_000101:JJa,_BinaryenInt32:MLa,___errno_location:nKa,dynCall_viiiiiiiiiiiiiii:dS,_BinaryenCeilFloat32:cLa,dynCall_ii:kDa,dynCall_vi:zFa,dynCall_iiii:Dva,dynCall_iiiiid:Gpa,_memmove:S0,_BinaryenAddGlobal:ut,_BinaryenLtUInt64:gLa,_BinaryenMinFloat32:uKa,_BinaryenSetFunctionTable:Zj,_BinaryenShlInt32:cLa,_BinaryenSubInt32:MLa,___muldi3:oea,_BinaryenLoad:Hp,_BinaryenDivSInt32:ILa}})


// EMSCRIPTEN_END_ASM
(a.qc,a.rc,I);a._BinaryenGetFunctionTypeBySignature=g._BinaryenGetFunctionTypeBySignature;a._BinaryenMulInt32=g._BinaryenMulInt32;a._BinaryenDivFloat64=g._BinaryenDivFloat64;a._BinaryenEqZInt32=g._BinaryenEqZInt32;a._BinaryenDivUInt64=g._BinaryenDivUInt64;a._BinaryenCtzInt32=g._BinaryenCtzInt32;a._BinaryenBreak=g._BinaryenBreak;a._BinaryenNegFloat32=g._BinaryenNegFloat32;
a._bitshift64Lshr=g._bitshift64Lshr;a._BinaryenNearestFloat32=g._BinaryenNearestFloat32;a._BinaryenUnary=g._BinaryenUnary;var Jb=a.__GLOBAL__sub_I_wasm_cpp=g.__GLOBAL__sub_I_wasm_cpp;a._BinaryenCopySignFloat64=g._BinaryenCopySignFloat64;a._BinaryenReturn=g._BinaryenReturn;a._BinaryenAddExport=g._BinaryenAddExport;a._BinaryenOrInt32=g._BinaryenOrInt32;a._BinaryenMaxFloat32=g._BinaryenMaxFloat32;a._bitshift64Ashr=g._bitshift64Ashr;var Tb=a.__GLOBAL__sub_I_LogExecution_cpp=g.__GLOBAL__sub_I_LogExecution_cpp;
a._sbrk=g._sbrk;a._memcpy=g._memcpy;a._BinaryenAddFloat64=g._BinaryenAddFloat64;a._BinaryenLeUInt32=g._BinaryenLeUInt32;var Wb=a.__GLOBAL__sub_I_InstrumentLocals_cpp=g.__GLOBAL__sub_I_InstrumentLocals_cpp;a._BinaryenNeFloat64=g._BinaryenNeFloat64;a._BinaryenRemSInt64=g._BinaryenRemSInt64;a._BinaryenReinterpretInt32=g._BinaryenReinterpretInt32;a.stackAlloc=g.stackAlloc;a._BinaryenFloorFloat32=g._BinaryenFloorFloat32;a._BinaryenExtendSInt32=g._BinaryenExtendSInt32;a._BinaryenRotLInt32=g._BinaryenRotLInt32;
a._BinaryenPromoteFloat32=g._BinaryenPromoteFloat32;a._BinaryenTruncSFloat64ToInt32=g._BinaryenTruncSFloat64ToInt32;a._BinaryenXorInt64=g._BinaryenXorInt64;a.___cxa_can_catch=g.___cxa_can_catch;a._BinaryenTruncSFloat32ToInt64=g._BinaryenTruncSFloat32ToInt64;a._BinaryenEqFloat64=g._BinaryenEqFloat64;a._BinaryenModuleAutoDrop=g._BinaryenModuleAutoDrop;a._BinaryenGeFloat64=g._BinaryenGeFloat64;a._emscripten_get_global_libc=g._emscripten_get_global_libc;a._BinaryenSubFloat32=g._BinaryenSubFloat32;a._BinaryenCeilFloat64=
g._BinaryenCeilFloat64;a._BinaryenLeFloat32=g._BinaryenLeFloat32;a._BinaryenConst=g._BinaryenConst;var U=a._free=g._free,Mb=a.__GLOBAL__sub_I_wasm_emscripten_cpp=g.__GLOBAL__sub_I_wasm_emscripten_cpp;a.stackSave=g.stackSave;a._BinaryenCallImport=g._BinaryenCallImport;a._BinaryenSwitch=g._BinaryenSwitch;a._BinaryenModuleCreate=g._BinaryenModuleCreate;a.runPostSets=g.runPostSets;a._BinaryenClzInt32=g._BinaryenClzInt32;var Lb=a.__GLOBAL__sub_I_threads_cpp=g.__GLOBAL__sub_I_threads_cpp;a._RelooperCreate=
g._RelooperCreate;a._BinaryenUndefined=g._BinaryenUndefined;a._BinaryenModuleInterpret=g._BinaryenModuleInterpret;a._BinaryenTruncUFloat64ToInt32=g._BinaryenTruncUFloat64ToInt32;a._BinaryenNeInt64=g._BinaryenNeInt64;a._BinaryenGeUInt64=g._BinaryenGeUInt64;a._RelooperAddBranchForSwitch=g._RelooperAddBranchForSwitch;var Sb=a.__GLOBAL__sub_I_OptimizeInstructions_cpp=g.__GLOBAL__sub_I_OptimizeInstructions_cpp;a._BinaryenConvertUInt32ToFloat64=g._BinaryenConvertUInt32ToFloat64;a._BinaryenAbsFloat64=g._BinaryenAbsFloat64;
a._BinaryenModulePrintAsmjs=g._BinaryenModulePrintAsmjs;a._BinaryenLtSInt64=g._BinaryenLtSInt64;a._BinaryenAddInt32=g._BinaryenAddInt32;a._BinaryenShrUInt32=g._BinaryenShrUInt32;a._BinaryenInt64=g._BinaryenInt64;a.setThrew=g.setThrew;a._BinaryenConvertSInt64ToFloat64=g._BinaryenConvertSInt64ToFloat64;a._BinaryenRemUInt32=g._BinaryenRemUInt32;a._BinaryenReinterpretFloat32=g._BinaryenReinterpretFloat32;a._BinaryenMaxFloat64=g._BinaryenMaxFloat64;a._BinaryenSubInt64=g._BinaryenSubInt64;var Kb=a.__GLOBAL__sub_I_shared_constants_cpp=
g.__GLOBAL__sub_I_shared_constants_cpp;a._BinaryenTruncFloat64=g._BinaryenTruncFloat64;a.___cxa_is_pointer_type=g.___cxa_is_pointer_type;a._BinaryenDivSInt64=g._BinaryenDivSInt64;var Nb=a.__GLOBAL__sub_I_optimizer_shared_cpp=g.__GLOBAL__sub_I_optimizer_shared_cpp;a._BinaryenFloat64=g._BinaryenFloat64;a._BinaryenSetAPITracing=g._BinaryenSetAPITracing;a._BinaryenLiteralFloat64=g._BinaryenLiteralFloat64;a._BinaryenAddFunction=g._BinaryenAddFunction;a._BinaryenLtUInt32=g._BinaryenLtUInt32;a._BinaryenSqrtFloat32=
g._BinaryenSqrtFloat32;a._BinaryenHasFeature=g._BinaryenHasFeature;a._BinaryenConvertSInt32ToFloat32=g._BinaryenConvertSInt32ToFloat32;a._BinaryenUnreachable=g._BinaryenUnreachable;a.___divdi3=g.___divdi3;a.getTempRet0=g.getTempRet0;a._BinaryenRemSInt32=g._BinaryenRemSInt32;a._BinaryenEqZInt64=g._BinaryenEqZInt64;a._BinaryenBlock=g._BinaryenBlock;a._BinaryenModuleValidate=g._BinaryenModuleValidate;a._BinaryenAddFunctionType=g._BinaryenAddFunctionType;a._BinaryenLeSInt32=g._BinaryenLeSInt32;a._BinaryenMulInt64=
g._BinaryenMulInt64;a._BinaryenSetMemory=g._BinaryenSetMemory;a._BinaryenLtFloat32=g._BinaryenLtFloat32;a._BinaryenCopySignFloat32=g._BinaryenCopySignFloat32;a._BinaryenRotRInt32=g._BinaryenRotRInt32;a._BinaryenStore=g._BinaryenStore;a._BinaryenSetLocal=g._BinaryenSetLocal;a._BinaryenLeUInt64=g._BinaryenLeUInt64;a._BinaryenPopcntInt32=g._BinaryenPopcntInt32;a._BinaryenMulFloat64=g._BinaryenMulFloat64;a._BinaryenModuleDispose=g._BinaryenModuleDispose;a._BinaryenReinterpretInt64=g._BinaryenReinterpretInt64;
a.stackRestore=g.stackRestore;a._BinaryenOrInt64=g._BinaryenOrInt64;a._BinaryenSetGlobal=g._BinaryenSetGlobal;a._BinaryenSelect=g._BinaryenSelect;a._BinaryenShrSInt32=g._BinaryenShrSInt32;var Rb=a.__GLOBAL__sub_I_Precompute_cpp=g.__GLOBAL__sub_I_Precompute_cpp;a._BinaryenRotRInt64=g._BinaryenRotRInt64;a._BinaryenDemoteFloat64=g._BinaryenDemoteFloat64;a._BinaryenShlInt64=g._BinaryenShlInt64;var Ob=a.__GLOBAL__sub_I_simple_ast_cpp=g.__GLOBAL__sub_I_simple_ast_cpp;a._BinaryenExpressionPrint=g._BinaryenExpressionPrint;
a._BinaryenModuleWrite=g._BinaryenModuleWrite;a._BinaryenGeUInt32=g._BinaryenGeUInt32;a._BinaryenGeFloat32=g._BinaryenGeFloat32;a._BinaryenRemUInt64=g._BinaryenRemUInt64;a._BinaryenLoop=g._BinaryenLoop;a._BinaryenLeFloat64=g._BinaryenLeFloat64;a._BinaryenXorInt32=g._BinaryenXorInt32;a._BinaryenEqFloat32=g._BinaryenEqFloat32;a._BinaryenGeSInt64=g._BinaryenGeSInt64;a._RelooperAddBlockWithSwitch=g._RelooperAddBlockWithSwitch;a._BinaryenLiteralFloat64Bits=g._BinaryenLiteralFloat64Bits;a._BinaryenTruncFloat32=
g._BinaryenTruncFloat32;var Gb=a.__GLOBAL__sub_I_parser_cpp=g.__GLOBAL__sub_I_parser_cpp,Ib=a.__GLOBAL__sub_I_wasm_binary_cpp=g.__GLOBAL__sub_I_wasm_binary_cpp;a._BinaryenGtUInt32=g._BinaryenGtUInt32;var Xb=a.__GLOBAL__sub_I_pass_cpp=g.__GLOBAL__sub_I_pass_cpp;a._BinaryenConvertUInt64ToFloat32=g._BinaryenConvertUInt64ToFloat32;a._memset=g._memset;a._BinaryenTruncUFloat64ToInt64=g._BinaryenTruncUFloat64ToInt64;a._BinaryenTruncSFloat64ToInt64=g._BinaryenTruncSFloat64ToInt64;a._BinaryenNeInt32=g._BinaryenNeInt32;
var Pb=a.__GLOBAL__sub_I_binaryen_c_cpp=g.__GLOBAL__sub_I_binaryen_c_cpp;a._BinaryenModuleRead=g._BinaryenModuleRead;a._BinaryenPageSize=g._BinaryenPageSize;a._BinaryenTruncSFloat32ToInt32=g._BinaryenTruncSFloat32ToInt32;a._BinaryenLiteralInt64=g._BinaryenLiteralInt64;a._BinaryenGtSInt32=g._BinaryenGtSInt32;a._BinaryenGtFloat64=g._BinaryenGtFloat64;a._i64Subtract=g._i64Subtract;a._BinaryenCtzInt64=g._BinaryenCtzInt64;a._BinaryenBinary=g._BinaryenBinary;a._BinaryenLtSInt32=g._BinaryenLtSInt32;a._BinaryenRemoveExport=
g._BinaryenRemoveExport;a._BinaryenNearestFloat64=g._BinaryenNearestFloat64;a._BinaryenConvertSInt64ToFloat32=g._BinaryenConvertSInt64ToFloat32;a._BinaryenRemoveImport=g._BinaryenRemoveImport;a.___remdi3=g.___remdi3;a._BinaryenTruncUFloat32ToInt32=g._BinaryenTruncUFloat32ToInt32;var Hb=a.__GLOBAL__sub_I_iostream_cpp=g.__GLOBAL__sub_I_iostream_cpp;a._BinaryenDivUInt32=g._BinaryenDivUInt32;a._BinaryenNegFloat64=g._BinaryenNegFloat64;a._BinaryenLtUInt64=g._BinaryenLtUInt64;a._pthread_cond_broadcast=
g._pthread_cond_broadcast;a._BinaryenHost=g._BinaryenHost;a._BinaryenMinFloat64=g._BinaryenMinFloat64;a._BinaryenClzInt64=g._BinaryenClzInt64;a._BinaryenAndInt64=g._BinaryenAndInt64;a._BinaryenFloat32=g._BinaryenFloat32;a._BinaryenAddFloat32=g._BinaryenAddFloat32;a._BinaryenExtendUInt32=g._BinaryenExtendUInt32;a._BinaryenGetLocal=g._BinaryenGetLocal;a.establishStackSpace=g.establishStackSpace;var L=a._malloc=g._malloc;a._BinaryenNeFloat32=g._BinaryenNeFloat32;a._BinaryenRotLInt64=g._BinaryenRotLInt64;
var Eb=a._emscripten_replace_memory=g._emscripten_replace_memory;a._BinaryenAbsFloat32=g._BinaryenAbsFloat32;a._BinaryenDivFloat32=g._BinaryenDivFloat32;var Ub=a.__GLOBAL__sub_I_LegalizeJSInterface_cpp=g.__GLOBAL__sub_I_LegalizeJSInterface_cpp;a._BinaryenGetGlobal=g._BinaryenGetGlobal;a._RelooperAddBranch=g._RelooperAddBranch;var Qb=a.__GLOBAL__sub_I_RelooperJumpThreading_cpp=g.__GLOBAL__sub_I_RelooperJumpThreading_cpp;a._llvm_bswap_i32=g._llvm_bswap_i32;a._BinaryenLtFloat64=g._BinaryenLtFloat64;
a._BinaryenModulePrint=g._BinaryenModulePrint;a._BinaryenLeSInt64=g._BinaryenLeSInt64;a._BinaryenAddImport=g._BinaryenAddImport;a._BinaryenSubFloat64=g._BinaryenSubFloat64;a.___udivdi3=g.___udivdi3;a._BinaryenTruncUFloat32ToInt64=g._BinaryenTruncUFloat32ToInt64;a._BinaryenGtUInt64=g._BinaryenGtUInt64;a.setTempRet0=g.setTempRet0;a._BinaryenEqInt32=g._BinaryenEqInt32;a._BinaryenConvertUInt64ToFloat64=g._BinaryenConvertUInt64ToFloat64;a._BinaryenSetStart=g._BinaryenSetStart;a._BinaryenSqrtFloat64=g._BinaryenSqrtFloat64;
a._bitshift64Shl=g._bitshift64Shl;a._BinaryenShrSInt64=g._BinaryenShrSInt64;a._BinaryenSetFunctionTable=g._BinaryenSetFunctionTable;a._BinaryenCallIndirect=g._BinaryenCallIndirect;a._fflush=g._fflush;a._BinaryenShrUInt64=g._BinaryenShrUInt64;a._BinaryenModuleParse=g._BinaryenModuleParse;a._BinaryenLiteralFloat32Bits=g._BinaryenLiteralFloat32Bits;var Fb=a.__GLOBAL__I_000101=g.__GLOBAL__I_000101;a._BinaryenGtFloat32=g._BinaryenGtFloat32;a._BinaryenPopcntInt64=g._BinaryenPopcntInt64;a._pthread_mutex_lock=
g._pthread_mutex_lock;a._BinaryenNone=g._BinaryenNone;a.___cxa_demangle=g.___cxa_demangle;a._BinaryenCall=g._BinaryenCall;a._RelooperAddBlock=g._RelooperAddBlock;a._BinaryenConvertSInt32ToFloat64=g._BinaryenConvertSInt32ToFloat64;a._BinaryenWrapInt64=g._BinaryenWrapInt64;a.___muldi3=g.___muldi3;a._BinaryenIf=g._BinaryenIf;a._BinaryenFloorFloat64=g._BinaryenFloorFloat64;a._BinaryenModuleOptimize=g._BinaryenModuleOptimize;a.___uremdi3=g.___uremdi3;a._BinaryenShlInt32=g._BinaryenShlInt32;a._BinaryenLiteralFloat32=
g._BinaryenLiteralFloat32;var Vb=a.__GLOBAL__sub_I_InstrumentMemory_cpp=g.__GLOBAL__sub_I_InstrumentMemory_cpp;a._BinaryenLiteralInt32=g._BinaryenLiteralInt32;a._BinaryenReinterpretFloat64=g._BinaryenReinterpretFloat64;a._BinaryenMulFloat32=g._BinaryenMulFloat32;a._i64Add=g._i64Add;a._BinaryenEqInt64=g._BinaryenEqInt64;a._BinaryenConvertUInt32ToFloat32=g._BinaryenConvertUInt32ToFloat32;a._pthread_mutex_unlock=g._pthread_mutex_unlock;a._BinaryenNop=g._BinaryenNop;a._BinaryenAddInt64=g._BinaryenAddInt64;
a._BinaryenAndInt32=g._BinaryenAndInt32;a._BinaryenDrop=g._BinaryenDrop;a._BinaryenGeSInt32=g._BinaryenGeSInt32;a._BinaryenCurrentMemory=g._BinaryenCurrentMemory;a._BinaryenInt32=g._BinaryenInt32;a.___errno_location=g.___errno_location;a._BinaryenCeilFloat32=g._BinaryenCeilFloat32;a._memmove=g._memmove;a._BinaryenAddGlobal=g._BinaryenAddGlobal;a._BinaryenGrowMemory=g._BinaryenGrowMemory;a._BinaryenMinFloat32=g._BinaryenMinFloat32;a._RelooperRenderAndDispose=g._RelooperRenderAndDispose;a._BinaryenGtSInt64=
g._BinaryenGtSInt64;a._BinaryenSubInt32=g._BinaryenSubInt32;a._BinaryenTeeLocal=g._BinaryenTeeLocal;a._BinaryenLoad=g._BinaryenLoad;a._BinaryenDivSInt32=g._BinaryenDivSInt32;a.dynCall_iiiiiiii=g.dynCall_iiiiiiii;a.dynCall_viiiii=g.dynCall_viiiii;a.dynCall_iiiiiid=g.dynCall_iiiiiid;a.dynCall_vi=g.dynCall_vi;a.dynCall_vii=g.dynCall_vii;a.dynCall_iiiiiii=g.dynCall_iiiiiii;a.dynCall_ii=g.dynCall_ii;a.dynCall_id=g.dynCall_id;a.dynCall_iiiiiiiiiiii=g.dynCall_iiiiiiiiiiii;a.dynCall_iiii=g.dynCall_iiii;a.dynCall_viiiiiiiiiiiiiii=
g.dynCall_viiiiiiiiiiiiiii;a.dynCall_viiiiii=g.dynCall_viiiiii;a.dynCall_iid=g.dynCall_iid;a.dynCall_viiiiiii=g.dynCall_viiiiiii;a.dynCall_viiiiiiiiii=g.dynCall_viiiiiiiiii;a.dynCall_iii=g.dynCall_iii;a.dynCall_iiiiii=g.dynCall_iiiiii;a.dynCall_i=g.dynCall_i;a.dynCall_iiiii=g.dynCall_iiiii;a.dynCall_viii=g.dynCall_viii;a.dynCall_v=g.dynCall_v;a.dynCall_iiiiiiiii=g.dynCall_iiiiiiiii;a.dynCall_iiiiid=g.dynCall_iiiiid;a.dynCall_viiii=g.dynCall_viiii;m.Aa=a.stackAlloc;m.Ta=a.stackSave;m.Ba=a.stackRestore;
m.Of=a.establishStackSpace;m.za=a.setTempRet0;m.Vc=a.getTempRet0;a.asm=g;ha.prototype=Error();ha.prototype.constructor=ha;var Db,ob=null,la=function c(){a.calledRun||Ja();a.calledRun||(la=c)};a.callMain=a.Ef=function(c){function b(){for(var a=0;3>a;a++)h.push(0)}c=c||[];ra||(ra=!0,ea(ja));var d=c.length+1,h=[A(T(a.thisProgram),"i8",0)];b();for(var l=0;l<d-1;l+=1)h.push(A(T(c[l]),"i8",0)),b();h.push(0);h=A(h,"i32",0);try{var g=a._main(d,h,0);pb(g,!0)}catch(k){k instanceof ha||("SimulateInfiniteLoop"==
k?a.noExitRuntime=!0:((c=k)&&"object"===typeof k&&k.stack&&(c=[k,k.stack]),a.Ra("exception thrown: "+c),a.quit(1,k)))}finally{}};a.run=a.run=Ja;a.exit=a.exit=pb;var qb=[];a.abort=a.abort=G;if(a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();var nb=!0;a.noInitialRun&&(nb=!1);Ja();a.none=a._BinaryenNone();a.i32=a._BinaryenInt32();a.i64=a._BinaryenInt64();a.f32=a._BinaryenFloat32();a.f64=a._BinaryenFloat64();a.undefined=a._BinaryenUndefined();
a.ClzInt32=a._BinaryenClzInt32();a.CtzInt32=a._BinaryenCtzInt32();a.PopcntInt32=a._BinaryenPopcntInt32();a.NegFloat32=a._BinaryenNegFloat32();a.AbsFloat32=a._BinaryenAbsFloat32();a.CeilFloat32=a._BinaryenCeilFloat32();a.FloorFloat32=a._BinaryenFloorFloat32();a.TruncFloat32=a._BinaryenTruncFloat32();a.NearestFloat32=a._BinaryenNearestFloat32();a.SqrtFloat32=a._BinaryenSqrtFloat32();a.EqZInt32=a._BinaryenEqZInt32();a.ClzInt64=a._BinaryenClzInt64();a.CtzInt64=a._BinaryenCtzInt64();a.PopcntInt64=a._BinaryenPopcntInt64();
a.NegFloat64=a._BinaryenNegFloat64();a.AbsFloat64=a._BinaryenAbsFloat64();a.CeilFloat64=a._BinaryenCeilFloat64();a.FloorFloat64=a._BinaryenFloorFloat64();a.TruncFloat64=a._BinaryenTruncFloat64();a.NearestFloat64=a._BinaryenNearestFloat64();a.SqrtFloat64=a._BinaryenSqrtFloat64();a.EqZInt64=a._BinaryenEqZInt64();a.ExtendSInt32=a._BinaryenExtendSInt32();a.ExtendUInt32=a._BinaryenExtendUInt32();a.WrapInt64=a._BinaryenWrapInt64();a.TruncSFloat32ToInt32=a._BinaryenTruncSFloat32ToInt32();a.TruncSFloat32ToInt64=
a._BinaryenTruncSFloat32ToInt64();a.TruncUFloat32ToInt32=a._BinaryenTruncUFloat32ToInt32();a.TruncUFloat32ToInt64=a._BinaryenTruncUFloat32ToInt64();a.TruncSFloat64ToInt32=a._BinaryenTruncSFloat64ToInt32();a.TruncSFloat64ToInt64=a._BinaryenTruncSFloat64ToInt64();a.TruncUFloat64ToInt32=a._BinaryenTruncUFloat64ToInt32();a.TruncUFloat64ToInt64=a._BinaryenTruncUFloat64ToInt64();a.ReinterpretFloat32=a._BinaryenReinterpretFloat32();a.ReinterpretFloat64=a._BinaryenReinterpretFloat64();a.ConvertSInt32ToFloat32=
a._BinaryenConvertSInt32ToFloat32();a.ConvertSInt32ToFloat64=a._BinaryenConvertSInt32ToFloat64();a.ConvertUInt32ToFloat32=a._BinaryenConvertUInt32ToFloat32();a.ConvertUInt32ToFloat64=a._BinaryenConvertUInt32ToFloat64();a.ConvertSInt64ToFloat32=a._BinaryenConvertSInt64ToFloat32();a.ConvertSInt64ToFloat64=a._BinaryenConvertSInt64ToFloat64();a.ConvertUInt64ToFloat32=a._BinaryenConvertUInt64ToFloat32();a.ConvertUInt64ToFloat64=a._BinaryenConvertUInt64ToFloat64();a.PromoteFloat32=a._BinaryenPromoteFloat32();
a.DemoteFloat64=a._BinaryenDemoteFloat64();a.ReinterpretInt32=a._BinaryenReinterpretInt32();a.ReinterpretInt64=a._BinaryenReinterpretInt64();a.AddInt32=a._BinaryenAddInt32();a.SubInt32=a._BinaryenSubInt32();a.MulInt32=a._BinaryenMulInt32();a.DivSInt32=a._BinaryenDivSInt32();a.DivUInt32=a._BinaryenDivUInt32();a.RemSInt32=a._BinaryenRemSInt32();a.RemUInt32=a._BinaryenRemUInt32();a.AndInt32=a._BinaryenAndInt32();a.OrInt32=a._BinaryenOrInt32();a.XorInt32=a._BinaryenXorInt32();a.ShlInt32=a._BinaryenShlInt32();
a.ShrUInt32=a._BinaryenShrUInt32();a.ShrSInt32=a._BinaryenShrSInt32();a.RotLInt32=a._BinaryenRotLInt32();a.RotRInt32=a._BinaryenRotRInt32();a.EqInt32=a._BinaryenEqInt32();a.NeInt32=a._BinaryenNeInt32();a.LtSInt32=a._BinaryenLtSInt32();a.LtUInt32=a._BinaryenLtUInt32();a.LeSInt32=a._BinaryenLeSInt32();a.LeUInt32=a._BinaryenLeUInt32();a.GtSInt32=a._BinaryenGtSInt32();a.GtUInt32=a._BinaryenGtUInt32();a.GeSInt32=a._BinaryenGeSInt32();a.GeUInt32=a._BinaryenGeUInt32();a.AddInt64=a._BinaryenAddInt64();a.SubInt64=
a._BinaryenSubInt64();a.MulInt64=a._BinaryenMulInt64();a.DivSInt64=a._BinaryenDivSInt64();a.DivUInt64=a._BinaryenDivUInt64();a.RemSInt64=a._BinaryenRemSInt64();a.RemUInt64=a._BinaryenRemUInt64();a.AndInt64=a._BinaryenAndInt64();a.OrInt64=a._BinaryenOrInt64();a.XorInt64=a._BinaryenXorInt64();a.ShlInt64=a._BinaryenShlInt64();a.ShrUInt64=a._BinaryenShrUInt64();a.ShrSInt64=a._BinaryenShrSInt64();a.RotLInt64=a._BinaryenRotLInt64();a.RotRInt64=a._BinaryenRotRInt64();a.EqInt64=a._BinaryenEqInt64();a.NeInt64=
a._BinaryenNeInt64();a.LtSInt64=a._BinaryenLtSInt64();a.LtUInt64=a._BinaryenLtUInt64();a.LeSInt64=a._BinaryenLeSInt64();a.LeUInt64=a._BinaryenLeUInt64();a.GtSInt64=a._BinaryenGtSInt64();a.GtUInt64=a._BinaryenGtUInt64();a.GeSInt64=a._BinaryenGeSInt64();a.GeUInt64=a._BinaryenGeUInt64();a.AddFloat32=a._BinaryenAddFloat32();a.SubFloat32=a._BinaryenSubFloat32();a.MulFloat32=a._BinaryenMulFloat32();a.DivFloat32=a._BinaryenDivFloat32();a.CopySignFloat32=a._BinaryenCopySignFloat32();a.MinFloat32=a._BinaryenMinFloat32();
a.MaxFloat32=a._BinaryenMaxFloat32();a.EqFloat32=a._BinaryenEqFloat32();a.NeFloat32=a._BinaryenNeFloat32();a.LtFloat32=a._BinaryenLtFloat32();a.LeFloat32=a._BinaryenLeFloat32();a.GtFloat32=a._BinaryenGtFloat32();a.GeFloat32=a._BinaryenGeFloat32();a.AddFloat64=a._BinaryenAddFloat64();a.SubFloat64=a._BinaryenSubFloat64();a.MulFloat64=a._BinaryenMulFloat64();a.DivFloat64=a._BinaryenDivFloat64();a.CopySignFloat64=a._BinaryenCopySignFloat64();a.MinFloat64=a._BinaryenMinFloat64();a.MaxFloat64=a._BinaryenMaxFloat64();
a.EqFloat64=a._BinaryenEqFloat64();a.NeFloat64=a._BinaryenNeFloat64();a.LtFloat64=a._BinaryenLtFloat64();a.LeFloat64=a._BinaryenLeFloat64();a.GtFloat64=a._BinaryenGtFloat64();a.GeFloat64=a._BinaryenGeFloat64();a.PageSize=a._BinaryenPageSize();a.CurrentMemory=a._BinaryenCurrentMemory();a.GrowMemory=a._BinaryenGrowMemory();a.HasFeature=a._BinaryenHasFeature();a.Module=function(c){c||(c=a._BinaryenModuleCreate());this.ptr=c;this.dispose=function(){a._BinaryenModuleDispose(c)};this.addFunctionType=function(b,
d,f){return F(function(){return a._BinaryenAddFunctionType(c,y(b),d,K(f),f.length)})};this.getFunctionTypeBySignature=function(b,d){return F(function(){return a._BinaryenGetFunctionTypeBySignature(c,b,K(d),d.length)})};this.block=function(b,d,f){return F(function(){return a._BinaryenBlock(c,b?y(b):0,K(d),d.length,"undefined"!==typeof f?f:a.undefined)})};this["if"]=function(b,d,f){return a._BinaryenIf(c,b,d,f)};this.loop=function(b,d){return F(function(){return a._BinaryenLoop(c,y(b),d)})};this["break"]=
function(b,d,f){return F(function(){return a._BinaryenBreak(c,y(b),d,f)})};this["switch"]=function(b,d,f,g){return F(function(){var k=[];b.forEach(function(a){k.push(y(a))});return a._BinaryenSwitch(c,K(k),k.length,y(d),f,g)})};this.call=function(b,d,f){return F(function(){return a._BinaryenCall(c,y(b),K(d),d.length,f)})};this.callImport=function(b,d,f){return F(function(){return a._BinaryenCallImport(c,y(b),K(d),d.length,f)})};this.callIndirect=function(b,d,f){return F(function(){return a._BinaryenCallIndirect(c,
b,K(d),d.length,y(f))})};this.getLocal=function(b,d){return a._BinaryenGetLocal(c,b,d)};this.setLocal=function(b,d){return a._BinaryenSetLocal(c,b,d)};this.teeLocal=function(b,d){return a._BinaryenTeeLocal(c,b,d)};this.getGlobal=function(b,d){return a._BinaryenGetGlobal(c,y(b),d)};this.setGlobal=function(b,d){return a._BinaryenSetGlobal(c,y(b),d)};this.currentMemory=function(){return a._BinaryenHost(c,a.CurrentMemory)};this.growMemory=function(b){return a._BinaryenHost(c,a.GrowMemory,null,K([b]),
1)};this.hasFeature=function(b){return a._BinaryenHost(c,a.HasFeature,y(b))};var b=L(16);this.i32={load:function(b,d,f){return a._BinaryenLoad(c,4,!0,b,d,a.i32,f)},load8_s:function(b,d,f){return a._BinaryenLoad(c,1,!0,b,d,a.i32,f)},load8_u:function(b,d,f){return a._BinaryenLoad(c,1,!1,b,d,a.i32,f)},load16_s:function(b,d,f){return a._BinaryenLoad(c,2,!0,b,d,a.i32,f)},load16_u:function(b,d,f){return a._BinaryenLoad(c,2,!1,b,d,a.i32,f)},store:function(b,d,f,g){return a._BinaryenStore(c,4,b,d,f,g,a.i32)},
store8:function(b,d,f,g){return a._BinaryenStore(c,1,b,d,f,g,a.i32)},store16:function(b,d,f,g){return a._BinaryenStore(c,2,b,d,f,g,a.i32)},"const":function(d){a._BinaryenLiteralInt32(b,d);return a._BinaryenConst(c,b)},clz:function(b){return a._BinaryenUnary(c,a.ClzInt32,b)},ctz:function(b){return a._BinaryenUnary(c,a.CtzInt32,b)},popcnt:function(b){return a._BinaryenUnary(c,a.PopcntInt32,b)},eqz:function(b){return a._BinaryenUnary(c,a.EqZInt32,b)},trunc_s:{f32:function(b){return a._BinaryenUnary(c,
a.TruncSFloat32ToInt32,b)},f64:function(b){return a._BinaryenUnary(c,a.TruncSFloat64ToInt32,b)}},trunc_u:{f32:function(b){return a._BinaryenUnary(c,a.TruncUFloat32ToInt32,b)},f64:function(b){return a._BinaryenUnary(c,a.TruncUFloat64ToInt32,b)}},reinterpret:function(b){return a._BinaryenUnary(c,a.ReinterpretFloat32,b)},wrap:function(b){return a._BinaryenUnary(c,a.WrapInt64,b)},add:function(b,d){return a._BinaryenBinary(c,a.AddInt32,b,d)},sub:function(b,d){return a._BinaryenBinary(c,a.SubInt32,b,d)},
mul:function(b,d){return a._BinaryenBinary(c,a.MulInt32,b,d)},div_s:function(b,d){return a._BinaryenBinary(c,a.DivSInt32,b,d)},div_u:function(b,d){return a._BinaryenBinary(c,a.DivUInt32,b,d)},rem_s:function(b,d){return a._BinaryenBinary(c,a.RemSInt32,b,d)},rem_u:function(b,d){return a._BinaryenBinary(c,a.RemUInt32,b,d)},and:function(b,d){return a._BinaryenBinary(c,a.AndInt32,b,d)},or:function(b,d){return a._BinaryenBinary(c,a.OrInt32,b,d)},xor:function(b,d){return a._BinaryenBinary(c,a.XorInt32,b,
d)},shl:function(b,d){return a._BinaryenBinary(c,a.ShlInt32,b,d)},shr_u:function(b,d){return a._BinaryenBinary(c,a.ShrUInt32,b,d)},shr_s:function(b,d){return a._BinaryenBinary(c,a.ShrSInt32,b,d)},rotl:function(b,d){return a._BinaryenBinary(c,a.RotLInt32,b,d)},rotr:function(b,d){return a._BinaryenBinary(c,a.RotRInt32,b,d)},eq:function(b,d){return a._BinaryenBinary(c,a.EqInt32,b,d)},ne:function(b,d){return a._BinaryenBinary(c,a.NeInt32,b,d)},lt_s:function(b,d){return a._BinaryenBinary(c,a.LtSInt32,
b,d)},lt_u:function(b,d){return a._BinaryenBinary(c,a.LtUInt32,b,d)},le_s:function(b,d){return a._BinaryenBinary(c,a.LeSInt32,b,d)},le_u:function(b,d){return a._BinaryenBinary(c,a.LeUInt32,b,d)},gt_s:function(b,d){return a._BinaryenBinary(c,a.GtSInt32,b,d)},gt_u:function(b,d){return a._BinaryenBinary(c,a.GtUInt32,b,d)},ge_s:function(b,d){return a._BinaryenBinary(c,a.GeSInt32,b,d)},ge_u:function(b,d){return a._BinaryenBinary(c,a.GeUInt32,b,d)}};this.i64={load:function(b,d,f){return a._BinaryenLoad(c,
8,!0,b,d,a.i64,f)},load8_s:function(b,d,f){return a._BinaryenLoad(c,1,!0,b,d,a.i64,f)},load8_u:function(b,d,f){return a._BinaryenLoad(c,1,!1,b,d,a.i64,f)},load16_s:function(b,d,f){return a._BinaryenLoad(c,2,!0,b,d,a.i64,f)},load16_u:function(b,d,f){return a._BinaryenLoad(c,2,!1,b,d,a.i64,f)},load32_s:function(b,d,f){return a._BinaryenLoad(c,4,!0,b,d,a.i64,f)},load32_u:function(b,d,f){return a._BinaryenLoad(c,4,!1,b,d,a.i64,f)},store:function(b,d,f,g){return a._BinaryenStore(c,8,b,d,f,g,a.i64)},store8:function(b,
d,f,g){return a._BinaryenStore(c,1,b,d,f,g,a.i64)},store16:function(b,d,f,g){return a._BinaryenStore(c,2,b,d,f,g,a.i64)},store32:function(b,d,f,g){return a._BinaryenStore(c,4,b,d,f,g,a.i64)},"const":function(d,f){a._BinaryenLiteralInt64(b,d,f);return a._BinaryenConst(c,b)},clz:function(b){return a._BinaryenUnary(c,a.ClzInt64,b)},ctz:function(b){return a._BinaryenUnary(c,a.CtzInt64,b)},popcnt:function(b){return a._BinaryenUnary(c,a.PopcntInt64,b)},eqz:function(b){return a._BinaryenUnary(c,a.EqZInt64,
b)},trunc_s:{f32:function(b){return a._BinaryenUnary(c,a.TruncSFloat32ToInt64,b)},f64:function(b){return a._BinaryenUnary(c,a.TruncSFloat64ToInt64,b)}},trunc_u:{f32:function(b){return a._BinaryenUnary(c,a.TruncUFloat32ToInt64,b)},f64:function(b){return a._BinaryenUnary(c,a.TruncUFloat64ToInt64,b)}},reinterpret:function(b){return a._BinaryenUnary(c,a.ReinterpretFloat64,b)},extend_s:function(b){return a._BinaryenUnary(c,a.ExtendSInt32,b)},extend_u:function(b){return a._BinaryenUnary(c,a.ExtendUInt32,
b)},add:function(b,d){return a._BinaryenBinary(c,a.AddInt64,b,d)},sub:function(b,d){return a._BinaryenBinary(c,a.SubInt64,b,d)},mul:function(b,d){return a._BinaryenBinary(c,a.MulInt64,b,d)},div_s:function(b,d){return a._BinaryenBinary(c,a.DivSInt64,b,d)},div_u:function(b,d){return a._BinaryenBinary(c,a.DivUInt64,b,d)},rem_s:function(b,d){return a._BinaryenBinary(c,a.RemSInt64,b,d)},rem_u:function(b,d){return a._BinaryenBinary(c,a.RemUInt64,b,d)},and:function(b,d){return a._BinaryenBinary(c,a.AndInt64,
b,d)},or:function(b,d){return a._BinaryenBinary(c,a.OrInt64,b,d)},xor:function(b,d){return a._BinaryenBinary(c,a.XorInt64,b,d)},shl:function(b,d){return a._BinaryenBinary(c,a.ShlInt64,b,d)},shr_u:function(b,d){return a._BinaryenBinary(c,a.ShrUInt64,b,d)},shr_s:function(b,d){return a._BinaryenBinary(c,a.ShrSInt64,b,d)},rotl:function(b,d){return a._BinaryenBinary(c,a.RotLInt64,b,d)},rotr:function(b,d){return a._BinaryenBinary(c,a.RotRInt64,b,d)},eq:function(b,d){return a._BinaryenBinary(c,a.EqInt64,
b,d)},ne:function(b,d){return a._BinaryenBinary(c,a.NeInt64,b,d)},lt_s:function(b,d){return a._BinaryenBinary(c,a.LtSInt64,b,d)},lt_u:function(b,d){return a._BinaryenBinary(c,a.LtUInt64,b,d)},le_s:function(b,d){return a._BinaryenBinary(c,a.LeSInt64,b,d)},le_u:function(b,d){return a._BinaryenBinary(c,a.LeUInt64,b,d)},gt_s:function(b,d){return a._BinaryenBinary(c,a.GtSInt64,b,d)},gt_u:function(b,d){return a._BinaryenBinary(c,a.GtUInt64,b,d)},ge_s:function(b,d){return a._BinaryenBinary(c,a.GeSInt64,
b,d)},ge_u:function(b,d){return a._BinaryenBinary(c,a.GeUInt64,b,d)}};this.f32={load:function(b,d,f){return a._BinaryenLoad(c,4,!0,b,d,a.f32,f)},store:function(b,d,f,g){return a._BinaryenStore(c,4,b,d,f,g,a.f32)},"const":function(d){a._BinaryenLiteralFloat32(b,d);return a._BinaryenConst(c,b)},const_bits:function(d){a._BinaryenLiteralFloat32Bits(b,d);return a._BinaryenConst(c,b)},neg:function(b){return a._BinaryenUnary(c,a.NegFloat32,b)},abs:function(b){return a._BinaryenUnary(c,a.AbsFloat32,b)},ceil:function(b){return a._BinaryenUnary(c,
a.CeilFloat32,b)},floor:function(b){return a._BinaryenUnary(c,a.FloorFloat32,b)},trunc:function(b){return a._BinaryenUnary(c,a.TruncFloat32,b)},nearest:function(b){return a._BinaryenUnary(c,a.NearestFloat32,b)},sqrt:function(b){return a._BinaryenUnary(c,a.SqrtFloat32,b)},reinterpret:function(b){return a._BinaryenUnary(c,a.ReinterpretInt32,b)},convert_s:{i32:function(b){return a._BinaryenUnary(c,a.ConvertSInt32ToFloat32,b)},i64:function(b){return a._BinaryenUnary(c,a.ConvertSInt64ToFloat32,b)}},convert_u:{i32:function(b){return a._BinaryenUnary(c,
a.ConvertUInt32ToFloat32,b)},i64:function(b){return a._BinaryenUnary(c,a.ConvertUInt64ToFloat32,b)}},demote:function(b){return a._BinaryenUnary(c,a.DemoteFloat64,b)},add:function(b,d){return a._BinaryenBinary(c,a.AddFloat32,b,d)},sub:function(b,d){return a._BinaryenBinary(c,a.SubFloat32,b,d)},mul:function(b,d){return a._BinaryenBinary(c,a.MulFloat32,b,d)},div:function(b,d){return a._BinaryenBinary(c,a.DivFloat32,b,d)},copysign:function(b,d){return a._BinaryenBinary(c,a.CopySignFloat32,b,d)},min:function(b,
d){return a._BinaryenBinary(c,a.MinFloat32,b,d)},max:function(b,d){return a._BinaryenBinary(c,a.MaxFloat32,b,d)},eq:function(b,d){return a._BinaryenBinary(c,a.EqFloat32,b,d)},ne:function(b,d){return a._BinaryenBinary(c,a.NeFloat32,b,d)},lt:function(b,d){return a._BinaryenBinary(c,a.LtFloat32,b,d)},le:function(b,d){return a._BinaryenBinary(c,a.LeFloat32,b,d)},gt:function(b,d){return a._BinaryenBinary(c,a.GtFloat32,b,d)},ge:function(b,d){return a._BinaryenBinary(c,a.GeFloat32,b,d)}};this.f64={load:function(b,
d,f){return a._BinaryenLoad(c,8,!0,b,d,a.f64,f)},store:function(b,d,f,g){return a._BinaryenStore(c,8,b,d,f,g,a.f64)},"const":function(d){a._BinaryenLiteralFloat64(b,d);return a._BinaryenConst(c,b)},const_bits:function(d,f){a._BinaryenLiteralFloat64Bits(b,d,f);return a._BinaryenConst(c,b)},neg:function(b){return a._BinaryenUnary(c,a.NegFloat64,b)},abs:function(b){return a._BinaryenUnary(c,a.AbsFloat64,b)},ceil:function(b){return a._BinaryenUnary(c,a.CeilFloat64,b)},floor:function(b){return a._BinaryenUnary(c,
a.FloorFloat64,b)},trunc:function(b){return a._BinaryenUnary(c,a.TruncFloat64,b)},nearest:function(b){return a._BinaryenUnary(c,a.NearestFloat64,b)},sqrt:function(b){return a._BinaryenUnary(c,a.SqrtFloat64,b)},reinterpret:function(b){return a._BinaryenUnary(c,a.ReinterpretInt64,b)},convert_s:{i32:function(b){return a._BinaryenUnary(c,a.ConvertSInt32ToFloat64,b)},i64:function(b){return a._BinaryenUnary(c,a.ConvertSInt64ToFloat64,b)}},convert_u:{i32:function(b){return a._BinaryenUnary(c,a.ConvertUInt32ToFloat64,
b)},i64:function(b){return a._BinaryenUnary(c,a.ConvertUInt64ToFloat64,b)}},promote:function(b){return a._BinaryenUnary(c,a.PromoteFloat32,b)},add:function(b,d){return a._BinaryenBinary(c,a.AddFloat64,b,d)},sub:function(b,d){return a._BinaryenBinary(c,a.SubFloat64,b,d)},mul:function(b,d){return a._BinaryenBinary(c,a.MulFloat64,b,d)},div:function(b,d){return a._BinaryenBinary(c,a.DivFloat64,b,d)},copysign:function(b,d){return a._BinaryenBinary(c,a.CopySignFloat64,b,d)},min:function(b,d){return a._BinaryenBinary(c,
a.MinFloat64,b,d)},max:function(b,d){return a._BinaryenBinary(c,a.MaxFloat64,b,d)},eq:function(b,d){return a._BinaryenBinary(c,a.EqFloat64,b,d)},ne:function(b,d){return a._BinaryenBinary(c,a.NeFloat64,b,d)},lt:function(b,d){return a._BinaryenBinary(c,a.LtFloat64,b,d)},le:function(b,d){return a._BinaryenBinary(c,a.LeFloat64,b,d)},gt:function(b,d){return a._BinaryenBinary(c,a.GtFloat64,b,d)},ge:function(b,d){return a._BinaryenBinary(c,a.GeFloat64,b,d)}};this.select=function(b,d,f){return a._BinaryenSelect(c,
b,d,f)};this.drop=function(b){return a._BinaryenDrop(c,b)};this["return"]=function(b){return a._BinaryenReturn(c,b)};this.host=function(){throw"TODO";};this.nop=function(){return a._BinaryenNop(c)};this.unreachable=function(){return a._BinaryenUnreachable(c)};this.addFunction=function(b,d,f,g){return F(function(){return a._BinaryenAddFunction(c,y(b),d,K(f),f.length,g)})};this.addGlobal=function(b,d,f,g){return F(function(){return a._BinaryenAddGlobal(c,y(b),d,f,g)})};this.addImport=function(b,d,f,
g){return F(function(){return a._BinaryenAddImport(c,y(b),y(d),y(f),g)})};this.removeImport=function(b){return F(function(){return a._BinaryenRemoveImport(c,y(b))})};this.addExport=function(b,d){return F(function(){return a._BinaryenAddExport(c,y(b),y(d))})};this.removeExport=function(b){return F(function(){return a._BinaryenRemoveExport(c,y(b))})};this.setFunctionTable=function(b){return F(function(){return a._BinaryenSetFunctionTable(c,K(b),b.length)})};this.setMemory=function(b,d,f,g){return F(function(){return a._BinaryenSetMemory(c,
b,d,y(f),K(g.map(function(a){return A(a.data,"i8",1)})),K(g.map(function(a){return a.offset})),K(g.map(function(a){return a.data.length})),g.length)})};this.setStart=function(b){return a._BinaryenSetStart(c,b)};this.emitText=function(){var b=a.print,d="";a.print=function(a){d+=a+"\n"};a._BinaryenModulePrint(c);a.print=b;return d};this.emitAsmjs=function(){var b=a.print,d="";a.print=function(a){d+=a+"\n"};a._BinaryenModulePrintAsmjs(c);a.print=b;return d};this.validate=function(){return a._BinaryenModuleValidate(c)};
this.optimize=function(){return a._BinaryenModuleOptimize(c)};this.autoDrop=function(){return a._BinaryenModuleAutoDrop(c)};var d=null;this.emitBinary=function(){d||(d=L(1048576));var b=a._BinaryenModuleWrite(c,d,1048576);v(1048576>b,"FIXME: hardcoded limit on module size");return new Uint8Array(J.subarray(d,d+b))};this.interpret=function(){return a._BinaryenModuleInterpret(c)}};a.Relooper=function(){var c=this.$b=a._RelooperCreate();this.addBlock=function(b){return a._RelooperAddBlock(c,b)};this.addBranch=
function(b,c,d,g){return a._RelooperAddBranch(b,c,d,g)};this.addBlockWithSwitch=function(b,d){return a._RelooperAddBlockWithSwitch(c,b,d)};this.addBranchForSwitch=function(b,c,d,g){return F(function(){return a._RelooperAddBranchForSwitch(b,c,K(d),d.length,g)})};this.renderAndDispose=function(b,d,g){return a._RelooperRenderAndDispose(c,b,d,g.ptr)}};a.emitText=function(c){if("object"===typeof c)return c.Nf();var b=a.print,d="";a.print=function(a){d+=a+"\n"};a._BinaryenExpressionPrint(c);a.print=b;return d};
a.readBinary=function(c){var b=A(c,"i8",0);c=a._BinaryenModuleRead(b,c.length);U(b);return new a.Module(c)};a.parseText=function(c){var b=L(c.length+1);xa(c,b);c=a._BinaryenModuleParse(b);U(b);return new a.Module(c)};a.setAPITracing=function(c){return a._BinaryenSetAPITracing(c)};"function"===typeof define&&define.amd?define(function(){return a}):"function"===typeof require&&"undefined"!==typeof module&&module&&module.exports?module.exports=a:("undefined"!==typeof global&&global||"undefined"!==typeof window&&
window||this).Binaryen=a})();


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":173,"buffer":55,"crypto":66,"fs":52,"path":166}],23:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":25}],24:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":25}],25:[function(require,module,exports){

},{}],26:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":195}],27:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
  iv = Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  var h = Buffer.alloc(4, 0)
  this._ghash = new GHASH(this._cipher.encryptBlock(h))
  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":26,"./ghash":31,"buffer-xor":54,"cipher-base":58,"inherits":146,"safe-buffer":195}],28:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":29,"./encrypter":30,"./modes/list.json":39}],29:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":26,"./authCipher":27,"./modes":38,"./streamCipher":41,"cipher-base":58,"evp_bytestokey":125,"inherits":146,"safe-buffer":195}],30:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":26,"./authCipher":27,"./modes":38,"./streamCipher":41,"cipher-base":58,"evp_bytestokey":125,"inherits":146,"safe-buffer":195}],31:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":195}],32:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":54}],33:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":54,"safe-buffer":195}],34:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":195}],35:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

}).call(this,require("buffer").Buffer)
},{"buffer":55}],36:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":55,"buffer-xor":54}],37:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],38:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":32,"./cfb":33,"./cfb1":34,"./cfb8":35,"./ctr":36,"./ecb":37,"./list.json":39,"./ofb":40}],39:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],40:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":55,"buffer-xor":54}],41:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":26,"cipher-base":58,"inherits":146,"safe-buffer":195}],42:[function(require,module,exports){
var ebtk = require('evp_bytestokey')
var aes = require('browserify-aes/browser')
var DES = require('browserify-des')
var desModes = require('browserify-des/modes')
var aesModes = require('browserify-aes/modes')
function createCipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}
function createDecipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createCipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createDecipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite,
      decrypt: true
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":28,"browserify-aes/modes":38,"browserify-des":43,"browserify-des/modes":44,"evp_bytestokey":125}],43:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)
},{"buffer":55,"cipher-base":58,"des.js":67,"inherits":146}],44:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],45:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":23,"buffer":55,"randombytes":180}],46:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":47}],47:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],48:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],49:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash')
var stream = require('stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algorithms.json":47,"./sign":50,"./verify":51,"buffer":55,"create-hash":61,"inherits":146,"stream":204}],50:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves.json":48,"bn.js":23,"browserify-rsa":45,"buffer":55,"create-hmac":64,"elliptic":82,"parse-asn1":165}],51:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves.json":48,"bn.js":23,"buffer":55,"elliptic":82,"parse-asn1":165}],52:[function(require,module,exports){
arguments[4][25][0].apply(exports,arguments)
},{"dup":25}],53:[function(require,module,exports){
var basex = require('base-x')
var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'

module.exports = basex(ALPHABET)

},{"base-x":16}],54:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":55}],55:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":17,"ieee754":144}],56:[function(require,module,exports){
/*
 Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>
 * Backing buffer: ArrayBuffer, Accessor: Uint8Array
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/bytebuffer.js for details
 */
(function(global, factory) {

    /* AMD */ if (typeof define === 'function' && define["amd"])
        define(["long"], factory);
    /* CommonJS */ else if (typeof require === 'function' && typeof module === "object" && module && module["exports"])
        module['exports'] = (function() {
            var Long; try { Long = require("long"); } catch (e) {}
            return factory(Long);
        })();
    /* Global */ else
        (global["dcodeIO"] = global["dcodeIO"] || {})["ByteBuffer"] = factory(global["dcodeIO"]["Long"]);

})(this, function(Long) {
    "use strict";

    /**
     * Constructs a new ByteBuffer.
     * @class The swiss army knife for binary data in JavaScript.
     * @exports ByteBuffer
     * @constructor
     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @expose
     */
    var ByteBuffer = function(capacity, littleEndian, noAssert) {
        if (typeof capacity === 'undefined')
            capacity = ByteBuffer.DEFAULT_CAPACITY;
        if (typeof littleEndian === 'undefined')
            littleEndian = ByteBuffer.DEFAULT_ENDIAN;
        if (typeof noAssert === 'undefined')
            noAssert = ByteBuffer.DEFAULT_NOASSERT;
        if (!noAssert) {
            capacity = capacity | 0;
            if (capacity < 0)
                throw RangeError("Illegal capacity");
            littleEndian = !!littleEndian;
            noAssert = !!noAssert;
        }

        /**
         * Backing ArrayBuffer.
         * @type {!ArrayBuffer}
         * @expose
         */
        this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);

        /**
         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.
         * @type {?Uint8Array}
         * @expose
         */
        this.view = capacity === 0 ? null : new Uint8Array(this.buffer);

        /**
         * Absolute read/write offset.
         * @type {number}
         * @expose
         * @see ByteBuffer#flip
         * @see ByteBuffer#clear
         */
        this.offset = 0;

        /**
         * Marked offset.
         * @type {number}
         * @expose
         * @see ByteBuffer#mark
         * @see ByteBuffer#reset
         */
        this.markedOffset = -1;

        /**
         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.
         * @type {number}
         * @expose
         * @see ByteBuffer#flip
         * @see ByteBuffer#clear
         */
        this.limit = capacity;

        /**
         * Whether to use little endian byte order, defaults to `false` for big endian.
         * @type {boolean}
         * @expose
         */
        this.littleEndian = littleEndian;

        /**
         * Whether to skip assertions of offsets and values, defaults to `false`.
         * @type {boolean}
         * @expose
         */
        this.noAssert = noAssert;
    };

    /**
     * ByteBuffer version.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.VERSION = "5.0.1";

    /**
     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.
     * @type {boolean}
     * @const
     * @expose
     */
    ByteBuffer.LITTLE_ENDIAN = true;

    /**
     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.
     * @type {boolean}
     * @const
     * @expose
     */
    ByteBuffer.BIG_ENDIAN = false;

    /**
     * Default initial capacity of `16`.
     * @type {number}
     * @expose
     */
    ByteBuffer.DEFAULT_CAPACITY = 16;

    /**
     * Default endianess of `false` for big endian.
     * @type {boolean}
     * @expose
     */
    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;

    /**
     * Default no assertions flag of `false`.
     * @type {boolean}
     * @expose
     */
    ByteBuffer.DEFAULT_NOASSERT = false;

    /**
     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded
     *  and int64 support is not available.
     * @type {?Long}
     * @const
     * @see https://github.com/dcodeIO/long.js
     * @expose
     */
    ByteBuffer.Long = Long || null;

    /**
     * @alias ByteBuffer.prototype
     * @inner
     */
    var ByteBufferPrototype = ByteBuffer.prototype;

    /**
     * An indicator used to reliably determine if an object is a ByteBuffer or not.
     * @type {boolean}
     * @const
     * @expose
     * @private
     */
    ByteBufferPrototype.__isByteBuffer__;

    Object.defineProperty(ByteBufferPrototype, "__isByteBuffer__", {
        value: true,
        enumerable: false,
        configurable: false
    });

    // helpers

    /**
     * @type {!ArrayBuffer}
     * @inner
     */
    var EMPTY_BUFFER = new ArrayBuffer(0);

    /**
     * String.fromCharCode reference for compile-time renaming.
     * @type {function(...number):string}
     * @inner
     */
    var stringFromCharCode = String.fromCharCode;

    /**
     * Creates a source function for a string.
     * @param {string} s String to read from
     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are
     *  no more characters left.
     * @throws {TypeError} If the argument is invalid
     * @inner
     */
    function stringSource(s) {
        var i=0; return function() {
            return i < s.length ? s.charCodeAt(i++) : null;
        };
    }

    /**
     * Creates a destination function for a string.
     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.
     *  Returns the final string when called without arguments.
     * @inner
     */
    function stringDestination() {
        var cs = [], ps = []; return function() {
            if (arguments.length === 0)
                return ps.join('')+stringFromCharCode.apply(String, cs);
            if (cs.length + arguments.length > 1024)
                ps.push(stringFromCharCode.apply(String, cs)),
                    cs.length = 0;
            Array.prototype.push.apply(cs, arguments);
        };
    }

    /**
     * Gets the accessor type.
     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)
     * @expose
     */
    ByteBuffer.accessor = function() {
        return Uint8Array;
    };
    /**
     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.
     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {
        return new ByteBuffer(capacity, littleEndian, noAssert);
    };

    /**
     * Concatenates multiple ByteBuffers into one.
     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate
     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string ("base64", "hex", "binary",
     *  defaults to "utf8")
     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults
     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} Concatenated ByteBuffer
     * @expose
     */
    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {
        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {
            noAssert = littleEndian;
            littleEndian = encoding;
            encoding = undefined;
        }
        var capacity = 0;
        for (var i=0, k=buffers.length, length; i<k; ++i) {
            if (!ByteBuffer.isByteBuffer(buffers[i]))
                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);
            length = buffers[i].limit - buffers[i].offset;
            if (length > 0) capacity += length;
        }
        if (capacity === 0)
            return new ByteBuffer(0, littleEndian, noAssert);
        var bb = new ByteBuffer(capacity, littleEndian, noAssert),
            bi;
        i=0; while (i<k) {
            bi = buffers[i++];
            length = bi.limit - bi.offset;
            if (length <= 0) continue;
            bb.view.set(bi.view.subarray(bi.offset, bi.limit), bb.offset);
            bb.offset += length;
        }
        bb.limit = bb.offset;
        bb.offset = 0;
        return bb;
    };

    /**
     * Tests if the specified type is a ByteBuffer.
     * @param {*} bb ByteBuffer to test
     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`
     * @expose
     */
    ByteBuffer.isByteBuffer = function(bb) {
        return (bb && bb["__isByteBuffer__"]) === true;
    };
    /**
     * Gets the backing buffer type.
     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)
     * @expose
     */
    ByteBuffer.type = function() {
        return ArrayBuffer;
    };
    /**
     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its
     *  {@link ByteBuffer#limit} to the length of the wrapped data.
     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped
     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string ("base64", "hex", "binary", defaults to
     *  "utf8")
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`
     * @expose
     */
    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {
        if (typeof encoding !== 'string') {
            noAssert = littleEndian;
            littleEndian = encoding;
            encoding = undefined;
        }
        if (typeof buffer === 'string') {
            if (typeof encoding === 'undefined')
                encoding = "utf8";
            switch (encoding) {
                case "base64":
                    return ByteBuffer.fromBase64(buffer, littleEndian);
                case "hex":
                    return ByteBuffer.fromHex(buffer, littleEndian);
                case "binary":
                    return ByteBuffer.fromBinary(buffer, littleEndian);
                case "utf8":
                    return ByteBuffer.fromUTF8(buffer, littleEndian);
                case "debug":
                    return ByteBuffer.fromDebug(buffer, littleEndian);
                default:
                    throw Error("Unsupported encoding: "+encoding);
            }
        }
        if (buffer === null || typeof buffer !== 'object')
            throw TypeError("Illegal buffer");
        var bb;
        if (ByteBuffer.isByteBuffer(buffer)) {
            bb = ByteBufferPrototype.clone.call(buffer);
            bb.markedOffset = -1;
            return bb;
        }
        if (buffer instanceof Uint8Array) { // Extract ArrayBuffer from Uint8Array
            bb = new ByteBuffer(0, littleEndian, noAssert);
            if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER
                bb.buffer = buffer.buffer;
                bb.offset = buffer.byteOffset;
                bb.limit = buffer.byteOffset + buffer.byteLength;
                bb.view = new Uint8Array(buffer.buffer);
            }
        } else if (buffer instanceof ArrayBuffer) { // Reuse ArrayBuffer
            bb = new ByteBuffer(0, littleEndian, noAssert);
            if (buffer.byteLength > 0) {
                bb.buffer = buffer;
                bb.offset = 0;
                bb.limit = buffer.byteLength;
                bb.view = buffer.byteLength > 0 ? new Uint8Array(buffer) : null;
            }
        } else if (Object.prototype.toString.call(buffer) === "[object Array]") { // Create from octets
            bb = new ByteBuffer(buffer.length, littleEndian, noAssert);
            bb.limit = buffer.length;
            for (var i=0; i<buffer.length; ++i)
                bb.view[i] = buffer[i];
        } else
            throw TypeError("Illegal buffer"); // Otherwise fail
        return bb;
    };

    /**
     * Writes the array as a bitset.
     * @param {Array<boolean>} value Array of booleans to write
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBufferPrototype.writeBitSet = function(value, offset) {
      var relative = typeof offset === 'undefined';
      if (relative) offset = this.offset;
      if (!this.noAssert) {
        if (!(value instanceof Array))
          throw TypeError("Illegal BitSet: Not an array");
        if (typeof offset !== 'number' || offset % 1 !== 0)
            throw TypeError("Illegal offset: "+offset+" (not an integer)");
        offset >>>= 0;
        if (offset < 0 || offset + 0 > this.buffer.byteLength)
            throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
      }

      var start = offset,
          bits = value.length,
          bytes = (bits >> 3),
          bit = 0,
          k;

      offset += this.writeVarint32(bits,offset);

      while(bytes--) {
        k = (!!value[bit++] & 1) |
            ((!!value[bit++] & 1) << 1) |
            ((!!value[bit++] & 1) << 2) |
            ((!!value[bit++] & 1) << 3) |
            ((!!value[bit++] & 1) << 4) |
            ((!!value[bit++] & 1) << 5) |
            ((!!value[bit++] & 1) << 6) |
            ((!!value[bit++] & 1) << 7);
        this.writeByte(k,offset++);
      }

      if(bit < bits) {
        var m = 0; k = 0;
        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));
        this.writeByte(k,offset++);
      }

      if (relative) {
        this.offset = offset;
        return this;
      }
      return offset - start;
    }

    /**
     * Reads a BitSet as an array of booleans.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {Array<boolean>
     * @expose
     */
    ByteBufferPrototype.readBitSet = function(offset) {
      var relative = typeof offset === 'undefined';
      if (relative) offset = this.offset;

      var ret = this.readVarint32(offset),
          bits = ret.value,
          bytes = (bits >> 3),
          bit = 0,
          value = [],
          k;

      offset += ret.length;

      while(bytes--) {
        k = this.readByte(offset++);
        value[bit++] = !!(k & 0x01);
        value[bit++] = !!(k & 0x02);
        value[bit++] = !!(k & 0x04);
        value[bit++] = !!(k & 0x08);
        value[bit++] = !!(k & 0x10);
        value[bit++] = !!(k & 0x20);
        value[bit++] = !!(k & 0x40);
        value[bit++] = !!(k & 0x80);
      }

      if(bit < bits) {
        var m = 0;
        k = this.readByte(offset++);
        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);
      }

      if (relative) {
        this.offset = offset;
      }
      return value;
    }
    /**
     * Reads the specified number of bytes.
     * @param {number} length Number of bytes to read
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBufferPrototype.readBytes = function(length, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + length > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+length+") <= "+this.buffer.byteLength);
        }
        var slice = this.slice(offset, offset + length);
        if (relative) this.offset += length;
        return slice;
    };

    /**
     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.
     * @function
     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets
     *  will be modified according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;

    // types/ints/int8

    /**
     * Writes an 8bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeInt8 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 1;
        var capacity0 = this.buffer.byteLength;
        if (offset > capacity0)
            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);
        offset -= 1;
        this.view[offset] = value;
        if (relative) this.offset += 1;
        return this;
    };

    /**
     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;

    /**
     * Reads an 8bit signed integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt8 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
        }
        var value = this.view[offset];
        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed
        if (relative) this.offset += 1;
        return value;
    };

    /**
     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;

    /**
     * Writes an 8bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeUint8 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 1;
        var capacity1 = this.buffer.byteLength;
        if (offset > capacity1)
            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);
        offset -= 1;
        this.view[offset] = value;
        if (relative) this.offset += 1;
        return this;
    };

    /**
     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;

    /**
     * Reads an 8bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUint8 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
        }
        var value = this.view[offset];
        if (relative) this.offset += 1;
        return value;
    };

    /**
     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;

    // types/ints/int16

    /**
     * Writes a 16bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeInt16 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 2;
        var capacity2 = this.buffer.byteLength;
        if (offset > capacity2)
            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);
        offset -= 2;
        if (this.littleEndian) {
            this.view[offset+1] = (value & 0xFF00) >>> 8;
            this.view[offset  ] =  value & 0x00FF;
        } else {
            this.view[offset]   = (value & 0xFF00) >>> 8;
            this.view[offset+1] =  value & 0x00FF;
        }
        if (relative) this.offset += 2;
        return this;
    };

    /**
     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;

    /**
     * Reads a 16bit signed integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readInt16 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 2 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+2+") <= "+this.buffer.byteLength);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.view[offset  ];
            value |= this.view[offset+1] << 8;
        } else {
            value  = this.view[offset  ] << 8;
            value |= this.view[offset+1];
        }
        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed
        if (relative) this.offset += 2;
        return value;
    };

    /**
     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;

    /**
     * Writes a 16bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeUint16 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 2;
        var capacity3 = this.buffer.byteLength;
        if (offset > capacity3)
            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);
        offset -= 2;
        if (this.littleEndian) {
            this.view[offset+1] = (value & 0xFF00) >>> 8;
            this.view[offset  ] =  value & 0x00FF;
        } else {
            this.view[offset]   = (value & 0xFF00) >>> 8;
            this.view[offset+1] =  value & 0x00FF;
        }
        if (relative) this.offset += 2;
        return this;
    };

    /**
     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;

    /**
     * Reads a 16bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readUint16 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 2 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+2+") <= "+this.buffer.byteLength);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.view[offset  ];
            value |= this.view[offset+1] << 8;
        } else {
            value  = this.view[offset  ] << 8;
            value |= this.view[offset+1];
        }
        if (relative) this.offset += 2;
        return value;
    };

    /**
     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;

    // types/ints/int32

    /**
     * Writes a 32bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeInt32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 4;
        var capacity4 = this.buffer.byteLength;
        if (offset > capacity4)
            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);
        offset -= 4;
        if (this.littleEndian) {
            this.view[offset+3] = (value >>> 24) & 0xFF;
            this.view[offset+2] = (value >>> 16) & 0xFF;
            this.view[offset+1] = (value >>>  8) & 0xFF;
            this.view[offset  ] =  value         & 0xFF;
        } else {
            this.view[offset  ] = (value >>> 24) & 0xFF;
            this.view[offset+1] = (value >>> 16) & 0xFF;
            this.view[offset+2] = (value >>>  8) & 0xFF;
            this.view[offset+3] =  value         & 0xFF;
        }
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;

    /**
     * Reads a 32bit signed integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.byteLength);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.view[offset+2] << 16;
            value |= this.view[offset+1] <<  8;
            value |= this.view[offset  ];
            value += this.view[offset+3] << 24 >>> 0;
        } else {
            value  = this.view[offset+1] << 16;
            value |= this.view[offset+2] <<  8;
            value |= this.view[offset+3];
            value += this.view[offset  ] << 24 >>> 0;
        }
        value |= 0; // Cast to signed
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;

    /**
     * Writes a 32bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeUint32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 4;
        var capacity5 = this.buffer.byteLength;
        if (offset > capacity5)
            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);
        offset -= 4;
        if (this.littleEndian) {
            this.view[offset+3] = (value >>> 24) & 0xFF;
            this.view[offset+2] = (value >>> 16) & 0xFF;
            this.view[offset+1] = (value >>>  8) & 0xFF;
            this.view[offset  ] =  value         & 0xFF;
        } else {
            this.view[offset  ] = (value >>> 24) & 0xFF;
            this.view[offset+1] = (value >>> 16) & 0xFF;
            this.view[offset+2] = (value >>>  8) & 0xFF;
            this.view[offset+3] =  value         & 0xFF;
        }
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;

    /**
     * Reads a 32bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUint32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.byteLength);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.view[offset+2] << 16;
            value |= this.view[offset+1] <<  8;
            value |= this.view[offset  ];
            value += this.view[offset+3] << 24 >>> 0;
        } else {
            value  = this.view[offset+1] << 16;
            value |= this.view[offset+2] <<  8;
            value |= this.view[offset+3];
            value += this.view[offset  ] << 24 >>> 0;
        }
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;

    // types/ints/int64

    if (Long) {

        /**
         * Writes a 64bit signed integer.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeInt64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            offset += 8;
            var capacity6 = this.buffer.byteLength;
            if (offset > capacity6)
                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);
            offset -= 8;
            var lo = value.low,
                hi = value.high;
            if (this.littleEndian) {
                this.view[offset+3] = (lo >>> 24) & 0xFF;
                this.view[offset+2] = (lo >>> 16) & 0xFF;
                this.view[offset+1] = (lo >>>  8) & 0xFF;
                this.view[offset  ] =  lo         & 0xFF;
                offset += 4;
                this.view[offset+3] = (hi >>> 24) & 0xFF;
                this.view[offset+2] = (hi >>> 16) & 0xFF;
                this.view[offset+1] = (hi >>>  8) & 0xFF;
                this.view[offset  ] =  hi         & 0xFF;
            } else {
                this.view[offset  ] = (hi >>> 24) & 0xFF;
                this.view[offset+1] = (hi >>> 16) & 0xFF;
                this.view[offset+2] = (hi >>>  8) & 0xFF;
                this.view[offset+3] =  hi         & 0xFF;
                offset += 4;
                this.view[offset  ] = (lo >>> 24) & 0xFF;
                this.view[offset+1] = (lo >>> 16) & 0xFF;
                this.view[offset+2] = (lo >>>  8) & 0xFF;
                this.view[offset+3] =  lo         & 0xFF;
            }
            if (relative) this.offset += 8;
            return this;
        };

        /**
         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;

        /**
         * Reads a 64bit signed integer.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readInt64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 8 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.byteLength);
            }
            var lo = 0,
                hi = 0;
            if (this.littleEndian) {
                lo  = this.view[offset+2] << 16;
                lo |= this.view[offset+1] <<  8;
                lo |= this.view[offset  ];
                lo += this.view[offset+3] << 24 >>> 0;
                offset += 4;
                hi  = this.view[offset+2] << 16;
                hi |= this.view[offset+1] <<  8;
                hi |= this.view[offset  ];
                hi += this.view[offset+3] << 24 >>> 0;
            } else {
                hi  = this.view[offset+1] << 16;
                hi |= this.view[offset+2] <<  8;
                hi |= this.view[offset+3];
                hi += this.view[offset  ] << 24 >>> 0;
                offset += 4;
                lo  = this.view[offset+1] << 16;
                lo |= this.view[offset+2] <<  8;
                lo |= this.view[offset+3];
                lo += this.view[offset  ] << 24 >>> 0;
            }
            var value = new Long(lo, hi, false);
            if (relative) this.offset += 8;
            return value;
        };

        /**
         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;

        /**
         * Writes a 64bit unsigned integer.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeUint64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            offset += 8;
            var capacity7 = this.buffer.byteLength;
            if (offset > capacity7)
                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);
            offset -= 8;
            var lo = value.low,
                hi = value.high;
            if (this.littleEndian) {
                this.view[offset+3] = (lo >>> 24) & 0xFF;
                this.view[offset+2] = (lo >>> 16) & 0xFF;
                this.view[offset+1] = (lo >>>  8) & 0xFF;
                this.view[offset  ] =  lo         & 0xFF;
                offset += 4;
                this.view[offset+3] = (hi >>> 24) & 0xFF;
                this.view[offset+2] = (hi >>> 16) & 0xFF;
                this.view[offset+1] = (hi >>>  8) & 0xFF;
                this.view[offset  ] =  hi         & 0xFF;
            } else {
                this.view[offset  ] = (hi >>> 24) & 0xFF;
                this.view[offset+1] = (hi >>> 16) & 0xFF;
                this.view[offset+2] = (hi >>>  8) & 0xFF;
                this.view[offset+3] =  hi         & 0xFF;
                offset += 4;
                this.view[offset  ] = (lo >>> 24) & 0xFF;
                this.view[offset+1] = (lo >>> 16) & 0xFF;
                this.view[offset+2] = (lo >>>  8) & 0xFF;
                this.view[offset+3] =  lo         & 0xFF;
            }
            if (relative) this.offset += 8;
            return this;
        };

        /**
         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.
         * @function
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;

        /**
         * Reads a 64bit unsigned integer.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readUint64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 8 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.byteLength);
            }
            var lo = 0,
                hi = 0;
            if (this.littleEndian) {
                lo  = this.view[offset+2] << 16;
                lo |= this.view[offset+1] <<  8;
                lo |= this.view[offset  ];
                lo += this.view[offset+3] << 24 >>> 0;
                offset += 4;
                hi  = this.view[offset+2] << 16;
                hi |= this.view[offset+1] <<  8;
                hi |= this.view[offset  ];
                hi += this.view[offset+3] << 24 >>> 0;
            } else {
                hi  = this.view[offset+1] << 16;
                hi |= this.view[offset+2] <<  8;
                hi |= this.view[offset+3];
                hi += this.view[offset  ] << 24 >>> 0;
                offset += 4;
                lo  = this.view[offset+1] << 16;
                lo |= this.view[offset+2] <<  8;
                lo |= this.view[offset+3];
                lo += this.view[offset  ] << 24 >>> 0;
            }
            var value = new Long(lo, hi, true);
            if (relative) this.offset += 8;
            return value;
        };

        /**
         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.
         * @function
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;

    } // Long


    // types/floats/float32

    /*
     ieee754 - https://github.com/feross/ieee754

     The MIT License (MIT)

     Copyright (c) Feross Aboukhadijeh

     Permission is hereby granted, free of charge, to any person obtaining a copy
     of this software and associated documentation files (the "Software"), to deal
     in the Software without restriction, including without limitation the rights
     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     copies of the Software, and to permit persons to whom the Software is
     furnished to do so, subject to the following conditions:

     The above copyright notice and this permission notice shall be included in
     all copies or substantial portions of the Software.

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     THE SOFTWARE.
    */

    /**
     * Reads an IEEE754 float from a byte array.
     * @param {!Array} buffer
     * @param {number} offset
     * @param {boolean} isLE
     * @param {number} mLen
     * @param {number} nBytes
     * @returns {number}
     * @inner
     */
    function ieee754_read(buffer, offset, isLE, mLen, nBytes) {
        var e, m,
            eLen = nBytes * 8 - mLen - 1,
            eMax = (1 << eLen) - 1,
            eBias = eMax >> 1,
            nBits = -7,
            i = isLE ? (nBytes - 1) : 0,
            d = isLE ? -1 : 1,
            s = buffer[offset + i];

        i += d;

        e = s & ((1 << (-nBits)) - 1);
        s >>= (-nBits);
        nBits += eLen;
        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

        m = e & ((1 << (-nBits)) - 1);
        e >>= (-nBits);
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

        if (e === 0) {
            e = 1 - eBias;
        } else if (e === eMax) {
            return m ? NaN : ((s ? -1 : 1) * Infinity);
        } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
        }
        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    }

    /**
     * Writes an IEEE754 float to a byte array.
     * @param {!Array} buffer
     * @param {number} value
     * @param {number} offset
     * @param {boolean} isLE
     * @param {number} mLen
     * @param {number} nBytes
     * @inner
     */
    function ieee754_write(buffer, value, offset, isLE, mLen, nBytes) {
        var e, m, c,
            eLen = nBytes * 8 - mLen - 1,
            eMax = (1 << eLen) - 1,
            eBias = eMax >> 1,
            rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
            i = isLE ? 0 : (nBytes - 1),
            d = isLE ? 1 : -1,
            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

        value = Math.abs(value);

        if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
        } else {
            e = Math.floor(Math.log(value) / Math.LN2);
            if (value * (c = Math.pow(2, -e)) < 1) {
                e--;
                c *= 2;
            }
            if (e + eBias >= 1) {
                value += rt / c;
            } else {
                value += rt * Math.pow(2, 1 - eBias);
            }
            if (value * c >= 2) {
                e++;
                c /= 2;
            }

            if (e + eBias >= eMax) {
                m = 0;
                e = eMax;
            } else if (e + eBias >= 1) {
                m = (value * c - 1) * Math.pow(2, mLen);
                e = e + eBias;
            } else {
                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
                e = 0;
            }
        }

        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

        e = (e << mLen) | m;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

        buffer[offset + i - d] |= s * 128;
    }

    /**
     * Writes a 32bit float.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number')
                throw TypeError("Illegal value: "+value+" (not a number)");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 4;
        var capacity8 = this.buffer.byteLength;
        if (offset > capacity8)
            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);
        offset -= 4;
        ieee754_write(this.view, value, offset, this.littleEndian, 23, 4);
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;

    /**
     * Reads a 32bit float.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.byteLength);
        }
        var value = ieee754_read(this.view, offset, this.littleEndian, 23, 4);
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;

    // types/floats/float64

    /**
     * Writes a 64bit float.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat64 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number')
                throw TypeError("Illegal value: "+value+" (not a number)");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        offset += 8;
        var capacity9 = this.buffer.byteLength;
        if (offset > capacity9)
            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);
        offset -= 8;
        ieee754_write(this.view, value, offset, this.littleEndian, 52, 8);
        if (relative) this.offset += 8;
        return this;
    };

    /**
     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;

    /**
     * Reads a 64bit float.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat64 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 8 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.byteLength);
        }
        var value = ieee754_read(this.view, offset, this.littleEndian, 52, 8);
        if (relative) this.offset += 8;
        return value;
    };

    /**
     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;


    // types/varints/varint32

    /**
     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.
     * @type {number}
     * @const
     * @expose
     */
    ByteBuffer.MAX_VARINT32_BYTES = 5;

    /**
     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.
     * @param {number} value Value to encode
     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}
     * @expose
     */
    ByteBuffer.calculateVarint32 = function(value) {
        // ref: src/google/protobuf/io/coded_stream.cc
        value = value >>> 0;
             if (value < 1 << 7 ) return 1;
        else if (value < 1 << 14) return 2;
        else if (value < 1 << 21) return 3;
        else if (value < 1 << 28) return 4;
        else                      return 5;
    };

    /**
     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.
     * @param {number} n Signed 32bit integer
     * @returns {number} Unsigned zigzag encoded 32bit integer
     * @expose
     */
    ByteBuffer.zigZagEncode32 = function(n) {
        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h
    };

    /**
     * Decodes a zigzag encoded signed 32bit integer.
     * @param {number} n Unsigned zigzag encoded 32bit integer
     * @returns {number} Signed 32bit integer
     * @expose
     */
    ByteBuffer.zigZagDecode32 = function(n) {
        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h
    };

    /**
     * Writes a 32bit base 128 variable-length integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeVarint32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        var size = ByteBuffer.calculateVarint32(value),
            b;
        offset += size;
        var capacity10 = this.buffer.byteLength;
        if (offset > capacity10)
            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);
        offset -= size;
        value >>>= 0;
        while (value >= 0x80) {
            b = (value & 0x7f) | 0x80;
            this.view[offset++] = b;
            value >>>= 7;
        }
        this.view[offset++] = value;
        if (relative) {
            this.offset = offset;
            return this;
        }
        return size;
    };

    /**
     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {
        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);
    };

    /**
     * Reads a 32bit base 128 variable-length integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read
     *  and the actual number of bytes read.
     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available
     *  to fully decode the varint.
     * @expose
     */
    ByteBufferPrototype.readVarint32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
        }
        var c = 0,
            value = 0 >>> 0,
            b;
        do {
            if (!this.noAssert && offset > this.limit) {
                var err = Error("Truncated");
                err['truncated'] = true;
                throw err;
            }
            b = this.view[offset++];
            if (c < 5)
                value |= (b & 0x7f) << (7*c);
            ++c;
        } while ((b & 0x80) !== 0);
        value |= 0;
        if (relative) {
            this.offset = offset;
            return value;
        }
        return {
            "value": value,
            "length": c
        };
    };

    /**
     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read
     *  and the actual number of bytes read.
     * @throws {Error} If it's not a valid varint
     * @expose
     */
    ByteBufferPrototype.readVarint32ZigZag = function(offset) {
        var val = this.readVarint32(offset);
        if (typeof val === 'object')
            val["value"] = ByteBuffer.zigZagDecode32(val["value"]);
        else
            val = ByteBuffer.zigZagDecode32(val);
        return val;
    };

    // types/varints/varint64

    if (Long) {

        /**
         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.
         * @type {number}
         * @const
         * @expose
         */
        ByteBuffer.MAX_VARINT64_BYTES = 10;

        /**
         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.
         * @param {number|!Long} value Value to encode
         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}
         * @expose
         */
        ByteBuffer.calculateVarint64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            // ref: src/google/protobuf/io/coded_stream.cc
            var part0 = value.toInt() >>> 0,
                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,
                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;
            if (part2 == 0) {
                if (part1 == 0) {
                    if (part0 < 1 << 14)
                        return part0 < 1 << 7 ? 1 : 2;
                    else
                        return part0 < 1 << 21 ? 3 : 4;
                } else {
                    if (part1 < 1 << 14)
                        return part1 < 1 << 7 ? 5 : 6;
                    else
                        return part1 < 1 << 21 ? 7 : 8;
                }
            } else
                return part2 < 1 << 7 ? 9 : 10;
        };

        /**
         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.
         * @param {number|!Long} value Signed long
         * @returns {!Long} Unsigned zigzag encoded long
         * @expose
         */
        ByteBuffer.zigZagEncode64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            // ref: src/google/protobuf/wire_format_lite.h
            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();
        };

        /**
         * Decodes a zigzag encoded signed 64bit integer.
         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number
         * @returns {!Long} Signed long
         * @expose
         */
        ByteBuffer.zigZagDecode64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            // ref: src/google/protobuf/wire_format_lite.h
            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();
        };

        /**
         * Writes a 64bit base 128 variable-length integer.
         * @param {number|Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  written if omitted.
         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.
         * @expose
         */
        ByteBufferPrototype.writeVarint64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            var size = ByteBuffer.calculateVarint64(value),
                part0 = value.toInt() >>> 0,
                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,
                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;
            offset += size;
            var capacity11 = this.buffer.byteLength;
            if (offset > capacity11)
                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);
            offset -= size;
            switch (size) {
                case 10: this.view[offset+9] = (part2 >>>  7) & 0x01;
                case 9 : this.view[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;
                case 8 : this.view[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;
                case 7 : this.view[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;
                case 6 : this.view[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;
                case 5 : this.view[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;
                case 4 : this.view[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;
                case 3 : this.view[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;
                case 2 : this.view[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;
                case 1 : this.view[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;
            }
            if (relative) {
                this.offset += size;
                return this;
            } else {
                return size;
            }
        };

        /**
         * Writes a zig-zag encoded 64bit base 128 variable-length integer.
         * @param {number|Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  written if omitted.
         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.
         * @expose
         */
        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {
            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);
        };

        /**
         * Reads a 64bit base 128 variable-length integer. Requires Long.js.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  read if omitted.
         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and
         *  the actual number of bytes read.
         * @throws {Error} If it's not a valid varint
         * @expose
         */
        ByteBufferPrototype.readVarint64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 1 > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
            }
            // ref: src/google/protobuf/io/coded_stream.cc
            var start = offset,
                part0 = 0,
                part1 = 0,
                part2 = 0,
                b  = 0;
            b = this.view[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {
            b = this.view[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.view[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            throw Error("Buffer overrun"); }}}}}}}}}}
            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);
            if (relative) {
                this.offset = offset;
                return value;
            } else {
                return {
                    'value': value,
                    'length': offset-start
                };
            }
        };

        /**
         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  read if omitted.
         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and
         *  the actual number of bytes read.
         * @throws {Error} If it's not a valid varint
         * @expose
         */
        ByteBufferPrototype.readVarint64ZigZag = function(offset) {
            var val = this.readVarint64(offset);
            if (val && val['value'] instanceof Long)
                val["value"] = ByteBuffer.zigZagDecode64(val["value"]);
            else
                val = ByteBuffer.zigZagDecode64(val);
            return val;
        };

    } // Long


    // types/strings/cstring

    /**
     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL
     *  characters itself.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  contained in `str` + 1 if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeCString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        var i,
            k = str.length;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            for (i=0; i<k; ++i) {
                if (str.charCodeAt(i) === 0)
                    throw RangeError("Illegal str: Contains NULL-characters");
            }
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        // UTF8 strings do not contain zero bytes in between except for the zero character, so:
        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];
        offset += k+1;
        var capacity12 = this.buffer.byteLength;
        if (offset > capacity12)
            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);
        offset -= k+1;
        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {
            this.view[offset++] = b;
        }.bind(this));
        this.view[offset++] = 0;
        if (relative) {
            this.offset = offset;
            return this;
        }
        return k;
    };

    /**
     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters
     *  itself.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readCString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
        }
        var start = offset,
            temp;
        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:
        var sd, b = -1;
        utfx.decodeUTF8toUTF16(function() {
            if (b === 0) return null;
            if (offset >= this.limit)
                throw RangeError("Illegal range: Truncated data, "+offset+" < "+this.limit);
            b = this.view[offset++];
            return b === 0 ? null : b;
        }.bind(this), sd = stringDestination(), true);
        if (relative) {
            this.offset = offset;
            return sd();
        } else {
            return {
                "string": sd(),
                "length": offset - start
            };
        }
    };

    // types/strings/istring

    /**
     * Writes a length as uint32 prefixed UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written
     * @expose
     * @see ByteBuffer#writeVarint32
     */
    ByteBufferPrototype.writeIString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        var start = offset,
            k;
        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];
        offset += 4+k;
        var capacity13 = this.buffer.byteLength;
        if (offset > capacity13)
            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);
        offset -= 4+k;
        if (this.littleEndian) {
            this.view[offset+3] = (k >>> 24) & 0xFF;
            this.view[offset+2] = (k >>> 16) & 0xFF;
            this.view[offset+1] = (k >>>  8) & 0xFF;
            this.view[offset  ] =  k         & 0xFF;
        } else {
            this.view[offset  ] = (k >>> 24) & 0xFF;
            this.view[offset+1] = (k >>> 16) & 0xFF;
            this.view[offset+2] = (k >>>  8) & 0xFF;
            this.view[offset+3] =  k         & 0xFF;
        }
        offset += 4;
        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {
            this.view[offset++] = b;
        }.bind(this));
        if (offset !== start + 4 + k)
            throw RangeError("Illegal range: Truncated data, "+offset+" == "+(offset+4+k));
        if (relative) {
            this.offset = offset;
            return this;
        }
        return offset - start;
    };

    /**
     * Reads a length as uint32 prefixed UTF8 encoded string.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     * @see ByteBuffer#readVarint32
     */
    ByteBufferPrototype.readIString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.byteLength);
        }
        var start = offset;
        var len = this.readUint32(offset);
        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);
        offset += str['length'];
        if (relative) {
            this.offset = offset;
            return str['string'];
        } else {
            return {
                'string': str['string'],
                'length': offset - start
            };
        }
    };

    // types/strings/utf8string

    /**
     * Metrics representing number of UTF8 characters. Evaluates to `c`.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.METRICS_CHARS = 'c';

    /**
     * Metrics representing number of bytes. Evaluates to `b`.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.METRICS_BYTES = 'b';

    /**
     * Writes an UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.
     * @expose
     */
    ByteBufferPrototype.writeUTF8String = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        var k;
        var start = offset;
        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];
        offset += k;
        var capacity14 = this.buffer.byteLength;
        if (offset > capacity14)
            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);
        offset -= k;
        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {
            this.view[offset++] = b;
        }.bind(this));
        if (relative) {
            this.offset = offset;
            return this;
        }
        return offset - start;
    };

    /**
     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.
     * @function
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.
     * @expose
     */
    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;

    /**
     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's
     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 characters
     * @expose
     */
    ByteBuffer.calculateUTF8Chars = function(str) {
        return utfx.calculateUTF16asUTF8(stringSource(str))[0];
    };

    /**
     * Calculates the number of UTF8 bytes of a string.
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 bytes
     * @expose
     */
    ByteBuffer.calculateUTF8Bytes = function(str) {
        return utfx.calculateUTF16asUTF8(stringSource(str))[1];
    };

    /**
     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.
     * @function
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 bytes
     * @expose
     */
    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;

    /**
     * Reads an UTF8 encoded string.
     * @param {number} length Number of characters or bytes to read.
     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to
     *  {@link ByteBuffer.METRICS_CHARS}.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {
        if (typeof metrics === 'number') {
            offset = metrics;
            metrics = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;
        if (!this.noAssert) {
            if (typeof length !== 'number' || length % 1 !== 0)
                throw TypeError("Illegal length: "+length+" (not an integer)");
            length |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        var i = 0,
            start = offset,
            sd;
        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser
            sd = stringDestination();
            utfx.decodeUTF8(function() {
                return i < length && offset < this.limit ? this.view[offset++] : null;
            }.bind(this), function(cp) {
                ++i; utfx.UTF8toUTF16(cp, sd);
            });
            if (i !== length)
                throw RangeError("Illegal range: Truncated data, "+i+" == "+length);
            if (relative) {
                this.offset = offset;
                return sd();
            } else {
                return {
                    "string": sd(),
                    "length": offset - start
                };
            }
        } else if (metrics === ByteBuffer.METRICS_BYTES) {
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + length > this.buffer.byteLength)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+length+") <= "+this.buffer.byteLength);
            }
            var k = offset + length;
            utfx.decodeUTF8toUTF16(function() {
                return offset < k ? this.view[offset++] : null;
            }.bind(this), sd = stringDestination(), this.noAssert);
            if (offset !== k)
                throw RangeError("Illegal range: Truncated data, "+offset+" == "+k);
            if (relative) {
                this.offset = offset;
                return sd();
            } else {
                return {
                    'string': sd(),
                    'length': offset - start
                };
            }
        } else
            throw TypeError("Unsupported metrics: "+metrics);
    };

    /**
     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.
     * @function
     * @param {number} length Number of characters or bytes to read
     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to
     *  {@link ByteBuffer.METRICS_CHARS}.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;

    // types/strings/vstring

    /**
     * Writes a length as varint32 prefixed UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written
     * @expose
     * @see ByteBuffer#writeVarint32
     */
    ByteBufferPrototype.writeVString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        var start = offset,
            k, l;
        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];
        l = ByteBuffer.calculateVarint32(k);
        offset += l+k;
        var capacity15 = this.buffer.byteLength;
        if (offset > capacity15)
            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);
        offset -= l+k;
        offset += this.writeVarint32(k, offset);
        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {
            this.view[offset++] = b;
        }.bind(this));
        if (offset !== start+k+l)
            throw RangeError("Illegal range: Truncated data, "+offset+" == "+(offset+k+l));
        if (relative) {
            this.offset = offset;
            return this;
        }
        return offset - start;
    };

    /**
     * Reads a length as varint32 prefixed UTF8 encoded string.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     * @see ByteBuffer#readVarint32
     */
    ByteBufferPrototype.readVString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.byteLength);
        }
        var start = offset;
        var len = this.readVarint32(offset);
        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);
        offset += str['length'];
        if (relative) {
            this.offset = offset;
            return str['string'];
        } else {
            return {
                'string': str['string'],
                'length': offset - start
            };
        }
    };


    /**
     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended
     *  data's length.
     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets
     *  will be modified according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`
     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`
     */
    ByteBufferPrototype.append = function(source, encoding, offset) {
        if (typeof encoding === 'number' || typeof encoding !== 'string') {
            offset = encoding;
            encoding = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        if (!(source instanceof ByteBuffer))
            source = ByteBuffer.wrap(source, encoding);
        var length = source.limit - source.offset;
        if (length <= 0) return this; // Nothing to append
        offset += length;
        var capacity16 = this.buffer.byteLength;
        if (offset > capacity16)
            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);
        offset -= length;
        this.view.set(source.view.subarray(source.offset, source.limit), offset);
        source.offset += length;
        if (relative) this.offset += length;
        return this;
    };

    /**
     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the
        specified offset up to the length of this ByteBuffer's data.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @see ByteBuffer#append
     */
    ByteBufferPrototype.appendTo = function(target, offset) {
        target.append(this, offset);
        return this;
    };

    /**
     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to
     *  disable them if your code already makes sure that everything is valid.
     * @param {boolean} assert `true` to enable assertions, otherwise `false`
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.assert = function(assert) {
        this.noAssert = !assert;
        return this;
    };

    /**
     * Gets the capacity of this ByteBuffer's backing buffer.
     * @returns {number} Capacity of the backing buffer
     * @expose
     */
    ByteBufferPrototype.capacity = function() {
        return this.buffer.byteLength;
    };
    /**
     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the
     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.clear = function() {
        this.offset = 0;
        this.limit = this.buffer.byteLength;
        this.markedOffset = -1;
        return this;
    };

    /**
     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},
     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.
     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`
     * @returns {!ByteBuffer} Cloned instance
     * @expose
     */
    ByteBufferPrototype.clone = function(copy) {
        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);
        if (copy) {
            bb.buffer = new ArrayBuffer(this.buffer.byteLength);
            bb.view = new Uint8Array(bb.buffer);
        } else {
            bb.buffer = this.buffer;
            bb.view = this.view;
        }
        bb.offset = this.offset;
        bb.markedOffset = this.markedOffset;
        bb.limit = this.limit;
        return bb;
    };

    /**
     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes
     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and
     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.
     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.compact = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        if (begin === 0 && end === this.buffer.byteLength)
            return this; // Already compacted
        var len = end - begin;
        if (len === 0) {
            this.buffer = EMPTY_BUFFER;
            this.view = null;
            if (this.markedOffset >= 0) this.markedOffset -= begin;
            this.offset = 0;
            this.limit = 0;
            return this;
        }
        var buffer = new ArrayBuffer(len);
        var view = new Uint8Array(buffer);
        view.set(this.view.subarray(begin, end));
        this.buffer = buffer;
        this.view = view;
        if (this.markedOffset >= 0) this.markedOffset -= begin;
        this.offset = 0;
        this.limit = len;
        return this;
    };

    /**
     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}.
     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} Copy
     * @expose
     */
    ByteBufferPrototype.copy = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        if (begin === end)
            return new ByteBuffer(0, this.littleEndian, this.noAssert);
        var capacity = end - begin,
            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);
        bb.offset = 0;
        bb.limit = capacity;
        if (bb.markedOffset >= 0) bb.markedOffset -= begin;
        this.copyTo(bb, 0, begin, end);
        return bb;
    };

    /**
     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}
     *  by the number of bytes copied if omitted.
     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the
     *  number of bytes copied if omitted.
     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {
        var relative,
            targetRelative;
        if (!this.noAssert) {
            if (!ByteBuffer.isByteBuffer(target))
                throw TypeError("Illegal target: Not a ByteBuffer");
        }
        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;
        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;
        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;

        if (targetOffset < 0 || targetOffset > target.buffer.byteLength)
            throw RangeError("Illegal target range: 0 <= "+targetOffset+" <= "+target.buffer.byteLength);
        if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength)
            throw RangeError("Illegal source range: 0 <= "+sourceOffset+" <= "+this.buffer.byteLength);

        var len = sourceLimit - sourceOffset;
        if (len === 0)
            return target; // Nothing to copy

        target.ensureCapacity(targetOffset + len);

        target.view.set(this.view.subarray(sourceOffset, sourceLimit), targetOffset);

        if (relative) this.offset += len;
        if (targetRelative) target.offset += len;

        return this;
    };

    /**
     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the
     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,
     *  the required capacity will be used instead.
     * @param {number} capacity Required capacity
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.ensureCapacity = function(capacity) {
        var current = this.buffer.byteLength;
        if (current < capacity)
            return this.resize((current *= 2) > capacity ? current : capacity);
        return this;
    };

    /**
     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.
     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.
     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted. defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} this
     * @expose
     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes
     */
    ByteBufferPrototype.fill = function(value, begin, end) {
        var relative = typeof begin === 'undefined';
        if (relative) begin = this.offset;
        if (typeof value === 'string' && value.length > 0)
            value = value.charCodeAt(0);
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        if (begin >= end)
            return this; // Nothing to fill
        while (begin < end) this.view[begin++] = value;
        if (relative) this.offset = begin;
        return this;
    };

    /**
     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and
     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.flip = function() {
        this.limit = this.offset;
        this.offset = 0;
        return this;
    };
    /**
     * Marks an offset on this ByteBuffer to be used later.
     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.
     * @returns {!ByteBuffer} this
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @see ByteBuffer#reset
     * @expose
     */
    ByteBufferPrototype.mark = function(offset) {
        offset = typeof offset === 'undefined' ? this.offset : offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        this.markedOffset = offset;
        return this;
    };
    /**
     * Sets the byte order.
     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.order = function(littleEndian) {
        if (!this.noAssert) {
            if (typeof littleEndian !== 'boolean')
                throw TypeError("Illegal littleEndian: Not a boolean");
        }
        this.littleEndian = !!littleEndian;
        return this;
    };

    /**
     * Switches (to) little endian byte order.
     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.LE = function(littleEndian) {
        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;
        return this;
    };

    /**
     * Switches (to) big endian byte order.
     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.BE = function(bigEndian) {
        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;
        return this;
    };
    /**
     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the
     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer
     *  will be resized and its contents moved accordingly.
     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be
     *  modified according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes
     *  prepended if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`
     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`
     */
    ByteBufferPrototype.prepend = function(source, encoding, offset) {
        if (typeof encoding === 'number' || typeof encoding !== 'string') {
            offset = encoding;
            encoding = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.byteLength)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.byteLength);
        }
        if (!(source instanceof ByteBuffer))
            source = ByteBuffer.wrap(source, encoding);
        var len = source.limit - source.offset;
        if (len <= 0) return this; // Nothing to prepend
        var diff = len - offset;
        if (diff > 0) { // Not enough space before offset, so resize + move
            var buffer = new ArrayBuffer(this.buffer.byteLength + diff);
            var view = new Uint8Array(buffer);
            view.set(this.view.subarray(offset, this.buffer.byteLength), len);
            this.buffer = buffer;
            this.view = view;
            this.offset += diff;
            if (this.markedOffset >= 0) this.markedOffset += diff;
            this.limit += diff;
            offset += diff;
        } else {
            var arrayView = new Uint8Array(this.buffer);
        }
        this.view.set(source.view.subarray(source.offset, source.limit), offset - len);

        source.offset = source.limit;
        if (relative)
            this.offset -= len;
        return this;
    };

    /**
     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the
     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer
     *  will be resized and its contents moved accordingly.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes
     *  prepended if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @see ByteBuffer#prepend
     */
    ByteBufferPrototype.prependTo = function(target, offset) {
        target.prepend(this, offset);
        return this;
    };
    /**
     * Prints debug information about this ByteBuffer's contents.
     * @param {function(string)=} out Output function to call, defaults to console.log
     * @expose
     */
    ByteBufferPrototype.printDebug = function(out) {
        if (typeof out !== 'function') out = console.log.bind(console);
        out(
            this.toString()+"\n"+
            "-------------------------------------------------------------------\n"+
            this.toDebug(/* columns */ true)
        );
    };

    /**
     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.
     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.
     * @expose
     */
    ByteBufferPrototype.remaining = function() {
        return this.limit - this.offset;
    };
    /**
     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}
     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been
     *  marked, sets `offset = 0`.
     * @returns {!ByteBuffer} this
     * @see ByteBuffer#mark
     * @expose
     */
    ByteBufferPrototype.reset = function() {
        if (this.markedOffset >= 0) {
            this.offset = this.markedOffset;
            this.markedOffset = -1;
        } else {
            this.offset = 0;
        }
        return this;
    };
    /**
     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that
     *  large or larger.
     * @param {number} capacity Capacity required
     * @returns {!ByteBuffer} this
     * @throws {TypeError} If `capacity` is not a number
     * @throws {RangeError} If `capacity < 0`
     * @expose
     */
    ByteBufferPrototype.resize = function(capacity) {
        if (!this.noAssert) {
            if (typeof capacity !== 'number' || capacity % 1 !== 0)
                throw TypeError("Illegal capacity: "+capacity+" (not an integer)");
            capacity |= 0;
            if (capacity < 0)
                throw RangeError("Illegal capacity: 0 <= "+capacity);
        }
        if (this.buffer.byteLength < capacity) {
            var buffer = new ArrayBuffer(capacity);
            var view = new Uint8Array(buffer);
            view.set(this.view);
            this.buffer = buffer;
            this.view = view;
        }
        return this;
    };
    /**
     * Reverses this ByteBuffer's contents.
     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.reverse = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        if (begin === end)
            return this; // Nothing to reverse
        Array.prototype.reverse.call(this.view.subarray(begin, end));
        return this;
    };
    /**
     * Skips the next `length` bytes. This will just advance
     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.skip = function(length) {
        if (!this.noAssert) {
            if (typeof length !== 'number' || length % 1 !== 0)
                throw TypeError("Illegal length: "+length+" (not an integer)");
            length |= 0;
        }
        var offset = this.offset + length;
        if (!this.noAssert) {
            if (offset < 0 || offset > this.buffer.byteLength)
                throw RangeError("Illegal length: 0 <= "+this.offset+" + "+length+" <= "+this.buffer.byteLength);
        }
        this.offset = offset;
        return this;
    };

    /**
     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.
     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}
     * @expose
     */
    ByteBufferPrototype.slice = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        var bb = this.clone();
        bb.offset = begin;
        bb.limit = end;
        return bb;
    };
    /**
     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.
     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if
     *  possible. Defaults to `false`
     * @returns {!ArrayBuffer} Contents as an ArrayBuffer
     * @expose
     */
    ByteBufferPrototype.toBuffer = function(forceCopy) {
        var offset = this.offset,
            limit = this.limit;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: Not an integer");
            offset >>>= 0;
            if (typeof limit !== 'number' || limit % 1 !== 0)
                throw TypeError("Illegal limit: Not an integer");
            limit >>>= 0;
            if (offset < 0 || offset > limit || limit > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+offset+" <= "+limit+" <= "+this.buffer.byteLength);
        }
        // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is
        // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:
        if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)
            return this.buffer;
        if (offset === limit)
            return EMPTY_BUFFER;
        var buffer = new ArrayBuffer(limit - offset);
        new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);
        return buffer;
    };

    /**
     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.
     * @function
     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.
     *  Defaults to `false`
     * @returns {!ArrayBuffer} Contents as an ArrayBuffer
     * @expose
     */
    ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;

    /**
     * Converts the ByteBuffer's contents to a string.
     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows
     *  direct conversion to "utf8", "hex", "base64" and "binary" encoding. "debug" returns a hex representation with
     *  highlighted offsets.
     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {string} String representation
     * @throws {Error} If `encoding` is invalid
     * @expose
     */
    ByteBufferPrototype.toString = function(encoding, begin, end) {
        if (typeof encoding === 'undefined')
            return "ByteBufferAB(offset="+this.offset+",markedOffset="+this.markedOffset+",limit="+this.limit+",capacity="+this.capacity()+")";
        if (typeof encoding === 'number')
            encoding = "utf8",
            begin = encoding,
            end = begin;
        switch (encoding) {
            case "utf8":
                return this.toUTF8(begin, end);
            case "base64":
                return this.toBase64(begin, end);
            case "hex":
                return this.toHex(begin, end);
            case "binary":
                return this.toBinary(begin, end);
            case "debug":
                return this.toDebug();
            case "columns":
                return this.toColumns();
            default:
                throw Error("Unsupported encoding: "+encoding);
        }
    };

    // lxiv-embeddable

    /**
     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>
     * Released under the Apache License, Version 2.0
     * see: https://github.com/dcodeIO/lxiv for details
     */
    var lxiv = function() {
        "use strict";

        /**
         * lxiv namespace.
         * @type {!Object.<string,*>}
         * @exports lxiv
         */
        var lxiv = {};

        /**
         * Character codes for output.
         * @type {!Array.<number>}
         * @inner
         */
        var aout = [
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,
            103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
            119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47
        ];

        /**
         * Character codes for input.
         * @type {!Array.<number>}
         * @inner
         */
        var ain = [];
        for (var i=0, k=aout.length; i<k; ++i)
            ain[aout[i]] = i;

        /**
         * Encodes bytes to base64 char codes.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if
         *  there are no more bytes left.
         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char
         *  code.
         */
        lxiv.encode = function(src, dst) {
            var b, t;
            while ((b = src()) !== null) {
                dst(aout[(b>>2)&0x3f]);
                t = (b&0x3)<<4;
                if ((b = src()) !== null) {
                    t |= (b>>4)&0xf;
                    dst(aout[(t|((b>>4)&0xf))&0x3f]);
                    t = (b&0xf)<<2;
                    if ((b = src()) !== null)
                        dst(aout[(t|((b>>6)&0x3))&0x3f]),
                        dst(aout[b&0x3f]);
                    else
                        dst(aout[t&0x3f]),
                        dst(61);
                } else
                    dst(aout[t&0x3f]),
                    dst(61),
                    dst(61);
            }
        };

        /**
         * Decodes base64 char codes to bytes.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.
         * @throws {Error} If a character code is invalid
         */
        lxiv.decode = function(src, dst) {
            var c, t1, t2;
            function fail(c) {
                throw Error("Illegal character code: "+c);
            }
            while ((c = src()) !== null) {
                t1 = ain[c];
                if (typeof t1 === 'undefined') fail(c);
                if ((c = src()) !== null) {
                    t2 = ain[c];
                    if (typeof t2 === 'undefined') fail(c);
                    dst((t1<<2)>>>0|(t2&0x30)>>4);
                    if ((c = src()) !== null) {
                        t1 = ain[c];
                        if (typeof t1 === 'undefined')
                            if (c === 61) break; else fail(c);
                        dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);
                        if ((c = src()) !== null) {
                            t2 = ain[c];
                            if (typeof t2 === 'undefined')
                                if (c === 61) break; else fail(c);
                            dst(((t1&0x3)<<6)>>>0|t2);
                        }
                    }
                }
            }
        };

        /**
         * Tests if a string is valid base64.
         * @param {string} str String to test
         * @returns {boolean} `true` if valid, otherwise `false`
         */
        lxiv.test = function(str) {
            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);
        };

        return lxiv;
    }();

    // encodings/base64

    /**
     * Encodes this ByteBuffer's contents to a base64 encoded string.
     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.
     * @returns {string} Base64 encoded string
     * @throws {RangeError} If `begin` or `end` is out of bounds
     * @expose
     */
    ByteBufferPrototype.toBase64 = function(begin, end) {
        if (typeof begin === 'undefined')
            begin = this.offset;
        if (typeof end === 'undefined')
            end = this.limit;
        begin = begin | 0; end = end | 0;
        if (begin < 0 || end > this.capacity || begin > end)
            throw RangeError("begin, end");
        var sd; lxiv.encode(function() {
            return begin < end ? this.view[begin++] : null;
        }.bind(this), sd = stringDestination());
        return sd();
    };

    /**
     * Decodes a base64 encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromBase64 = function(str, littleEndian) {
        if (typeof str !== 'string')
            throw TypeError("str");
        var bb = new ByteBuffer(str.length/4*3, littleEndian),
            i = 0;
        lxiv.decode(stringSource(str), function(b) {
            bb.view[i++] = b;
        });
        bb.limit = i;
        return bb;
    };

    /**
     * Encodes a binary string to base64 like `window.btoa` does.
     * @param {string} str Binary string
     * @returns {string} Base64 encoded string
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa
     * @expose
     */
    ByteBuffer.btoa = function(str) {
        return ByteBuffer.fromBinary(str).toBase64();
    };

    /**
     * Decodes a base64 encoded string to binary like `window.atob` does.
     * @param {string} b64 Base64 encoded string
     * @returns {string} Binary string
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob
     * @expose
     */
    ByteBuffer.atob = function(b64) {
        return ByteBuffer.fromBase64(b64).toBinary();
    };

    // encodings/binary

    /**
     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.
     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.
     * @returns {string} Binary encoded string
     * @throws {RangeError} If `offset > limit`
     * @expose
     */
    ByteBufferPrototype.toBinary = function(begin, end) {
        if (typeof begin === 'undefined')
            begin = this.offset;
        if (typeof end === 'undefined')
            end = this.limit;
        begin |= 0; end |= 0;
        if (begin < 0 || end > this.capacity() || begin > end)
            throw RangeError("begin, end");
        if (begin === end)
            return "";
        var chars = [],
            parts = [];
        while (begin < end) {
            chars.push(this.view[begin++]);
            if (chars.length >= 1024)
                parts.push(String.fromCharCode.apply(String, chars)),
                chars = [];
        }
        return parts.join('') + String.fromCharCode.apply(String, chars);
    };

    /**
     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromBinary = function(str, littleEndian) {
        if (typeof str !== 'string')
            throw TypeError("str");
        var i = 0,
            k = str.length,
            charCode,
            bb = new ByteBuffer(k, littleEndian);
        while (i<k) {
            charCode = str.charCodeAt(i);
            if (charCode > 0xff)
                throw RangeError("illegal char code: "+charCode);
            bb.view[i++] = charCode;
        }
        bb.limit = k;
        return bb;
    };

    // encodings/debug

    /**
     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:
     * * `<` : offset,
     * * `'` : markedOffset,
     * * `>` : limit,
     * * `|` : offset and limit,
     * * `[` : offset and markedOffset,
     * * `]` : markedOffset and limit,
     * * `!` : offset, markedOffset and limit
     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`
     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`
     * @expose
     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`
     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`
     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`
     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`
     */
    ByteBufferPrototype.toDebug = function(columns) {
        var i = -1,
            k = this.buffer.byteLength,
            b,
            hex = "",
            asc = "",
            out = "";
        while (i<k) {
            if (i !== -1) {
                b = this.view[i];
                if (b < 0x10) hex += "0"+b.toString(16).toUpperCase();
                else hex += b.toString(16).toUpperCase();
                if (columns)
                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';
            }
            ++i;
            if (columns) {
                if (i > 0 && i % 16 === 0 && i !== k) {
                    while (hex.length < 3*16+3) hex += " ";
                    out += hex+asc+"\n";
                    hex = asc = "";
                }
            }
            if (i === this.offset && i === this.limit)
                hex += i === this.markedOffset ? "!" : "|";
            else if (i === this.offset)
                hex += i === this.markedOffset ? "[" : "<";
            else if (i === this.limit)
                hex += i === this.markedOffset ? "]" : ">";
            else
                hex += i === this.markedOffset ? "'" : (columns || (i !== 0 && i !== k) ? " " : "");
        }
        if (columns && hex !== " ") {
            while (hex.length < 3*16+3)
                hex += " ";
            out += hex + asc + "\n";
        }
        return columns ? out : hex;
    };

    /**
     * Decodes a hex encoded string with marked offsets to a ByteBuffer.
     * @param {string} str Debug string to decode (not be generated with `columns = true`)
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     * @see ByteBuffer#toDebug
     */
    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {
        var k = str.length,
            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);
        var i = 0, j = 0, ch, b,
            rs = false, // Require symbol next
            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?
            fail = false;
        while (i<k) {
            switch (ch = str.charAt(i++)) {
                case '!':
                    if (!noAssert) {
                        if (ho || hm || hl) {
                            fail = true;
                            break;
                        }
                        ho = hm = hl = true;
                    }
                    bb.offset = bb.markedOffset = bb.limit = j;
                    rs = false;
                    break;
                case '|':
                    if (!noAssert) {
                        if (ho || hl) {
                            fail = true;
                            break;
                        }
                        ho = hl = true;
                    }
                    bb.offset = bb.limit = j;
                    rs = false;
                    break;
                case '[':
                    if (!noAssert) {
                        if (ho || hm) {
                            fail = true;
                            break;
                        }
                        ho = hm = true;
                    }
                    bb.offset = bb.markedOffset = j;
                    rs = false;
                    break;
                case '<':
                    if (!noAssert) {
                        if (ho) {
                            fail = true;
                            break;
                        }
                        ho = true;
                    }
                    bb.offset = j;
                    rs = false;
                    break;
                case ']':
                    if (!noAssert) {
                        if (hl || hm) {
                            fail = true;
                            break;
                        }
                        hl = hm = true;
                    }
                    bb.limit = bb.markedOffset = j;
                    rs = false;
                    break;
                case '>':
                    if (!noAssert) {
                        if (hl) {
                            fail = true;
                            break;
                        }
                        hl = true;
                    }
                    bb.limit = j;
                    rs = false;
                    break;
                case "'":
                    if (!noAssert) {
                        if (hm) {
                            fail = true;
                            break;
                        }
                        hm = true;
                    }
                    bb.markedOffset = j;
                    rs = false;
                    break;
                case ' ':
                    rs = false;
                    break;
                default:
                    if (!noAssert) {
                        if (rs) {
                            fail = true;
                            break;
                        }
                    }
                    b = parseInt(ch+str.charAt(i++), 16);
                    if (!noAssert) {
                        if (isNaN(b) || b < 0 || b > 255)
                            throw TypeError("Illegal str: Not a debug encoded string");
                    }
                    bb.view[j++] = b;
                    rs = true;
            }
            if (fail)
                throw TypeError("Illegal str: Invalid symbol at "+i);
        }
        if (!noAssert) {
            if (!ho || !hl)
                throw TypeError("Illegal str: Missing offset or limit");
            if (j<bb.buffer.byteLength)
                throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+j+" < "+k);
        }
        return bb;
    };

    // encodings/hex

    /**
     * Encodes this ByteBuffer's contents to a hex encoded string.
     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.
     * @returns {string} Hex encoded string
     * @expose
     */
    ByteBufferPrototype.toHex = function(begin, end) {
        begin = typeof begin === 'undefined' ? this.offset : begin;
        end = typeof end === 'undefined' ? this.limit : end;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        var out = new Array(end - begin),
            b;
        while (begin < end) {
            b = this.view[begin++];
            if (b < 0x10)
                out.push("0", b.toString(16));
            else out.push(b.toString(16));
        }
        return out.join('');
    };

    /**
     * Decodes a hex encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {
        if (!noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (str.length % 2 !== 0)
                throw TypeError("Illegal str: Length not a multiple of 2");
        }
        var k = str.length,
            bb = new ByteBuffer((k / 2) | 0, littleEndian),
            b;
        for (var i=0, j=0; i<k; i+=2) {
            b = parseInt(str.substring(i, i+2), 16);
            if (!noAssert)
                if (!isFinite(b) || b < 0 || b > 255)
                    throw TypeError("Illegal str: Contains non-hex characters");
            bb.view[j++] = b;
        }
        bb.limit = j;
        return bb;
    };

    // utfx-embeddable

    /**
     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>
     * Released under the Apache License, Version 2.0
     * see: https://github.com/dcodeIO/utfx for details
     */
    var utfx = function() {
        "use strict";

        /**
         * utfx namespace.
         * @inner
         * @type {!Object.<string,*>}
         */
        var utfx = {};

        /**
         * Maximum valid code point.
         * @type {number}
         * @const
         */
        utfx.MAX_CODEPOINT = 0x10FFFF;

        /**
         * Encodes UTF8 code points to UTF8 bytes.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte
         */
        utfx.encodeUTF8 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number')
                cp = src,
                src = function() { return null; };
            while (cp !== null || (cp = src()) !== null) {
                if (cp < 0x80)
                    dst(cp&0x7F);
                else if (cp < 0x800)
                    dst(((cp>>6)&0x1F)|0xC0),
                    dst((cp&0x3F)|0x80);
                else if (cp < 0x10000)
                    dst(((cp>>12)&0x0F)|0xE0),
                    dst(((cp>>6)&0x3F)|0x80),
                    dst((cp&0x3F)|0x80);
                else
                    dst(((cp>>18)&0x07)|0xF0),
                    dst(((cp>>12)&0x3F)|0x80),
                    dst(((cp>>6)&0x3F)|0x80),
                    dst((cp&0x3F)|0x80);
                cp = null;
            }
        };

        /**
         * Decodes UTF8 bytes to UTF8 code points.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the
         *  remaining bytes.
         */
        utfx.decodeUTF8 = function(src, dst) {
            var a, b, c, d, fail = function(b) {
                b = b.slice(0, b.indexOf(null));
                var err = Error(b.toString());
                err.name = "TruncatedError";
                err['bytes'] = b;
                throw err;
            };
            while ((a = src()) !== null) {
                if ((a&0x80) === 0)
                    dst(a);
                else if ((a&0xE0) === 0xC0)
                    ((b = src()) === null) && fail([a, b]),
                    dst(((a&0x1F)<<6) | (b&0x3F));
                else if ((a&0xF0) === 0xE0)
                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),
                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));
                else if ((a&0xF8) === 0xF0)
                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),
                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));
                else throw RangeError("Illegal starting byte: "+a);
            }
        };

        /**
         * Converts UTF16 characters to UTF8 code points.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @param {!function(number)} dst Code points destination as a function successively called with each converted code
         *  point.
         */
        utfx.UTF16toUTF8 = function(src, dst) {
            var c1, c2 = null;
            while (true) {
                if ((c1 = c2 !== null ? c2 : src()) === null)
                    break;
                if (c1 >= 0xD800 && c1 <= 0xDFFF) {
                    if ((c2 = src()) !== null) {
                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {
                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);
                            c2 = null; continue;
                        }
                    }
                }
                dst(c1);
            }
            if (c2 !== null) dst(c2);
        };

        /**
         * Converts UTF8 code points to UTF16 characters.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a code point is out of range
         */
        utfx.UTF8toUTF16 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number')
                cp = src, src = function() { return null; };
            while (cp !== null || (cp = src()) !== null) {
                if (cp <= 0xFFFF)
                    dst(cp);
                else
                    cp -= 0x10000,
                    dst((cp>>10)+0xD800),
                    dst((cp%0x400)+0xDC00);
                cp = null;
            }
        };

        /**
         * Converts and encodes UTF16 characters to UTF8 bytes.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`
         *  if there are no more characters left.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.
         */
        utfx.encodeUTF16toUTF8 = function(src, dst) {
            utfx.UTF16toUTF8(src, function(cp) {
                utfx.encodeUTF8(cp, dst);
            });
        };

        /**
         * Decodes and converts UTF8 bytes to UTF16 characters.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.
         */
        utfx.decodeUTF8toUTF16 = function(src, dst) {
            utfx.decodeUTF8(src, function(cp) {
                utfx.UTF8toUTF16(cp, dst);
            });
        };

        /**
         * Calculates the byte length of an UTF8 code point.
         * @param {number} cp UTF8 code point
         * @returns {number} Byte length
         */
        utfx.calculateCodePoint = function(cp) {
            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
        };

        /**
         * Calculates the number of UTF8 bytes required to store UTF8 code points.
         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively
         *  `null` if there are no more code points left.
         * @returns {number} The number of UTF8 bytes required
         */
        utfx.calculateUTF8 = function(src) {
            var cp, l=0;
            while ((cp = src()) !== null)
                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
            return l;
        };

        /**
         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.
         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.
         */
        utfx.calculateUTF16asUTF8 = function(src) {
            var n=0, l=0;
            utfx.UTF16toUTF8(src, function(cp) {
                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
            });
            return [n,l];
        };

        return utfx;
    }();

    // encodings/utf8

    /**
     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded
     *  string.
     * @returns {string} Hex encoded string
     * @throws {RangeError} If `offset > limit`
     * @expose
     */
    ByteBufferPrototype.toUTF8 = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.byteLength)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.byteLength);
        }
        var sd; try {
            utfx.decodeUTF8toUTF16(function() {
                return begin < end ? this.view[begin++] : null;
            }.bind(this), sd = stringDestination());
        } catch (e) {
            if (begin !== end)
                throw RangeError("Illegal range: Truncated data, "+begin+" != "+end);
        }
        return sd();
    };

    /**
     * Decodes an UTF8 encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {
        if (!noAssert)
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
        var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),
            i = 0;
        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {
            bb.view[i++] = b;
        });
        bb.limit = i;
        return bb;
    };

    return ByteBuffer;
});

},{"long":150}],57:[function(require,module,exports){
var upperCase = require('upper-case')
var noCase = require('no-case')

/**
 * Camel case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale, mergeNumbers) {
  var result = noCase(value, locale)

  // Replace periods between numeric entities with an underscore.
  if (!mergeNumbers) {
    result = result.replace(/ (?=\d)/g, '_')
  }

  // Replace spaces between words with an upper cased character.
  return result.replace(/ (.)/g, function (m, $1) {
    return upperCase($1, locale)
  })
}

},{"no-case":157,"upper-case":206}],58:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":146,"safe-buffer":195,"stream":204,"string_decoder":205}],59:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":147}],60:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

}).call(this,require("buffer").Buffer)
},{"bn.js":23,"buffer":55,"elliptic":82}],61:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var md5 = require('./md5')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')

var Base = require('cipher-base')

function HashNoConstructor (hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new HashNoConstructor(md5)
  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())

  return new Hash(sha(alg))
}

}).call(this,require("buffer").Buffer)
},{"./md5":63,"buffer":55,"cipher-base":58,"inherits":146,"ripemd160":194,"sha.js":197}],62:[function(require,module,exports){
(function (Buffer){
'use strict'
var intSize = 4
var zeroBuffer = new Buffer(intSize)
zeroBuffer.fill(0)

var charSize = 8
var hashSize = 16

function toArray (buf) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize))
    buf = Buffer.concat([buf, zeroBuffer], len)
  }

  var arr = new Array(buf.length >>> 2)
  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {
    arr[j] = buf.readInt32LE(i)
  }

  return arr
}

module.exports = function hash (buf, fn) {
  var arr = fn(toArray(buf), buf.length * charSize)
  buf = new Buffer(hashSize)
  for (var i = 0; i < arr.length; i++) {
    buf.writeInt32LE(arr[i], i << 2, true)
  }
  return buf
}

}).call(this,require("buffer").Buffer)
},{"buffer":55}],63:[function(require,module,exports){
'use strict'
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var makeHash = require('./make-hash')

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5 (x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32)
  x[(((len + 64) >>> 9) << 4) + 14] = len

  var a = 1732584193
  var b = -271733879
  var c = -1732584194
  var d = 271733878

  for (var i = 0; i < x.length; i += 16) {
    var olda = a
    var oldb = b
    var oldc = c
    var oldd = d

    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)
    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)
    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)
    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)
    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)
    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)
    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)
    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)
    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)
    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)
    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)
    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)
    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)
    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)
    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)
    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)

    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)
    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)
    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)
    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)
    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)
    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)
    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)
    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)
    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)
    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)
    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)
    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)
    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)
    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)
    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)
    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)

    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)
    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)
    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)
    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)
    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)
    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)
    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)
    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)
    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)
    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)
    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)
    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)
    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)
    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)
    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)
    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)

    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)
    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)
    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)
    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)
    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)
    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)
    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)
    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)
    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)
    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)
    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)
    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)
    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)
    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)
    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)
    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)

    a = safe_add(a, olda)
    b = safe_add(b, oldb)
    c = safe_add(c, oldc)
    d = safe_add(d, oldd)
  }

  return [a, b, c, d]
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn (q, a, b, x, s, t) {
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
}

function md5_ff (a, b, c, d, x, s, t) {
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)
}

function md5_gg (a, b, c, d, x, s, t) {
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)
}

function md5_hh (a, b, c, d, x, s, t) {
  return md5_cmn(b ^ c ^ d, a, b, x, s, t)
}

function md5_ii (a, b, c, d, x, s, t) {
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add (x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF)
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
  return (msw << 16) | (lsw & 0xFFFF)
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol (num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt))
}

module.exports = function md5 (buf) {
  return makeHash(buf, core_md5)
}

},{"./make-hash":62}],64:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":65,"cipher-base":58,"create-hash/md5":63,"inherits":146,"ripemd160":194,"safe-buffer":195,"sha.js":197}],65:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":58,"inherits":146,"safe-buffer":195}],66:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":42,"browserify-sign":49,"browserify-sign/algos":46,"create-ecdh":60,"create-hash":61,"create-hmac":64,"diffie-hellman":73,"pbkdf2":167,"public-encrypt":174,"randombytes":180}],67:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":68,"./des/cipher":69,"./des/des":70,"./des/ede":71,"./des/utils":72}],68:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":146,"minimalistic-assert":155}],69:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":155}],70:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":67,"inherits":146,"minimalistic-assert":155}],71:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":67,"inherits":146,"minimalistic-assert":155}],72:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],73:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":74,"./lib/generatePrime":75,"./lib/primes.json":76,"buffer":55}],74:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":75,"bn.js":23,"buffer":55,"miller-rabin":154,"randombytes":180}],75:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":23,"miller-rabin":154,"randombytes":180}],76:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],77:[function(require,module,exports){
var assert = require('assert')
var BigInteger = require('bigi')

var Point = require('./point')

function Curve (p, a, b, Gx, Gy, n, h) {
  this.p = p
  this.a = a
  this.b = b
  this.G = Point.fromAffine(this, Gx, Gy)
  this.n = n
  this.h = h

  this.infinity = new Point(this, null, null, BigInteger.ZERO)

  // result caching
  this.pOverFour = p.add(BigInteger.ONE).shiftRight(2)

  // determine size of p in bytes
  this.pLength = Math.floor((this.p.bitLength() + 7) / 8)
}

Curve.prototype.pointFromX = function (isOdd, x) {
  var alpha = x.pow(3).add(this.a.multiply(x)).add(this.b).mod(this.p)
  var beta = alpha.modPow(this.pOverFour, this.p) // XXX: not compatible with all curves

  var y = beta
  if (beta.isEven() ^ !isOdd) {
    y = this.p.subtract(y) // -y % p
  }

  return Point.fromAffine(this, x, y)
}

Curve.prototype.isInfinity = function (Q) {
  if (Q === this.infinity) return true

  return Q.z.signum() === 0 && Q.y.signum() !== 0
}

Curve.prototype.isOnCurve = function (Q) {
  if (this.isInfinity(Q)) return true

  var x = Q.affineX
  var y = Q.affineY
  var a = this.a
  var b = this.b
  var p = this.p

  // Check that xQ and yQ are integers in the interval [0, p - 1]
  if (x.signum() < 0 || x.compareTo(p) >= 0) return false
  if (y.signum() < 0 || y.compareTo(p) >= 0) return false

  // and check that y^2 = x^3 + ax + b (mod p)
  var lhs = y.square().mod(p)
  var rhs = x.pow(3).add(a.multiply(x)).add(b).mod(p)
  return lhs.equals(rhs)
}

/**
 * Validate an elliptic curve point.
 *
 * See SEC 1, section 3.2.2.1: Elliptic Curve Public Key Validation Primitive
 */
Curve.prototype.validate = function (Q) {
  // Check Q != O
  assert(!this.isInfinity(Q), 'Point is at infinity')
  assert(this.isOnCurve(Q), 'Point is not on the curve')

  // Check nQ = O (where Q is a scalar multiple of G)
  var nQ = Q.multiply(this.n)
  assert(this.isInfinity(nQ), 'Point is not a scalar multiple of G')

  return true
}

module.exports = Curve

},{"./point":81,"assert":15,"bigi":20}],78:[function(require,module,exports){
module.exports={
  "secp128r1": {
    "p": "fffffffdffffffffffffffffffffffff",
    "a": "fffffffdfffffffffffffffffffffffc",
    "b": "e87579c11079f43dd824993c2cee5ed3",
    "n": "fffffffe0000000075a30d1b9038a115",
    "h": "01",
    "Gx": "161ff7528b899b2d0c28607ca52c5b86",
    "Gy": "cf5ac8395bafeb13c02da292dded7a83"
  },
  "secp160k1": {
    "p": "fffffffffffffffffffffffffffffffeffffac73",
    "a": "00",
    "b": "07",
    "n": "0100000000000000000001b8fa16dfab9aca16b6b3",
    "h": "01",
    "Gx": "3b4c382ce37aa192a4019e763036f4f5dd4d7ebb",
    "Gy": "938cf935318fdced6bc28286531733c3f03c4fee"
  },
  "secp160r1": {
    "p": "ffffffffffffffffffffffffffffffff7fffffff",
    "a": "ffffffffffffffffffffffffffffffff7ffffffc",
    "b": "1c97befc54bd7a8b65acf89f81d4d4adc565fa45",
    "n": "0100000000000000000001f4c8f927aed3ca752257",
    "h": "01",
    "Gx": "4a96b5688ef573284664698968c38bb913cbfc82",
    "Gy": "23a628553168947d59dcc912042351377ac5fb32"
  },
  "secp192k1": {
    "p": "fffffffffffffffffffffffffffffffffffffffeffffee37",
    "a": "00",
    "b": "03",
    "n": "fffffffffffffffffffffffe26f2fc170f69466a74defd8d",
    "h": "01",
    "Gx": "db4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d",
    "Gy": "9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d"
  },
  "secp192r1": {
    "p": "fffffffffffffffffffffffffffffffeffffffffffffffff",
    "a": "fffffffffffffffffffffffffffffffefffffffffffffffc",
    "b": "64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1",
    "n": "ffffffffffffffffffffffff99def836146bc9b1b4d22831",
    "h": "01",
    "Gx": "188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012",
    "Gy": "07192b95ffc8da78631011ed6b24cdd573f977a11e794811"
  },
  "secp256k1": {
    "p": "fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f",
    "a": "00",
    "b": "07",
    "n": "fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",
    "h": "01",
    "Gx": "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
    "Gy": "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"
  },
  "secp256r1": {
    "p": "ffffffff00000001000000000000000000000000ffffffffffffffffffffffff",
    "a": "ffffffff00000001000000000000000000000000fffffffffffffffffffffffc",
    "b": "5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b",
    "n": "ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551",
    "h": "01",
    "Gx": "6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296",
    "Gy": "4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"
  }
}

},{}],79:[function(require,module,exports){
var Point = require('./point')
var Curve = require('./curve')

var getCurveByName = require('./names')

module.exports = {
  Curve: Curve,
  Point: Point,
  getCurveByName: getCurveByName
}

},{"./curve":77,"./names":80,"./point":81}],80:[function(require,module,exports){
var BigInteger = require('bigi')

var curves = require('./curves.json')
var Curve = require('./curve')

function getCurveByName (name) {
  var curve = curves[name]
  if (!curve) return null

  var p = new BigInteger(curve.p, 16)
  var a = new BigInteger(curve.a, 16)
  var b = new BigInteger(curve.b, 16)
  var n = new BigInteger(curve.n, 16)
  var h = new BigInteger(curve.h, 16)
  var Gx = new BigInteger(curve.Gx, 16)
  var Gy = new BigInteger(curve.Gy, 16)

  return new Curve(p, a, b, Gx, Gy, n, h)
}

module.exports = getCurveByName

},{"./curve":77,"./curves.json":78,"bigi":20}],81:[function(require,module,exports){
(function (Buffer){
var assert = require('assert')
var BigInteger = require('bigi')

var THREE = BigInteger.valueOf(3)

function Point (curve, x, y, z) {
  assert.notStrictEqual(z, undefined, 'Missing Z coordinate')

  this.curve = curve
  this.x = x
  this.y = y
  this.z = z
  this._zInv = null

  this.compressed = true
}

Object.defineProperty(Point.prototype, 'zInv', {
  get: function () {
    if (this._zInv === null) {
      this._zInv = this.z.modInverse(this.curve.p)
    }

    return this._zInv
  }
})

Object.defineProperty(Point.prototype, 'affineX', {
  get: function () {
    return this.x.multiply(this.zInv).mod(this.curve.p)
  }
})

Object.defineProperty(Point.prototype, 'affineY', {
  get: function () {
    return this.y.multiply(this.zInv).mod(this.curve.p)
  }
})

Point.fromAffine = function (curve, x, y) {
  return new Point(curve, x, y, BigInteger.ONE)
}

Point.prototype.equals = function (other) {
  if (other === this) return true
  if (this.curve.isInfinity(this)) return this.curve.isInfinity(other)
  if (this.curve.isInfinity(other)) return this.curve.isInfinity(this)

  // u = Y2 * Z1 - Y1 * Z2
  var u = other.y.multiply(this.z).subtract(this.y.multiply(other.z)).mod(this.curve.p)

  if (u.signum() !== 0) return false

  // v = X2 * Z1 - X1 * Z2
  var v = other.x.multiply(this.z).subtract(this.x.multiply(other.z)).mod(this.curve.p)

  return v.signum() === 0
}

Point.prototype.negate = function () {
  var y = this.curve.p.subtract(this.y)

  return new Point(this.curve, this.x, y, this.z)
}

Point.prototype.add = function (b) {
  if (this.curve.isInfinity(this)) return b
  if (this.curve.isInfinity(b)) return this

  var x1 = this.x
  var y1 = this.y
  var x2 = b.x
  var y2 = b.y

  // u = Y2 * Z1 - Y1 * Z2
  var u = y2.multiply(this.z).subtract(y1.multiply(b.z)).mod(this.curve.p)
  // v = X2 * Z1 - X1 * Z2
  var v = x2.multiply(this.z).subtract(x1.multiply(b.z)).mod(this.curve.p)

  if (v.signum() === 0) {
    if (u.signum() === 0) {
      return this.twice() // this == b, so double
    }

    return this.curve.infinity // this = -b, so infinity
  }

  var v2 = v.square()
  var v3 = v2.multiply(v)
  var x1v2 = x1.multiply(v2)
  var zu2 = u.square().multiply(this.z)

  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)
  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p)
  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3
  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p)
  // z3 = v^3 * z1 * z2
  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p)

  return new Point(this.curve, x3, y3, z3)
}

Point.prototype.twice = function () {
  if (this.curve.isInfinity(this)) return this
  if (this.y.signum() === 0) return this.curve.infinity

  var x1 = this.x
  var y1 = this.y

  var y1z1 = y1.multiply(this.z).mod(this.curve.p)
  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p)
  var a = this.curve.a

  // w = 3 * x1^2 + a * z1^2
  var w = x1.square().multiply(THREE)

  if (a.signum() !== 0) {
    w = w.add(this.z.square().multiply(a))
  }

  w = w.mod(this.curve.p)
  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)
  var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p)
  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3
  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(3)).mod(this.curve.p)
  // z3 = 8 * (y1 * z1)^3
  var z3 = y1z1.pow(3).shiftLeft(3).mod(this.curve.p)

  return new Point(this.curve, x3, y3, z3)
}

// Simple NAF (Non-Adjacent Form) multiplication algorithm
// TODO: modularize the multiplication algorithm
Point.prototype.multiply = function (k) {
  if (this.curve.isInfinity(this)) return this
  if (k.signum() === 0) return this.curve.infinity

  var e = k
  var h = e.multiply(THREE)

  var neg = this.negate()
  var R = this

  for (var i = h.bitLength() - 2; i > 0; --i) {
    var hBit = h.testBit(i)
    var eBit = e.testBit(i)

    R = R.twice()

    if (hBit !== eBit) {
      R = R.add(hBit ? this : neg)
    }
  }

  return R
}

// Compute this*j + x*k (simultaneous multiplication)
Point.prototype.multiplyTwo = function (j, x, k) {
  var i = Math.max(j.bitLength(), k.bitLength()) - 1
  var R = this.curve.infinity
  var both = this.add(x)

  while (i >= 0) {
    var jBit = j.testBit(i)
    var kBit = k.testBit(i)

    R = R.twice()

    if (jBit) {
      if (kBit) {
        R = R.add(both)
      } else {
        R = R.add(this)
      }
    } else if (kBit) {
      R = R.add(x)
    }
    --i
  }

  return R
}

Point.prototype.getEncoded = function (compressed) {
  if (compressed == null) compressed = this.compressed
  if (this.curve.isInfinity(this)) return new Buffer('00', 'hex') // Infinity point encoded is simply '00'

  var x = this.affineX
  var y = this.affineY
  var byteLength = this.curve.pLength
  var buffer

  // 0x02/0x03 | X
  if (compressed) {
    buffer = new Buffer(1 + byteLength)
    buffer.writeUInt8(y.isEven() ? 0x02 : 0x03, 0)

  // 0x04 | X | Y
  } else {
    buffer = new Buffer(1 + byteLength + byteLength)
    buffer.writeUInt8(0x04, 0)

    y.toBuffer(byteLength).copy(buffer, 1 + byteLength)
  }

  x.toBuffer(byteLength).copy(buffer, 1)

  return buffer
}

Point.decodeFrom = function (curve, buffer) {
  var type = buffer.readUInt8(0)
  var compressed = (type !== 4)

  var byteLength = Math.floor((curve.p.bitLength() + 7) / 8)
  var x = BigInteger.fromBuffer(buffer.slice(1, 1 + byteLength))

  var Q
  if (compressed) {
    assert.equal(buffer.length, byteLength + 1, 'Invalid sequence length')
    assert(type === 0x02 || type === 0x03, 'Invalid sequence tag')

    var isOdd = (type === 0x03)
    Q = curve.pointFromX(isOdd, x)
  } else {
    assert.equal(buffer.length, 1 + byteLength + byteLength, 'Invalid sequence length')

    var y = BigInteger.fromBuffer(buffer.slice(1 + byteLength))
    Q = Point.fromAffine(curve, x, y)
  }

  Q.compressed = compressed
  return Q
}

Point.prototype.toString = function () {
  if (this.curve.isInfinity(this)) return '(INFINITY)'

  return '(' + this.affineX.toString() + ',' + this.affineY.toString() + ')'
}

module.exports = Point

}).call(this,require("buffer").Buffer)
},{"assert":15,"bigi":20,"buffer":55}],82:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":97,"./elliptic/curve":85,"./elliptic/curves":88,"./elliptic/ec":89,"./elliptic/eddsa":92,"./elliptic/utils":96,"brorand":24}],83:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":82,"bn.js":23}],84:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":82,"../curve":85,"bn.js":23,"inherits":146}],85:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":83,"./edwards":84,"./mont":86,"./short":87}],86:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":82,"../curve":85,"bn.js":23,"inherits":146}],87:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":82,"../curve":85,"bn.js":23,"inherits":146}],88:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":82,"./precomputed/secp256k1":95,"hash.js":131}],89:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":82,"./key":90,"./signature":91,"bn.js":23,"hmac-drbg":143}],90:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":82,"bn.js":23}],91:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":82,"bn.js":23}],92:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":82,"./key":93,"./signature":94,"hash.js":131}],93:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":82}],94:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":82,"bn.js":23}],95:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],96:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":23,"minimalistic-assert":155,"minimalistic-crypto-utils":156}],97:[function(require,module,exports){
module.exports={
  "_from": "elliptic@^6.0.0",
  "_id": "elliptic@6.4.0",
  "_inBundle": false,
  "_integrity": "sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",
  "_location": "/elliptic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "elliptic@^6.0.0",
    "name": "elliptic",
    "escapedName": "elliptic",
    "rawSpec": "^6.0.0",
    "saveSpec": null,
    "fetchSpec": "^6.0.0"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",
  "_shasum": "cac9af8762c85836187003c8dfe193e5e2eae5df",
  "_spec": "elliptic@^6.0.0",
  "_where": "/home/jcalfee/eosjs/eosjs/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "name": "elliptic",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.4.0"
}

},{}],98:[function(require,module,exports){
'use strict';

require('isomorphic-fetch');
var camelCase = require('camel-case');
var helpers = require('./exported-helpers');
var processArgs = require('./process-args');

module.exports = apiGen;

var configDefaults = {
  httpEndpoint: 'http://127.0.0.1:8888',
  debug: false
};

function apiGen(version, definitions, config) {
  config = Object.assign({}, configDefaults, config);
  var api = {};
  var _config = config,
      httpEndpoint = _config.httpEndpoint;

  for (var apiGroup in definitions) {
    for (var apiMethod in definitions[apiGroup]) {
      var methodName = camelCase(apiMethod);
      var url = httpEndpoint + '/' + version + '/' + apiGroup + '/' + apiMethod;
      api[methodName] = fetchMethod(methodName, url, definitions[apiGroup][apiMethod], config);
    }
  }

  var _loop = function _loop(helper) {
    // Insert `api` as the first parameter to all API helpers
    api[helper] = function () {
      var _helpers$api;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_helpers$api = helpers.api)[helper].apply(_helpers$api, [api].concat(args));
    };
  };

  for (var helper in helpers.api) {
    _loop(helper);
  }
  return Object.assign(api, helpers);
}

function fetchMethod(methodName, url, definition, _ref) {
  var debug = _ref.debug,
      apiLog = _ref.apiLog;

  return function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (args.length === 0) {
      console.error(usage(methodName, definition));
      return;
    }

    var optionsFormatter = function optionsFormatter(option) {
      if (typeof option === 'boolean') {
        return { broadcast: option };
      }
    };

    var processedArgs = processArgs(args, Object.keys(definition.params || []), methodName, optionsFormatter);

    var params = processedArgs.params,
        options = processedArgs.options,
        returnPromise = processedArgs.returnPromise;
    var callback = processedArgs.callback;


    if (apiLog) {
      // wrap the callback with the logger
      var superCallback = callback;
      callback = function callback(error, tr) {
        if (error) {
          apiLog(error, methodName);
        } else {
          apiLog(null, tr, methodName);
        }
        superCallback(error, tr);
      };
    }

    var body = JSON.stringify(params);
    if (debug) {
      console.error('api >', url, body);
    }
    fetch(url, { body: body, method: 'POST' }).then(function (response) {
      if (response.status >= 200 && response.status < 300) {
        return response.json();
      } else {
        return response.text().then(function (bodyResp) {
          var error = new Error(bodyResp);
          error.status = response.status;
          error.statusText = response.statusText;
          throw error;
        });
      }
    }).then(function (objectResp) {
      if (debug) {
        console.error('api <', objectResp);
      }
      try {
        callback(null, objectResp);
      } catch (callbackError) {
        console.error(callbackError);
      }
    }).catch(function (error) {
      if (debug) {
        console.error('api error =>', url, body, error);
      }
      try {
        callback(error);
      } catch (callbackError) {
        console.error(callbackError);
      }
    });

    return returnPromise;
  };
}

function usage(methodName, definition) {
  var usage = '';
  var out = function out(str) {
    usage += str + '\n';
  };

  out('USAGE');
  out(methodName + ' - ' + definition.brief);

  out('\nPARAMETERS');
  if (definition.params) {
    out(JSON.stringify(definition.params, null, 2));
  } else {
    out('none');
  }

  out('\nRETURNS');
  if (definition.results) {
    out('' + JSON.stringify(definition.results, null, 2));
  } else {
    out('no data');
  }

  out('\nERRORS');
  if (definition.errors) {
    for (var error in definition.errors) {
      var errorDesc = definition.errors[error];
      out('' + error + (errorDesc ? ' - ' + errorDesc : ''));
    }
  } else {
    out('nothing special');
  }

  return usage;
}
},{"./exported-helpers":99,"./process-args":101,"camel-case":57,"isomorphic-fetch":149}],99:[function(require,module,exports){
'use strict';

module.exports = {

  // Under "api:" all functions must take api as their 1st parameter
  api: {
    createTransaction: createTransaction
  }

  /**
    Consult the blockchain and gather information for use in a new signed transaction.
    For Transaction as Proof of Stake (TaPOS), 32 bits of a recent block Id is included.
  
    @arg {number} expireInSeconds - How many seconds until expiration
    @arg {function} callback - (error, headers)
    @typedef {object} headers - {ref_block_num, ref_block_prefix, expiration}
  */
};function createTransaction(api) {
  var expireInSeconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;
  var callback = arguments[2];

  if (!callback) {
    throw new TypeError('callback parameter is required');
  }
  api.getInfo(checkError(callback, function (info) {
    var chainDate = new Date(info.head_block_time + 'Z');

    // Back-up 3 blocks to help avoid mini-forks.
    var ref_block_num = info.head_block_num - 3 & 0xFFFF;

    api.getBlock(info.head_block_num - 3, checkError(callback, function (block) {
      var expiration = new Date(chainDate.getTime() + expireInSeconds * 1000);
      var headers = {
        ref_block_num: ref_block_num,
        ref_block_prefix: block.refBlockPrefix || block.ref_block_prefix,
        expiration: expiration.toISOString().split('.')[0],
        scope: [],
        read_scope: [],
        messages: [],
        signatures: []
      };
      callback(null, headers);
    }));
  }));
}

var checkError = function checkError(parentErr, parrentRes) {
  return function (error, result) {
    if (error) {
      parentErr(error);
    } else {
      parrentRes(result);
    }
  };
};
},{}],100:[function(require,module,exports){
'use strict';

var Testnet = require('./testnet');
var processArgs = require('./process-args');

module.exports = {
  Testnet: Testnet,
  processArgs: processArgs
};
},{"./process-args":101,"./testnet":102}],101:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = processArgs;

/**
  Convert args array or object into a normalized value object.  Suppoorts extra
  options and(or) callback parameters.

  Per the Promise API feature promisifyAll (see also sb-promisify), the callback
  (if provided) must always be last.

  @arg {Array|object} args - User-provided parameter object or array of parameters
  @arg {Array} defParams - Names for the parameters.
  @arg {string} methodName - for error reporting
  @arg {function} [optionsFormatter(extraParam) = null] - optional callback used if an
    extra optional (non-callback) parameter is provided.

  @return {object} {
    params: normalized args only, parameters by name, no extra options or callback.
    options: non-null or non-undefined return value from invocation of
      optionsFormatter(optionsParam).

    callback: {function} - chained to optional callback provided in args.  Resolves
      or rejects returnPromise.

    returnPromise: {Promise} promise is returned when no callback is provided in
      args[args.length - 1].  Undefined when a callback is provided.
    
  }

  @throws TypeError - when parameter count is not exact (considers options and callback)
*/
function processArgs(args, defParams) {
  var methodName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'method';
  var optionsFormatter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var params = {};
  var options = {};

  var expectedArgCount = defParams.length;

  // Extra callback argument?  Last per promisifyAll standard.
  var callbackArg = void 0;
  if (args.length - expectedArgCount >= 1 && args.length - expectedArgCount <= 2 && typeof args[args.length - 1] === 'function'
  // && optionsFormatter(args[args.length - 1]) == null // <- non-option arg (likely always true)
  ) {
      // Create a new callback that will resolve the original callback or
      // the returnPromise (promise is used when no original callback is provided)

      callbackArg = args[args.length - 1];
      args = args.slice(0, args.length - 1);
    }

  var callback = void 0;
  var returnPromise = void 0;
  if (callbackArg) {
    callback = function callback(err, result) {
      if (err) {
        callbackArg(err);
      } else {
        callbackArg(null, result);
      }
    };
  } else {
    returnPromise = new Promise(function (resolve, reject) {
      callback = function callback(err, result) {
        if (err) {
          reject(err);
        } else {
          resolve(result);
        }
      };
    });
  }

  // Look for the options parameter (after potential callback was removed)
  if (typeof optionsFormatter === 'function' && args.length > 0 && (_typeof(args[0]) === 'object' && args.length === 2 || args.length === expectedArgCount + 1)) {
    //An extra options argument
    options = optionsFormatter(args[args.length - 1]);
    if (options != null) {
      // It is valid, remove it to avoid parameter count an error below
      args = args.slice(0, args.length - 1);
    }
  }

  // Parameteters (args) can be ordered or an object
  if (args.length === 1 && _typeof(args[0]) === 'object') {
    params = args[0];
  } else {
    // give ordered paramaters names

    if (args.length > expectedArgCount) {
      // console.log('typeof defParams[expectedArgCount]', args)
      throw new TypeError(methodName + ' is expecting ' + expectedArgCount + ' parameters but ' + args.length + ' where provided');
    }

    // convert ordered parameters into a value object by parameter name
    var pos = 0;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = defParams[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var defParam = _step.value;

        params[defParam] = args[pos];
        pos++;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  return { params: params, options: options, callback: callback, returnPromise: returnPromise };
}
},{}],102:[function(require,module,exports){
'use strict';

var apiGen = require('./apigen');

module.exports = Testnet;

var API_VERSION = 'v1';

Testnet.api = require('eosjs-json/api/v1');
Testnet.schema = require('eosjs-json/schema');

// Change httpEndpoint to public testnet when available
var configDefaults = { httpEndpoint: 'http://127.0.0.1:8888'

  /**
    @arg {object} config
  */
};function Testnet(config) {
  config = Object.assign({}, configDefaults, config);
  return apiGen(API_VERSION, Testnet.api, config);
}
},{"./apigen":98,"eosjs-json/api/v1":119,"eosjs-json/schema":123}],103:[function(require,module,exports){
(function (Buffer){
'use strict';

var randomBytes = require('randombytes');
var ByteBuffer = require('bytebuffer');
var crypto = require('browserify-aes');
var assert = require('assert');
var PublicKey = require('./key_public');
var PrivateKey = require('./key_private');
var hash = require('./hash');

var Long = ByteBuffer.Long;

module.exports = {
    encrypt: encrypt,
    decrypt: decrypt

    /**
        Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem
    
        @throws {Error|TypeError} - "Invalid Key, ..."
    
        @arg {PrivateKey} private_key - required and used for decryption
        @arg {PublicKey} public_key - required and used to calcualte the shared secret
        @arg {string} [nonce = uniqueNonce()] - assigned a random unique uint64
    
        @return {object}
        @property {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.
        @property {Buffer} message - Plain text message
        @property {number} checksum - shared secret checksum
    */
};function encrypt(private_key, public_key, message) {
    var nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : uniqueNonce();

    return crypt(private_key, public_key, nonce, message);
}

/**
    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem

    @arg {PrivateKey} private_key - required and used for decryption
    @arg {PublicKey} public_key - required and used to calcualte the shared secret
    @arg {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.
    @arg {Buffer} message - Encrypted or plain text message
    @arg {number} checksum - shared secret checksum

    @throws {Error|TypeError} - "Invalid Key, ..."

    @return {Buffer} - message
*/
function decrypt(private_key, public_key, nonce, message, checksum) {
    return crypt(private_key, public_key, nonce, message, checksum).message;
}

/**
    @arg {Buffer} message - Encrypted or plain text message (see checksum)
    @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)
    @private
*/
function crypt(private_key, public_key, nonce, message, checksum) {
    private_key = PrivateKey(private_key);
    if (!private_key) throw new TypeError('private_key is required');

    public_key = PublicKey(public_key);
    if (!public_key) throw new TypeError('public_key is required');

    nonce = toLongObj(nonce);
    if (!nonce) throw new TypeError('nonce is required');

    if (!Buffer.isBuffer(message)) {
        if (typeof message !== 'string') throw new TypeError('message should be buffer or string');
        message = new Buffer(message, 'binary');
    }
    if (checksum && typeof checksum !== 'number') throw new TypeError('checksum should be a number');

    var S = private_key.getSharedSecret(public_key);
    var ebuf = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);
    ebuf.writeUint64(nonce);
    ebuf.append(S.toString('binary'), 'binary');
    ebuf = new Buffer(ebuf.copy(0, ebuf.offset).toBinary(), 'binary');
    var encryption_key = hash.sha512(ebuf);

    // D E B U G
    // console.log('crypt', {
    //     priv_to_pub: private_key.toPublic().toString(),
    //     pub: public_key.toString(),
    //     nonce: nonce.toString(),
    //     message: message.length,
    //     checksum,
    //     S: S.toString('hex'),
    //     encryption_key: encryption_key.toString('hex'),
    // })

    var iv = encryption_key.slice(32, 48);
    var key = encryption_key.slice(0, 32);

    // check is first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.
    var check = hash.sha256(encryption_key);
    check = check.slice(0, 4);
    var cbuf = ByteBuffer.fromBinary(check.toString('binary'), ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);
    check = cbuf.readUint32();

    if (checksum) {
        if (check !== checksum) throw new Error('Invalid key');
        message = cryptoJsDecrypt(message, key, iv);
    } else {
        message = cryptoJsEncrypt(message, key, iv);
    }
    return { nonce: nonce, message: message, checksum: check };
}

/** This method does not use a checksum, the returned data must be validated some other way.

    @arg {string|Buffer} message - ciphertext binary format
    @arg {string<utf8>|Buffer} key - 256bit
    @arg {string<utf8>|Buffer} iv - 128bit

    @return {Buffer}
*/
function cryptoJsDecrypt(message, key, iv) {
    assert(message, "Missing cipher text");
    message = toBinaryBuffer(message);
    var decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);
    // decipher.setAutoPadding(true)
    message = Buffer.concat([decipher.update(message), decipher.final()]);
    return message;
}

/** This method does not use a checksum, the returned data must be validated some other way.
    @arg {string|Buffer} message - plaintext binary format
    @arg {string<utf8>|Buffer} key - 256bit
    @arg {string<utf8>|Buffer} iv - 128bit

    @return {Buffer}
*/
function cryptoJsEncrypt(message, key, iv) {
    assert(message, "Missing plain text");
    message = toBinaryBuffer(message);
    var cipher = crypto.createCipheriv('aes-256-cbc', key, iv);
    // cipher.setAutoPadding(true)
    message = Buffer.concat([cipher.update(message), cipher.final()]);
    return message;
}

/** @return {string} unique 64 bit unsigned number string.  Being time based, this is careful to never choose the same nonce twice.  This value could be recorded in the blockchain for a long time.
*/
function uniqueNonce() {
    if (unique_nonce_entropy === null) {
        var b = new Uint8Array(randomBytes(2));
        unique_nonce_entropy = parseInt(b[0] << 8 | b[1], 10);
    }
    var long = Long.fromNumber(Date.now());
    var entropy = ++unique_nonce_entropy % 0xFFFF;
    // console.log('uniqueNonce date\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))
    // console.log('uniqueNonce entropy\t', ByteBuffer.allocate(8).writeUint64(Long.fromNumber(entropy)).toHex(0))
    long = long.shiftLeft(16).or(Long.fromNumber(entropy));
    // console.log('uniqueNonce final\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))
    return long.toString();
}
var unique_nonce_entropy = null;
// for(let i=1; i < 10; i++) key.uniqueNonce()

var toLongObj = function toLongObj(o) {
    return o ? Long.isLong(o) ? o : Long.fromString(o) : o;
};
var toBinaryBuffer = function toBinaryBuffer(o) {
    return o ? Buffer.isBuffer(o) ? o : new Buffer(o, 'binary') : o;
};
}).call(this,require("buffer").Buffer)
},{"./hash":110,"./key_private":112,"./key_public":113,"assert":15,"browserify-aes":28,"buffer":55,"bytebuffer":56,"randombytes":180}],104:[function(require,module,exports){
"use strict";

var Aes = require("./aes");
var PrivateKey = require("./key_private");
var PublicKey = require("./key_public");
var Signature = require("./signature");
var key_utils = require("./key_utils");
var config = require('./config');
var hash = require("./hash");

/**
    [Wallet Import Format](https://en.bitcoin.it/wiki/Wallet_import_format)
    @typedef {string} wif
*/
/**
    EOSKey..
    @typedef {string} pubkey
*/

/** @namespace */
var ecc = {
    /**
        @arg {number} [cpuEntropyBits = 128] gather additional entropy
            from a CPU mining algorithm.  Set to 0 for testing.
        @return {wif}
         @example ecc.randomKey()
    */
    randomKey: function randomKey(cpuEntropyBits) {
        return PrivateKey.randomKey(cpuEntropyBits).toString();
    },

    /**
         @arg {string} seed - any length string.  This is private.  The same
        seed produces the same private key every time.  At least 128 random
        bits should be used to produce a good private key.
        @return {wif}
         @example ecc.seedPrivate('secret') === wif
    */
    seedPrivate: function seedPrivate(seed) {
        return PrivateKey.fromSeed(seed).toString();
    },

    /**
        @arg {wif} wif
        @return {pubkey}
         @example ecc.privateToPublic(wif) === pubkey
    */
    privateToPublic: function privateToPublic(wif) {
        return PrivateKey(wif).toPublic().toString();
    },

    /**
        @arg {pubkey} pubkey - like EOSKey..
        @return {boolean} valid
         @example ecc.isValidPublic(pubkey) === true
    */
    isValidPublic: function isValidPublic(pubkey) {
        return PublicKey.isValid(pubkey);
    },

    /**
        @arg {wif} wif
        @return {boolean} valid
         @example ecc.isValidPrivate(wif) === true
    */
    isValidPrivate: function isValidPrivate(wif) {
        return PrivateKey.isValid(wif);
    },

    /**
        Create a signature using data or a hash.
         @arg {string|Buffer} data
        @arg {wif|PrivateKey} privateKey
        @arg {boolean} [hashData = true] - sha256 hash data before signing
        @return {string} hex signature
         @example ecc.sign('I am alive', wif)
    */
    sign: function sign(data, privateKey) {
        var hashData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        return Signature[hashData ? 'sign' : 'signHash'](data, privateKey).toHex();
    },

    /**
        Verify signed data.
         @arg {string|Buffer} signature - buffer or hex string
        @arg {string|Buffer} data
        @arg {pubkey|PublicKey} pubkey
        @arg {boolean} [hashData = true] - sha256 hash data before verify
        @return {boolean}
         @example ecc.verify(signature, 'I am alive', pubkey) === true
    */
    verify: function verify(signature, data, pubkey) {
        var hashData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

        signature = Signature.from(signature);
        var verify = signature[hashData ? 'verify' : 'verifyHash'];
        return verify(data, pubkey);
    },

    /**
        Recover the public key used to create the signature.
         @arg {String} signature (hex, etc..)
        @arg {String|Buffer} data
        @arg {boolean} [hashData = true] - sha256 hash data before recover
        @return {pubkey}
         @example ecc.recover(signature, 'I am alive') === pubkey
    */
    recover: function recover(signature, data) {
        var hashData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

        signature = Signature.from(signature);
        var recover = signature[hashData ? 'recover' : 'recoverHash'];
        return recover(data).toString();
    },

    /** @arg {string|Buffer} data
        @arg {string} [encoding = 'hex'] - 'hex', 'binary' or 'base64'
        @return {string|Buffer} - Buffer when encoding is null, or string
         @example ecc.sha256('hashme') === '02208b..'
    */
    sha256: function sha256(data) {
        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hex';
        return hash.sha256(data, encoding);
    }

};

module.exports = ecc;
},{"./aes":103,"./config":106,"./hash":110,"./key_private":112,"./key_public":113,"./key_utils":114,"./signature":115}],105:[function(require,module,exports){
"use strict";

var Aes = require("./aes");
var PrivateKey = require("./key_private");
var PublicKey = require("./key_public");
var Signature = require("./signature");
var key_utils = require("./key_utils");
var config = require('./config');

module.exports = {
    Aes: Aes, PrivateKey: PrivateKey, PublicKey: PublicKey,
    Signature: Signature, key_utils: key_utils, config: config
};
},{"./aes":103,"./config":106,"./key_private":112,"./key_public":113,"./key_utils":114,"./signature":115}],106:[function(require,module,exports){
'use strict';

module.exports = {
  address_prefix: 'EOS'
};
},{}],107:[function(require,module,exports){
(function (Buffer){
'use strict';

var assert = require('assert'); // from github.com/bitcoinjs/bitcoinjs-lib from github.com/cryptocoinjs/ecdsa
var crypto = require('./hash');
var enforceType = require('./enforce_types');

var BigInteger = require('bigi');
var ECSignature = require('./ecsignature');

// https://tools.ietf.org/html/rfc6979#section-3.2
function deterministicGenerateK(curve, hash, d, checkSig, nonce) {

  enforceType('Buffer', hash);
  enforceType(BigInteger, d);

  if (nonce) {
    hash = crypto.sha256(Buffer.concat([hash, new Buffer(nonce)]));
  }

  // sanity check
  assert.equal(hash.length, 32, 'Hash must be 256 bit');

  var x = d.toBuffer(32);
  var k = new Buffer(32);
  var v = new Buffer(32);

  // Step B
  v.fill(1);

  // Step C
  k.fill(0);

  // Step D
  k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([0]), x, hash]), k);

  // Step E
  v = crypto.HmacSHA256(v, k);

  // Step F
  k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([1]), x, hash]), k);

  // Step G
  v = crypto.HmacSHA256(v, k);

  // Step H1/H2a, ignored as tlen === qlen (256 bit)
  // Step H2b
  v = crypto.HmacSHA256(v, k);

  var T = BigInteger.fromBuffer(v);

  // Step H3, repeat until T is within the interval [1, n - 1]
  while (T.signum() <= 0 || T.compareTo(curve.n) >= 0 || !checkSig(T)) {
    k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([0])]), k);
    v = crypto.HmacSHA256(v, k);

    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)
    // Step H2b again
    v = crypto.HmacSHA256(v, k);

    T = BigInteger.fromBuffer(v);
  }

  return T;
}

function sign(curve, hash, d, nonce) {

  var e = BigInteger.fromBuffer(hash);
  var n = curve.n;
  var G = curve.G;

  var r, s;
  var k = deterministicGenerateK(curve, hash, d, function (k) {
    // find canonically valid signature
    var Q = G.multiply(k);

    if (curve.isInfinity(Q)) return false;

    r = Q.affineX.mod(n);
    if (r.signum() === 0) return false;

    s = k.modInverse(n).multiply(e.add(d.multiply(r))).mod(n);
    if (s.signum() === 0) return false;

    return true;
  }, nonce);

  var N_OVER_TWO = n.shiftRight(1);

  // enforce low S values, see bip62: 'low s values in signatures'
  if (s.compareTo(N_OVER_TWO) > 0) {
    s = n.subtract(s);
  }

  return ECSignature(r, s);
}

function verifyRaw(curve, e, signature, Q) {
  var n = curve.n;
  var G = curve.G;

  var r = signature.r;
  var s = signature.s;

  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1]
  if (r.signum() <= 0 || r.compareTo(n) >= 0) return false;
  if (s.signum() <= 0 || s.compareTo(n) >= 0) return false;

  // c = s^-1 mod n
  var c = s.modInverse(n);

  // 1.4.4 Compute u1 = es^−1 mod n
  //               u2 = rs^−1 mod n
  var u1 = e.multiply(c).mod(n);
  var u2 = r.multiply(c).mod(n);

  // 1.4.5 Compute R = (xR, yR) = u1G + u2Q
  var R = G.multiplyTwo(u1, Q, u2);

  // 1.4.5 (cont.) Enforce R is not at infinity
  if (curve.isInfinity(R)) return false;

  // 1.4.6 Convert the field element R.x to an integer
  var xR = R.affineX;

  // 1.4.7 Set v = xR mod n
  var v = xR.mod(n);

  // 1.4.8 If v = r, output "valid", and if v != r, output "invalid"
  return v.equals(r);
}

function verify(curve, hash, signature, Q) {
  // 1.4.2 H = Hash(M), already done by the user
  // 1.4.3 e = H
  var e = BigInteger.fromBuffer(hash);
  return verifyRaw(curve, e, signature, Q);
}

/**
  * Recover a public key from a signature.
  *
  * See SEC 1: Elliptic Curve Cryptography, section 4.1.6, "Public
  * Key Recovery Operation".
  *
  * http://www.secg.org/download/aid-780/sec1-v2.pdf
  */
function recoverPubKey(curve, e, signature, i) {
  assert.strictEqual(i & 3, i, 'Recovery param is more than two bits');

  var n = curve.n;
  var G = curve.G;

  var r = signature.r;
  var s = signature.s;

  assert(r.signum() > 0 && r.compareTo(n) < 0, 'Invalid r value');
  assert(s.signum() > 0 && s.compareTo(n) < 0, 'Invalid s value');

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = i & 1;

  // The more significant bit specifies whether we should use the
  // first or second candidate key.
  var isSecondKey = i >> 1;

  // 1.1 Let x = r + jn
  var x = isSecondKey ? r.add(n) : r;
  var R = curve.pointFromX(isYOdd, x);

  // 1.4 Check that nR is at infinity
  var nR = R.multiply(n);
  assert(curve.isInfinity(nR), 'nR is not a valid curve point');

  // Compute -e from e
  var eNeg = e.negate().mod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  var rInv = r.modInverse(n);

  var Q = R.multiplyTwo(s, G, eNeg).multiply(rInv);
  curve.validate(Q);

  return Q;
}

/**
  * Calculate pubkey extraction parameter.
  *
  * When extracting a pubkey from a signature, we have to
  * distinguish four different cases. Rather than putting this
  * burden on the verifier, Bitcoin includes a 2-bit value with the
  * signature.
  *
  * This function simply tries all four cases and returns the value
  * that resulted in a successful pubkey recovery.
  */
function calcPubKeyRecoveryParam(curve, e, signature, Q) {
  for (var i = 0; i < 4; i++) {
    var Qprime = recoverPubKey(curve, e, signature, i);

    // 1.6.2 Verify Q
    if (Qprime.equals(Q)) {
      return i;
    }
  }

  throw new Error('Unable to find valid recovery factor');
}

module.exports = {
  calcPubKeyRecoveryParam: calcPubKeyRecoveryParam,
  deterministicGenerateK: deterministicGenerateK,
  recoverPubKey: recoverPubKey,
  sign: sign,
  verify: verify,
  verifyRaw: verifyRaw
};
}).call(this,require("buffer").Buffer)
},{"./ecsignature":108,"./enforce_types":109,"./hash":110,"assert":15,"bigi":20,"buffer":55}],108:[function(require,module,exports){
(function (Buffer){
'use strict';

var assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib
var enforceType = require('./enforce_types');

var BigInteger = require('bigi');

function ECSignature(r, s) {
  enforceType(BigInteger, r);
  enforceType(BigInteger, s);

  function toCompact(i, compressed) {
    if (compressed) i += 4;
    i += 27;

    var buffer = new Buffer(65);
    buffer.writeUInt8(i, 0);

    r.toBuffer(32).copy(buffer, 1);
    s.toBuffer(32).copy(buffer, 33);

    return buffer;
  }

  function toDER() {
    var rBa = r.toDERInteger();
    var sBa = s.toDERInteger();

    var sequence = [];

    // INTEGER
    sequence.push(0x02, rBa.length);
    sequence = sequence.concat(rBa);

    // INTEGER
    sequence.push(0x02, sBa.length);
    sequence = sequence.concat(sBa);

    // SEQUENCE
    sequence.unshift(0x30, sequence.length);

    return new Buffer(sequence);
  }

  function toScriptSignature(hashType) {
    var hashTypeBuffer = new Buffer(1);
    hashTypeBuffer.writeUInt8(hashType, 0);

    return Buffer.concat([toDER(), hashTypeBuffer]);
  }

  return { r: r, s: s, toCompact: toCompact, toDER: toDER, toScriptSignature: toScriptSignature };
}

// Import operations
ECSignature.parseCompact = function (buffer) {
  assert.equal(buffer.length, 65, 'Invalid signature length');
  var i = buffer.readUInt8(0) - 27;

  // At most 3 bits
  assert.equal(i, i & 7, 'Invalid signature parameter');
  var compressed = !!(i & 4);

  // Recovery param only
  i = i & 3;

  var r = BigInteger.fromBuffer(buffer.slice(1, 33));
  var s = BigInteger.fromBuffer(buffer.slice(33));

  return {
    compressed: compressed,
    i: i,
    signature: ECSignature(r, s)
  };
};

ECSignature.fromDER = function (buffer) {
  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');
  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');
  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');

  var rLen = buffer.readUInt8(3);
  assert(rLen > 0, 'R length is zero');

  var offset = 4 + rLen;
  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');

  var sLen = buffer.readUInt8(offset + 1);
  assert(sLen > 0, 'S length is zero');

  var rB = buffer.slice(4, offset);
  var sB = buffer.slice(offset + 2);
  offset += 2 + sLen;

  if (rLen > 1 && rB.readUInt8(0) === 0x00) {
    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');
  }

  if (sLen > 1 && sB.readUInt8(0) === 0x00) {
    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');
  }

  assert.equal(offset, buffer.length, 'Invalid DER encoding');
  var r = BigInteger.fromDERInteger(rB);
  var s = BigInteger.fromDERInteger(sB);

  assert(r.signum() >= 0, 'R value is negative');
  assert(s.signum() >= 0, 'S value is negative');

  return ECSignature(r, s);
};

// FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency
ECSignature.parseScriptSignature = function (buffer) {
  var hashType = buffer.readUInt8(buffer.length - 1);
  var hashTypeMod = hashType & ~0x80;

  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');

  return {
    signature: ECSignature.fromDER(buffer.slice(0, -1)),
    hashType: hashType
  };
};

module.exports = ECSignature;
}).call(this,require("buffer").Buffer)
},{"./enforce_types":109,"assert":15,"bigi":20,"buffer":55}],109:[function(require,module,exports){
(function (Buffer){
'use strict';

module.exports = function enforce(type, value) {
  // Copied from https://github.com/bitcoinjs/bitcoinjs-lib
  switch (type) {
    case 'Array':
      {
        if (Array.isArray(value)) return;
        break;
      }

    case 'Boolean':
      {
        if (typeof value === 'boolean') return;
        break;
      }

    case 'Buffer':
      {
        if (Buffer.isBuffer(value)) return;
        break;
      }

    case 'Number':
      {
        if (typeof value === 'number') return;
        break;
      }

    case 'String':
      {
        if (typeof value === 'string') return;
        break;
      }

    default:
      {
        if (getName(value.constructor) === getName(type)) return;
      }
  }

  throw new TypeError('Expected ' + (getName(type) || type) + ', got ' + value);
};

function getName(fn) {
  // Why not fn.name: https://kangax.github.io/compat-table/es6/#function_name_property
  var match = fn.toString().match(/function (.*?)\(/);
  return match ? match[1] : null;
}
}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":147}],110:[function(require,module,exports){
'use strict';

var createHash = require('create-hash');
var createHmac = require('create-hmac');

/** @namespace hash */

/** @arg {string|Buffer} data
    @arg {string} [encoding = null] - 'hex', 'binary' or 'base64'
    @return {string|Buffer} - Buffer when encoding is null, or string
*/
function sha1(data, encoding) {
    return createHash('sha1').update(data).digest(encoding);
}

/** @arg {string|Buffer} data
    @arg {string} [encoding = null] - 'hex', 'binary' or 'base64'
    @return {string|Buffer} - Buffer when encoding is null, or string
*/
function sha256(data, encoding) {
    return createHash('sha256').update(data).digest(encoding);
}

/** @arg {string|Buffer} data
    @arg {string} [encoding = null] - 'hex', 'binary' or 'base64'
    @return {string|Buffer} - Buffer when encoding is null, or string
*/
function sha512(data, encoding) {
    return createHash('sha512').update(data).digest(encoding);
}

function HmacSHA256(buffer, secret) {
    return createHmac('sha256', secret).update(buffer).digest();
}

function ripemd160(data) {
    return createHash('rmd160').update(data).digest();
}

// function hash160(buffer) {
//   return ripemd160(sha256(buffer))
// }
//
// function hash256(buffer) {
//   return sha256(sha256(buffer))
// }

//
// function HmacSHA512(buffer, secret) {
//   return crypto.createHmac('sha512', secret).update(buffer).digest()
// }

module.exports = {
    sha1: sha1,
    sha256: sha256,
    sha512: sha512,
    HmacSHA256: HmacSHA256,
    ripemd160: ripemd160
    // hash160: hash160,
    // hash256: hash256,
    // HmacSHA512: HmacSHA512
};
},{"create-hash":61,"create-hmac":64}],111:[function(require,module,exports){
'use strict';

var commonApi = require('./api_common');
var objectApi = require('./api_object');

var ecc = Object.assign({}, commonApi, objectApi);

module.exports = ecc;
},{"./api_common":104,"./api_object":105}],112:[function(require,module,exports){
(function (Buffer){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ecurve = require('ecurve');
var Point = ecurve.Point;
var secp256k1 = ecurve.getCurveByName('secp256k1');
var BigInteger = require('bigi');
var base58 = require('bs58');
var assert = require('assert');
var hash = require('./hash');
var PublicKey = require('./key_public');
var keyUtils = require('./key_utils');
var createHash = require('create-hash');

var G = secp256k1.G;
var n = secp256k1.n;

module.exports = PrivateKey;

/**
  @typedef {string} wif - https://en.bitcoin.it/wiki/Wallet_import_format
  @typedef {string} pubkey - EOSKey..
  @typedef {ecurve.Point} Point
*/

/**
  @param {BigInteger} d
*/
function PrivateKey(d) {

    if (typeof d === 'string') {
        return PrivateKey.fromWif(d);
    } else if (Buffer.isBuffer(d)) {
        return PrivateKey.fromBuffer(d);
    } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object' && BigInteger.isBigInteger(d.d)) {
        return PrivateKey(d.d);
    }

    if (!BigInteger.isBigInteger(d)) {
        throw new TypeError('Invalid private key');
    }

    /**
        @return  {wif}
    */
    function toWif() {
        var private_key = toBuffer();
        // checksum includes the version
        private_key = Buffer.concat([new Buffer([0x80]), private_key]);
        var checksum = hash.sha256(private_key);
        checksum = hash.sha256(checksum);
        checksum = checksum.slice(0, 4);
        var private_wif = Buffer.concat([private_key, checksum]);
        return base58.encode(private_wif);
    }

    var public_key = void 0;

    /**
        @return {Point}
    */
    function toPublic() {
        if (public_key) {
            // Hundreds of keys can be S L O W in the browser
            // cache
            return public_key;
        }
        var Q = secp256k1.G.multiply(d);
        return public_key = PublicKey.fromPoint(Q);
    }

    function toBuffer() {
        return d.toBuffer(32);
    }

    /** ECIES */
    function getSharedSecret(public_key) {
        public_key = toPublic(public_key);
        var KB = public_key.toUncompressed().toBuffer();
        var KBP = Point.fromAffine(secp256k1, BigInteger.fromBuffer(KB.slice(1, 33)), // x
        BigInteger.fromBuffer(KB.slice(33, 65)) // y
        );
        var r = toBuffer();
        var P = KBP.multiply(BigInteger.fromBuffer(r));
        var S = P.affineX.toBuffer({ size: 32 });
        // SHA512 used in ECIES
        return hash.sha512(S);
    }

    // /** ECIES (does not always match the Point.fromAffine version above) */
    // getSharedSecret(public_key){
    //     public_key = toPublic(public_key)
    //     var P = public_key.Q.multiply( d );
    //     var S = P.affineX.toBuffer({size: 32});
    //     // ECIES, adds an extra sha512
    //     return hash.sha512(S);
    // }

    /**
      @arg {string} name - child key name.
      @return {PrivateKey}
       @example activePrivate = masterPrivate.getChildKey('owner').getChildKey('active')
      @example activePrivate.getChildKey('mycontract').getChildKey('myperm')
    */
    function getChildKey(name) {
        console.error('WARNING: getChildKey untested against eosd');
        var index = createHash('sha256').update(toBuffer()).update(name).digest();
        return PrivateKey(index);
    }

    function toHex() {
        return toBuffer().toString('hex');
    }

    return {
        d: d,
        toWif: toWif,
        toPublic: toPublic,
        toBuffer: toBuffer,
        toString: toWif,
        getSharedSecret: getSharedSecret,
        getChildKey: getChildKey
    };
}

PrivateKey.fromHex = function (hex) {
    return PrivateKey.fromBuffer(new Buffer(hex, 'hex'));
};

PrivateKey.fromBuffer = function (buf) {
    if (!Buffer.isBuffer(buf)) {
        throw new Error("Expecting parameter to be a Buffer type");
    }
    if (32 !== buf.length) {
        console.log('WARN: Expecting 32 bytes, instead got ' + buf.length + ', stack trace:', new Error().stack);
    }
    if (buf.length === 0) {
        throw new Error("Empty buffer");
    }
    return PrivateKey(BigInteger.fromBuffer(buf));
};

/**
    @arg {string} seed - any length string.  This is private, the same seed
    produces the same private key every time.

    @return {PrivateKey}
*/
PrivateKey.fromSeed = function (seed) {
    // generate_private_key
    if (!(typeof seed === 'string')) {
        throw new Error('seed must be of type string');
    }
    return PrivateKey.fromBuffer(hash.sha256(seed));
};

PrivateKey.isWif = function (text) {
    try {
        PrivateKey.fromWif(text);
        return true;
    } catch (e) {
        return false;
    }
};

PrivateKey.isValid = function (text) {
    try {
        PrivateKey(text);
        return true;
    } catch (e) {
        return false;
    }
};

/**
    @throws {AssertError|Error} parsing key
    @return {string} Wallet Import Format (still a secret, Not encrypted)
*/
PrivateKey.fromWif = function (_private_wif) {
    var private_wif = new Buffer(base58.decode(_private_wif));
    var version = private_wif.readUInt8(0);
    assert.equal(0x80, version, 'Expected version ' + 0x80 + ', instead got ' + version);
    // checksum includes the version
    var private_key = private_wif.slice(0, -4);
    var checksum = private_wif.slice(-4);
    var new_checksum = hash.sha256(private_key);
    new_checksum = hash.sha256(new_checksum);
    new_checksum = new_checksum.slice(0, 4);
    if (checksum.toString() !== new_checksum.toString()) throw new Error('Invalid WIF key (checksum miss-match), ' + (checksum.toString('hex') + ' != ' + new_checksum.toString('hex')));

    private_key = private_key.slice(1);
    return PrivateKey.fromBuffer(private_key);
};

PrivateKey.randomKey = function (cpuEntropyBits) {
    return PrivateKey.fromBuffer(keyUtils.random32ByteBuffer({ cpuEntropyBits: cpuEntropyBits }));
};

var toPublic = function toPublic(data) {
    return data == null ? data : data.Q ? data : PublicKey.fromStringOrThrow(data);
};
}).call(this,require("buffer").Buffer)
},{"./hash":110,"./key_public":113,"./key_utils":114,"assert":15,"bigi":20,"bs58":53,"buffer":55,"create-hash":61,"ecurve":79}],113:[function(require,module,exports){
(function (Buffer){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var BigInteger = require('bigi');
var ecurve = require('ecurve');
var secp256k1 = ecurve.getCurveByName('secp256k1');
var base58 = require('bs58');
var hash = require('./hash');
var config = require('./config');
var assert = require('assert');

var G = secp256k1.G;
var n = secp256k1.n;

module.exports = PublicKey;

/** @param {ecurve.Point} public key */
function PublicKey(Q) {

    if (typeof Q === 'string') {
        var publicKey = PublicKey.fromString(Q);
        assert(publicKey != null, 'Invalid public key');
        return publicKey;
    } else if (Buffer.isBuffer(Q)) {
        return PublicKey.fromBuffer(Q);
    } else if ((typeof Q === 'undefined' ? 'undefined' : _typeof(Q)) === 'object' && Q.Q) {
        return PublicKey(Q.Q);
    }

    if ((typeof Q === 'undefined' ? 'undefined' : _typeof(Q)) !== 'object' || !Q.compressed) {
        throw new TypeError('Invalid public key');
    }

    function toBuffer() {
        var compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Q.compressed;

        return Q.getEncoded(compressed);
    }

    var pubdata = void 0; // cache

    /**
        Full public key
        @return {string} EOSKey..
    */
    function toString() {
        var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.address_prefix;

        if (pubdata) {
            return address_prefix + pubdata;
        }
        var pub_buf = toBuffer();
        var checksum = hash.ripemd160(pub_buf);
        var addy = Buffer.concat([pub_buf, checksum.slice(0, 4)]);
        pubdata = base58.encode(addy);
        return address_prefix + pubdata;
    }

    function toUncompressed() {
        var buf = Q.getEncoded(false);
        var point = ecurve.Point.decodeFrom(secp256k1, buf);
        return PublicKey.fromPoint(point);
    }

    function child(offset) {
        assert(Buffer.isBuffer(offset), "Buffer required: offset");
        assert.equal(offset.length, 32, "offset length");

        offset = Buffer.concat([toBuffer(), offset]);
        offset = hash.sha256(offset);

        var c = BigInteger.fromBuffer(offset);

        if (c.compareTo(n) >= 0) throw new Error("Child offset went out of bounds, try again");

        var cG = G.multiply(c);
        var Qprime = Q.add(cG);

        if (secp256k1.isInfinity(Qprime)) throw new Error("Child offset derived to an invalid key, try again");

        return PublicKey.fromPoint(Qprime);
    }

    // toByteBuffer() {
    //     var b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);
    //     appendByteBuffer(b);
    //     return b.copy(0, b.offset);
    // }

    function toHex() {
        return toBuffer().toString('hex');
    }

    return {
        Q: Q,
        toString: toString,
        toUncompressed: toUncompressed,
        toBuffer: toBuffer,
        child: child,
        toHex: toHex
    };
}

PublicKey.isValid = function (text) {
    try {
        PublicKey(text);
        return true;
    } catch (e) {
        return false;
    }
};

PublicKey.fromBinary = function (bin) {
    return PublicKey.fromBuffer(new Buffer(bin, 'binary'));
};

PublicKey.fromBuffer = function (buffer) {
    return PublicKey(ecurve.Point.decodeFrom(secp256k1, buffer));
};

PublicKey.fromPoint = function (point) {
    return PublicKey(point);
};

/**
    @arg {string} public_key - like STMXyz...
    @arg {string} address_prefix - like STM
    @return PublicKey or `null` (if the public_key string is invalid)
    @deprecated fromPublicKeyString (use fromString instead)
*/
PublicKey.fromString = function (public_key) {
    var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.address_prefix;

    try {
        return PublicKey.fromStringOrThrow(public_key, address_prefix);
    } catch (e) {
        return null;
    }
};

/**
    @arg {string} public_key - like EOSKey..
    @arg {string} address_prefix - like EOS
    @throws {Error} if public key is invalid
    @return PublicKey
*/
PublicKey.fromStringOrThrow = function (public_key) {
    var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.address_prefix;

    var prefix = public_key.slice(0, address_prefix.length);
    assert.equal(address_prefix, prefix, 'Expecting key to begin with ' + address_prefix + ', instead got ' + prefix);
    public_key = public_key.slice(address_prefix.length);

    public_key = new Buffer(base58.decode(public_key), 'binary');
    var checksum = public_key.slice(-4);
    public_key = public_key.slice(0, -4);
    var new_checksum = hash.ripemd160(public_key);
    new_checksum = new_checksum.slice(0, 4);
    assert.deepEqual(checksum, new_checksum, 'Checksum did not match, ' + (checksum.toString('hex') + ' != ' + new_checksum.toString('hex')));
    return PublicKey.fromBuffer(public_key);
};

PublicKey.fromHex = function (hex) {
    return PublicKey.fromBuffer(new Buffer(hex, 'hex'));
};

PublicKey.fromStringHex = function (hex) {
    return PublicKey.fromString(new Buffer(hex, 'hex'));
};
}).call(this,require("buffer").Buffer)
},{"./config":106,"./hash":110,"assert":15,"bigi":20,"bs58":53,"buffer":55,"ecurve":79}],114:[function(require,module,exports){
(function (Buffer){
'use strict';

var randomBytes = require('randombytes');
var hash = require('./hash');

module.exports = {
    random32ByteBuffer: random32ByteBuffer,
    addEntropy: addEntropy
};

var entropyPos = 0,
    entropyCount = 0;
var externalEntropyArray = randomBytes(101);

/**
    @return a random buffer obtained from the secure random number generator.  Additional entropy is used.

    Additional forms of entropy are used.  A week random number generator can run out of entropy.  This should ensure even the worst random number implementation will be reasonably safe.
*/
function random32ByteBuffer() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$cpuEntropyBits = _ref.cpuEntropyBits,
        cpuEntropyBits = _ref$cpuEntropyBits === undefined ? 128 : _ref$cpuEntropyBits;

    if (entropyCount > 0) {
        console.log('Additional private key entropy: ' + entropyCount + ' events');
        entropyCount = 0;
    }
    var hash_array = [];
    hash_array.push(randomBytes(32));
    hash_array.push(Buffer.from(cpuEntropy(cpuEntropyBits)));
    hash_array.push(externalEntropyArray);
    hash_array.push(browserEntropy());
    return hash.sha256(Buffer.concat(hash_array));
}

/**
    Add entropy via external events (like mouse events).  This may be called many times while the amount of data saved is limited.  Data is retained in RAM for the life of this module.

    @example React <code>
    componentDidMount() {
        this.refs.MyComponent.addEventListener("mousemove", this.onEntropyEvent, {capture: false, passive: true})
    }
    componentWillUnmount() {
        this.refs.MyComponent.removeEventListener("mousemove", this.onEntropyEvent);
    }
    onEntropyEvent = (e) => {
        if(e.type === 'mousemove')
            key_utils.addEntropy(e.pageX, e.pageY, e.screenX, e.screenY)
        else
            console.log('onEntropyEvent Unknown', e.type, e)
    }
    </code>
*/
function addEntropy() {
    for (var _len = arguments.length, ints = Array(_len), _key = 0; _key < _len; _key++) {
        ints[_key] = arguments[_key];
    }

    entropyCount += ints.length;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = ints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;

            var pos = entropyPos++ % 101;
            var i2 = externalEntropyArray[pos] += i;
            if (i2 > 9007199254740991) externalEntropyArray[pos] = 0;
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
}

/**
    This runs in just under 1 second and ensures a minimum of 512 bits of entropy are gathered.

    @return {array} counts gathered by measuring variations in the CPU speed during floating point operations.

    Based on more-entropy.
    @see https://github.com/keybase/more-entropy/blob/master/src/generator.iced
*/
function cpuEntropy(cpuEntropyBits) {
    var collected = [];
    var lastCount = null;
    var lowEntropySamples = 0;
    while (collected.length < cpuEntropyBits) {
        var count = floatingPointCount();
        if (lastCount != null) {
            var delta = count - lastCount;
            if (Math.abs(delta) < 1) {
                lowEntropySamples++;
                continue;
            }
            // how many bits of entropy were in this sample
            var bits = Math.floor(log2(Math.abs(delta)) + 1);
            if (bits < 4) {
                if (bits < 2) {
                    lowEntropySamples++;
                }
                continue;
            }
            collected.push(delta);
        }
        lastCount = count;
    }
    if (lowEntropySamples > 10) {
        var pct = Number(lowEntropySamples / cpuEntropyBits * 100).toFixed(2);
        // Is this algorithm getting inefficient?
        console.warn('WARN: ' + pct + '% low CPU entropy re-sampled');
    }
    return collected;
}

/**
    Count while performing floating point operations during a fixed time
    (7 ms for example).  Using a fixed time makes this algorithm
    predictable in runtime.
*/
function floatingPointCount() {
    var workMinMs = 7;
    var d = Date.now();
    var i = 0,
        x = 0;
    while (Date.now() < d + workMinMs + 1) {
        x = Math.sin(Math.sqrt(Math.log(++i + x)));
    }
    return i;
}

var log2 = function log2(x) {
    return Math.log(x) / Math.LN2;
};

/**
    Attempt to gather and hash information from the browser's window, history, and supported mime types.  For non-browser environments this simply includes secure random data.  In any event, the information is re-hashed in a loop for 25 milliseconds seconds.

    @return {Buffer} 32 bytes
*/
function browserEntropy() {
    var entropyStr = Array(randomBytes(101)).join();
    try {
        entropyStr += new Date().toString() + " " + window.screen.height + " " + window.screen.width + " " + window.screen.colorDepth + " " + " " + window.screen.availHeight + " " + window.screen.availWidth + " " + window.screen.pixelDepth + navigator.language + " " + window.location + " " + window.history.length;

        for (var i = 0, mimeType; i < navigator.mimeTypes.length; i++) {
            mimeType = navigator.mimeTypes[i];
            entropyStr += mimeType.description + " " + mimeType.type + " " + mimeType.suffixes + " ";
        }
    } catch (error) {
        //nodejs:ReferenceError: window is not defined
        entropyStr += hash.sha256(new Date().toString());
    }

    var b = new Buffer(entropyStr);
    entropyStr += b.toString('binary') + " " + new Date().toString();

    var entropy = entropyStr;
    var start_t = Date.now();
    while (Date.now() - start_t < 25) {
        entropy = hash.sha256(entropy);
    }return entropy;
}
}).call(this,require("buffer").Buffer)
},{"./hash":110,"buffer":55,"randombytes":180}],115:[function(require,module,exports){
(function (Buffer){
'use strict';

var ecdsa = require('./ecdsa');
var hash = require('./hash');
var curve = require('ecurve').getCurveByName('secp256k1');
var assert = require('assert');
var BigInteger = require('bigi');
var PublicKey = require('./key_public');
var PrivateKey = require('./key_private');

module.exports = Signature;

function Signature(r, s, i) {
    assert.equal(r != null, true, 'Missing parameter');
    assert.equal(s != null, true, 'Missing parameter');
    assert.equal(i != null, true, 'Missing parameter');

    /**
        Verify signed data.
         @arg {String|Buffer} data - full data (non-hex)
        @arg {pubkey|PublicKey} pubkey - EOSKey..
         @return {boolean}
    */
    function verify(data, pubkey) {
        if (typeof data === 'string') {
            data = Buffer.from(data);
        }
        assert(Buffer.isBuffer(data), 'data is a required String or Buffer');
        data = hash.sha256(data);
        return verifyHash(data, pubkey);
    }

    /**
        Verify a buffer of exactally 32 bytes in size (sha256(text))
         @arg {Buffer|hex} dataSha256 - 32 byte buffer or hex string
        @arg {String|PublicKey} pubkey
         @return {Signature}
    */
    function verifyHash(dataSha256, pubkey) {
        if (typeof dataSha256 === 'string') {
            dataSha256 = Buffer.from(dataSha256, 'hex');
        }
        if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) throw new Error("dataSha256: 32 byte buffer requred");

        var publicKey = PublicKey(pubkey);
        assert(publicKey, 'pubkey required');

        return ecdsa.verify(curve, dataSha256, { r: r, s: s }, publicKey.Q);
    };

    /** Verify hex data by converting to a buffer then hashing.
        @return {boolean}
    */
    function verifyHex(hex, pubkey) {
        var buf = Buffer.from(hex, 'hex');
        return verify(buf, pubkey);
    };

    /**
        Recover the public key used to create this signature using full data.
        
        @arg {String|Buffer} data - full data (non-hex)
         @return {PublicKey}
    */
    function recover(data) {
        if (typeof data === 'string') {
            data = Buffer.from(data);
        }
        assert(Buffer.isBuffer(data), 'data is a required String or Buffer');
        data = hash.sha256(data);

        return recoverHash(data);
    };

    /**
        @arg {Buffer|hex} dataSha256 - 32 byte buffer or hex string
        @return {PublicKey}
    */
    function recoverHash(dataSha256) {
        if (typeof dataSha256 === 'string') {
            dataSha256 = Buffer.from(dataSha256, 'hex');
        }
        if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) {
            throw new Error("dataSha256: 32 byte String or buffer requred");
        }

        var e = BigInteger.fromBuffer(dataSha256);
        var i2 = i;
        i2 -= 27;
        i2 = i2 & 3;
        var Q = ecdsa.recoverPubKey(curve, e, { r: r, s: s, i: i }, i2);
        return PublicKey.fromPoint(Q);
    };

    function toBuffer() {
        var buf;
        buf = new Buffer(65);
        buf.writeUInt8(i, 0);
        r.toBuffer(32).copy(buf, 1);
        s.toBuffer(32).copy(buf, 33);
        return buf;
    };

    function toHex() {
        return toBuffer().toString("hex");
    };

    return {
        r: r, s: s, i: i,
        toBuffer: toBuffer,
        verify: verify,
        verifyHash: verifyHash,
        verifyHex: verifyHex,
        recover: recover,
        recoverHash: recoverHash,
        toHex: toHex,

        /** @deprecated use verify (same arguments and return) */
        verifyBuffer: verify,

        /** @deprecated use recover (same arguments and return) */
        recoverPublicKey: recover,

        /** @deprecated use recoverHash (same arguments and return) */
        recoverPublicKeyFromBuffer: recoverHash

    };
}

/**
    Hash and sign arbitrary data.

    @arg {string|Buffer} data - non-hex data
    @arg {wif|PrivateKey} privateKey

    @return {Signature}
*/
Signature.sign = function (data, privateKey) {
    if (typeof data === 'string') {
        data = Buffer.from(data);
    }
    assert(Buffer.isBuffer(data), 'data is a required String or Buffer');
    data = hash.sha256(data);
    return Signature.signHash(data, privateKey);
};

/**
    Sign a buffer of exactally 32 bytes in size (sha256(text))

    @arg {Buffer|hex} buf - 32 byte buffer or hex string
    @arg {wif|PrivateKey} privateKey

    @return {Signature}
*/
Signature.signHash = function (dataSha256, privateKey) {
    if (typeof dataSha256 === 'string') {
        dataSha256 = Buffer.from(dataSha256, 'hex');
    }
    if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) throw new Error("dataSha256: 32 byte buffer requred");

    privateKey = PrivateKey(privateKey);
    assert(privateKey, 'privateKey required');

    var der, e, ecsignature, i, lenR, lenS, nonce;
    i = null;
    nonce = 0;
    e = BigInteger.fromBuffer(dataSha256);
    while (true) {
        ecsignature = ecdsa.sign(curve, dataSha256, privateKey.d, nonce++);
        der = ecsignature.toDER();
        lenR = der[3];
        lenS = der[5 + lenR];
        if (lenR === 32 && lenS === 32) {
            i = ecdsa.calcPubKeyRecoveryParam(curve, e, ecsignature, privateKey.toPublic().Q);
            i += 4; // compressed
            i += 27; // compact  //  24 or 27 :( forcing odd-y 2nd key candidate)
            break;
        }
        if (nonce % 10 === 0) {
            console.log("WARN: " + nonce + " attempts to find canonical signature");
        }
    }
    return Signature(ecsignature.r, ecsignature.s, i);
};

Signature.fromBuffer = function (buf) {
    var i, r, s;
    assert(Buffer.isBuffer(buf), 'Buffer is required');
    assert.equal(buf.length, 65, 'Invalid signature length');
    i = buf.readUInt8(0);
    assert.equal(i - 27, i - 27 & 7, 'Invalid signature parameter');
    r = BigInteger.fromBuffer(buf.slice(1, 33));
    s = BigInteger.fromBuffer(buf.slice(33));
    return Signature(r, s, i);
};

Signature.fromHex = function (hex) {
    return Signature.fromBuffer(Buffer.from(hex, "hex"));
};

/**
    @arg {String|Signature} o - hex string
    @return {Signature}
*/
Signature.from = function (o) {
    var signature = o ? o.r && o.s && o.i ? o : typeof o === 'string' ? Signature.fromHex(o) : Buffer.isBuffer(o) ? Signature.fromBuffer(o) : null : o; /*null or undefined*/

    if (!signature) {
        throw new TypeError('signature should be a hex string or buffer');
    }
    return signature;
};
}).call(this,require("buffer").Buffer)
},{"./ecdsa":107,"./hash":110,"./key_private":112,"./key_public":113,"assert":15,"bigi":20,"buffer":55,"ecurve":79}],116:[function(require,module,exports){
module.exports = {
  v1: require('./v1')
}

},{"./v1":119}],117:[function(require,module,exports){
module.exports={
  "get_transaction": {
    "brief": "Retrieve a transaction from the blockchain.",
    "params": {
      "transaction_id": "fixed_bytes32"
    },
    "results": {
      "transaction_id": "fixed_bytes32",
      "transaction": "Transaction"
    }
  },

  "get_transactions": {
    "brief": "Retrieve all transactions with specific account name referenced in their scope.",
    "params": {
      "account_name": "account_name",
      "skip_seq": "optional<uint32>",
      "num_seq": "optional<uint32>"
    },
    "results": {
      "transactions": "vector<ordered_transaction_results>",
      "time_limit_exceeded_error": "optional<bool>"
    }
  },

  "get_key_accounts": {
    "brief": "Retrieve accounts associated with a public key.",
    "params": {
      "public_key": "public_key"
    },
    "results": {
      "account_names": "vector[name]"
    }
  },

  "get_controlled_accounts": {
    "brief": "Retrieve accounts which are created by the given account.",
    "params": {
      "controlling_account": "name"
    },
    "results": {
      "controlled_accounts": "vector[name]"
    }
  }
}

},{}],118:[function(require,module,exports){
module.exports={
  "get_info": {
    "brief": "Return general network information.",
    "params": null,
    "results": {
      "head_block_num": "uint32",
      "last_irreversible_block_num": "uint32",
      "head_block_id": "fixed_bytes32",
      "head_block_time": "time",
      "head_block_producer": {"_id": "uint16"},
      "recent_slots": "string",
      "participation_rate": "double"
    }
  },

  "get_block": {
    "brief": "Fetch a block from the blockchain.",
    "params": {
      "block_num_or_id": "string"
    },
    "results": {
      "previous":"uint32",
      "timestamp":"time",
      "transaction_merkle_root":"uint32",
      "producer": "uint16",
      "producer_changes":"map<account_name, account_name>[]",
      "producer_signature":"signature",
      "cycles": "thread[]",
      "id": "fixed_bytes33",
      "block_num": "uint32",
      "ref_block_prefix": "uint32"
    },
    "errors": {
      "unknown block": null
    }
  },

  "get_account": {
    "brief": "Fetch a blockchain account",
    "params": {
      "account_name": "name"
    },
    "results": {
      "account_name": "name",
      "eos_balance": "uint64",
      "staked_balance": "uint64",
      "unstaking_balance": "uint64",
      "last_unstaking_time": "time",
      "permissions": "vector<permission>",
      "producer": "optional<producer_info>"
    }
  },

  "get_code": {
    "brief": "Fetch smart contract code",
    "params": {
      "account_name": "name"
    },
    "results": {
      "account_name": "name",
      "wast": "string",
      "code_hash": "fixed_bytes32",
      "abi": "optional<abi>"
    }
  },

  "get_table_rows": {
    "brief": "Fetch smart contract data from an account.",
    "params": {
      "json": { "type": "bool", "default": false},
      "table_key": "string",
      "scope": "name",
      "code": "name",
      "table": "name",
      "lower_bound": {"type": "uint64", "default": "0"},
      "upper_bound": {"type": "uint64", "default": "-1"},
      "limit": {"type": "uint32", "default": "10"}
    },
    "results": {
      "rows": {
        "type": "vector",
        "doc": "one row per item, either encoded as hex String or JSON object"
      },
      "more": {
        "type": "bool",
        "doc": "true if last element"
      }
    }
  },

  "abi_json_to_bin": {
    "brief": "Manually serialize json into binary hex.  The binayargs is usually stored in Message.data.",
    "params": {
      "code": "name",
      "action": "name",
      "args": "bytes"
    },
    "results": {
      "binargs": "bytes",
      "required_scope": "name[]",
      "required_auth": "name[]"
    }
  },

  "abi_bin_to_json": {
    "brief": "Convert bin hex back into Abi json definition.",
    "params": {
      "code": "name",
      "action": "name",
      "binargs": "bytes"
    },
    "results": {
      "args": "bytes",
      "required_scope": "name[]",
      "required_auth": "name[]"
    }
  },

  "get_required_keys": {
    "params": {
      "transaction": "transaction",
      "available_keys": "set[public_key]"
    },
    "results": "Set[public_key]"
  },

  "push_block": {
    "brief": "Append a block to the chain database.",
    "params": {
      "block": "signed_block"
    },
    "results": null
  },

  "push_transaction": {
    "brief": "Attempts to push the transaction into the pending queue.",
    "params": {
      "signed_transaction": "signed_transaction"
    },
    "results": {
      "transaction_id": "fixed_bytes32",
      "processed": "bytes"
    }
  },

  "push_transactions": {
    "brief": "Attempts to push transactions into the pending queue.",
    "params": {
      "signed_transaction[]": "signed_transaction"
    },
    "results": "vector[push_transaction.results]"
  }

}

},{}],119:[function(require,module,exports){
module.exports = {
  chain: require('./chain'),
  account_history: require('./account_history')
}

},{"./account_history":117,"./chain":118}],120:[function(require,module,exports){
module.exports = {
  api: require('./api'),
  schema: require('./schema')
}

},{"./api":116,"./schema":123}],121:[function(require,module,exports){
module.exports={
  "name": "uint64",
  "checksum": "fixed_bytes32",
  "signature": "fixed_bytes65",
  "public_key": "fixed_bytes33",
  "message_type": "fixed_string16",
  "asset_symbol": "uint64",
  "share_type": "int64",
  "field_name": "string",
  "asset": {
    "fields": {
      "amount": "share_type",
      "symbol": "asset_symbol"
    }
  },
  "struct_t": {
    "fields": {
      "name": "type_name",
      "base": "type_name",
      "fields": "map<field_name, type_name>"
    }
  }
}

},{}],122:[function(require,module,exports){
module.exports={
  "account_name": "name",
  "permission_name": "name",
  "func_name": "name",
  "message_name": "fixed_string32",
  "type_name": "fixed_string32",
  "account_permission": {
    "fields": {
      "account": "account_name",
      "permission": "permission_name"
    }
  },
  "message": {
    "fields": {
      "code": "account_name",
      "type": "func_name",
      "authorization": "account_permission[]",
      "data": "bytes"
    },
    "docs": {
      "code": "the contract defining the primary code to execute for code/type",
      "type": "the action to be taken",
      "authorization": "the accounts and permission levels provided",
      "data": "opaque data processed by code"
    }
  },
  "account_permission_weight": {
    "fields": {
      "permission": "account_permission",
      "weight": "uint16"
    }
  },
  "transaction": {
    "fields": {
      "ref_block_num": "uint16",
      "ref_block_prefix": "uint32",
      "expiration": "time",
      "scope": "account_name[]",
      "read_scope": "account_name[]",
      "messages": "message[]"
    },
    "docs": {
      "scope": "the data may be accessed while processing this transaction"
    }
  },
  "signed_transaction": {
    "base": "transaction",
    "fields": {
      "signatures": "signature[]"
    }
  },
  "key_permission_weight": {
    "fields": {
      "key": "public_key",
      "weight": "uint16"
    }
  },
  "authority": {
    "fields": {
      "threshold": "uint32",
      "keys": "key_permission_weight[]",
      "accounts": "account_permission_weight[]"
    }
  },
  "blockchain_configuration": {
    "fields": {
      "max_blk_size": "uint32",
      "target_blk_size": "uint32",
      "max_storage_size": "uint64",
      "elected_pay": "share_type",
      "runner_up_pay": "share_type",
      "min_eos_balance": "share_type",
      "max_trx_lifetime": "uint32",
      "auth_depth_limit": "uint16",
      "max_trx_runtime": "uint32",
      "in_depth_limit": "uint16",
      "max_in_msg_size": "uint32",
      "max_gen_trx_size": "uint32"
    },
    "docs": {
      "in_depth_limit": "inline depth limit",
      "max_in_msg_size": "max inline message size"
    }
  },
  "type_def": {
    "fields": {
      "new_type_name": "type_name",
      "type": "type_name"
    }
  },
  "action": {
    "fields": {
      "action_name": "name",
      "type": "type_name"
    }
  },
  "table": {
    "fields": {
      "table_name": "name",
      "index_type": "type_name",
      "key_names": "field_name[]",
      "key_types": "type_name[]",
      "type": "type_name"
    },
    "docs": {
      "table_name": "the name of the table",
      "index_type": "the kind of index, i64, i128i128, etc",
      "key_names": "names for the keys defined by keytype",
      "key_types": "the meaning / type of key parameters, how to convert binary key to json",
      "type": "the meaning / type of the binary data stored in this table"
    }
  },
  "abi": {
    "fields": {
      "types": "type_def[]",
      "structs": "struct_t[]",
      "actions": "action[]",
      "tables": "table[]"
    }
  },
  "transfer": {
    "fields": {
      "from": "account_name",
      "to": "account_name",
      "amount": "uint64",
      "memo": "string"
    },
    "docs": {
      "from": "may not be the message.sender if message.sender has delegated authority by from"
    }
  },
  "nonce": {
    "fields": {
      "value": "string"
    }
  },
  "lock": {
    "fields": {
      "from": "account_name",
      "to": "account_name",
      "amount": "share_type"
    }
  },
  "unlock": {
    "fields": {
      "account": "account_name",
      "amount": "share_type"
    }
  },
  "claim": {
    "fields": {
      "account": "account_name",
      "amount": "share_type"
    }
  },
  "newaccount": {
    "fields": {
      "creator": "account_name",
      "name": "account_name",
      "owner": "authority",
      "active": "authority",
      "recovery": "authority",
      "deposit": "asset"
    }
  },
  "setcode": {
    "fields": {
      "account": "account_name",
      "vm_type": "uint8",
      "vm_version": "uint8",
      "code": "bytes",
      "code_abi": "abi"
    },
    "docs": {
      "account": "the account that is handling the message",
      "vm_type": "the virtual machine type",
      "vm_version": "the virtual machine version",
      "code": "the apply",
      "code_abi": "the interface description of the code"
    }
  },
  "setproducer": {
    "fields": {
      "name": "account_name",
      "key": "public_key",
      "configuration": "blockchain_configuration"
    }
  },
  "okproducer": {
    "fields": {
      "voter": "account_name",
      "producer": "account_name",
      "approve": "int8"
    },
    "docs": {
      "voter": "The account casting a vote",
      "producer": "The producer being voted on",
      "approve": "1 to approve, or 0 to disapprove"
    }
  },
  "setproxy": {
    "fields": {
      "stakeholder": "account_name",
      "proxy": "account_name"
    },
    "docs": {
      "stakeholder": "The account with stake to be proxied",
      "proxy": "The account to cast votes with stakeholder's stake weight"
    }
  },
  "updateauth": {
    "fields": {
      "account": "account_name",
      "permission": "permission_name",
      "parent": "permission_name",
      "new_authority": "authority"
    }
  },
  "deleteauth": {
    "fields": {
      "account": "account_name",
      "permission": "permission_name"
    }
  },
  "linkauth": {
    "fields": {
      "account": "account_name",
      "code": "account_name",
      "type": "func_name",
      "requirement": "permission_name"
    },
    "docs": {
      "account": "The account to require permissions for",
      "code": "The contract to require permissions to invoke",
      "requirement": "The permission name to require"
    }
  },
  "unlinkauth": {
    "fields": {
      "account": "account_name",
      "code": "account_name",
      "type": "func_name"
    },
    "docs": {
      "account": "The account to require permissions for",
      "code": "The contract to require permissions to invoke"
    }
  }
}

},{}],123:[function(require,module,exports){
const base = require('./base')
const generated = require('./generated')

module.exports = Object.assign({}, base, generated)

},{"./base":121,"./generated":122}],124:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],125:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":152,"safe-buffer":195}],126:[function(require,module,exports){
(function (Buffer){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ByteBuffer = require('bytebuffer');
var Struct = require('./struct');

module.exports = {
  create: create,
  toBuffer: toBuffer,
  fromBuffer: fromBuffer

  /**
    @summary Create a serializer for each definition.
    @return {CreateStruct}
  */
};function create(definitions, types) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : types.config;

  var errors = [];

  // Basic structure validation
  for (var key in definitions) {
    var value = definitions[key];
    var base = value.base,
        fields = value.fields;

    var typeOfValue = typeof value === 'undefined' ? 'undefined' : _typeof(value);
    if (typeOfValue === 'object') {
      if (!base && !fields) {
        errors.push('Expecting ' + key + '.fields or ' + key + '.base');
        continue;
      }
      if (base && typeof base !== 'string') {
        errors.push('Expecting string ' + key + '.base');
      }
      if (fields) {
        if ((typeof fields === 'undefined' ? 'undefined' : _typeof(fields)) !== 'object') {
          errors.push('Expecting object ' + key + '.fields');
        } else {
          for (var field in fields) {
            if (typeof fields[field] !== 'string') {
              errors.push('Expecting string in ' + key + '.fields.' + field);
            }
          }
        }
      }
    } else if (typeOfValue !== 'string') {
      errors.push('Expecting object or string under ' + key + ', instead got ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));
      continue;
    }
  }

  // Resolve user-friendly typedef names pointing to a native type (or another typedef)
  for (var _key in definitions) {
    var _value = definitions[_key];
    if (typeof _value === 'string') {
      var type = types[_value];
      if (type) {
        types[_key] = type;
      } else {
        errors.push('Unrecognized type ' + _key + '.' + _value);
      }
    }
  }

  // Keys with objects are structs
  var structs = {};
  for (var _key2 in definitions) {
    var _value2 = definitions[_key2];
    if ((typeof _value2 === 'undefined' ? 'undefined' : _typeof(_value2)) === 'object') {
      structs[_key2] = Struct(_key2, config);
    }
  }

  // Structs can inherit another struct, they will share the same instance
  for (var _key3 in definitions) {
    var thisStruct = structs[_key3];
    if (!thisStruct) continue;
    var _value3 = definitions[_key3];
    if ((typeof _value3 === 'undefined' ? 'undefined' : _typeof(_value3)) === 'object' && _value3.base) {
      var base = _value3.base;
      var baseStruct = structs[base];
      if (!baseStruct) {
        errors.push('Missing ' + base + ' in ' + _key3 + '.base');
        continue;
      }
      thisStruct.add('', structPtr(baseStruct));
    }
  }

  var vector = types.vector,
      optional = types.optional;

  // Create types from a string (ex vector[Type])

  function getTypeOrStruct(Type, typeArgs) {
    var typeatty = parseType(Type);
    if (!typeatty) return null;
    var name = typeatty.name,
        annotation = typeatty.annotation,
        arrayType = typeatty.arrayType;

    var ret = void 0;
    if (annotation) {
      // any_type<field_name, type_name>
      var _type = types[name];
      if (_type == null) {
        errors.push('Missing ' + name + ' in ' + Type);
        return null;
      }
      var annTypes = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = annotation[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var annTypeName = _step.value;

          var annType = getTypeOrStruct(annTypeName);
          if (!annType) {
            errors.push('Missing ' + annTypeName + ' in ' + Type);
            return null;
          }
          annTypes.push(annType);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      ret = _type(annTypes);
    } else if (arrayType == null) {
      // AnyType
      var fieldStruct = structs[name];
      if (fieldStruct) {
        return fieldStruct;
      }

      var _type2 = types[name];
      if (!_type2) {
        return null;
      }

      // types need to be instantiated
      ret = _type2(typeArgs);
    } else if (arrayType === '') {
      // AnyType[]
      var nameType = getTypeOrStruct(typeatty.name);
      if (!nameType) {
        return null;
      }

      ret = vector(nameType);
    } else if (arrayType.length > 0) {
      // vector[Type]
      var arrayTs = getTypeOrStruct(typeatty.arrayType);
      if (!arrayTs) {
        errors.push('Missing ' + typeatty.arrayType + ' in ' + Type);
        return null;
      }
      var baseTs = getTypeOrStruct(typeatty.name, arrayTs);
      if (!baseTs) {
        errors.push('Missing ' + typeatty.name + ' in ' + Type);
        return null;
      }
      ret = baseTs;
    }
    return typeatty.optional ? optional(ret) : ret;
  }

  // Add all the fields.  Thanks to structPtr no need to look at base types.
  for (var _key4 in definitions) {
    var _thisStruct = structs[_key4];
    if (!_thisStruct) continue;
    var _value4 = definitions[_key4];
    if (!_value4.fields) continue;
    var fields = _value4.fields;

    for (var Field in fields) {
      var Type = fields[Field];
      var ts = getTypeOrStruct(Type);
      if (!ts) {
        errors.push('Missing ' + Type + ' in ' + _key4 + '.fields.' + Field);
        continue;
      }
      _thisStruct.add(Field, ts);
    }
  }

  if (errors.length) {
    // 'structs' could contain invalid references
    return { errors: errors };
  }

  return { errors: errors, structs: structs };
}

var parseType = function parseType(name) {
  if (!name || typeof name !== 'string') {
    return null;
  }

  name = name.trim();

  var annotationMatch = name.match(/<(.*)>/);
  if (annotationMatch) {
    var annotation = annotationMatch ? annotationMatch[1].replace(/ /g, '').split(',') : null;

    name = name.replace(annotationMatch[0], '').trim();
    return { name: name, annotation: annotation };
  }

  var arrayMatch = name.match(/\[(.*)\]/);
  var arrayType = arrayMatch ? arrayMatch[1].trim() : null;

  if (arrayMatch) {
    name = name.replace(arrayMatch[0], '').trim();
  }

  var optional = false;
  if (/\?$/.test(name)) {
    name = name.substring(0, name.length - 1);
    optional = true;
  }
  return { name: name, arrayType: arrayType, optional: optional };
};

/**
  Base types all point to the same struct.

  Note, appendByteBuffer has no return type.
*/
var structPtr = function structPtr(type) {
  return {
    fromByteBuffer: function fromByteBuffer(b) {
      return type.fromByteBuffer(b);
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      type.appendByteBuffer(b, value);
    },
    fromObject: function fromObject(value) {
      return type.fromObject(value);
    },
    toObject: function toObject(value) {
      return type.toObject(value);
    }
  };
};

function toBuffer(type, value) {
  var struct = type.fromObject(value);
  return Buffer.from(toByteBuffer(type, struct).toBinary(), 'binary');
}

function fromBuffer(type, buffer) {
  var toObject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var b = ByteBuffer.fromBinary(buffer.toString('binary'), ByteBuffer.LITTLE_ENDIAN);
  var struct = type.fromByteBuffer(b);
  return toObject ? type.toObject(struct) : struct;
}

function toByteBuffer(type, value) {
  var b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);
  type.appendByteBuffer(b, value);
  return b.copy(0, b.offset);
}
}).call(this,require("buffer").Buffer)
},{"./struct":128,"buffer":55,"bytebuffer":56}],127:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var Types = require('./types');

var _require = require('./fcbuffer'),
    create = _require.create,
    fromBuffer = _require.fromBuffer,
    toBuffer = _require.toBuffer;

/**
  @typedef {object} SerializerConfig
  @property {boolean} [SerializerConfig.defaults = false] - Insert in defaults (like 0, false, '000...', or '') for any missing values.  This helps test and inspect what a definition should look like.  Do not enable in production.
  @property {boolean} [SerializerConfig.debug = false] - Prints lots of HEX and field-level information to help debug binary serialization.
  @property {object} [customTypes] - Add or overwrite low level types (see ./src/types.js `const types = {...}`).
*/

/**
  @typedef {object} CreateStruct
  @property {Array<String>} CreateStruct.errors - If any errors exists, no struts will be created.
  @property {Object} CreateStruct.struct - Struct objects keyed by definition name.
  @property {String} CreateStruct.struct.structName - Struct object that will serialize this type.
  @property {Struct} CreateStruct.struct.struct - Struct object that will serialize this type (see ./src/struct.js).
*/

/**
  @arg {object} definitions - examples https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json
  @arg {SerializerConfig} config
  @return {CreateStruct}
*/


module.exports = function (definitions) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if ((typeof definitions === 'undefined' ? 'undefined' : _typeof(definitions)) !== 'object') {
    throw new TypeError('definitions is a required parameter');
  }

  if (config.customTypes) {
    definitions = Object.assign({}, definitions); //clone
    for (var key in config.customTypes) {
      // custom types overwrite definitions
      delete definitions[key];
    }
  }

  var types = Types(config);

  var _create = create(definitions, types),
      errors = _create.errors,
      structs = _create.structs;

  /** Extend with more JSON schema and type definitions */


  var _extend = function _extend(parent, child) {
    var combined = Object.assign({}, parent, child);

    var _create2 = create(combined, types),
        structs = _create2.structs,
        errors = _create2.errors;

    return {
      errors: errors,
      structs: structs,
      extend: function extend(child) {
        return _extend(combined, child);
      }
    };
  };

  return {
    errors: errors,
    structs: structs,
    types: types,
    extend: function extend(child) {
      return _extend(definitions, child);
    }
  };
};

module.exports.fromBuffer = fromBuffer;
module.exports.toBuffer = toBuffer;
},{"./fcbuffer":126,"./types":129}],128:[function(require,module,exports){
'use strict';

var ByteBuffer = require('bytebuffer');

/**
  @class Struct

  @arg {object} config.override = {
    'Message.data.appendByteBuffer': ({fields, object, b}) => {..}
  }
  Rare cases where specialized serilization is needed (ex A Message object has
  'type' and 'data' fields where object.type === 'transfer' can define
  serialization time Struct needed for 'data' .. This saves complexity for the
  end-user's working with json.  See override unit test.
*/
module.exports = function (name) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { debug: false };

  config = Object.assign({ override: {} }, config);
  var fields = {};
  return {
    /** @private */
    add: function add(fieldName, type) {
      fields[fieldName] = type;
    },
    fromByteBuffer: function fromByteBuffer(b) {
      var object = {};
      var field = null;
      try {
        for (field in fields) {
          var type = fields[field];
          try {
            var o1 = b.offset;
            if (field === '') {
              // structPtr
              object = type.fromByteBuffer(b, config);
            } else {
              var fromByteBuffer = config.override[name + '.' + field + '.fromByteBuffer'];
              if (fromByteBuffer) {
                fromByteBuffer({ fields: fields, object: object, b: b, config: config });
              } else {
                object[field] = type.fromByteBuffer(b, config);
              }
            }
            if (config.debug) {
              if (type.struct) {
                console.error(type.struct);
              } else {
                var _b = b.copy(o1, b.offset);
                console.error(name + '.' + field + '\t', _b.toHex(), '(fromByteBuffer)');
              }
            }
          } catch (e) {
            e.message += ' (' + name + '.' + field + ')';
            console.error('Error reading ' + name + '.' + field + ' in data:');
            b.printDebug();
            throw e;
          }
        }
      } catch (error) {
        error.message += ' ' + name + '.' + field;
        throw error;
      }
      return object;
    },
    appendByteBuffer: function appendByteBuffer(b, object) {
      var field = null;
      try {
        for (field in fields) {
          var type = fields[field];
          if (field === '') {
            // structPtr
            type.appendByteBuffer(b, object);
          } else {
            var appendByteBuffer = config.override[name + '.' + field + '.appendByteBuffer'];
            if (appendByteBuffer) {
              appendByteBuffer({ fields: fields, object: object, b: b });
            } else {
              type.appendByteBuffer(b, object[field]);
            }
          }
        }
      } catch (error) {
        try {
          error.message += ' ' + name + '.' + field + ' = ' + JSON.stringify(object[field]);
        } catch (e) {
          // circular ref
          error.message += ' ' + name + '.' + field + ' = ' + object[field];
        }
        throw error;
      }
    },
    fromObject: function fromObject(serializedObject) {
      var fromObject_struct = config.override[name + '.fromObject'];
      if (fromObject_struct) {
        var ret = fromObject_struct(serializedObject);
        if (ret != null) {
          return ret;
        }
      }

      var result = {};
      var field = null;
      try {
        for (field in fields) {
          // if(config.debug) {
          //   console.error(name, field, '(fromObject)')
          // }
          var type = fields[field];
          if (field === '') {
            // structPtr
            var object = type.fromObject(serializedObject);
            result = Object.assign(result, object);
          } else {
            var fromObject = config.override[name + '.' + field + '.fromObject'];
            if (fromObject) {
              fromObject({ fields: fields, object: serializedObject, result: result });
            } else {
              var value = serializedObject[field];
              var _object = type.fromObject(value);
              result[field] = _object;
            }
          }
        }
      } catch (error) {
        error.message += ' ' + name + '.' + field;
        throw error;
      }

      return result;
    },
    toObject: function toObject() {
      var serializedObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var toObject_struct = config.override[name + '.toObject'];
      if (toObject_struct) {
        var ret = toObject_struct(serializedObject);
        if (ret != null) {
          return ret;
        }
      }

      var result = {};
      var field = null;
      try {
        // if (!fields) { return result }

        for (field in fields) {
          var type = fields[field];

          var toObject = config.override[name + '.' + field + '.toObject'];
          if (toObject) {
            toObject({ fields: fields, object: serializedObject, result: result, config: config });
          } else {
            var object = type.toObject(serializedObject ? serializedObject[field] : null, config);
            if (field === '') {
              // structPtr
              result = Object.assign(result, object);
            } else {
              result[field] = object;
            }
          }

          if (config.debug) {
            try {
              var b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);
              if (serializedObject != null) {
                var value = serializedObject[field];
                if (value) {
                  var appendByteBuffer = config.override[name + '.' + field + '.appendByteBuffer'];
                  if (toObject && appendByteBuffer) {
                    appendByteBuffer({ fields: fields, object: serializedObject, b: b });
                  } else {
                    type.appendByteBuffer(b, value);
                  }
                }
              }
              b = b.copy(0, b.offset);
              console.error(name + '.' + field, b.toHex(), '(toObject)');
            } catch (error) {
              // work-around to prevent debug time crash
              error.message = name + '.' + field + ' ' + error.message;
              console.error(error);
            }
          }
        }
      } catch (error) {
        error.message += ' ' + name + '.' + field;
        throw error;
      }
      return result;
    }
  };
};
},{"bytebuffer":56}],129:[function(require,module,exports){
(function (Buffer){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var BN = require('bn.js');

var _require = require('bytebuffer'),
    Long = _require.Long;

var types = {
  bytes: function bytes() {
    return [bytebuf];
  },
  string: function string() {
    return [_string];
  },
  vector: function vector(type, sorted) {
    return [_vector, { type: type, sorted: sorted }];
  },
  optional: function optional(type) {
    return [_optional, { type: type }];
  },
  time: function time() {
    return [_time2];
  },
  map: function map(annotation) {
    return [_map, { annotation: annotation }];
  },

  fixed_string16: function fixed_string16() {
    return [_string, { maxLen: 16 }];
  },
  fixed_string32: function fixed_string32() {
    return [_string, { maxLen: 32 }];
  },

  fixed_bytes16: function fixed_bytes16() {
    return [bytebuf, { len: 16 }];
  },
  fixed_bytes28: function fixed_bytes28() {
    return [bytebuf, { len: 28 }];
  },
  fixed_bytes32: function fixed_bytes32() {
    return [bytebuf, { len: 32 }];
  },
  fixed_bytes33: function fixed_bytes33() {
    return [bytebuf, { len: 33 }];
  },
  fixed_bytes64: function fixed_bytes64() {
    return [bytebuf, { len: 64 }];
  },
  fixed_bytes65: function fixed_bytes65() {
    return [bytebuf, { len: 65 }];
  },

  uint8: function uint8() {
    return [intbuf, { bits: 8 }];
  },
  uint16: function uint16() {
    return [intbuf, { bits: 16 }];
  },
  uint32: function uint32() {
    return [intbuf, { bits: 32 }];
  },
  uint64: function uint64() {
    return [intbuf, { bits: 64 }];
  },
  // ,128,224,256,512 TODO

  int8: function int8() {
    return [intbuf, { signed: true, bits: 8 }];
  },
  int16: function int16() {
    return [intbuf, { signed: true, bits: 16 }];
  },
  int32: function int32() {
    return [intbuf, { signed: true, bits: 32 }];
  },
  int64: function int64() {
    return [intbuf, { signed: true, bits: 64 }];
  }
  // ,128,224,256,512 TODO

  // VarInt32: ()=> [intbuf, {signed: true, bits: 32}],


  /*
    @arg {SerializerConfig} config
    @return {object} {[typeName]: function(args)}
  */
};module.exports = function (config) {
  config = Object.assign({ defaults: false, debug: false, customTypes: {} }, config);

  var allTypes = Object.assign({}, types, config.customTypes);

  var createTypeReducer = function createTypeReducer(baseTypes) {
    return function (customTypes, name) {
      customTypes[name] = function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var type = createType(name, config, args, baseTypes, allTypes, customTypes);
        return type;
      };
      return customTypes;
    };
  };

  var baseTypes = Object.keys(types).reduce(createTypeReducer(), {});

  var customTypes = Object.keys(config.customTypes || {}).reduce(createTypeReducer(baseTypes), {});

  return Object.assign({}, baseTypes, customTypes, { config: config });
};

/**
    @args {string} typeName - matches types[]
    @args {string} config - Additional arguments for types
*/
function createType(typeName, config, args, baseTypes, allTypes, customTypes) {
  var Type = baseTypes ? allTypes[typeName] : types[typeName];

  var _Type = Type.apply(undefined, _toConsumableArray(args)),
      _Type2 = _slicedToArray(_Type, 2),
      fn = _Type2[0],
      _Type2$ = _Type2[1],
      v = _Type2$ === undefined ? {} : _Type2$;

  var validation = Object.assign(v, config);
  validation.typeName = typeName;
  // if(typeName === 'vector') console.log('typeName', validation)
  var type = fn(validation, baseTypes, customTypes);
  return type;
}

var _map = function _map(validation) {
  var _validation$annotatio = _slicedToArray(validation.annotation, 2),
      type1 = _validation$annotatio[0],
      type2 = _validation$annotatio[1];

  if (!isSerializer(type1)) {
    throw new TypeError('map<type1, > unknown');
  }
  if (!isSerializer(type2)) {
    throw new TypeError('map<, type2> unknown');
  }

  return {
    fromByteBuffer: function fromByteBuffer(b) {
      var size = b.readVarint32();
      var result = {};
      for (var i = 0; i < size; i++) {
        result[type1.fromByteBuffer(b)] = type2.fromByteBuffer(b);
      }
      if (validation.debug) {
        console.log('0x' + size.toString(16), '(map.fromByteBuffer length)', result);
      }
      return result;
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      validate(value, validation);
      var keys = Object.keys(value);
      b.writeVarint32(keys.length);
      if (validation.debug) {
        console.log('0x' + keys.length.toString(16), '(map.appendByteBuffer length)', keys);
      }
      // if(sorted) {
      //   value = sortKeys(type1, Object.assign({}, value))
      // }
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var o = _step.value;

          var value2 = value[o];
          type1.appendByteBuffer(b, o);
          type2.appendByteBuffer(b, value2);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    },
    fromObject: function fromObject(value) {
      validate(value, validation);
      var result = {};
      // if(sorted) {
      //   value = sortKeys(type1, Object.assign({}, value))
      // }
      for (var o in value) {
        result[type1.fromObject(o)] = type2.fromObject(value[o]);
      }
      return result;
    },
    toObject: function toObject(value) {
      if (validation.defaults && value == null) {
        return _defineProperty({}, type1.toObject(null), type2.toObject(null));
      }
      validate(value, validation);
      var result = {};
      // if(sorted) {
      //   value = sortKey(type1, Object.assign({}, value))
      // }
      for (var o in value) {
        result[type1.toObject(o)] = type2.toObject(value[o]);
      }
      return result;
    }
  };
};

var _vector = function _vector(validation) {
  var type = validation.type,
      sorted = validation.sorted;

  if (!isSerializer(type)) {
    throw new TypeError('vector type should be a serializer');
  }

  return {
    fromByteBuffer: function fromByteBuffer(b) {
      var size = b.readVarint32();
      if (validation.debug) {
        console.log('0x' + size.toString(16), '(vector.fromByteBuffer length)');
      }
      var result = [];
      for (var i = 0; i < size; i++) {
        result.push(type.fromByteBuffer(b));
      }
      return result;
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      validate(value, validation);
      b.writeVarint32(value.length);
      if (sorted) {
        value = sort(type, Object.assign([], value));
      }
      if (validation.debug) {
        console.log('0x' + value.length.toString(16), '(vector.appendByteBuffer length)', value);
      }
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var o = _step2.value;

          type.appendByteBuffer(b, o);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    },
    fromObject: function fromObject(value) {
      validate(value, validation);
      var result = [];
      if (sorted) {
        value = sort(type, Object.assign([], value));
      }
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = value[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var o = _step3.value;

          result.push(type.fromObject(o));
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return result;
    },
    toObject: function toObject(value) {
      if (validation.defaults && value == null) {
        return [type.toObject(value)];
      }
      validate(value, validation);
      var result = [];
      if (sorted) {
        value = sort(type, Object.assign([], value));
      }
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = value[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var o = _step4.value;

          result.push(type.toObject(o));
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return result;
    }
  };
};

var _optional = function _optional(validation) {
  var type = validation.type;

  if (!isSerializer(type)) {
    throw new TypeError('optional parameter should be a serializer');
  }

  return {
    fromByteBuffer: function fromByteBuffer(b) {
      if (!(b.readUint8() === 1)) {
        return null;
      }
      return type.fromByteBuffer(b);
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      if (value != null) {
        b.writeUint8(1);
        type.appendByteBuffer(b, value);
      } else {
        b.writeUint8(0);
      }
    },
    fromObject: function fromObject(value) {
      if (value == null) {
        return null;
      }
      return type.fromObject(value);
    },
    toObject: function toObject(value) {
      // toObject is only null save if defaults is true
      var resultValue = void 0;
      if (value == null && !validation.defaults) {
        resultValue = null;
      } else {
        resultValue = type.toObject(value);
      }
      return resultValue;
    }
  };
};

var intbufType = function intbufType(_ref2) {
  var _ref2$signed = _ref2.signed,
      signed = _ref2$signed === undefined ? false : _ref2$signed,
      bits = _ref2.bits;
  return (
    // variable ? `${signed ? 'Varint' : 'Uint'}${bits}` : // Varint32 was used at some point
    '' + (signed ? 'Int' : 'Uint') + bits
  );
};

var intbuf = function intbuf(validation) {
  return {
    fromByteBuffer: function fromByteBuffer(b) {
      var value = b['read' + intbufType(validation)]();
      return Long.isLong(value) ? value.toString() : value;
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      // validateInt(value, validation)
      // value = typeof value === 'string' ? Long.fromString(value) : value
      b['write' + intbufType(validation)](value);
    },
    fromObject: function fromObject(value) {
      validateInt(value, validation);
      // if(validation.bits > 53 && typeof value === 'number')
      //     value = String(value)

      return value;
    },
    toObject: function toObject(value) {
      if (validation.defaults && value == null) {
        return validation.bits > 53 ? '0' : 0;
      }

      validateInt(value, validation);
      // if(validation.bits > 53 && typeof value === 'number')
      //     value = String(value)

      return Long.isLong(value) ? value.toString() : value;
    }
  };
};

var bytebuf = function bytebuf(validation) {
  var _bytebuf = {
    fromByteBuffer: function fromByteBuffer(b) {
      var len = validation.len;

      var bCopy = void 0;
      if (len == null) {
        var lenPrefix = b.readVarint32();
        bCopy = b.copy(b.offset, b.offset + lenPrefix);
        b.skip(lenPrefix);
      } else {
        bCopy = b.copy(b.offset, b.offset + len);
        b.skip(len);
      }
      return Buffer.from(bCopy.toBinary(), 'binary');
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      // value = _bytebuf.fromObject(value)

      var len = validation.len;

      if (len == null) {
        b.writeVarint32(value.length);
      }
      b.append(value.toString('binary'), 'binary');
    },
    fromObject: function fromObject(value) {
      if (typeof value === 'string') {
        value = Buffer.from(value, 'hex');
      }

      validate(value, validation);
      return value;
    },
    toObject: function toObject(value) {
      var defaults = validation.defaults,
          len = validation.len;

      if (defaults && value == null) {
        return Array(len ? len + 1 : 1).join('00');
      }
      validate(value, validation);
      return value.toString('hex');
    }
  };
  return _bytebuf;
};

var _string = function _string(validation) {
  return {
    fromByteBuffer: function fromByteBuffer(b) {
      return b.readVString();
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      validate(value, validation);
      b.writeVString(value.toString());
    },
    fromObject: function fromObject(value) {
      validate(value, validation);
      return value;
    },
    toObject: function toObject(value) {
      if (validation.defaults && value == null) {
        return '';
      }
      validate(value, validation);
      return value;
    }
  };
};

var _time2 = function _time2(validation) {
  var _time = {
    fromByteBuffer: function fromByteBuffer(b) {
      return b.readUint32();
    },
    appendByteBuffer: function appendByteBuffer(b, value) {
      // if(typeof value !== "number")
      //     value = _time.fromObject(value)

      validate(value, validation);
      b.writeUint32(value);
    },
    fromObject: function fromObject(value) {
      validate(value, validation);

      if (typeof value === 'number') {
        return value;
      }

      if (value.getTime) {
        return Math.floor(value.getTime() / 1000);
      }

      if (typeof value !== 'string') {
        throw new Error('Unknown date type: ' + value);
      }

      // Chrome assumes Zulu when missing, Firefox does not
      if (typeof value === 'string' && !/Z$/.test(value)) {
        value += 'Z';
      }

      return Math.floor(new Date(value).getTime() / 1000);
    },
    toObject: function toObject(value) {
      if (validation.defaults && value == null) {
        return new Date(0).toISOString().split('.')[0];
      }

      validate(value, validation);

      // if(typeof value === "string") {
      //     if(!/Z$/.test(value))
      //         value += "Z"
      //
      //     return value
      // }

      // if(value.getTime)
      //     return value.toISOString().split('.')[0] + 'Z'

      validateInt(value, spread(validation, { bits: 32 }));
      var int = parseInt(value);
      return new Date(int * 1000).toISOString().split('.')[0];
    }
  };
  return _time;
};

var validate = function validate(value, validation) {
  if (isEmpty(value)) {
    throw new Error('Required ' + validation.typeName);
  }

  if (validation.len != null) {
    if (value.length == null) {
      throw new Error('len validation requries a "length" property');
    }

    var len = validation.len;

    if (value.length !== len) {
      throw new Error(validation.typeName + ' length ' + value.length + ' does not equal ' + len);
    }
  }

  if (validation.maxLen != null) {
    var maxLen = validation.maxLen;

    if (value.length == null) {
      throw new Error('maxLen validation requries a "length" property');
    }

    if (value.length > maxLen) {
      throw new Error(validation.typeName + ' length ' + value.length + ' exceeds maxLen ' + maxLen);
    }
  }
};

var ZERO = new BN();
var ONE = new BN('1');

function validateInt(value, validation) {
  if (isEmpty(value)) {
    throw new Error('Required ' + validation.typeName);
  }
  var _validation$signed = validation.signed,
      signed = _validation$signed === undefined ? false : _validation$signed,
      _validation$bits = validation.bits,
      bits = _validation$bits === undefined ? 54 : _validation$bits;


  value = String(value).trim();
  if (signed && !/^-?[0-9]+$/.test(value) || !signed && !/^[0-9]+$/.test(value)) {
    throw new Error('Number format ' + validation.typeName + ' ' + value);
  }

  var max = signed ? maxSigned(bits) : maxUnsigned(bits);
  var min = signed ? minSigned(bits) : ZERO;
  var i = new BN(value);

  // console.log('i.toString(), min.toString()', i.toString(), min.toString())
  if (i.cmp(min) < 0 || i.cmp(max) > 0) {
    throw new Error('Overflow ' + validation.typeName + ' ' + value + ', ' + ('max ' + max.toString() + ', min ' + min.toString() + ', signed ' + signed + ', bits ' + bits));
  }
}

/**
  Sort by the first element in a definition. Deterministic ordering is very important.
*/
var compare = function compare(values) {
  var firstKey = Object.keys(values)[0];
  var firstType = values[firstKey];
  return function (a, b) {
    var valA = a[firstKey];
    var valB = b[firstKey];

    if (firstType.compare) {
      return firstType.compare(valA, valB);
    }

    if (typeof valA === 'number' && typeof valB === 'number') {
      return valA - valB;
    }

    var encoding = void 0;
    if (Buffer.isBuffer(valA) && Buffer.isBuffer(valB)) {
      // A binary string compare does not work.  If localeCompare is well
      // supported that could replace HEX.  Performanance is very good so
      // comparing HEX is used for now.
      encoding = 'hex';
    }
    var strA = toString(valA, encoding);
    var strB = toString(valB, encoding);
    return strA > strB ? 1 : strA < strB ? -1 : 0;
  };
};

var isSerializer = function isSerializer(type) {
  return (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && typeof type.fromByteBuffer === 'function' && typeof type.appendByteBuffer === 'function' && typeof type.fromObject === 'function' && typeof type.toObject === 'function';
};

var toString = function toString(value, encoding) {
  return value == null ? value : value.toString ? value.toString(encoding) : value;
};

var sort = function sort(type, values) {
  return type.compare ? values.sort(type.compare(values)) : values.sort(compare(values));
};

var spread = function spread() {
  return Object.assign.apply(Object, arguments);
};
var isEmpty = function isEmpty(value) {
  return value == null;
};

// 1 << N === Math.pow(2, N)
var maxUnsigned = function maxUnsigned(bits) {
  return new BN(1).ishln(bits).isub(ONE);
};
var maxSigned = function maxSigned(bits) {
  return new BN(1).ishln(bits - 1).isub(ONE);
};
var minSigned = function minSigned(bits) {
  return new BN(1).ishln(bits - 1).ineg();
};
}).call(this,require("buffer").Buffer)
},{"bn.js":23,"buffer":55,"bytebuffer":56}],130:[function(require,module,exports){
(function (Buffer){
'use strict'
var Transform = require('stream').Transform
var inherits = require('inherits')

function HashBase (blockSize) {
  Transform.call(this)

  this._block = new Buffer(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)
    this.update(chunk)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this._digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function (data) {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)
  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

}).call(this,require("buffer").Buffer)
},{"buffer":55,"inherits":146,"stream":204}],131:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":132,"./hash/hmac":133,"./hash/ripemd":134,"./hash/sha":135,"./hash/utils":142}],132:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":142,"minimalistic-assert":155}],133:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":142,"minimalistic-assert":155}],134:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":132,"./utils":142}],135:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":136,"./sha/224":137,"./sha/256":138,"./sha/384":139,"./sha/512":140}],136:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":132,"../utils":142,"./common":141}],137:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":142,"./256":138}],138:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":132,"../utils":142,"./common":141,"minimalistic-assert":155}],139:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":142,"./512":140}],140:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":132,"../utils":142,"minimalistic-assert":155}],141:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":142}],142:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":146,"minimalistic-assert":155}],143:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":131,"minimalistic-assert":155,"minimalistic-crypto-utils":156}],144:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],145:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],146:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],147:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],148:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],149:[function(require,module,exports){
// the whatwg-fetch polyfill installs the fetch() function
// on the global object (window or self)
//
// Return that as the export for use in Webpack, Browserify etc.
require('whatwg-fetch');
module.exports = self.fetch.bind(self);

},{"whatwg-fetch":212}],150:[function(require,module,exports){
/*
 Copyright 2013 Daniel Wirtz <dcode@dcode.io>
 Copyright 2009 The Closure Library Authors. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS-IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/long.js for details
 */
(function(global, factory) {

    /* AMD */ if (typeof define === 'function' && define["amd"])
        define([], factory);
    /* CommonJS */ else if (typeof require === 'function' && typeof module === "object" && module && module["exports"])
        module["exports"] = factory();
    /* Global */ else
        (global["dcodeIO"] = global["dcodeIO"] || {})["Long"] = factory();

})(this, function() {
    "use strict";

    /**
     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
     *  See the from* functions below for more convenient ways of constructing Longs.
     * @exports Long
     * @class A Long class for representing a 64 bit two's-complement integer value.
     * @param {number} low The low (signed) 32 bits of the long
     * @param {number} high The high (signed) 32 bits of the long
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @constructor
     */
    function Long(low, high, unsigned) {

        /**
         * The low 32 bits as a signed value.
         * @type {number}
         */
        this.low = low | 0;

        /**
         * The high 32 bits as a signed value.
         * @type {number}
         */
        this.high = high | 0;

        /**
         * Whether unsigned or not.
         * @type {boolean}
         */
        this.unsigned = !!unsigned;
    }

    // The internal representation of a long is the two given signed, 32-bit values.
    // We use 32-bit pieces because these are the size of integers on which
    // Javascript performs bit-operations.  For operations like addition and
    // multiplication, we split each number into 16 bit pieces, which can easily be
    // multiplied within Javascript's floating-point representation without overflow
    // or change in sign.
    //
    // In the algorithms below, we frequently reduce the negative case to the
    // positive case by negating the input(s) and then post-processing the result.
    // Note that we must ALWAYS check specially whether those values are MIN_VALUE
    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
    // a positive number, it overflows back into a negative).  Not handling this
    // case would often result in infinite recursion.
    //
    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
    // methods on which they depend.

    /**
     * An indicator used to reliably determine if an object is a Long or not.
     * @type {boolean}
     * @const
     * @private
     */
    Long.prototype.__isLong__;

    Object.defineProperty(Long.prototype, "__isLong__", {
        value: true,
        enumerable: false,
        configurable: false
    });

    /**
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     * @inner
     */
    function isLong(obj) {
        return (obj && obj["__isLong__"]) === true;
    }

    /**
     * Tests if the specified object is a Long.
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     */
    Long.isLong = isLong;

    /**
     * A cache of the Long representations of small integer values.
     * @type {!Object}
     * @inner
     */
    var INT_CACHE = {};

    /**
     * A cache of the Long representations of small unsigned integer values.
     * @type {!Object}
     * @inner
     */
    var UINT_CACHE = {};

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromInt(value, unsigned) {
        var obj, cachedObj, cache;
        if (unsigned) {
            value >>>= 0;
            if (cache = (0 <= value && value < 256)) {
                cachedObj = UINT_CACHE[value];
                if (cachedObj)
                    return cachedObj;
            }
            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
            if (cache)
                UINT_CACHE[value] = obj;
            return obj;
        } else {
            value |= 0;
            if (cache = (-128 <= value && value < 128)) {
                cachedObj = INT_CACHE[value];
                if (cachedObj)
                    return cachedObj;
            }
            obj = fromBits(value, value < 0 ? -1 : 0, false);
            if (cache)
                INT_CACHE[value] = obj;
            return obj;
        }
    }

    /**
     * Returns a Long representing the given 32 bit integer value.
     * @function
     * @param {number} value The 32 bit integer in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromInt = fromInt;

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromNumber(value, unsigned) {
        if (isNaN(value) || !isFinite(value))
            return unsigned ? UZERO : ZERO;
        if (unsigned) {
            if (value < 0)
                return UZERO;
            if (value >= TWO_PWR_64_DBL)
                return MAX_UNSIGNED_VALUE;
        } else {
            if (value <= -TWO_PWR_63_DBL)
                return MIN_VALUE;
            if (value + 1 >= TWO_PWR_63_DBL)
                return MAX_VALUE;
        }
        if (value < 0)
            return fromNumber(-value, unsigned).neg();
        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
    }

    /**
     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
     * @function
     * @param {number} value The number in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromNumber = fromNumber;

    /**
     * @param {number} lowBits
     * @param {number} highBits
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromBits(lowBits, highBits, unsigned) {
        return new Long(lowBits, highBits, unsigned);
    }

    /**
     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
     *  assumed to use 32 bits.
     * @function
     * @param {number} lowBits The low 32 bits
     * @param {number} highBits The high 32 bits
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromBits = fromBits;

    /**
     * @function
     * @param {number} base
     * @param {number} exponent
     * @returns {number}
     * @inner
     */
    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

    /**
     * @param {string} str
     * @param {(boolean|number)=} unsigned
     * @param {number=} radix
     * @returns {!Long}
     * @inner
     */
    function fromString(str, unsigned, radix) {
        if (str.length === 0)
            throw Error('empty string');
        if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
            return ZERO;
        if (typeof unsigned === 'number') {
            // For goog.math.long compatibility
            radix = unsigned,
            unsigned = false;
        } else {
            unsigned = !! unsigned;
        }
        radix = radix || 10;
        if (radix < 2 || 36 < radix)
            throw RangeError('radix');

        var p;
        if ((p = str.indexOf('-')) > 0)
            throw Error('interior hyphen');
        else if (p === 0) {
            return fromString(str.substring(1), unsigned, radix).neg();
        }

        // Do several (8) digits each time through the loop, so as to
        // minimize the calls to the very expensive emulated div.
        var radixToPower = fromNumber(pow_dbl(radix, 8));

        var result = ZERO;
        for (var i = 0; i < str.length; i += 8) {
            var size = Math.min(8, str.length - i),
                value = parseInt(str.substring(i, i + size), radix);
            if (size < 8) {
                var power = fromNumber(pow_dbl(radix, size));
                result = result.mul(power).add(fromNumber(value));
            } else {
                result = result.mul(radixToPower);
                result = result.add(fromNumber(value));
            }
        }
        result.unsigned = unsigned;
        return result;
    }

    /**
     * Returns a Long representation of the given string, written using the specified radix.
     * @function
     * @param {string} str The textual representation of the Long
     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
     * @returns {!Long} The corresponding Long value
     */
    Long.fromString = fromString;

    /**
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
     * @returns {!Long}
     * @inner
     */
    function fromValue(val) {
        if (val /* is compatible */ instanceof Long)
            return val;
        if (typeof val === 'number')
            return fromNumber(val);
        if (typeof val === 'string')
            return fromString(val);
        // Throws for non-objects, converts non-instanceof Long:
        return fromBits(val.low, val.high, val.unsigned);
    }

    /**
     * Converts the specified value to a Long.
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
     * @returns {!Long}
     */
    Long.fromValue = fromValue;

    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
    // no runtime penalty for these.

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_16_DBL = 1 << 16;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_24_DBL = 1 << 24;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

    /**
     * @type {!Long}
     * @const
     * @inner
     */
    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

    /**
     * @type {!Long}
     * @inner
     */
    var ZERO = fromInt(0);

    /**
     * Signed zero.
     * @type {!Long}
     */
    Long.ZERO = ZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var UZERO = fromInt(0, true);

    /**
     * Unsigned zero.
     * @type {!Long}
     */
    Long.UZERO = UZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var ONE = fromInt(1);

    /**
     * Signed one.
     * @type {!Long}
     */
    Long.ONE = ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var UONE = fromInt(1, true);

    /**
     * Unsigned one.
     * @type {!Long}
     */
    Long.UONE = UONE;

    /**
     * @type {!Long}
     * @inner
     */
    var NEG_ONE = fromInt(-1);

    /**
     * Signed negative one.
     * @type {!Long}
     */
    Long.NEG_ONE = NEG_ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);

    /**
     * Maximum signed value.
     * @type {!Long}
     */
    Long.MAX_VALUE = MAX_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);

    /**
     * Maximum unsigned value.
     * @type {!Long}
     */
    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MIN_VALUE = fromBits(0, 0x80000000|0, false);

    /**
     * Minimum signed value.
     * @type {!Long}
     */
    Long.MIN_VALUE = MIN_VALUE;

    /**
     * @alias Long.prototype
     * @inner
     */
    var LongPrototype = Long.prototype;

    /**
     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
     * @returns {number}
     */
    LongPrototype.toInt = function toInt() {
        return this.unsigned ? this.low >>> 0 : this.low;
    };

    /**
     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
     * @returns {number}
     */
    LongPrototype.toNumber = function toNumber() {
        if (this.unsigned)
            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };

    /**
     * Converts the Long to a string written in the specified radix.
     * @param {number=} radix Radix (2-36), defaults to 10
     * @returns {string}
     * @override
     * @throws {RangeError} If `radix` is out of range
     */
    LongPrototype.toString = function toString(radix) {
        radix = radix || 10;
        if (radix < 2 || 36 < radix)
            throw RangeError('radix');
        if (this.isZero())
            return '0';
        if (this.isNegative()) { // Unsigned Longs are never negative
            if (this.eq(MIN_VALUE)) {
                // We need to change the Long value before it can be negated, so we remove
                // the bottom-most digit in this base and then recurse to do the rest.
                var radixLong = fromNumber(radix),
                    div = this.div(radixLong),
                    rem1 = div.mul(radixLong).sub(this);
                return div.toString(radix) + rem1.toInt().toString(radix);
            } else
                return '-' + this.neg().toString(radix);
        }

        // Do several (6) digits each time through the loop, so as to
        // minimize the calls to the very expensive emulated div.
        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
            rem = this;
        var result = '';
        while (true) {
            var remDiv = rem.div(radixToPower),
                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
                digits = intval.toString(radix);
            rem = remDiv;
            if (rem.isZero())
                return digits + result;
            else {
                while (digits.length < 6)
                    digits = '0' + digits;
                result = '' + digits + result;
            }
        }
    };

    /**
     * Gets the high 32 bits as a signed integer.
     * @returns {number} Signed high bits
     */
    LongPrototype.getHighBits = function getHighBits() {
        return this.high;
    };

    /**
     * Gets the high 32 bits as an unsigned integer.
     * @returns {number} Unsigned high bits
     */
    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
        return this.high >>> 0;
    };

    /**
     * Gets the low 32 bits as a signed integer.
     * @returns {number} Signed low bits
     */
    LongPrototype.getLowBits = function getLowBits() {
        return this.low;
    };

    /**
     * Gets the low 32 bits as an unsigned integer.
     * @returns {number} Unsigned low bits
     */
    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
        return this.low >>> 0;
    };

    /**
     * Gets the number of bits needed to represent the absolute value of this Long.
     * @returns {number}
     */
    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
        if (this.isNegative()) // Unsigned Longs are never negative
            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
        var val = this.high != 0 ? this.high : this.low;
        for (var bit = 31; bit > 0; bit--)
            if ((val & (1 << bit)) != 0)
                break;
        return this.high != 0 ? bit + 33 : bit + 1;
    };

    /**
     * Tests if this Long's value equals zero.
     * @returns {boolean}
     */
    LongPrototype.isZero = function isZero() {
        return this.high === 0 && this.low === 0;
    };

    /**
     * Tests if this Long's value is negative.
     * @returns {boolean}
     */
    LongPrototype.isNegative = function isNegative() {
        return !this.unsigned && this.high < 0;
    };

    /**
     * Tests if this Long's value is positive.
     * @returns {boolean}
     */
    LongPrototype.isPositive = function isPositive() {
        return this.unsigned || this.high >= 0;
    };

    /**
     * Tests if this Long's value is odd.
     * @returns {boolean}
     */
    LongPrototype.isOdd = function isOdd() {
        return (this.low & 1) === 1;
    };

    /**
     * Tests if this Long's value is even.
     * @returns {boolean}
     */
    LongPrototype.isEven = function isEven() {
        return (this.low & 1) === 0;
    };

    /**
     * Tests if this Long's value equals the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.equals = function equals(other) {
        if (!isLong(other))
            other = fromValue(other);
        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
            return false;
        return this.high === other.high && this.low === other.low;
    };

    /**
     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.eq = LongPrototype.equals;

    /**
     * Tests if this Long's value differs from the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.notEquals = function notEquals(other) {
        return !this.eq(/* validates */ other);
    };

    /**
     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.neq = LongPrototype.notEquals;

    /**
     * Tests if this Long's value is less than the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThan = function lessThan(other) {
        return this.comp(/* validates */ other) < 0;
    };

    /**
     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lt = LongPrototype.lessThan;

    /**
     * Tests if this Long's value is less than or equal the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
        return this.comp(/* validates */ other) <= 0;
    };

    /**
     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lte = LongPrototype.lessThanOrEqual;

    /**
     * Tests if this Long's value is greater than the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThan = function greaterThan(other) {
        return this.comp(/* validates */ other) > 0;
    };

    /**
     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gt = LongPrototype.greaterThan;

    /**
     * Tests if this Long's value is greater than or equal the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
        return this.comp(/* validates */ other) >= 0;
    };

    /**
     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gte = LongPrototype.greaterThanOrEqual;

    /**
     * Compares this Long's value with the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.compare = function compare(other) {
        if (!isLong(other))
            other = fromValue(other);
        if (this.eq(other))
            return 0;
        var thisNeg = this.isNegative(),
            otherNeg = other.isNegative();
        if (thisNeg && !otherNeg)
            return -1;
        if (!thisNeg && otherNeg)
            return 1;
        // At this point the sign bits are the same
        if (!this.unsigned)
            return this.sub(other).isNegative() ? -1 : 1;
        // Both are positive if at least one is unsigned
        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
    };

    /**
     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.comp = LongPrototype.compare;

    /**
     * Negates this Long's value.
     * @returns {!Long} Negated Long
     */
    LongPrototype.negate = function negate() {
        if (!this.unsigned && this.eq(MIN_VALUE))
            return MIN_VALUE;
        return this.not().add(ONE);
    };

    /**
     * Negates this Long's value. This is an alias of {@link Long#negate}.
     * @function
     * @returns {!Long} Negated Long
     */
    LongPrototype.neg = LongPrototype.negate;

    /**
     * Returns the sum of this and the specified Long.
     * @param {!Long|number|string} addend Addend
     * @returns {!Long} Sum
     */
    LongPrototype.add = function add(addend) {
        if (!isLong(addend))
            addend = fromValue(addend);

        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

        var a48 = this.high >>> 16;
        var a32 = this.high & 0xFFFF;
        var a16 = this.low >>> 16;
        var a00 = this.low & 0xFFFF;

        var b48 = addend.high >>> 16;
        var b32 = addend.high & 0xFFFF;
        var b16 = addend.low >>> 16;
        var b00 = addend.low & 0xFFFF;

        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 + b00;
        c16 += c00 >>> 16;
        c00 &= 0xFFFF;
        c16 += a16 + b16;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c32 += a32 + b32;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c48 += a48 + b48;
        c48 &= 0xFFFF;
        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the difference of this and the specified Long.
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.subtract = function subtract(subtrahend) {
        if (!isLong(subtrahend))
            subtrahend = fromValue(subtrahend);
        return this.add(subtrahend.neg());
    };

    /**
     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
     * @function
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.sub = LongPrototype.subtract;

    /**
     * Returns the product of this and the specified Long.
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.multiply = function multiply(multiplier) {
        if (this.isZero())
            return ZERO;
        if (!isLong(multiplier))
            multiplier = fromValue(multiplier);
        if (multiplier.isZero())
            return ZERO;
        if (this.eq(MIN_VALUE))
            return multiplier.isOdd() ? MIN_VALUE : ZERO;
        if (multiplier.eq(MIN_VALUE))
            return this.isOdd() ? MIN_VALUE : ZERO;

        if (this.isNegative()) {
            if (multiplier.isNegative())
                return this.neg().mul(multiplier.neg());
            else
                return this.neg().mul(multiplier).neg();
        } else if (multiplier.isNegative())
            return this.mul(multiplier.neg()).neg();

        // If both longs are small, use float multiplication
        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
        // We can skip products that would overflow.

        var a48 = this.high >>> 16;
        var a32 = this.high & 0xFFFF;
        var a16 = this.low >>> 16;
        var a00 = this.low & 0xFFFF;

        var b48 = multiplier.high >>> 16;
        var b32 = multiplier.high & 0xFFFF;
        var b16 = multiplier.low >>> 16;
        var b00 = multiplier.low & 0xFFFF;

        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 * b00;
        c16 += c00 >>> 16;
        c00 &= 0xFFFF;
        c16 += a16 * b00;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c16 += a00 * b16;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c32 += a32 * b00;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c32 += a16 * b16;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c32 += a00 * b32;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
        c48 &= 0xFFFF;
        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
     * @function
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.mul = LongPrototype.multiply;

    /**
     * Returns this Long divided by the specified. The result is signed if this Long is signed or
     *  unsigned if this Long is unsigned.
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.divide = function divide(divisor) {
        if (!isLong(divisor))
            divisor = fromValue(divisor);
        if (divisor.isZero())
            throw Error('division by zero');
        if (this.isZero())
            return this.unsigned ? UZERO : ZERO;
        var approx, rem, res;
        if (!this.unsigned) {
            // This section is only relevant for signed longs and is derived from the
            // closure library as a whole.
            if (this.eq(MIN_VALUE)) {
                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
                else if (divisor.eq(MIN_VALUE))
                    return ONE;
                else {
                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
                    var halfThis = this.shr(1);
                    approx = halfThis.div(divisor).shl(1);
                    if (approx.eq(ZERO)) {
                        return divisor.isNegative() ? ONE : NEG_ONE;
                    } else {
                        rem = this.sub(divisor.mul(approx));
                        res = approx.add(rem.div(divisor));
                        return res;
                    }
                }
            } else if (divisor.eq(MIN_VALUE))
                return this.unsigned ? UZERO : ZERO;
            if (this.isNegative()) {
                if (divisor.isNegative())
                    return this.neg().div(divisor.neg());
                return this.neg().div(divisor).neg();
            } else if (divisor.isNegative())
                return this.div(divisor.neg()).neg();
            res = ZERO;
        } else {
            // The algorithm below has not been made for unsigned longs. It's therefore
            // required to take special care of the MSB prior to running it.
            if (!divisor.unsigned)
                divisor = divisor.toUnsigned();
            if (divisor.gt(this))
                return UZERO;
            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
                return UONE;
            res = UZERO;
        }

        // Repeat the following until the remainder is less than other:  find a
        // floating-point that approximates remainder / other *from below*, add this
        // into the result, and subtract it from the remainder.  It is critical that
        // the approximate value is less than or equal to the real value so that the
        // remainder never becomes negative.
        rem = this;
        while (rem.gte(divisor)) {
            // Approximate the result of division. This may be a little greater or
            // smaller than the actual value.
            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

            // We will tweak the approximate result by changing it in the 48-th digit or
            // the smallest non-fractional digit, whichever is larger.
            var log2 = Math.ceil(Math.log(approx) / Math.LN2),
                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

            // Decrease the approximation until it is smaller than the remainder.  Note
            // that if it is too large, the product overflows and is negative.
                approxRes = fromNumber(approx),
                approxRem = approxRes.mul(divisor);
            while (approxRem.isNegative() || approxRem.gt(rem)) {
                approx -= delta;
                approxRes = fromNumber(approx, this.unsigned);
                approxRem = approxRes.mul(divisor);
            }

            // We know the answer can't be zero... and actually, zero would cause
            // infinite recursion since we would make no progress.
            if (approxRes.isZero())
                approxRes = ONE;

            res = res.add(approxRes);
            rem = rem.sub(approxRem);
        }
        return res;
    };

    /**
     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.div = LongPrototype.divide;

    /**
     * Returns this Long modulo the specified.
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.modulo = function modulo(divisor) {
        if (!isLong(divisor))
            divisor = fromValue(divisor);
        return this.sub(this.div(divisor).mul(divisor));
    };

    /**
     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.mod = LongPrototype.modulo;

    /**
     * Returns the bitwise NOT of this Long.
     * @returns {!Long}
     */
    LongPrototype.not = function not() {
        return fromBits(~this.low, ~this.high, this.unsigned);
    };

    /**
     * Returns the bitwise AND of this Long and the specified.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.and = function and(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };

    /**
     * Returns the bitwise OR of this Long and the specified.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.or = function or(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };

    /**
     * Returns the bitwise XOR of this Long and the given one.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.xor = function xor(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftLeft = function shiftLeft(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        if ((numBits &= 63) === 0)
            return this;
        else if (numBits < 32)
            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
        else
            return fromBits(0, this.low << (numBits - 32), this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shl = LongPrototype.shiftLeft;

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRight = function shiftRight(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        if ((numBits &= 63) === 0)
            return this;
        else if (numBits < 32)
            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
        else
            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
    };

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shr = LongPrototype.shiftRight;

    /**
     * Returns this Long with bits logically shifted to the right by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        numBits &= 63;
        if (numBits === 0)
            return this;
        else {
            var high = this.high;
            if (numBits < 32) {
                var low = this.low;
                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);
            } else if (numBits === 32)
                return fromBits(high, 0, this.unsigned);
            else
                return fromBits(high >>> (numBits - 32), 0, this.unsigned);
        }
    };

    /**
     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shru = LongPrototype.shiftRightUnsigned;

    /**
     * Converts this Long to signed.
     * @returns {!Long} Signed long
     */
    LongPrototype.toSigned = function toSigned() {
        if (!this.unsigned)
            return this;
        return fromBits(this.low, this.high, false);
    };

    /**
     * Converts this Long to unsigned.
     * @returns {!Long} Unsigned long
     */
    LongPrototype.toUnsigned = function toUnsigned() {
        if (this.unsigned)
            return this;
        return fromBits(this.low, this.high, true);
    };

    /**
     * Converts this Long to its byte representation.
     * @param {boolean=} le Whether little or big endian, defaults to big endian
     * @returns {!Array.<number>} Byte representation
     */
    LongPrototype.toBytes = function(le) {
        return le ? this.toBytesLE() : this.toBytesBE();
    }

    /**
     * Converts this Long to its little endian byte representation.
     * @returns {!Array.<number>} Little endian byte representation
     */
    LongPrototype.toBytesLE = function() {
        var hi = this.high,
            lo = this.low;
        return [
             lo         & 0xff,
            (lo >>>  8) & 0xff,
            (lo >>> 16) & 0xff,
            (lo >>> 24) & 0xff,
             hi         & 0xff,
            (hi >>>  8) & 0xff,
            (hi >>> 16) & 0xff,
            (hi >>> 24) & 0xff
        ];
    }

    /**
     * Converts this Long to its big endian byte representation.
     * @returns {!Array.<number>} Big endian byte representation
     */
    LongPrototype.toBytesBE = function() {
        var hi = this.high,
            lo = this.low;
        return [
            (hi >>> 24) & 0xff,
            (hi >>> 16) & 0xff,
            (hi >>>  8) & 0xff,
             hi         & 0xff,
            (lo >>> 24) & 0xff,
            (lo >>> 16) & 0xff,
            (lo >>>  8) & 0xff,
             lo         & 0xff
        ];
    }

    return Long;
});

},{}],151:[function(require,module,exports){
/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /\u0130|\u0049|\u0049\u0307/g,
    map: {
      '\u0130': '\u0069',
      '\u0049': '\u0131',
      '\u0049\u0307': '\u0069'
    }
  },
  az: {
    regexp: /[\u0130]/g,
    map: {
      '\u0130': '\u0069',
      '\u0049': '\u0131',
      '\u0049\u0307': '\u0069'
    }
  },
  lt: {
    regexp: /[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g,
    map: {
      '\u0049': '\u0069\u0307',
      '\u004A': '\u006A\u0307',
      '\u012E': '\u012F\u0307',
      '\u00CC': '\u0069\u0307\u0300',
      '\u00CD': '\u0069\u0307\u0301',
      '\u0128': '\u0069\u0307\u0303'
    }
  }
}

/**
 * Lowercase a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale]

  str = str == null ? '' : String(str)

  if (lang) {
    str = str.replace(lang.regexp, function (m) { return lang.map[m] })
  }

  return str.toLowerCase()
}

},{}],152:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

}).call(this,require("buffer").Buffer)
},{"buffer":55,"hash-base":153,"inherits":146}],153:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":146,"safe-buffer":195,"stream":204}],154:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":23,"brorand":24}],155:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],156:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],157:[function(require,module,exports){
var lowerCase = require('lower-case')

var NON_WORD_REGEXP = require('./vendor/non-word-regexp')
var CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')
var CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')

/**
 * Sentence case a string.
 *
 * @param  {string} str
 * @param  {string} locale
 * @param  {string} replacement
 * @return {string}
 */
module.exports = function (str, locale, replacement) {
  if (str == null) {
    return ''
  }

  replacement = typeof replacement !== 'string' ? ' ' : replacement

  function replace (match, index, value) {
    if (index === 0 || index === (value.length - match.length)) {
      return ''
    }

    return replacement
  }

  str = String(str)
    // Support camel case ("camelCase" -> "camel Case").
    .replace(CAMEL_CASE_REGEXP, '$1 $2')
    // Support odd camel case ("CAMELCase" -> "CAMEL Case").
    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')
    // Remove all non-word characters and replace with a single space.
    .replace(NON_WORD_REGEXP, replace)

  // Lower case the entire string.
  return lowerCase(str, locale)
}

},{"./vendor/camel-case-regexp":158,"./vendor/camel-case-upper-regexp":159,"./vendor/non-word-regexp":160,"lower-case":151}],158:[function(require,module,exports){
module.exports = /([a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])/g

},{}],159:[function(require,module,exports){
module.exports = /([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A][a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])/g

},{}],160:[function(require,module,exports){
module.exports = /[^A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g

},{}],161:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],162:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":163,"asn1.js":1}],163:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":1}],164:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\n\r?DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\n\r?\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":28,"buffer":55,"evp_bytestokey":125}],165:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":161,"./asn1":162,"./fixProc":164,"browserify-aes":28,"buffer":55,"pbkdf2":167}],166:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":173}],167:[function(require,module,exports){

exports.pbkdf2 = require('./lib/async')

exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":168,"./lib/sync":171}],168:[function(require,module,exports){
(function (process,global){
var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}
function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]
  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }
  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) {
      return browserPbkdf2(password, salt, iterations, keylen, algo)
    } else {
      return sync(password, salt, iterations, keylen, digest)
    }
  }), callback)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":169,"./precondition":170,"./sync":171,"_process":173,"safe-buffer":195}],169:[function(require,module,exports){
(function (process){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

}).call(this,require('_process'))
},{"_process":173}],170:[function(require,module,exports){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs
module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

},{}],171:[function(require,module,exports){
var md5 = require('create-hash/md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var Buffer = require('safe-buffer').Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":169,"./precondition":170,"create-hash/md5":63,"ripemd160":194,"safe-buffer":195,"sha.js":197}],172:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))
},{"_process":173}],173:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],174:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":176,"./publicEncrypt":177}],175:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":55,"create-hash":61}],176:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":175,"./withPublic":178,"./xor":179,"bn.js":23,"browserify-rsa":45,"buffer":55,"create-hash":61,"parse-asn1":165}],177:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":175,"./withPublic":178,"./xor":179,"bn.js":23,"browserify-rsa":45,"buffer":55,"create-hash":61,"parse-asn1":165,"randombytes":180}],178:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":23,"buffer":55}],179:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],180:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":173,"safe-buffer":195}],181:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":182}],182:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":184,"./_stream_writable":186,"core-util-is":59,"inherits":146,"process-nextick-args":172}],183:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":185,"core-util-is":59,"inherits":146}],184:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":182,"./internal/streams/BufferList":187,"./internal/streams/destroy":188,"./internal/streams/stream":189,"_process":173,"core-util-is":59,"events":124,"inherits":146,"isarray":148,"process-nextick-args":172,"safe-buffer":195,"string_decoder/":205,"util":25}],185:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":182,"core-util-is":59,"inherits":146}],186:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":182,"./internal/streams/destroy":188,"./internal/streams/stream":189,"_process":173,"core-util-is":59,"inherits":146,"process-nextick-args":172,"safe-buffer":195,"util-deprecate":207}],187:[function(require,module,exports){
'use strict';

/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();
},{"safe-buffer":195}],188:[function(require,module,exports){
'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":172}],189:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":124}],190:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":191}],191:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":182,"./lib/_stream_passthrough.js":183,"./lib/_stream_readable.js":184,"./lib/_stream_transform.js":185,"./lib/_stream_writable.js":186}],192:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":191}],193:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":186}],194:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var m = new Array(16)
  for (var i = 0; i < 16; ++i) m[i] = this._block.readInt32LE(i * 4)

  var al = this._a
  var bl = this._b
  var cl = this._c
  var dl = this._d
  var el = this._e

  // Mj = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
  // K = 0x00000000
  // Sj = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8
  al = fn1(al, bl, cl, dl, el, m[0], 0x00000000, 11); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[1], 0x00000000, 14); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[2], 0x00000000, 15); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[3], 0x00000000, 12); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[4], 0x00000000, 5); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[5], 0x00000000, 8); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[6], 0x00000000, 7); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[7], 0x00000000, 9); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[8], 0x00000000, 11); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[9], 0x00000000, 13); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[10], 0x00000000, 14); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[11], 0x00000000, 15); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[12], 0x00000000, 6); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[13], 0x00000000, 7); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[14], 0x00000000, 9); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[15], 0x00000000, 8); cl = rotl(cl, 10)

  // Mj = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8
  // K = 0x5a827999
  // Sj = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12
  el = fn2(el, al, bl, cl, dl, m[7], 0x5a827999, 7); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[4], 0x5a827999, 6); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[13], 0x5a827999, 8); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[1], 0x5a827999, 13); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[10], 0x5a827999, 11); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[6], 0x5a827999, 9); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[15], 0x5a827999, 7); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[3], 0x5a827999, 15); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[12], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[0], 0x5a827999, 12); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[9], 0x5a827999, 15); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[5], 0x5a827999, 9); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[2], 0x5a827999, 11); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[14], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[11], 0x5a827999, 13); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[8], 0x5a827999, 12); bl = rotl(bl, 10)

  // Mj = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12
  // K = 0x6ed9eba1
  // Sj = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5
  dl = fn3(dl, el, al, bl, cl, m[3], 0x6ed9eba1, 11); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[10], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[14], 0x6ed9eba1, 6); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[4], 0x6ed9eba1, 7); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[9], 0x6ed9eba1, 14); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[15], 0x6ed9eba1, 9); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[8], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[1], 0x6ed9eba1, 15); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[2], 0x6ed9eba1, 14); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[7], 0x6ed9eba1, 8); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[0], 0x6ed9eba1, 13); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[6], 0x6ed9eba1, 6); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[13], 0x6ed9eba1, 5); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[11], 0x6ed9eba1, 12); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[5], 0x6ed9eba1, 7); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[12], 0x6ed9eba1, 5); al = rotl(al, 10)

  // Mj = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2
  // K = 0x8f1bbcdc
  // Sj = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12
  cl = fn4(cl, dl, el, al, bl, m[1], 0x8f1bbcdc, 11); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[9], 0x8f1bbcdc, 12); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[11], 0x8f1bbcdc, 14); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[10], 0x8f1bbcdc, 15); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[0], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[8], 0x8f1bbcdc, 15); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[12], 0x8f1bbcdc, 9); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[4], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[13], 0x8f1bbcdc, 9); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[3], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[7], 0x8f1bbcdc, 5); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[15], 0x8f1bbcdc, 6); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[14], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[5], 0x8f1bbcdc, 6); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[6], 0x8f1bbcdc, 5); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[2], 0x8f1bbcdc, 12); el = rotl(el, 10)

  // Mj = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
  // K = 0xa953fd4e
  // Sj = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
  bl = fn5(bl, cl, dl, el, al, m[4], 0xa953fd4e, 9); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[0], 0xa953fd4e, 15); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[5], 0xa953fd4e, 5); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[9], 0xa953fd4e, 11); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[7], 0xa953fd4e, 6); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[12], 0xa953fd4e, 8); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[2], 0xa953fd4e, 13); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[10], 0xa953fd4e, 12); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[14], 0xa953fd4e, 5); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[1], 0xa953fd4e, 12); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[3], 0xa953fd4e, 13); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[8], 0xa953fd4e, 14); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[11], 0xa953fd4e, 11); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[6], 0xa953fd4e, 8); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[15], 0xa953fd4e, 5); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[13], 0xa953fd4e, 6); dl = rotl(dl, 10)

  var ar = this._a
  var br = this._b
  var cr = this._c
  var dr = this._d
  var er = this._e

  // M'j = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12
  // K' = 0x50a28be6
  // S'j = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6
  ar = fn5(ar, br, cr, dr, er, m[5], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[14], 0x50a28be6, 9); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[7], 0x50a28be6, 9); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[0], 0x50a28be6, 11); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[9], 0x50a28be6, 13); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[2], 0x50a28be6, 15); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[11], 0x50a28be6, 15); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[4], 0x50a28be6, 5); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[13], 0x50a28be6, 7); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[6], 0x50a28be6, 7); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[15], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[8], 0x50a28be6, 11); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[1], 0x50a28be6, 14); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[10], 0x50a28be6, 14); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[3], 0x50a28be6, 12); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[12], 0x50a28be6, 6); cr = rotl(cr, 10)

  // M'j = 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2
  // K' = 0x5c4dd124
  // S'j = 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11
  er = fn4(er, ar, br, cr, dr, m[6], 0x5c4dd124, 9); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[11], 0x5c4dd124, 13); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[3], 0x5c4dd124, 15); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[7], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[0], 0x5c4dd124, 12); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[13], 0x5c4dd124, 8); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[5], 0x5c4dd124, 9); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[10], 0x5c4dd124, 11); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[14], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[15], 0x5c4dd124, 7); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[8], 0x5c4dd124, 12); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[12], 0x5c4dd124, 7); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[4], 0x5c4dd124, 6); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[9], 0x5c4dd124, 15); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[1], 0x5c4dd124, 13); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[2], 0x5c4dd124, 11); br = rotl(br, 10)

  // M'j = 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13
  // K' = 0x6d703ef3
  // S'j = 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5
  dr = fn3(dr, er, ar, br, cr, m[15], 0x6d703ef3, 9); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[5], 0x6d703ef3, 7); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[1], 0x6d703ef3, 15); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[3], 0x6d703ef3, 11); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[7], 0x6d703ef3, 8); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[14], 0x6d703ef3, 6); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[6], 0x6d703ef3, 6); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[9], 0x6d703ef3, 14); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[11], 0x6d703ef3, 12); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[8], 0x6d703ef3, 13); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[12], 0x6d703ef3, 5); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[2], 0x6d703ef3, 14); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[10], 0x6d703ef3, 13); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[0], 0x6d703ef3, 13); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[4], 0x6d703ef3, 7); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[13], 0x6d703ef3, 5); ar = rotl(ar, 10)

  // M'j = 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14
  // K' = 0x7a6d76e9
  // S'j = 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8
  cr = fn2(cr, dr, er, ar, br, m[8], 0x7a6d76e9, 15); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[6], 0x7a6d76e9, 5); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[4], 0x7a6d76e9, 8); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[1], 0x7a6d76e9, 11); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[3], 0x7a6d76e9, 14); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[11], 0x7a6d76e9, 14); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[15], 0x7a6d76e9, 6); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[0], 0x7a6d76e9, 14); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[5], 0x7a6d76e9, 6); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[12], 0x7a6d76e9, 9); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[2], 0x7a6d76e9, 12); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[13], 0x7a6d76e9, 9); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[9], 0x7a6d76e9, 12); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[7], 0x7a6d76e9, 5); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[10], 0x7a6d76e9, 15); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[14], 0x7a6d76e9, 8); er = rotl(er, 10)

  // M'j = 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
  // K' = 0x00000000
  // S'j = 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
  br = fn1(br, cr, dr, er, ar, m[12], 0x00000000, 8); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[15], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[10], 0x00000000, 12); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[4], 0x00000000, 9); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[1], 0x00000000, 12); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[5], 0x00000000, 5); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[8], 0x00000000, 14); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[7], 0x00000000, 6); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[6], 0x00000000, 8); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[2], 0x00000000, 13); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[13], 0x00000000, 6); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[14], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[0], 0x00000000, 15); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[3], 0x00000000, 13); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[9], 0x00000000, 11); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[11], 0x00000000, 11); dr = rotl(dr, 10)

  // change state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

}).call(this,require("buffer").Buffer)
},{"buffer":55,"hash-base":130,"inherits":146}],195:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":55}],196:[function(require,module,exports){
(function (Buffer){
// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this,require("buffer").Buffer)
},{"buffer":55}],197:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":198,"./sha1":199,"./sha224":200,"./sha256":201,"./sha384":202,"./sha512":203}],198:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

}).call(this,require("buffer").Buffer)
},{"./hash":196,"buffer":55,"inherits":146}],199:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

}).call(this,require("buffer").Buffer)
},{"./hash":196,"buffer":55,"inherits":146}],200:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this,require("buffer").Buffer)
},{"./hash":196,"./sha256":201,"buffer":55,"inherits":146}],201:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this,require("buffer").Buffer)
},{"./hash":196,"buffer":55,"inherits":146}],202:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this,require("buffer").Buffer)
},{"./hash":196,"./sha512":203,"buffer":55,"inherits":146}],203:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this,require("buffer").Buffer)
},{"./hash":196,"buffer":55,"inherits":146}],204:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":124,"inherits":146,"readable-stream/duplex.js":181,"readable-stream/passthrough.js":190,"readable-stream/readable.js":191,"readable-stream/transform.js":192,"readable-stream/writable.js":193}],205:[function(require,module,exports){
'use strict';

var Buffer = require('safe-buffer').Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":195}],206:[function(require,module,exports){
/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /[\u0069]/g,
    map: {
      '\u0069': '\u0130'
    }
  },
  az: {
    regexp: /[\u0069]/g,
    map: {
      '\u0069': '\u0130'
    }
  },
  lt: {
    regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,
    map: {
      '\u0069\u0307': '\u0049',
      '\u006A\u0307': '\u004A',
      '\u012F\u0307': '\u012E',
      '\u0069\u0307\u0300': '\u00CC',
      '\u0069\u0307\u0301': '\u00CD',
      '\u0069\u0307\u0303': '\u0128'
    }
  }
}

/**
 * Upper case a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale]

  str = str == null ? '' : String(str)

  if (lang) {
    str = str.replace(lang.regexp, function (m) { return lang.map[m] })
  }

  return str.toUpperCase()
}

},{}],207:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],208:[function(require,module,exports){
arguments[4][146][0].apply(exports,arguments)
},{"dup":146}],209:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],210:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":209,"_process":173,"inherits":208}],211:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":145}],212:[function(require,module,exports){
(function(self) {
  'use strict';

  if (self.fetch) {
    return
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob()
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ]

    var isDataView = function(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj)
    }

    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift()
        return {done: value === undefined, value: value}
      }
    }

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      }
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1])
      }, this)
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var oldValue = this.map[name]
    this.map[name] = oldValue ? oldValue+','+value : value
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    name = normalizeName(name)
    return this.has(name) ? this.map[name] : null
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value)
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this)
      }
    }
  }

  Headers.prototype.keys = function() {
    var items = []
    this.forEach(function(value, name) { items.push(name) })
    return iteratorFor(items)
  }

  Headers.prototype.values = function() {
    var items = []
    this.forEach(function(value) { items.push(value) })
    return iteratorFor(items)
  }

  Headers.prototype.entries = function() {
    var items = []
    this.forEach(function(value, name) { items.push([name, value]) })
    return iteratorFor(items)
  }

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsArrayBuffer(blob)
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsText(blob)
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf)
    var chars = new Array(view.length)

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i])
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength)
      view.set(new Uint8Array(buf))
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false

    this._initBody = function(body) {
      this._bodyInit = body
      if (!body) {
        this._bodyText = ''
      } else if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString()
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer)
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer])
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body)
      } else {
        throw new Error('unsupported BodyInit type')
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8')
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type)
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
        }
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      }
    }

    this.text = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body && input._bodyInit != null) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = String(input)
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this, { body: this._bodyInit })
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers()
    rawHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':')
      var key = parts.shift().trim()
      if (key) {
        var value = parts.join(':').trim()
        headers.append(key, value)
      }
    })
    return headers
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this.type = 'default'
    this.status = 'status' in options ? options.status : 200
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = 'statusText' in options ? options.statusText : 'OK'
    this.headers = new Headers(options.headers)
    this.url = options.url || ''
    this._initBody(bodyInit)
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers
  self.Request = Request
  self.Response = Response

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init)
      var xhr = new XMLHttpRequest()

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
        var body = 'response' in xhr ? xhr.response : xhr.responseText
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})(typeof self !== 'undefined' ? self : this);

},{}],213:[function(require,module,exports){
const Structs = require('./structs')

module.exports = AbiCache
 
function AbiCache(network, config) {
  const cache = {}

  function abiAsync(code, force = false) {
    if(force == false && cache[code] != null) {
      return Promise.resolve(cache[code])
    }
    return network.getCode(code).then(({abi}) => {
      const schema = abiToFcSchema(abi)
      const structs = Structs(config, schema)
      return cache[code] = Object.assign({abi, schema}, structs)
    })
  }

  function abi(code) {
    const c = cache[code]
    if(c == null) {
      throw new Error(`Abi '${code}' is not cached, call abiAsync('${code}')`)
    }
    return c
  }

  return {
    abiAsync,
    abi
  }
}


function abiToFcSchema(abi) {
  // customTypes
  // For FcBuffer
  const abiSchema = {}

  // convert abi types to Fcbuffer schema
  if(abi.types) {
    abi.types.forEach(e => {
      abiSchema[e.new_type_name] = e.type
    })
  }

  if(abi.structs) {
    abi.structs.forEach(e => {
      const {base, fields} = e
      abiSchema[e.name] = {base, fields}
      if(base === '') {
        delete abiSchema[e.name].base
      }
    })
  }

  return abiSchema
}

},{"./structs":216}],214:[function(require,module,exports){
const assert = require('assert')
const {Long} = require('bytebuffer')

module.exports = {
  ULong,
  isName,
  encodeName, // encode human readable name to uint64 (number string)
  decodeName, // decode from uint64 to human readable
  encodeNameHex: name => Long.fromString(encodeName(name), true).toString(16),
  decodeNameHex: (hex, littleEndian = true) =>
    decodeName(Long.fromString(hex, true, 16).toString(), littleEndian),
  UDecimalString,
  UDecimalPad,
  UDecimalImply,
  UDecimalUnimply
}

function ULong(value, unsigned = true, radix = 10) {
  if(typeof value === 'number') {
    // Some JSON libs use numbers for values under 53 bits or strings for larger.
    // Accomidate but double-check it..
    if(value > Number.MAX_SAFE_INTEGER)
      throw new TypeError('value parameter overflow')

    value = Long.fromString(String(value), unsigned, radix)
  } else if(typeof value === 'string') {
    value = Long.fromString(value, unsigned, radix)
  } else if(!Long.isLong(value)) {
    throw new TypeError('value parameter is a requied Long, Number or String')
  }
  return value
}

function isName(str, err) {
  try {
    encodeName(str)
    return true
  } catch(error) {
    if(err) {
      err(error)
    }
    return false
  }
}

const charmap = '.12345abcdefghijklmnopqrstuvwxyz'
const charidx = ch => {
  const idx = charmap.indexOf(ch)
  if(idx === -1)
    throw new TypeError(`Invalid character: '${ch}'`)

  return idx
}

/** Original Name encode and decode logic is in github.com/eosio/eos  native.hpp */

/**
  Encode a name (a base32 string) to a number.

  For performance reasons, the blockchain uses the numerical encoding of strings
  for very common types like account names.

  @see types.hpp string_to_name

  @arg {string} name - A string to encode, up to 12 characters long.
  @return {string<uint64>} - compressed string (from name arg).  A string is
    always used because a number could exceed JavaScript's 52 bit limit.
*/
function encodeName(name, littleEndian = true) {
  if(typeof name !== 'string')
    throw new TypeError('name parameter is a required string')

  if(name.length > 13)
    throw new TypeError('A name can be up to 13 characters long')

  let bitstr = ''
  for(let i = 0; i <= 12; i++) { // process all 64 bits (even if name is short)
    const c = i < name.length ? charidx(name[i]) : 0
    const bitlen = i < 12 ? 5 : 4
    let bits = Number(c).toString(2)
    if(bits.length > bitlen) {
      throw new TypeError('Invalid name ' + name)
    }
    bits = '0'.repeat(bitlen - bits.length) + bits
    bitstr += bits
  }

  const value = Long.fromString(bitstr, true, 2)

  // convert to LITTLE_ENDIAN
  let leHex = ''
  const bytes = littleEndian ? value.toBytesLE() : value.toBytesBE()
  for(const b of bytes) {
    const n = Number(b).toString(16)
    leHex += (n.length === 1 ? '0' : '') + n
  }

  const ulName = Long.fromString(leHex, true, 16).toString()

  // console.log('encodeName', name, value.toString(), ulName.toString(), JSON.stringify(bitstr.split(/(.....)/).slice(1)))

  return ulName.toString()
}

/**
  @arg {Long|String|number} value uint64
  @return {string}
*/
function decodeName(value, littleEndian = true) {
  value = ULong(value)

  // convert from LITTLE_ENDIAN
  let beHex = ''
  const bytes = littleEndian ? value.toBytesLE() : value.toBytesBE()
  for(const b of bytes) {
    const n = Number(b).toString(16)
    beHex += (n.length === 1 ? '0' : '') + n
  }
  beHex += '0'.repeat(16 - beHex.length)

  const fiveBits = Long.fromNumber(0x1f, true)
  const fourBits = Long.fromNumber(0x0f, true)
  const beValue = Long.fromString(beHex, true, 16)

  let str = ''
  let tmp = beValue

  for(let i = 0; i <= 12; i++) {
    const c = charmap[tmp.and(i === 0 ? fourBits : fiveBits)]
    str = c + str
    tmp = tmp.shiftRight(i === 0 ? 4 : 5)
  }
  str = str.replace(/\.+$/, '') // remove trailing dots (all of them)

  // console.log('decodeName', str, beValue.toString(), value.toString(), JSON.stringify(beValue.toString(2).split(/(.....)/).slice(1)))

  return str
}

/**
  Normalize and validate decimal string (potentially large values).  Should
  avoid internationalization issues if possible but will be safe and
  throw an error for an invalid number.

  Normalization removes extra zeros or decimal.
  
  @return {string} value
*/
function UDecimalString(value) {
  assert(value != null, 'value is required')
  value = value === 'object' && value.toString ? value.toString() : String(value)


  if(value[0] === '.') {
    value = `0${value}`
  }

  const part = value.split('.')
  assert(part.length <= 2, `invalid decimal ${value}`)
  assert(/^\d+(,?\d)*\d*$/.test(part[0]), `invalid decimal ${value}`)

  if(part.length === 2) {
    assert(/^\d*$/.test(part[1]), `invalid decimal ${value}`)
    part[1] = part[1].replace(/0+$/, '')// remove suffixing zeros
    if(part[1] === '') {
      part.pop()
    }
  }

  part[0] = part[0].replace(/^0*/, '')// remove leading zeros
  if(part[0] === '') {
    part[0] = '0'
  }
  return part.join('.')
}

/**
  Ensure a fixed number of decimal places.  Safe for large numbers.

  @see ./format.test.js
  @example UDecimalString(10, 3) === '10.300'

  @arg {number|string|object.toString} value
  @arg {number} precision - number of decimal places
  @return {string} decimal part is added and zero padded to match precision
*/
function UDecimalPad(num, precision) {
  const value = UDecimalString(num)
  assert.equal('number', typeof precision, 'precision')

  const part = value.split('.')

  if(precision === 0 && part.length === 1) {
    return part[0]
  }

  if(part.length === 1) {
    return `${part[0]}.${'0'.repeat(precision)}`
  } else {
    const pad = precision - part[1].length
    assert(pad >= 0, `decimal '${value}' exceeds precision ${precision}`)
    return `${part[0]}.${part[1]}${'0'.repeat(pad)}`
  }
}

/** Ensures proper trailing zeros then removes decimal place. */
function UDecimalImply(value, precision) {
  return UDecimalPad(value, precision).replace('.', '')
}

/**
  Put the decimal place back in its position and return the normalized number
  string (with any unnecessary zeros or an unnecessary decimal removed).

  @arg {string|number|value.toString} value 10000
  @arg {number} precision 4
  @return {number} 1.0000
*/
function UDecimalUnimply(value, precision) {
  assert(value != null, 'value is required')
  value = value === 'object' && value.toString ? value.toString() : String(value)
  assert(/^\d+$/.test(value), `invalid whole number ${value}`)

  // Ensure minimum length
  const pad = precision - value.length
  if(pad > 0) {
    value = `${'0'.repeat(pad)}${value}`
  }

  const dotIdx = value.length - precision
  value = `${value.slice(0, dotIdx)}.${value.slice(dotIdx)}`
  return UDecimalString(value) // Normalize
}

},{"assert":15,"bytebuffer":56}],215:[function(require,module,exports){
const ecc = require('eosjs-ecc')
const json = require('eosjs-json')
const Fcbuffer = require('fcbuffer')
const api = require('eosjs-api')

const Structs = require('./structs')
const AbiCache = require('./abi-cache')
const writeApiGen = require('./write-api')
const assert = require('assert')

const Eos = {}

module.exports = Eos

Eos.modules = {
  json,
  ecc,
  api,
  Fcbuffer
}

// Eos.Mainnet = config => ..

Eos.Testnet = config => {
  const Network = api.Testnet
  const network = Network(Object.assign({}, {apiLog: consoleObjCallbackLog}, config))
  const eosConfig = Object.assign({}, {transactionLog: consoleObjCallbackLog}, config)
  return createEos(eosConfig, Network, network)
}

function createEos(config, Network, network) {
  const abiCache = AbiCache(network, config)
  config = Object.assign({}, config, {network, abiCache})

  if(!config.chainId) {
    config.chainId = '00'.repeat(32)
  }

  const eos = mergeWriteFunctions(config, Network)

  if(!config.signProvider) {
    config.signProvider = defaultSignProvider(eos, config)
  }

  return eos
}

function consoleObjCallbackLog(error, result, name) {
  if(error) {
    if(name) {
      console.error(name, 'error')
    }
    console.error(error);
  } else {
    if(name) {
      console.log(name, 'reply:')
    }
    console.log(JSON.stringify(result, null, 4))
  }
}

/**
  Merge in write functions (operations).  Tested against existing methods for
  name conflicts.

  @arg {object} config.network - read-only api calls
  @arg {object} Network - api[Network] read-only api calls
  @return {object} - read and write method calls (create and sign transactions)
  @throw {TypeError} if a funciton name conflicts
*/
function mergeWriteFunctions(config, Network) {
  assert(config.network, 'network instance required')

  const {network} = config
  const {structs, types} = Structs(config)
  const merge = Object.assign({}, {fc: {structs, types}})

  throwOnDuplicate(merge, network, 'Conflicting methods in Eos and Network Api')
  Object.assign(merge, network)

  const writeApi = writeApiGen(Network, network, structs, config)
  throwOnDuplicate(merge, writeApi, 'Conflicting methods in Eos and Transaction Api')
  Object.assign(merge, writeApi)

  return merge
}

function throwOnDuplicate(o1, o2, msg) {
  for(const key in o1) {
    if(o2[key]) {
      throw new TypeError(msg + ': ' + key)
    }
  }
}

const defaultSignProvider = (eos, config) => ({sign, buf, transaction}) => {
  let keyProvider = config.keyProvider
  if(typeof keyProvider === 'function') {
    keyProvider = keyProvider({transaction})
  }
  if(keyProvider) {
    return Promise.resolve(keyProvider).then(keys => {
      if(!Array.isArray(keys)) {
        keys = [keys]
      }

      if(!keys.length) {
        throw new Error('missing private key(s), check your keyProvider')
      }

      // Public to private key map -> maps server's required public keys
      // back to signing keys.
      const keyMap = keys.reduce((map, wif) => {
        map[ecc.privateToPublic(wif)] = wif
        return map
      }, {})

      return eos.getRequiredKeys(transaction, Object.keys(keyMap))
      .then(({required_keys}) => {
        if(!required_keys.length) {
          throw new Error('missing required keys ')
        }
        const sigs = []
        for(const key of required_keys) {
          sigs.push(sign(buf, keyMap[key]))
        }
        return sigs
      })
    })
  }
  throw new TypeError('This transaction requires a config.keyProvider for signing')
}

},{"./abi-cache":213,"./structs":216,"./write-api":217,"assert":15,"eosjs-api":100,"eosjs-ecc":111,"eosjs-json":120,"fcbuffer":127}],216:[function(require,module,exports){
(function (Buffer){
const {PublicKey} = require('eosjs-ecc')
const json = require('eosjs-json')
const Fcbuffer = require('fcbuffer')
const ByteBuffer = require('bytebuffer')
const assert = require('assert')
const binaryen = require('binaryen')

const {isName, encodeName, decodeName,
  UDecimalPad, UDecimalImply, UDecimalUnimply} = require('./format')

/** Configures Fcbuffer for EOS specific structs and types. */
module.exports = (config = {}, extendedSchema) => {

  const structLookup = (name, code) => {
    if(code === 'eos') {
      return structs[name]
    }
    const abi = config.abiCache.abi(code)
    return abi.structs[name]
  }

  // If eosd does not have an ABI setup for a certain message.type, it will throw
  // an error: `Invalid cast from object_type to string` .. forceMessageDataHex
  // may be used to until native ABI is added or fixed.
  const forceMessageDataHex = config.forceMessageDataHex != null ?
    config.forceMessageDataHex : false

  const override = Object.assign({},
    authorityOverride,
    abiOverride,
    wasmCodeOverride,
    messageDataOverride(structLookup, forceMessageDataHex),
    config.override
  )

  const eosTypes = {
    name: ()=> [Name],
    public_key: () => [PublicKeyType],
    asset_symbol: () => [AssetSymbol],
    asset: () => [Asset], // must come after AssetSymbol
  }

  const customTypes = Object.assign({}, eosTypes, config.customTypes)
  config = Object.assign({override}, {customTypes}, config)

  const schema = Object.assign({}, json.schema, extendedSchema)
  const {structs, types, errors} = Fcbuffer(schema, config)
  if(errors.length !== 0) {
    throw new Error(JSON.stringify(errors, null, 4))
  }

  return {structs, types}
}

/**
  Name eos::types native.hpp
*/
const Name = (validation) => {
  return {
    fromByteBuffer (b) {
      const n = decodeName(b.readUint64(), false) // b is already in littleEndian
      // if(validation.debug) {
      //   console.error(`${n}`, '(Name.fromByteBuffer)')
      // }
      return n
    },

    appendByteBuffer (b, value) {
      // if(validation.debug) {
      //   console.error(`${value}`, (Name.appendByteBuffer))
      // }
      b.writeUint64(encodeName(value, false)) // b is already in littleEndian
    },

    fromObject (value) {
      return value
    },

    toObject (value) {
      if (validation.defaults && value == null) {
        return ''
      }
      return value
    }
  }
}

const PublicKeyType = (validation) => {
  return {
    fromByteBuffer (b) {
      const bcopy = b.copy(b.offset, b.offset + 33)
      b.skip(33)
      const pubbuf = Buffer.from(bcopy.toBinary(), 'binary')
      return PublicKey.fromBuffer(pubbuf).toString()
    },

    appendByteBuffer (b, value) {
      // if(validation.debug) {
      //   console.error(`${value}`, 'PublicKeyType.appendByteBuffer')
      // }
      const buf = PublicKey.fromStringOrThrow(value).toBuffer()
      b.append(buf.toString('binary'), 'binary')
    },

    fromObject (value) {
      return value
    },

    toObject (value) {
      if (validation.defaults && value == null) {
        return 'EOS6MRy..'
      }
      return value
    }
  }
}

const AssetSymbol = (validation) => {
  function valid(value) {
    if(typeof value !== 'string') {
      throw new TypeError(`Asset symbol should be a string`)
    }
    if(value.length > 7) {
      throw new TypeError(`Asset symbol is 7 characters or less`)
    }
  }

  const prefix = '\u0004'

  return {
    fromByteBuffer (b) {
      const bcopy = b.copy(b.offset, b.offset + 7)
      b.skip(7)

      // const precision = bcopy.readUint8()
      // console.log('precision', precision)

      const bin = bcopy.toBinary()
      if(bin.slice(0, 1) !== prefix) {
        throw new TypeError(`Asset precision does not match`)
      }
      let symbol = ''
      for(code of bin.slice(1))  {
        if(code == '\0') {
          break
        }
        symbol += code
      }
      return symbol
    },

    appendByteBuffer (b, value) {
      valid(value)
      value += '\0'.repeat(7 - value.length)
      b.append(prefix + value)
    },

    fromObject (value) {
      valid(value)
      return value
    },

    toObject (value) {
      if (validation.defaults && value == null) {
        return 'SYMBOL'
      }
      valid(value)
      return value
    }
  }
}

const Asset = (validation, baseTypes, customTypes) => {
  const amountType = baseTypes.int64(validation)
  const symbolType = customTypes.asset_symbol(validation)

  const symbolCache = symbol => ({precision: 4})
  const precision = symbol => symbolCache(symbol).precision

  function toAssetString(value) {
    if(typeof value === 'string') {
      const [amount, symbol] = value.split(' ')
      return `${UDecimalPad(amount, precision(symbol))} ${symbol}`
    }
    if(typeof value === 'object') {
      const {amount, symbol} = value
      return `${UDecimalUnimply(amount, precision(symbol))} ${symbol}`
    }
    return value
  }

  return {
    fromByteBuffer (b) {
      const amount = amountType.fromByteBuffer(b)
      const symbol = symbolType.fromByteBuffer(b)
      return `${UDecimalUnimply(amount, precision(symbol))} ${symbol}`
    },

    appendByteBuffer (b, value) {
      const [amount, symbol] = value.split(' ')
      amountType.appendByteBuffer(b, UDecimalImply(amount, precision(symbol)))
      symbolType.appendByteBuffer(b, symbol)
    },

    fromObject (value) {
      return toAssetString(value)
    },

    toObject (value) {
      if (validation.defaults && value == null) {
        return '0.0001 SYMBOL'
      }
      return toAssetString(value)
    }
  }
}

const authorityOverride = ({
  /** shorthand `EOS6MRyAj..` */
  'authority.fromObject': (value) => {
    if(PublicKey.fromString(value)) {
      return {
        threshold: 1,
        keys: [{key: value, weight: 1}],
        accounts: []
      }
    }
    if(typeof value === 'string') {
      const [account, permission = 'active'] = value.split('@')
      return {
        threshold: 1,
        keys: [],
        accounts: [{
          permission: {
            account,
            permission
          },
          weight: 1
        }]
      }
    }
  }
})

const abiOverride = ({
  'abi.fromObject': (value) => {
    if(typeof value === 'string') {
      return JSON.parse(value)
    }
    if(Buffer.isBuffer(value)) {
      return JSON.parse(value.toString())
    }
  }
})

const wasmCodeOverride = ({
  'setcode.code.fromObject': ({object, result}) => {
    try {
      const code = object.code.toString()
      if(/^\s*\(module/.test(code)) {
        console.log('Assembling WASM...')
        const wasm = Buffer.from(binaryen.parseText(code).emitBinary())
        result.code = wasm
      } else {
        result.code = object.code
      }
    } catch(error) {
      console.error(error, object.code)
    }
  }
})

/**
  Nested serialized structure.  Nested struct may be in HEX or object format.
*/
const messageDataOverride = (structLookup, forceMessageDataHex) => ({
  'message.data.fromByteBuffer': ({fields, object, b, config}) => {
    const ser = (object.type || '') == '' ? fields.data : structLookup(object.type, object.code)
    if(ser) {
      b.readVarint32() // length prefix (usefull if object.type is unknown)
      object.data = ser.fromByteBuffer(b, config)
    } else {
      // console.log(`Unknown Message.type ${object.type}`)
      const lenPrefix = b.readVarint32()
      const bCopy = b.copy(b.offset, b.offset + lenPrefix)
      b.skip(lenPrefix)
      object.data = Buffer.from(bCopy.toBinary(), 'binary')
    }
  },

  'message.data.appendByteBuffer': ({fields, object, b}) => {
    const ser = (object.type || '') == '' ? fields.data : structLookup(object.type, object.code)
    if(ser) {
      const b2 = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN)
      ser.appendByteBuffer(b2, object.data)
      b.writeVarint32(b2.offset)
      b.append(b2.copy(0, b2.offset), 'binary')
    } else {
      // console.log(`Unknown Message.type ${object.type}`)
      const data = typeof object.data === 'string' ? new Buffer(object.data, 'hex') : object.data
      if(!Buffer.isBuffer(data)) {
        throw new TypeError('Expecting hex string or buffer in message.data')
      }
      b.writeVarint32(data.length)
      b.append(data.toString('binary'), 'binary')
    }
  },

  'message.data.fromObject': ({fields, object, result}) => {
    const {data, type} = object
    const ser = (type || '') == '' ? fields.data : structLookup(type, object.code)
    if(ser) {
      if(typeof data === 'object') {
        result.data = ser.fromObject(data) // resolve shorthand
        return
      } else if(typeof data === 'string') {
        const buf = new Buffer(data, 'hex')
        result.data = Fcbuffer.fromBuffer(ser, buf)
      } else {
        throw new TypeError('Expecting hex string or object in message.data')
      }
    } else {
      // console.log(`Unknown Message.type ${object.type}`)
      result.data = data
    }
  },

  'message.data.toObject': ({fields, object, result, config}) => {
    const {data, type} = object || {}
    const ser = (type || '') == '' ? fields.data : structLookup(type, object.code)
    if(!ser) {
      // Types without an ABI will accept hex
      // const b2 = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN)
      // const buf = !Buffer.isBuffer(data) ? new Buffer(data, 'hex') : data
      // b2.writeVarint32(buf.length)
      // b2.append(buf)
      // result.data = b2.copy(0, b2.offset).toString('hex')
      result.data = Buffer.isBuffer(data) ? data.toString('hex') : data
      return
    }

    if(forceMessageDataHex) {
      const b2 = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN)
      if(data) {
        ser.appendByteBuffer(b2, data)
      }
      result.data = b2.copy(0, b2.offset).toString('hex')

      // console.log('result.data', result.data)
      return
    }

    // Serializable JSON
    result.data = ser.toObject(data, config)
  }
})

}).call(this,require("buffer").Buffer)
},{"./format":214,"assert":15,"binaryen":22,"buffer":55,"bytebuffer":56,"eosjs-ecc":111,"eosjs-json":120,"fcbuffer":127}],217:[function(require,module,exports){
(function (Buffer){
const assert = require('assert')
const ecc = require('eosjs-ecc')
const Fcbuffer = require('fcbuffer')
const createHash = require('create-hash')
const {processArgs} = require('eosjs-api')
const Structs = require('./structs')

module.exports = writeApiGen

const {sign} = ecc

function writeApiGen(Network, network, structs, config) {

  if(typeof config.chainId !== 'string') {
    throw new TypeError('config.chainId is required')
  }

  const writeApi = WriteApi(Network, network, config, structs.transaction)
  const reserveFunctions = new Set(['transaction', 'contract'])
  const merge = {}

  // sends transactions, also a message collecting wrapper functions 
  merge.transaction = writeApi.genTransaction(structs, merge)

  // Immediate send operations automatically calls merge.transaction
  for(let type in Network.schema) {
    if(!/^[a-z]/.test(type)) {
      // Only lower case structs will work in a transaction message
      // See eosjs-json generated.json
      continue
    }
    if(type === 'transaction') {
      continue // https://github.com/EOSIO/eos/issues/730
    }
    if(reserveFunctions.has(type)) {
      throw new TypeError('Conflicting Api function: ' + type)
    }

    const struct = structs[type]
    const definition = Network.schema[type]
    merge[type] = writeApi.genMethod(type, definition, struct, merge.transaction)
  }

  /**
    Immedate send contract actions.

    @example eos.contract('mycontract', [options], [callback])
    @example eos.contract('mycontract').then(mycontract => mycontract.action(...))
  */
  merge.contract = (...args) => {
    const {params, options, returnPromise, callback} =
      processArgs(args, ['code'], 'contract', optionsFormatter)

    const {code} = params

    // sends transactions via its own transaction function
    writeApi.genContractActions(code)
      .then(r => {callback(null, r)})
      .catch(r => {callback(r)})

    return returnPromise
  }

  return merge
}

function WriteApi(Network, network, config, Transaction) {
  /**
    @arg {array} [args.contracts]
    @arg {callback|object} args.transaction tr => {tr.transfer .. }
    @arg {object} [args.options]
    @arg {function} [args.callback]
  */
  const genTransaction = (structs, merge) => (...args) => {
    let contracts, options, callback

    if(args[args.length - 1] == null) {
      // callback may be undefined
      args = args.slice(0, args.length - 1)
    }

    const isContractArray = isStringArray(args[0])
    if(isContractArray) {
      contracts = args[0]
      args = args.slice(1)
    } else if(typeof args[0] === 'string') {
      contracts = [args[0]]
      args = args.slice(1)
    }

    if(args.length > 1 && typeof args[args.length - 1] === 'function') {
      callback = args.pop()
    }

    if(args.length > 1 && typeof args[args.length - 1] === 'object') {
      options = args.pop()
    }

    assert.equal(args.length, 1, 'transaction args: [contracts], transaction<callback|object>, [options], [callback]')
    const arg = args[0]

    if(contracts) {
      assert(!callback, 'callback with contracts are not supported')
      assert.equal('function', typeof arg, 'provide function callback following contracts array parameter')

      const contractPromises = []
      for(const code of contracts) {
        // setup wrapper functions to collect contract api calls
        contractPromises.push(genContractActions(code, merge.transaction))
      }

      return Promise.all(contractPromises).then(actions => {
        const merges = {}
        actions.forEach((m, i) => {merges[contracts[i]] = m})
        const param = isContractArray ? merges : merges[contracts[0]]
        // collect and invoke api calls
        return trMessageCollector(arg, options, param)
      })
    }

    if(typeof arg === 'function') {
      return trMessageCollector(arg, options, merge)
    }

    if(typeof arg === 'object') {
      return transaction(arg, options, callback)
    }

    throw new Error('first transaction argument unrecognized', arg)
  }

  function genContractActions(code, transaction = null) {
    return config.abiCache.abiAsync(code).then(cache => {
      assert(Array.isArray(cache.abi.actions) && cache.abi.actions.length, 'No actions')

      const contractMerge = {}
      contractMerge.transaction = transaction ? transaction :
        genTransaction(cache.structs, contractMerge)

      cache.abi.actions.forEach(({action_name, type}) => {
        const definition = cache.schema[type]
        const struct = cache.structs[type]
        contractMerge[action_name] = genMethod(type, definition, struct, contractMerge.transaction, code)
      })

      return contractMerge
    })
  }

  function genMethod(type, definition, struct, transactionArg, code = 'eos') {
    return function (...args) {
      if (args.length === 0) {
        console.error(usage(type, definition, Network))
        return
      }

      // Special case like multi-message transactions where this lib needs
      // to be sure the broadcast is off.
      const optionOverrides = {}
      const lastArg = args[args.length - 1]
      if(typeof lastArg === 'object' && typeof lastArg.__optionOverrides === 'object') {
        // pop() fixes the args.length
        Object.assign(optionOverrides, args.pop().__optionOverrides)
      }

      const {params, options, returnPromise, callback} =
        processArgs(args, Object.keys(definition.fields), type, optionsFormatter)

      // internal options (ex: multi-message transaction)
      Object.assign(options, optionOverrides)

      if(optionOverrides.noCallback && !returnPromise) {
        throw new Error('Callback during a transaction are not supported')
      }

      const addDefaultScope = options.scope == null
      const addDefaultAuths = options.authorization == null

      if(typeof options.scope === 'string') {
        options.scope = [options.scope]
      }

      const authorization = []
      if(options.authorization) {
        if(typeof options.authorization === 'string') {
          options.authorization = [options.authorization]
        }
        options.authorization.forEach(auth => {
          if(typeof auth === 'string') {
            const [account, permission = 'active'] = auth.split('@')
            authorization.push({account, permission})
          } else if(typeof auth === 'object') {
            authorization.push(auth)
          }
        })
        assert.equal(authorization.length, options.authorization.length,
          'invalid authorization in: ' + JSON.stringify(options.authorization))
      }

      const tr = {
        scope: options.scope || [],
        messages: [{
          code,
          type,
          data: params,
          authorization
        }]
      }

      if(addDefaultScope || addDefaultAuths) {
        const fields = Object.keys(definition.fields)
        const f1 = fields[0]

        if(definition.fields[f1] === 'account_name') {
          if(addDefaultScope) {
            // Make a simple guess based on ABI conventions.
            tr.scope.push(params[f1])
          }
          if(addDefaultAuths) {
            // Default authorization (since user did not provide one)
            tr.messages[0].authorization.push({
              account: params[f1],
              permission: 'active'
            })
          }
        }

        if(addDefaultScope) {
          if(fields.length > 1 && !/newaccount/.test(type)) {
            const f2 = fields[1]
            if(definition.fields[f2] === 'account_name') {
              tr.scope.push(params[f2])
            }
          }
        }
      }

      tr.scope = tr.scope.sort()
      tr.messages[0].authorization.sort((a, b) =>
        a.account > b.account ? 1 : a.account < b.account ? -1 : 0)

      // multi-message transaction support
      if(!optionOverrides.messageOnly) {
        transactionArg(tr, options, callback)
      } else {
        callback(null, tr)
      }

      return returnPromise
    }
  }

  /**
    Wrap merge.functions adding optionOverrides that will suspend
    transaction broadcast.
  */
  function trMessageCollector(trCallback, options = {}, merges) {
    assert.equal('function', typeof trCallback, 'trCallback')
    assert.equal('object', typeof options, 'options')
    assert.equal('object', typeof merges, 'merges')
    assert(!Array.isArray(merges), 'merges should not be an array')
    assert.equal('function', typeof transaction, 'transaction')

    const scope = {}
    const messageList = []
    const messageCollector = {}

    const wrap = opFunction => (...args) => {
      // call the original function but force-disable a lot of stuff
      const ret = opFunction(...args, {
        __optionOverrides: {
          broadcast: false,
          messageOnly: true,
          noCallback: true
        }
      })      
      if(ret == null) {
        // double-check (code can change)
        throw new Error('Callbacks can not be used when creating a multi-message transaction')
      }
      messageList.push(ret)
    }

    // merges can be an object of functions (as in the main eos contract)
    // or an object of contract names with functions under those
    for(const key in merges) {
      const value = merges[key]
      if(typeof value === 'function') {
        // Native operations (eos contract for example)
        messageCollector[key] = wrap(value)

      } else if(typeof value === 'object') {
        // other contract(s) (currency contract for example)
        if(messageCollector[key] == null) {
          messageCollector[key] = {}
        }
        for(const key2 in value) {
          if(key2 === 'transaction') {
            continue
          }
          messageCollector[key][key2] = wrap(value[key2])
        }
      }
    }

    let promiseCollector
    try {
      // caller will load this up with messages
      promiseCollector = trCallback(messageCollector)
    } catch(error) {
      promiseCollector = Promise.reject(error)
    }

    return Promise.resolve(promiseCollector).then(() =>
      Promise.all(messageList).then(resolvedMessageList => {
        const scopes = new Set()
        const messages = []
        for(let m of resolvedMessageList) {
          const {scope, messages: [message]} = m
          scope.forEach(s => {scopes.add(s)})
          messages.push(message)
        }
        const trObject = {}
        trObject.scope = Array.from(scopes).sort()
        trObject.messages = messages
        return transaction(trObject, options)
      })
    )
  }

  function transaction(arg, options, callback) {
    const optionDefault = {expireInSeconds: 60, broadcast: true, sign: true}
    options = Object.assign({}/*clone*/, optionDefault, options)

    let returnPromise
    if(typeof callback !== 'function') {
      returnPromise = new Promise((resolve, reject) => {
        callback = (err, result) => {
          if(err) {
            reject(err)
          } else {
            resolve(result)
          }
        }
      })
    }

    if(typeof arg !== 'object') {
      throw new TypeError('First transaction argument should be an object or function')
    }

    if(!Array.isArray(arg.scope)) {
      throw new TypeError('Expecting scope array')
    }
    if(!Array.isArray(arg.messages)) {
      throw new TypeError('Expecting messages array')
    }

    if(config.transactionLog) {
      // wrap the callback with the logger
      const superCallback = callback
      callback = (error, tr) => {
        if(error) {
          config.transactionLog(error)
        } else {
          config.transactionLog(null, tr)
        }
        superCallback(error, tr)
      }
    }

    arg.messages.forEach(message => {
      if(!Array.isArray(message.authorization)) {
        throw new TypeError('Expecting message.authorization array', message)
      }
    })

    if(options.sign && typeof config.signProvider !== 'function') {
      throw new TypeError('Expecting config.signProvider function (disable using {sign: false})')
    }

    network.createTransaction(options.expireInSeconds, checkError(callback, rawTx => {
      rawTx.scope = arg.scope
      rawTx.messages = arg.messages
      // rawTx.read_scope = arg.read_scope || []

      // console.log('rawTx', JSON.stringify(rawTx,null,4))

      // resolve shorthand
      // const txObject = Transaction.toObject(Transaction.fromObject(rawTx))
      const txObject = Transaction.fromObject(rawTx)

      // console.log('txObject', JSON.stringify(txObject,null,4))

      // Broadcast what is signed (instead of rawTx)
      const buf = Fcbuffer.toBuffer(Transaction, txObject)
      const tr = Fcbuffer.fromBuffer(Transaction, buf)

      const transactionId  = createHash('sha256').update(buf).digest().toString('hex')

      let sigs = []
      if(options.sign){
        const chainIdBuf = new Buffer(config.chainId, 'hex')
        const signBuf = Buffer.concat([chainIdBuf, buf])
        sigs = config.signProvider({transaction: tr, buf: signBuf, sign})
        if(!Array.isArray(sigs)) {
          sigs = [sigs]
        }
      }

      // sigs can be strings or Promises
      Promise.all(sigs).then(sigs => {
        sigs = [].concat.apply([], sigs) //flatten arrays in array
        tr.signatures = sigs

        if(!options.broadcast) {
          callback(null, {
            transaction_id: transactionId,
            broadcast: false,
            transaction: tr
          })
        } else {
          network.pushTransaction(tr, error => {
            if(!error) {
              callback(null, {
                transaction_id: transactionId,
                broadcast: true,
                transaction: tr
              })
            } else {
              console.error(`[push_transaction error] '${error.message}', digest '${buf.toString('hex')}'`)
              callback(error.message)
            }
          })
        }
      }).catch(error => {
        console.error(error)
        callback(error)
      })
    }))
    return returnPromise
  }

  // return WriteApi
  return {
    genTransaction,
    genContractActions,
    genMethod
  }
}

const isStringArray = o => Array.isArray(o) && o.length > 0 &&
  o.findIndex(o => typeof o !== 'string') === -1

// Normalize the extra optional options argument
const optionsFormatter = option => {
  if(typeof option === 'object') {
    return option // {debug, broadcast, scope, etc} (scope, etc my overwrite tr below)
  }
  if(typeof option === 'boolean') {
    // broadcast argument as a true false value, back-end cli will use this shorthand
    return {broadcast: option}
  }
}

function usage (type, definition, Network) {
  const {structs} = Structs({defaults: true, network: Network})
  const struct = structs[type]

  if(struct == null) {
    throw TypeError('Unknown type: ' + type)
  }

  let usage = ''
  const out = (str = '') => {
    usage += str + '\n'
  }
  out(`${type}`)
  out()

  out(`USAGE`)
  out(`${JSON.stringify(definition, null, 4)}`)
  out()

  out(`EXAMPLE STRUCTURE`)
  out(`${JSON.stringify(struct.toObject(), null, 4)}`)

  return usage
}

const checkError = (parentErr, parrentRes) => (error, result) => {
  if (error) {
    console.log('error', error)
    parentErr(error)
  } else {
    parrentRes(result)
  }
}

}).call(this,require("buffer").Buffer)
},{"./structs":216,"assert":15,"buffer":55,"create-hash":61,"eosjs-api":100,"eosjs-ecc":111,"fcbuffer":127}]},{},[215])(215)
});