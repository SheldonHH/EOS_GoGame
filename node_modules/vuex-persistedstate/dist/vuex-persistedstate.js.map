{"version":3,"sources":["../node_modules/deepmerge/dist/es.js","../node_modules/shvl/index.js","../index.js"],"names":["isNonNullObject","value","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","optionsArgument","clone","isMergeableObject","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","keys","forEach","key","sourceIsArray","targetIsArray","options","arrayMerge","canUseSymbol","Symbol","for","all","array","Error","reduce","prev","next","deepmerge_1","get","object","path","def","undefined","split","obj","p","set","slice","pop","index","storage","getState","getItem","JSON","parse","err","filter","setState","state","setItem","stringify","reducer","paths","length","substate","shvl","subscriber","store","handler","subscribe","window","localStorage","removeItem","e","const","savedState","replaceState","merge","saved","mutation"],"mappings":"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","file":"vuex-persistedstate.js","sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, optionsArgument) {\n\tvar clone = !optionsArgument || optionsArgument.clone !== false;\n\n\treturn (clone && isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, optionsArgument)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, optionsArgument)\n\t})\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n\tvar destination = {};\n\tif (isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], optionsArgument);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar options = optionsArgument || { arrayMerge: defaultArrayMerge };\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, optionsArgument)\n\t} else if (sourceIsArray) {\n\t\tvar arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\treturn arrayMerge(target, source, optionsArgument)\n\t} else {\n\t\treturn mergeObject(target, source, optionsArgument)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, optionsArgument)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","exports.get = function (object, path, def) {\n  return (object = (path.split ? path.split('.') : path).reduce(function (obj, p) {\n    return obj && obj[p]\n  }, object)) === undefined ? def : object;\n};\n\nexports.set = function (object, path, val, obj) {\n  return ((path = path.split ? path.split('.') : path).slice(0, -1).reduce(function (obj, p) {\n    return obj[p] = obj[p] || {};\n  }, obj = object)[path.pop()] = val), object;\n};\n","import merge from 'deepmerge';\nimport shvl from 'shvl';\n\nexport default function(options, storage, key) {\n  options = options || {};\n  storage = options.storage || (window && window.localStorage);\n  key = options.key || 'vuex';\n\n  function canWriteStorage(storage) {\n    try {\n      storage.setItem('@@', 1);\n      storage.removeItem('@@');\n      return true;\n    } catch (e) {}\n\n    return false;\n  }\n\n  function getState(key, storage, value) {\n    try {\n      return (value = storage.getItem(key)) && value !== 'undefined'\n        ? JSON.parse(value)\n        : undefined;\n    } catch (err) {}\n\n    return undefined;\n  }\n\n  function filter() {\n    return true;\n  }\n\n  function setState(key, state, storage) {\n    return storage.setItem(key, JSON.stringify(state));\n  }\n\n  function reducer(state, paths) {\n    return paths.length === 0\n      ? state\n      : paths.reduce(function(substate, path) {\n          return shvl.set(substate, path, shvl.get(state, path));\n        }, {});\n  }\n\n  function subscriber(store) {\n    return function(handler) {\n      return store.subscribe(handler);\n    };\n  }\n\n  if (!canWriteStorage(storage)) {\n    throw new Error('Invalid storage instance given');\n  }\n\n  return function(store) {\n    const savedState = shvl.get(options, 'getState', getState)(key, storage);\n\n    if (typeof savedState === 'object' && savedState !== null) {\n      store.replaceState(merge(store.state, savedState, {\n        arrayMerge: function (store, saved) { return saved },\n        clone: false,\n      }));\n    }\n\n    (options.subscriber || subscriber)(store)(function(mutation, state) {\n      if ((options.filter || filter)(mutation)) {\n        (options.setState || setState)(\n          key,\n          (options.reducer || reducer)(state, options.paths || []),\n          storage\n        );\n      }\n    });\n  };\n};\n"]}